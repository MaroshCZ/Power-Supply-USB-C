
STM32G0_USBPD_Sink_1.2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000bc  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000189b0  080000c0  080000c0  000100c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000177c  08018a70  08018a70  00028a70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0801a1ec  0801a1ec  00030194  2**0
                  CONTENTS
  4 .ARM          00000008  0801a1ec  0801a1ec  0002a1ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0801a1f4  0801a1f4  00030194  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0801a1f4  0801a1f4  0002a1f4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0801a1f8  0801a1f8  0002a1f8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000194  20000000  0801a1fc  00030000  2**2
                  CONTENTS, ALLOC, LOAD, CODE
  9 .bss          0000332c  20000194  0801a390  00030194  2**2
                  ALLOC
 10 ._user_heap_stack 00001000  200034c0  0801a390  000334c0  2**0
                  ALLOC
 11 .ARM.attributes 0000002e  00000000  00000000  00030194  2**0
                  CONTENTS, READONLY
 12 .comment      000041e7  00000000  00000000  000301c2  2**0
                  CONTENTS, READONLY
 13 .iar.rtmodel  0000033c  00000000  00000000  000343a9  2**0
                  CONTENTS, READONLY
 14 .iar_vfe_header 00000024  00000000  00000000  000346e8  2**2
                  CONTENTS, READONLY
 15 .debug_info   0002dd8c  00000000  00000000  0003470c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_abbrev 00007624  00000000  00000000  00062498  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_aranges 000029a8  00000000  00000000  00069ac0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_rnglists 000020c5  00000000  00000000  0006c468  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_macro  0000c851  00000000  00000000  0006e52d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_line   0002f5bf  00000000  00000000  0007ad7e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    000e9dca  00000000  00000000  000aa33d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_frame  0000a918  00000000  00000000  00194108  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line_str 00000067  00000000  00000000  0019ea20  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000194 	.word	0x20000194
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08018a44 	.word	0x08018a44

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000198 	.word	0x20000198
 8000104:	08018a44 	.word	0x08018a44

08000108 <USBPD_CAD_Init>:
 8000108:	b5f1      	push	{r0, r4, r5, r6, r7, lr}
 800010a:	b082      	sub	sp, #8
 800010c:	0015      	movs	r5, r2
 800010e:	001e      	movs	r6, r3
 8000110:	2400      	movs	r4, #0
 8000112:	4668      	mov	r0, sp
 8000114:	7a00      	ldrb	r0, [r0, #8]
 8000116:	2803      	cmp	r0, #3
 8000118:	d301      	bcc.n	800011e <USBPD_CAD_Init+0x16>
 800011a:	2401      	movs	r4, #1
 800011c:	e01f      	b.n	800015e <USBPD_CAD_Init+0x56>
 800011e:	9100      	str	r1, [sp, #0]
 8000120:	2900      	cmp	r1, #0
 8000122:	d101      	bne.n	8000128 <USBPD_CAD_Init+0x20>
 8000124:	2402      	movs	r4, #2
 8000126:	e01a      	b.n	800015e <USBPD_CAD_Init+0x56>
 8000128:	200c      	movs	r0, #12
 800012a:	f017 ff39 	bl	8017fa0 <malloc>
 800012e:	0007      	movs	r7, r0
 8000130:	d101      	bne.n	8000136 <USBPD_CAD_Init+0x2e>
 8000132:	2403      	movs	r4, #3
 8000134:	e013      	b.n	800015e <USBPD_CAD_Init+0x56>
 8000136:	210c      	movs	r1, #12
 8000138:	f018 f8f3 	bl	8018322 <__aeabi_memclr>
 800013c:	603e      	str	r6, [r7, #0]
 800013e:	723c      	strb	r4, [r7, #8]
 8000140:	9800      	ldr	r0, [sp, #0]
 8000142:	6078      	str	r0, [r7, #4]
 8000144:	484a      	ldr	r0, [pc, #296]	; (8000270 <.text_6>)
 8000146:	4669      	mov	r1, sp
 8000148:	7a09      	ldrb	r1, [r1, #8]
 800014a:	0089      	lsls	r1, r1, #2
 800014c:	5047      	str	r7, [r0, r1]
 800014e:	9800      	ldr	r0, [sp, #0]
 8000150:	6843      	ldr	r3, [r0, #4]
 8000152:	0032      	movs	r2, r6
 8000154:	0029      	movs	r1, r5
 8000156:	4668      	mov	r0, sp
 8000158:	7a00      	ldrb	r0, [r0, #8]
 800015a:	f00a ff71 	bl	800b040 <CAD_Init>
 800015e:	0020      	movs	r0, r4
 8000160:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

08000162 <USBPD_CAD_PortEnable>:
 8000162:	2803      	cmp	r0, #3
 8000164:	d203      	bcs.n	800016e <USBPD_CAD_PortEnable+0xc>
 8000166:	4a42      	ldr	r2, [pc, #264]	; (8000270 <.text_6>)
 8000168:	0080      	lsls	r0, r0, #2
 800016a:	5810      	ldr	r0, [r2, r0]
 800016c:	7201      	strb	r1, [r0, #8]
 800016e:	4770      	bx	lr

08000170 <USBPD_CAD_Process>:
 8000170:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
 8000172:	2400      	movs	r4, #0
 8000174:	4669      	mov	r1, sp
 8000176:	700c      	strb	r4, [r1, #0]
 8000178:	9401      	str	r4, [sp, #4]
 800017a:	2500      	movs	r5, #0
 800017c:	43ed      	mvns	r5, r5
 800017e:	4f3d      	ldr	r7, [pc, #244]	; (8000274 <.text_7>)
 8000180:	483b      	ldr	r0, [pc, #236]	; (8000270 <.text_6>)
 8000182:	00a1      	lsls	r1, r4, #2
 8000184:	1846      	adds	r6, r0, r1
 8000186:	6830      	ldr	r0, [r6, #0]
 8000188:	2800      	cmp	r0, #0
 800018a:	d06c      	beq.n	8000266 <USBPD_CAD_Process+0xf6>
 800018c:	7a00      	ldrb	r0, [r0, #8]
 800018e:	2801      	cmp	r0, #1
 8000190:	d169      	bne.n	8000266 <USBPD_CAD_Process+0xf6>
 8000192:	aa01      	add	r2, sp, #4
 8000194:	4669      	mov	r1, sp
 8000196:	b2e0      	uxtb	r0, r4
 8000198:	f00b f8fa 	bl	800b390 <CAD_StateMachine>
 800019c:	42a8      	cmp	r0, r5
 800019e:	d800      	bhi.n	80001a2 <USBPD_CAD_Process+0x32>
 80001a0:	0005      	movs	r5, r0
 80001a2:	4668      	mov	r0, sp
 80001a4:	7800      	ldrb	r0, [r0, #0]
 80001a6:	2801      	cmp	r0, #1
 80001a8:	d004      	beq.n	80001b4 <USBPD_CAD_Process+0x44>
 80001aa:	2802      	cmp	r0, #2
 80001ac:	d012      	beq.n	80001d4 <USBPD_CAD_Process+0x64>
 80001ae:	2804      	cmp	r0, #4
 80001b0:	d010      	beq.n	80001d4 <USBPD_CAD_Process+0x64>
 80001b2:	e040      	b.n	8000236 <USBPD_CAD_Process+0xc6>
 80001b4:	6830      	ldr	r0, [r6, #0]
 80001b6:	6801      	ldr	r1, [r0, #0]
 80001b8:	680a      	ldr	r2, [r1, #0]
 80001ba:	4b2f      	ldr	r3, [pc, #188]	; (8000278 <.text_8>)
 80001bc:	4013      	ands	r3, r2
 80001be:	600b      	str	r3, [r1, #0]
 80001c0:	6801      	ldr	r1, [r0, #0]
 80001c2:	680a      	ldr	r2, [r1, #0]
 80001c4:	23c0      	movs	r3, #192	; 0xc0
 80001c6:	439a      	bics	r2, r3
 80001c8:	600a      	str	r2, [r1, #0]
 80001ca:	6800      	ldr	r0, [r0, #0]
 80001cc:	6801      	ldr	r1, [r0, #0]
 80001ce:	4039      	ands	r1, r7
 80001d0:	6001      	str	r1, [r0, #0]
 80001d2:	e034      	b.n	800023e <USBPD_CAD_Process+0xce>
 80001d4:	6830      	ldr	r0, [r6, #0]
 80001d6:	9901      	ldr	r1, [sp, #4]
 80001d8:	2901      	cmp	r1, #1
 80001da:	6801      	ldr	r1, [r0, #0]
 80001dc:	680a      	ldr	r2, [r1, #0]
 80001de:	d103      	bne.n	80001e8 <USBPD_CAD_Process+0x78>
 80001e0:	403a      	ands	r2, r7
 80001e2:	2380      	movs	r3, #128	; 0x80
 80001e4:	01db      	lsls	r3, r3, #7
 80001e6:	e002      	b.n	80001ee <USBPD_CAD_Process+0x7e>
 80001e8:	403a      	ands	r2, r7
 80001ea:	2380      	movs	r3, #128	; 0x80
 80001ec:	019b      	lsls	r3, r3, #6
 80001ee:	4313      	orrs	r3, r2
 80001f0:	600b      	str	r3, [r1, #0]
 80001f2:	6801      	ldr	r1, [r0, #0]
 80001f4:	680b      	ldr	r3, [r1, #0]
 80001f6:	22c0      	movs	r2, #192	; 0xc0
 80001f8:	4393      	bics	r3, r2
 80001fa:	469c      	mov	ip, r3
 80001fc:	9a01      	ldr	r2, [sp, #4]
 80001fe:	0193      	lsls	r3, r2, #6
 8000200:	22c0      	movs	r2, #192	; 0xc0
 8000202:	401a      	ands	r2, r3
 8000204:	4663      	mov	r3, ip
 8000206:	431a      	orrs	r2, r3
 8000208:	600a      	str	r2, [r1, #0]
 800020a:	6801      	ldr	r1, [r0, #0]
 800020c:	680a      	ldr	r2, [r1, #0]
 800020e:	2380      	movs	r3, #128	; 0x80
 8000210:	015b      	lsls	r3, r3, #5
 8000212:	4313      	orrs	r3, r2
 8000214:	600b      	str	r3, [r1, #0]
 8000216:	6800      	ldr	r0, [r0, #0]
 8000218:	6801      	ldr	r1, [r0, #0]
 800021a:	074a      	lsls	r2, r1, #29
 800021c:	0fd2      	lsrs	r2, r2, #31
 800021e:	d103      	bne.n	8000228 <USBPD_CAD_Process+0xb8>
 8000220:	2208      	movs	r2, #8
 8000222:	4391      	bics	r1, r2
 8000224:	6001      	str	r1, [r0, #0]
 8000226:	e002      	b.n	800022e <USBPD_CAD_Process+0xbe>
 8000228:	2208      	movs	r2, #8
 800022a:	430a      	orrs	r2, r1
 800022c:	6002      	str	r2, [r0, #0]
 800022e:	2168      	movs	r1, #104	; 0x68
 8000230:	b2e0      	uxtb	r0, r4
 8000232:	f000 f925 	bl	8000480 <USBPD_PE_Notification>
 8000236:	4668      	mov	r0, sp
 8000238:	7800      	ldrb	r0, [r0, #0]
 800023a:	2800      	cmp	r0, #0
 800023c:	d013      	beq.n	8000266 <USBPD_CAD_Process+0xf6>
 800023e:	9a01      	ldr	r2, [sp, #4]
 8000240:	4668      	mov	r0, sp
 8000242:	7801      	ldrb	r1, [r0, #0]
 8000244:	b2e0      	uxtb	r0, r4
 8000246:	6833      	ldr	r3, [r6, #0]
 8000248:	685b      	ldr	r3, [r3, #4]
 800024a:	681b      	ldr	r3, [r3, #0]
 800024c:	4798      	blx	r3
 800024e:	4668      	mov	r0, sp
 8000250:	7800      	ldrb	r0, [r0, #0]
 8000252:	2801      	cmp	r0, #1
 8000254:	d003      	beq.n	800025e <USBPD_CAD_Process+0xee>
 8000256:	4668      	mov	r0, sp
 8000258:	7800      	ldrb	r0, [r0, #0]
 800025a:	2803      	cmp	r0, #3
 800025c:	d103      	bne.n	8000266 <USBPD_CAD_Process+0xf6>
 800025e:	2169      	movs	r1, #105	; 0x69
 8000260:	b2e0      	uxtb	r0, r4
 8000262:	f000 f90d 	bl	8000480 <USBPD_PE_Notification>
 8000266:	1c64      	adds	r4, r4, #1
 8000268:	2c03      	cmp	r4, #3
 800026a:	d389      	bcc.n	8000180 <USBPD_CAD_Process+0x10>
 800026c:	0028      	movs	r0, r5
 800026e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

08000270 <.text_6>:
 8000270:	200001b0 	.word	0x200001b0

08000274 <.text_7>:
 8000274:	ffff9fff 	.word	0xffff9fff

08000278 <.text_8>:
 8000278:	ffffefff 	.word	0xffffefff

0800027c <USBPD_CAD_AssertRd>:
 800027c:	b510      	push	{r4, lr}
 800027e:	0004      	movs	r4, r0
 8000280:	f00c fd52 	bl	800cd28 <USBPDM1_DeAssertRp>
 8000284:	0020      	movs	r0, r4
 8000286:	f00c fd59 	bl	800cd3c <USBPDM1_AssertRd>
 800028a:	bd10      	pop	{r4, pc}

0800028c <USBPD_CAD_AssertRp>:
 800028c:	b510      	push	{r4, lr}
 800028e:	0004      	movs	r4, r0
 8000290:	f00c fdfa 	bl	800ce88 <USBPDM1_DeAssertRd>
 8000294:	0020      	movs	r0, r4
 8000296:	f00c fc8f 	bl	800cbb8 <USBPDM1_AssertRp>
 800029a:	bd10      	pop	{r4, pc}

0800029c <USBPD_CAD_EnterErrorRecovery>:
 800029c:	b580      	push	{r7, lr}
 800029e:	f00a ffb1 	bl	800b204 <CAD_Enter_ErrorRecovery>
 80002a2:	bd01      	pop	{r0, pc}

080002a4 <USBPD_CAD_SRC_SetRpResistor>:
 80002a4:	b510      	push	{r4, lr}
 80002a6:	2404      	movs	r4, #4
 80002a8:	f00b f816 	bl	800b2d8 <CAD_Set_ResistorRp>
 80002ac:	2800      	cmp	r0, #0
 80002ae:	d100      	bne.n	80002b2 <USBPD_CAD_SRC_SetRpResistor+0xe>
 80002b0:	2400      	movs	r4, #0
 80002b2:	0020      	movs	r0, r4
 80002b4:	bd10      	pop	{r4, pc}

080002b6 <USBPD_CAD_SetRpResistor>:
 80002b6:	b580      	push	{r7, lr}
 80002b8:	f7ff fff4 	bl	80002a4 <USBPD_CAD_SRC_SetRpResistor>
 80002bc:	bd02      	pop	{r1, pc}

080002be <USBPD_CAD_GetMemoryConsumption>:
 80002be:	2024      	movs	r0, #36	; 0x24
 80002c0:	4770      	bx	lr
	...

080002c4 <USBPD_PE_Init>:
 80002c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002c6:	000e      	movs	r6, r1
 80002c8:	0017      	movs	r7, r2
 80002ca:	001c      	movs	r4, r3
 80002cc:	6871      	ldr	r1, [r6, #4]
 80002ce:	070a      	lsls	r2, r1, #28
 80002d0:	0fd2      	lsrs	r2, r2, #31
 80002d2:	d002      	beq.n	80002da <USBPD_PE_Init+0x16>
 80002d4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80002d6:	2900      	cmp	r1, #0
 80002d8:	d002      	beq.n	80002e0 <USBPD_PE_Init+0x1c>
 80002da:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 80002dc:	2900      	cmp	r1, #0
 80002de:	d101      	bne.n	80002e4 <USBPD_PE_Init+0x20>
 80002e0:	241b      	movs	r4, #27
 80002e2:	e04a      	b.n	800037a <USBPD_PE_Init+0xb6>
 80002e4:	4669      	mov	r1, sp
 80002e6:	7008      	strb	r0, [r1, #0]
 80002e8:	4668      	mov	r0, sp
 80002ea:	7800      	ldrb	r0, [r0, #0]
 80002ec:	2803      	cmp	r0, #3
 80002ee:	d301      	bcc.n	80002f4 <USBPD_PE_Init+0x30>
 80002f0:	2417      	movs	r4, #23
 80002f2:	e042      	b.n	800037a <USBPD_PE_Init+0xb6>
 80002f4:	2096      	movs	r0, #150	; 0x96
 80002f6:	00c0      	lsls	r0, r0, #3
 80002f8:	f017 fe52 	bl	8017fa0 <malloc>
 80002fc:	0005      	movs	r5, r0
 80002fe:	d101      	bne.n	8000304 <USBPD_PE_Init+0x40>
 8000300:	2416      	movs	r4, #22
 8000302:	e03a      	b.n	800037a <USBPD_PE_Init+0xb6>
 8000304:	2196      	movs	r1, #150	; 0x96
 8000306:	00c9      	lsls	r1, r1, #3
 8000308:	f018 f80b 	bl	8018322 <__aeabi_memclr>
 800030c:	487a      	ldr	r0, [pc, #488]	; (80004f8 <.text_16>)
 800030e:	4669      	mov	r1, sp
 8000310:	7809      	ldrb	r1, [r1, #0]
 8000312:	0089      	lsls	r1, r1, #2
 8000314:	5045      	str	r5, [r0, r1]
 8000316:	602e      	str	r6, [r5, #0]
 8000318:	606f      	str	r7, [r5, #4]
 800031a:	4668      	mov	r0, sp
 800031c:	7800      	ldrb	r0, [r0, #0]
 800031e:	7428      	strb	r0, [r5, #16]
 8000320:	60ac      	str	r4, [r5, #8]
 8000322:	4876      	ldr	r0, [pc, #472]	; (80004fc <.text_17>)
 8000324:	182b      	adds	r3, r5, r0
 8000326:	4876      	ldr	r0, [pc, #472]	; (8000500 <.text_18>)
 8000328:	182a      	adds	r2, r5, r0
 800032a:	0031      	movs	r1, r6
 800032c:	4668      	mov	r0, sp
 800032e:	7800      	ldrb	r0, [r0, #0]
 8000330:	f005 f98c 	bl	800564c <USBPD_PRL_Init>
 8000334:	0004      	movs	r4, r0
 8000336:	d120      	bne.n	800037a <USBPD_PE_Init+0xb6>
 8000338:	6868      	ldr	r0, [r5, #4]
 800033a:	6801      	ldr	r1, [r0, #0]
 800033c:	2703      	movs	r7, #3
 800033e:	682a      	ldr	r2, [r5, #0]
 8000340:	6852      	ldr	r2, [r2, #4]
 8000342:	0753      	lsls	r3, r2, #29
 8000344:	0fdb      	lsrs	r3, r3, #31
 8000346:	d006      	beq.n	8000356 <USBPD_PE_Init+0x92>
 8000348:	2208      	movs	r2, #8
 800034a:	430a      	orrs	r2, r1
 800034c:	6002      	str	r2, [r0, #0]
 800034e:	6873      	ldr	r3, [r6, #4]
 8000350:	403b      	ands	r3, r7
 8000352:	2201      	movs	r2, #1
 8000354:	e005      	b.n	8000362 <USBPD_PE_Init+0x9e>
 8000356:	2208      	movs	r2, #8
 8000358:	4391      	bics	r1, r2
 800035a:	6001      	str	r1, [r0, #0]
 800035c:	6873      	ldr	r3, [r6, #4]
 800035e:	403b      	ands	r3, r7
 8000360:	2200      	movs	r2, #0
 8000362:	4611      	mov	r1, r2
 8000364:	4668      	mov	r0, sp
 8000366:	7800      	ldrb	r0, [r0, #0]
 8000368:	f005 f9ab 	bl	80056c2 <USBPD_PRL_SetHeader>
 800036c:	6870      	ldr	r0, [r6, #4]
 800036e:	4007      	ands	r7, r0
 8000370:	0039      	movs	r1, r7
 8000372:	4668      	mov	r0, sp
 8000374:	7800      	ldrb	r0, [r0, #0]
 8000376:	f005 f9e2 	bl	800573e <USBPD_PRL_CBL_SetHeaderSpecification>
 800037a:	0020      	movs	r0, r4
 800037c:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

0800037e <USBPD_PE_TimerCounter>:
 800037e:	495e      	ldr	r1, [pc, #376]	; (80004f8 <.text_16>)
 8000380:	0080      	lsls	r0, r0, #2
 8000382:	5808      	ldr	r0, [r1, r0]
 8000384:	49b4      	ldr	r1, [pc, #720]	; (8000658 <.text_20>)
 8000386:	084a      	lsrs	r2, r1, #1
 8000388:	8bc3      	ldrh	r3, [r0, #30]
 800038a:	4213      	tst	r3, r2
 800038c:	d002      	beq.n	8000394 <USBPD_PE_TimerCounter+0x16>
 800038e:	8bc3      	ldrh	r3, [r0, #30]
 8000390:	185b      	adds	r3, r3, r1
 8000392:	83c3      	strh	r3, [r0, #30]
 8000394:	8c03      	ldrh	r3, [r0, #32]
 8000396:	4213      	tst	r3, r2
 8000398:	d002      	beq.n	80003a0 <USBPD_PE_TimerCounter+0x22>
 800039a:	8c03      	ldrh	r3, [r0, #32]
 800039c:	185b      	adds	r3, r3, r1
 800039e:	8403      	strh	r3, [r0, #32]
 80003a0:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 80003a2:	4213      	tst	r3, r2
 80003a4:	d002      	beq.n	80003ac <USBPD_PE_TimerCounter+0x2e>
 80003a6:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 80003a8:	185b      	adds	r3, r3, r1
 80003aa:	84c3      	strh	r3, [r0, #38]	; 0x26
 80003ac:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 80003ae:	4213      	tst	r3, r2
 80003b0:	d002      	beq.n	80003b8 <USBPD_PE_TimerCounter+0x3a>
 80003b2:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 80003b4:	185b      	adds	r3, r3, r1
 80003b6:	8443      	strh	r3, [r0, #34]	; 0x22
 80003b8:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 80003ba:	4213      	tst	r3, r2
 80003bc:	d002      	beq.n	80003c4 <USBPD_PE_TimerCounter+0x46>
 80003be:	8c82      	ldrh	r2, [r0, #36]	; 0x24
 80003c0:	1851      	adds	r1, r2, r1
 80003c2:	8481      	strh	r1, [r0, #36]	; 0x24
 80003c4:	4770      	bx	lr

080003c6 <USBPD_PE_TimerCounteUpdate>:
 80003c6:	b570      	push	{r4, r5, r6, lr}
 80003c8:	000e      	movs	r6, r1
 80003ca:	494b      	ldr	r1, [pc, #300]	; (80004f8 <.text_16>)
 80003cc:	0080      	lsls	r0, r0, #2
 80003ce:	580c      	ldr	r4, [r1, r0]
 80003d0:	2180      	movs	r1, #128	; 0x80
 80003d2:	0209      	lsls	r1, r1, #8
 80003d4:	428e      	cmp	r6, r1
 80003d6:	da28      	bge.n	800042a <USBPD_PE_TimerCounteUpdate+0x64>
 80003d8:	1e4d      	subs	r5, r1, #1
 80003da:	8be0      	ldrh	r0, [r4, #30]
 80003dc:	4228      	tst	r0, r5
 80003de:	d004      	beq.n	80003ea <USBPD_PE_TimerCounteUpdate+0x24>
 80003e0:	0031      	movs	r1, r6
 80003e2:	8be0      	ldrh	r0, [r4, #30]
 80003e4:	f000 ffcb 	bl	800137e <PE_UpdateTimer>
 80003e8:	83e0      	strh	r0, [r4, #30]
 80003ea:	8c20      	ldrh	r0, [r4, #32]
 80003ec:	4228      	tst	r0, r5
 80003ee:	d004      	beq.n	80003fa <USBPD_PE_TimerCounteUpdate+0x34>
 80003f0:	0031      	movs	r1, r6
 80003f2:	8c20      	ldrh	r0, [r4, #32]
 80003f4:	f000 ffc3 	bl	800137e <PE_UpdateTimer>
 80003f8:	8420      	strh	r0, [r4, #32]
 80003fa:	8ce0      	ldrh	r0, [r4, #38]	; 0x26
 80003fc:	4228      	tst	r0, r5
 80003fe:	d004      	beq.n	800040a <USBPD_PE_TimerCounteUpdate+0x44>
 8000400:	0031      	movs	r1, r6
 8000402:	8ce0      	ldrh	r0, [r4, #38]	; 0x26
 8000404:	f000 ffbb 	bl	800137e <PE_UpdateTimer>
 8000408:	84e0      	strh	r0, [r4, #38]	; 0x26
 800040a:	8c60      	ldrh	r0, [r4, #34]	; 0x22
 800040c:	4228      	tst	r0, r5
 800040e:	d004      	beq.n	800041a <USBPD_PE_TimerCounteUpdate+0x54>
 8000410:	0031      	movs	r1, r6
 8000412:	8c60      	ldrh	r0, [r4, #34]	; 0x22
 8000414:	f000 ffb3 	bl	800137e <PE_UpdateTimer>
 8000418:	8460      	strh	r0, [r4, #34]	; 0x22
 800041a:	8ca0      	ldrh	r0, [r4, #36]	; 0x24
 800041c:	4228      	tst	r0, r5
 800041e:	d004      	beq.n	800042a <USBPD_PE_TimerCounteUpdate+0x64>
 8000420:	0031      	movs	r1, r6
 8000422:	8ca0      	ldrh	r0, [r4, #36]	; 0x24
 8000424:	f000 ffab 	bl	800137e <PE_UpdateTimer>
 8000428:	84a0      	strh	r0, [r4, #36]	; 0x24
 800042a:	bd70      	pop	{r4, r5, r6, pc}

0800042c <USBPD_PE_IsCableConnected>:
 800042c:	b510      	push	{r4, lr}
 800042e:	4a32      	ldr	r2, [pc, #200]	; (80004f8 <.text_16>)
 8000430:	0080      	lsls	r0, r0, #2
 8000432:	5810      	ldr	r0, [r2, r0]
 8000434:	6842      	ldr	r2, [r0, #4]
 8000436:	6813      	ldr	r3, [r2, #0]
 8000438:	4cb2      	ldr	r4, [pc, #712]	; (8000704 <.text_22>)
 800043a:	401c      	ands	r4, r3
 800043c:	0309      	lsls	r1, r1, #12
 800043e:	2380      	movs	r3, #128	; 0x80
 8000440:	015b      	lsls	r3, r3, #5
 8000442:	4019      	ands	r1, r3
 8000444:	4321      	orrs	r1, r4
 8000446:	6011      	str	r1, [r2, #0]
 8000448:	2148      	movs	r1, #72	; 0x48
 800044a:	7441      	strb	r1, [r0, #17]
 800044c:	bd10      	pop	{r4, pc}

0800044e <USBPD_PE_StateMachine_Reset>:
 800044e:	2148      	movs	r1, #72	; 0x48
 8000450:	4a29      	ldr	r2, [pc, #164]	; (80004f8 <.text_16>)
 8000452:	0080      	lsls	r0, r0, #2
 8000454:	5810      	ldr	r0, [r2, r0]
 8000456:	7441      	strb	r1, [r0, #17]
 8000458:	4770      	bx	lr

0800045a <USBPD_PE_StateMachine_Stop>:
 800045a:	b580      	push	{r7, lr}
 800045c:	f005 fc34 	bl	8005cc8 <USBPD_PRL_Stop>
 8000460:	bd01      	pop	{r0, pc}

08000462 <USBPD_PE_StateMachine_DRP>:
 8000462:	b580      	push	{r7, lr}
 8000464:	4924      	ldr	r1, [pc, #144]	; (80004f8 <.text_16>)
 8000466:	0082      	lsls	r2, r0, #2
 8000468:	5889      	ldr	r1, [r1, r2]
 800046a:	6849      	ldr	r1, [r1, #4]
 800046c:	6809      	ldr	r1, [r1, #0]
 800046e:	074a      	lsls	r2, r1, #29
 8000470:	0fd2      	lsrs	r2, r2, #31
 8000472:	d002      	beq.n	800047a <USBPD_PE_StateMachine_DRP+0x18>
 8000474:	f002 fb8a 	bl	8002b8c <USBPD_PE_StateMachine_SRC>
 8000478:	bd02      	pop	{r1, pc}
 800047a:	f001 fcd5 	bl	8001e28 <USBPD_PE_StateMachine_SNK>
 800047e:	bd02      	pop	{r1, pc}

08000480 <USBPD_PE_Notification>:
 8000480:	b57c      	push	{r2, r3, r4, r5, r6, lr}
 8000482:	0004      	movs	r4, r0
 8000484:	2803      	cmp	r0, #3
 8000486:	d211      	bcs.n	80004ac <USBPD_PE_Notification+0x2c>
 8000488:	000d      	movs	r5, r1
 800048a:	2000      	movs	r0, #0
 800048c:	9000      	str	r0, [sp, #0]
 800048e:	2300      	movs	r3, #0
 8000490:	002a      	movs	r2, r5
 8000492:	0021      	movs	r1, r4
 8000494:	2009      	movs	r0, #9
 8000496:	4eb2      	ldr	r6, [pc, #712]	; (8000760 <.text_24>)
 8000498:	6836      	ldr	r6, [r6, #0]
 800049a:	47b0      	blx	r6
 800049c:	0029      	movs	r1, r5
 800049e:	0020      	movs	r0, r4
 80004a0:	4ab0      	ldr	r2, [pc, #704]	; (8000764 <.text_25>)
 80004a2:	00a3      	lsls	r3, r4, #2
 80004a4:	58d2      	ldr	r2, [r2, r3]
 80004a6:	6892      	ldr	r2, [r2, #8]
 80004a8:	68d2      	ldr	r2, [r2, #12]
 80004aa:	4790      	blx	r2
 80004ac:	bd73      	pop	{r0, r1, r4, r5, r6, pc}

080004ae <USBPD_PE_InitVDM_Callback>:
 80004ae:	4aad      	ldr	r2, [pc, #692]	; (8000764 <.text_25>)
 80004b0:	0080      	lsls	r0, r0, #2
 80004b2:	5810      	ldr	r0, [r2, r0]
 80004b4:	60c1      	str	r1, [r0, #12]
 80004b6:	4770      	bx	lr

080004b8 <USBPD_PE_Request_HardReset>:
 80004b8:	b580      	push	{r7, lr}
 80004ba:	49aa      	ldr	r1, [pc, #680]	; (8000764 <.text_25>)
 80004bc:	0082      	lsls	r2, r0, #2
 80004be:	5889      	ldr	r1, [r1, r2]
 80004c0:	220f      	movs	r2, #15
 80004c2:	2332      	movs	r3, #50	; 0x32
 80004c4:	54ca      	strb	r2, [r1, r3]
 80004c6:	6889      	ldr	r1, [r1, #8]
 80004c8:	6a89      	ldr	r1, [r1, #40]	; 0x28
 80004ca:	4788      	blx	r1
 80004cc:	2000      	movs	r0, #0
 80004ce:	bd02      	pop	{r1, pc}

080004d0 <USBPD_PE_Request_CableReset>:
 80004d0:	b580      	push	{r7, lr}
 80004d2:	4909      	ldr	r1, [pc, #36]	; (80004f8 <.text_16>)
 80004d4:	0082      	lsls	r2, r0, #2
 80004d6:	5889      	ldr	r1, [r1, r2]
 80004d8:	684a      	ldr	r2, [r1, #4]
 80004da:	6812      	ldr	r2, [r2, #0]
 80004dc:	4ba2      	ldr	r3, [pc, #648]	; (8000768 <.text_26>)
 80004de:	4013      	ands	r3, r2
 80004e0:	4aa2      	ldr	r2, [pc, #648]	; (800076c <.text_27>)
 80004e2:	4293      	cmp	r3, r2
 80004e4:	d105      	bne.n	80004f2 <USBPD_PE_Request_CableReset+0x22>
 80004e6:	2299      	movs	r2, #153	; 0x99
 80004e8:	2332      	movs	r3, #50	; 0x32
 80004ea:	54ca      	strb	r2, [r1, r3]
 80004ec:	6889      	ldr	r1, [r1, #8]
 80004ee:	6a89      	ldr	r1, [r1, #40]	; 0x28
 80004f0:	4788      	blx	r1
 80004f2:	2010      	movs	r0, #16
 80004f4:	bd02      	pop	{r1, pc}
	...

080004f8 <.text_16>:
 80004f8:	200001bc 	.word	0x200001bc

080004fc <.text_17>:
 80004fc:	0000048e 	.word	0x0000048e

08000500 <.text_18>:
 8000500:	00000281 	.word	0x00000281

08000504 <USBPD_PE_Request_CtrlMessage>:
 8000504:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000506:	b096      	sub	sp, #88	; 0x58
 8000508:	4896      	ldr	r0, [pc, #600]	; (8000764 <.text_25>)
 800050a:	a916      	add	r1, sp, #88	; 0x58
 800050c:	7809      	ldrb	r1, [r1, #0]
 800050e:	0089      	lsls	r1, r1, #2
 8000510:	5840      	ldr	r0, [r0, r1]
 8000512:	9001      	str	r0, [sp, #4]
 8000514:	2400      	movs	r4, #0
 8000516:	a802      	add	r0, sp, #8
 8000518:	4995      	ldr	r1, [pc, #596]	; (8000770 <.text_28>)
 800051a:	224c      	movs	r2, #76	; 0x4c
 800051c:	f017 fef6 	bl	801830c <__aeabi_memcpy>
 8000520:	2303      	movs	r3, #3
 8000522:	9801      	ldr	r0, [sp, #4]
 8000524:	2132      	movs	r1, #50	; 0x32
 8000526:	5c40      	ldrb	r0, [r0, r1]
 8000528:	2800      	cmp	r0, #0
 800052a:	d105      	bne.n	8000538 <USBPD_PE_Request_CtrlMessage+0x34>
 800052c:	9801      	ldr	r0, [sp, #4]
 800052e:	6840      	ldr	r0, [r0, #4]
 8000530:	6800      	ldr	r0, [r0, #0]
 8000532:	04c1      	lsls	r1, r0, #19
 8000534:	0fc9      	lsrs	r1, r1, #31
 8000536:	d101      	bne.n	800053c <USBPD_PE_Request_CtrlMessage+0x38>
 8000538:	2403      	movs	r4, #3
 800053a:	e089      	b.n	8000650 <USBPD_PE_Request_CtrlMessage+0x14c>
 800053c:	9901      	ldr	r1, [sp, #4]
 800053e:	6809      	ldr	r1, [r1, #0]
 8000540:	684a      	ldr	r2, [r1, #4]
 8000542:	0712      	lsls	r2, r2, #28
 8000544:	0fd5      	lsrs	r5, r2, #31
 8000546:	466a      	mov	r2, sp
 8000548:	7055      	strb	r5, [r2, #1]
 800054a:	2201      	movs	r2, #1
 800054c:	0885      	lsrs	r5, r0, #2
 800054e:	4015      	ands	r5, r2
 8000550:	d103      	bne.n	800055a <USBPD_PE_Request_CtrlMessage+0x56>
 8000552:	2502      	movs	r5, #2
 8000554:	466f      	mov	r7, sp
 8000556:	703c      	strb	r4, [r7, #0]
 8000558:	e003      	b.n	8000562 <USBPD_PE_Request_CtrlMessage+0x5e>
 800055a:	2500      	movs	r5, #0
 800055c:	2604      	movs	r6, #4
 800055e:	466f      	mov	r7, sp
 8000560:	703e      	strb	r6, [r7, #0]
 8000562:	0546      	lsls	r6, r0, #21
 8000564:	0f76      	lsrs	r6, r6, #29
 8000566:	2e03      	cmp	r6, #3
 8000568:	d101      	bne.n	800056e <USBPD_PE_Request_CtrlMessage+0x6a>
 800056a:	2608      	movs	r6, #8
 800056c:	e000      	b.n	8000570 <USBPD_PE_Request_CtrlMessage+0x6c>
 800056e:	2600      	movs	r6, #0
 8000570:	4018      	ands	r0, r3
 8000572:	2802      	cmp	r0, #2
 8000574:	d101      	bne.n	800057a <USBPD_PE_Request_CtrlMessage+0x76>
 8000576:	2040      	movs	r0, #64	; 0x40
 8000578:	e000      	b.n	800057c <USBPD_PE_Request_CtrlMessage+0x78>
 800057a:	2000      	movs	r0, #0
 800057c:	787f      	ldrb	r7, [r7, #1]
 800057e:	433d      	orrs	r5, r7
 8000580:	466f      	mov	r7, sp
 8000582:	783f      	ldrb	r7, [r7, #0]
 8000584:	432f      	orrs	r7, r5
 8000586:	433e      	orrs	r6, r7
 8000588:	4330      	orrs	r0, r6
 800058a:	4003      	ands	r3, r0
 800058c:	d002      	beq.n	8000594 <USBPD_PE_Request_CtrlMessage+0x90>
 800058e:	0003      	movs	r3, r0
 8000590:	2010      	movs	r0, #16
 8000592:	4318      	orrs	r0, r3
 8000594:	2505      	movs	r5, #5
 8000596:	4228      	tst	r0, r5
 8000598:	d002      	beq.n	80005a0 <USBPD_PE_Request_CtrlMessage+0x9c>
 800059a:	0003      	movs	r3, r0
 800059c:	2020      	movs	r0, #32
 800059e:	4318      	orrs	r0, r3
 80005a0:	ab17      	add	r3, sp, #92	; 0x5c
 80005a2:	781b      	ldrb	r3, [r3, #0]
 80005a4:	005e      	lsls	r6, r3, #1
 80005a6:	18f3      	adds	r3, r6, r3
 80005a8:	9300      	str	r3, [sp, #0]
 80005aa:	ab02      	add	r3, sp, #8
 80005ac:	9e00      	ldr	r6, [sp, #0]
 80005ae:	5d9e      	ldrb	r6, [r3, r6]
 80005b0:	4030      	ands	r0, r6
 80005b2:	42b0      	cmp	r0, r6
 80005b4:	d11f      	bne.n	80005f6 <USBPD_PE_Request_CtrlMessage+0xf2>
 80005b6:	9e01      	ldr	r6, [sp, #4]
 80005b8:	2733      	movs	r7, #51	; 0x33
 80005ba:	55f4      	strb	r4, [r6, r7]
 80005bc:	9801      	ldr	r0, [sp, #4]
 80005be:	4eb2      	ldr	r6, [pc, #712]	; (8000888 <.text_30>)
 80005c0:	1980      	adds	r0, r0, r6
 80005c2:	ae17      	add	r6, sp, #92	; 0x5c
 80005c4:	7836      	ldrb	r6, [r6, #0]
 80005c6:	2e05      	cmp	r6, #5
 80005c8:	d031      	beq.n	800062e <USBPD_PE_Request_CtrlMessage+0x12a>
 80005ca:	2e0b      	cmp	r6, #11
 80005cc:	d00e      	beq.n	80005ec <USBPD_PE_Request_CtrlMessage+0xe8>
 80005ce:	2e0d      	cmp	r6, #13
 80005d0:	d028      	beq.n	8000624 <USBPD_PE_Request_CtrlMessage+0x120>
 80005d2:	2e11      	cmp	r6, #17
 80005d4:	d011      	beq.n	80005fa <USBPD_PE_Request_CtrlMessage+0xf6>
 80005d6:	2e12      	cmp	r6, #18
 80005d8:	d013      	beq.n	8000602 <USBPD_PE_Request_CtrlMessage+0xfe>
 80005da:	2e14      	cmp	r6, #20
 80005dc:	d013      	beq.n	8000606 <USBPD_PE_Request_CtrlMessage+0x102>
 80005de:	2e15      	cmp	r6, #21
 80005e0:	d017      	beq.n	8000612 <USBPD_PE_Request_CtrlMessage+0x10e>
 80005e2:	2e16      	cmp	r6, #22
 80005e4:	d00b      	beq.n	80005fe <USBPD_PE_Request_CtrlMessage+0xfa>
 80005e6:	2e18      	cmp	r6, #24
 80005e8:	d01c      	beq.n	8000624 <USBPD_PE_Request_CtrlMessage+0x120>
 80005ea:	e021      	b.n	8000630 <USBPD_PE_Request_CtrlMessage+0x12c>
 80005ec:	9901      	ldr	r1, [sp, #4]
 80005ee:	6889      	ldr	r1, [r1, #8]
 80005f0:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
 80005f2:	2900      	cmp	r1, #0
 80005f4:	d11c      	bne.n	8000630 <USBPD_PE_Request_CtrlMessage+0x12c>
 80005f6:	2402      	movs	r4, #2
 80005f8:	e02a      	b.n	8000650 <USBPD_PE_Request_CtrlMessage+0x14c>
 80005fa:	2111      	movs	r1, #17
 80005fc:	e010      	b.n	8000620 <USBPD_PE_Request_CtrlMessage+0x11c>
 80005fe:	2116      	movs	r1, #22
 8000600:	e00e      	b.n	8000620 <USBPD_PE_Request_CtrlMessage+0x11c>
 8000602:	2112      	movs	r1, #18
 8000604:	e00c      	b.n	8000620 <USBPD_PE_Request_CtrlMessage+0x11c>
 8000606:	8909      	ldrh	r1, [r1, #8]
 8000608:	0889      	lsrs	r1, r1, #2
 800060a:	4211      	tst	r1, r2
 800060c:	d110      	bne.n	8000630 <USBPD_PE_Request_CtrlMessage+0x12c>
 800060e:	2410      	movs	r4, #16
 8000610:	e01e      	b.n	8000650 <USBPD_PE_Request_CtrlMessage+0x14c>
 8000612:	8909      	ldrh	r1, [r1, #8]
 8000614:	09c9      	lsrs	r1, r1, #7
 8000616:	4211      	tst	r1, r2
 8000618:	d101      	bne.n	800061e <USBPD_PE_Request_CtrlMessage+0x11a>
 800061a:	2010      	movs	r0, #16
 800061c:	e019      	b.n	8000652 <USBPD_PE_Request_CtrlMessage+0x14e>
 800061e:	2115      	movs	r1, #21
 8000620:	7001      	strb	r1, [r0, #0]
 8000622:	e005      	b.n	8000630 <USBPD_PE_Request_CtrlMessage+0x12c>
 8000624:	a918      	add	r1, sp, #96	; 0x60
 8000626:	7809      	ldrb	r1, [r1, #0]
 8000628:	9a01      	ldr	r2, [sp, #4]
 800062a:	55d1      	strb	r1, [r2, r7]
 800062c:	e000      	b.n	8000630 <USBPD_PE_Request_CtrlMessage+0x12c>
 800062e:	7005      	strb	r5, [r0, #0]
 8000630:	9900      	ldr	r1, [sp, #0]
 8000632:	1859      	adds	r1, r3, r1
 8000634:	7849      	ldrb	r1, [r1, #1]
 8000636:	7041      	strb	r1, [r0, #1]
 8000638:	9800      	ldr	r0, [sp, #0]
 800063a:	1818      	adds	r0, r3, r0
 800063c:	7880      	ldrb	r0, [r0, #2]
 800063e:	9901      	ldr	r1, [sp, #4]
 8000640:	2232      	movs	r2, #50	; 0x32
 8000642:	5488      	strb	r0, [r1, r2]
 8000644:	a816      	add	r0, sp, #88	; 0x58
 8000646:	7800      	ldrb	r0, [r0, #0]
 8000648:	9901      	ldr	r1, [sp, #4]
 800064a:	6889      	ldr	r1, [r1, #8]
 800064c:	6a89      	ldr	r1, [r1, #40]	; 0x28
 800064e:	4788      	blx	r1
 8000650:	0020      	movs	r0, r4
 8000652:	b019      	add	sp, #100	; 0x64
 8000654:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08000658 <.text_20>:
 8000658:	0000ffff 	.word	0x0000ffff

0800065c <USBPD_PE_Request_DataMessage>:
 800065c:	b5f1      	push	{r0, r4, r5, r6, r7, lr}
 800065e:	b082      	sub	sp, #8
 8000660:	000b      	movs	r3, r1
 8000662:	0017      	movs	r7, r2
 8000664:	483f      	ldr	r0, [pc, #252]	; (8000764 <.text_25>)
 8000666:	4669      	mov	r1, sp
 8000668:	7a09      	ldrb	r1, [r1, #8]
 800066a:	0089      	lsls	r1, r1, #2
 800066c:	5841      	ldr	r1, [r0, r1]
 800066e:	2402      	movs	r4, #2
 8000670:	2032      	movs	r0, #50	; 0x32
 8000672:	5c08      	ldrb	r0, [r1, r0]
 8000674:	2800      	cmp	r0, #0
 8000676:	d105      	bne.n	8000684 <USBPD_PE_Request_DataMessage+0x28>
 8000678:	2001      	movs	r0, #1
 800067a:	684a      	ldr	r2, [r1, #4]
 800067c:	6812      	ldr	r2, [r2, #0]
 800067e:	0b12      	lsrs	r2, r2, #12
 8000680:	4002      	ands	r2, r0
 8000682:	d101      	bne.n	8000688 <USBPD_PE_Request_DataMessage+0x2c>
 8000684:	2403      	movs	r4, #3
 8000686:	e021      	b.n	80006cc <USBPD_PE_Request_DataMessage+0x70>
 8000688:	466a      	mov	r2, sp
 800068a:	7013      	strb	r3, [r2, #0]
 800068c:	2200      	movs	r2, #0
 800068e:	2533      	movs	r5, #51	; 0x33
 8000690:	554a      	strb	r2, [r1, r5]
 8000692:	000b      	movs	r3, r1
 8000694:	3332      	adds	r3, #50	; 0x32
 8000696:	4dc0      	ldr	r5, [pc, #768]	; (8000998 <.text_36>)
 8000698:	4ec0      	ldr	r6, [pc, #768]	; (800099c <.text_37>)
 800069a:	9701      	str	r7, [sp, #4]
 800069c:	466f      	mov	r7, sp
 800069e:	783f      	ldrb	r7, [r7, #0]
 80006a0:	2f01      	cmp	r7, #1
 80006a2:	d004      	beq.n	80006ae <USBPD_PE_Request_DataMessage+0x52>
 80006a4:	2f06      	cmp	r7, #6
 80006a6:	d013      	beq.n	80006d0 <USBPD_PE_Request_DataMessage+0x74>
 80006a8:	2f07      	cmp	r7, #7
 80006aa:	d01b      	beq.n	80006e4 <USBPD_PE_Request_DataMessage+0x88>
 80006ac:	e027      	b.n	80006fe <USBPD_PE_Request_DataMessage+0xa2>
 80006ae:	684d      	ldr	r5, [r1, #4]
 80006b0:	682d      	ldr	r5, [r5, #0]
 80006b2:	08ad      	lsrs	r5, r5, #2
 80006b4:	4005      	ands	r5, r0
 80006b6:	d009      	beq.n	80006cc <USBPD_PE_Request_DataMessage+0x70>
 80006b8:	4cc1      	ldr	r4, [pc, #772]	; (80009c0 <.text_39>)
 80006ba:	5508      	strb	r0, [r1, r4]
 80006bc:	2007      	movs	r0, #7
 80006be:	7018      	strb	r0, [r3, #0]
 80006c0:	2400      	movs	r4, #0
 80006c2:	4668      	mov	r0, sp
 80006c4:	7a00      	ldrb	r0, [r0, #8]
 80006c6:	6889      	ldr	r1, [r1, #8]
 80006c8:	6a89      	ldr	r1, [r1, #40]	; 0x28
 80006ca:	4788      	blx	r1
 80006cc:	0020      	movs	r0, r4
 80006ce:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80006d0:	6848      	ldr	r0, [r1, #4]
 80006d2:	6800      	ldr	r0, [r0, #0]
 80006d4:	4006      	ands	r6, r0
 80006d6:	42ae      	cmp	r6, r5
 80006d8:	d1f8      	bne.n	80006cc <USBPD_PE_Request_DataMessage+0x70>
 80006da:	9801      	ldr	r0, [sp, #4]
 80006dc:	6800      	ldr	r0, [r0, #0]
 80006de:	6288      	str	r0, [r1, #40]	; 0x28
 80006e0:	202b      	movs	r0, #43	; 0x2b
 80006e2:	e7ec      	b.n	80006be <USBPD_PE_Request_DataMessage+0x62>
 80006e4:	6848      	ldr	r0, [r1, #4]
 80006e6:	6800      	ldr	r0, [r0, #0]
 80006e8:	4006      	ands	r6, r0
 80006ea:	42ae      	cmp	r6, r5
 80006ec:	d1ee      	bne.n	80006cc <USBPD_PE_Request_DataMessage+0x70>
 80006ee:	9801      	ldr	r0, [sp, #4]
 80006f0:	6800      	ldr	r0, [r0, #0]
 80006f2:	6288      	str	r0, [r1, #40]	; 0x28
 80006f4:	205d      	movs	r0, #93	; 0x5d
 80006f6:	4cb2      	ldr	r4, [pc, #712]	; (80009c0 <.text_39>)
 80006f8:	5508      	strb	r0, [r1, r4]
 80006fa:	2062      	movs	r0, #98	; 0x62
 80006fc:	e7df      	b.n	80006be <USBPD_PE_Request_DataMessage+0x62>
 80006fe:	2410      	movs	r4, #16
 8000700:	e7e4      	b.n	80006cc <USBPD_PE_Request_DataMessage+0x70>
	...

08000704 <.text_22>:
 8000704:	ffffefff 	.word	0xffffefff

08000708 <USBPD_PE_Send_Request>:
 8000708:	b570      	push	{r4, r5, r6, lr}
 800070a:	000b      	movs	r3, r1
 800070c:	4915      	ldr	r1, [pc, #84]	; (8000764 <.text_25>)
 800070e:	0084      	lsls	r4, r0, #2
 8000710:	590d      	ldr	r5, [r1, r4]
 8000712:	2102      	movs	r1, #2
 8000714:	2432      	movs	r4, #50	; 0x32
 8000716:	5d2c      	ldrb	r4, [r5, r4]
 8000718:	2c00      	cmp	r4, #0
 800071a:	d104      	bne.n	8000726 <USBPD_PE_Send_Request+0x1e>
 800071c:	686c      	ldr	r4, [r5, #4]
 800071e:	6824      	ldr	r4, [r4, #0]
 8000720:	04e6      	lsls	r6, r4, #19
 8000722:	0ff6      	lsrs	r6, r6, #31
 8000724:	d101      	bne.n	800072a <USBPD_PE_Send_Request+0x22>
 8000726:	2103      	movs	r1, #3
 8000728:	e017      	b.n	800075a <USBPD_PE_Send_Request+0x52>
 800072a:	4ea6      	ldr	r6, [pc, #664]	; (80009c4 <.text_40>)
 800072c:	4026      	ands	r6, r4
 800072e:	24c0      	movs	r4, #192	; 0xc0
 8000730:	00a4      	lsls	r4, r4, #2
 8000732:	42a6      	cmp	r6, r4
 8000734:	d111      	bne.n	800075a <USBPD_PE_Send_Request+0x52>
 8000736:	2145      	movs	r1, #69	; 0x45
 8000738:	2432      	movs	r4, #50	; 0x32
 800073a:	5529      	strb	r1, [r5, r4]
 800073c:	61ab      	str	r3, [r5, #24]
 800073e:	6969      	ldr	r1, [r5, #20]
 8000740:	2318      	movs	r3, #24
 8000742:	4399      	bics	r1, r3
 8000744:	00d2      	lsls	r2, r2, #3
 8000746:	4013      	ands	r3, r2
 8000748:	430b      	orrs	r3, r1
 800074a:	616b      	str	r3, [r5, #20]
 800074c:	2400      	movs	r4, #0
 800074e:	2233      	movs	r2, #51	; 0x33
 8000750:	54ac      	strb	r4, [r5, r2]
 8000752:	68a9      	ldr	r1, [r5, #8]
 8000754:	6a89      	ldr	r1, [r1, #40]	; 0x28
 8000756:	4788      	blx	r1
 8000758:	2100      	movs	r1, #0
 800075a:	0008      	movs	r0, r1
 800075c:	bd70      	pop	{r4, r5, r6, pc}
	...

08000760 <.text_24>:
 8000760:	20000000 	.word	0x20000000

08000764 <.text_25>:
 8000764:	200001bc 	.word	0x200001bc

08000768 <.text_26>:
 8000768:	00008708 	.word	0x00008708

0800076c <.text_27>:
 800076c:	00008308 	.word	0x00008308

08000770 <.text_28>:
 8000770:	0801988c 	.word	0x0801988c

08000774 <USBPD_PE_SendExtendedMessage>:
 8000774:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
 8000776:	b083      	sub	sp, #12
 8000778:	001f      	movs	r7, r3
 800077a:	2400      	movs	r4, #0
 800077c:	2500      	movs	r5, #0
 800077e:	48b5      	ldr	r0, [pc, #724]	; (8000a54 <.text_43>)
 8000780:	4669      	mov	r1, sp
 8000782:	7b09      	ldrb	r1, [r1, #12]
 8000784:	0089      	lsls	r1, r1, #2
 8000786:	5846      	ldr	r6, [r0, r1]
 8000788:	2003      	movs	r0, #3
 800078a:	2132      	movs	r1, #50	; 0x32
 800078c:	5c71      	ldrb	r1, [r6, r1]
 800078e:	2900      	cmp	r1, #0
 8000790:	d107      	bne.n	80007a2 <USBPD_PE_SendExtendedMessage+0x2e>
 8000792:	6871      	ldr	r1, [r6, #4]
 8000794:	6809      	ldr	r1, [r1, #0]
 8000796:	9100      	str	r1, [sp, #0]
 8000798:	2101      	movs	r1, #1
 800079a:	9b00      	ldr	r3, [sp, #0]
 800079c:	0b1b      	lsrs	r3, r3, #12
 800079e:	400b      	ands	r3, r1
 80007a0:	d101      	bne.n	80007a6 <USBPD_PE_SendExtendedMessage+0x32>
 80007a2:	2503      	movs	r5, #3
 80007a4:	e06c      	b.n	8000880 <USBPD_PE_SendExtendedMessage+0x10c>
 80007a6:	9b00      	ldr	r3, [sp, #0]
 80007a8:	055b      	lsls	r3, r3, #21
 80007aa:	0f5b      	lsrs	r3, r3, #29
 80007ac:	2b03      	cmp	r3, #3
 80007ae:	d10b      	bne.n	80007c8 <USBPD_PE_SendExtendedMessage+0x54>
 80007b0:	9b00      	ldr	r3, [sp, #0]
 80007b2:	4018      	ands	r0, r3
 80007b4:	2801      	cmp	r0, #1
 80007b6:	d801      	bhi.n	80007bc <USBPD_PE_SendExtendedMessage+0x48>
 80007b8:	2501      	movs	r5, #1
 80007ba:	e061      	b.n	8000880 <USBPD_PE_SendExtendedMessage+0x10c>
 80007bc:	4668      	mov	r0, sp
 80007be:	8d00      	ldrh	r0, [r0, #40]	; 0x28
 80007c0:	21ff      	movs	r1, #255	; 0xff
 80007c2:	1d89      	adds	r1, r1, #6
 80007c4:	4288      	cmp	r0, r1
 80007c6:	d301      	bcc.n	80007cc <USBPD_PE_SendExtendedMessage+0x58>
 80007c8:	2502      	movs	r5, #2
 80007ca:	e059      	b.n	8000880 <USBPD_PE_SendExtendedMessage+0x10c>
 80007cc:	4668      	mov	r0, sp
 80007ce:	7002      	strb	r2, [r0, #0]
 80007d0:	6970      	ldr	r0, [r6, #20]
 80007d2:	2120      	movs	r1, #32
 80007d4:	4388      	bics	r0, r1
 80007d6:	6170      	str	r0, [r6, #20]
 80007d8:	2020      	movs	r0, #32
 80007da:	4669      	mov	r1, sp
 80007dc:	7809      	ldrb	r1, [r1, #0]
 80007de:	2903      	cmp	r1, #3
 80007e0:	d008      	beq.n	80007f4 <USBPD_PE_SendExtendedMessage+0x80>
 80007e2:	2904      	cmp	r1, #4
 80007e4:	d020      	beq.n	8000828 <USBPD_PE_SendExtendedMessage+0xb4>
 80007e6:	2906      	cmp	r1, #6
 80007e8:	d020      	beq.n	800082c <USBPD_PE_SendExtendedMessage+0xb8>
 80007ea:	2908      	cmp	r1, #8
 80007ec:	d020      	beq.n	8000830 <USBPD_PE_SendExtendedMessage+0xbc>
 80007ee:	290a      	cmp	r1, #10
 80007f0:	d023      	beq.n	800083a <USBPD_PE_SendExtendedMessage+0xc6>
 80007f2:	e024      	b.n	800083e <USBPD_PE_SendExtendedMessage+0xca>
 80007f4:	210c      	movs	r1, #12
 80007f6:	4aac      	ldr	r2, [pc, #688]	; (8000aa8 <.text_45>)
 80007f8:	18b2      	adds	r2, r6, r2
 80007fa:	7091      	strb	r1, [r2, #2]
 80007fc:	6971      	ldr	r1, [r6, #20]
 80007fe:	4308      	orrs	r0, r1
 8000800:	6170      	str	r0, [r6, #20]
 8000802:	4668      	mov	r0, sp
 8000804:	8d00      	ldrh	r0, [r0, #40]	; 0x28
 8000806:	2800      	cmp	r0, #0
 8000808:	d027      	beq.n	800085a <USBPD_PE_SendExtendedMessage+0xe6>
 800080a:	9401      	str	r4, [sp, #4]
 800080c:	4668      	mov	r0, sp
 800080e:	7b00      	ldrb	r0, [r0, #12]
 8000810:	f000 fa98 	bl	8000d44 <PE_Get_UnchunkedSupport>
 8000814:	2801      	cmp	r0, #1
 8000816:	d101      	bne.n	800081c <USBPD_PE_SendExtendedMessage+0xa8>
 8000818:	2004      	movs	r0, #4
 800081a:	9001      	str	r0, [sp, #4]
 800081c:	9702      	str	r7, [sp, #8]
 800081e:	9801      	ldr	r0, [sp, #4]
 8000820:	4669      	mov	r1, sp
 8000822:	8d09      	ldrh	r1, [r1, #40]	; 0x28
 8000824:	4fa1      	ldr	r7, [pc, #644]	; (8000aac <.text_46>)
 8000826:	e012      	b.n	800084e <USBPD_PE_SendExtendedMessage+0xda>
 8000828:	210d      	movs	r1, #13
 800082a:	e7e4      	b.n	80007f6 <USBPD_PE_SendExtendedMessage+0x82>
 800082c:	210e      	movs	r1, #14
 800082e:	e7e2      	b.n	80007f6 <USBPD_PE_SendExtendedMessage+0x82>
 8000830:	205b      	movs	r0, #91	; 0x5b
 8000832:	499d      	ldr	r1, [pc, #628]	; (8000aa8 <.text_45>)
 8000834:	1871      	adds	r1, r6, r1
 8000836:	7088      	strb	r0, [r1, #2]
 8000838:	e7e3      	b.n	8000802 <USBPD_PE_SendExtendedMessage+0x8e>
 800083a:	205c      	movs	r0, #92	; 0x5c
 800083c:	e7f9      	b.n	8000832 <USBPD_PE_SendExtendedMessage+0xbe>
 800083e:	2510      	movs	r5, #16
 8000840:	e01e      	b.n	8000880 <USBPD_PE_SendExtendedMessage+0x10c>
 8000842:	9a02      	ldr	r2, [sp, #8]
 8000844:	5d12      	ldrb	r2, [r2, r4]
 8000846:	1823      	adds	r3, r4, r0
 8000848:	18f3      	adds	r3, r6, r3
 800084a:	55da      	strb	r2, [r3, r7]
 800084c:	1c64      	adds	r4, r4, #1
 800084e:	428c      	cmp	r4, r1
 8000850:	d3f7      	bcc.n	8000842 <USBPD_PE_SendExtendedMessage+0xce>
 8000852:	2092      	movs	r0, #146	; 0x92
 8000854:	00c0      	lsls	r0, r0, #3
 8000856:	5231      	strh	r1, [r6, r0]
 8000858:	e002      	b.n	8000860 <USBPD_PE_SendExtendedMessage+0xec>
 800085a:	2092      	movs	r0, #146	; 0x92
 800085c:	00c0      	lsls	r0, r0, #3
 800085e:	5234      	strh	r4, [r6, r0]
 8000860:	4668      	mov	r0, sp
 8000862:	7c00      	ldrb	r0, [r0, #16]
 8000864:	2133      	movs	r1, #51	; 0x33
 8000866:	5470      	strb	r0, [r6, r1]
 8000868:	4668      	mov	r0, sp
 800086a:	7800      	ldrb	r0, [r0, #0]
 800086c:	498e      	ldr	r1, [pc, #568]	; (8000aa8 <.text_45>)
 800086e:	5470      	strb	r0, [r6, r1]
 8000870:	2031      	movs	r0, #49	; 0x31
 8000872:	2132      	movs	r1, #50	; 0x32
 8000874:	5470      	strb	r0, [r6, r1]
 8000876:	4668      	mov	r0, sp
 8000878:	7b00      	ldrb	r0, [r0, #12]
 800087a:	68b1      	ldr	r1, [r6, #8]
 800087c:	6a89      	ldr	r1, [r1, #40]	; 0x28
 800087e:	4788      	blx	r1
 8000880:	0028      	movs	r0, r5
 8000882:	b005      	add	sp, #20
 8000884:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08000888 <.text_30>:
 8000888:	0000025e 	.word	0x0000025e

0800088c <PE_Send_RESET>:
 800088c:	b538      	push	{r3, r4, r5, lr}
 800088e:	0005      	movs	r5, r0
 8000890:	000c      	movs	r4, r1
 8000892:	2c05      	cmp	r4, #5
 8000894:	d101      	bne.n	800089a <PE_Send_RESET+0xe>
 8000896:	211f      	movs	r1, #31
 8000898:	e000      	b.n	800089c <PE_Send_RESET+0x10>
 800089a:	215e      	movs	r1, #94	; 0x5e
 800089c:	7c28      	ldrb	r0, [r5, #16]
 800089e:	f7ff fdef 	bl	8000480 <USBPD_PE_Notification>
 80008a2:	0021      	movs	r1, r4
 80008a4:	7c28      	ldrb	r0, [r5, #16]
 80008a6:	f005 f9ab 	bl	8005c00 <USBPD_PRL_ResetRequestProcess>
 80008aa:	f3ef 8010 	mrs	r0, PRIMASK
 80008ae:	b672      	cpsid	i
 80008b0:	2100      	movs	r1, #0
 80008b2:	223c      	movs	r2, #60	; 0x3c
 80008b4:	54a9      	strb	r1, [r5, r2]
 80008b6:	f380 8810 	msr	PRIMASK, r0
 80008ba:	bd31      	pop	{r0, r4, r5, pc}

080008bc <PE_Get_SpecRevision>:
 80008bc:	4965      	ldr	r1, [pc, #404]	; (8000a54 <.text_43>)
 80008be:	0080      	lsls	r0, r0, #2
 80008c0:	5808      	ldr	r0, [r1, r0]
 80008c2:	6840      	ldr	r0, [r0, #4]
 80008c4:	7800      	ldrb	r0, [r0, #0]
 80008c6:	0780      	lsls	r0, r0, #30
 80008c8:	0f80      	lsrs	r0, r0, #30
 80008ca:	4770      	bx	lr

080008cc <PE_ChangePowerRole>:
 80008cc:	b538      	push	{r3, r4, r5, lr}
 80008ce:	6842      	ldr	r2, [r0, #4]
 80008d0:	6813      	ldr	r3, [r2, #0]
 80008d2:	2404      	movs	r4, #4
 80008d4:	43a3      	bics	r3, r4
 80008d6:	008c      	lsls	r4, r1, #2
 80008d8:	2504      	movs	r5, #4
 80008da:	402c      	ands	r4, r5
 80008dc:	431c      	orrs	r4, r3
 80008de:	6014      	str	r4, [r2, #0]
 80008e0:	7c00      	ldrb	r0, [r0, #16]
 80008e2:	f004 ff0a 	bl	80056fa <USBPD_PRL_SetHeaderPowerRole>
 80008e6:	bd31      	pop	{r0, r4, r5, pc}

080008e8 <PE_Get_RxEvent>:
 80008e8:	b530      	push	{r4, r5, lr}
 80008ea:	0001      	movs	r1, r0
 80008ec:	2014      	movs	r0, #20
 80008ee:	f3ef 8210 	mrs	r2, PRIMASK
 80008f2:	b672      	cpsid	i
 80008f4:	233c      	movs	r3, #60	; 0x3c
 80008f6:	5ccc      	ldrb	r4, [r1, r3]
 80008f8:	2c00      	cmp	r4, #0
 80008fa:	d029      	beq.n	8000950 <PE_Get_RxEvent+0x68>
 80008fc:	2393      	movs	r3, #147	; 0x93
 80008fe:	009b      	lsls	r3, r3, #2
 8000900:	18cb      	adds	r3, r1, r3
 8000902:	5d1d      	ldrb	r5, [r3, r4]
 8000904:	066d      	lsls	r5, r5, #25
 8000906:	d401      	bmi.n	800090c <PE_Get_RxEvent+0x24>
 8000908:	2003      	movs	r0, #3
 800090a:	e021      	b.n	8000950 <PE_Get_RxEvent+0x68>
 800090c:	2584      	movs	r5, #132	; 0x84
 800090e:	006d      	lsls	r5, r5, #1
 8000910:	436c      	muls	r4, r5
 8000912:	190c      	adds	r4, r1, r4
 8000914:	3ccb      	subs	r4, #203	; 0xcb
 8000916:	638c      	str	r4, [r1, #56]	; 0x38
 8000918:	7825      	ldrb	r5, [r4, #0]
 800091a:	7864      	ldrb	r4, [r4, #1]
 800091c:	0224      	lsls	r4, r4, #8
 800091e:	192c      	adds	r4, r5, r4
 8000920:	868c      	strh	r4, [r1, #52]	; 0x34
 8000922:	000c      	movs	r4, r1
 8000924:	3430      	adds	r4, #48	; 0x30
 8000926:	253c      	movs	r5, #60	; 0x3c
 8000928:	5d49      	ldrb	r1, [r1, r5]
 800092a:	5c59      	ldrb	r1, [r3, r1]
 800092c:	06c9      	lsls	r1, r1, #27
 800092e:	0ec9      	lsrs	r1, r1, #27
 8000930:	2901      	cmp	r1, #1
 8000932:	d004      	beq.n	800093e <PE_Get_RxEvent+0x56>
 8000934:	2902      	cmp	r1, #2
 8000936:	d005      	beq.n	8000944 <PE_Get_RxEvent+0x5c>
 8000938:	2904      	cmp	r1, #4
 800093a:	d006      	beq.n	800094a <PE_Get_RxEvent+0x62>
 800093c:	e008      	b.n	8000950 <PE_Get_RxEvent+0x68>
 800093e:	2011      	movs	r0, #17
 8000940:	2100      	movs	r1, #0
 8000942:	e004      	b.n	800094e <PE_Get_RxEvent+0x66>
 8000944:	2012      	movs	r0, #18
 8000946:	2101      	movs	r1, #1
 8000948:	e001      	b.n	800094e <PE_Get_RxEvent+0x66>
 800094a:	2013      	movs	r0, #19
 800094c:	2102      	movs	r1, #2
 800094e:	7021      	strb	r1, [r4, #0]
 8000950:	f382 8810 	msr	PRIMASK, r2
 8000954:	bd30      	pop	{r4, r5, pc}

08000956 <PE_Clear_RxEvent>:
 8000956:	b510      	push	{r4, lr}
 8000958:	0001      	movs	r1, r0
 800095a:	f3ef 8010 	mrs	r0, PRIMASK
 800095e:	b672      	cpsid	i
 8000960:	223c      	movs	r2, #60	; 0x3c
 8000962:	5c8a      	ldrb	r2, [r1, r2]
 8000964:	2a00      	cmp	r2, #0
 8000966:	d014      	beq.n	8000992 <PE_Clear_RxEvent+0x3c>
 8000968:	1e53      	subs	r3, r2, #1
 800096a:	b2db      	uxtb	r3, r3
 800096c:	4acb      	ldr	r2, [pc, #812]	; (8000c9c <.text_56>)
 800096e:	188c      	adds	r4, r1, r2
 8000970:	2200      	movs	r2, #0
 8000972:	54e2      	strb	r2, [r4, r3]
 8000974:	1e5b      	subs	r3, r3, #1
 8000976:	419b      	sbcs	r3, r3
 8000978:	0fdb      	lsrs	r3, r3, #31
 800097a:	5ce4      	ldrb	r4, [r4, r3]
 800097c:	0664      	lsls	r4, r4, #25
 800097e:	d506      	bpl.n	800098e <PE_Clear_RxEvent+0x38>
 8000980:	1c5b      	adds	r3, r3, #1
 8000982:	223c      	movs	r2, #60	; 0x3c
 8000984:	548b      	strb	r3, [r1, r2]
 8000986:	f380 8810 	msr	PRIMASK, r0
 800098a:	7c08      	ldrb	r0, [r1, #16]
 800098c:	e168      	b.n	8000c60 <.text_54>
 800098e:	233c      	movs	r3, #60	; 0x3c
 8000990:	54ca      	strb	r2, [r1, r3]
 8000992:	f380 8810 	msr	PRIMASK, r0
 8000996:	bd10      	pop	{r4, pc}

08000998 <.text_36>:
 8000998:	00000302 	.word	0x00000302

0800099c <.text_37>:
 800099c:	00000703 	.word	0x00000703

080009a0 <PE_PRL_Control_RxEvent>:
 80009a0:	492c      	ldr	r1, [pc, #176]	; (8000a54 <.text_43>)
 80009a2:	0080      	lsls	r0, r0, #2
 80009a4:	580a      	ldr	r2, [r1, r0]
 80009a6:	2000      	movs	r0, #0
 80009a8:	f3ef 8110 	mrs	r1, PRIMASK
 80009ac:	b672      	cpsid	i
 80009ae:	233c      	movs	r3, #60	; 0x3c
 80009b0:	5cd2      	ldrb	r2, [r2, r3]
 80009b2:	2a00      	cmp	r2, #0
 80009b4:	d000      	beq.n	80009b8 <PE_PRL_Control_RxEvent+0x18>
 80009b6:	2001      	movs	r0, #1
 80009b8:	f381 8810 	msr	PRIMASK, r1
 80009bc:	4770      	bx	lr
	...

080009c0 <.text_39>:
 80009c0:	0000025f 	.word	0x0000025f

080009c4 <.text_40>:
 80009c4:	00000704 	.word	0x00000704

080009c8 <PE_Convert_SOPRxEvent>:
 80009c8:	2800      	cmp	r0, #0
 80009ca:	d003      	beq.n	80009d4 <PE_Convert_SOPRxEvent+0xc>
 80009cc:	2802      	cmp	r0, #2
 80009ce:	d005      	beq.n	80009dc <PE_Convert_SOPRxEvent+0x14>
 80009d0:	d302      	bcc.n	80009d8 <PE_Convert_SOPRxEvent+0x10>
 80009d2:	e005      	b.n	80009e0 <PE_Convert_SOPRxEvent+0x18>
 80009d4:	2011      	movs	r0, #17
 80009d6:	4770      	bx	lr
 80009d8:	2012      	movs	r0, #18
 80009da:	4770      	bx	lr
 80009dc:	2013      	movs	r0, #19
 80009de:	4770      	bx	lr
 80009e0:	2014      	movs	r0, #20
 80009e2:	4770      	bx	lr

080009e4 <PE_Check_AMSConflict>:
 80009e4:	b570      	push	{r4, r5, r6, lr}
 80009e6:	0005      	movs	r5, r0
 80009e8:	2400      	movs	r4, #0
 80009ea:	8ea8      	ldrh	r0, [r5, #52]	; 0x34
 80009ec:	49b7      	ldr	r1, [pc, #732]	; (8000ccc <.text_58>)
 80009ee:	4001      	ands	r1, r0
 80009f0:	290d      	cmp	r1, #13
 80009f2:	d101      	bne.n	80009f8 <PE_Check_AMSConflict+0x14>
 80009f4:	2010      	movs	r0, #16
 80009f6:	e01b      	b.n	8000a30 <PE_Check_AMSConflict+0x4c>
 80009f8:	2603      	movs	r6, #3
 80009fa:	200f      	movs	r0, #15
 80009fc:	7f29      	ldrb	r1, [r5, #28]
 80009fe:	2900      	cmp	r1, #0
 8000a00:	d011      	beq.n	8000a26 <PE_Check_AMSConflict+0x42>
 8000a02:	1e49      	subs	r1, r1, #1
 8000a04:	2901      	cmp	r1, #1
 8000a06:	d912      	bls.n	8000a2e <PE_Check_AMSConflict+0x4a>
 8000a08:	1e89      	subs	r1, r1, #2
 8000a0a:	d011      	beq.n	8000a30 <PE_Check_AMSConflict+0x4c>
 8000a0c:	1e49      	subs	r1, r1, #1
 8000a0e:	d01d      	beq.n	8000a4c <PE_Check_AMSConflict+0x68>
 8000a10:	1e49      	subs	r1, r1, #1
 8000a12:	2909      	cmp	r1, #9
 8000a14:	d90b      	bls.n	8000a2e <PE_Check_AMSConflict+0x4a>
 8000a16:	390b      	subs	r1, #11
 8000a18:	2901      	cmp	r1, #1
 8000a1a:	d908      	bls.n	8000a2e <PE_Check_AMSConflict+0x4a>
 8000a1c:	1e89      	subs	r1, r1, #2
 8000a1e:	d004      	beq.n	8000a2a <PE_Check_AMSConflict+0x46>
 8000a20:	394d      	subs	r1, #77	; 0x4d
 8000a22:	d004      	beq.n	8000a2e <PE_Check_AMSConflict+0x4a>
 8000a24:	e006      	b.n	8000a34 <PE_Check_AMSConflict+0x50>
 8000a26:	746e      	strb	r6, [r5, #17]
 8000a28:	e011      	b.n	8000a4e <PE_Check_AMSConflict+0x6a>
 8000a2a:	7468      	strb	r0, [r5, #17]
 8000a2c:	e00f      	b.n	8000a4e <PE_Check_AMSConflict+0x6a>
 8000a2e:	2011      	movs	r0, #17
 8000a30:	7468      	strb	r0, [r5, #17]
 8000a32:	e00b      	b.n	8000a4c <PE_Check_AMSConflict+0x68>
 8000a34:	215c      	movs	r1, #92	; 0x5c
 8000a36:	7c28      	ldrb	r0, [r5, #16]
 8000a38:	f7ff fd22 	bl	8000480 <USBPD_PE_Notification>
 8000a3c:	746e      	strb	r6, [r5, #17]
 8000a3e:	6868      	ldr	r0, [r5, #4]
 8000a40:	6800      	ldr	r0, [r0, #0]
 8000a42:	49c4      	ldr	r1, [pc, #784]	; (8000d54 <.text_62>)
 8000a44:	4001      	ands	r1, r0
 8000a46:	0230      	lsls	r0, r6, #8
 8000a48:	4281      	cmp	r1, r0
 8000a4a:	d000      	beq.n	8000a4e <PE_Check_AMSConflict+0x6a>
 8000a4c:	2415      	movs	r4, #21
 8000a4e:	0020      	movs	r0, r4
 8000a50:	bd70      	pop	{r4, r5, r6, pc}
	...

08000a54 <.text_43>:
 8000a54:	200001bc 	.word	0x200001bc

08000a58 <PE_PRL_ResetReceived>:
 8000a58:	b538      	push	{r3, r4, r5, lr}
 8000a5a:	0004      	movs	r4, r0
 8000a5c:	48be      	ldr	r0, [pc, #760]	; (8000d58 <.text_63>)
 8000a5e:	00a2      	lsls	r2, r4, #2
 8000a60:	5885      	ldr	r5, [r0, r2]
 8000a62:	2905      	cmp	r1, #5
 8000a64:	d115      	bne.n	8000a92 <PE_PRL_ResetReceived+0x3a>
 8000a66:	6868      	ldr	r0, [r5, #4]
 8000a68:	6801      	ldr	r1, [r0, #0]
 8000a6a:	2210      	movs	r2, #16
 8000a6c:	4391      	bics	r1, r2
 8000a6e:	6001      	str	r1, [r0, #0]
 8000a70:	6968      	ldr	r0, [r5, #20]
 8000a72:	49ba      	ldr	r1, [pc, #744]	; (8000d5c <.text_64>)
 8000a74:	4001      	ands	r1, r0
 8000a76:	0150      	lsls	r0, r2, #5
 8000a78:	4308      	orrs	r0, r1
 8000a7a:	6168      	str	r0, [r5, #20]
 8000a7c:	2014      	movs	r0, #20
 8000a7e:	2132      	movs	r1, #50	; 0x32
 8000a80:	5468      	strb	r0, [r5, r1]
 8000a82:	2000      	movs	r0, #0
 8000a84:	213c      	movs	r1, #60	; 0x3c
 8000a86:	5468      	strb	r0, [r5, r1]
 8000a88:	211e      	movs	r1, #30
 8000a8a:	7c28      	ldrb	r0, [r5, #16]
 8000a8c:	f7ff fcf8 	bl	8000480 <USBPD_PE_Notification>
 8000a90:	e004      	b.n	8000a9c <PE_PRL_ResetReceived+0x44>
 8000a92:	6968      	ldr	r0, [r5, #20]
 8000a94:	2180      	movs	r1, #128	; 0x80
 8000a96:	02c9      	lsls	r1, r1, #11
 8000a98:	4301      	orrs	r1, r0
 8000a9a:	6169      	str	r1, [r5, #20]
 8000a9c:	0020      	movs	r0, r4
 8000a9e:	68a9      	ldr	r1, [r5, #8]
 8000aa0:	6a89      	ldr	r1, [r1, #40]	; 0x28
 8000aa2:	4788      	blx	r1
 8000aa4:	bd31      	pop	{r0, r4, r5, pc}
	...

08000aa8 <.text_45>:
 8000aa8:	0000025d 	.word	0x0000025d

08000aac <.text_46>:
 8000aac:	00000385 	.word	0x00000385

08000ab0 <PE_PRL_BistCompleted>:
 8000ab0:	4770      	bx	lr

08000ab2 <PE_Reset_HardReset>:
 8000ab2:	b538      	push	{r3, r4, r5, lr}
 8000ab4:	0004      	movs	r4, r0
 8000ab6:	2032      	movs	r0, #50	; 0x32
 8000ab8:	5c20      	ldrb	r0, [r4, r0]
 8000aba:	2800      	cmp	r0, #0
 8000abc:	d003      	beq.n	8000ac6 <PE_Reset_HardReset+0x14>
 8000abe:	215b      	movs	r1, #91	; 0x5b
 8000ac0:	7c20      	ldrb	r0, [r4, #16]
 8000ac2:	f7ff fcdd 	bl	8000480 <USBPD_PE_Notification>
 8000ac6:	0020      	movs	r0, r4
 8000ac8:	f000 f82c 	bl	8000b24 <PE_Reset_ZI>
 8000acc:	2503      	movs	r5, #3
 8000ace:	6820      	ldr	r0, [r4, #0]
 8000ad0:	6843      	ldr	r3, [r0, #4]
 8000ad2:	402b      	ands	r3, r5
 8000ad4:	7c20      	ldrb	r0, [r4, #16]
 8000ad6:	6861      	ldr	r1, [r4, #4]
 8000ad8:	6809      	ldr	r1, [r1, #0]
 8000ada:	074a      	lsls	r2, r1, #29
 8000adc:	0fd2      	lsrs	r2, r2, #31
 8000ade:	d008      	beq.n	8000af2 <PE_Reset_HardReset+0x40>
 8000ae0:	2101      	movs	r1, #1
 8000ae2:	f004 fdee 	bl	80056c2 <USBPD_PRL_SetHeader>
 8000ae6:	6860      	ldr	r0, [r4, #4]
 8000ae8:	6801      	ldr	r1, [r0, #0]
 8000aea:	2208      	movs	r2, #8
 8000aec:	430a      	orrs	r2, r1
 8000aee:	6002      	str	r2, [r0, #0]
 8000af0:	e007      	b.n	8000b02 <PE_Reset_HardReset+0x50>
 8000af2:	2100      	movs	r1, #0
 8000af4:	f004 fde5 	bl	80056c2 <USBPD_PRL_SetHeader>
 8000af8:	6860      	ldr	r0, [r4, #4]
 8000afa:	6801      	ldr	r1, [r0, #0]
 8000afc:	2208      	movs	r2, #8
 8000afe:	4391      	bics	r1, r2
 8000b00:	6001      	str	r1, [r0, #0]
 8000b02:	6820      	ldr	r0, [r4, #0]
 8000b04:	6840      	ldr	r0, [r0, #4]
 8000b06:	4005      	ands	r5, r0
 8000b08:	6860      	ldr	r0, [r4, #4]
 8000b0a:	6801      	ldr	r1, [r0, #0]
 8000b0c:	2203      	movs	r2, #3
 8000b0e:	4391      	bics	r1, r2
 8000b10:	430d      	orrs	r5, r1
 8000b12:	6005      	str	r5, [r0, #0]
 8000b14:	2101      	movs	r1, #1
 8000b16:	7c20      	ldrb	r0, [r4, #16]
 8000b18:	f004 fe44 	bl	80057a4 <USBPD_PRL_SOPCapability>
 8000b1c:	7c20      	ldrb	r0, [r4, #16]
 8000b1e:	f005 f8ad 	bl	8005c7c <USBPD_PRL_Reset>
 8000b22:	bd31      	pop	{r0, r4, r5, pc}

08000b24 <PE_Reset_ZI>:
 8000b24:	b53e      	push	{r1, r2, r3, r4, r5, lr}
 8000b26:	0004      	movs	r4, r0
 8000b28:	2000      	movs	r0, #0
 8000b2a:	9001      	str	r0, [sp, #4]
 8000b2c:	6860      	ldr	r0, [r4, #4]
 8000b2e:	6801      	ldr	r1, [r0, #0]
 8000b30:	2210      	movs	r2, #16
 8000b32:	4391      	bics	r1, r2
 8000b34:	6001      	str	r1, [r0, #0]
 8000b36:	2100      	movs	r1, #0
 8000b38:	0020      	movs	r0, r4
 8000b3a:	f000 fc34 	bl	80013a6 <PE_SetPowerNegotiation>
 8000b3e:	2193      	movs	r1, #147	; 0x93
 8000b40:	0089      	lsls	r1, r1, #2
 8000b42:	0020      	movs	r0, r4
 8000b44:	3014      	adds	r0, #20
 8000b46:	f017 fbec 	bl	8018322 <__aeabi_memclr>
 8000b4a:	2304      	movs	r3, #4
 8000b4c:	aa01      	add	r2, sp, #4
 8000b4e:	2102      	movs	r1, #2
 8000b50:	7c20      	ldrb	r0, [r4, #16]
 8000b52:	68a5      	ldr	r5, [r4, #8]
 8000b54:	69ad      	ldr	r5, [r5, #24]
 8000b56:	47a8      	blx	r5
 8000b58:	2080      	movs	r0, #128	; 0x80
 8000b5a:	0440      	lsls	r0, r0, #17
 8000b5c:	9000      	str	r0, [sp, #0]
 8000b5e:	2304      	movs	r3, #4
 8000b60:	466a      	mov	r2, sp
 8000b62:	2106      	movs	r1, #6
 8000b64:	7c20      	ldrb	r0, [r4, #16]
 8000b66:	68a5      	ldr	r5, [r4, #8]
 8000b68:	69ad      	ldr	r5, [r5, #24]
 8000b6a:	47a8      	blx	r5
 8000b6c:	2503      	movs	r5, #3
 8000b6e:	6820      	ldr	r0, [r4, #0]
 8000b70:	6841      	ldr	r1, [r0, #4]
 8000b72:	4029      	ands	r1, r5
 8000b74:	7c20      	ldrb	r0, [r4, #16]
 8000b76:	f004 fde2 	bl	800573e <USBPD_PRL_CBL_SetHeaderSpecification>
 8000b7a:	6820      	ldr	r0, [r4, #0]
 8000b7c:	6840      	ldr	r0, [r0, #4]
 8000b7e:	4005      	ands	r5, r0
 8000b80:	6860      	ldr	r0, [r4, #4]
 8000b82:	6801      	ldr	r1, [r0, #0]
 8000b84:	4a76      	ldr	r2, [pc, #472]	; (8000d60 <.text_65>)
 8000b86:	400a      	ands	r2, r1
 8000b88:	06a9      	lsls	r1, r5, #26
 8000b8a:	4311      	orrs	r1, r2
 8000b8c:	6001      	str	r1, [r0, #0]
 8000b8e:	bd37      	pop	{r0, r1, r2, r4, r5, pc}

08000b90 <PE_Reset_Counter>:
 8000b90:	b580      	push	{r7, lr}
 8000b92:	2103      	movs	r1, #3
 8000b94:	2298      	movs	r2, #152	; 0x98
 8000b96:	0092      	lsls	r2, r2, #2
 8000b98:	1880      	adds	r0, r0, r2
 8000b9a:	f017 fbc2 	bl	8018322 <__aeabi_memclr>
 8000b9e:	bd01      	pop	{r0, pc}

08000ba0 <PE_Reset_StateMachine>:
 8000ba0:	b538      	push	{r3, r4, r5, lr}
 8000ba2:	0004      	movs	r4, r0
 8000ba4:	2032      	movs	r0, #50	; 0x32
 8000ba6:	5c20      	ldrb	r0, [r4, r0]
 8000ba8:	2800      	cmp	r0, #0
 8000baa:	d003      	beq.n	8000bb4 <PE_Reset_StateMachine+0x14>
 8000bac:	215b      	movs	r1, #91	; 0x5b
 8000bae:	7c20      	ldrb	r0, [r4, #16]
 8000bb0:	f7ff fc66 	bl	8000480 <USBPD_PE_Notification>
 8000bb4:	0020      	movs	r0, r4
 8000bb6:	f7ff ffb5 	bl	8000b24 <PE_Reset_ZI>
 8000bba:	2101      	movs	r1, #1
 8000bbc:	0020      	movs	r0, r4
 8000bbe:	f000 fbf2 	bl	80013a6 <PE_SetPowerNegotiation>
 8000bc2:	7c20      	ldrb	r0, [r4, #16]
 8000bc4:	f005 f85a 	bl	8005c7c <USBPD_PRL_Reset>
 8000bc8:	6860      	ldr	r0, [r4, #4]
 8000bca:	6801      	ldr	r1, [r0, #0]
 8000bcc:	2501      	movs	r5, #1
 8000bce:	08ca      	lsrs	r2, r1, #3
 8000bd0:	402a      	ands	r2, r5
 8000bd2:	078b      	lsls	r3, r1, #30
 8000bd4:	0f9b      	lsrs	r3, r3, #30
 8000bd6:	7c20      	ldrb	r0, [r4, #16]
 8000bd8:	0889      	lsrs	r1, r1, #2
 8000bda:	400d      	ands	r5, r1
 8000bdc:	d004      	beq.n	8000be8 <PE_Reset_StateMachine+0x48>
 8000bde:	2101      	movs	r1, #1
 8000be0:	f004 fd6f 	bl	80056c2 <USBPD_PRL_SetHeader>
 8000be4:	2002      	movs	r0, #2
 8000be6:	e003      	b.n	8000bf0 <PE_Reset_StateMachine+0x50>
 8000be8:	2100      	movs	r1, #0
 8000bea:	f004 fd6a 	bl	80056c2 <USBPD_PRL_SetHeader>
 8000bee:	203e      	movs	r0, #62	; 0x3e
 8000bf0:	7460      	strb	r0, [r4, #17]
 8000bf2:	bd31      	pop	{r0, r4, r5, pc}

08000bf4 <PE_ExtRevisionInteroperability>:
 8000bf4:	b570      	push	{r4, r5, r6, lr}
 8000bf6:	000a      	movs	r2, r1
 8000bf8:	4957      	ldr	r1, [pc, #348]	; (8000d58 <.text_63>)
 8000bfa:	0083      	lsls	r3, r0, #2
 8000bfc:	58cb      	ldr	r3, [r1, r3]
 8000bfe:	685c      	ldr	r4, [r3, #4]
 8000c00:	6825      	ldr	r5, [r4, #0]
 8000c02:	2103      	movs	r1, #3
 8000c04:	2603      	movs	r6, #3
 8000c06:	402e      	ands	r6, r5
 8000c08:	42b2      	cmp	r2, r6
 8000c0a:	db00      	blt.n	8000c0e <PE_ExtRevisionInteroperability+0x1a>
 8000c0c:	0032      	movs	r2, r6
 8000c0e:	438d      	bics	r5, r1
 8000c10:	400a      	ands	r2, r1
 8000c12:	432a      	orrs	r2, r5
 8000c14:	6022      	str	r2, [r4, #0]
 8000c16:	685a      	ldr	r2, [r3, #4]
 8000c18:	6814      	ldr	r4, [r2, #0]
 8000c1a:	2503      	movs	r5, #3
 8000c1c:	4025      	ands	r5, r4
 8000c1e:	2d01      	cmp	r5, #1
 8000c20:	d101      	bne.n	8000c26 <PE_ExtRevisionInteroperability+0x32>
 8000c22:	2500      	movs	r5, #0
 8000c24:	e000      	b.n	8000c28 <PE_ExtRevisionInteroperability+0x34>
 8000c26:	2520      	movs	r5, #32
 8000c28:	2620      	movs	r6, #32
 8000c2a:	43b4      	bics	r4, r6
 8000c2c:	4325      	orrs	r5, r4
 8000c2e:	6015      	str	r5, [r2, #0]
 8000c30:	685a      	ldr	r2, [r3, #4]
 8000c32:	6812      	ldr	r2, [r2, #0]
 8000c34:	4011      	ands	r1, r2
 8000c36:	f004 fd76 	bl	8005726 <USBPD_PRL_SetHeaderSpecification>
 8000c3a:	bd70      	pop	{r4, r5, r6, pc}

08000c3c <PE_PRL_FastRoleSwapReception>:
 8000c3c:	4946      	ldr	r1, [pc, #280]	; (8000d58 <.text_63>)
 8000c3e:	0082      	lsls	r2, r0, #2
 8000c40:	5889      	ldr	r1, [r1, r2]
 8000c42:	7f0a      	ldrb	r2, [r1, #28]
 8000c44:	2a09      	cmp	r2, #9
 8000c46:	d100      	bne.n	8000c4a <PE_PRL_FastRoleSwapReception+0xe>
 8000c48:	4770      	bx	lr
 8000c4a:	b510      	push	{r4, lr}
 8000c4c:	684a      	ldr	r2, [r1, #4]
 8000c4e:	6813      	ldr	r3, [r2, #0]
 8000c50:	2410      	movs	r4, #16
 8000c52:	431c      	orrs	r4, r3
 8000c54:	6014      	str	r4, [r2, #0]
 8000c56:	694a      	ldr	r2, [r1, #20]
 8000c58:	2380      	movs	r3, #128	; 0x80
 8000c5a:	029b      	lsls	r3, r3, #10
 8000c5c:	4313      	orrs	r3, r2
 8000c5e:	614b      	str	r3, [r1, #20]

08000c60 <.text_54>:
 8000c60:	6889      	ldr	r1, [r1, #8]
 8000c62:	6a89      	ldr	r1, [r1, #40]	; 0x28
 8000c64:	4788      	blx	r1
 8000c66:	bd10      	pop	{r4, pc}

08000c68 <PE_PRL_PostReceiveEvent>:
 8000c68:	b530      	push	{r4, r5, lr}
 8000c6a:	4a3b      	ldr	r2, [pc, #236]	; (8000d58 <.text_63>)
 8000c6c:	0080      	lsls	r0, r0, #2
 8000c6e:	5813      	ldr	r3, [r2, r0]
 8000c70:	2400      	movs	r4, #0
 8000c72:	2000      	movs	r0, #0
 8000c74:	191a      	adds	r2, r3, r4
 8000c76:	4d09      	ldr	r5, [pc, #36]	; (8000c9c <.text_56>)
 8000c78:	1952      	adds	r2, r2, r5
 8000c7a:	7815      	ldrb	r5, [r2, #0]
 8000c7c:	2d00      	cmp	r5, #0
 8000c7e:	d004      	beq.n	8000c8a <PE_PRL_PostReceiveEvent+0x22>
 8000c80:	1c64      	adds	r4, r4, #1
 8000c82:	b2e4      	uxtb	r4, r4
 8000c84:	2c01      	cmp	r4, #1
 8000c86:	d9f5      	bls.n	8000c74 <PE_PRL_PostReceiveEvent+0xc>
 8000c88:	bd30      	pop	{r4, r5, pc}
 8000c8a:	2020      	movs	r0, #32
 8000c8c:	7010      	strb	r0, [r2, #0]
 8000c8e:	2001      	movs	r0, #1
 8000c90:	7813      	ldrb	r3, [r2, #0]
 8000c92:	2401      	movs	r4, #1
 8000c94:	408c      	lsls	r4, r1
 8000c96:	431c      	orrs	r4, r3
 8000c98:	7014      	strb	r4, [r2, #0]
 8000c9a:	bd30      	pop	{r4, r5, pc}

08000c9c <.text_56>:
 8000c9c:	0000024d 	.word	0x0000024d

08000ca0 <PE_PRL_PostReceiveEventError>:
 8000ca0:	b530      	push	{r4, r5, lr}
 8000ca2:	492d      	ldr	r1, [pc, #180]	; (8000d58 <.text_63>)
 8000ca4:	0080      	lsls	r0, r0, #2
 8000ca6:	5809      	ldr	r1, [r1, r0]
 8000ca8:	2000      	movs	r0, #0
 8000caa:	2200      	movs	r2, #0
 8000cac:	b2d3      	uxtb	r3, r2
 8000cae:	18cb      	adds	r3, r1, r3
 8000cb0:	4c2c      	ldr	r4, [pc, #176]	; (8000d64 <.text_66>)
 8000cb2:	191b      	adds	r3, r3, r4
 8000cb4:	781c      	ldrb	r4, [r3, #0]
 8000cb6:	2560      	movs	r5, #96	; 0x60
 8000cb8:	4025      	ands	r5, r4
 8000cba:	2d20      	cmp	r5, #32
 8000cbc:	d004      	beq.n	8000cc8 <PE_PRL_PostReceiveEventError+0x28>
 8000cbe:	1c52      	adds	r2, r2, #1
 8000cc0:	b2d3      	uxtb	r3, r2
 8000cc2:	2b02      	cmp	r3, #2
 8000cc4:	d3f2      	bcc.n	8000cac <PE_PRL_PostReceiveEventError+0xc>
 8000cc6:	bd30      	pop	{r4, r5, pc}
 8000cc8:	7018      	strb	r0, [r3, #0]
 8000cca:	bd30      	pop	{r4, r5, pc}

08000ccc <.text_58>:
 8000ccc:	0000f01f 	.word	0x0000f01f

08000cd0 <PE_PRL_PostReceiveEventCopy>:
 8000cd0:	b538      	push	{r3, r4, r5, lr}
 8000cd2:	4a21      	ldr	r2, [pc, #132]	; (8000d58 <.text_63>)
 8000cd4:	0080      	lsls	r0, r0, #2
 8000cd6:	5813      	ldr	r3, [r2, r0]
 8000cd8:	2200      	movs	r2, #0
 8000cda:	b2d0      	uxtb	r0, r2
 8000cdc:	181c      	adds	r4, r3, r0
 8000cde:	4d21      	ldr	r5, [pc, #132]	; (8000d64 <.text_66>)
 8000ce0:	5d64      	ldrb	r4, [r4, r5]
 8000ce2:	2560      	movs	r5, #96	; 0x60
 8000ce4:	4025      	ands	r5, r4
 8000ce6:	2d20      	cmp	r5, #32
 8000ce8:	d004      	beq.n	8000cf4 <PE_PRL_PostReceiveEventCopy+0x24>
 8000cea:	1c52      	adds	r2, r2, #1
 8000cec:	b2d0      	uxtb	r0, r2
 8000cee:	2802      	cmp	r0, #2
 8000cf0:	d3f3      	bcc.n	8000cda <PE_PRL_PostReceiveEventCopy+0xa>
 8000cf2:	bd31      	pop	{r0, r4, r5, pc}
 8000cf4:	2284      	movs	r2, #132	; 0x84
 8000cf6:	0052      	lsls	r2, r2, #1
 8000cf8:	4350      	muls	r0, r2
 8000cfa:	1818      	adds	r0, r3, r0
 8000cfc:	303d      	adds	r0, #61	; 0x3d
 8000cfe:	f017 fb05 	bl	801830c <__aeabi_memcpy>
 8000d02:	bd31      	pop	{r0, r4, r5, pc}

08000d04 <PE_PRL_PostReceiveEventComplete>:
 8000d04:	b538      	push	{r3, r4, r5, lr}
 8000d06:	4914      	ldr	r1, [pc, #80]	; (8000d58 <.text_63>)
 8000d08:	0082      	lsls	r2, r0, #2
 8000d0a:	5889      	ldr	r1, [r1, r2]
 8000d0c:	2300      	movs	r3, #0
 8000d0e:	1c5a      	adds	r2, r3, #1
 8000d10:	18cb      	adds	r3, r1, r3
 8000d12:	4c14      	ldr	r4, [pc, #80]	; (8000d64 <.text_66>)
 8000d14:	191b      	adds	r3, r3, r4
 8000d16:	781c      	ldrb	r4, [r3, #0]
 8000d18:	2560      	movs	r5, #96	; 0x60
 8000d1a:	4025      	ands	r5, r4
 8000d1c:	2d20      	cmp	r5, #32
 8000d1e:	d003      	beq.n	8000d28 <PE_PRL_PostReceiveEventComplete+0x24>
 8000d20:	b2d3      	uxtb	r3, r2
 8000d22:	2b02      	cmp	r3, #2
 8000d24:	d3f3      	bcc.n	8000d0e <PE_PRL_PostReceiveEventComplete+0xa>
 8000d26:	bd31      	pop	{r0, r4, r5, pc}
 8000d28:	781c      	ldrb	r4, [r3, #0]
 8000d2a:	2540      	movs	r5, #64	; 0x40
 8000d2c:	4325      	orrs	r5, r4
 8000d2e:	701d      	strb	r5, [r3, #0]
 8000d30:	233c      	movs	r3, #60	; 0x3c
 8000d32:	5ccb      	ldrb	r3, [r1, r3]
 8000d34:	2b00      	cmp	r3, #0
 8000d36:	d101      	bne.n	8000d3c <PE_PRL_PostReceiveEventComplete+0x38>
 8000d38:	233c      	movs	r3, #60	; 0x3c
 8000d3a:	54ca      	strb	r2, [r1, r3]
 8000d3c:	6889      	ldr	r1, [r1, #8]
 8000d3e:	6a89      	ldr	r1, [r1, #40]	; 0x28
 8000d40:	4788      	blx	r1
 8000d42:	bd31      	pop	{r0, r4, r5, pc}

08000d44 <PE_Get_UnchunkedSupport>:
 8000d44:	4904      	ldr	r1, [pc, #16]	; (8000d58 <.text_63>)
 8000d46:	0080      	lsls	r0, r0, #2
 8000d48:	5808      	ldr	r0, [r1, r0]
 8000d4a:	6840      	ldr	r0, [r0, #4]
 8000d4c:	6800      	ldr	r0, [r0, #0]
 8000d4e:	0181      	lsls	r1, r0, #6
 8000d50:	0fc8      	lsrs	r0, r1, #31
 8000d52:	4770      	bx	lr

08000d54 <.text_62>:
 8000d54:	00000704 	.word	0x00000704

08000d58 <.text_63>:
 8000d58:	200001bc 	.word	0x200001bc

08000d5c <.text_64>:
 8000d5c:	fffff9ff 	.word	0xfffff9ff

08000d60 <.text_65>:
 8000d60:	f3ffffff 	.word	0xf3ffffff

08000d64 <.text_66>:
 8000d64:	0000024d 	.word	0x0000024d

08000d68 <PE_SubStateMachine_Generic>:
 8000d68:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
 8000d6a:	b08d      	sub	sp, #52	; 0x34
 8000d6c:	0004      	movs	r4, r0
 8000d6e:	2002      	movs	r0, #2
 8000d70:	9004      	str	r0, [sp, #16]
 8000d72:	2500      	movs	r5, #0
 8000d74:	9503      	str	r5, [sp, #12]
 8000d76:	2601      	movs	r6, #1
 8000d78:	2714      	movs	r7, #20
 8000d7a:	7c61      	ldrb	r1, [r4, #17]
 8000d7c:	2901      	cmp	r1, #1
 8000d7e:	d100      	bne.n	8000d82 <PE_SubStateMachine_Generic+0x1a>
 8000d80:	e195      	b.n	80010ae <PE_SubStateMachine_Generic+0x346>
 8000d82:	2918      	cmp	r1, #24
 8000d84:	d03f      	beq.n	8000e06 <PE_SubStateMachine_Generic+0x9e>
 8000d86:	2919      	cmp	r1, #25
 8000d88:	d050      	beq.n	8000e2c <PE_SubStateMachine_Generic+0xc4>
 8000d8a:	291d      	cmp	r1, #29
 8000d8c:	d100      	bne.n	8000d90 <PE_SubStateMachine_Generic+0x28>
 8000d8e:	e092      	b.n	8000eb6 <PE_SubStateMachine_Generic+0x14e>
 8000d90:	2927      	cmp	r1, #39	; 0x27
 8000d92:	d100      	bne.n	8000d96 <PE_SubStateMachine_Generic+0x2e>
 8000d94:	e0b0      	b.n	8000ef8 <PE_SubStateMachine_Generic+0x190>
 8000d96:	2928      	cmp	r1, #40	; 0x28
 8000d98:	d100      	bne.n	8000d9c <PE_SubStateMachine_Generic+0x34>
 8000d9a:	e0b9      	b.n	8000f10 <PE_SubStateMachine_Generic+0x1a8>
 8000d9c:	2929      	cmp	r1, #41	; 0x29
 8000d9e:	d100      	bne.n	8000da2 <PE_SubStateMachine_Generic+0x3a>
 8000da0:	e0c0      	b.n	8000f24 <PE_SubStateMachine_Generic+0x1bc>
 8000da2:	292c      	cmp	r1, #44	; 0x2c
 8000da4:	d100      	bne.n	8000da8 <PE_SubStateMachine_Generic+0x40>
 8000da6:	e2bc      	b.n	8001322 <PE_SubStateMachine_Generic+0x5ba>
 8000da8:	2930      	cmp	r1, #48	; 0x30
 8000daa:	d100      	bne.n	8000dae <PE_SubStateMachine_Generic+0x46>
 8000dac:	e1de      	b.n	800116c <PE_SubStateMachine_Generic+0x404>
 8000dae:	293a      	cmp	r1, #58	; 0x3a
 8000db0:	d100      	bne.n	8000db4 <PE_SubStateMachine_Generic+0x4c>
 8000db2:	e28c      	b.n	80012ce <PE_SubStateMachine_Generic+0x566>
 8000db4:	293b      	cmp	r1, #59	; 0x3b
 8000db6:	d100      	bne.n	8000dba <PE_SubStateMachine_Generic+0x52>
 8000db8:	e270      	b.n	800129c <PE_SubStateMachine_Generic+0x534>
 8000dba:	293c      	cmp	r1, #60	; 0x3c
 8000dbc:	d100      	bne.n	8000dc0 <PE_SubStateMachine_Generic+0x58>
 8000dbe:	e247      	b.n	8001250 <PE_SubStateMachine_Generic+0x4e8>
 8000dc0:	294b      	cmp	r1, #75	; 0x4b
 8000dc2:	d100      	bne.n	8000dc6 <PE_SubStateMachine_Generic+0x5e>
 8000dc4:	e114      	b.n	8000ff0 <PE_SubStateMachine_Generic+0x288>
 8000dc6:	2963      	cmp	r1, #99	; 0x63
 8000dc8:	d100      	bne.n	8000dcc <PE_SubStateMachine_Generic+0x64>
 8000dca:	e178      	b.n	80010be <PE_SubStateMachine_Generic+0x356>
 8000dcc:	2964      	cmp	r1, #100	; 0x64
 8000dce:	d100      	bne.n	8000dd2 <PE_SubStateMachine_Generic+0x6a>
 8000dd0:	e1a0      	b.n	8001114 <PE_SubStateMachine_Generic+0x3ac>
 8000dd2:	2967      	cmp	r1, #103	; 0x67
 8000dd4:	d100      	bne.n	8000dd8 <PE_SubStateMachine_Generic+0x70>
 8000dd6:	e120      	b.n	800101a <PE_SubStateMachine_Generic+0x2b2>
 8000dd8:	2968      	cmp	r1, #104	; 0x68
 8000dda:	d100      	bne.n	8000dde <PE_SubStateMachine_Generic+0x76>
 8000ddc:	e138      	b.n	8001050 <PE_SubStateMachine_Generic+0x2e8>
 8000dde:	2974      	cmp	r1, #116	; 0x74
 8000de0:	d100      	bne.n	8000de4 <PE_SubStateMachine_Generic+0x7c>
 8000de2:	e1f3      	b.n	80011cc <PE_SubStateMachine_Generic+0x464>
 8000de4:	2993      	cmp	r1, #147	; 0x93
 8000de6:	d100      	bne.n	8000dea <PE_SubStateMachine_Generic+0x82>
 8000de8:	e0a6      	b.n	8000f38 <PE_SubStateMachine_Generic+0x1d0>
 8000dea:	2994      	cmp	r1, #148	; 0x94
 8000dec:	d100      	bne.n	8000df0 <PE_SubStateMachine_Generic+0x88>
 8000dee:	e0a7      	b.n	8000f40 <PE_SubStateMachine_Generic+0x1d8>
 8000df0:	2995      	cmp	r1, #149	; 0x95
 8000df2:	d100      	bne.n	8000df6 <PE_SubStateMachine_Generic+0x8e>
 8000df4:	e0bd      	b.n	8000f72 <PE_SubStateMachine_Generic+0x20a>
 8000df6:	2999      	cmp	r1, #153	; 0x99
 8000df8:	d000      	beq.n	8000dfc <PE_SubStateMachine_Generic+0x94>
 8000dfa:	e297      	b.n	800132c <PE_SubStateMachine_Generic+0x5c4>
 8000dfc:	2106      	movs	r1, #6
 8000dfe:	0020      	movs	r0, r4
 8000e00:	f7ff fd44 	bl	800088c <PE_Send_RESET>
 8000e04:	e220      	b.n	8001248 <PE_SubStateMachine_Generic+0x4e0>
 8000e06:	6861      	ldr	r1, [r4, #4]
 8000e08:	6809      	ldr	r1, [r1, #0]
 8000e0a:	0889      	lsrs	r1, r1, #2
 8000e0c:	400e      	ands	r6, r1
 8000e0e:	d002      	beq.n	8000e16 <PE_SubStateMachine_Generic+0xae>
 8000e10:	6960      	ldr	r0, [r4, #20]
 8000e12:	0741      	lsls	r1, r0, #29
 8000e14:	0fc8      	lsrs	r0, r1, #31
 8000e16:	9000      	str	r0, [sp, #0]
 8000e18:	2319      	movs	r3, #25
 8000e1a:	2208      	movs	r2, #8
 8000e1c:	2100      	movs	r1, #0
 8000e1e:	0020      	movs	r0, r4
 8000e20:	f000 fb76 	bl	8001510 <PE_Send_CtrlMessage>
 8000e24:	2800      	cmp	r0, #0
 8000e26:	d156      	bne.n	8000ed6 <PE_SubStateMachine_Generic+0x16e>
 8000e28:	2007      	movs	r0, #7
 8000e2a:	e107      	b.n	800103c <PE_SubStateMachine_Generic+0x2d4>
 8000e2c:	980e      	ldr	r0, [sp, #56]	; 0x38
 8000e2e:	7800      	ldrb	r0, [r0, #0]
 8000e30:	2811      	cmp	r0, #17
 8000e32:	d13c      	bne.n	8000eae <PE_SubStateMachine_Generic+0x146>
 8000e34:	8ea0      	ldrh	r0, [r4, #52]	; 0x34
 8000e36:	0bc1      	lsrs	r1, r0, #15
 8000e38:	d11e      	bne.n	8000e78 <PE_SubStateMachine_Generic+0x110>
 8000e3a:	0441      	lsls	r1, r0, #17
 8000e3c:	0f49      	lsrs	r1, r1, #29
 8000e3e:	d01b      	beq.n	8000e78 <PE_SubStateMachine_Generic+0x110>
 8000e40:	06c0      	lsls	r0, r0, #27
 8000e42:	0ec0      	lsrs	r0, r0, #27
 8000e44:	2804      	cmp	r0, #4
 8000e46:	d117      	bne.n	8000e78 <PE_SubStateMachine_Generic+0x110>
 8000e48:	008b      	lsls	r3, r1, #2
 8000e4a:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8000e4c:	1c82      	adds	r2, r0, #2
 8000e4e:	2105      	movs	r1, #5
 8000e50:	7c20      	ldrb	r0, [r4, #16]
 8000e52:	68a6      	ldr	r6, [r4, #8]
 8000e54:	69b6      	ldr	r6, [r6, #24]
 8000e56:	47b0      	blx	r6
 8000e58:	980e      	ldr	r0, [sp, #56]	; 0x38
 8000e5a:	7800      	ldrb	r0, [r0, #0]
 8000e5c:	2814      	cmp	r0, #20
 8000e5e:	d004      	beq.n	8000e6a <PE_SubStateMachine_Generic+0x102>
 8000e60:	990e      	ldr	r1, [sp, #56]	; 0x38
 8000e62:	700f      	strb	r7, [r1, #0]
 8000e64:	0020      	movs	r0, r4
 8000e66:	f7ff fd76 	bl	8000956 <PE_Clear_RxEvent>
 8000e6a:	2003      	movs	r0, #3
 8000e6c:	7460      	strb	r0, [r4, #17]
 8000e6e:	9504      	str	r5, [sp, #16]
 8000e70:	2107      	movs	r1, #7
 8000e72:	7c20      	ldrb	r0, [r4, #16]
 8000e74:	f7ff fb04 	bl	8000480 <USBPD_PE_Notification>
 8000e78:	8ea0      	ldrh	r0, [r4, #52]	; 0x34
 8000e7a:	21f0      	movs	r1, #240	; 0xf0
 8000e7c:	0209      	lsls	r1, r1, #8
 8000e7e:	4001      	ands	r1, r0
 8000e80:	d115      	bne.n	8000eae <PE_SubStateMachine_Generic+0x146>
 8000e82:	06c0      	lsls	r0, r0, #27
 8000e84:	0ec0      	lsrs	r0, r0, #27
 8000e86:	2804      	cmp	r0, #4
 8000e88:	d001      	beq.n	8000e8e <PE_SubStateMachine_Generic+0x126>
 8000e8a:	2810      	cmp	r0, #16
 8000e8c:	d10f      	bne.n	8000eae <PE_SubStateMachine_Generic+0x146>
 8000e8e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8000e90:	7800      	ldrb	r0, [r0, #0]
 8000e92:	2814      	cmp	r0, #20
 8000e94:	d004      	beq.n	8000ea0 <PE_SubStateMachine_Generic+0x138>
 8000e96:	980e      	ldr	r0, [sp, #56]	; 0x38
 8000e98:	7007      	strb	r7, [r0, #0]
 8000e9a:	0020      	movs	r0, r4
 8000e9c:	f7ff fd5b 	bl	8000956 <PE_Clear_RxEvent>
 8000ea0:	2003      	movs	r0, #3
 8000ea2:	7460      	strb	r0, [r4, #17]
 8000ea4:	9504      	str	r5, [sp, #16]
 8000ea6:	2108      	movs	r1, #8
 8000ea8:	7c20      	ldrb	r0, [r4, #16]
 8000eaa:	f7ff fae9 	bl	8000480 <USBPD_PE_Notification>
 8000eae:	8be0      	ldrh	r0, [r4, #30]
 8000eb0:	2180      	movs	r1, #128	; 0x80
 8000eb2:	0209      	lsls	r1, r1, #8
 8000eb4:	e099      	b.n	8000fea <PE_SubStateMachine_Generic+0x282>
 8000eb6:	9505      	str	r5, [sp, #20]
 8000eb8:	ab05      	add	r3, sp, #20
 8000eba:	aa06      	add	r2, sp, #24
 8000ebc:	2101      	movs	r1, #1
 8000ebe:	7c20      	ldrb	r0, [r4, #16]
 8000ec0:	68a5      	ldr	r5, [r4, #8]
 8000ec2:	696d      	ldr	r5, [r5, #20]
 8000ec4:	47a8      	blx	r5
 8000ec6:	2104      	movs	r1, #4
 8000ec8:	9805      	ldr	r0, [sp, #20]
 8000eca:	f000 fabf 	bl	800144c <PE_CheckDataSizeFromGetDataInfo>
 8000ece:	2800      	cmp	r0, #0
 8000ed0:	d002      	beq.n	8000ed8 <PE_SubStateMachine_Generic+0x170>
 8000ed2:	2003      	movs	r0, #3
 8000ed4:	7460      	strb	r0, [r4, #17]
 8000ed6:	e22a      	b.n	800132e <PE_SubStateMachine_Generic+0x5c6>
 8000ed8:	9002      	str	r0, [sp, #8]
 8000eda:	2003      	movs	r0, #3
 8000edc:	9001      	str	r0, [sp, #4]
 8000ede:	9805      	ldr	r0, [sp, #20]
 8000ee0:	0880      	lsrs	r0, r0, #2
 8000ee2:	9000      	str	r0, [sp, #0]
 8000ee4:	ab06      	add	r3, sp, #24
 8000ee6:	2204      	movs	r2, #4
 8000ee8:	2100      	movs	r1, #0
 8000eea:	0020      	movs	r0, r4
 8000eec:	f000 fb3b 	bl	8001566 <PE_Send_DataMessage>
 8000ef0:	2800      	cmp	r0, #0
 8000ef2:	d1f0      	bne.n	8000ed6 <PE_SubStateMachine_Generic+0x16e>
 8000ef4:	210a      	movs	r1, #10
 8000ef6:	e165      	b.n	80011c4 <PE_SubStateMachine_Generic+0x45c>
 8000ef8:	2012      	movs	r0, #18
 8000efa:	7720      	strb	r0, [r4, #28]
 8000efc:	2105      	movs	r1, #5
 8000efe:	7c20      	ldrb	r0, [r4, #16]
 8000f00:	f004 feab 	bl	8005c5a <USBDPD_PRL_BistCarrierEyeMode>
 8000f04:	2028      	movs	r0, #40	; 0x28
 8000f06:	7460      	strb	r0, [r4, #17]
 8000f08:	484f      	ldr	r0, [pc, #316]	; (8001048 <PE_SubStateMachine_Generic+0x2e0>)
 8000f0a:	83e0      	strh	r0, [r4, #30]
 8000f0c:	202d      	movs	r0, #45	; 0x2d
 8000f0e:	e099      	b.n	8001044 <PE_SubStateMachine_Generic+0x2dc>
 8000f10:	8be0      	ldrh	r0, [r4, #30]
 8000f12:	03f1      	lsls	r1, r6, #15
 8000f14:	4288      	cmp	r0, r1
 8000f16:	d10e      	bne.n	8000f36 <PE_SubStateMachine_Generic+0x1ce>
 8000f18:	2105      	movs	r1, #5
 8000f1a:	7c20      	ldrb	r0, [r4, #16]
 8000f1c:	f004 fea5 	bl	8005c6a <USBDPD_PRL_BistCarrierEyeModeExit>
 8000f20:	83e5      	strh	r5, [r4, #30]
 8000f22:	e191      	b.n	8001248 <PE_SubStateMachine_Generic+0x4e0>
 8000f24:	980e      	ldr	r0, [sp, #56]	; 0x38
 8000f26:	7800      	ldrb	r0, [r0, #0]
 8000f28:	2814      	cmp	r0, #20
 8000f2a:	d004      	beq.n	8000f36 <PE_SubStateMachine_Generic+0x1ce>
 8000f2c:	980e      	ldr	r0, [sp, #56]	; 0x38
 8000f2e:	7007      	strb	r7, [r0, #0]
 8000f30:	0020      	movs	r0, r4
 8000f32:	f7ff fd10 	bl	8000956 <PE_Clear_RxEvent>
 8000f36:	e1fa      	b.n	800132e <PE_SubStateMachine_Generic+0x5c6>
 8000f38:	0020      	movs	r0, r4
 8000f3a:	f000 f9fb 	bl	8001334 <PE_SubStateMachine_ReceiveDRS>
 8000f3e:	e1f6      	b.n	800132e <PE_SubStateMachine_Generic+0x5c6>
 8000f40:	6861      	ldr	r1, [r4, #4]
 8000f42:	6809      	ldr	r1, [r1, #0]
 8000f44:	0889      	lsrs	r1, r1, #2
 8000f46:	400e      	ands	r6, r1
 8000f48:	d002      	beq.n	8000f50 <PE_SubStateMachine_Generic+0x1e8>
 8000f4a:	6960      	ldr	r0, [r4, #20]
 8000f4c:	0741      	lsls	r1, r0, #29
 8000f4e:	0fc8      	lsrs	r0, r1, #31
 8000f50:	9000      	str	r0, [sp, #0]
 8000f52:	2395      	movs	r3, #149	; 0x95
 8000f54:	2209      	movs	r2, #9
 8000f56:	2100      	movs	r1, #0
 8000f58:	0020      	movs	r0, r4
 8000f5a:	f000 fad9 	bl	8001510 <PE_Send_CtrlMessage>
 8000f5e:	2800      	cmp	r0, #0
 8000f60:	d1ed      	bne.n	8000f3e <PE_SubStateMachine_Generic+0x1d6>
 8000f62:	2010      	movs	r0, #16
 8000f64:	7720      	strb	r0, [r4, #28]
 8000f66:	4839      	ldr	r0, [pc, #228]	; (800104c <PE_SubStateMachine_Generic+0x2e4>)
 8000f68:	83e0      	strh	r0, [r4, #30]
 8000f6a:	201b      	movs	r0, #27
 8000f6c:	9004      	str	r0, [sp, #16]
 8000f6e:	2122      	movs	r1, #34	; 0x22
 8000f70:	e128      	b.n	80011c4 <PE_SubStateMachine_Generic+0x45c>
 8000f72:	980e      	ldr	r0, [sp, #56]	; 0x38
 8000f74:	7800      	ldrb	r0, [r0, #0]
 8000f76:	2814      	cmp	r0, #20
 8000f78:	d035      	beq.n	8000fe6 <PE_SubStateMachine_Generic+0x27e>
 8000f7a:	8ea0      	ldrh	r0, [r4, #52]	; 0x34
 8000f7c:	21f0      	movs	r1, #240	; 0xf0
 8000f7e:	0209      	lsls	r1, r1, #8
 8000f80:	4001      	ands	r1, r0
 8000f82:	d130      	bne.n	8000fe6 <PE_SubStateMachine_Generic+0x27e>
 8000f84:	211f      	movs	r1, #31
 8000f86:	231f      	movs	r3, #31
 8000f88:	4003      	ands	r3, r0
 8000f8a:	2b03      	cmp	r3, #3
 8000f8c:	d006      	beq.n	8000f9c <PE_SubStateMachine_Generic+0x234>
 8000f8e:	2b04      	cmp	r3, #4
 8000f90:	d008      	beq.n	8000fa4 <PE_SubStateMachine_Generic+0x23c>
 8000f92:	2b0c      	cmp	r3, #12
 8000f94:	d006      	beq.n	8000fa4 <PE_SubStateMachine_Generic+0x23c>
 8000f96:	2b10      	cmp	r3, #16
 8000f98:	d015      	beq.n	8000fc6 <PE_SubStateMachine_Generic+0x25e>
 8000f9a:	e024      	b.n	8000fe6 <PE_SubStateMachine_Generic+0x27e>
 8000f9c:	0020      	movs	r0, r4
 8000f9e:	f000 fa6d 	bl	800147c <PE_SwitchDataRole>
 8000fa2:	e008      	b.n	8000fb6 <PE_SubStateMachine_Generic+0x24e>
 8000fa4:	4001      	ands	r1, r0
 8000fa6:	290c      	cmp	r1, #12
 8000fa8:	d101      	bne.n	8000fae <PE_SubStateMachine_Generic+0x246>
 8000faa:	2126      	movs	r1, #38	; 0x26
 8000fac:	e000      	b.n	8000fb0 <PE_SubStateMachine_Generic+0x248>
 8000fae:	2127      	movs	r1, #39	; 0x27
 8000fb0:	7c20      	ldrb	r0, [r4, #16]
 8000fb2:	f7ff fa65 	bl	8000480 <USBPD_PE_Notification>
 8000fb6:	2003      	movs	r0, #3
 8000fb8:	7460      	strb	r0, [r4, #17]
 8000fba:	9504      	str	r5, [sp, #16]
 8000fbc:	980e      	ldr	r0, [sp, #56]	; 0x38
 8000fbe:	7800      	ldrb	r0, [r0, #0]
 8000fc0:	2814      	cmp	r0, #20
 8000fc2:	d10b      	bne.n	8000fdc <PE_SubStateMachine_Generic+0x274>
 8000fc4:	e00f      	b.n	8000fe6 <PE_SubStateMachine_Generic+0x27e>
 8000fc6:	2128      	movs	r1, #40	; 0x28
 8000fc8:	7c20      	ldrb	r0, [r4, #16]
 8000fca:	f7ff fa59 	bl	8000480 <USBPD_PE_Notification>
 8000fce:	2003      	movs	r0, #3
 8000fd0:	7460      	strb	r0, [r4, #17]
 8000fd2:	9504      	str	r5, [sp, #16]
 8000fd4:	980e      	ldr	r0, [sp, #56]	; 0x38
 8000fd6:	7800      	ldrb	r0, [r0, #0]
 8000fd8:	2814      	cmp	r0, #20
 8000fda:	d004      	beq.n	8000fe6 <PE_SubStateMachine_Generic+0x27e>
 8000fdc:	980e      	ldr	r0, [sp, #56]	; 0x38
 8000fde:	7007      	strb	r7, [r0, #0]
 8000fe0:	0020      	movs	r0, r4
 8000fe2:	f7ff fcb8 	bl	8000956 <PE_Clear_RxEvent>
 8000fe6:	8be0      	ldrh	r0, [r4, #30]
 8000fe8:	03f1      	lsls	r1, r6, #15
 8000fea:	4288      	cmp	r0, r1
 8000fec:	d12b      	bne.n	8001046 <PE_SubStateMachine_Generic+0x2de>
 8000fee:	e12b      	b.n	8001248 <PE_SubStateMachine_Generic+0x4e0>
 8000ff0:	ab03      	add	r3, sp, #12
 8000ff2:	aa05      	add	r2, sp, #20
 8000ff4:	2114      	movs	r1, #20
 8000ff6:	7c20      	ldrb	r0, [r4, #16]
 8000ff8:	68a5      	ldr	r5, [r4, #8]
 8000ffa:	696d      	ldr	r5, [r5, #20]
 8000ffc:	47a8      	blx	r5
 8000ffe:	9803      	ldr	r0, [sp, #12]
 8001000:	2800      	cmp	r0, #0
 8001002:	d100      	bne.n	8001006 <PE_SubStateMachine_Generic+0x29e>
 8001004:	e192      	b.n	800132c <PE_SubStateMachine_Generic+0x5c4>
 8001006:	2000      	movs	r0, #0
 8001008:	9002      	str	r0, [sp, #8]
 800100a:	2003      	movs	r0, #3
 800100c:	9001      	str	r0, [sp, #4]
 800100e:	9803      	ldr	r0, [sp, #12]
 8001010:	0880      	lsrs	r0, r0, #2
 8001012:	9000      	str	r0, [sp, #0]
 8001014:	ab05      	add	r3, sp, #20
 8001016:	220c      	movs	r2, #12
 8001018:	e154      	b.n	80012c4 <PE_SubStateMachine_Generic+0x55c>
 800101a:	6861      	ldr	r1, [r4, #4]
 800101c:	6809      	ldr	r1, [r1, #0]
 800101e:	0889      	lsrs	r1, r1, #2
 8001020:	4031      	ands	r1, r6
 8001022:	d000      	beq.n	8001026 <PE_SubStateMachine_Generic+0x2be>
 8001024:	2001      	movs	r0, #1
 8001026:	9000      	str	r0, [sp, #0]
 8001028:	2368      	movs	r3, #104	; 0x68
 800102a:	2218      	movs	r2, #24
 800102c:	2031      	movs	r0, #49	; 0x31
 800102e:	5c21      	ldrb	r1, [r4, r0]
 8001030:	0020      	movs	r0, r4
 8001032:	f000 fa6d 	bl	8001510 <PE_Send_CtrlMessage>
 8001036:	2800      	cmp	r0, #0
 8001038:	d105      	bne.n	8001046 <PE_SubStateMachine_Generic+0x2de>
 800103a:	200f      	movs	r0, #15
 800103c:	7720      	strb	r0, [r4, #28]
 800103e:	4803      	ldr	r0, [pc, #12]	; (800104c <PE_SubStateMachine_Generic+0x2e4>)
 8001040:	83e0      	strh	r0, [r4, #30]
 8001042:	201b      	movs	r0, #27
 8001044:	9004      	str	r0, [sp, #16]
 8001046:	e172      	b.n	800132e <PE_SubStateMachine_Generic+0x5c6>
 8001048:	0000802d 	.word	0x0000802d
 800104c:	0000801b 	.word	0x0000801b
 8001050:	980e      	ldr	r0, [sp, #56]	; 0x38
 8001052:	7800      	ldrb	r0, [r0, #0]
 8001054:	2814      	cmp	r0, #20
 8001056:	d023      	beq.n	80010a0 <PE_SubStateMachine_Generic+0x338>
 8001058:	2030      	movs	r0, #48	; 0x30
 800105a:	5c20      	ldrb	r0, [r4, r0]
 800105c:	2131      	movs	r1, #49	; 0x31
 800105e:	5c61      	ldrb	r1, [r4, r1]
 8001060:	4288      	cmp	r0, r1
 8001062:	d11d      	bne.n	80010a0 <PE_SubStateMachine_Generic+0x338>
 8001064:	8ea0      	ldrh	r0, [r4, #52]	; 0x34
 8001066:	0bc1      	lsrs	r1, r0, #15
 8001068:	d11a      	bne.n	80010a0 <PE_SubStateMachine_Generic+0x338>
 800106a:	0b01      	lsrs	r1, r0, #12
 800106c:	0749      	lsls	r1, r1, #29
 800106e:	d017      	beq.n	80010a0 <PE_SubStateMachine_Generic+0x338>
 8001070:	06c0      	lsls	r0, r0, #27
 8001072:	0ec0      	lsrs	r0, r0, #27
 8001074:	280c      	cmp	r0, #12
 8001076:	d113      	bne.n	80010a0 <PE_SubStateMachine_Generic+0x338>
 8001078:	2304      	movs	r3, #4
 800107a:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800107c:	1c82      	adds	r2, r0, #2
 800107e:	2114      	movs	r1, #20
 8001080:	7c20      	ldrb	r0, [r4, #16]
 8001082:	68a6      	ldr	r6, [r4, #8]
 8001084:	69b6      	ldr	r6, [r6, #24]
 8001086:	47b0      	blx	r6
 8001088:	2003      	movs	r0, #3
 800108a:	7460      	strb	r0, [r4, #17]
 800108c:	9504      	str	r5, [sp, #16]
 800108e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8001090:	7800      	ldrb	r0, [r0, #0]
 8001092:	2814      	cmp	r0, #20
 8001094:	d004      	beq.n	80010a0 <PE_SubStateMachine_Generic+0x338>
 8001096:	980e      	ldr	r0, [sp, #56]	; 0x38
 8001098:	7007      	strb	r7, [r0, #0]
 800109a:	0020      	movs	r0, r4
 800109c:	f7ff fc5b 	bl	8000956 <PE_Clear_RxEvent>
 80010a0:	8be0      	ldrh	r0, [r4, #30]
 80010a2:	2180      	movs	r1, #128	; 0x80
 80010a4:	0209      	lsls	r1, r1, #8
 80010a6:	4288      	cmp	r0, r1
 80010a8:	d108      	bne.n	80010bc <PE_SubStateMachine_Generic+0x354>
 80010aa:	2011      	movs	r0, #17
 80010ac:	e0cd      	b.n	800124a <PE_SubStateMachine_Generic+0x4e2>
 80010ae:	9500      	str	r5, [sp, #0]
 80010b0:	2303      	movs	r3, #3
 80010b2:	2210      	movs	r2, #16
 80010b4:	2100      	movs	r1, #0
 80010b6:	0020      	movs	r0, r4
 80010b8:	f000 fa2a 	bl	8001510 <PE_Send_CtrlMessage>
 80010bc:	e137      	b.n	800132e <PE_SubStateMachine_Generic+0x5c6>
 80010be:	ab03      	add	r3, sp, #12
 80010c0:	48c9      	ldr	r0, [pc, #804]	; (80013e8 <.text_73>)
 80010c2:	1822      	adds	r2, r4, r0
 80010c4:	2108      	movs	r1, #8
 80010c6:	7c20      	ldrb	r0, [r4, #16]
 80010c8:	68a7      	ldr	r7, [r4, #8]
 80010ca:	697f      	ldr	r7, [r7, #20]
 80010cc:	47b8      	blx	r7
 80010ce:	2119      	movs	r1, #25
 80010d0:	9803      	ldr	r0, [sp, #12]
 80010d2:	f000 f9bb 	bl	800144c <PE_CheckDataSizeFromGetDataInfo>
 80010d6:	2800      	cmp	r0, #0
 80010d8:	d129      	bne.n	800112e <PE_SubStateMachine_Generic+0x3c6>
 80010da:	48c4      	ldr	r0, [pc, #784]	; (80013ec <.text_74>)
 80010dc:	1826      	adds	r6, r4, r0
 80010de:	7035      	strb	r5, [r6, #0]
 80010e0:	7075      	strb	r5, [r6, #1]
 80010e2:	7c20      	ldrb	r0, [r4, #16]
 80010e4:	f7ff fe2e 	bl	8000d44 <PE_Get_UnchunkedSupport>
 80010e8:	2800      	cmp	r0, #0
 80010ea:	d103      	bne.n	80010f4 <PE_SubStateMachine_Generic+0x38c>
 80010ec:	7870      	ldrb	r0, [r6, #1]
 80010ee:	2180      	movs	r1, #128	; 0x80
 80010f0:	4301      	orrs	r1, r0
 80010f2:	7071      	strb	r1, [r6, #1]
 80010f4:	9502      	str	r5, [sp, #8]
 80010f6:	2003      	movs	r0, #3
 80010f8:	9001      	str	r0, [sp, #4]
 80010fa:	9803      	ldr	r0, [sp, #12]
 80010fc:	1d00      	adds	r0, r0, #4
 80010fe:	b280      	uxth	r0, r0
 8001100:	9000      	str	r0, [sp, #0]
 8001102:	48bb      	ldr	r0, [pc, #748]	; (80013f0 <.text_75>)
 8001104:	1823      	adds	r3, r4, r0
 8001106:	2201      	movs	r2, #1
 8001108:	2100      	movs	r1, #0
 800110a:	0020      	movs	r0, r4
 800110c:	f000 fb5e 	bl	80017cc <PE_Send_ExtendedMessage>
 8001110:	2148      	movs	r1, #72	; 0x48
 8001112:	e057      	b.n	80011c4 <PE_SubStateMachine_Generic+0x45c>
 8001114:	ab03      	add	r3, sp, #12
 8001116:	48b4      	ldr	r0, [pc, #720]	; (80013e8 <.text_73>)
 8001118:	1822      	adds	r2, r4, r0
 800111a:	2113      	movs	r1, #19
 800111c:	7c20      	ldrb	r0, [r4, #16]
 800111e:	68a7      	ldr	r7, [r4, #8]
 8001120:	697f      	ldr	r7, [r7, #20]
 8001122:	47b8      	blx	r7
 8001124:	2118      	movs	r1, #24
 8001126:	9803      	ldr	r0, [sp, #12]
 8001128:	f000 f990 	bl	800144c <PE_CheckDataSizeFromGetDataInfo>
 800112c:	2800      	cmp	r0, #0
 800112e:	d000      	beq.n	8001132 <PE_SubStateMachine_Generic+0x3ca>
 8001130:	e0fc      	b.n	800132c <PE_SubStateMachine_Generic+0x5c4>
 8001132:	48ae      	ldr	r0, [pc, #696]	; (80013ec <.text_74>)
 8001134:	1826      	adds	r6, r4, r0
 8001136:	7035      	strb	r5, [r6, #0]
 8001138:	7075      	strb	r5, [r6, #1]
 800113a:	7c20      	ldrb	r0, [r4, #16]
 800113c:	f7ff fe02 	bl	8000d44 <PE_Get_UnchunkedSupport>
 8001140:	2800      	cmp	r0, #0
 8001142:	d103      	bne.n	800114c <PE_SubStateMachine_Generic+0x3e4>
 8001144:	7870      	ldrb	r0, [r6, #1]
 8001146:	2180      	movs	r1, #128	; 0x80
 8001148:	4301      	orrs	r1, r0
 800114a:	7071      	strb	r1, [r6, #1]
 800114c:	9502      	str	r5, [sp, #8]
 800114e:	2003      	movs	r0, #3
 8001150:	9001      	str	r0, [sp, #4]
 8001152:	9803      	ldr	r0, [sp, #12]
 8001154:	1d00      	adds	r0, r0, #4
 8001156:	b280      	uxth	r0, r0
 8001158:	9000      	str	r0, [sp, #0]
 800115a:	48a5      	ldr	r0, [pc, #660]	; (80013f0 <.text_75>)
 800115c:	1823      	adds	r3, r4, r0
 800115e:	220f      	movs	r2, #15
 8001160:	2100      	movs	r1, #0
 8001162:	0020      	movs	r0, r4
 8001164:	f000 fb32 	bl	80017cc <PE_Send_ExtendedMessage>
 8001168:	2161      	movs	r1, #97	; 0x61
 800116a:	e02b      	b.n	80011c4 <PE_SubStateMachine_Generic+0x45c>
 800116c:	ab03      	add	r3, sp, #12
 800116e:	489e      	ldr	r0, [pc, #632]	; (80013e8 <.text_73>)
 8001170:	1822      	adds	r2, r4, r0
 8001172:	2109      	movs	r1, #9
 8001174:	7c20      	ldrb	r0, [r4, #16]
 8001176:	68a7      	ldr	r7, [r4, #8]
 8001178:	697f      	ldr	r7, [r7, #20]
 800117a:	47b8      	blx	r7
 800117c:	2107      	movs	r1, #7
 800117e:	9803      	ldr	r0, [sp, #12]
 8001180:	f000 f964 	bl	800144c <PE_CheckDataSizeFromGetDataInfo>
 8001184:	2800      	cmp	r0, #0
 8001186:	d170      	bne.n	800126a <PE_SubStateMachine_Generic+0x502>
 8001188:	4998      	ldr	r1, [pc, #608]	; (80013ec <.text_74>)
 800118a:	5465      	strb	r5, [r4, r1]
 800118c:	1860      	adds	r0, r4, r1
 800118e:	7045      	strb	r5, [r0, #1]
 8001190:	7c20      	ldrb	r0, [r4, #16]
 8001192:	f7ff fdd7 	bl	8000d44 <PE_Get_UnchunkedSupport>
 8001196:	2800      	cmp	r0, #0
 8001198:	d105      	bne.n	80011a6 <PE_SubStateMachine_Generic+0x43e>
 800119a:	4894      	ldr	r0, [pc, #592]	; (80013ec <.text_74>)
 800119c:	1820      	adds	r0, r4, r0
 800119e:	7841      	ldrb	r1, [r0, #1]
 80011a0:	2280      	movs	r2, #128	; 0x80
 80011a2:	430a      	orrs	r2, r1
 80011a4:	7042      	strb	r2, [r0, #1]
 80011a6:	9502      	str	r5, [sp, #8]
 80011a8:	2003      	movs	r0, #3
 80011aa:	9001      	str	r0, [sp, #4]
 80011ac:	9803      	ldr	r0, [sp, #12]
 80011ae:	1d00      	adds	r0, r0, #4
 80011b0:	b280      	uxth	r0, r0
 80011b2:	9000      	str	r0, [sp, #0]
 80011b4:	488e      	ldr	r0, [pc, #568]	; (80013f0 <.text_75>)
 80011b6:	1823      	adds	r3, r4, r0
 80011b8:	2202      	movs	r2, #2
 80011ba:	2100      	movs	r1, #0
 80011bc:	0020      	movs	r0, r4
 80011be:	f000 fb05 	bl	80017cc <PE_Send_ExtendedMessage>
 80011c2:	214f      	movs	r1, #79	; 0x4f
 80011c4:	7c20      	ldrb	r0, [r4, #16]
 80011c6:	f7ff f95b 	bl	8000480 <USBPD_PE_Notification>
 80011ca:	e0b0      	b.n	800132e <PE_SubStateMachine_Generic+0x5c6>
 80011cc:	980e      	ldr	r0, [sp, #56]	; 0x38
 80011ce:	7800      	ldrb	r0, [r0, #0]
 80011d0:	2814      	cmp	r0, #20
 80011d2:	d034      	beq.n	800123e <PE_SubStateMachine_Generic+0x4d6>
 80011d4:	8ea0      	ldrh	r0, [r4, #52]	; 0x34
 80011d6:	0bc1      	lsrs	r1, r0, #15
 80011d8:	d11a      	bne.n	8001210 <PE_SubStateMachine_Generic+0x4a8>
 80011da:	0b01      	lsrs	r1, r0, #12
 80011dc:	0749      	lsls	r1, r1, #29
 80011de:	d017      	beq.n	8001210 <PE_SubStateMachine_Generic+0x4a8>
 80011e0:	06c0      	lsls	r0, r0, #27
 80011e2:	0ec0      	lsrs	r0, r0, #27
 80011e4:	2805      	cmp	r0, #5
 80011e6:	d113      	bne.n	8001210 <PE_SubStateMachine_Generic+0x4a8>
 80011e8:	2304      	movs	r3, #4
 80011ea:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 80011ec:	1d02      	adds	r2, r0, #4
 80011ee:	210f      	movs	r1, #15
 80011f0:	7c20      	ldrb	r0, [r4, #16]
 80011f2:	68a6      	ldr	r6, [r4, #8]
 80011f4:	69b6      	ldr	r6, [r6, #24]
 80011f6:	47b0      	blx	r6
 80011f8:	2003      	movs	r0, #3
 80011fa:	7460      	strb	r0, [r4, #17]
 80011fc:	9504      	str	r5, [sp, #16]
 80011fe:	980e      	ldr	r0, [sp, #56]	; 0x38
 8001200:	7800      	ldrb	r0, [r0, #0]
 8001202:	2814      	cmp	r0, #20
 8001204:	d004      	beq.n	8001210 <PE_SubStateMachine_Generic+0x4a8>
 8001206:	990e      	ldr	r1, [sp, #56]	; 0x38
 8001208:	700f      	strb	r7, [r1, #0]
 800120a:	0020      	movs	r0, r4
 800120c:	f7ff fba3 	bl	8000956 <PE_Clear_RxEvent>
 8001210:	2034      	movs	r0, #52	; 0x34
 8001212:	5c20      	ldrb	r0, [r4, r0]
 8001214:	06c0      	lsls	r0, r0, #27
 8001216:	0ec0      	lsrs	r0, r0, #27
 8001218:	2810      	cmp	r0, #16
 800121a:	d110      	bne.n	800123e <PE_SubStateMachine_Generic+0x4d6>
 800121c:	2159      	movs	r1, #89	; 0x59
 800121e:	7c20      	ldrb	r0, [r4, #16]
 8001220:	f7ff f92e 	bl	8000480 <USBPD_PE_Notification>
 8001224:	83e5      	strh	r5, [r4, #30]
 8001226:	980e      	ldr	r0, [sp, #56]	; 0x38
 8001228:	7800      	ldrb	r0, [r0, #0]
 800122a:	2814      	cmp	r0, #20
 800122c:	d004      	beq.n	8001238 <PE_SubStateMachine_Generic+0x4d0>
 800122e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8001230:	7007      	strb	r7, [r0, #0]
 8001232:	0020      	movs	r0, r4
 8001234:	f7ff fb8f 	bl	8000956 <PE_Clear_RxEvent>
 8001238:	2003      	movs	r0, #3
 800123a:	7460      	strb	r0, [r4, #17]
 800123c:	9504      	str	r5, [sp, #16]
 800123e:	8be0      	ldrh	r0, [r4, #30]
 8001240:	2180      	movs	r1, #128	; 0x80
 8001242:	0209      	lsls	r1, r1, #8
 8001244:	4288      	cmp	r0, r1
 8001246:	d172      	bne.n	800132e <PE_SubStateMachine_Generic+0x5c6>
 8001248:	2003      	movs	r0, #3
 800124a:	7460      	strb	r0, [r4, #17]
 800124c:	9504      	str	r5, [sp, #16]
 800124e:	e06e      	b.n	800132e <PE_SubStateMachine_Generic+0x5c6>
 8001250:	ab03      	add	r3, sp, #12
 8001252:	4865      	ldr	r0, [pc, #404]	; (80013e8 <.text_73>)
 8001254:	1822      	adds	r2, r4, r0
 8001256:	210d      	movs	r1, #13
 8001258:	7c20      	ldrb	r0, [r4, #16]
 800125a:	68a7      	ldr	r7, [r4, #8]
 800125c:	697f      	ldr	r7, [r7, #20]
 800125e:	47b8      	blx	r7
 8001260:	2104      	movs	r1, #4
 8001262:	9803      	ldr	r0, [sp, #12]
 8001264:	f000 f8f2 	bl	800144c <PE_CheckDataSizeFromGetDataInfo>
 8001268:	2800      	cmp	r0, #0
 800126a:	d15f      	bne.n	800132c <PE_SubStateMachine_Generic+0x5c4>
 800126c:	485f      	ldr	r0, [pc, #380]	; (80013ec <.text_74>)
 800126e:	1826      	adds	r6, r4, r0
 8001270:	7035      	strb	r5, [r6, #0]
 8001272:	7075      	strb	r5, [r6, #1]
 8001274:	7c20      	ldrb	r0, [r4, #16]
 8001276:	f7ff fd65 	bl	8000d44 <PE_Get_UnchunkedSupport>
 800127a:	2800      	cmp	r0, #0
 800127c:	d103      	bne.n	8001286 <PE_SubStateMachine_Generic+0x51e>
 800127e:	7870      	ldrb	r0, [r6, #1]
 8001280:	2180      	movs	r1, #128	; 0x80
 8001282:	4301      	orrs	r1, r0
 8001284:	7071      	strb	r1, [r6, #1]
 8001286:	9502      	str	r5, [sp, #8]
 8001288:	2003      	movs	r0, #3
 800128a:	9001      	str	r0, [sp, #4]
 800128c:	9803      	ldr	r0, [sp, #12]
 800128e:	1d00      	adds	r0, r0, #4
 8001290:	b280      	uxth	r0, r0
 8001292:	9000      	str	r0, [sp, #0]
 8001294:	4856      	ldr	r0, [pc, #344]	; (80013f0 <.text_75>)
 8001296:	1823      	adds	r3, r4, r0
 8001298:	2207      	movs	r2, #7
 800129a:	e03d      	b.n	8001318 <PE_SubStateMachine_Generic+0x5b0>
 800129c:	9505      	str	r5, [sp, #20]
 800129e:	ab03      	add	r3, sp, #12
 80012a0:	aa05      	add	r2, sp, #20
 80012a2:	210f      	movs	r1, #15
 80012a4:	7c20      	ldrb	r0, [r4, #16]
 80012a6:	68a5      	ldr	r5, [r4, #8]
 80012a8:	696d      	ldr	r5, [r5, #20]
 80012aa:	47a8      	blx	r5
 80012ac:	2104      	movs	r1, #4
 80012ae:	9803      	ldr	r0, [sp, #12]
 80012b0:	f000 f8cc 	bl	800144c <PE_CheckDataSizeFromGetDataInfo>
 80012b4:	2800      	cmp	r0, #0
 80012b6:	d139      	bne.n	800132c <PE_SubStateMachine_Generic+0x5c4>
 80012b8:	9002      	str	r0, [sp, #8]
 80012ba:	2003      	movs	r0, #3
 80012bc:	9001      	str	r0, [sp, #4]
 80012be:	9600      	str	r6, [sp, #0]
 80012c0:	ab05      	add	r3, sp, #20
 80012c2:	2205      	movs	r2, #5
 80012c4:	2100      	movs	r1, #0
 80012c6:	0020      	movs	r0, r4
 80012c8:	f000 f94d 	bl	8001566 <PE_Send_DataMessage>
 80012cc:	e02f      	b.n	800132e <PE_SubStateMachine_Generic+0x5c6>
 80012ce:	ab03      	add	r3, sp, #12
 80012d0:	4845      	ldr	r0, [pc, #276]	; (80013e8 <.text_73>)
 80012d2:	1822      	adds	r2, r4, r0
 80012d4:	2111      	movs	r1, #17
 80012d6:	7c20      	ldrb	r0, [r4, #16]
 80012d8:	68a7      	ldr	r7, [r4, #8]
 80012da:	697f      	ldr	r7, [r7, #20]
 80012dc:	47b8      	blx	r7
 80012de:	2109      	movs	r1, #9
 80012e0:	9803      	ldr	r0, [sp, #12]
 80012e2:	f000 f8b3 	bl	800144c <PE_CheckDataSizeFromGetDataInfo>
 80012e6:	2800      	cmp	r0, #0
 80012e8:	d120      	bne.n	800132c <PE_SubStateMachine_Generic+0x5c4>
 80012ea:	4840      	ldr	r0, [pc, #256]	; (80013ec <.text_74>)
 80012ec:	1826      	adds	r6, r4, r0
 80012ee:	7035      	strb	r5, [r6, #0]
 80012f0:	7075      	strb	r5, [r6, #1]
 80012f2:	7c20      	ldrb	r0, [r4, #16]
 80012f4:	f7ff fd26 	bl	8000d44 <PE_Get_UnchunkedSupport>
 80012f8:	2800      	cmp	r0, #0
 80012fa:	d103      	bne.n	8001304 <PE_SubStateMachine_Generic+0x59c>
 80012fc:	7870      	ldrb	r0, [r6, #1]
 80012fe:	2180      	movs	r1, #128	; 0x80
 8001300:	4301      	orrs	r1, r0
 8001302:	7071      	strb	r1, [r6, #1]
 8001304:	9502      	str	r5, [sp, #8]
 8001306:	2003      	movs	r0, #3
 8001308:	9001      	str	r0, [sp, #4]
 800130a:	9803      	ldr	r0, [sp, #12]
 800130c:	1d00      	adds	r0, r0, #4
 800130e:	b280      	uxth	r0, r0
 8001310:	9000      	str	r0, [sp, #0]
 8001312:	4837      	ldr	r0, [pc, #220]	; (80013f0 <.text_75>)
 8001314:	1823      	adds	r3, r4, r0
 8001316:	2205      	movs	r2, #5
 8001318:	2100      	movs	r1, #0
 800131a:	0020      	movs	r0, r4
 800131c:	f000 fa56 	bl	80017cc <PE_Send_ExtendedMessage>
 8001320:	e005      	b.n	800132e <PE_SubStateMachine_Generic+0x5c6>
 8001322:	2150      	movs	r1, #80	; 0x50
 8001324:	7c20      	ldrb	r0, [r4, #16]
 8001326:	f7ff f8ab 	bl	8000480 <USBPD_PE_Notification>
 800132a:	e78d      	b.n	8001248 <PE_SubStateMachine_Generic+0x4e0>
 800132c:	7466      	strb	r6, [r4, #17]
 800132e:	9804      	ldr	r0, [sp, #16]
 8001330:	b00f      	add	sp, #60	; 0x3c
 8001332:	bdf0      	pop	{r4, r5, r6, r7, pc}

08001334 <PE_SubStateMachine_ReceiveDRS>:
 8001334:	b538      	push	{r3, r4, r5, lr}
 8001336:	0004      	movs	r4, r0
 8001338:	252a      	movs	r5, #42	; 0x2a
 800133a:	7c20      	ldrb	r0, [r4, #16]
 800133c:	68a1      	ldr	r1, [r4, #8]
 800133e:	6b89      	ldr	r1, [r1, #56]	; 0x38
 8001340:	4788      	blx	r1
 8001342:	280a      	cmp	r0, #10
 8001344:	d002      	beq.n	800134c <PE_SubStateMachine_ReceiveDRS+0x18>
 8001346:	280c      	cmp	r0, #12
 8001348:	d017      	beq.n	800137a <PE_SubStateMachine_ReceiveDRS+0x46>
 800134a:	e00d      	b.n	8001368 <PE_SubStateMachine_ReceiveDRS+0x34>
 800134c:	2000      	movs	r0, #0
 800134e:	9000      	str	r0, [sp, #0]
 8001350:	2303      	movs	r3, #3
 8001352:	2203      	movs	r2, #3
 8001354:	2100      	movs	r1, #0
 8001356:	0020      	movs	r0, r4
 8001358:	f000 f8da 	bl	8001510 <PE_Send_CtrlMessage>
 800135c:	2800      	cmp	r0, #0
 800135e:	d10d      	bne.n	800137c <PE_SubStateMachine_ReceiveDRS+0x48>
 8001360:	0020      	movs	r0, r4
 8001362:	f000 f88b 	bl	800147c <PE_SwitchDataRole>
 8001366:	bd31      	pop	{r0, r4, r5, pc}
 8001368:	6860      	ldr	r0, [r4, #4]
 800136a:	7800      	ldrb	r0, [r0, #0]
 800136c:	0780      	lsls	r0, r0, #30
 800136e:	0f80      	lsrs	r0, r0, #30
 8001370:	2802      	cmp	r0, #2
 8001372:	d102      	bne.n	800137a <PE_SubStateMachine_ReceiveDRS+0x46>
 8001374:	2001      	movs	r0, #1
 8001376:	7460      	strb	r0, [r4, #17]
 8001378:	bd31      	pop	{r0, r4, r5, pc}
 800137a:	7465      	strb	r5, [r4, #17]
 800137c:	bd31      	pop	{r0, r4, r5, pc}

0800137e <PE_UpdateTimer>:
 800137e:	b510      	push	{r4, lr}
 8001380:	0002      	movs	r2, r0
 8001382:	2080      	movs	r0, #128	; 0x80
 8001384:	0200      	lsls	r0, r0, #8
 8001386:	0454      	lsls	r4, r2, #17
 8001388:	0c64      	lsrs	r4, r4, #17
 800138a:	42a1      	cmp	r1, r4
 800138c:	da00      	bge.n	8001390 <PE_UpdateTimer+0x12>
 800138e:	1a50      	subs	r0, r2, r1
 8001390:	b280      	uxth	r0, r0
 8001392:	bd10      	pop	{r4, pc}

08001394 <PE_CallHardResetCallback>:
 8001394:	6883      	ldr	r3, [r0, #8]
 8001396:	685b      	ldr	r3, [r3, #4]
 8001398:	2b00      	cmp	r3, #0
 800139a:	d100      	bne.n	800139e <PE_CallHardResetCallback+0xa>
 800139c:	4770      	bx	lr
 800139e:	b580      	push	{r7, lr}
 80013a0:	7c00      	ldrb	r0, [r0, #16]
 80013a2:	4798      	blx	r3
 80013a4:	bd01      	pop	{r0, pc}

080013a6 <PE_SetPowerNegotiation>:
 80013a6:	b510      	push	{r4, lr}
 80013a8:	6842      	ldr	r2, [r0, #4]
 80013aa:	6813      	ldr	r3, [r2, #0]
 80013ac:	055c      	lsls	r4, r3, #21
 80013ae:	0f64      	lsrs	r4, r4, #29
 80013b0:	42a1      	cmp	r1, r4
 80013b2:	d00b      	beq.n	80013cc <PE_SetPowerNegotiation+0x26>
 80013b4:	4c2e      	ldr	r4, [pc, #184]	; (8001470 <.text_79>)
 80013b6:	401c      	ands	r4, r3
 80013b8:	0209      	lsls	r1, r1, #8
 80013ba:	23e0      	movs	r3, #224	; 0xe0
 80013bc:	00db      	lsls	r3, r3, #3
 80013be:	400b      	ands	r3, r1
 80013c0:	4323      	orrs	r3, r4
 80013c2:	6013      	str	r3, [r2, #0]
 80013c4:	215a      	movs	r1, #90	; 0x5a
 80013c6:	7c00      	ldrb	r0, [r0, #16]
 80013c8:	f7ff f85a 	bl	8000480 <USBPD_PE_Notification>
 80013cc:	bd10      	pop	{r4, pc}

080013ce <USBPD_PE_ExecFastRoleSwapSignalling>:
 80013ce:	b580      	push	{r7, lr}
 80013d0:	4928      	ldr	r1, [pc, #160]	; (8001474 <.text_80>)
 80013d2:	0082      	lsls	r2, r0, #2
 80013d4:	5889      	ldr	r1, [r1, r2]
 80013d6:	694a      	ldr	r2, [r1, #20]
 80013d8:	2380      	movs	r3, #128	; 0x80
 80013da:	029b      	lsls	r3, r3, #10
 80013dc:	4313      	orrs	r3, r2
 80013de:	614b      	str	r3, [r1, #20]
 80013e0:	6889      	ldr	r1, [r1, #8]
 80013e2:	6a89      	ldr	r1, [r1, #40]	; 0x28
 80013e4:	4788      	blx	r1
 80013e6:	bd01      	pop	{r0, pc}

080013e8 <.text_73>:
 80013e8:	00000267 	.word	0x00000267

080013ec <.text_74>:
 80013ec:	00000265 	.word	0x00000265

080013f0 <.text_75>:
 80013f0:	00000263 	.word	0x00000263

080013f4 <PE_CalculateMinTiming>:
 80013f4:	0001      	movs	r1, r0
 80013f6:	2000      	movs	r0, #0
 80013f8:	43c0      	mvns	r0, r0
 80013fa:	0c42      	lsrs	r2, r0, #17
 80013fc:	8c8b      	ldrh	r3, [r1, #36]	; 0x24
 80013fe:	4213      	tst	r3, r2
 8001400:	d001      	beq.n	8001406 <PE_CalculateMinTiming+0x12>
 8001402:	8c88      	ldrh	r0, [r1, #36]	; 0x24
 8001404:	4010      	ands	r0, r2
 8001406:	8c4b      	ldrh	r3, [r1, #34]	; 0x22
 8001408:	4213      	tst	r3, r2
 800140a:	d006      	beq.n	800141a <PE_CalculateMinTiming+0x26>
 800140c:	8c4b      	ldrh	r3, [r1, #34]	; 0x22
 800140e:	4013      	ands	r3, r2
 8001410:	4298      	cmp	r0, r3
 8001412:	d302      	bcc.n	800141a <PE_CalculateMinTiming+0x26>
 8001414:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8001416:	0010      	movs	r0, r2
 8001418:	4008      	ands	r0, r1
 800141a:	4770      	bx	lr

0800141c <PE_SetPowerNegociation>:
 800141c:	b538      	push	{r3, r4, r5, lr}
 800141e:	0005      	movs	r5, r0
 8001420:	000c      	movs	r4, r1
 8001422:	6868      	ldr	r0, [r5, #4]
 8001424:	6800      	ldr	r0, [r0, #0]
 8001426:	0540      	lsls	r0, r0, #21
 8001428:	0f40      	lsrs	r0, r0, #29
 800142a:	4284      	cmp	r4, r0
 800142c:	d003      	beq.n	8001436 <PE_SetPowerNegociation+0x1a>
 800142e:	215a      	movs	r1, #90	; 0x5a
 8001430:	7c28      	ldrb	r0, [r5, #16]
 8001432:	f7ff f825 	bl	8000480 <USBPD_PE_Notification>
 8001436:	6868      	ldr	r0, [r5, #4]
 8001438:	6801      	ldr	r1, [r0, #0]
 800143a:	4a0d      	ldr	r2, [pc, #52]	; (8001470 <.text_79>)
 800143c:	400a      	ands	r2, r1
 800143e:	0221      	lsls	r1, r4, #8
 8001440:	23e0      	movs	r3, #224	; 0xe0
 8001442:	00db      	lsls	r3, r3, #3
 8001444:	400b      	ands	r3, r1
 8001446:	4313      	orrs	r3, r2
 8001448:	6003      	str	r3, [r0, #0]
 800144a:	bd31      	pop	{r0, r4, r5, pc}

0800144c <PE_CheckDataSizeFromGetDataInfo>:
 800144c:	b51c      	push	{r2, r3, r4, lr}
 800144e:	0002      	movs	r2, r0
 8001450:	2000      	movs	r0, #0
 8001452:	428a      	cmp	r2, r1
 8001454:	d20a      	bcs.n	800146c <PE_CheckDataSizeFromGetDataInfo+0x20>
 8001456:	2018      	movs	r0, #24
 8001458:	9000      	str	r0, [sp, #0]
 800145a:	bf00      	nop
 800145c:	a315      	add	r3, pc, #84	; (adr r3, 80014b4 <.text_83>)
 800145e:	2200      	movs	r2, #0
 8001460:	2100      	movs	r1, #0
 8001462:	2006      	movs	r0, #6
 8001464:	4c04      	ldr	r4, [pc, #16]	; (8001478 <.text_81>)
 8001466:	6824      	ldr	r4, [r4, #0]
 8001468:	47a0      	blx	r4
 800146a:	2002      	movs	r0, #2
 800146c:	bd16      	pop	{r1, r2, r4, pc}
	...

08001470 <.text_79>:
 8001470:	fffff8ff 	.word	0xfffff8ff

08001474 <.text_80>:
 8001474:	200001bc 	.word	0x200001bc

08001478 <.text_81>:
 8001478:	20000000 	.word	0x20000000

0800147c <PE_SwitchDataRole>:
 800147c:	b510      	push	{r4, lr}
 800147e:	0004      	movs	r4, r0
 8001480:	6860      	ldr	r0, [r4, #4]
 8001482:	6802      	ldr	r2, [r0, #0]
 8001484:	2101      	movs	r1, #1
 8001486:	08d3      	lsrs	r3, r2, #3
 8001488:	400b      	ands	r3, r1
 800148a:	d107      	bne.n	800149c <PE_SwitchDataRole+0x20>
 800148c:	2308      	movs	r3, #8
 800148e:	4313      	orrs	r3, r2
 8001490:	6003      	str	r3, [r0, #0]
 8001492:	7c20      	ldrb	r0, [r4, #16]
 8001494:	f004 f93b 	bl	800570e <USBPD_PRL_SetHeaderDataRole>
 8001498:	2125      	movs	r1, #37	; 0x25
 800149a:	e007      	b.n	80014ac <PE_SwitchDataRole+0x30>
 800149c:	2108      	movs	r1, #8
 800149e:	438a      	bics	r2, r1
 80014a0:	6002      	str	r2, [r0, #0]
 80014a2:	2100      	movs	r1, #0
 80014a4:	7c20      	ldrb	r0, [r4, #16]
 80014a6:	f004 f932 	bl	800570e <USBPD_PRL_SetHeaderDataRole>
 80014aa:	2124      	movs	r1, #36	; 0x24
 80014ac:	7c20      	ldrb	r0, [r4, #16]
 80014ae:	f7fe ffe7 	bl	8000480 <USBPD_PE_Notification>
 80014b2:	bd10      	pop	{r4, pc}

080014b4 <.text_83>:
 80014b4:	61746144 	.word	0x61746144
 80014b8:	7a695320 	.word	0x7a695320
 80014bc:	73692065 	.word	0x73692065
 80014c0:	746f6e20 	.word	0x746f6e20
 80014c4:	726f6320 	.word	0x726f6320
 80014c8:	74636572 	.word	0x74636572
 80014cc:	00          	.byte	0x00
 80014cd:	00          	.byte	0x00
	...

080014d0 <USBPD_PE_SetTrace>:
 80014d0:	0001      	movs	r1, r0
 80014d2:	d100      	bne.n	80014d6 <USBPD_PE_SetTrace+0x6>
 80014d4:	4805      	ldr	r0, [pc, #20]	; (80014ec <.text_5>)
 80014d6:	4906      	ldr	r1, [pc, #24]	; (80014f0 <.text_6>)
 80014d8:	6008      	str	r0, [r1, #0]
 80014da:	4770      	bx	lr

080014dc <USBPD_PE_CheckLIB>:
 80014dc:	0001      	movs	r1, r0
 80014de:	2000      	movs	r0, #0
 80014e0:	4a04      	ldr	r2, [pc, #16]	; (80014f4 <.text_7>)
 80014e2:	4291      	cmp	r1, r2
 80014e4:	d100      	bne.n	80014e8 <USBPD_PE_CheckLIB+0xc>
 80014e6:	2001      	movs	r0, #1
 80014e8:	4770      	bx	lr
	...

080014ec <.text_5>:
 80014ec:	0800150f 	.word	0x0800150f

080014f0 <.text_6>:
 80014f0:	20000000 	.word	0x20000000

080014f4 <.text_7>:
 80014f4:	30410000 	.word	0x30410000

080014f8 <USBPD_PE_GetMemoryConsumption>:
 80014f8:	b510      	push	{r4, lr}
 80014fa:	f004 f8df 	bl	80056bc <USBPD_PRL_GetMemoryConsumption>
 80014fe:	0004      	movs	r4, r0
 8001500:	f7fe fedd 	bl	80002be <USBPD_CAD_GetMemoryConsumption>
 8001504:	1820      	adds	r0, r4, r0
 8001506:	21e1      	movs	r1, #225	; 0xe1
 8001508:	0109      	lsls	r1, r1, #4
 800150a:	1840      	adds	r0, r0, r1
 800150c:	bd10      	pop	{r4, pc}

0800150e <PE_Trace_Empty>:
 800150e:	4770      	bx	lr

08001510 <PE_Send_CtrlMessage>:
 8001510:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
 8001512:	2501      	movs	r5, #1
 8001514:	0004      	movs	r4, r0
 8001516:	000f      	movs	r7, r1
 8001518:	0016      	movs	r6, r2
 800151a:	6860      	ldr	r0, [r4, #4]
 800151c:	6800      	ldr	r0, [r0, #0]
 800151e:	0b00      	lsrs	r0, r0, #12
 8001520:	4028      	ands	r0, r5
 8001522:	d014      	beq.n	800154e <PE_Send_CtrlMessage+0x3e>
 8001524:	a808      	add	r0, sp, #32
 8001526:	7800      	ldrb	r0, [r0, #0]
 8001528:	9001      	str	r0, [sp, #4]
 800152a:	2002      	movs	r0, #2
 800152c:	9000      	str	r0, [sp, #0]
 800152e:	48a2      	ldr	r0, [pc, #648]	; (80017b8 <.text_5>)
 8001530:	1823      	adds	r3, r4, r0
 8001532:	0032      	movs	r2, r6
 8001534:	0039      	movs	r1, r7
 8001536:	7c20      	ldrb	r0, [r4, #16]
 8001538:	f004 f938 	bl	80057ac <USBPD_PRL_SendMessage>
 800153c:	2803      	cmp	r0, #3
 800153e:	d0ec      	beq.n	800151a <PE_Send_CtrlMessage+0xa>
 8001540:	0039      	movs	r1, r7
 8001542:	2810      	cmp	r0, #16
 8001544:	d00e      	beq.n	8001564 <PE_Send_CtrlMessage+0x54>
 8001546:	2e0d      	cmp	r6, #13
 8001548:	d104      	bne.n	8001554 <PE_Send_CtrlMessage+0x44>
 800154a:	2201      	movs	r2, #1
 800154c:	e003      	b.n	8001556 <PE_Send_CtrlMessage+0x46>
 800154e:	7460      	strb	r0, [r4, #17]
 8001550:	2010      	movs	r0, #16
 8001552:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8001554:	2200      	movs	r2, #0
 8001556:	466b      	mov	r3, sp
 8001558:	7a1b      	ldrb	r3, [r3, #8]
 800155a:	9300      	str	r3, [sp, #0]
 800155c:	0003      	movs	r3, r0
 800155e:	0020      	movs	r0, r4
 8001560:	f000 fc24 	bl	8001dac <PE_CheckSendMessageStatus>
 8001564:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

08001566 <PE_Send_DataMessage>:
 8001566:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001568:	b082      	sub	sp, #8
 800156a:	0004      	movs	r4, r0
 800156c:	2000      	movs	r0, #0
 800156e:	4e93      	ldr	r6, [pc, #588]	; (80017bc <.text_6>)
 8001570:	e00c      	b.n	800158c <PE_Send_DataMessage+0x26>
 8001572:	2100      	movs	r1, #0
 8001574:	0082      	lsls	r2, r0, #2
 8001576:	18a2      	adds	r2, r4, r2
 8001578:	1855      	adds	r5, r2, r1
 800157a:	681a      	ldr	r2, [r3, #0]
 800157c:	00cf      	lsls	r7, r1, #3
 800157e:	40fa      	lsrs	r2, r7
 8001580:	55aa      	strb	r2, [r5, r6]
 8001582:	1c49      	adds	r1, r1, #1
 8001584:	2904      	cmp	r1, #4
 8001586:	d3f5      	bcc.n	8001574 <PE_Send_DataMessage+0xe>
 8001588:	1d1b      	adds	r3, r3, #4
 800158a:	1c40      	adds	r0, r0, #1
 800158c:	990a      	ldr	r1, [sp, #40]	; 0x28
 800158e:	4288      	cmp	r0, r1
 8001590:	d3ef      	bcc.n	8001572 <PE_Send_DataMessage+0xc>
 8001592:	6860      	ldr	r0, [r4, #4]
 8001594:	6800      	ldr	r0, [r0, #0]
 8001596:	04c1      	lsls	r1, r0, #19
 8001598:	0fc9      	lsrs	r1, r1, #31
 800159a:	d01f      	beq.n	80015dc <PE_Send_DataMessage+0x76>
 800159c:	a80c      	add	r0, sp, #48	; 0x30
 800159e:	7800      	ldrb	r0, [r0, #0]
 80015a0:	9001      	str	r0, [sp, #4]
 80015a2:	980a      	ldr	r0, [sp, #40]	; 0x28
 80015a4:	0080      	lsls	r0, r0, #2
 80015a6:	1c80      	adds	r0, r0, #2
 80015a8:	b280      	uxth	r0, r0
 80015aa:	9000      	str	r0, [sp, #0]
 80015ac:	1eb0      	subs	r0, r6, #2
 80015ae:	1823      	adds	r3, r4, r0
 80015b0:	4668      	mov	r0, sp
 80015b2:	7c02      	ldrb	r2, [r0, #16]
 80015b4:	7b01      	ldrb	r1, [r0, #12]
 80015b6:	7c20      	ldrb	r0, [r4, #16]
 80015b8:	f004 f8f8 	bl	80057ac <USBPD_PRL_SendMessage>
 80015bc:	2803      	cmp	r0, #3
 80015be:	d0e8      	beq.n	8001592 <PE_Send_DataMessage+0x2c>
 80015c0:	4669      	mov	r1, sp
 80015c2:	7b09      	ldrb	r1, [r1, #12]
 80015c4:	2810      	cmp	r0, #16
 80015c6:	d007      	beq.n	80015d8 <PE_Send_DataMessage+0x72>
 80015c8:	aa0b      	add	r2, sp, #44	; 0x2c
 80015ca:	7812      	ldrb	r2, [r2, #0]
 80015cc:	9200      	str	r2, [sp, #0]
 80015ce:	0003      	movs	r3, r0
 80015d0:	2200      	movs	r2, #0
 80015d2:	0020      	movs	r0, r4
 80015d4:	f000 fbea 	bl	8001dac <PE_CheckSendMessageStatus>
 80015d8:	b005      	add	sp, #20
 80015da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80015dc:	2010      	movs	r0, #16
 80015de:	e7fb      	b.n	80015d8 <PE_Send_DataMessage+0x72>

080015e0 <PE_Check_ExtendedMessage>:
 80015e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015e2:	0004      	movs	r4, r0
 80015e4:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 80015e6:	7881      	ldrb	r1, [r0, #2]
 80015e8:	78c0      	ldrb	r0, [r0, #3]
 80015ea:	0200      	lsls	r0, r0, #8
 80015ec:	1808      	adds	r0, r1, r0
 80015ee:	4974      	ldr	r1, [pc, #464]	; (80017c0 <.text_7>)
 80015f0:	1861      	adds	r1, r4, r1
 80015f2:	8008      	strh	r0, [r1, #0]
 80015f4:	2234      	movs	r2, #52	; 0x34
 80015f6:	5ca2      	ldrb	r2, [r4, r2]
 80015f8:	06d2      	lsls	r2, r2, #27
 80015fa:	0ed2      	lsrs	r2, r2, #27
 80015fc:	708a      	strb	r2, [r1, #2]
 80015fe:	2501      	movs	r5, #1
 8001600:	0403      	lsls	r3, r0, #16
 8001602:	0e9b      	lsrs	r3, r3, #26
 8001604:	2201      	movs	r2, #1
 8001606:	401a      	ands	r2, r3
 8001608:	0403      	lsls	r3, r0, #16
 800160a:	0edb      	lsrs	r3, r3, #27
 800160c:	071b      	lsls	r3, r3, #28
 800160e:	d003      	beq.n	8001618 <PE_Check_ExtendedMessage+0x38>
 8001610:	0013      	movs	r3, r2
 8001612:	d001      	beq.n	8001618 <PE_Check_ExtendedMessage+0x38>
 8001614:	2034      	movs	r0, #52	; 0x34
 8001616:	e09e      	b.n	8001756 <PE_Check_ExtendedMessage+0x176>
 8001618:	05c6      	lsls	r6, r0, #23
 800161a:	0df6      	lsrs	r6, r6, #23
 800161c:	2300      	movs	r3, #0
 800161e:	0407      	lsls	r7, r0, #16
 8001620:	0fff      	lsrs	r7, r7, #31
 8001622:	d10d      	bne.n	8001640 <PE_Check_ExtendedMessage+0x60>
 8001624:	4867      	ldr	r0, [pc, #412]	; (80017c4 <.text_8>)
 8001626:	5226      	strh	r6, [r4, r0]
 8001628:	4866      	ldr	r0, [pc, #408]	; (80017c4 <.text_8>)
 800162a:	5a20      	ldrh	r0, [r4, r0]
 800162c:	4283      	cmp	r3, r0
 800162e:	d21b      	bcs.n	8001668 <PE_Check_ExtendedMessage+0x88>
 8001630:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8001632:	1d00      	adds	r0, r0, #4
 8001634:	5cc0      	ldrb	r0, [r0, r3]
 8001636:	4a64      	ldr	r2, [pc, #400]	; (80017c8 <.text_9>)
 8001638:	18a2      	adds	r2, r4, r2
 800163a:	54d0      	strb	r0, [r2, r3]
 800163c:	1c5b      	adds	r3, r3, #1
 800163e:	e7f3      	b.n	8001628 <PE_Check_ExtendedMessage+0x48>
 8001640:	27f8      	movs	r7, #248	; 0xf8
 8001642:	01ff      	lsls	r7, r7, #7
 8001644:	4007      	ands	r7, r0
 8001646:	d106      	bne.n	8001656 <PE_Check_ExtendedMessage+0x76>
 8001648:	8ea0      	ldrh	r0, [r4, #52]	; 0x34
 800164a:	0440      	lsls	r0, r0, #17
 800164c:	0f40      	lsrs	r0, r0, #29
 800164e:	2807      	cmp	r0, #7
 8001650:	d30a      	bcc.n	8001668 <PE_Check_ExtendedMessage+0x88>
 8001652:	2e1a      	cmp	r6, #26
 8001654:	d908      	bls.n	8001668 <PE_Check_ExtendedMessage+0x88>
 8001656:	2a00      	cmp	r2, #0
 8001658:	d106      	bne.n	8001668 <PE_Check_ExtendedMessage+0x88>
 800165a:	485a      	ldr	r0, [pc, #360]	; (80017c4 <.text_8>)
 800165c:	5a20      	ldrh	r0, [r4, r0]
 800165e:	42b0      	cmp	r0, r6
 8001660:	d202      	bcs.n	8001668 <PE_Check_ExtendedMessage+0x88>
 8001662:	83e3      	strh	r3, [r4, #30]
 8001664:	2037      	movs	r0, #55	; 0x37
 8001666:	e076      	b.n	8001756 <PE_Check_ExtendedMessage+0x176>
 8001668:	7889      	ldrb	r1, [r1, #2]
 800166a:	2603      	movs	r6, #3
 800166c:	7f22      	ldrb	r2, [r4, #28]
 800166e:	2a00      	cmp	r2, #0
 8001670:	d039      	beq.n	80016e6 <PE_Check_ExtendedMessage+0x106>
 8001672:	2901      	cmp	r1, #1
 8001674:	d008      	beq.n	8001688 <PE_Check_ExtendedMessage+0xa8>
 8001676:	2902      	cmp	r1, #2
 8001678:	d01c      	beq.n	80016b4 <PE_Check_ExtendedMessage+0xd4>
 800167a:	2905      	cmp	r1, #5
 800167c:	d02a      	beq.n	80016d4 <PE_Check_ExtendedMessage+0xf4>
 800167e:	2907      	cmp	r1, #7
 8001680:	d023      	beq.n	80016ca <PE_Check_ExtendedMessage+0xea>
 8001682:	290f      	cmp	r1, #15
 8001684:	d00b      	beq.n	800169e <PE_Check_ExtendedMessage+0xbe>
 8001686:	e094      	b.n	80017b2 <PE_Check_ExtendedMessage+0x1d2>
 8001688:	2319      	movs	r3, #25
 800168a:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800168c:	1d02      	adds	r2, r0, #4
 800168e:	2108      	movs	r1, #8
 8001690:	7c20      	ldrb	r0, [r4, #16]
 8001692:	68a7      	ldr	r7, [r4, #8]
 8001694:	69bf      	ldr	r7, [r7, #24]
 8001696:	47b8      	blx	r7
 8001698:	7466      	strb	r6, [r4, #17]
 800169a:	2147      	movs	r1, #71	; 0x47
 800169c:	e014      	b.n	80016c8 <PE_Check_ExtendedMessage+0xe8>
 800169e:	2318      	movs	r3, #24
 80016a0:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 80016a2:	1d02      	adds	r2, r0, #4
 80016a4:	2113      	movs	r1, #19
 80016a6:	7c20      	ldrb	r0, [r4, #16]
 80016a8:	68a7      	ldr	r7, [r4, #8]
 80016aa:	69bf      	ldr	r7, [r7, #24]
 80016ac:	47b8      	blx	r7
 80016ae:	7466      	strb	r6, [r4, #17]
 80016b0:	2162      	movs	r1, #98	; 0x62
 80016b2:	e009      	b.n	80016c8 <PE_Check_ExtendedMessage+0xe8>
 80016b4:	2307      	movs	r3, #7
 80016b6:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 80016b8:	1d02      	adds	r2, r0, #4
 80016ba:	2109      	movs	r1, #9
 80016bc:	7c20      	ldrb	r0, [r4, #16]
 80016be:	68a7      	ldr	r7, [r4, #8]
 80016c0:	69bf      	ldr	r7, [r7, #24]
 80016c2:	47b8      	blx	r7
 80016c4:	7466      	strb	r6, [r4, #17]
 80016c6:	214e      	movs	r1, #78	; 0x4e
 80016c8:	e2c7      	b.n	8001c5a <.text_21>
 80016ca:	231a      	movs	r3, #26
 80016cc:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 80016ce:	1d02      	adds	r2, r0, #4
 80016d0:	210d      	movs	r1, #13
 80016d2:	e003      	b.n	80016dc <PE_Check_ExtendedMessage+0xfc>
 80016d4:	2309      	movs	r3, #9
 80016d6:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 80016d8:	1d02      	adds	r2, r0, #4
 80016da:	2111      	movs	r1, #17
 80016dc:	7c20      	ldrb	r0, [r4, #16]
 80016de:	68a7      	ldr	r7, [r4, #8]
 80016e0:	69bf      	ldr	r7, [r7, #24]
 80016e2:	47b8      	blx	r7
 80016e4:	e063      	b.n	80017ae <PE_Check_ExtendedMessage+0x1ce>
 80016e6:	1ec8      	subs	r0, r1, #3
 80016e8:	2808      	cmp	r0, #8
 80016ea:	d862      	bhi.n	80017b2 <PE_Check_ExtendedMessage+0x1d2>
 80016ec:	a201      	add	r2, pc, #4	; (adr r2, 80016f4 <PE_Check_ExtendedMessage+0x114>)
 80016ee:	5c12      	ldrb	r2, [r2, r0]
 80016f0:	4497      	add	pc, r2
 80016f2:	bf00      	nop
 80016f4:	46be280a 	.word	0x46be280a
 80016f8:	669884be 	.word	0x669884be
 80016fc:	006e      	.short	0x006e
 80016fe:	6820      	ldr	r0, [r4, #0]
 8001700:	8900      	ldrh	r0, [r0, #8]
 8001702:	0b00      	lsrs	r0, r0, #12
 8001704:	4228      	tst	r0, r5
 8001706:	d054      	beq.n	80017b2 <PE_Check_ExtendedMessage+0x1d2>
 8001708:	2301      	movs	r3, #1
 800170a:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800170c:	1d02      	adds	r2, r0, #4
 800170e:	2110      	movs	r1, #16
 8001710:	7c20      	ldrb	r0, [r4, #16]
 8001712:	68a5      	ldr	r5, [r4, #8]
 8001714:	69ad      	ldr	r5, [r5, #24]
 8001716:	47a8      	blx	r5
 8001718:	203a      	movs	r0, #58	; 0x3a
 800171a:	e01c      	b.n	8001756 <PE_Check_ExtendedMessage+0x176>
 800171c:	6820      	ldr	r0, [r4, #0]
 800171e:	8900      	ldrh	r0, [r0, #8]
 8001720:	0b00      	lsrs	r0, r0, #12
 8001722:	4228      	tst	r0, r5
 8001724:	d045      	beq.n	80017b2 <PE_Check_ExtendedMessage+0x1d2>
 8001726:	2301      	movs	r3, #1
 8001728:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800172a:	1d02      	adds	r2, r0, #4
 800172c:	210e      	movs	r1, #14
 800172e:	7c20      	ldrb	r0, [r4, #16]
 8001730:	68a5      	ldr	r5, [r4, #8]
 8001732:	69ad      	ldr	r5, [r5, #24]
 8001734:	47a8      	blx	r5
 8001736:	203b      	movs	r0, #59	; 0x3b
 8001738:	e00d      	b.n	8001756 <PE_Check_ExtendedMessage+0x176>
 800173a:	6820      	ldr	r0, [r4, #0]
 800173c:	8900      	ldrh	r0, [r0, #8]
 800173e:	0980      	lsrs	r0, r0, #6
 8001740:	4228      	tst	r0, r5
 8001742:	d036      	beq.n	80017b2 <PE_Check_ExtendedMessage+0x1d2>
 8001744:	2302      	movs	r3, #2
 8001746:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8001748:	1d02      	adds	r2, r0, #4
 800174a:	210c      	movs	r1, #12
 800174c:	7c20      	ldrb	r0, [r4, #16]
 800174e:	68a5      	ldr	r5, [r4, #8]
 8001750:	69ad      	ldr	r5, [r5, #24]
 8001752:	47a8      	blx	r5
 8001754:	203c      	movs	r0, #60	; 0x3c
 8001756:	7460      	strb	r0, [r4, #17]
 8001758:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}
 800175a:	6820      	ldr	r0, [r4, #0]
 800175c:	8900      	ldrh	r0, [r0, #8]
 800175e:	0a80      	lsrs	r0, r0, #10
 8001760:	e00d      	b.n	800177e <PE_Check_ExtendedMessage+0x19e>
 8001762:	68a0      	ldr	r0, [r4, #8]
 8001764:	6905      	ldr	r5, [r0, #16]
 8001766:	2d00      	cmp	r5, #0
 8001768:	d024      	beq.n	80017b4 <PE_Check_ExtendedMessage+0x1d4>
 800176a:	4816      	ldr	r0, [pc, #88]	; (80017c4 <.text_8>)
 800176c:	5a23      	ldrh	r3, [r4, r0]
 800176e:	4816      	ldr	r0, [pc, #88]	; (80017c8 <.text_9>)
 8001770:	1822      	adds	r2, r4, r0
 8001772:	7c20      	ldrb	r0, [r4, #16]
 8001774:	47a8      	blx	r5
 8001776:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}
 8001778:	6820      	ldr	r0, [r4, #0]
 800177a:	8900      	ldrh	r0, [r0, #8]
 800177c:	0a40      	lsrs	r0, r0, #9
 800177e:	4228      	tst	r0, r5
 8001780:	d017      	beq.n	80017b2 <PE_Check_ExtendedMessage+0x1d2>
 8001782:	68a0      	ldr	r0, [r4, #8]
 8001784:	6900      	ldr	r0, [r0, #16]
 8001786:	2800      	cmp	r0, #0
 8001788:	d109      	bne.n	800179e <PE_Check_ExtendedMessage+0x1be>
 800178a:	e012      	b.n	80017b2 <PE_Check_ExtendedMessage+0x1d2>
 800178c:	6820      	ldr	r0, [r4, #0]
 800178e:	8900      	ldrh	r0, [r0, #8]
 8001790:	0a40      	lsrs	r0, r0, #9
 8001792:	4228      	tst	r0, r5
 8001794:	d00e      	beq.n	80017b4 <PE_Check_ExtendedMessage+0x1d4>
 8001796:	68a0      	ldr	r0, [r4, #8]
 8001798:	6900      	ldr	r0, [r0, #16]
 800179a:	2800      	cmp	r0, #0
 800179c:	d00a      	beq.n	80017b4 <PE_Check_ExtendedMessage+0x1d4>
 800179e:	4809      	ldr	r0, [pc, #36]	; (80017c4 <.text_8>)
 80017a0:	5a23      	ldrh	r3, [r4, r0]
 80017a2:	4809      	ldr	r0, [pc, #36]	; (80017c8 <.text_9>)
 80017a4:	1822      	adds	r2, r4, r0
 80017a6:	7c20      	ldrb	r0, [r4, #16]
 80017a8:	68a5      	ldr	r5, [r4, #8]
 80017aa:	692d      	ldr	r5, [r5, #16]
 80017ac:	47a8      	blx	r5
 80017ae:	7466      	strb	r6, [r4, #17]
 80017b0:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}
 80017b2:	7465      	strb	r5, [r4, #17]
 80017b4:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}
	...

080017b8 <.text_5>:
 80017b8:	00000263 	.word	0x00000263

080017bc <.text_6>:
 80017bc:	00000265 	.word	0x00000265

080017c0 <.text_7>:
 80017c0:	0000025a 	.word	0x0000025a

080017c4 <.text_8>:
 80017c4:	0000048e 	.word	0x0000048e

080017c8 <.text_9>:
 80017c8:	00000281 	.word	0x00000281

080017cc <PE_Send_ExtendedMessage>:
 80017cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80017ce:	b084      	sub	sp, #16
 80017d0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80017d2:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80017d4:	0004      	movs	r4, r0
 80017d6:	000d      	movs	r5, r1
 80017d8:	4668      	mov	r0, sp
 80017da:	7202      	strb	r2, [r0, #8]
 80017dc:	9303      	str	r3, [sp, #12]
 80017de:	6860      	ldr	r0, [r4, #4]
 80017e0:	6800      	ldr	r0, [r0, #0]
 80017e2:	04c1      	lsls	r1, r0, #19
 80017e4:	0fc9      	lsrs	r1, r1, #31
 80017e6:	d019      	beq.n	800181c <PE_Send_ExtendedMessage+0x50>
 80017e8:	9601      	str	r6, [sp, #4]
 80017ea:	9700      	str	r7, [sp, #0]
 80017ec:	9b03      	ldr	r3, [sp, #12]
 80017ee:	4668      	mov	r0, sp
 80017f0:	7a00      	ldrb	r0, [r0, #8]
 80017f2:	2280      	movs	r2, #128	; 0x80
 80017f4:	4302      	orrs	r2, r0
 80017f6:	0029      	movs	r1, r5
 80017f8:	7c20      	ldrb	r0, [r4, #16]
 80017fa:	f003 ffd7 	bl	80057ac <USBPD_PRL_SendMessage>
 80017fe:	2803      	cmp	r0, #3
 8001800:	d0ed      	beq.n	80017de <PE_Send_ExtendedMessage+0x12>
 8001802:	0029      	movs	r1, r5
 8001804:	2810      	cmp	r0, #16
 8001806:	d007      	beq.n	8001818 <PE_Send_ExtendedMessage+0x4c>
 8001808:	aa0b      	add	r2, sp, #44	; 0x2c
 800180a:	7812      	ldrb	r2, [r2, #0]
 800180c:	9200      	str	r2, [sp, #0]
 800180e:	0003      	movs	r3, r0
 8001810:	2200      	movs	r2, #0
 8001812:	0020      	movs	r0, r4
 8001814:	f000 faca 	bl	8001dac <PE_CheckSendMessageStatus>
 8001818:	b005      	add	sp, #20
 800181a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800181c:	2011      	movs	r0, #17
 800181e:	7460      	strb	r0, [r4, #17]
 8001820:	2010      	movs	r0, #16
 8001822:	e7f9      	b.n	8001818 <PE_Send_ExtendedMessage+0x4c>

08001824 <PE_SubStateMachine_ExtendedMessages>:
 8001824:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001826:	b085      	sub	sp, #20
 8001828:	0004      	movs	r4, r0
 800182a:	2702      	movs	r7, #2
 800182c:	4889      	ldr	r0, [pc, #548]	; (8001a54 <.text_12>)
 800182e:	1820      	adds	r0, r4, r0
 8001830:	9000      	str	r0, [sp, #0]
 8001832:	2039      	movs	r0, #57	; 0x39
 8001834:	2180      	movs	r1, #128	; 0x80
 8001836:	466a      	mov	r2, sp
 8001838:	7211      	strb	r1, [r2, #8]
 800183a:	4a87      	ldr	r2, [pc, #540]	; (8001a58 <.text_13>)
 800183c:	2500      	movs	r5, #0
 800183e:	2603      	movs	r6, #3
 8001840:	7c63      	ldrb	r3, [r4, #17]
 8001842:	2b31      	cmp	r3, #49	; 0x31
 8001844:	d010      	beq.n	8001868 <PE_SubStateMachine_ExtendedMessages+0x44>
 8001846:	2b33      	cmp	r3, #51	; 0x33
 8001848:	d075      	beq.n	8001936 <PE_SubStateMachine_ExtendedMessages+0x112>
 800184a:	2b34      	cmp	r3, #52	; 0x34
 800184c:	d07c      	beq.n	8001948 <PE_SubStateMachine_ExtendedMessages+0x124>
 800184e:	2b35      	cmp	r3, #53	; 0x35
 8001850:	d100      	bne.n	8001854 <PE_SubStateMachine_ExtendedMessages+0x30>
 8001852:	e0a8      	b.n	80019a6 <PE_SubStateMachine_ExtendedMessages+0x182>
 8001854:	2b36      	cmp	r3, #54	; 0x36
 8001856:	d100      	bne.n	800185a <PE_SubStateMachine_ExtendedMessages+0x36>
 8001858:	e0be      	b.n	80019d8 <PE_SubStateMachine_ExtendedMessages+0x1b4>
 800185a:	2b37      	cmp	r3, #55	; 0x37
 800185c:	d100      	bne.n	8001860 <PE_SubStateMachine_ExtendedMessages+0x3c>
 800185e:	e0be      	b.n	80019de <PE_SubStateMachine_ExtendedMessages+0x1ba>
 8001860:	2b38      	cmp	r3, #56	; 0x38
 8001862:	d100      	bne.n	8001866 <PE_SubStateMachine_ExtendedMessages+0x42>
 8001864:	e0ef      	b.n	8001a46 <PE_SubStateMachine_ExtendedMessages+0x222>
 8001866:	e0f2      	b.n	8001a4e <PE_SubStateMachine_ExtendedMessages+0x22a>
 8001868:	487c      	ldr	r0, [pc, #496]	; (8001a5c <.text_14>)
 800186a:	1820      	adds	r0, r4, r0
 800186c:	9004      	str	r0, [sp, #16]
 800186e:	4669      	mov	r1, sp
 8001870:	730d      	strb	r5, [r1, #12]
 8001872:	497b      	ldr	r1, [pc, #492]	; (8001a60 <.text_15>)
 8001874:	5265      	strh	r5, [r4, r1]
 8001876:	7c20      	ldrb	r0, [r4, #16]
 8001878:	f7ff fa64 	bl	8000d44 <PE_Get_UnchunkedSupport>
 800187c:	2801      	cmp	r0, #1
 800187e:	d107      	bne.n	8001890 <PE_SubStateMachine_ExtendedMessages+0x6c>
 8001880:	4878      	ldr	r0, [pc, #480]	; (8001a64 <.text_16>)
 8001882:	1820      	adds	r0, r4, r0
 8001884:	7005      	strb	r5, [r0, #0]
 8001886:	7045      	strb	r5, [r0, #1]
 8001888:	4877      	ldr	r0, [pc, #476]	; (8001a68 <.text_17>)
 800188a:	1820      	adds	r0, r4, r0
 800188c:	9004      	str	r0, [sp, #16]
 800188e:	e028      	b.n	80018e2 <PE_SubStateMachine_ExtendedMessages+0xbe>
 8001890:	4976      	ldr	r1, [pc, #472]	; (8001a6c <.text_18>)
 8001892:	1861      	adds	r1, r4, r1
 8001894:	72cd      	strb	r5, [r1, #11]
 8001896:	4975      	ldr	r1, [pc, #468]	; (8001a6c <.text_18>)
 8001898:	1861      	adds	r1, r4, r1
 800189a:	730d      	strb	r5, [r1, #12]
 800189c:	7c20      	ldrb	r0, [r4, #16]
 800189e:	f7ff fa51 	bl	8000d44 <PE_Get_UnchunkedSupport>
 80018a2:	2800      	cmp	r0, #0
 80018a4:	d106      	bne.n	80018b4 <PE_SubStateMachine_ExtendedMessages+0x90>
 80018a6:	4871      	ldr	r0, [pc, #452]	; (8001a6c <.text_18>)
 80018a8:	1820      	adds	r0, r4, r0
 80018aa:	7b01      	ldrb	r1, [r0, #12]
 80018ac:	466a      	mov	r2, sp
 80018ae:	7a12      	ldrb	r2, [r2, #8]
 80018b0:	430a      	orrs	r2, r1
 80018b2:	7302      	strb	r2, [r0, #12]
 80018b4:	486a      	ldr	r0, [pc, #424]	; (8001a60 <.text_15>)
 80018b6:	1820      	adds	r0, r4, r0
 80018b8:	8841      	ldrh	r1, [r0, #2]
 80018ba:	291b      	cmp	r1, #27
 80018bc:	d30e      	bcc.n	80018dc <PE_SubStateMachine_ExtendedMessages+0xb8>
 80018be:	486a      	ldr	r0, [pc, #424]	; (8001a68 <.text_17>)
 80018c0:	1820      	adds	r0, r4, r0
 80018c2:	5d40      	ldrb	r0, [r0, r5]
 80018c4:	9900      	ldr	r1, [sp, #0]
 80018c6:	5548      	strb	r0, [r1, r5]
 80018c8:	1c6d      	adds	r5, r5, #1
 80018ca:	2d1a      	cmp	r5, #26
 80018cc:	d209      	bcs.n	80018e2 <PE_SubStateMachine_ExtendedMessages+0xbe>
 80018ce:	e7f6      	b.n	80018be <PE_SubStateMachine_ExtendedMessages+0x9a>
 80018d0:	4965      	ldr	r1, [pc, #404]	; (8001a68 <.text_17>)
 80018d2:	1861      	adds	r1, r4, r1
 80018d4:	5d49      	ldrb	r1, [r1, r5]
 80018d6:	9a00      	ldr	r2, [sp, #0]
 80018d8:	5551      	strb	r1, [r2, r5]
 80018da:	1c6d      	adds	r5, r5, #1
 80018dc:	8841      	ldrh	r1, [r0, #2]
 80018de:	428d      	cmp	r5, r1
 80018e0:	d3f6      	bcc.n	80018d0 <PE_SubStateMachine_ExtendedMessages+0xac>
 80018e2:	2001      	movs	r0, #1
 80018e4:	6961      	ldr	r1, [r4, #20]
 80018e6:	0949      	lsrs	r1, r1, #5
 80018e8:	4001      	ands	r1, r0
 80018ea:	d00a      	beq.n	8001902 <PE_SubStateMachine_ExtendedMessages+0xde>
 80018ec:	6861      	ldr	r1, [r4, #4]
 80018ee:	6809      	ldr	r1, [r1, #0]
 80018f0:	0889      	lsrs	r1, r1, #2
 80018f2:	4001      	ands	r1, r0
 80018f4:	d002      	beq.n	80018fc <PE_SubStateMachine_ExtendedMessages+0xd8>
 80018f6:	4669      	mov	r1, sp
 80018f8:	7308      	strb	r0, [r1, #12]
 80018fa:	e001      	b.n	8001900 <PE_SubStateMachine_ExtendedMessages+0xdc>
 80018fc:	4669      	mov	r1, sp
 80018fe:	730f      	strb	r7, [r1, #12]
 8001900:	2633      	movs	r6, #51	; 0x33
 8001902:	4668      	mov	r0, sp
 8001904:	7b00      	ldrb	r0, [r0, #12]
 8001906:	9002      	str	r0, [sp, #8]
 8001908:	9601      	str	r6, [sp, #4]
 800190a:	4855      	ldr	r0, [pc, #340]	; (8001a60 <.text_15>)
 800190c:	1820      	adds	r0, r4, r0
 800190e:	8840      	ldrh	r0, [r0, #2]
 8001910:	1d00      	adds	r0, r0, #4
 8001912:	b280      	uxth	r0, r0
 8001914:	9000      	str	r0, [sp, #0]
 8001916:	9b04      	ldr	r3, [sp, #16]
 8001918:	4854      	ldr	r0, [pc, #336]	; (8001a6c <.text_18>)
 800191a:	1820      	adds	r0, r4, r0
 800191c:	78c2      	ldrb	r2, [r0, #3]
 800191e:	2033      	movs	r0, #51	; 0x33
 8001920:	5c21      	ldrb	r1, [r4, r0]
 8001922:	0020      	movs	r0, r4
 8001924:	f7ff ff52 	bl	80017cc <PE_Send_ExtendedMessage>
 8001928:	2800      	cmp	r0, #0
 800192a:	d103      	bne.n	8001934 <PE_SubStateMachine_ExtendedMessages+0x110>
 800192c:	484f      	ldr	r0, [pc, #316]	; (8001a6c <.text_18>)
 800192e:	1820      	adds	r0, r4, r0
 8001930:	7940      	ldrb	r0, [r0, #5]
 8001932:	7720      	strb	r0, [r4, #28]
 8001934:	e08b      	b.n	8001a4e <PE_SubStateMachine_ExtendedMessages+0x22a>
 8001936:	83e2      	strh	r2, [r4, #30]
 8001938:	271b      	movs	r7, #27
 800193a:	494c      	ldr	r1, [pc, #304]	; (8001a6c <.text_18>)
 800193c:	1861      	adds	r1, r4, r1
 800193e:	78c9      	ldrb	r1, [r1, #3]
 8001940:	2904      	cmp	r1, #4
 8001942:	d151      	bne.n	80019e8 <PE_SubStateMachine_ExtendedMessages+0x1c4>
 8001944:	2074      	movs	r0, #116	; 0x74
 8001946:	e04f      	b.n	80019e8 <PE_SubStateMachine_ExtendedMessages+0x1c4>
 8001948:	4848      	ldr	r0, [pc, #288]	; (8001a6c <.text_18>)
 800194a:	5a20      	ldrh	r0, [r4, r0]
 800194c:	0440      	lsls	r0, r0, #17
 800194e:	0f02      	lsrs	r2, r0, #28
 8001950:	211a      	movs	r1, #26
 8001952:	4351      	muls	r1, r2
 8001954:	4842      	ldr	r0, [pc, #264]	; (8001a60 <.text_15>)
 8001956:	1820      	adds	r0, r4, r0
 8001958:	8843      	ldrh	r3, [r0, #2]
 800195a:	4299      	cmp	r1, r3
 800195c:	da01      	bge.n	8001962 <PE_SubStateMachine_ExtendedMessages+0x13e>
 800195e:	2a0a      	cmp	r2, #10
 8001960:	d301      	bcc.n	8001966 <PE_SubStateMachine_ExtendedMessages+0x142>
 8001962:	7466      	strb	r6, [r4, #17]
 8001964:	e01d      	b.n	80019a2 <PE_SubStateMachine_ExtendedMessages+0x17e>
 8001966:	1a5a      	subs	r2, r3, r1
 8001968:	2a1a      	cmp	r2, #26
 800196a:	d202      	bcs.n	8001972 <PE_SubStateMachine_ExtendedMessages+0x14e>
 800196c:	1a5b      	subs	r3, r3, r1
 800196e:	b2db      	uxtb	r3, r3
 8001970:	e000      	b.n	8001974 <PE_SubStateMachine_ExtendedMessages+0x150>
 8001972:	231a      	movs	r3, #26
 8001974:	2200      	movs	r2, #0
 8001976:	e006      	b.n	8001986 <PE_SubStateMachine_ExtendedMessages+0x162>
 8001978:	4e3b      	ldr	r6, [pc, #236]	; (8001a68 <.text_17>)
 800197a:	19a6      	adds	r6, r4, r6
 800197c:	188f      	adds	r7, r1, r2
 800197e:	5df6      	ldrb	r6, [r6, r7]
 8001980:	9f00      	ldr	r7, [sp, #0]
 8001982:	54be      	strb	r6, [r7, r2]
 8001984:	1c52      	adds	r2, r2, #1
 8001986:	429a      	cmp	r2, r3
 8001988:	d3f6      	bcc.n	8001978 <PE_SubStateMachine_ExtendedMessages+0x154>
 800198a:	4934      	ldr	r1, [pc, #208]	; (8001a5c <.text_14>)
 800198c:	1863      	adds	r3, r4, r1
 800198e:	8842      	ldrh	r2, [r0, #2]
 8001990:	4836      	ldr	r0, [pc, #216]	; (8001a6c <.text_18>)
 8001992:	5a20      	ldrh	r0, [r4, r0]
 8001994:	0440      	lsls	r0, r0, #17
 8001996:	0f01      	lsrs	r1, r0, #28
 8001998:	7c20      	ldrb	r0, [r4, #16]
 800199a:	f004 fba8 	bl	80060ee <USBPD_PRL_PrepareExtendedTxChunkSending>
 800199e:	2035      	movs	r0, #53	; 0x35
 80019a0:	7460      	strb	r0, [r4, #17]
 80019a2:	2700      	movs	r7, #0
 80019a4:	e053      	b.n	8001a4e <PE_SubStateMachine_ExtendedMessages+0x22a>
 80019a6:	6960      	ldr	r0, [r4, #20]
 80019a8:	0681      	lsls	r1, r0, #26
 80019aa:	0fc9      	lsrs	r1, r1, #31
 80019ac:	d001      	beq.n	80019b2 <PE_SubStateMachine_ExtendedMessages+0x18e>
 80019ae:	2036      	movs	r0, #54	; 0x36
 80019b0:	e000      	b.n	80019b4 <PE_SubStateMachine_ExtendedMessages+0x190>
 80019b2:	2003      	movs	r0, #3
 80019b4:	492a      	ldr	r1, [pc, #168]	; (8001a60 <.text_15>)
 80019b6:	1866      	adds	r6, r4, r1
 80019b8:	9502      	str	r5, [sp, #8]
 80019ba:	9001      	str	r0, [sp, #4]
 80019bc:	8870      	ldrh	r0, [r6, #2]
 80019be:	9000      	str	r0, [sp, #0]
 80019c0:	4826      	ldr	r0, [pc, #152]	; (8001a5c <.text_14>)
 80019c2:	1823      	adds	r3, r4, r0
 80019c4:	3809      	subs	r0, #9
 80019c6:	1820      	adds	r0, r4, r0
 80019c8:	78c2      	ldrb	r2, [r0, #3]
 80019ca:	2030      	movs	r0, #48	; 0x30
 80019cc:	5c21      	ldrb	r1, [r4, r0]
 80019ce:	0020      	movs	r0, r4
 80019d0:	f7ff fefc 	bl	80017cc <PE_Send_ExtendedMessage>
 80019d4:	8035      	strh	r5, [r6, #0]
 80019d6:	e03a      	b.n	8001a4e <PE_SubStateMachine_ExtendedMessages+0x22a>
 80019d8:	83e2      	strh	r2, [r4, #30]
 80019da:	271b      	movs	r7, #27
 80019dc:	e004      	b.n	80019e8 <PE_SubStateMachine_ExtendedMessages+0x1c4>
 80019de:	8be0      	ldrh	r0, [r4, #30]
 80019e0:	020b      	lsls	r3, r1, #8
 80019e2:	4298      	cmp	r0, r3
 80019e4:	d102      	bne.n	80019ec <PE_SubStateMachine_ExtendedMessages+0x1c8>
 80019e6:	200f      	movs	r0, #15
 80019e8:	7460      	strb	r0, [r4, #17]
 80019ea:	e030      	b.n	8001a4e <PE_SubStateMachine_ExtendedMessages+0x22a>
 80019ec:	83e2      	strh	r2, [r4, #30]
 80019ee:	271b      	movs	r7, #27
 80019f0:	481a      	ldr	r0, [pc, #104]	; (8001a5c <.text_14>)
 80019f2:	1825      	adds	r5, r4, r0
 80019f4:	0029      	movs	r1, r5
 80019f6:	7c20      	ldrb	r0, [r4, #16]
 80019f8:	f004 fba1 	bl	800613e <USBPD_PRL_PrepareChunkRequest>
 80019fc:	6860      	ldr	r0, [r4, #4]
 80019fe:	6800      	ldr	r0, [r0, #0]
 8001a00:	04c1      	lsls	r1, r0, #19
 8001a02:	0fc9      	lsrs	r1, r1, #31
 8001a04:	d012      	beq.n	8001a2c <PE_SubStateMachine_ExtendedMessages+0x208>
 8001a06:	2000      	movs	r0, #0
 8001a08:	9001      	str	r0, [sp, #4]
 8001a0a:	2006      	movs	r0, #6
 8001a0c:	9000      	str	r0, [sp, #0]
 8001a0e:	002b      	movs	r3, r5
 8001a10:	4816      	ldr	r0, [pc, #88]	; (8001a6c <.text_18>)
 8001a12:	1820      	adds	r0, r4, r0
 8001a14:	7880      	ldrb	r0, [r0, #2]
 8001a16:	4669      	mov	r1, sp
 8001a18:	7a0a      	ldrb	r2, [r1, #8]
 8001a1a:	4302      	orrs	r2, r0
 8001a1c:	2030      	movs	r0, #48	; 0x30
 8001a1e:	5c21      	ldrb	r1, [r4, r0]
 8001a20:	7c20      	ldrb	r0, [r4, #16]
 8001a22:	f003 fec3 	bl	80057ac <USBPD_PRL_SendMessage>
 8001a26:	2803      	cmp	r0, #3
 8001a28:	d0e8      	beq.n	80019fc <PE_SubStateMachine_ExtendedMessages+0x1d8>
 8001a2a:	e002      	b.n	8001a32 <PE_SubStateMachine_ExtendedMessages+0x20e>
 8001a2c:	2011      	movs	r0, #17
 8001a2e:	7460      	strb	r0, [r4, #17]
 8001a30:	2010      	movs	r0, #16
 8001a32:	2139      	movs	r1, #57	; 0x39
 8001a34:	9100      	str	r1, [sp, #0]
 8001a36:	0003      	movs	r3, r0
 8001a38:	2200      	movs	r2, #0
 8001a3a:	2030      	movs	r0, #48	; 0x30
 8001a3c:	5c21      	ldrb	r1, [r4, r0]
 8001a3e:	0020      	movs	r0, r4
 8001a40:	f000 f9b4 	bl	8001dac <PE_CheckSendMessageStatus>
 8001a44:	e003      	b.n	8001a4e <PE_SubStateMachine_ExtendedMessages+0x22a>
 8001a46:	7466      	strb	r6, [r4, #17]
 8001a48:	2700      	movs	r7, #0
 8001a4a:	4805      	ldr	r0, [pc, #20]	; (8001a60 <.text_15>)
 8001a4c:	5225      	strh	r5, [r4, r0]
 8001a4e:	0038      	movs	r0, r7
 8001a50:	b005      	add	sp, #20
 8001a52:	bdf0      	pop	{r4, r5, r6, r7, pc}

08001a54 <.text_12>:
 8001a54:	00000267 	.word	0x00000267

08001a58 <.text_13>:
 8001a58:	0000801b 	.word	0x0000801b

08001a5c <.text_14>:
 8001a5c:	00000263 	.word	0x00000263

08001a60 <.text_15>:
 8001a60:	0000048e 	.word	0x0000048e

08001a64 <.text_16>:
 8001a64:	00000387 	.word	0x00000387

08001a68 <.text_17>:
 8001a68:	00000385 	.word	0x00000385

08001a6c <.text_18>:
 8001a6c:	0000025a 	.word	0x0000025a

08001a70 <PE_ManageRXEvent>:
 8001a70:	b580      	push	{r7, lr}
 8001a72:	2130      	movs	r1, #48	; 0x30
 8001a74:	5c41      	ldrb	r1, [r0, r1]
 8001a76:	2231      	movs	r2, #49	; 0x31
 8001a78:	5481      	strb	r1, [r0, r2]
 8001a7a:	8e81      	ldrh	r1, [r0, #52]	; 0x34
 8001a7c:	0bca      	lsrs	r2, r1, #15
 8001a7e:	d002      	beq.n	8001a86 <PE_ManageRXEvent+0x16>
 8001a80:	f7ff fdae 	bl	80015e0 <PE_Check_ExtendedMessage>
 8001a84:	bd01      	pop	{r0, pc}
 8001a86:	22f0      	movs	r2, #240	; 0xf0
 8001a88:	0212      	lsls	r2, r2, #8
 8001a8a:	400a      	ands	r2, r1
 8001a8c:	d102      	bne.n	8001a94 <PE_ManageRXEvent+0x24>
 8001a8e:	f000 f805 	bl	8001a9c <PE_Check_ControlMessage>
 8001a92:	bd01      	pop	{r0, pc}
 8001a94:	f000 f8e5 	bl	8001c62 <PE_Check_DataMessage>
 8001a98:	bd01      	pop	{r0, pc}
	...

08001a9c <PE_Check_ControlMessage>:
 8001a9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001a9e:	0004      	movs	r4, r0
 8001aa0:	272a      	movs	r7, #42	; 0x2a
 8001aa2:	2603      	movs	r6, #3
 8001aa4:	2501      	movs	r5, #1
 8001aa6:	200b      	movs	r0, #11
 8001aa8:	2134      	movs	r1, #52	; 0x34
 8001aaa:	5c61      	ldrb	r1, [r4, r1]
 8001aac:	06c9      	lsls	r1, r1, #27
 8001aae:	0ec9      	lsrs	r1, r1, #27
 8001ab0:	1e49      	subs	r1, r1, #1
 8001ab2:	2917      	cmp	r1, #23
 8001ab4:	d900      	bls.n	8001ab8 <PE_Check_ControlMessage+0x1c>
 8001ab6:	e0c7      	b.n	8001c48 <PE_Check_ControlMessage+0x1ac>
 8001ab8:	a201      	add	r2, pc, #4	; (adr r2, 8001ac0 <PE_Check_ControlMessage+0x24>)
 8001aba:	5c52      	ldrb	r2, [r2, r1]
 8001abc:	0052      	lsls	r2, r2, #1
 8001abe:	4497      	add	pc, r2
 8001ac0:	c0c00bcb 	.word	0xc0c00bcb
 8001ac4:	5b22c020 	.word	0x5b22c020
 8001ac8:	c0413449 	.word	0xc0413449
 8001acc:	bec3c319 	.word	0xbec3c319
 8001ad0:	9fb7936f 	.word	0x9fb7936f
 8001ad4:	bac383b0 	.word	0xbac383b0
 8001ad8:	6860      	ldr	r0, [r4, #4]
 8001ada:	6800      	ldr	r0, [r0, #0]
 8001adc:	0880      	lsrs	r0, r0, #2
 8001ade:	4005      	ands	r5, r0
 8001ae0:	d000      	beq.n	8001ae4 <PE_Check_ControlMessage+0x48>
 8001ae2:	e0b9      	b.n	8001c58 <PE_Check_ControlMessage+0x1bc>
 8001ae4:	2002      	movs	r0, #2
 8001ae6:	7720      	strb	r0, [r4, #28]
 8001ae8:	212b      	movs	r1, #43	; 0x2b
 8001aea:	7c20      	ldrb	r0, [r4, #16]
 8001aec:	f7fe fcc8 	bl	8000480 <USBPD_PE_Notification>
 8001af0:	2098      	movs	r0, #152	; 0x98
 8001af2:	e0a7      	b.n	8001c44 <PE_Check_ControlMessage+0x1a8>
 8001af4:	7726      	strb	r6, [r4, #28]
 8001af6:	2132      	movs	r1, #50	; 0x32
 8001af8:	7c20      	ldrb	r0, [r4, #16]
 8001afa:	f7fe fcc1 	bl	8000480 <USBPD_PE_Notification>
 8001afe:	2010      	movs	r0, #16
 8001b00:	e0a0      	b.n	8001c44 <PE_Check_ControlMessage+0x1a8>
 8001b02:	2133      	movs	r1, #51	; 0x33
 8001b04:	e09c      	b.n	8001c40 <PE_Check_ControlMessage+0x1a4>
 8001b06:	2006      	movs	r0, #6
 8001b08:	7720      	strb	r0, [r4, #28]
 8001b0a:	6860      	ldr	r0, [r4, #4]
 8001b0c:	6800      	ldr	r0, [r0, #0]
 8001b0e:	0881      	lsrs	r1, r0, #2
 8001b10:	4029      	ands	r1, r5
 8001b12:	d104      	bne.n	8001b1e <PE_Check_ControlMessage+0x82>
 8001b14:	6821      	ldr	r1, [r4, #0]
 8001b16:	6849      	ldr	r1, [r1, #4]
 8001b18:	08c9      	lsrs	r1, r1, #3
 8001b1a:	4029      	ands	r1, r5
 8001b1c:	d039      	beq.n	8001b92 <PE_Check_ControlMessage+0xf6>
 8001b1e:	210c      	movs	r1, #12
 8001b20:	7c20      	ldrb	r0, [r4, #16]
 8001b22:	f7fe fcad 	bl	8000480 <USBPD_PE_Notification>
 8001b26:	204c      	movs	r0, #76	; 0x4c
 8001b28:	e08c      	b.n	8001c44 <PE_Check_ControlMessage+0x1a8>
 8001b2a:	6820      	ldr	r0, [r4, #0]
 8001b2c:	6840      	ldr	r0, [r0, #4]
 8001b2e:	08c0      	lsrs	r0, r0, #3
 8001b30:	4028      	ands	r0, r5
 8001b32:	d00a      	beq.n	8001b4a <PE_Check_ControlMessage+0xae>
 8001b34:	2008      	movs	r0, #8
 8001b36:	7720      	strb	r0, [r4, #28]
 8001b38:	213c      	movs	r1, #60	; 0x3c
 8001b3a:	7c20      	ldrb	r0, [r4, #16]
 8001b3c:	f7fe fca0 	bl	8000480 <USBPD_PE_Notification>
 8001b40:	2022      	movs	r0, #34	; 0x22
 8001b42:	e07f      	b.n	8001c44 <PE_Check_ControlMessage+0x1a8>
 8001b44:	68a0      	ldr	r0, [r4, #8]
 8001b46:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8001b48:	2800      	cmp	r0, #0
 8001b4a:	d07d      	beq.n	8001c48 <PE_Check_ControlMessage+0x1ac>
 8001b4c:	2011      	movs	r0, #17
 8001b4e:	7720      	strb	r0, [r4, #28]
 8001b50:	209d      	movs	r0, #157	; 0x9d
 8001b52:	e077      	b.n	8001c44 <PE_Check_ControlMessage+0x1a8>
 8001b54:	2123      	movs	r1, #35	; 0x23
 8001b56:	7c20      	ldrb	r0, [r4, #16]
 8001b58:	f7fe fc92 	bl	8000480 <USBPD_PE_Notification>
 8001b5c:	6960      	ldr	r0, [r4, #20]
 8001b5e:	05c0      	lsls	r0, r0, #23
 8001b60:	0f40      	lsrs	r0, r0, #29
 8001b62:	d001      	beq.n	8001b68 <PE_Check_ControlMessage+0xcc>
 8001b64:	200f      	movs	r0, #15
 8001b66:	e06d      	b.n	8001c44 <PE_Check_ControlMessage+0x1a8>
 8001b68:	68a0      	ldr	r0, [r4, #8]
 8001b6a:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8001b6c:	2800      	cmp	r0, #0
 8001b6e:	d06b      	beq.n	8001c48 <PE_Check_ControlMessage+0x1ac>
 8001b70:	2010      	movs	r0, #16
 8001b72:	7720      	strb	r0, [r4, #28]
 8001b74:	2093      	movs	r0, #147	; 0x93
 8001b76:	e065      	b.n	8001c44 <PE_Check_ControlMessage+0x1a8>
 8001b78:	6860      	ldr	r0, [r4, #4]
 8001b7a:	6800      	ldr	r0, [r0, #0]
 8001b7c:	0541      	lsls	r1, r0, #21
 8001b7e:	0f49      	lsrs	r1, r1, #29
 8001b80:	2903      	cmp	r1, #3
 8001b82:	d163      	bne.n	8001c4c <PE_Check_ControlMessage+0x1b0>
 8001b84:	0881      	lsrs	r1, r0, #2
 8001b86:	4029      	ands	r1, r5
 8001b88:	d004      	beq.n	8001b94 <PE_Check_ControlMessage+0xf8>
 8001b8a:	6821      	ldr	r1, [r4, #0]
 8001b8c:	6849      	ldr	r1, [r1, #4]
 8001b8e:	08c9      	lsrs	r1, r1, #3
 8001b90:	4029      	ands	r1, r5
 8001b92:	d05b      	beq.n	8001c4c <PE_Check_ControlMessage+0x1b0>
 8001b94:	2007      	movs	r0, #7
 8001b96:	7720      	strb	r0, [r4, #28]
 8001b98:	201d      	movs	r0, #29
 8001b9a:	7460      	strb	r0, [r4, #17]
 8001b9c:	2106      	movs	r1, #6
 8001b9e:	e04f      	b.n	8001c40 <PE_Check_ControlMessage+0x1a4>
 8001ba0:	6820      	ldr	r0, [r4, #0]
 8001ba2:	8901      	ldrh	r1, [r0, #8]
 8001ba4:	08c9      	lsrs	r1, r1, #3
 8001ba6:	4229      	tst	r1, r5
 8001ba8:	d053      	beq.n	8001c52 <PE_Check_ControlMessage+0x1b6>
 8001baa:	6861      	ldr	r1, [r4, #4]
 8001bac:	6809      	ldr	r1, [r1, #0]
 8001bae:	0889      	lsrs	r1, r1, #2
 8001bb0:	4029      	ands	r1, r5
 8001bb2:	d103      	bne.n	8001bbc <PE_Check_ControlMessage+0x120>
 8001bb4:	6840      	ldr	r0, [r0, #4]
 8001bb6:	08c0      	lsrs	r0, r0, #3
 8001bb8:	4028      	ands	r0, r5
 8001bba:	d04a      	beq.n	8001c52 <PE_Check_ControlMessage+0x1b6>
 8001bbc:	200a      	movs	r0, #10
 8001bbe:	7720      	strb	r0, [r4, #28]
 8001bc0:	2063      	movs	r0, #99	; 0x63
 8001bc2:	7460      	strb	r0, [r4, #17]
 8001bc4:	2146      	movs	r1, #70	; 0x46
 8001bc6:	e03b      	b.n	8001c40 <PE_Check_ControlMessage+0x1a4>
 8001bc8:	6860      	ldr	r0, [r4, #4]
 8001bca:	6800      	ldr	r0, [r0, #0]
 8001bcc:	0880      	lsrs	r0, r0, #2
 8001bce:	4028      	ands	r0, r5
 8001bd0:	d004      	beq.n	8001bdc <PE_Check_ControlMessage+0x140>
 8001bd2:	6820      	ldr	r0, [r4, #0]
 8001bd4:	6840      	ldr	r0, [r0, #4]
 8001bd6:	08c0      	lsrs	r0, r0, #3
 8001bd8:	4028      	ands	r0, r5
 8001bda:	d03a      	beq.n	8001c52 <PE_Check_ControlMessage+0x1b6>
 8001bdc:	205f      	movs	r0, #95	; 0x5f
 8001bde:	7720      	strb	r0, [r4, #28]
 8001be0:	2064      	movs	r0, #100	; 0x64
 8001be2:	7460      	strb	r0, [r4, #17]
 8001be4:	2160      	movs	r1, #96	; 0x60
 8001be6:	e02b      	b.n	8001c40 <PE_Check_ControlMessage+0x1a4>
 8001be8:	6821      	ldr	r1, [r4, #0]
 8001bea:	8909      	ldrh	r1, [r1, #8]
 8001bec:	0949      	lsrs	r1, r1, #5
 8001bee:	4229      	tst	r1, r5
 8001bf0:	d02f      	beq.n	8001c52 <PE_Check_ControlMessage+0x1b6>
 8001bf2:	7720      	strb	r0, [r4, #28]
 8001bf4:	214d      	movs	r1, #77	; 0x4d
 8001bf6:	7c20      	ldrb	r0, [r4, #16]
 8001bf8:	f7fe fc42 	bl	8000480 <USBPD_PE_Notification>
 8001bfc:	2030      	movs	r0, #48	; 0x30
 8001bfe:	e021      	b.n	8001c44 <PE_Check_ControlMessage+0x1a8>
 8001c00:	6821      	ldr	r1, [r4, #0]
 8001c02:	8909      	ldrh	r1, [r1, #8]
 8001c04:	0889      	lsrs	r1, r1, #2
 8001c06:	4229      	tst	r1, r5
 8001c08:	d023      	beq.n	8001c52 <PE_Check_ControlMessage+0x1b6>
 8001c0a:	7720      	strb	r0, [r4, #28]
 8001c0c:	2149      	movs	r1, #73	; 0x49
 8001c0e:	7c20      	ldrb	r0, [r4, #16]
 8001c10:	f7fe fc36 	bl	8000480 <USBPD_PE_Notification>
 8001c14:	6860      	ldr	r0, [r4, #4]
 8001c16:	6800      	ldr	r0, [r0, #0]
 8001c18:	0880      	lsrs	r0, r0, #2
 8001c1a:	4005      	ands	r5, r0
 8001c1c:	d011      	beq.n	8001c42 <PE_Check_ControlMessage+0x1a6>
 8001c1e:	202d      	movs	r0, #45	; 0x2d
 8001c20:	e010      	b.n	8001c44 <PE_Check_ControlMessage+0x1a8>
 8001c22:	6820      	ldr	r0, [r4, #0]
 8001c24:	8900      	ldrh	r0, [r0, #8]
 8001c26:	09c0      	lsrs	r0, r0, #7
 8001c28:	4228      	tst	r0, r5
 8001c2a:	d012      	beq.n	8001c52 <PE_Check_ControlMessage+0x1b6>
 8001c2c:	202f      	movs	r0, #47	; 0x2f
 8001c2e:	e009      	b.n	8001c44 <PE_Check_ControlMessage+0x1a8>
 8001c30:	2009      	movs	r0, #9
 8001c32:	7720      	strb	r0, [r4, #28]
 8001c34:	e00d      	b.n	8001c52 <PE_Check_ControlMessage+0x1b6>
 8001c36:	200f      	movs	r0, #15
 8001c38:	7720      	strb	r0, [r4, #28]
 8001c3a:	204b      	movs	r0, #75	; 0x4b
 8001c3c:	e002      	b.n	8001c44 <PE_Check_ControlMessage+0x1a8>
 8001c3e:	2159      	movs	r1, #89	; 0x59
 8001c40:	e00b      	b.n	8001c5a <.text_21>
 8001c42:	2011      	movs	r0, #17
 8001c44:	7460      	strb	r0, [r4, #17]
 8001c46:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}
 8001c48:	6860      	ldr	r0, [r4, #4]
 8001c4a:	6800      	ldr	r0, [r0, #0]
 8001c4c:	4006      	ands	r6, r0
 8001c4e:	2e02      	cmp	r6, #2
 8001c50:	d101      	bne.n	8001c56 <PE_Check_ControlMessage+0x1ba>
 8001c52:	7465      	strb	r5, [r4, #17]
 8001c54:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}
 8001c56:	7467      	strb	r7, [r4, #17]
 8001c58:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}

08001c5a <.text_21>:
 8001c5a:	7c20      	ldrb	r0, [r4, #16]
 8001c5c:	f7fe fc10 	bl	8000480 <USBPD_PE_Notification>
 8001c60:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}

08001c62 <PE_Check_DataMessage>:
 8001c62:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
 8001c64:	0004      	movs	r4, r0
 8001c66:	8ea0      	ldrh	r0, [r4, #52]	; 0x34
 8001c68:	2501      	movs	r5, #1
 8001c6a:	2603      	movs	r6, #3
 8001c6c:	2700      	movs	r7, #0
 8001c6e:	06c1      	lsls	r1, r0, #27
 8001c70:	0ec9      	lsrs	r1, r1, #27
 8001c72:	2901      	cmp	r1, #1
 8001c74:	d029      	beq.n	8001cca <PE_Check_DataMessage+0x68>
 8001c76:	2902      	cmp	r1, #2
 8001c78:	d00b      	beq.n	8001c92 <PE_Check_DataMessage+0x30>
 8001c7a:	2903      	cmp	r1, #3
 8001c7c:	d03d      	beq.n	8001cfa <PE_Check_DataMessage+0x98>
 8001c7e:	2906      	cmp	r1, #6
 8001c80:	d079      	beq.n	8001d76 <PE_Check_DataMessage+0x114>
 8001c82:	2907      	cmp	r1, #7
 8001c84:	d100      	bne.n	8001c88 <PE_Check_DataMessage+0x26>
 8001c86:	e085      	b.n	8001d94 <PE_Check_DataMessage+0x132>
 8001c88:	290a      	cmp	r1, #10
 8001c8a:	d078      	beq.n	8001d7e <PE_Check_DataMessage+0x11c>
 8001c8c:	290f      	cmp	r1, #15
 8001c8e:	d06e      	beq.n	8001d6e <PE_Check_DataMessage+0x10c>
 8001c90:	e089      	b.n	8001da6 <PE_Check_DataMessage+0x144>
 8001c92:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8001c94:	7881      	ldrb	r1, [r0, #2]
 8001c96:	78c2      	ldrb	r2, [r0, #3]
 8001c98:	0212      	lsls	r2, r2, #8
 8001c9a:	1889      	adds	r1, r1, r2
 8001c9c:	7902      	ldrb	r2, [r0, #4]
 8001c9e:	0412      	lsls	r2, r2, #16
 8001ca0:	1889      	adds	r1, r1, r2
 8001ca2:	7940      	ldrb	r0, [r0, #5]
 8001ca4:	0600      	lsls	r0, r0, #24
 8001ca6:	1808      	adds	r0, r1, r0
 8001ca8:	9000      	str	r0, [sp, #0]
 8001caa:	6860      	ldr	r0, [r4, #4]
 8001cac:	6800      	ldr	r0, [r0, #0]
 8001cae:	0880      	lsrs	r0, r0, #2
 8001cb0:	4028      	ands	r0, r5
 8001cb2:	d07a      	beq.n	8001daa <PE_Check_DataMessage+0x148>
 8001cb4:	2304      	movs	r3, #4
 8001cb6:	466a      	mov	r2, sp
 8001cb8:	2106      	movs	r1, #6
 8001cba:	7c20      	ldrb	r0, [r4, #16]
 8001cbc:	68a6      	ldr	r6, [r4, #8]
 8001cbe:	69b6      	ldr	r6, [r6, #24]
 8001cc0:	47b0      	blx	r6
 8001cc2:	7725      	strb	r5, [r4, #28]
 8001cc4:	84a7      	strh	r7, [r4, #36]	; 0x24
 8001cc6:	2009      	movs	r0, #9
 8001cc8:	e06e      	b.n	8001da8 <PE_Check_DataMessage+0x146>
 8001cca:	6861      	ldr	r1, [r4, #4]
 8001ccc:	6809      	ldr	r1, [r1, #0]
 8001cce:	0889      	lsrs	r1, r1, #2
 8001cd0:	400d      	ands	r5, r1
 8001cd2:	d16a      	bne.n	8001daa <PE_Check_DataMessage+0x148>
 8001cd4:	0980      	lsrs	r0, r0, #6
 8001cd6:	4006      	ands	r6, r0
 8001cd8:	0031      	movs	r1, r6
 8001cda:	7c20      	ldrb	r0, [r4, #16]
 8001cdc:	f7fe ff8a 	bl	8000bf4 <PE_ExtRevisionInteroperability>
 8001ce0:	8ea0      	ldrh	r0, [r4, #52]	; 0x34
 8001ce2:	0440      	lsls	r0, r0, #17
 8001ce4:	0f40      	lsrs	r0, r0, #29
 8001ce6:	0083      	lsls	r3, r0, #2
 8001ce8:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8001cea:	1c82      	adds	r2, r0, #2
 8001cec:	2104      	movs	r1, #4
 8001cee:	7c20      	ldrb	r0, [r4, #16]
 8001cf0:	68a5      	ldr	r5, [r4, #8]
 8001cf2:	69ad      	ldr	r5, [r5, #24]
 8001cf4:	47a8      	blx	r5
 8001cf6:	2044      	movs	r0, #68	; 0x44
 8001cf8:	e056      	b.n	8001da8 <PE_Check_DataMessage+0x146>
 8001cfa:	9701      	str	r7, [sp, #4]
 8001cfc:	9700      	str	r7, [sp, #0]
 8001cfe:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8001d00:	7881      	ldrb	r1, [r0, #2]
 8001d02:	78c2      	ldrb	r2, [r0, #3]
 8001d04:	0212      	lsls	r2, r2, #8
 8001d06:	1889      	adds	r1, r1, r2
 8001d08:	7902      	ldrb	r2, [r0, #4]
 8001d0a:	0412      	lsls	r2, r2, #16
 8001d0c:	1889      	adds	r1, r1, r2
 8001d0e:	7940      	ldrb	r0, [r0, #5]
 8001d10:	0600      	lsls	r0, r0, #24
 8001d12:	180d      	adds	r5, r1, r0
 8001d14:	466b      	mov	r3, sp
 8001d16:	aa01      	add	r2, sp, #4
 8001d18:	2103      	movs	r1, #3
 8001d1a:	7c20      	ldrb	r0, [r4, #16]
 8001d1c:	68a7      	ldr	r7, [r4, #8]
 8001d1e:	697f      	ldr	r7, [r7, #20]
 8001d20:	47b8      	blx	r7
 8001d22:	2104      	movs	r1, #4
 8001d24:	9800      	ldr	r0, [sp, #0]
 8001d26:	f7ff fb91 	bl	800144c <PE_CheckDataSizeFromGetDataInfo>
 8001d2a:	2800      	cmp	r0, #0
 8001d2c:	d11d      	bne.n	8001d6a <PE_Check_DataMessage+0x108>
 8001d2e:	6860      	ldr	r0, [r4, #4]
 8001d30:	6800      	ldr	r0, [r0, #0]
 8001d32:	0540      	lsls	r0, r0, #21
 8001d34:	0f40      	lsrs	r0, r0, #29
 8001d36:	2803      	cmp	r0, #3
 8001d38:	d117      	bne.n	8001d6a <PE_Check_DataMessage+0x108>
 8001d3a:	9801      	ldr	r0, [sp, #4]
 8001d3c:	4938      	ldr	r1, [pc, #224]	; (8001e20 <.text_24>)
 8001d3e:	4288      	cmp	r0, r1
 8001d40:	d113      	bne.n	8001d6a <PE_Check_DataMessage+0x108>
 8001d42:	0f28      	lsrs	r0, r5, #28
 8001d44:	2805      	cmp	r0, #5
 8001d46:	d00e      	beq.n	8001d66 <PE_Check_DataMessage+0x104>
 8001d48:	2808      	cmp	r0, #8
 8001d4a:	d00a      	beq.n	8001d62 <PE_Check_DataMessage+0x100>
 8001d4c:	2809      	cmp	r0, #9
 8001d4e:	d003      	beq.n	8001d58 <PE_Check_DataMessage+0xf6>
 8001d50:	280a      	cmp	r0, #10
 8001d52:	d12a      	bne.n	8001daa <PE_Check_DataMessage+0x148>
 8001d54:	2166      	movs	r1, #102	; 0x66
 8001d56:	e000      	b.n	8001d5a <PE_Check_DataMessage+0xf8>
 8001d58:	2165      	movs	r1, #101	; 0x65
 8001d5a:	7c20      	ldrb	r0, [r4, #16]
 8001d5c:	f7fe fb90 	bl	8000480 <USBPD_PE_Notification>
 8001d60:	e003      	b.n	8001d6a <PE_Check_DataMessage+0x108>
 8001d62:	2029      	movs	r0, #41	; 0x29
 8001d64:	e020      	b.n	8001da8 <PE_Check_DataMessage+0x146>
 8001d66:	2027      	movs	r0, #39	; 0x27
 8001d68:	e01e      	b.n	8001da8 <PE_Check_DataMessage+0x146>
 8001d6a:	7466      	strb	r6, [r4, #17]
 8001d6c:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 8001d6e:	0020      	movs	r0, r4
 8001d70:	f003 fabe 	bl	80052f0 <PE_Check_DataMessageVDM>
 8001d74:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 8001d76:	6820      	ldr	r0, [r4, #0]
 8001d78:	8900      	ldrh	r0, [r0, #8]
 8001d7a:	0900      	lsrs	r0, r0, #4
 8001d7c:	4228      	tst	r0, r5
 8001d7e:	d010      	beq.n	8001da2 <PE_Check_DataMessage+0x140>
 8001d80:	2304      	movs	r3, #4
 8001d82:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8001d84:	1c82      	adds	r2, r0, #2
 8001d86:	210b      	movs	r1, #11
 8001d88:	7c20      	ldrb	r0, [r4, #16]
 8001d8a:	68a5      	ldr	r5, [r4, #8]
 8001d8c:	69ad      	ldr	r5, [r5, #24]
 8001d8e:	47a8      	blx	r5
 8001d90:	202c      	movs	r0, #44	; 0x2c
 8001d92:	e009      	b.n	8001da8 <PE_Check_DataMessage+0x146>
 8001d94:	6820      	ldr	r0, [r4, #0]
 8001d96:	8900      	ldrh	r0, [r0, #8]
 8001d98:	0a00      	lsrs	r0, r0, #8
 8001d9a:	4228      	tst	r0, r5
 8001d9c:	d001      	beq.n	8001da2 <PE_Check_DataMessage+0x140>
 8001d9e:	203d      	movs	r0, #61	; 0x3d
 8001da0:	e002      	b.n	8001da8 <PE_Check_DataMessage+0x146>
 8001da2:	7465      	strb	r5, [r4, #17]
 8001da4:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 8001da6:	2011      	movs	r0, #17
 8001da8:	7460      	strb	r0, [r4, #17]
 8001daa:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}

08001dac <PE_CheckSendMessageStatus>:
 8001dac:	b510      	push	{r4, lr}
 8001dae:	000c      	movs	r4, r1
 8001db0:	2110      	movs	r1, #16
 8001db2:	2b05      	cmp	r3, #5
 8001db4:	d006      	beq.n	8001dc4 <PE_CheckSendMessageStatus+0x18>
 8001db6:	2b06      	cmp	r3, #6
 8001db8:	d00e      	beq.n	8001dd8 <PE_CheckSendMessageStatus+0x2c>
 8001dba:	2b07      	cmp	r3, #7
 8001dbc:	d011      	beq.n	8001de2 <PE_CheckSendMessageStatus+0x36>
 8001dbe:	2b09      	cmp	r3, #9
 8001dc0:	d008      	beq.n	8001dd4 <PE_CheckSendMessageStatus+0x28>
 8001dc2:	e02a      	b.n	8001e1a <PE_CheckSendMessageStatus+0x6e>
 8001dc4:	9902      	ldr	r1, [sp, #8]
 8001dc6:	7441      	strb	r1, [r0, #17]
 8001dc8:	6941      	ldr	r1, [r0, #20]
 8001dca:	4a16      	ldr	r2, [pc, #88]	; (8001e24 <.text_25>)
 8001dcc:	400a      	ands	r2, r1
 8001dce:	6142      	str	r2, [r0, #20]
 8001dd0:	2100      	movs	r1, #0
 8001dd2:	e022      	b.n	8001e1a <PE_CheckSendMessageStatus+0x6e>
 8001dd4:	2109      	movs	r1, #9
 8001dd6:	e020      	b.n	8001e1a <PE_CheckSendMessageStatus+0x6e>
 8001dd8:	6942      	ldr	r2, [r0, #20]
 8001dda:	024b      	lsls	r3, r1, #9
 8001ddc:	4313      	orrs	r3, r2
 8001dde:	6143      	str	r3, [r0, #20]
 8001de0:	e01b      	b.n	8001e1a <PE_CheckSendMessageStatus+0x6e>
 8001de2:	2c00      	cmp	r4, #0
 8001de4:	d005      	beq.n	8001df2 <PE_CheckSendMessageStatus+0x46>
 8001de6:	2a01      	cmp	r2, #1
 8001de8:	d101      	bne.n	8001dee <PE_CheckSendMessageStatus+0x42>
 8001dea:	2299      	movs	r2, #153	; 0x99
 8001dec:	e014      	b.n	8001e18 <PE_CheckSendMessageStatus+0x6c>
 8001dee:	2107      	movs	r1, #7
 8001df0:	e013      	b.n	8001e1a <PE_CheckSendMessageStatus+0x6e>
 8001df2:	6844      	ldr	r4, [r0, #4]
 8001df4:	6824      	ldr	r4, [r4, #0]
 8001df6:	0a24      	lsrs	r4, r4, #8
 8001df8:	4023      	ands	r3, r4
 8001dfa:	2b04      	cmp	r3, #4
 8001dfc:	d003      	beq.n	8001e06 <PE_CheckSendMessageStatus+0x5a>
 8001dfe:	2a01      	cmp	r2, #1
 8001e00:	d109      	bne.n	8001e16 <PE_CheckSendMessageStatus+0x6a>
 8001e02:	220f      	movs	r2, #15
 8001e04:	e008      	b.n	8001e18 <PE_CheckSendMessageStatus+0x6c>
 8001e06:	2a00      	cmp	r2, #0
 8001e08:	d1fb      	bne.n	8001e02 <PE_CheckSendMessageStatus+0x56>
 8001e0a:	6882      	ldr	r2, [r0, #8]
 8001e0c:	6b52      	ldr	r2, [r2, #52]	; 0x34
 8001e0e:	2a00      	cmp	r2, #0
 8001e10:	d0f7      	beq.n	8001e02 <PE_CheckSendMessageStatus+0x56>
 8001e12:	2292      	movs	r2, #146	; 0x92
 8001e14:	e000      	b.n	8001e18 <PE_CheckSendMessageStatus+0x6c>
 8001e16:	2211      	movs	r2, #17
 8001e18:	7442      	strb	r2, [r0, #17]
 8001e1a:	0008      	movs	r0, r1
 8001e1c:	bd10      	pop	{r4, pc}
	...

08001e20 <.text_24>:
 8001e20:	00001388 	.word	0x00001388

08001e24 <.text_25>:
 8001e24:	ffffbfff 	.word	0xffffbfff

08001e28 <USBPD_PE_StateMachine_SNK>:
 8001e28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001e2a:	b08c      	sub	sp, #48	; 0x30
 8001e2c:	0004      	movs	r4, r0
 8001e2e:	4828      	ldr	r0, [pc, #160]	; (8001ed0 <USBPD_PE_StateMachine_SNK+0xa8>)
 8001e30:	00a1      	lsls	r1, r4, #2
 8001e32:	5845      	ldr	r5, [r0, r1]
 8001e34:	7c68      	ldrb	r0, [r5, #17]
 8001e36:	2848      	cmp	r0, #72	; 0x48
 8001e38:	d133      	bne.n	8001ea2 <USBPD_PE_StateMachine_SNK+0x7a>
 8001e3a:	0028      	movs	r0, r5
 8001e3c:	f7fe fe72 	bl	8000b24 <PE_Reset_ZI>
 8001e40:	0028      	movs	r0, r5
 8001e42:	f7fe fea5 	bl	8000b90 <PE_Reset_Counter>
 8001e46:	6828      	ldr	r0, [r5, #0]
 8001e48:	7900      	ldrb	r0, [r0, #4]
 8001e4a:	0783      	lsls	r3, r0, #30
 8001e4c:	0f9b      	lsrs	r3, r3, #30
 8001e4e:	2200      	movs	r2, #0
 8001e50:	2100      	movs	r1, #0
 8001e52:	7c28      	ldrb	r0, [r5, #16]
 8001e54:	f003 fc35 	bl	80056c2 <USBPD_PRL_SetHeader>
 8001e58:	6868      	ldr	r0, [r5, #4]
 8001e5a:	6801      	ldr	r1, [r0, #0]
 8001e5c:	2208      	movs	r2, #8
 8001e5e:	4391      	bics	r1, r2
 8001e60:	6001      	str	r1, [r0, #0]
 8001e62:	6868      	ldr	r0, [r5, #4]
 8001e64:	6801      	ldr	r1, [r0, #0]
 8001e66:	2203      	movs	r2, #3
 8001e68:	4391      	bics	r1, r2
 8001e6a:	682a      	ldr	r2, [r5, #0]
 8001e6c:	7912      	ldrb	r2, [r2, #4]
 8001e6e:	0792      	lsls	r2, r2, #30
 8001e70:	0f92      	lsrs	r2, r2, #30
 8001e72:	430a      	orrs	r2, r1
 8001e74:	6002      	str	r2, [r0, #0]
 8001e76:	2101      	movs	r1, #1
 8001e78:	7c28      	ldrb	r0, [r5, #16]
 8001e7a:	f003 fc93 	bl	80057a4 <USBPD_PRL_SOPCapability>
 8001e7e:	7c28      	ldrb	r0, [r5, #16]
 8001e80:	f003 fefc 	bl	8005c7c <USBPD_PRL_Reset>
 8001e84:	203e      	movs	r0, #62	; 0x3e
 8001e86:	7468      	strb	r0, [r5, #17]
 8001e88:	7ca9      	ldrb	r1, [r5, #18]
 8001e8a:	293e      	cmp	r1, #62	; 0x3e
 8001e8c:	d009      	beq.n	8001ea2 <USBPD_PE_StateMachine_SNK+0x7a>
 8001e8e:	74a8      	strb	r0, [r5, #18]
 8001e90:	2000      	movs	r0, #0
 8001e92:	9000      	str	r0, [sp, #0]
 8001e94:	2300      	movs	r3, #0
 8001e96:	223e      	movs	r2, #62	; 0x3e
 8001e98:	7c29      	ldrb	r1, [r5, #16]
 8001e9a:	2004      	movs	r0, #4
 8001e9c:	4eb1      	ldr	r6, [pc, #708]	; (8002164 <__iar_annotation$$branch+0x4>)
 8001e9e:	6836      	ldr	r6, [r6, #0]
 8001ea0:	47b0      	blx	r6
 8001ea2:	6968      	ldr	r0, [r5, #20]
 8001ea4:	0341      	lsls	r1, r0, #13
 8001ea6:	0fc9      	lsrs	r1, r1, #31
 8001ea8:	d006      	beq.n	8001eb8 <USBPD_PE_StateMachine_SNK+0x90>
 8001eaa:	49af      	ldr	r1, [pc, #700]	; (8002168 <__iar_annotation$$branch+0x8>)
 8001eac:	4001      	ands	r1, r0
 8001eae:	6169      	str	r1, [r5, #20]
 8001eb0:	2164      	movs	r1, #100	; 0x64
 8001eb2:	7c28      	ldrb	r0, [r5, #16]
 8001eb4:	f7fe fae4 	bl	8000480 <USBPD_PE_Notification>
 8001eb8:	0028      	movs	r0, r5
 8001eba:	f7fe fd15 	bl	80008e8 <PE_Get_RxEvent>
 8001ebe:	4669      	mov	r1, sp
 8001ec0:	7308      	strb	r0, [r1, #12]
 8001ec2:	4668      	mov	r0, sp
 8001ec4:	7b00      	ldrb	r0, [r0, #12]
 8001ec6:	2803      	cmp	r0, #3
 8001ec8:	d104      	bne.n	8001ed4 <USBPD_PE_StateMachine_SNK+0xac>
 8001eca:	2001      	movs	r0, #1
 8001ecc:	b00d      	add	sp, #52	; 0x34
 8001ece:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001ed0:	200001bc 	.word	0x200001bc
 8001ed4:	4668      	mov	r0, sp
 8001ed6:	7344      	strb	r4, [r0, #13]
 8001ed8:	2402      	movs	r4, #2
 8001eda:	6868      	ldr	r0, [r5, #4]
 8001edc:	6800      	ldr	r0, [r0, #0]
 8001ede:	04c1      	lsls	r1, r0, #19
 8001ee0:	0fc9      	lsrs	r1, r1, #31
 8001ee2:	d100      	bne.n	8001ee6 <USBPD_PE_StateMachine_SNK+0xbe>
 8001ee4:	e148      	b.n	8002178 <__iar_annotation$$branch+0x18>
 8001ee6:	6968      	ldr	r0, [r5, #20]
 8001ee8:	0381      	lsls	r1, r0, #14
 8001eea:	0fc9      	lsrs	r1, r1, #31
 8001eec:	d014      	beq.n	8001f18 <USBPD_PE_StateMachine_SNK+0xf0>
 8001eee:	21a7      	movs	r1, #167	; 0xa7
 8001ef0:	7469      	strb	r1, [r5, #17]
 8001ef2:	4a9e      	ldr	r2, [pc, #632]	; (800216c <__iar_annotation$$branch+0xc>)
 8001ef4:	4002      	ands	r2, r0
 8001ef6:	616a      	str	r2, [r5, #20]
 8001ef8:	2000      	movs	r0, #0
 8001efa:	2232      	movs	r2, #50	; 0x32
 8001efc:	54a8      	strb	r0, [r5, r2]
 8001efe:	7ca8      	ldrb	r0, [r5, #18]
 8001f00:	28a7      	cmp	r0, #167	; 0xa7
 8001f02:	d02b      	beq.n	8001f5c <USBPD_PE_StateMachine_SNK+0x134>
 8001f04:	74a9      	strb	r1, [r5, #18]
 8001f06:	2000      	movs	r0, #0
 8001f08:	9000      	str	r0, [sp, #0]
 8001f0a:	2300      	movs	r3, #0
 8001f0c:	22a7      	movs	r2, #167	; 0xa7
 8001f0e:	7c29      	ldrb	r1, [r5, #16]
 8001f10:	2004      	movs	r0, #4
 8001f12:	4e94      	ldr	r6, [pc, #592]	; (8002164 <__iar_annotation$$branch+0x4>)
 8001f14:	6836      	ldr	r6, [r6, #0]
 8001f16:	47b0      	blx	r6
 8001f18:	2032      	movs	r0, #50	; 0x32
 8001f1a:	5c28      	ldrb	r0, [r5, r0]
 8001f1c:	280f      	cmp	r0, #15
 8001f1e:	d001      	beq.n	8001f24 <USBPD_PE_StateMachine_SNK+0xfc>
 8001f20:	2814      	cmp	r0, #20
 8001f22:	d11b      	bne.n	8001f5c <USBPD_PE_StateMachine_SNK+0x134>
 8001f24:	4668      	mov	r0, sp
 8001f26:	7b00      	ldrb	r0, [r0, #12]
 8001f28:	2814      	cmp	r0, #20
 8001f2a:	d005      	beq.n	8001f38 <USBPD_PE_StateMachine_SNK+0x110>
 8001f2c:	2014      	movs	r0, #20
 8001f2e:	4669      	mov	r1, sp
 8001f30:	7308      	strb	r0, [r1, #12]
 8001f32:	0028      	movs	r0, r5
 8001f34:	f7fe fd0f 	bl	8000956 <PE_Clear_RxEvent>
 8001f38:	2032      	movs	r0, #50	; 0x32
 8001f3a:	5c2a      	ldrb	r2, [r5, r0]
 8001f3c:	746a      	strb	r2, [r5, #17]
 8001f3e:	2000      	movs	r0, #0
 8001f40:	2132      	movs	r1, #50	; 0x32
 8001f42:	5468      	strb	r0, [r5, r1]
 8001f44:	7ca8      	ldrb	r0, [r5, #18]
 8001f46:	4290      	cmp	r0, r2
 8001f48:	d008      	beq.n	8001f5c <USBPD_PE_StateMachine_SNK+0x134>
 8001f4a:	74aa      	strb	r2, [r5, #18]
 8001f4c:	2000      	movs	r0, #0
 8001f4e:	9000      	str	r0, [sp, #0]
 8001f50:	2300      	movs	r3, #0
 8001f52:	7c29      	ldrb	r1, [r5, #16]
 8001f54:	2004      	movs	r0, #4
 8001f56:	4e83      	ldr	r6, [pc, #524]	; (8002164 <__iar_annotation$$branch+0x4>)
 8001f58:	6836      	ldr	r6, [r6, #0]
 8001f5a:	47b0      	blx	r6
 8001f5c:	4668      	mov	r0, sp
 8001f5e:	7b00      	ldrb	r0, [r0, #12]
 8001f60:	2811      	cmp	r0, #17
 8001f62:	d11f      	bne.n	8001fa4 <USBPD_PE_StateMachine_SNK+0x17c>
 8001f64:	6868      	ldr	r0, [r5, #4]
 8001f66:	6800      	ldr	r0, [r0, #0]
 8001f68:	0701      	lsls	r1, r0, #28
 8001f6a:	0fc9      	lsrs	r1, r1, #31
 8001f6c:	8ea8      	ldrh	r0, [r5, #52]	; 0x34
 8001f6e:	0680      	lsls	r0, r0, #26
 8001f70:	0fc2      	lsrs	r2, r0, #31
 8001f72:	4291      	cmp	r1, r2
 8001f74:	d116      	bne.n	8001fa4 <USBPD_PE_StateMachine_SNK+0x17c>
 8001f76:	2014      	movs	r0, #20
 8001f78:	4669      	mov	r1, sp
 8001f7a:	7308      	strb	r0, [r1, #12]
 8001f7c:	0028      	movs	r0, r5
 8001f7e:	f7fe fcea 	bl	8000956 <PE_Clear_RxEvent>
 8001f82:	2092      	movs	r0, #146	; 0x92
 8001f84:	7468      	strb	r0, [r5, #17]
 8001f86:	7ca8      	ldrb	r0, [r5, #18]
 8001f88:	2892      	cmp	r0, #146	; 0x92
 8001f8a:	d100      	bne.n	8001f8e <USBPD_PE_StateMachine_SNK+0x166>
 8001f8c:	e104      	b.n	8002198 <__iar_annotation$$branch+0x38>
 8001f8e:	2092      	movs	r0, #146	; 0x92
 8001f90:	74a8      	strb	r0, [r5, #18]
 8001f92:	2000      	movs	r0, #0
 8001f94:	9000      	str	r0, [sp, #0]
 8001f96:	2300      	movs	r3, #0
 8001f98:	2292      	movs	r2, #146	; 0x92
 8001f9a:	7c29      	ldrb	r1, [r5, #16]
 8001f9c:	2004      	movs	r0, #4
 8001f9e:	4e71      	ldr	r6, [pc, #452]	; (8002164 <__iar_annotation$$branch+0x4>)
 8001fa0:	6836      	ldr	r6, [r6, #0]
 8001fa2:	47b0      	blx	r6
 8001fa4:	7c68      	ldrb	r0, [r5, #17]
 8001fa6:	4669      	mov	r1, sp
 8001fa8:	7008      	strb	r0, [r1, #0]
 8001faa:	4f71      	ldr	r7, [pc, #452]	; (8002170 <__iar_annotation$$branch+0x10>)
 8001fac:	20f0      	movs	r0, #240	; 0xf0
 8001fae:	0200      	lsls	r0, r0, #8
 8001fb0:	4e70      	ldr	r6, [pc, #448]	; (8002174 <__iar_annotation$$branch+0x14>)
 8001fb2:	2104      	movs	r1, #4
 8001fb4:	466a      	mov	r2, sp
 8001fb6:	7812      	ldrb	r2, [r2, #0]
 8001fb8:	2a00      	cmp	r2, #0
 8001fba:	d100      	bne.n	8001fbe <USBPD_PE_StateMachine_SNK+0x196>
 8001fbc:	e0e0      	b.n	8002180 <__iar_annotation$$branch+0x20>
 8001fbe:	1e52      	subs	r2, r2, #1
 8001fc0:	d040      	beq.n	8002044 <__iar_annotation$$branch+0x8>
 8001fc2:	1e92      	subs	r2, r2, #2
 8001fc4:	2a01      	cmp	r2, #1
 8001fc6:	d800      	bhi.n	8001fca <USBPD_PE_StateMachine_SNK+0x1a2>
 8001fc8:	e323      	b.n	8002612 <__iar_annotation$$branch+0x4b2>
 8001fca:	1e92      	subs	r2, r2, #2
 8001fcc:	d100      	bne.n	8001fd0 <USBPD_PE_StateMachine_SNK+0x1a8>
 8001fce:	e1fb      	b.n	80023c8 <__iar_annotation$$branch+0x268>
 8001fd0:	3a0a      	subs	r2, #10
 8001fd2:	d100      	bne.n	8001fd6 <USBPD_PE_StateMachine_SNK+0x1ae>
 8001fd4:	e1fd      	b.n	80023d2 <__iar_annotation$$branch+0x272>
 8001fd6:	1e52      	subs	r2, r2, #1
 8001fd8:	d100      	bne.n	8001fdc <USBPD_PE_StateMachine_SNK+0x1b4>
 8001fda:	e299      	b.n	8002510 <__iar_annotation$$branch+0x3b0>
 8001fdc:	1e52      	subs	r2, r2, #1
 8001fde:	d100      	bne.n	8001fe2 <USBPD_PE_StateMachine_SNK+0x1ba>
 8001fe0:	e2a3      	b.n	800252a <__iar_annotation$$branch+0x3ca>
 8001fe2:	1ed2      	subs	r2, r2, #3
 8001fe4:	d100      	bne.n	8001fe8 <USBPD_PE_StateMachine_SNK+0x1c0>
 8001fe6:	e228      	b.n	800243a <__iar_annotation$$branch+0x2da>
 8001fe8:	1f12      	subs	r2, r2, #4
 8001fea:	2a01      	cmp	r2, #1
 8001fec:	d92a      	bls.n	8002044 <__iar_annotation$$branch+0x8>
 8001fee:	1e92      	subs	r2, r2, #2
 8001ff0:	d100      	bne.n	8001ff4 <USBPD_PE_StateMachine_SNK+0x1cc>
 8001ff2:	e2d2      	b.n	800259a <__iar_annotation$$branch+0x43a>
 8001ff4:	1ed2      	subs	r2, r2, #3
 8001ff6:	d025      	beq.n	8002044 <__iar_annotation$$branch+0x8>
 8001ff8:	1e52      	subs	r2, r2, #1
 8001ffa:	d100      	bne.n	8001ffe <USBPD_PE_StateMachine_SNK+0x1d6>
 8001ffc:	e3c3      	b.n	8002786 <__iar_annotation$$branch+0x626>
 8001ffe:	1f12      	subs	r2, r2, #4
 8002000:	d100      	bne.n	8002004 <USBPD_PE_StateMachine_SNK+0x1dc>
 8002002:	e316      	b.n	8002632 <__iar_annotation$$branch+0x4d2>
 8002004:	1f52      	subs	r2, r2, #5
 8002006:	2a02      	cmp	r2, #2
 8002008:	d91c      	bls.n	8002044 <__iar_annotation$$branch+0x8>
 800200a:	1ed2      	subs	r2, r2, #3
 800200c:	d100      	bne.n	8002010 <USBPD_PE_StateMachine_SNK+0x1e8>
 800200e:	e2f7      	b.n	8002600 <__iar_annotation$$branch+0x4a0>
 8002010:	1e52      	subs	r2, r2, #1
 8002012:	d101      	bne.n	8002018 <__iar_annotation$$branch+0x4>

08002014 <__iar_annotation$$branch>:
 8002014:	f000 fc39 	bl	800288a <__iar_annotation$$branch+0x72a>
 8002018:	1e52      	subs	r2, r2, #1
 800201a:	d013      	beq.n	8002044 <__iar_annotation$$branch+0x8>
 800201c:	1e92      	subs	r2, r2, #2
 800201e:	d101      	bne.n	8002024 <__iar_annotation$$branch+0x4>

08002020 <__iar_annotation$$branch>:
 8002020:	f000 fc80 	bl	8002924 <__iar_annotation$$branch+0x7c4>
 8002024:	1e52      	subs	r2, r2, #1
 8002026:	2a01      	cmp	r2, #1
 8002028:	d90c      	bls.n	8002044 <__iar_annotation$$branch+0x8>
 800202a:	1e92      	subs	r2, r2, #2
 800202c:	d001      	beq.n	8002032 <__iar_annotation$$branch+0x12>
 800202e:	1e92      	subs	r2, r2, #2
 8002030:	2a05      	cmp	r2, #5
 8002032:	d801      	bhi.n	8002038 <__iar_annotation$$branch+0x4>

08002034 <__iar_annotation$$branch>:
 8002034:	f000 fcbc 	bl	80029b0 <__iar_annotation$$branch+0x850>
 8002038:	1f92      	subs	r2, r2, #6
 800203a:	d101      	bne.n	8002040 <__iar_annotation$$branch+0x4>

0800203c <__iar_annotation$$branch>:
 800203c:	f000 fc86 	bl	800294c <__iar_annotation$$branch+0x7ec>
 8002040:	1e52      	subs	r2, r2, #1
 8002042:	2a03      	cmp	r2, #3
 8002044:	d801      	bhi.n	800204a <__iar_annotation$$branch+0x4>

08002046 <__iar_annotation$$branch>:
 8002046:	f000 fcb7 	bl	80029b8 <__iar_annotation$$branch+0x858>
 800204a:	1f12      	subs	r2, r2, #4
 800204c:	d100      	bne.n	8002050 <__iar_annotation$$branch+0xa>
 800204e:	e0af      	b.n	80021b0 <__iar_annotation$$branch+0x50>
 8002050:	1e92      	subs	r2, r2, #2
 8002052:	d100      	bne.n	8002056 <__iar_annotation$$branch+0x10>
 8002054:	e221      	b.n	800249a <__iar_annotation$$branch+0x33a>
 8002056:	1ed2      	subs	r2, r2, #3
 8002058:	d100      	bne.n	800205c <__iar_annotation$$branch+0x16>
 800205a:	e0c1      	b.n	80021e0 <__iar_annotation$$branch+0x80>
 800205c:	1e52      	subs	r2, r2, #1
 800205e:	d100      	bne.n	8002062 <__iar_annotation$$branch+0x1c>
 8002060:	e100      	b.n	8002264 <__iar_annotation$$branch+0x104>
 8002062:	1e52      	subs	r2, r2, #1
 8002064:	d100      	bne.n	8002068 <__iar_annotation$$branch+0x22>
 8002066:	e10f      	b.n	8002288 <__iar_annotation$$branch+0x128>
 8002068:	1e52      	subs	r2, r2, #1
 800206a:	d100      	bne.n	800206e <__iar_annotation$$branch+0x28>
 800206c:	e128      	b.n	80022c0 <__iar_annotation$$branch+0x160>
 800206e:	1e52      	subs	r2, r2, #1
 8002070:	d100      	bne.n	8002074 <__iar_annotation$$branch+0x2e>
 8002072:	e178      	b.n	8002366 <__iar_annotation$$branch+0x206>
 8002074:	1e92      	subs	r2, r2, #2
 8002076:	d0a6      	beq.n	8001fc6 <USBPD_PE_StateMachine_SNK+0x19e>
 8002078:	1e92      	subs	r2, r2, #2
 800207a:	d0e3      	beq.n	8002044 <__iar_annotation$$branch+0x8>
 800207c:	1e52      	subs	r2, r2, #1
 800207e:	d101      	bne.n	8002084 <__iar_annotation$$branch+0x4>

08002080 <__iar_annotation$$branch>:
 8002080:	f000 fbe5 	bl	800284e <__iar_annotation$$branch+0x6ee>
 8002084:	1f12      	subs	r2, r2, #4
 8002086:	d100      	bne.n	800208a <__iar_annotation$$branch+0xa>
 8002088:	e26a      	b.n	8002560 <__iar_annotation$$branch+0x400>
 800208a:	1ed2      	subs	r2, r2, #3
 800208c:	d100      	bne.n	8002090 <__iar_annotation$$branch+0x10>
 800208e:	e334      	b.n	80026fa <__iar_annotation$$branch+0x59a>
 8002090:	1f52      	subs	r2, r2, #5
 8002092:	d100      	bne.n	8002096 <__iar_annotation$$branch+0x16>
 8002094:	e388      	b.n	80027a8 <__iar_annotation$$branch+0x648>
 8002096:	1e52      	subs	r2, r2, #1
 8002098:	d100      	bne.n	800209c <__iar_annotation$$branch+0x1c>
 800209a:	e2ff      	b.n	800269c <__iar_annotation$$branch+0x53c>
 800209c:	3a09      	subs	r2, #9
 800209e:	2a02      	cmp	r2, #2
 80020a0:	d9d0      	bls.n	8002044 <__iar_annotation$$branch+0x8>
 80020a2:	1ed2      	subs	r2, r2, #3
 80020a4:	d101      	bne.n	80020aa <__iar_annotation$$branch+0x4>

080020a6 <__iar_annotation$$branch>:
 80020a6:	f000 fc01 	bl	80028ac <__iar_annotation$$branch+0x74c>
 80020aa:	1e52      	subs	r2, r2, #1
 80020ac:	d101      	bne.n	80020b2 <__iar_annotation$$branch+0x4>

080020ae <__iar_annotation$$branch>:
 80020ae:	f000 fc0f 	bl	80028d0 <__iar_annotation$$branch+0x770>
 80020b2:	1e52      	subs	r2, r2, #1
 80020b4:	2a01      	cmp	r2, #1
 80020b6:	d9c5      	bls.n	8002044 <__iar_annotation$$branch+0x8>
 80020b8:	3a0d      	subs	r2, #13
 80020ba:	d0c3      	beq.n	8002044 <__iar_annotation$$branch+0x8>
 80020bc:	3a12      	subs	r2, #18
 80020be:	d101      	bne.n	80020c4 <__iar_annotation$$branch+0x4>

080020c0 <__iar_annotation$$branch>:
 80020c0:	f000 fc92 	bl	80029e8 <__iar_annotation$$branch+0x888>
 80020c4:	3a0c      	subs	r2, #12
 80020c6:	d067      	beq.n	8002198 <__iar_annotation$$branch+0x38>
 80020c8:	1e52      	subs	r2, r2, #1
 80020ca:	2a02      	cmp	r2, #2
 80020cc:	d9ba      	bls.n	8002044 <__iar_annotation$$branch+0x8>
 80020ce:	1f52      	subs	r2, r2, #5
 80020d0:	d100      	bne.n	80020d4 <__iar_annotation$$branch+0x14>
 80020d2:	e271      	b.n	80025b8 <__iar_annotation$$branch+0x458>
 80020d4:	1e52      	subs	r2, r2, #1
 80020d6:	d0b5      	beq.n	8002044 <__iar_annotation$$branch+0x8>
 80020d8:	1e52      	subs	r2, r2, #1
 80020da:	d100      	bne.n	80020de <__iar_annotation$$branch+0x1e>
 80020dc:	e174      	b.n	80023c8 <__iar_annotation$$branch+0x268>
 80020de:	1e52      	subs	r2, r2, #1
 80020e0:	d100      	bne.n	80020e4 <__iar_annotation$$branch+0x24>
 80020e2:	e1be      	b.n	8002462 <__iar_annotation$$branch+0x302>
 80020e4:	1e52      	subs	r2, r2, #1
 80020e6:	2a08      	cmp	r2, #8
 80020e8:	d801      	bhi.n	80020ee <__iar_annotation$$branch+0x4>

080020ea <__iar_annotation$$branch>:
 80020ea:	f000 fc6a 	bl	80029c2 <__iar_annotation$$branch+0x862>
 80020ee:	3a0b      	subs	r2, #11
 80020f0:	d101      	bne.n	80020f6 <__iar_annotation$$branch+0x4>

080020f2 <__iar_annotation$$branch>:
 80020f2:	f000 fc7f 	bl	80029f4 <__iar_annotation$$branch+0x894>
 80020f6:	a903      	add	r1, sp, #12
 80020f8:	0028      	movs	r0, r5
 80020fa:	f002 f9e3 	bl	80044c4 <PE_StateMachine_VDM>
 80020fe:	0004      	movs	r4, r0
 8002100:	7c6a      	ldrb	r2, [r5, #17]
 8002102:	7ca8      	ldrb	r0, [r5, #18]
 8002104:	4290      	cmp	r0, r2
 8002106:	d008      	beq.n	800211a <__iar_annotation$$branch+0x28>
 8002108:	74aa      	strb	r2, [r5, #18]
 800210a:	2000      	movs	r0, #0
 800210c:	9000      	str	r0, [sp, #0]
 800210e:	2300      	movs	r3, #0
 8002110:	7c29      	ldrb	r1, [r5, #16]
 8002112:	2004      	movs	r0, #4
 8002114:	4e13      	ldr	r6, [pc, #76]	; (8002164 <__iar_annotation$$branch+0x4>)
 8002116:	6836      	ldr	r6, [r6, #0]
 8002118:	47b0      	blx	r6
 800211a:	4e12      	ldr	r6, [pc, #72]	; (8002164 <__iar_annotation$$branch+0x4>)
 800211c:	4668      	mov	r0, sp
 800211e:	7b00      	ldrb	r0, [r0, #12]
 8002120:	2814      	cmp	r0, #20
 8002122:	d101      	bne.n	8002128 <__iar_annotation$$branch+0x4>

08002124 <__iar_annotation$$branch>:
 8002124:	f000 fc73 	bl	8002a0e <__iar_annotation$$branch+0x8ae>
 8002128:	0028      	movs	r0, r5
 800212a:	f7fe fc5b 	bl	80009e4 <PE_Check_AMSConflict>
 800212e:	2815      	cmp	r0, #21
 8002130:	d109      	bne.n	8002146 <__iar_annotation$$branch+0x22>
 8002132:	4668      	mov	r0, sp
 8002134:	7b00      	ldrb	r0, [r0, #12]
 8002136:	2814      	cmp	r0, #20
 8002138:	d005      	beq.n	8002146 <__iar_annotation$$branch+0x22>
 800213a:	2014      	movs	r0, #20
 800213c:	4669      	mov	r1, sp
 800213e:	7308      	strb	r0, [r1, #12]
 8002140:	0028      	movs	r0, r5
 8002142:	f7fe fc08 	bl	8000956 <PE_Clear_RxEvent>
 8002146:	7c6a      	ldrb	r2, [r5, #17]
 8002148:	7ca8      	ldrb	r0, [r5, #18]
 800214a:	4290      	cmp	r0, r2
 800214c:	d007      	beq.n	800215e <__iar_annotation$$branch+0x3a>
 800214e:	74aa      	strb	r2, [r5, #18]
 8002150:	2000      	movs	r0, #0
 8002152:	9000      	str	r0, [sp, #0]
 8002154:	2300      	movs	r3, #0
 8002156:	7c29      	ldrb	r1, [r5, #16]
 8002158:	2004      	movs	r0, #4
 800215a:	6834      	ldr	r4, [r6, #0]
 800215c:	47a0      	blx	r4
 800215e:	2400      	movs	r4, #0

08002160 <__iar_annotation$$branch>:
 8002160:	f000 fc74 	bl	8002a4c <__iar_annotation$$branch+0x8ec>
 8002164:	20000000 	.word	0x20000000
 8002168:	fffbffff 	.word	0xfffbffff
 800216c:	fffdffff 	.word	0xfffdffff
 8002170:	000081f4 	.word	0x000081f4
 8002174:	0000801b 	.word	0x0000801b
 8002178:	2400      	movs	r4, #0
 800217a:	43e4      	mvns	r4, r4
 800217c:	0020      	movs	r0, r4
 800217e:	e6a5      	b.n	8001ecc <USBPD_PE_StateMachine_SNK+0xa4>
 8002180:	6868      	ldr	r0, [r5, #4]
 8002182:	6801      	ldr	r1, [r0, #0]
 8002184:	2210      	movs	r2, #16
 8002186:	4391      	bics	r1, r2
 8002188:	6001      	str	r1, [r0, #0]
 800218a:	215f      	movs	r1, #95	; 0x5f
 800218c:	7c28      	ldrb	r0, [r5, #16]
 800218e:	f7fe f977 	bl	8000480 <USBPD_PE_Notification>
 8002192:	2400      	movs	r4, #0
 8002194:	43e4      	mvns	r4, r4
 8002196:	e7b3      	b.n	8002100 <__iar_annotation$$branch+0xe>
 8002198:	6868      	ldr	r0, [r5, #4]
 800219a:	6801      	ldr	r1, [r0, #0]
 800219c:	2210      	movs	r2, #16
 800219e:	4391      	bics	r1, r2
 80021a0:	6001      	str	r1, [r0, #0]
 80021a2:	68a8      	ldr	r0, [r5, #8]
 80021a4:	6b41      	ldr	r1, [r0, #52]	; 0x34
 80021a6:	2900      	cmp	r1, #0
 80021a8:	d0f3      	beq.n	8002192 <__iar_annotation$$branch+0x32>
 80021aa:	7c28      	ldrb	r0, [r5, #16]
 80021ac:	4788      	blx	r1
 80021ae:	e7f0      	b.n	8002192 <__iar_annotation$$branch+0x32>
 80021b0:	6868      	ldr	r0, [r5, #4]
 80021b2:	6801      	ldr	r1, [r0, #0]
 80021b4:	2201      	movs	r2, #1
 80021b6:	0b0b      	lsrs	r3, r1, #12
 80021b8:	4013      	ands	r3, r2
 80021ba:	d0a1      	beq.n	8002100 <__iar_annotation$$branch+0xe>
 80021bc:	078b      	lsls	r3, r1, #30
 80021be:	0f9b      	lsrs	r3, r3, #30
 80021c0:	2b01      	cmp	r3, #1
 80021c2:	d101      	bne.n	80021c8 <__iar_annotation$$branch+0x68>
 80021c4:	2300      	movs	r3, #0
 80021c6:	e000      	b.n	80021ca <__iar_annotation$$branch+0x6a>
 80021c8:	2320      	movs	r3, #32
 80021ca:	2420      	movs	r4, #32
 80021cc:	43a1      	bics	r1, r4
 80021ce:	430b      	orrs	r3, r1
 80021d0:	6003      	str	r3, [r0, #0]
 80021d2:	772a      	strb	r2, [r5, #28]
 80021d4:	83ef      	strh	r7, [r5, #30]
 80021d6:	24fa      	movs	r4, #250	; 0xfa
 80021d8:	0064      	lsls	r4, r4, #1
 80021da:	2043      	movs	r0, #67	; 0x43
 80021dc:	7468      	strb	r0, [r5, #17]
 80021de:	e78f      	b.n	8002100 <__iar_annotation$$branch+0xe>
 80021e0:	4668      	mov	r0, sp
 80021e2:	7b00      	ldrb	r0, [r0, #12]
 80021e4:	2811      	cmp	r0, #17
 80021e6:	d135      	bne.n	8002254 <__iar_annotation$$branch+0xf4>
 80021e8:	8ea8      	ldrh	r0, [r5, #52]	; 0x34
 80021ea:	0bc2      	lsrs	r2, r0, #15
 80021ec:	d12c      	bne.n	8002248 <__iar_annotation$$branch+0xe8>
 80021ee:	2607      	movs	r6, #7
 80021f0:	0b02      	lsrs	r2, r0, #12
 80021f2:	4232      	tst	r2, r6
 80021f4:	d028      	beq.n	8002248 <__iar_annotation$$branch+0xe8>
 80021f6:	06c2      	lsls	r2, r0, #27
 80021f8:	0ed2      	lsrs	r2, r2, #27
 80021fa:	2a01      	cmp	r2, #1
 80021fc:	d124      	bne.n	8002248 <__iar_annotation$$branch+0xe8>
 80021fe:	2200      	movs	r2, #0
 8002200:	4bc1      	ldr	r3, [pc, #772]	; (8002508 <__iar_annotation$$branch+0x3a8>)
 8002202:	18eb      	adds	r3, r5, r3
 8002204:	709a      	strb	r2, [r3, #2]
 8002206:	696a      	ldr	r2, [r5, #20]
 8002208:	4311      	orrs	r1, r2
 800220a:	6169      	str	r1, [r5, #20]
 800220c:	0600      	lsls	r0, r0, #24
 800220e:	0f81      	lsrs	r1, r0, #30
 8002210:	4668      	mov	r0, sp
 8002212:	7b40      	ldrb	r0, [r0, #13]
 8002214:	f7fe fcee 	bl	8000bf4 <PE_ExtRevisionInteroperability>
 8002218:	8ea8      	ldrh	r0, [r5, #52]	; 0x34
 800221a:	0b00      	lsrs	r0, r0, #12
 800221c:	4006      	ands	r6, r0
 800221e:	00b3      	lsls	r3, r6, #2
 8002220:	6ba8      	ldr	r0, [r5, #56]	; 0x38
 8002222:	1c82      	adds	r2, r0, #2
 8002224:	2104      	movs	r1, #4
 8002226:	7c28      	ldrb	r0, [r5, #16]
 8002228:	68ae      	ldr	r6, [r5, #8]
 800222a:	69b6      	ldr	r6, [r6, #24]
 800222c:	47b0      	blx	r6
 800222e:	2001      	movs	r0, #1
 8002230:	7728      	strb	r0, [r5, #28]
 8002232:	6868      	ldr	r0, [r5, #4]
 8002234:	6801      	ldr	r1, [r0, #0]
 8002236:	2210      	movs	r2, #16
 8002238:	4391      	bics	r1, r2
 800223a:	6001      	str	r1, [r0, #0]
 800223c:	2044      	movs	r0, #68	; 0x44
 800223e:	7468      	strb	r0, [r5, #17]
 8002240:	4668      	mov	r0, sp
 8002242:	7b00      	ldrb	r0, [r0, #12]
 8002244:	2814      	cmp	r0, #20
 8002246:	d005      	beq.n	8002254 <__iar_annotation$$branch+0xf4>
 8002248:	2014      	movs	r0, #20
 800224a:	4669      	mov	r1, sp
 800224c:	7308      	strb	r0, [r1, #12]
 800224e:	0028      	movs	r0, r5
 8002250:	f7fe fb81 	bl	8000956 <PE_Clear_RxEvent>
 8002254:	8be8      	ldrh	r0, [r5, #30]
 8002256:	03a1      	lsls	r1, r4, #14
 8002258:	4288      	cmp	r0, r1
 800225a:	d102      	bne.n	8002262 <__iar_annotation$$branch+0x102>
 800225c:	200f      	movs	r0, #15
 800225e:	7468      	strb	r0, [r5, #17]
 8002260:	2400      	movs	r4, #0
 8002262:	e74d      	b.n	8002100 <__iar_annotation$$branch+0xe>
 8002264:	466a      	mov	r2, sp
 8002266:	0029      	movs	r1, r5
 8002268:	3118      	adds	r1, #24
 800226a:	7c28      	ldrb	r0, [r5, #16]
 800226c:	68ab      	ldr	r3, [r5, #8]
 800226e:	6a1b      	ldr	r3, [r3, #32]
 8002270:	4798      	blx	r3
 8002272:	6968      	ldr	r0, [r5, #20]
 8002274:	2118      	movs	r1, #24
 8002276:	4388      	bics	r0, r1
 8002278:	9900      	ldr	r1, [sp, #0]
 800227a:	00c9      	lsls	r1, r1, #3
 800227c:	2218      	movs	r2, #24
 800227e:	400a      	ands	r2, r1
 8002280:	4302      	orrs	r2, r0
 8002282:	616a      	str	r2, [r5, #20]
 8002284:	2045      	movs	r0, #69	; 0x45
 8002286:	e7ea      	b.n	800225e <__iar_annotation$$branch+0xfe>
 8002288:	6968      	ldr	r0, [r5, #20]
 800228a:	0401      	lsls	r1, r0, #16
 800228c:	0fc9      	lsrs	r1, r1, #31
 800228e:	d001      	beq.n	8002294 <__iar_annotation$$branch+0x134>
 8002290:	2002      	movs	r0, #2
 8002292:	e000      	b.n	8002296 <__iar_annotation$$branch+0x136>
 8002294:	2000      	movs	r0, #0
 8002296:	9002      	str	r0, [sp, #8]
 8002298:	2046      	movs	r0, #70	; 0x46
 800229a:	9001      	str	r0, [sp, #4]
 800229c:	2001      	movs	r0, #1
 800229e:	9000      	str	r0, [sp, #0]
 80022a0:	002b      	movs	r3, r5
 80022a2:	3318      	adds	r3, #24
 80022a4:	2202      	movs	r2, #2
 80022a6:	2100      	movs	r1, #0
 80022a8:	0028      	movs	r0, r5
 80022aa:	f7ff f95c 	bl	8001566 <PE_Send_DataMessage>
 80022ae:	2800      	cmp	r0, #0
 80022b0:	d105      	bne.n	80022be <__iar_annotation$$branch+0x15e>
 80022b2:	6968      	ldr	r0, [r5, #20]
 80022b4:	4995      	ldr	r1, [pc, #596]	; (800250c <__iar_annotation$$branch+0x3ac>)
 80022b6:	4001      	ands	r1, r0
 80022b8:	6169      	str	r1, [r5, #20]
 80022ba:	83ee      	strh	r6, [r5, #30]
 80022bc:	241b      	movs	r4, #27
 80022be:	e71f      	b.n	8002100 <__iar_annotation$$branch+0xe>
 80022c0:	4669      	mov	r1, sp
 80022c2:	7b09      	ldrb	r1, [r1, #12]
 80022c4:	2911      	cmp	r1, #17
 80022c6:	d148      	bne.n	800235a <__iar_annotation$$branch+0x1fa>
 80022c8:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 80022ca:	4201      	tst	r1, r0
 80022cc:	d145      	bne.n	800235a <__iar_annotation$$branch+0x1fa>
 80022ce:	20fa      	movs	r0, #250	; 0xfa
 80022d0:	0040      	lsls	r0, r0, #1
 80022d2:	261f      	movs	r6, #31
 80022d4:	221f      	movs	r2, #31
 80022d6:	400a      	ands	r2, r1
 80022d8:	1e92      	subs	r2, r2, #2
 80022da:	2a01      	cmp	r2, #1
 80022dc:	d917      	bls.n	800230e <__iar_annotation$$branch+0x1ae>
 80022de:	1e92      	subs	r2, r2, #2
 80022e0:	d001      	beq.n	80022e6 <__iar_annotation$$branch+0x186>
 80022e2:	3a08      	subs	r2, #8
 80022e4:	d125      	bne.n	8002332 <__iar_annotation$$branch+0x1d2>
 80022e6:	686a      	ldr	r2, [r5, #4]
 80022e8:	6812      	ldr	r2, [r2, #0]
 80022ea:	0552      	lsls	r2, r2, #21
 80022ec:	0f52      	lsrs	r2, r2, #29
 80022ee:	2a03      	cmp	r2, #3
 80022f0:	d004      	beq.n	80022fc <__iar_annotation$$branch+0x19c>
 80022f2:	2143      	movs	r1, #67	; 0x43
 80022f4:	7469      	strb	r1, [r5, #17]
 80022f6:	83ef      	strh	r7, [r5, #30]
 80022f8:	0004      	movs	r4, r0
 80022fa:	e014      	b.n	8002326 <__iar_annotation$$branch+0x1c6>
 80022fc:	4031      	ands	r1, r6
 80022fe:	290c      	cmp	r1, #12
 8002300:	d101      	bne.n	8002306 <__iar_annotation$$branch+0x1a6>
 8002302:	2049      	movs	r0, #73	; 0x49
 8002304:	e000      	b.n	8002308 <__iar_annotation$$branch+0x1a8>
 8002306:	2003      	movs	r0, #3
 8002308:	7468      	strb	r0, [r5, #17]
 800230a:	2400      	movs	r4, #0
 800230c:	e00b      	b.n	8002326 <__iar_annotation$$branch+0x1c6>
 800230e:	83ef      	strh	r7, [r5, #30]
 8002310:	0004      	movs	r4, r0
 8002312:	2104      	movs	r1, #4
 8002314:	0028      	movs	r0, r5
 8002316:	f7ff f846 	bl	80013a6 <PE_SetPowerNegotiation>
 800231a:	2047      	movs	r0, #71	; 0x47
 800231c:	7468      	strb	r0, [r5, #17]
 800231e:	4668      	mov	r0, sp
 8002320:	7b00      	ldrb	r0, [r0, #12]
 8002322:	2814      	cmp	r0, #20
 8002324:	d005      	beq.n	8002332 <__iar_annotation$$branch+0x1d2>
 8002326:	2014      	movs	r0, #20
 8002328:	4669      	mov	r1, sp
 800232a:	7308      	strb	r0, [r1, #12]
 800232c:	0028      	movs	r0, r5
 800232e:	f7fe fb12 	bl	8000956 <PE_Clear_RxEvent>
 8002332:	8ea8      	ldrh	r0, [r5, #52]	; 0x34
 8002334:	4006      	ands	r6, r0
 8002336:	2e02      	cmp	r6, #2
 8002338:	d009      	beq.n	800234e <__iar_annotation$$branch+0x1ee>
 800233a:	2e03      	cmp	r6, #3
 800233c:	d009      	beq.n	8002352 <__iar_annotation$$branch+0x1f2>
 800233e:	2e04      	cmp	r6, #4
 8002340:	d003      	beq.n	800234a <__iar_annotation$$branch+0x1ea>
 8002342:	2e0c      	cmp	r6, #12
 8002344:	d109      	bne.n	800235a <__iar_annotation$$branch+0x1fa>
 8002346:	2103      	movs	r1, #3
 8002348:	e004      	b.n	8002354 <__iar_annotation$$branch+0x1f4>
 800234a:	2102      	movs	r1, #2
 800234c:	e002      	b.n	8002354 <__iar_annotation$$branch+0x1f4>
 800234e:	2104      	movs	r1, #4
 8002350:	e000      	b.n	8002354 <__iar_annotation$$branch+0x1f4>
 8002352:	2101      	movs	r1, #1
 8002354:	7c28      	ldrb	r0, [r5, #16]
 8002356:	f7fe f893 	bl	8000480 <USBPD_PE_Notification>
 800235a:	8be8      	ldrh	r0, [r5, #30]
 800235c:	2180      	movs	r1, #128	; 0x80
 800235e:	0209      	lsls	r1, r1, #8
 8002360:	4288      	cmp	r0, r1
 8002362:	d1ac      	bne.n	80022be <__iar_annotation$$branch+0x15e>
 8002364:	e77a      	b.n	800225c <__iar_annotation$$branch+0xfc>
 8002366:	4668      	mov	r0, sp
 8002368:	7b00      	ldrb	r0, [r0, #12]
 800236a:	2811      	cmp	r0, #17
 800236c:	d1f5      	bne.n	800235a <__iar_annotation$$branch+0x1fa>
 800236e:	8ea8      	ldrh	r0, [r5, #52]	; 0x34
 8002370:	499f      	ldr	r1, [pc, #636]	; (80025f0 <__iar_annotation$$branch+0x490>)
 8002372:	4001      	ands	r1, r0
 8002374:	2906      	cmp	r1, #6
 8002376:	d1f0      	bne.n	800235a <__iar_annotation$$branch+0x1fa>
 8002378:	2014      	movs	r0, #20
 800237a:	4669      	mov	r1, sp
 800237c:	7308      	strb	r0, [r1, #12]
 800237e:	0028      	movs	r0, r5
 8002380:	f7fe fae9 	bl	8000956 <PE_Clear_RxEvent>
 8002384:	2103      	movs	r1, #3
 8002386:	0028      	movs	r0, r5
 8002388:	f7ff f80d 	bl	80013a6 <PE_SetPowerNegotiation>
 800238c:	2110      	movs	r1, #16
 800238e:	7c28      	ldrb	r0, [r5, #16]
 8002390:	f7fe f876 	bl	8000480 <USBPD_PE_Notification>
 8002394:	6868      	ldr	r0, [r5, #4]
 8002396:	6800      	ldr	r0, [r0, #0]
 8002398:	0401      	lsls	r1, r0, #16
 800239a:	0fc9      	lsrs	r1, r1, #31
 800239c:	d002      	beq.n	80023a4 <__iar_annotation$$branch+0x244>
 800239e:	6828      	ldr	r0, [r5, #0]
 80023a0:	6801      	ldr	r1, [r0, #0]
 80023a2:	e000      	b.n	80023a6 <__iar_annotation$$branch+0x246>
 80023a4:	2101      	movs	r1, #1
 80023a6:	4668      	mov	r0, sp
 80023a8:	7b40      	ldrb	r0, [r0, #13]
 80023aa:	f003 f9fb 	bl	80057a4 <USBPD_PRL_SOPCapability>
 80023ae:	2000      	movs	r0, #0
 80023b0:	84a8      	strh	r0, [r5, #36]	; 0x24
 80023b2:	2003      	movs	r0, #3
 80023b4:	6969      	ldr	r1, [r5, #20]
 80023b6:	08c9      	lsrs	r1, r1, #3
 80023b8:	4001      	ands	r1, r0
 80023ba:	2903      	cmp	r1, #3
 80023bc:	d101      	bne.n	80023c2 <__iar_annotation$$branch+0x262>
 80023be:	498d      	ldr	r1, [pc, #564]	; (80025f4 <__iar_annotation$$branch+0x494>)
 80023c0:	84a9      	strh	r1, [r5, #36]	; 0x24
 80023c2:	7468      	strb	r0, [r5, #17]
 80023c4:	2400      	movs	r4, #0
 80023c6:	e7c8      	b.n	800235a <__iar_annotation$$branch+0x1fa>
 80023c8:	a903      	add	r1, sp, #12
 80023ca:	0028      	movs	r0, r5
 80023cc:	f001 fbac 	bl	8003b28 <PE_StateMachine_VDMCable>
 80023d0:	e695      	b.n	80020fe <__iar_annotation$$branch+0xc>
 80023d2:	2601      	movs	r6, #1
 80023d4:	6868      	ldr	r0, [r5, #4]
 80023d6:	6800      	ldr	r0, [r0, #0]
 80023d8:	0bc0      	lsrs	r0, r0, #15
 80023da:	4030      	ands	r0, r6
 80023dc:	d006      	beq.n	80023ec <__iar_annotation$$branch+0x28c>
 80023de:	68a8      	ldr	r0, [r5, #8]
 80023e0:	6b02      	ldr	r2, [r0, #48]	; 0x30
 80023e2:	2a00      	cmp	r2, #0
 80023e4:	d002      	beq.n	80023ec <__iar_annotation$$branch+0x28c>
 80023e6:	2100      	movs	r1, #0
 80023e8:	7c28      	ldrb	r0, [r5, #16]
 80023ea:	4790      	blx	r2
 80023ec:	6868      	ldr	r0, [r5, #4]
 80023ee:	6801      	ldr	r1, [r0, #0]
 80023f0:	2210      	movs	r2, #16
 80023f2:	4391      	bics	r1, r2
 80023f4:	6001      	str	r1, [r0, #0]
 80023f6:	2101      	movs	r1, #1
 80023f8:	0028      	movs	r0, r5
 80023fa:	f7fe ffd4 	bl	80013a6 <PE_SetPowerNegotiation>
 80023fe:	4842      	ldr	r0, [pc, #264]	; (8002508 <__iar_annotation$$branch+0x3a8>)
 8002400:	1829      	adds	r1, r5, r0
 8002402:	7888      	ldrb	r0, [r1, #2]
 8002404:	2803      	cmp	r0, #3
 8002406:	d309      	bcc.n	800241c <__iar_annotation$$branch+0x2bc>
 8002408:	6968      	ldr	r0, [r5, #20]
 800240a:	0880      	lsrs	r0, r0, #2
 800240c:	4006      	ands	r6, r0
 800240e:	d003      	beq.n	8002418 <__iar_annotation$$branch+0x2b8>
 8002410:	68a8      	ldr	r0, [r5, #8]
 8002412:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8002414:	2800      	cmp	r0, #0
 8002416:	d171      	bne.n	80024fc <__iar_annotation$$branch+0x39c>
 8002418:	2000      	movs	r0, #0
 800241a:	e6df      	b.n	80021dc <__iar_annotation$$branch+0x7c>
 800241c:	1c40      	adds	r0, r0, #1
 800241e:	7088      	strb	r0, [r1, #2]
 8002420:	2105      	movs	r1, #5
 8002422:	0028      	movs	r0, r5
 8002424:	f7fe fa32 	bl	800088c <PE_Send_RESET>
 8002428:	4873      	ldr	r0, [pc, #460]	; (80025f8 <__iar_annotation$$branch+0x498>)
 800242a:	83e8      	strh	r0, [r5, #30]
 800242c:	2201      	movs	r2, #1
 800242e:	2101      	movs	r1, #1
 8002430:	0028      	movs	r0, r5
 8002432:	f7fe ffaf 	bl	8001394 <PE_CallHardResetCallback>
 8002436:	209b      	movs	r0, #155	; 0x9b
 8002438:	e711      	b.n	800225e <__iar_annotation$$branch+0xfe>
 800243a:	6868      	ldr	r0, [r5, #4]
 800243c:	6800      	ldr	r0, [r0, #0]
 800243e:	0401      	lsls	r1, r0, #16
 8002440:	0fc9      	lsrs	r1, r1, #31
 8002442:	d006      	beq.n	8002452 <__iar_annotation$$branch+0x2f2>
 8002444:	68a8      	ldr	r0, [r5, #8]
 8002446:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8002448:	2a00      	cmp	r2, #0
 800244a:	d002      	beq.n	8002452 <__iar_annotation$$branch+0x2f2>
 800244c:	2100      	movs	r1, #0
 800244e:	7c28      	ldrb	r0, [r5, #16]
 8002450:	4790      	blx	r2
 8002452:	2200      	movs	r2, #0
 8002454:	2101      	movs	r1, #1
 8002456:	0028      	movs	r0, r5
 8002458:	f7fe ff9c 	bl	8001394 <PE_CallHardResetCallback>
 800245c:	4866      	ldr	r0, [pc, #408]	; (80025f8 <__iar_annotation$$branch+0x498>)
 800245e:	83e8      	strh	r0, [r5, #30]
 8002460:	e7e9      	b.n	8002436 <__iar_annotation$$branch+0x2d6>
 8002462:	2100      	movs	r1, #0
 8002464:	4668      	mov	r0, sp
 8002466:	7b40      	ldrb	r0, [r0, #13]
 8002468:	68aa      	ldr	r2, [r5, #8]
 800246a:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800246c:	4790      	blx	r2
 800246e:	2801      	cmp	r0, #1
 8002470:	d10d      	bne.n	800248e <__iar_annotation$$branch+0x32e>
 8002472:	4862      	ldr	r0, [pc, #392]	; (80025fc <__iar_annotation$$branch+0x49c>)
 8002474:	83e8      	strh	r0, [r5, #30]
 8002476:	2169      	movs	r1, #105	; 0x69
 8002478:	4668      	mov	r0, sp
 800247a:	7b40      	ldrb	r0, [r0, #13]
 800247c:	f7fe f800 	bl	8000480 <USBPD_PE_Notification>
 8002480:	2040      	movs	r0, #64	; 0x40
 8002482:	7468      	strb	r0, [r5, #17]
 8002484:	2400      	movs	r4, #0
 8002486:	2113      	movs	r1, #19
 8002488:	7c28      	ldrb	r0, [r5, #16]
 800248a:	f7fd fff9 	bl	8000480 <USBPD_PE_Notification>
 800248e:	8be8      	ldrh	r0, [r5, #30]
 8002490:	2180      	movs	r1, #128	; 0x80
 8002492:	0209      	lsls	r1, r1, #8
 8002494:	4288      	cmp	r0, r1
 8002496:	d135      	bne.n	8002504 <__iar_annotation$$branch+0x3a4>
 8002498:	e01e      	b.n	80024d8 <__iar_annotation$$branch+0x378>
 800249a:	2101      	movs	r1, #1
 800249c:	4668      	mov	r0, sp
 800249e:	7b40      	ldrb	r0, [r0, #13]
 80024a0:	68aa      	ldr	r2, [r5, #8]
 80024a2:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 80024a4:	4790      	blx	r2
 80024a6:	2801      	cmp	r0, #1
 80024a8:	d111      	bne.n	80024ce <__iar_annotation$$branch+0x36e>
 80024aa:	0028      	movs	r0, r5
 80024ac:	f7fe fb01 	bl	8000ab2 <PE_Reset_HardReset>
 80024b0:	2205      	movs	r2, #5
 80024b2:	2100      	movs	r1, #0
 80024b4:	0028      	movs	r0, r5
 80024b6:	f7fe ff6d 	bl	8001394 <PE_CallHardResetCallback>
 80024ba:	2168      	movs	r1, #104	; 0x68
 80024bc:	4668      	mov	r0, sp
 80024be:	7b40      	ldrb	r0, [r0, #13]
 80024c0:	f7fd ffde 	bl	8000480 <USBPD_PE_Notification>
 80024c4:	83ef      	strh	r7, [r5, #30]
 80024c6:	24fa      	movs	r4, #250	; 0xfa
 80024c8:	0064      	lsls	r4, r4, #1
 80024ca:	2043      	movs	r0, #67	; 0x43
 80024cc:	7468      	strb	r0, [r5, #17]
 80024ce:	8be8      	ldrh	r0, [r5, #30]
 80024d0:	2180      	movs	r1, #128	; 0x80
 80024d2:	0209      	lsls	r1, r1, #8
 80024d4:	4288      	cmp	r0, r1
 80024d6:	d115      	bne.n	8002504 <__iar_annotation$$branch+0x3a4>
 80024d8:	2206      	movs	r2, #6
 80024da:	2100      	movs	r1, #0
 80024dc:	0028      	movs	r0, r5
 80024de:	f7fe ff59 	bl	8001394 <PE_CallHardResetCallback>
 80024e2:	4809      	ldr	r0, [pc, #36]	; (8002508 <__iar_annotation$$branch+0x3a8>)
 80024e4:	1828      	adds	r0, r5, r0
 80024e6:	7880      	ldrb	r0, [r0, #2]
 80024e8:	2803      	cmp	r0, #3
 80024ea:	d200      	bcs.n	80024ee <__iar_annotation$$branch+0x38e>
 80024ec:	e6b6      	b.n	800225c <__iar_annotation$$branch+0xfc>
 80024ee:	6968      	ldr	r0, [r5, #20]
 80024f0:	0741      	lsls	r1, r0, #29
 80024f2:	0fc9      	lsrs	r1, r1, #31
 80024f4:	d004      	beq.n	8002500 <__iar_annotation$$branch+0x3a0>
 80024f6:	68a8      	ldr	r0, [r5, #8]
 80024f8:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80024fa:	2800      	cmp	r0, #0
 80024fc:	d000      	beq.n	8002500 <__iar_annotation$$branch+0x3a0>
 80024fe:	e0fa      	b.n	80026f6 <__iar_annotation$$branch+0x596>
 8002500:	2400      	movs	r4, #0
 8002502:	746c      	strb	r4, [r5, #17]
 8002504:	e5fc      	b.n	8002100 <__iar_annotation$$branch+0xe>
 8002506:	bf00      	nop
 8002508:	0000025e 	.word	0x0000025e
 800250c:	ffff7fff 	.word	0xffff7fff
 8002510:	2000      	movs	r0, #0
 8002512:	9000      	str	r0, [sp, #0]
 8002514:	2303      	movs	r3, #3
 8002516:	2203      	movs	r2, #3
 8002518:	2100      	movs	r1, #0
 800251a:	0028      	movs	r0, r5
 800251c:	f7fe fff8 	bl	8001510 <PE_Send_CtrlMessage>
 8002520:	2800      	cmp	r0, #0
 8002522:	d1ef      	bne.n	8002504 <__iar_annotation$$branch+0x3a4>
 8002524:	2001      	movs	r0, #1
 8002526:	7728      	strb	r0, [r5, #28]
 8002528:	e654      	b.n	80021d4 <__iar_annotation$$branch+0x74>
 800252a:	6868      	ldr	r0, [r5, #4]
 800252c:	6800      	ldr	r0, [r0, #0]
 800252e:	0540      	lsls	r0, r0, #21
 8002530:	0f40      	lsrs	r0, r0, #29
 8002532:	2804      	cmp	r0, #4
 8002534:	d100      	bne.n	8002538 <__iar_annotation$$branch+0x3d8>
 8002536:	e691      	b.n	800225c <__iar_annotation$$branch+0xfc>
 8002538:	2000      	movs	r0, #0
 800253a:	9000      	str	r0, [sp, #0]
 800253c:	2350      	movs	r3, #80	; 0x50
 800253e:	220d      	movs	r2, #13
 8002540:	2031      	movs	r0, #49	; 0x31
 8002542:	5c29      	ldrb	r1, [r5, r0]
 8002544:	0028      	movs	r0, r5
 8002546:	f7fe ffe3 	bl	8001510 <PE_Send_CtrlMessage>
 800254a:	2800      	cmp	r0, #0
 800254c:	d107      	bne.n	800255e <__iar_annotation$$branch+0x3fe>
 800254e:	2003      	movs	r0, #3
 8002550:	7728      	strb	r0, [r5, #28]
 8002552:	83ee      	strh	r6, [r5, #30]
 8002554:	241b      	movs	r4, #27
 8002556:	2130      	movs	r1, #48	; 0x30
 8002558:	7c28      	ldrb	r0, [r5, #16]
 800255a:	f7fd ff91 	bl	8000480 <USBPD_PE_Notification>
 800255e:	e5cf      	b.n	8002100 <__iar_annotation$$branch+0xe>
 8002560:	4668      	mov	r0, sp
 8002562:	7b00      	ldrb	r0, [r0, #12]
 8002564:	2814      	cmp	r0, #20
 8002566:	d017      	beq.n	8002598 <__iar_annotation$$branch+0x438>
 8002568:	2030      	movs	r0, #48	; 0x30
 800256a:	5c28      	ldrb	r0, [r5, r0]
 800256c:	2131      	movs	r1, #49	; 0x31
 800256e:	5c69      	ldrb	r1, [r5, r1]
 8002570:	4288      	cmp	r0, r1
 8002572:	d111      	bne.n	8002598 <__iar_annotation$$branch+0x438>
 8002574:	8ea8      	ldrh	r0, [r5, #52]	; 0x34
 8002576:	491e      	ldr	r1, [pc, #120]	; (80025f0 <__iar_annotation$$branch+0x490>)
 8002578:	4001      	ands	r1, r0
 800257a:	2903      	cmp	r1, #3
 800257c:	d10c      	bne.n	8002598 <__iar_annotation$$branch+0x438>
 800257e:	2001      	movs	r0, #1
 8002580:	7728      	strb	r0, [r5, #28]
 8002582:	83ef      	strh	r7, [r5, #30]
 8002584:	24fa      	movs	r4, #250	; 0xfa
 8002586:	0064      	lsls	r4, r4, #1
 8002588:	2043      	movs	r0, #67	; 0x43
 800258a:	7468      	strb	r0, [r5, #17]
 800258c:	2014      	movs	r0, #20
 800258e:	4669      	mov	r1, sp
 8002590:	7308      	strb	r0, [r1, #12]
 8002592:	0028      	movs	r0, r5
 8002594:	f7fe f9df 	bl	8000956 <PE_Clear_RxEvent>
 8002598:	e6df      	b.n	800235a <__iar_annotation$$branch+0x1fa>
 800259a:	9400      	str	r4, [sp, #0]
 800259c:	2343      	movs	r3, #67	; 0x43
 800259e:	2207      	movs	r2, #7
 80025a0:	2100      	movs	r1, #0
 80025a2:	0028      	movs	r0, r5
 80025a4:	f7fe ffb4 	bl	8001510 <PE_Send_CtrlMessage>
 80025a8:	2800      	cmp	r0, #0
 80025aa:	d11f      	bne.n	80025ec <__iar_annotation$$branch+0x48c>
 80025ac:	2006      	movs	r0, #6
 80025ae:	7728      	strb	r0, [r5, #28]
 80025b0:	83ee      	strh	r6, [r5, #30]
 80025b2:	241b      	movs	r4, #27
 80025b4:	210b      	movs	r1, #11
 80025b6:	e7cf      	b.n	8002558 <__iar_annotation$$branch+0x3f8>
 80025b8:	4668      	mov	r0, sp
 80025ba:	7b00      	ldrb	r0, [r0, #12]
 80025bc:	2811      	cmp	r0, #17
 80025be:	d115      	bne.n	80025ec <__iar_annotation$$branch+0x48c>
 80025c0:	8ea8      	ldrh	r0, [r5, #52]	; 0x34
 80025c2:	490b      	ldr	r1, [pc, #44]	; (80025f0 <__iar_annotation$$branch+0x490>)
 80025c4:	4001      	ands	r1, r0
 80025c6:	2906      	cmp	r1, #6
 80025c8:	d110      	bne.n	80025ec <__iar_annotation$$branch+0x48c>
 80025ca:	212c      	movs	r1, #44	; 0x2c
 80025cc:	7c28      	ldrb	r0, [r5, #16]
 80025ce:	f7fd ff57 	bl	8000480 <USBPD_PE_Notification>
 80025d2:	2003      	movs	r0, #3
 80025d4:	7468      	strb	r0, [r5, #17]
 80025d6:	2400      	movs	r4, #0
 80025d8:	4668      	mov	r0, sp
 80025da:	7b00      	ldrb	r0, [r0, #12]
 80025dc:	2814      	cmp	r0, #20
 80025de:	d005      	beq.n	80025ec <__iar_annotation$$branch+0x48c>
 80025e0:	2014      	movs	r0, #20
 80025e2:	4669      	mov	r1, sp
 80025e4:	7308      	strb	r0, [r1, #12]
 80025e6:	0028      	movs	r0, r5
 80025e8:	f7fe f9b5 	bl	8000956 <PE_Clear_RxEvent>
 80025ec:	e588      	b.n	8002100 <__iar_annotation$$branch+0xe>
 80025ee:	bf00      	nop
 80025f0:	0000f01f 	.word	0x0000f01f
 80025f4:	0000a328 	.word	0x0000a328
 80025f8:	000083e8 	.word	0x000083e8
 80025fc:	000088e3 	.word	0x000088e3
 8002600:	2000      	movs	r0, #0
 8002602:	9000      	str	r0, [sp, #0]
 8002604:	2303      	movs	r3, #3
 8002606:	2204      	movs	r2, #4
 8002608:	2100      	movs	r1, #0
 800260a:	0028      	movs	r0, r5
 800260c:	f7fe ff80 	bl	8001510 <PE_Send_CtrlMessage>
 8002610:	e576      	b.n	8002100 <__iar_annotation$$branch+0xe>
 8002612:	4668      	mov	r0, sp
 8002614:	7800      	ldrb	r0, [r0, #0]
 8002616:	2804      	cmp	r0, #4
 8002618:	d006      	beq.n	8002628 <__iar_annotation$$branch+0x4c8>
 800261a:	2000      	movs	r0, #0
 800261c:	7728      	strb	r0, [r5, #28]
 800261e:	7469      	strb	r1, [r5, #17]
 8002620:	2120      	movs	r1, #32
 8002622:	7c28      	ldrb	r0, [r5, #16]
 8002624:	f7fd ff2c 	bl	8000480 <USBPD_PE_Notification>
 8002628:	a903      	add	r1, sp, #12
 800262a:	0028      	movs	r0, r5
 800262c:	f000 fa1a 	bl	8002a64 <PE_StateMachine_SNK_ReadyWait>
 8002630:	e565      	b.n	80020fe <__iar_annotation$$branch+0xc>
 8002632:	68a8      	ldr	r0, [r5, #8]
 8002634:	6881      	ldr	r1, [r0, #8]
 8002636:	2900      	cmp	r1, #0
 8002638:	d02e      	beq.n	8002698 <__iar_annotation$$branch+0x538>
 800263a:	4668      	mov	r0, sp
 800263c:	7b40      	ldrb	r0, [r0, #13]
 800263e:	4788      	blx	r1
 8002640:	280a      	cmp	r0, #10
 8002642:	d002      	beq.n	800264a <__iar_annotation$$branch+0x4ea>
 8002644:	280d      	cmp	r0, #13
 8002646:	d022      	beq.n	800268e <__iar_annotation$$branch+0x52e>
 8002648:	e026      	b.n	8002698 <__iar_annotation$$branch+0x538>
 800264a:	2201      	movs	r2, #1
 800264c:	2100      	movs	r1, #0
 800264e:	7c28      	ldrb	r0, [r5, #16]
 8002650:	68ab      	ldr	r3, [r5, #8]
 8002652:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002654:	4798      	blx	r3
 8002656:	2000      	movs	r0, #0
 8002658:	9000      	str	r0, [sp, #0]
 800265a:	2359      	movs	r3, #89	; 0x59
 800265c:	2203      	movs	r2, #3
 800265e:	2100      	movs	r1, #0
 8002660:	0028      	movs	r0, r5
 8002662:	f7fe ff55 	bl	8001510 <PE_Send_CtrlMessage>
 8002666:	2800      	cmp	r0, #0
 8002668:	d110      	bne.n	800268c <__iar_annotation$$branch+0x52c>
 800266a:	2008      	movs	r0, #8
 800266c:	7728      	strb	r0, [r5, #28]
 800266e:	6868      	ldr	r0, [r5, #4]
 8002670:	6801      	ldr	r1, [r0, #0]
 8002672:	2210      	movs	r2, #16
 8002674:	430a      	orrs	r2, r1
 8002676:	6002      	str	r2, [r0, #0]
 8002678:	2206      	movs	r2, #6
 800267a:	2100      	movs	r1, #0
 800267c:	7c28      	ldrb	r0, [r5, #16]
 800267e:	68ab      	ldr	r3, [r5, #8]
 8002680:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002682:	4798      	blx	r3
 8002684:	48b0      	ldr	r0, [pc, #704]	; (8002948 <__iar_annotation$$branch+0x7e8>)
 8002686:	83e8      	strh	r0, [r5, #30]
 8002688:	24e1      	movs	r4, #225	; 0xe1
 800268a:	00a4      	lsls	r4, r4, #2
 800268c:	e538      	b.n	8002100 <__iar_annotation$$branch+0xe>
 800268e:	2000      	movs	r0, #0
 8002690:	9000      	str	r0, [sp, #0]
 8002692:	2303      	movs	r3, #3
 8002694:	220c      	movs	r2, #12
 8002696:	e7b7      	b.n	8002608 <__iar_annotation$$branch+0x4a8>
 8002698:	202a      	movs	r0, #42	; 0x2a
 800269a:	e5e0      	b.n	800225e <__iar_annotation$$branch+0xfe>
 800269c:	4668      	mov	r0, sp
 800269e:	7b00      	ldrb	r0, [r0, #12]
 80026a0:	2811      	cmp	r0, #17
 80026a2:	d119      	bne.n	80026d8 <__iar_annotation$$branch+0x578>
 80026a4:	8ea8      	ldrh	r0, [r5, #52]	; 0x34
 80026a6:	49c1      	ldr	r1, [pc, #772]	; (80029ac <__iar_annotation$$branch+0x84c>)
 80026a8:	4001      	ands	r1, r0
 80026aa:	2906      	cmp	r1, #6
 80026ac:	d114      	bne.n	80026d8 <__iar_annotation$$branch+0x578>
 80026ae:	7f28      	ldrb	r0, [r5, #28]
 80026b0:	2809      	cmp	r0, #9
 80026b2:	d005      	beq.n	80026c0 <__iar_annotation$$branch+0x560>
 80026b4:	2209      	movs	r2, #9
 80026b6:	2100      	movs	r1, #0
 80026b8:	7c28      	ldrb	r0, [r5, #16]
 80026ba:	68ab      	ldr	r3, [r5, #8]
 80026bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80026be:	4798      	blx	r3
 80026c0:	2053      	movs	r0, #83	; 0x53
 80026c2:	7468      	strb	r0, [r5, #17]
 80026c4:	4668      	mov	r0, sp
 80026c6:	7b00      	ldrb	r0, [r0, #12]
 80026c8:	2814      	cmp	r0, #20
 80026ca:	d005      	beq.n	80026d8 <__iar_annotation$$branch+0x578>
 80026cc:	2014      	movs	r0, #20
 80026ce:	4669      	mov	r1, sp
 80026d0:	7308      	strb	r0, [r1, #12]
 80026d2:	0028      	movs	r0, r5
 80026d4:	f7fe f93f 	bl	8000956 <PE_Clear_RxEvent>
 80026d8:	8be8      	ldrh	r0, [r5, #30]
 80026da:	03a1      	lsls	r1, r4, #14
 80026dc:	4288      	cmp	r0, r1
 80026de:	d1d5      	bne.n	800268c <__iar_annotation$$branch+0x52c>
 80026e0:	220f      	movs	r2, #15
 80026e2:	2100      	movs	r1, #0
 80026e4:	7c28      	ldrb	r0, [r5, #16]
 80026e6:	68ab      	ldr	r3, [r5, #8]
 80026e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80026ea:	4798      	blx	r3
 80026ec:	68a8      	ldr	r0, [r5, #8]
 80026ee:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80026f0:	2800      	cmp	r0, #0
 80026f2:	d100      	bne.n	80026f6 <__iar_annotation$$branch+0x596>
 80026f4:	e5b2      	b.n	800225c <__iar_annotation$$branch+0xfc>
 80026f6:	2092      	movs	r0, #146	; 0x92
 80026f8:	e5b1      	b.n	800225e <__iar_annotation$$branch+0xfe>
 80026fa:	0028      	movs	r0, r5
 80026fc:	f7fe fe53 	bl	80013a6 <PE_SetPowerNegotiation>
 8002700:	220a      	movs	r2, #10
 8002702:	2100      	movs	r1, #0
 8002704:	7c28      	ldrb	r0, [r5, #16]
 8002706:	68ab      	ldr	r3, [r5, #8]
 8002708:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800270a:	4798      	blx	r3
 800270c:	6868      	ldr	r0, [r5, #4]
 800270e:	7800      	ldrb	r0, [r0, #0]
 8002710:	0780      	lsls	r0, r0, #30
 8002712:	0f80      	lsrs	r0, r0, #30
 8002714:	2802      	cmp	r0, #2
 8002716:	d102      	bne.n	800271e <__iar_annotation$$branch+0x5be>
 8002718:	7c28      	ldrb	r0, [r5, #16]
 800271a:	f003 f820 	bl	800575e <USBPD_PRL_SRCSetSinkNG>
 800271e:	2101      	movs	r1, #1
 8002720:	0028      	movs	r0, r5
 8002722:	f7fe f8d3 	bl	80008cc <PE_ChangePowerRole>
 8002726:	7f28      	ldrb	r0, [r5, #28]
 8002728:	2809      	cmp	r0, #9
 800272a:	d005      	beq.n	8002738 <__iar_annotation$$branch+0x5d8>
 800272c:	220b      	movs	r2, #11
 800272e:	2101      	movs	r1, #1
 8002730:	7c28      	ldrb	r0, [r5, #16]
 8002732:	68ab      	ldr	r3, [r5, #8]
 8002734:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002736:	4798      	blx	r3
 8002738:	2000      	movs	r0, #0
 800273a:	9000      	str	r0, [sp, #0]
 800273c:	235b      	movs	r3, #91	; 0x5b
 800273e:	2206      	movs	r2, #6
 8002740:	2100      	movs	r1, #0
 8002742:	0028      	movs	r0, r5
 8002744:	f7fe fee4 	bl	8001510 <PE_Send_CtrlMessage>
 8002748:	2800      	cmp	r0, #0
 800274a:	d108      	bne.n	800275e <__iar_annotation$$branch+0x5fe>
 800274c:	220c      	movs	r2, #12
 800274e:	2100      	movs	r1, #0
 8002750:	7c28      	ldrb	r0, [r5, #16]
 8002752:	68ab      	ldr	r3, [r5, #8]
 8002754:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002756:	4798      	blx	r3
 8002758:	48c1      	ldr	r0, [pc, #772]	; (8002a60 <.text_3>)
 800275a:	83e8      	strh	r0, [r5, #30]
 800275c:	2414      	movs	r4, #20
 800275e:	7c68      	ldrb	r0, [r5, #17]
 8002760:	285b      	cmp	r0, #91	; 0x5b
 8002762:	d00f      	beq.n	8002784 <__iar_annotation$$branch+0x624>
 8002764:	2100      	movs	r1, #0
 8002766:	0028      	movs	r0, r5
 8002768:	f7fe f8b0 	bl	80008cc <PE_ChangePowerRole>
 800276c:	2206      	movs	r2, #6
 800276e:	2101      	movs	r1, #1
 8002770:	7c28      	ldrb	r0, [r5, #16]
 8002772:	68ab      	ldr	r3, [r5, #8]
 8002774:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002776:	4798      	blx	r3
 8002778:	2207      	movs	r2, #7
 800277a:	2100      	movs	r1, #0
 800277c:	7c28      	ldrb	r0, [r5, #16]
 800277e:	68ab      	ldr	r3, [r5, #8]
 8002780:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002782:	4798      	blx	r3
 8002784:	e4bc      	b.n	8002100 <__iar_annotation$$branch+0xe>
 8002786:	9400      	str	r4, [sp, #0]
 8002788:	2358      	movs	r3, #88	; 0x58
 800278a:	220a      	movs	r2, #10
 800278c:	2100      	movs	r1, #0
 800278e:	0028      	movs	r0, r5
 8002790:	f7fe febe 	bl	8001510 <PE_Send_CtrlMessage>
 8002794:	2800      	cmp	r0, #0
 8002796:	d105      	bne.n	80027a4 <__iar_annotation$$branch+0x644>
 8002798:	2008      	movs	r0, #8
 800279a:	7728      	strb	r0, [r5, #28]
 800279c:	83ee      	strh	r6, [r5, #30]
 800279e:	241b      	movs	r4, #27
 80027a0:	2202      	movs	r2, #2
 80027a2:	e7ea      	b.n	800277a <__iar_annotation$$branch+0x61a>
 80027a4:	220f      	movs	r2, #15
 80027a6:	e7e8      	b.n	800277a <__iar_annotation$$branch+0x61a>
 80027a8:	4669      	mov	r1, sp
 80027aa:	7b09      	ldrb	r1, [r1, #12]
 80027ac:	2911      	cmp	r1, #17
 80027ae:	d10c      	bne.n	80027ca <__iar_annotation$$branch+0x66a>
 80027b0:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 80027b2:	4201      	tst	r1, r0
 80027b4:	d109      	bne.n	80027ca <__iar_annotation$$branch+0x66a>
 80027b6:	06c8      	lsls	r0, r1, #27
 80027b8:	0ec0      	lsrs	r0, r0, #27
 80027ba:	2803      	cmp	r0, #3
 80027bc:	d006      	beq.n	80027cc <__iar_annotation$$branch+0x66c>
 80027be:	2804      	cmp	r0, #4
 80027c0:	d02d      	beq.n	800281e <__iar_annotation$$branch+0x6be>
 80027c2:	280c      	cmp	r0, #12
 80027c4:	d029      	beq.n	800281a <__iar_annotation$$branch+0x6ba>
 80027c6:	2810      	cmp	r0, #16
 80027c8:	d032      	beq.n	8002830 <__iar_annotation$$branch+0x6d0>
 80027ca:	e0a5      	b.n	8002918 <__iar_annotation$$branch+0x7b8>
 80027cc:	6868      	ldr	r0, [r5, #4]
 80027ce:	6801      	ldr	r1, [r0, #0]
 80027d0:	2210      	movs	r2, #16
 80027d2:	430a      	orrs	r2, r1
 80027d4:	6002      	str	r2, [r0, #0]
 80027d6:	485c      	ldr	r0, [pc, #368]	; (8002948 <__iar_annotation$$branch+0x7e8>)
 80027d8:	83e8      	strh	r0, [r5, #30]
 80027da:	24e1      	movs	r4, #225	; 0xe1
 80027dc:	00a4      	lsls	r4, r4, #2
 80027de:	7f28      	ldrb	r0, [r5, #28]
 80027e0:	2809      	cmp	r0, #9
 80027e2:	d005      	beq.n	80027f0 <__iar_annotation$$branch+0x690>
 80027e4:	2206      	movs	r2, #6
 80027e6:	2100      	movs	r1, #0
 80027e8:	7c28      	ldrb	r0, [r5, #16]
 80027ea:	68ab      	ldr	r3, [r5, #8]
 80027ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80027ee:	4798      	blx	r3
 80027f0:	2104      	movs	r1, #4
 80027f2:	0028      	movs	r0, r5
 80027f4:	f7fe fdd7 	bl	80013a6 <PE_SetPowerNegotiation>
 80027f8:	213a      	movs	r1, #58	; 0x3a
 80027fa:	7c28      	ldrb	r0, [r5, #16]
 80027fc:	f7fd fe40 	bl	8000480 <USBPD_PE_Notification>
 8002800:	4668      	mov	r0, sp
 8002802:	7b00      	ldrb	r0, [r0, #12]
 8002804:	2814      	cmp	r0, #20
 8002806:	d005      	beq.n	8002814 <__iar_annotation$$branch+0x6b4>
 8002808:	2014      	movs	r0, #20
 800280a:	4669      	mov	r1, sp
 800280c:	7308      	strb	r0, [r1, #12]
 800280e:	0028      	movs	r0, r5
 8002810:	f7fe f8a1 	bl	8000956 <PE_Clear_RxEvent>
 8002814:	2059      	movs	r0, #89	; 0x59
 8002816:	7468      	strb	r0, [r5, #17]
 8002818:	e07e      	b.n	8002918 <__iar_annotation$$branch+0x7b8>
 800281a:	213b      	movs	r1, #59	; 0x3b
 800281c:	e000      	b.n	8002820 <__iar_annotation$$branch+0x6c0>
 800281e:	2116      	movs	r1, #22
 8002820:	7c28      	ldrb	r0, [r5, #16]
 8002822:	f7fd fe2d 	bl	8000480 <USBPD_PE_Notification>
 8002826:	4668      	mov	r0, sp
 8002828:	7b00      	ldrb	r0, [r0, #12]
 800282a:	2814      	cmp	r0, #20
 800282c:	d108      	bne.n	8002840 <__iar_annotation$$branch+0x6e0>
 800282e:	e070      	b.n	8002912 <__iar_annotation$$branch+0x7b2>
 8002830:	2117      	movs	r1, #23
 8002832:	7c28      	ldrb	r0, [r5, #16]
 8002834:	f7fd fe24 	bl	8000480 <USBPD_PE_Notification>
 8002838:	4668      	mov	r0, sp
 800283a:	7b00      	ldrb	r0, [r0, #12]
 800283c:	2814      	cmp	r0, #20
 800283e:	d068      	beq.n	8002912 <__iar_annotation$$branch+0x7b2>
 8002840:	2014      	movs	r0, #20
 8002842:	4669      	mov	r1, sp
 8002844:	7308      	strb	r0, [r1, #12]
 8002846:	0028      	movs	r0, r5
 8002848:	f7fe f885 	bl	8000956 <PE_Clear_RxEvent>
 800284c:	e061      	b.n	8002912 <__iar_annotation$$branch+0x7b2>
 800284e:	2000      	movs	r0, #0
 8002850:	9004      	str	r0, [sp, #16]
 8002852:	ab04      	add	r3, sp, #16
 8002854:	aa05      	add	r2, sp, #20
 8002856:	2100      	movs	r1, #0
 8002858:	7c28      	ldrb	r0, [r5, #16]
 800285a:	68ae      	ldr	r6, [r5, #8]
 800285c:	6976      	ldr	r6, [r6, #20]
 800285e:	47b0      	blx	r6
 8002860:	2104      	movs	r1, #4
 8002862:	9804      	ldr	r0, [sp, #16]
 8002864:	f7fe fdf2 	bl	800144c <PE_CheckDataSizeFromGetDataInfo>
 8002868:	2800      	cmp	r0, #0
 800286a:	d001      	beq.n	8002870 <__iar_annotation$$branch+0x710>
 800286c:	2003      	movs	r0, #3
 800286e:	e4b5      	b.n	80021dc <__iar_annotation$$branch+0x7c>
 8002870:	9002      	str	r0, [sp, #8]
 8002872:	2003      	movs	r0, #3
 8002874:	9001      	str	r0, [sp, #4]
 8002876:	9804      	ldr	r0, [sp, #16]
 8002878:	0880      	lsrs	r0, r0, #2
 800287a:	9000      	str	r0, [sp, #0]
 800287c:	ab05      	add	r3, sp, #20
 800287e:	2201      	movs	r2, #1
 8002880:	2100      	movs	r1, #0
 8002882:	0028      	movs	r0, r5
 8002884:	f7fe fe6f 	bl	8001566 <PE_Send_DataMessage>
 8002888:	e43a      	b.n	8002100 <__iar_annotation$$branch+0xe>
 800288a:	2000      	movs	r0, #0
 800288c:	9002      	str	r0, [sp, #8]
 800288e:	2003      	movs	r0, #3
 8002890:	9001      	str	r0, [sp, #4]
 8002892:	2001      	movs	r0, #1
 8002894:	9000      	str	r0, [sp, #0]
 8002896:	002b      	movs	r3, r5
 8002898:	332c      	adds	r3, #44	; 0x2c
 800289a:	2206      	movs	r2, #6
 800289c:	2100      	movs	r1, #0
 800289e:	0028      	movs	r0, r5
 80028a0:	f7fe fe61 	bl	8001566 <PE_Send_DataMessage>
 80028a4:	2800      	cmp	r0, #0
 80028a6:	d1ef      	bne.n	8002888 <__iar_annotation$$branch+0x728>
 80028a8:	215d      	movs	r1, #93	; 0x5d
 80028aa:	e655      	b.n	8002558 <__iar_annotation$$branch+0x3f8>
 80028ac:	9400      	str	r4, [sp, #0]
 80028ae:	2366      	movs	r3, #102	; 0x66
 80028b0:	2214      	movs	r2, #20
 80028b2:	2100      	movs	r1, #0
 80028b4:	0028      	movs	r0, r5
 80028b6:	f7fe fe2b 	bl	8001510 <PE_Send_CtrlMessage>
 80028ba:	2800      	cmp	r0, #0
 80028bc:	d1e4      	bne.n	8002888 <__iar_annotation$$branch+0x728>
 80028be:	83ee      	strh	r6, [r5, #30]
 80028c0:	241b      	movs	r4, #27
 80028c2:	214a      	movs	r1, #74	; 0x4a
 80028c4:	7c28      	ldrb	r0, [r5, #16]
 80028c6:	f7fd fddb 	bl	8000480 <USBPD_PE_Notification>
 80028ca:	200b      	movs	r0, #11
 80028cc:	7728      	strb	r0, [r5, #28]
 80028ce:	e7db      	b.n	8002888 <__iar_annotation$$branch+0x728>
 80028d0:	4668      	mov	r0, sp
 80028d2:	7b00      	ldrb	r0, [r0, #12]
 80028d4:	2811      	cmp	r0, #17
 80028d6:	d11f      	bne.n	8002918 <__iar_annotation$$branch+0x7b8>
 80028d8:	8ea8      	ldrh	r0, [r5, #52]	; 0x34
 80028da:	0bc1      	lsrs	r1, r0, #15
 80028dc:	d01c      	beq.n	8002918 <__iar_annotation$$branch+0x7b8>
 80028de:	06c0      	lsls	r0, r0, #27
 80028e0:	0ec0      	lsrs	r0, r0, #27
 80028e2:	280c      	cmp	r0, #12
 80028e4:	d118      	bne.n	8002918 <__iar_annotation$$branch+0x7b8>
 80028e6:	2304      	movs	r3, #4
 80028e8:	6ba8      	ldr	r0, [r5, #56]	; 0x38
 80028ea:	1d02      	adds	r2, r0, #4
 80028ec:	210a      	movs	r1, #10
 80028ee:	7c28      	ldrb	r0, [r5, #16]
 80028f0:	68ac      	ldr	r4, [r5, #8]
 80028f2:	69a4      	ldr	r4, [r4, #24]
 80028f4:	47a0      	blx	r4
 80028f6:	4668      	mov	r0, sp
 80028f8:	7b00      	ldrb	r0, [r0, #12]
 80028fa:	2814      	cmp	r0, #20
 80028fc:	d005      	beq.n	800290a <__iar_annotation$$branch+0x7aa>
 80028fe:	2014      	movs	r0, #20
 8002900:	4669      	mov	r1, sp
 8002902:	7308      	strb	r0, [r1, #12]
 8002904:	0028      	movs	r0, r5
 8002906:	f7fe f826 	bl	8000956 <PE_Clear_RxEvent>
 800290a:	214b      	movs	r1, #75	; 0x4b
 800290c:	7c28      	ldrb	r0, [r5, #16]
 800290e:	f7fd fdb7 	bl	8000480 <USBPD_PE_Notification>
 8002912:	2003      	movs	r0, #3
 8002914:	7468      	strb	r0, [r5, #17]
 8002916:	2400      	movs	r4, #0
 8002918:	8be8      	ldrh	r0, [r5, #30]
 800291a:	2180      	movs	r1, #128	; 0x80
 800291c:	0209      	lsls	r1, r1, #8
 800291e:	4288      	cmp	r0, r1
 8002920:	d1b2      	bne.n	8002888 <__iar_annotation$$branch+0x728>
 8002922:	e041      	b.n	80029a8 <__iar_annotation$$branch+0x848>
 8002924:	4895      	ldr	r0, [pc, #596]	; (8002b7c <.text_5>)
 8002926:	182f      	adds	r7, r5, r0
 8002928:	9400      	str	r4, [sp, #0]
 800292a:	2339      	movs	r3, #57	; 0x39
 800292c:	783a      	ldrb	r2, [r7, #0]
 800292e:	2100      	movs	r1, #0
 8002930:	0028      	movs	r0, r5
 8002932:	f7fe fded 	bl	8001510 <PE_Send_CtrlMessage>
 8002936:	2800      	cmp	r0, #0
 8002938:	d1a6      	bne.n	8002888 <__iar_annotation$$branch+0x728>
 800293a:	7878      	ldrb	r0, [r7, #1]
 800293c:	7728      	strb	r0, [r5, #28]
 800293e:	2144      	movs	r1, #68	; 0x44
 8002940:	7c28      	ldrb	r0, [r5, #16]
 8002942:	f7fd fd9d 	bl	8000480 <USBPD_PE_Notification>
 8002946:	e4b8      	b.n	80022ba <__iar_annotation$$branch+0x15a>
 8002948:	00008384 	.word	0x00008384
 800294c:	4668      	mov	r0, sp
 800294e:	7b00      	ldrb	r0, [r0, #12]
 8002950:	2814      	cmp	r0, #20
 8002952:	d024      	beq.n	800299e <__iar_annotation$$branch+0x83e>
 8002954:	8ea8      	ldrh	r0, [r5, #52]	; 0x34
 8002956:	0bc0      	lsrs	r0, r0, #15
 8002958:	d00e      	beq.n	8002978 <__iar_annotation$$branch+0x818>
 800295a:	0028      	movs	r0, r5
 800295c:	f7fe fe40 	bl	80015e0 <PE_Check_ExtendedMessage>
 8002960:	4668      	mov	r0, sp
 8002962:	7b00      	ldrb	r0, [r0, #12]
 8002964:	2814      	cmp	r0, #20
 8002966:	d005      	beq.n	8002974 <__iar_annotation$$branch+0x814>
 8002968:	2014      	movs	r0, #20
 800296a:	4669      	mov	r1, sp
 800296c:	7308      	strb	r0, [r1, #12]
 800296e:	0028      	movs	r0, r5
 8002970:	f7fd fff1 	bl	8000956 <PE_Clear_RxEvent>
 8002974:	2000      	movs	r0, #0
 8002976:	83e8      	strh	r0, [r5, #30]
 8002978:	8ea8      	ldrh	r0, [r5, #52]	; 0x34
 800297a:	490c      	ldr	r1, [pc, #48]	; (80029ac <__iar_annotation$$branch+0x84c>)
 800297c:	4001      	ands	r1, r0
 800297e:	2910      	cmp	r1, #16
 8002980:	d10d      	bne.n	800299e <__iar_annotation$$branch+0x83e>
 8002982:	2003      	movs	r0, #3
 8002984:	7468      	strb	r0, [r5, #17]
 8002986:	2400      	movs	r4, #0
 8002988:	4668      	mov	r0, sp
 800298a:	7b00      	ldrb	r0, [r0, #12]
 800298c:	2814      	cmp	r0, #20
 800298e:	d005      	beq.n	800299c <__iar_annotation$$branch+0x83c>
 8002990:	2014      	movs	r0, #20
 8002992:	4669      	mov	r1, sp
 8002994:	7308      	strb	r0, [r1, #12]
 8002996:	0028      	movs	r0, r5
 8002998:	f7fd ffdd 	bl	8000956 <PE_Clear_RxEvent>
 800299c:	83ec      	strh	r4, [r5, #30]
 800299e:	8be8      	ldrh	r0, [r5, #30]
 80029a0:	2180      	movs	r1, #128	; 0x80
 80029a2:	0209      	lsls	r1, r1, #8
 80029a4:	4288      	cmp	r0, r1
 80029a6:	d11c      	bne.n	80029e2 <__iar_annotation$$branch+0x882>
 80029a8:	2003      	movs	r0, #3
 80029aa:	e458      	b.n	800225e <__iar_annotation$$branch+0xfe>
 80029ac:	0000f01f 	.word	0x0000f01f
 80029b0:	0028      	movs	r0, r5
 80029b2:	f7fe ff37 	bl	8001824 <PE_SubStateMachine_ExtendedMessages>
 80029b6:	e63b      	b.n	8002630 <__iar_annotation$$branch+0x4d0>
 80029b8:	a903      	add	r1, sp, #12
 80029ba:	0028      	movs	r0, r5
 80029bc:	f7fe f9d4 	bl	8000d68 <PE_SubStateMachine_Generic>
 80029c0:	e636      	b.n	8002630 <__iar_annotation$$branch+0x4d0>
 80029c2:	a903      	add	r1, sp, #12
 80029c4:	0028      	movs	r0, r5
 80029c6:	f001 f9ef 	bl	8003da8 <PE_SubStateMachine_VconnSwap>
 80029ca:	0004      	movs	r4, r0
 80029cc:	6868      	ldr	r0, [r5, #4]
 80029ce:	6800      	ldr	r0, [r0, #0]
 80029d0:	0401      	lsls	r1, r0, #16
 80029d2:	0fc9      	lsrs	r1, r1, #31
 80029d4:	d006      	beq.n	80029e4 <__iar_annotation$$branch+0x884>
 80029d6:	6828      	ldr	r0, [r5, #0]
 80029d8:	6801      	ldr	r1, [r0, #0]
 80029da:	4668      	mov	r0, sp
 80029dc:	7b40      	ldrb	r0, [r0, #13]
 80029de:	f002 fee1 	bl	80057a4 <USBPD_PRL_SOPCapability>
 80029e2:	e751      	b.n	8002888 <__iar_annotation$$branch+0x728>
 80029e4:	2101      	movs	r1, #1
 80029e6:	e7f8      	b.n	80029da <__iar_annotation$$branch+0x87a>
 80029e8:	4668      	mov	r0, sp
 80029ea:	7b01      	ldrb	r1, [r0, #12]
 80029ec:	0028      	movs	r0, r5
 80029ee:	f002 fc3b 	bl	8005268 <PE_StateMachine_UVDM>
 80029f2:	e749      	b.n	8002888 <__iar_annotation$$branch+0x728>
 80029f4:	2000      	movs	r0, #0
 80029f6:	9000      	str	r0, [sp, #0]
 80029f8:	2358      	movs	r3, #88	; 0x58
 80029fa:	2213      	movs	r2, #19
 80029fc:	2100      	movs	r1, #0
 80029fe:	0028      	movs	r0, r5
 8002a00:	f7fe fd86 	bl	8001510 <PE_Send_CtrlMessage>
 8002a04:	2800      	cmp	r0, #0
 8002a06:	d1f4      	bne.n	80029f2 <__iar_annotation$$branch+0x892>
 8002a08:	2009      	movs	r0, #9
 8002a0a:	7728      	strb	r0, [r5, #28]
 8002a0c:	e455      	b.n	80022ba <__iar_annotation$$branch+0x15a>
 8002a0e:	6968      	ldr	r0, [r5, #20]
 8002a10:	2701      	movs	r7, #1
 8002a12:	0b41      	lsrs	r1, r0, #13
 8002a14:	4039      	ands	r1, r7
 8002a16:	d019      	beq.n	8002a4c <__iar_annotation$$branch+0x8ec>
 8002a18:	0b80      	lsrs	r0, r0, #14
 8002a1a:	4038      	ands	r0, r7
 8002a1c:	d007      	beq.n	8002a2e <__iar_annotation$$branch+0x8ce>
 8002a1e:	215b      	movs	r1, #91	; 0x5b
 8002a20:	7c28      	ldrb	r0, [r5, #16]
 8002a22:	f7fd fd2d 	bl	8000480 <USBPD_PE_Notification>
 8002a26:	6968      	ldr	r0, [r5, #20]
 8002a28:	4955      	ldr	r1, [pc, #340]	; (8002b80 <.text_6>)
 8002a2a:	4001      	ands	r1, r0
 8002a2c:	6169      	str	r1, [r5, #20]
 8002a2e:	2003      	movs	r0, #3
 8002a30:	7468      	strb	r0, [r5, #17]
 8002a32:	7ca9      	ldrb	r1, [r5, #18]
 8002a34:	2903      	cmp	r1, #3
 8002a36:	d008      	beq.n	8002a4a <__iar_annotation$$branch+0x8ea>
 8002a38:	74a8      	strb	r0, [r5, #18]
 8002a3a:	2000      	movs	r0, #0
 8002a3c:	9000      	str	r0, [sp, #0]
 8002a3e:	2300      	movs	r3, #0
 8002a40:	2203      	movs	r2, #3
 8002a42:	7c29      	ldrb	r1, [r5, #16]
 8002a44:	2004      	movs	r0, #4
 8002a46:	6834      	ldr	r4, [r6, #0]
 8002a48:	47a0      	blx	r4
 8002a4a:	2401      	movs	r4, #1
 8002a4c:	6968      	ldr	r0, [r5, #20]
 8002a4e:	494d      	ldr	r1, [pc, #308]	; (8002b84 <.text_7>)
 8002a50:	4001      	ands	r1, r0
 8002a52:	6169      	str	r1, [r5, #20]
 8002a54:	2c00      	cmp	r4, #0
 8002a56:	d101      	bne.n	8002a5c <__iar_annotation$$branch>

08002a58 <__iar_annotation$$branch>:
 8002a58:	f7ff fa3e 	bl	8001ed8 <USBPD_PE_StateMachine_SNK+0xb0>

08002a5c <__iar_annotation$$branch>:
 8002a5c:	f7ff fb8e 	bl	800217c <__iar_annotation$$branch+0x1c>

08002a60 <.text_3>:
 8002a60:	00008014 	.word	0x00008014

08002a64 <PE_StateMachine_SNK_ReadyWait>:
 8002a64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002a66:	0004      	movs	r4, r0
 8002a68:	000e      	movs	r6, r1
 8002a6a:	2702      	movs	r7, #2
 8002a6c:	7830      	ldrb	r0, [r6, #0]
 8002a6e:	2814      	cmp	r0, #20
 8002a70:	d00b      	beq.n	8002a8a <PE_StateMachine_SNK_ReadyWait+0x26>
 8002a72:	0020      	movs	r0, r4
 8002a74:	f7fe fffc 	bl	8001a70 <PE_ManageRXEvent>
 8002a78:	7830      	ldrb	r0, [r6, #0]
 8002a7a:	2814      	cmp	r0, #20
 8002a7c:	d07b      	beq.n	8002b76 <PE_StateMachine_SNK_ReadyWait+0x112>
 8002a7e:	2014      	movs	r0, #20
 8002a80:	7030      	strb	r0, [r6, #0]
 8002a82:	0020      	movs	r0, r4
 8002a84:	f7fd ff67 	bl	8000956 <PE_Clear_RxEvent>
 8002a88:	e075      	b.n	8002b76 <PE_StateMachine_SNK_ReadyWait+0x112>
 8002a8a:	6961      	ldr	r1, [r4, #20]
 8002a8c:	0cc8      	lsrs	r0, r1, #19
 8002a8e:	03be      	lsls	r6, r7, #14
 8002a90:	2700      	movs	r7, #0
 8002a92:	2800      	cmp	r0, #0
 8002a94:	d021      	beq.n	8002ada <PE_StateMachine_SNK_ReadyWait+0x76>
 8002a96:	8c21      	ldrh	r1, [r4, #32]
 8002a98:	42b1      	cmp	r1, r6
 8002a9a:	d111      	bne.n	8002ac0 <PE_StateMachine_SNK_ReadyWait+0x5c>
 8002a9c:	200f      	movs	r0, #15
 8002a9e:	7460      	strb	r0, [r4, #17]
 8002aa0:	9700      	str	r7, [sp, #0]
 8002aa2:	2300      	movs	r3, #0
 8002aa4:	2270      	movs	r2, #112	; 0x70
 8002aa6:	7c21      	ldrb	r1, [r4, #16]
 8002aa8:	2009      	movs	r0, #9
 8002aaa:	4d37      	ldr	r5, [pc, #220]	; (8002b88 <.text_8>)
 8002aac:	682d      	ldr	r5, [r5, #0]
 8002aae:	47a8      	blx	r5
 8002ab0:	2098      	movs	r0, #152	; 0x98
 8002ab2:	0080      	lsls	r0, r0, #2
 8002ab4:	5c20      	ldrb	r0, [r4, r0]
 8002ab6:	1c40      	adds	r0, r0, #1
 8002ab8:	2198      	movs	r1, #152	; 0x98
 8002aba:	0089      	lsls	r1, r1, #2
 8002abc:	5460      	strb	r0, [r4, r1]
 8002abe:	e05a      	b.n	8002b76 <PE_StateMachine_SNK_ReadyWait+0x112>
 8002ac0:	8ea1      	ldrh	r1, [r4, #52]	; 0x34
 8002ac2:	0509      	lsls	r1, r1, #20
 8002ac4:	0f49      	lsrs	r1, r1, #29
 8002ac6:	180a      	adds	r2, r1, r0
 8002ac8:	2333      	movs	r3, #51	; 0x33
 8002aca:	435a      	muls	r2, r3
 8002acc:	4316      	orrs	r6, r2
 8002ace:	8426      	strh	r6, [r4, #32]
 8002ad0:	180f      	adds	r7, r1, r0
 8002ad2:	2033      	movs	r0, #51	; 0x33
 8002ad4:	4347      	muls	r7, r0
 8002ad6:	b2bf      	uxth	r7, r7
 8002ad8:	e04d      	b.n	8002b76 <PE_StateMachine_SNK_ReadyWait+0x112>
 8002ada:	8ca0      	ldrh	r0, [r4, #36]	; 0x24
 8002adc:	42b0      	cmp	r0, r6
 8002ade:	d104      	bne.n	8002aea <PE_StateMachine_SNK_ReadyWait+0x86>
 8002ae0:	2045      	movs	r0, #69	; 0x45
 8002ae2:	7460      	strb	r0, [r4, #17]
 8002ae4:	430e      	orrs	r6, r1
 8002ae6:	6166      	str	r6, [r4, #20]
 8002ae8:	e045      	b.n	8002b76 <PE_StateMachine_SNK_ReadyWait+0x112>
 8002aea:	7c20      	ldrb	r0, [r4, #16]
 8002aec:	f7fd ff58 	bl	80009a0 <PE_PRL_Control_RxEvent>
 8002af0:	2800      	cmp	r0, #0
 8002af2:	d128      	bne.n	8002b46 <PE_StateMachine_SNK_ReadyWait+0xe2>
 8002af4:	2032      	movs	r0, #50	; 0x32
 8002af6:	5c20      	ldrb	r0, [r4, r0]
 8002af8:	2800      	cmp	r0, #0
 8002afa:	d024      	beq.n	8002b46 <PE_StateMachine_SNK_ReadyWait+0xe2>
 8002afc:	6860      	ldr	r0, [r4, #4]
 8002afe:	6800      	ldr	r0, [r0, #0]
 8002b00:	2103      	movs	r1, #3
 8002b02:	2203      	movs	r2, #3
 8002b04:	4002      	ands	r2, r0
 8002b06:	2a01      	cmp	r2, #1
 8002b08:	d007      	beq.n	8002b1a <PE_StateMachine_SNK_ReadyWait+0xb6>
 8002b0a:	4001      	ands	r1, r0
 8002b0c:	2902      	cmp	r1, #2
 8002b0e:	d11a      	bne.n	8002b46 <PE_StateMachine_SNK_ReadyWait+0xe2>
 8002b10:	7c20      	ldrb	r0, [r4, #16]
 8002b12:	f002 fe3b 	bl	800578c <USBPD_PRL_IsResistor_SinkTxOK>
 8002b16:	2801      	cmp	r0, #1
 8002b18:	d115      	bne.n	8002b46 <PE_StateMachine_SNK_ReadyWait+0xe2>
 8002b1a:	2033      	movs	r0, #51	; 0x33
 8002b1c:	5c20      	ldrb	r0, [r4, r0]
 8002b1e:	2131      	movs	r1, #49	; 0x31
 8002b20:	5460      	strb	r0, [r4, r1]
 8002b22:	2032      	movs	r0, #50	; 0x32
 8002b24:	5c20      	ldrb	r0, [r4, r0]
 8002b26:	7460      	strb	r0, [r4, #17]
 8002b28:	2845      	cmp	r0, #69	; 0x45
 8002b2a:	d102      	bne.n	8002b32 <PE_StateMachine_SNK_ReadyWait+0xce>
 8002b2c:	6960      	ldr	r0, [r4, #20]
 8002b2e:	4306      	orrs	r6, r0
 8002b30:	6166      	str	r6, [r4, #20]
 8002b32:	2132      	movs	r1, #50	; 0x32
 8002b34:	5467      	strb	r7, [r4, r1]
 8002b36:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8002b38:	62e0      	str	r0, [r4, #44]	; 0x2c
 8002b3a:	6960      	ldr	r0, [r4, #20]
 8002b3c:	2180      	movs	r1, #128	; 0x80
 8002b3e:	01c9      	lsls	r1, r1, #7
 8002b40:	4301      	orrs	r1, r0
 8002b42:	6161      	str	r1, [r4, #20]
 8002b44:	e017      	b.n	8002b76 <PE_StateMachine_SNK_ReadyWait+0x112>
 8002b46:	8c60      	ldrh	r0, [r4, #34]	; 0x22
 8002b48:	42b0      	cmp	r0, r6
 8002b4a:	d109      	bne.n	8002b60 <PE_StateMachine_SNK_ReadyWait+0xfc>
 8002b4c:	8467      	strh	r7, [r4, #34]	; 0x22
 8002b4e:	2098      	movs	r0, #152	; 0x98
 8002b50:	0080      	lsls	r0, r0, #2
 8002b52:	1820      	adds	r0, r4, r0
 8002b54:	7881      	ldrb	r1, [r0, #2]
 8002b56:	1c49      	adds	r1, r1, #1
 8002b58:	7081      	strb	r1, [r0, #2]
 8002b5a:	2005      	movs	r0, #5
 8002b5c:	7460      	strb	r0, [r4, #17]
 8002b5e:	e00a      	b.n	8002b76 <PE_StateMachine_SNK_ReadyWait+0x112>
 8002b60:	0020      	movs	r0, r4
 8002b62:	f7fe fc47 	bl	80013f4 <PE_CalculateMinTiming>
 8002b66:	2132      	movs	r1, #50	; 0x32
 8002b68:	5c61      	ldrb	r1, [r4, r1]
 8002b6a:	2900      	cmp	r1, #0
 8002b6c:	d002      	beq.n	8002b74 <PE_StateMachine_SNK_ReadyWait+0x110>
 8002b6e:	2802      	cmp	r0, #2
 8002b70:	d300      	bcc.n	8002b74 <PE_StateMachine_SNK_ReadyWait+0x110>
 8002b72:	2002      	movs	r0, #2
 8002b74:	0007      	movs	r7, r0
 8002b76:	0038      	movs	r0, r7
 8002b78:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}
	...

08002b7c <.text_5>:
 8002b7c:	0000025e 	.word	0x0000025e

08002b80 <.text_6>:
 8002b80:	ffffbfff 	.word	0xffffbfff

08002b84 <.text_7>:
 8002b84:	ffffdfff 	.word	0xffffdfff

08002b88 <.text_8>:
 8002b88:	20000000 	.word	0x20000000

08002b8c <USBPD_PE_StateMachine_SRC>:
 8002b8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002b8e:	b086      	sub	sp, #24
 8002b90:	0005      	movs	r5, r0
 8002b92:	4829      	ldr	r0, [pc, #164]	; (8002c38 <USBPD_PE_StateMachine_SRC+0xac>)
 8002b94:	00a9      	lsls	r1, r5, #2
 8002b96:	5844      	ldr	r4, [r0, r1]
 8002b98:	7c60      	ldrb	r0, [r4, #17]
 8002b9a:	2848      	cmp	r0, #72	; 0x48
 8002b9c:	d134      	bne.n	8002c08 <USBPD_PE_StateMachine_SRC+0x7c>
 8002b9e:	0020      	movs	r0, r4
 8002ba0:	f7fd ffc0 	bl	8000b24 <PE_Reset_ZI>
 8002ba4:	0020      	movs	r0, r4
 8002ba6:	f7fd fff3 	bl	8000b90 <PE_Reset_Counter>
 8002baa:	6820      	ldr	r0, [r4, #0]
 8002bac:	7900      	ldrb	r0, [r0, #4]
 8002bae:	0783      	lsls	r3, r0, #30
 8002bb0:	0f9b      	lsrs	r3, r3, #30
 8002bb2:	2201      	movs	r2, #1
 8002bb4:	2101      	movs	r1, #1
 8002bb6:	7c20      	ldrb	r0, [r4, #16]
 8002bb8:	f002 fd83 	bl	80056c2 <USBPD_PRL_SetHeader>
 8002bbc:	6860      	ldr	r0, [r4, #4]
 8002bbe:	6801      	ldr	r1, [r0, #0]
 8002bc0:	2208      	movs	r2, #8
 8002bc2:	430a      	orrs	r2, r1
 8002bc4:	6002      	str	r2, [r0, #0]
 8002bc6:	6860      	ldr	r0, [r4, #4]
 8002bc8:	6801      	ldr	r1, [r0, #0]
 8002bca:	2203      	movs	r2, #3
 8002bcc:	4391      	bics	r1, r2
 8002bce:	6822      	ldr	r2, [r4, #0]
 8002bd0:	7912      	ldrb	r2, [r2, #4]
 8002bd2:	0792      	lsls	r2, r2, #30
 8002bd4:	0f92      	lsrs	r2, r2, #30
 8002bd6:	430a      	orrs	r2, r1
 8002bd8:	6002      	str	r2, [r0, #0]
 8002bda:	2101      	movs	r1, #1
 8002bdc:	7c20      	ldrb	r0, [r4, #16]
 8002bde:	f002 fde1 	bl	80057a4 <USBPD_PRL_SOPCapability>
 8002be2:	7c20      	ldrb	r0, [r4, #16]
 8002be4:	f003 f84a 	bl	8005c7c <USBPD_PRL_Reset>
 8002be8:	2002      	movs	r0, #2
 8002bea:	7460      	strb	r0, [r4, #17]
 8002bec:	7ca0      	ldrb	r0, [r4, #18]
 8002bee:	2802      	cmp	r0, #2
 8002bf0:	d00a      	beq.n	8002c08 <USBPD_PE_StateMachine_SRC+0x7c>
 8002bf2:	2002      	movs	r0, #2
 8002bf4:	74a0      	strb	r0, [r4, #18]
 8002bf6:	2000      	movs	r0, #0
 8002bf8:	9000      	str	r0, [sp, #0]
 8002bfa:	2300      	movs	r3, #0
 8002bfc:	2202      	movs	r2, #2
 8002bfe:	7c21      	ldrb	r1, [r4, #16]
 8002c00:	2004      	movs	r0, #4
 8002c02:	4eca      	ldr	r6, [pc, #808]	; (8002f2c <__iar_annotation$$branch+0x6c>)
 8002c04:	6836      	ldr	r6, [r6, #0]
 8002c06:	47b0      	blx	r6
 8002c08:	6960      	ldr	r0, [r4, #20]
 8002c0a:	0341      	lsls	r1, r0, #13
 8002c0c:	0fc9      	lsrs	r1, r1, #31
 8002c0e:	d006      	beq.n	8002c1e <USBPD_PE_StateMachine_SRC+0x92>
 8002c10:	49c7      	ldr	r1, [pc, #796]	; (8002f30 <__iar_annotation$$branch+0x70>)
 8002c12:	4001      	ands	r1, r0
 8002c14:	6161      	str	r1, [r4, #20]
 8002c16:	2164      	movs	r1, #100	; 0x64
 8002c18:	7c20      	ldrb	r0, [r4, #16]
 8002c1a:	f7fd fc31 	bl	8000480 <USBPD_PE_Notification>
 8002c1e:	0020      	movs	r0, r4
 8002c20:	f7fd fe62 	bl	80008e8 <PE_Get_RxEvent>
 8002c24:	4669      	mov	r1, sp
 8002c26:	7308      	strb	r0, [r1, #12]
 8002c28:	4668      	mov	r0, sp
 8002c2a:	7b00      	ldrb	r0, [r0, #12]
 8002c2c:	2803      	cmp	r0, #3
 8002c2e:	d105      	bne.n	8002c3c <USBPD_PE_StateMachine_SRC+0xb0>
 8002c30:	2001      	movs	r0, #1
 8002c32:	b007      	add	sp, #28
 8002c34:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002c36:	bf00      	nop
 8002c38:	200001bc 	.word	0x200001bc
 8002c3c:	4668      	mov	r0, sp
 8002c3e:	7345      	strb	r5, [r0, #13]
 8002c40:	6860      	ldr	r0, [r4, #4]
 8002c42:	6800      	ldr	r0, [r0, #0]
 8002c44:	04c1      	lsls	r1, r0, #19
 8002c46:	0fc9      	lsrs	r1, r1, #31
 8002c48:	d100      	bne.n	8002c4c <USBPD_PE_StateMachine_SRC+0xc0>
 8002c4a:	e13b      	b.n	8002ec4 <__iar_annotation$$branch+0x4>
 8002c4c:	6960      	ldr	r0, [r4, #20]
 8002c4e:	0381      	lsls	r1, r0, #14
 8002c50:	0fc9      	lsrs	r1, r1, #31
 8002c52:	d100      	bne.n	8002c56 <USBPD_PE_StateMachine_SRC+0xca>
 8002c54:	e144      	b.n	8002ee0 <__iar_annotation$$branch+0x20>
 8002c56:	4668      	mov	r0, sp
 8002c58:	7b40      	ldrb	r0, [r0, #13]
 8002c5a:	f002 fd9b 	bl	8005794 <USBPD_PRL_FastRoleSwapSignalling>
 8002c5e:	20a6      	movs	r0, #166	; 0xa6
 8002c60:	7460      	strb	r0, [r4, #17]
 8002c62:	2109      	movs	r1, #9
 8002c64:	7721      	strb	r1, [r4, #28]
 8002c66:	2100      	movs	r1, #0
 8002c68:	2232      	movs	r2, #50	; 0x32
 8002c6a:	54a1      	strb	r1, [r4, r2]
 8002c6c:	6961      	ldr	r1, [r4, #20]
 8002c6e:	4ab1      	ldr	r2, [pc, #708]	; (8002f34 <__iar_annotation$$branch+0x74>)
 8002c70:	400a      	ands	r2, r1
 8002c72:	6162      	str	r2, [r4, #20]
 8002c74:	49b0      	ldr	r1, [pc, #704]	; (8002f38 <__iar_annotation$$branch+0x78>)
 8002c76:	84e1      	strh	r1, [r4, #38]	; 0x26
 8002c78:	7ca1      	ldrb	r1, [r4, #18]
 8002c7a:	29a6      	cmp	r1, #166	; 0xa6
 8002c7c:	d000      	beq.n	8002c80 <USBPD_PE_StateMachine_SRC+0xf4>
 8002c7e:	e125      	b.n	8002ecc <__iar_annotation$$branch+0xc>
 8002c80:	2502      	movs	r5, #2
 8002c82:	4668      	mov	r0, sp
 8002c84:	7b00      	ldrb	r0, [r0, #12]
 8002c86:	2811      	cmp	r0, #17
 8002c88:	d11f      	bne.n	8002cca <USBPD_PE_StateMachine_SRC+0x13e>
 8002c8a:	6860      	ldr	r0, [r4, #4]
 8002c8c:	6800      	ldr	r0, [r0, #0]
 8002c8e:	0701      	lsls	r1, r0, #28
 8002c90:	0fc9      	lsrs	r1, r1, #31
 8002c92:	8ea0      	ldrh	r0, [r4, #52]	; 0x34
 8002c94:	0680      	lsls	r0, r0, #26
 8002c96:	0fc2      	lsrs	r2, r0, #31
 8002c98:	4291      	cmp	r1, r2
 8002c9a:	d116      	bne.n	8002cca <USBPD_PE_StateMachine_SRC+0x13e>
 8002c9c:	2014      	movs	r0, #20
 8002c9e:	4669      	mov	r1, sp
 8002ca0:	7308      	strb	r0, [r1, #12]
 8002ca2:	0020      	movs	r0, r4
 8002ca4:	f7fd fe57 	bl	8000956 <PE_Clear_RxEvent>
 8002ca8:	2092      	movs	r0, #146	; 0x92
 8002caa:	7460      	strb	r0, [r4, #17]
 8002cac:	7ca0      	ldrb	r0, [r4, #18]
 8002cae:	2892      	cmp	r0, #146	; 0x92
 8002cb0:	d100      	bne.n	8002cb4 <USBPD_PE_StateMachine_SRC+0x128>
 8002cb2:	e155      	b.n	8002f60 <__iar_annotation$$branch+0xa0>
 8002cb4:	2092      	movs	r0, #146	; 0x92
 8002cb6:	74a0      	strb	r0, [r4, #18]
 8002cb8:	2000      	movs	r0, #0
 8002cba:	9000      	str	r0, [sp, #0]
 8002cbc:	2300      	movs	r3, #0
 8002cbe:	2292      	movs	r2, #146	; 0x92
 8002cc0:	7c21      	ldrb	r1, [r4, #16]
 8002cc2:	2004      	movs	r0, #4
 8002cc4:	4e99      	ldr	r6, [pc, #612]	; (8002f2c <__iar_annotation$$branch+0x6c>)
 8002cc6:	6836      	ldr	r6, [r6, #0]
 8002cc8:	47b0      	blx	r6
 8002cca:	7c60      	ldrb	r0, [r4, #17]
 8002ccc:	499b      	ldr	r1, [pc, #620]	; (8002f3c <__iar_annotation$$branch+0x7c>)
 8002cce:	1866      	adds	r6, r4, r1
 8002cd0:	4f9b      	ldr	r7, [pc, #620]	; (8002f40 <__iar_annotation$$branch+0x80>)
 8002cd2:	499c      	ldr	r1, [pc, #624]	; (8002f44 <__iar_annotation$$branch+0x84>)
 8002cd4:	0002      	movs	r2, r0
 8002cd6:	d100      	bne.n	8002cda <USBPD_PE_StateMachine_SRC+0x14e>
 8002cd8:	e136      	b.n	8002f48 <__iar_annotation$$branch+0x88>
 8002cda:	1e42      	subs	r2, r0, #1
 8002cdc:	d067      	beq.n	8002dae <__iar_annotation$$branch+0x8>
 8002cde:	1e52      	subs	r2, r2, #1
 8002ce0:	d100      	bne.n	8002ce4 <USBPD_PE_StateMachine_SRC+0x158>
 8002ce2:	e149      	b.n	8002f78 <__iar_annotation$$branch+0xb8>
 8002ce4:	1e52      	subs	r2, r2, #1
 8002ce6:	2a01      	cmp	r2, #1
 8002ce8:	d801      	bhi.n	8002cee <__iar_annotation$$branch+0x4>

08002cea <__iar_annotation$$branch>:
 8002cea:	f000 fd90 	bl	800380e <__iar_annotation$$branch+0x94e>
 8002cee:	1e92      	subs	r2, r2, #2
 8002cf0:	d100      	bne.n	8002cf4 <__iar_annotation$$branch+0xa>
 8002cf2:	e189      	b.n	8003008 <__iar_annotation$$branch+0x148>
 8002cf4:	1e52      	subs	r2, r2, #1
 8002cf6:	d100      	bne.n	8002cfa <__iar_annotation$$branch+0x10>
 8002cf8:	e18b      	b.n	8003012 <__iar_annotation$$branch+0x152>
 8002cfa:	1e52      	subs	r2, r2, #1
 8002cfc:	d100      	bne.n	8002d00 <__iar_annotation$$branch+0x16>
 8002cfe:	e190      	b.n	8003022 <__iar_annotation$$branch+0x162>
 8002d00:	1e52      	subs	r2, r2, #1
 8002d02:	d100      	bne.n	8002d06 <__iar_annotation$$branch+0x1c>
 8002d04:	e1e1      	b.n	80030ca <__iar_annotation$$branch+0x20a>
 8002d06:	1e52      	subs	r2, r2, #1
 8002d08:	d100      	bne.n	8002d0c <__iar_annotation$$branch+0x22>
 8002d0a:	e223      	b.n	8003154 <__iar_annotation$$branch+0x294>
 8002d0c:	1ed2      	subs	r2, r2, #3
 8002d0e:	d100      	bne.n	8002d12 <__iar_annotation$$branch+0x28>
 8002d10:	e276      	b.n	8003200 <__iar_annotation$$branch+0x340>
 8002d12:	1e52      	subs	r2, r2, #1
 8002d14:	d100      	bne.n	8002d18 <__iar_annotation$$branch+0x2e>
 8002d16:	e286      	b.n	8003226 <__iar_annotation$$branch+0x366>
 8002d18:	1e52      	subs	r2, r2, #1
 8002d1a:	d100      	bne.n	8002d1e <__iar_annotation$$branch+0x34>
 8002d1c:	e11d      	b.n	8002f5a <__iar_annotation$$branch+0x9a>
 8002d1e:	1e52      	subs	r2, r2, #1
 8002d20:	d100      	bne.n	8002d24 <__iar_annotation$$branch+0x3a>
 8002d22:	e30d      	b.n	8003340 <__iar_annotation$$branch+0x480>
 8002d24:	1e52      	subs	r2, r2, #1
 8002d26:	d100      	bne.n	8002d2a <__iar_annotation$$branch+0x40>
 8002d28:	e2c6      	b.n	80032b8 <__iar_annotation$$branch+0x3f8>
 8002d2a:	1e52      	subs	r2, r2, #1
 8002d2c:	d100      	bne.n	8002d30 <__iar_annotation$$branch+0x46>
 8002d2e:	e2cc      	b.n	80032ca <__iar_annotation$$branch+0x40a>
 8002d30:	1e52      	subs	r2, r2, #1
 8002d32:	d100      	bne.n	8002d36 <__iar_annotation$$branch+0x4c>
 8002d34:	e2d8      	b.n	80032e8 <__iar_annotation$$branch+0x428>
 8002d36:	1e52      	subs	r2, r2, #1
 8002d38:	d100      	bne.n	8002d3c <__iar_annotation$$branch+0x52>
 8002d3a:	e389      	b.n	8003450 <__iar_annotation$$branch+0x590>
 8002d3c:	1e52      	subs	r2, r2, #1
 8002d3e:	d100      	bne.n	8002d42 <__iar_annotation$$branch+0x58>
 8002d40:	e32b      	b.n	800339a <__iar_annotation$$branch+0x4da>
 8002d42:	1e52      	subs	r2, r2, #1
 8002d44:	d100      	bne.n	8002d48 <__iar_annotation$$branch+0x5e>
 8002d46:	e332      	b.n	80033ae <__iar_annotation$$branch+0x4ee>
 8002d48:	1e52      	subs	r2, r2, #1
 8002d4a:	d100      	bne.n	8002d4e <__iar_annotation$$branch+0x64>
 8002d4c:	e1d5      	b.n	80030fa <__iar_annotation$$branch+0x23a>
 8002d4e:	1e52      	subs	r2, r2, #1
 8002d50:	d100      	bne.n	8002d54 <__iar_annotation$$branch+0x6a>
 8002d52:	e34c      	b.n	80033ee <__iar_annotation$$branch+0x52e>
 8002d54:	1e52      	subs	r2, r2, #1
 8002d56:	2a01      	cmp	r2, #1
 8002d58:	d929      	bls.n	8002dae <__iar_annotation$$branch+0x8>
 8002d5a:	1e92      	subs	r2, r2, #2
 8002d5c:	d100      	bne.n	8002d60 <__iar_annotation$$branch+0x76>
 8002d5e:	e3a3      	b.n	80034a8 <__iar_annotation$$branch+0x5e8>
 8002d60:	1e52      	subs	r2, r2, #1
 8002d62:	d100      	bne.n	8002d66 <__iar_annotation$$branch+0x7c>
 8002d64:	e3b0      	b.n	80034c8 <__iar_annotation$$branch+0x608>
 8002d66:	1e92      	subs	r2, r2, #2
 8002d68:	d021      	beq.n	8002dae <__iar_annotation$$branch+0x8>
 8002d6a:	1e52      	subs	r2, r2, #1
 8002d6c:	d101      	bne.n	8002d72 <__iar_annotation$$branch+0x4>

08002d6e <__iar_annotation$$branch>:
 8002d6e:	f000 fc88 	bl	8003682 <__iar_annotation$$branch+0x7c2>
 8002d72:	1e52      	subs	r2, r2, #1
 8002d74:	d101      	bne.n	8002d7a <__iar_annotation$$branch+0x4>

08002d76 <__iar_annotation$$branch>:
 8002d76:	f000 fc9a 	bl	80036ae <__iar_annotation$$branch+0x7ee>
 8002d7a:	1e52      	subs	r2, r2, #1
 8002d7c:	d101      	bne.n	8002d82 <__iar_annotation$$branch+0x4>

08002d7e <__iar_annotation$$branch>:
 8002d7e:	f000 fce6 	bl	800374e <__iar_annotation$$branch+0x88e>
 8002d82:	1e52      	subs	r2, r2, #1
 8002d84:	d101      	bne.n	8002d8a <__iar_annotation$$branch+0x4>

08002d86 <__iar_annotation$$branch>:
 8002d86:	f000 fd0f 	bl	80037a8 <__iar_annotation$$branch+0x8e8>
 8002d8a:	1e52      	subs	r2, r2, #1
 8002d8c:	d101      	bne.n	8002d92 <__iar_annotation$$branch+0x4>

08002d8e <__iar_annotation$$branch>:
 8002d8e:	f000 fbe5 	bl	800355c <__iar_annotation$$branch+0x69c>
 8002d92:	1e92      	subs	r2, r2, #2
 8002d94:	d101      	bne.n	8002d9a <__iar_annotation$$branch+0x4>

08002d96 <__iar_annotation$$branch>:
 8002d96:	f000 fc0a 	bl	80035ae <__iar_annotation$$branch+0x6ee>
 8002d9a:	1e52      	subs	r2, r2, #1
 8002d9c:	d101      	bne.n	8002da2 <__iar_annotation$$branch+0x4>

08002d9e <__iar_annotation$$branch>:
 8002d9e:	f000 fc2e 	bl	80035fe <__iar_annotation$$branch+0x73e>
 8002da2:	1e52      	subs	r2, r2, #1
 8002da4:	d101      	bne.n	8002daa <__iar_annotation$$branch+0x4>

08002da6 <__iar_annotation$$branch>:
 8002da6:	f000 fc49 	bl	800363c <__iar_annotation$$branch+0x77c>
 8002daa:	1e52      	subs	r2, r2, #1
 8002dac:	2a02      	cmp	r2, #2
 8002dae:	d801      	bhi.n	8002db4 <__iar_annotation$$branch+0x4>

08002db0 <__iar_annotation$$branch>:
 8002db0:	f000 fe1b 	bl	80039ea <__iar_annotation$$branch+0x106>
 8002db4:	1ed2      	subs	r2, r2, #3
 8002db6:	d101      	bne.n	8002dbc <__iar_annotation$$branch+0x4>

08002db8 <__iar_annotation$$branch>:
 8002db8:	f000 fbf4 	bl	80035a4 <__iar_annotation$$branch+0x6e4>
 8002dbc:	1e52      	subs	r2, r2, #1
 8002dbe:	d101      	bne.n	8002dc4 <__iar_annotation$$branch+0x4>

08002dc0 <__iar_annotation$$branch>:
 8002dc0:	f000 fd96 	bl	80038f0 <__iar_annotation$$branch+0xc>
 8002dc4:	1e52      	subs	r2, r2, #1
 8002dc6:	d0f2      	beq.n	8002dae <__iar_annotation$$branch+0x8>
 8002dc8:	1e52      	subs	r2, r2, #1
 8002dca:	d101      	bne.n	8002dd0 <__iar_annotation$$branch+0x4>

08002dcc <__iar_annotation$$branch>:
 8002dcc:	f000 fda1 	bl	8003912 <__iar_annotation$$branch+0x2e>
 8002dd0:	1e52      	subs	r2, r2, #1
 8002dd2:	d101      	bne.n	8002dd8 <__iar_annotation$$branch+0x4>

08002dd4 <__iar_annotation$$branch>:
 8002dd4:	f000 fdcf 	bl	8003976 <__iar_annotation$$branch+0x92>
 8002dd8:	1e52      	subs	r2, r2, #1
 8002dda:	2a01      	cmp	r2, #1
 8002ddc:	d9e7      	bls.n	8002dae <__iar_annotation$$branch+0x8>
 8002dde:	1e92      	subs	r2, r2, #2
 8002de0:	d001      	beq.n	8002de6 <__iar_annotation$$branch+0x12>
 8002de2:	1e92      	subs	r2, r2, #2
 8002de4:	2a05      	cmp	r2, #5
 8002de6:	d801      	bhi.n	8002dec <__iar_annotation$$branch+0x4>

08002de8 <__iar_annotation$$branch>:
 8002de8:	f000 fdfb 	bl	80039e2 <__iar_annotation$$branch+0xfe>
 8002dec:	1f92      	subs	r2, r2, #6
 8002dee:	d101      	bne.n	8002df4 <__iar_annotation$$branch+0x4>

08002df0 <__iar_annotation$$branch>:
 8002df0:	f000 fdd2 	bl	8003998 <__iar_annotation$$branch+0xb4>
 8002df4:	1e52      	subs	r2, r2, #1
 8002df6:	2a03      	cmp	r2, #3
 8002df8:	d9d9      	bls.n	8002dae <__iar_annotation$$branch+0x8>
 8002dfa:	3a11      	subs	r2, #17
 8002dfc:	d0d7      	beq.n	8002dae <__iar_annotation$$branch+0x8>
 8002dfe:	1e52      	subs	r2, r2, #1
 8002e00:	d100      	bne.n	8002e04 <__iar_annotation$$branch+0x14>
 8002e02:	e150      	b.n	80030a6 <__iar_annotation$$branch+0x1e6>
 8002e04:	3a0f      	subs	r2, #15
 8002e06:	d101      	bne.n	8002e0c <__iar_annotation$$branch+0x4>

08002e08 <__iar_annotation$$branch>:
 8002e08:	f000 fce9 	bl	80037de <__iar_annotation$$branch+0x91e>
 8002e0c:	1fd2      	subs	r2, r2, #7
 8002e0e:	2a01      	cmp	r2, #1
 8002e10:	d9cd      	bls.n	8002dae <__iar_annotation$$branch+0x8>
 8002e12:	1f52      	subs	r2, r2, #5
 8002e14:	2a01      	cmp	r2, #1
 8002e16:	d9ca      	bls.n	8002dae <__iar_annotation$$branch+0x8>
 8002e18:	3a0d      	subs	r2, #13
 8002e1a:	d0c8      	beq.n	8002dae <__iar_annotation$$branch+0x8>
 8002e1c:	3a12      	subs	r2, #18
 8002e1e:	d101      	bne.n	8002e24 <__iar_annotation$$branch+0x4>

08002e20 <__iar_annotation$$branch>:
 8002e20:	f000 fe18 	bl	8003a54 <__iar_annotation$$branch+0x62>
 8002e24:	3a0c      	subs	r2, #12
 8002e26:	d100      	bne.n	8002e2a <__iar_annotation$$branch+0xa>
 8002e28:	e09a      	b.n	8002f60 <__iar_annotation$$branch+0xa0>
 8002e2a:	1e52      	subs	r2, r2, #1
 8002e2c:	2a02      	cmp	r2, #2
 8002e2e:	d9be      	bls.n	8002dae <__iar_annotation$$branch+0x8>
 8002e30:	1ed2      	subs	r2, r2, #3
 8002e32:	d100      	bne.n	8002e36 <__iar_annotation$$branch+0x16>
 8002e34:	e213      	b.n	800325e <__iar_annotation$$branch+0x39e>
 8002e36:	1e52      	subs	r2, r2, #1
 8002e38:	d100      	bne.n	8002e3c <__iar_annotation$$branch+0x1c>
 8002e3a:	e229      	b.n	8003290 <__iar_annotation$$branch+0x3d0>
 8002e3c:	1e92      	subs	r2, r2, #2
 8002e3e:	d0b6      	beq.n	8002dae <__iar_annotation$$branch+0x8>
 8002e40:	1e52      	subs	r2, r2, #1
 8002e42:	d100      	bne.n	8002e46 <__iar_annotation$$branch+0x26>
 8002e44:	e0e0      	b.n	8003008 <__iar_annotation$$branch+0x148>
 8002e46:	1e92      	subs	r2, r2, #2
 8002e48:	2a08      	cmp	r2, #8
 8002e4a:	d801      	bhi.n	8002e50 <__iar_annotation$$branch+0x4>

08002e4c <__iar_annotation$$branch>:
 8002e4c:	f000 fdd3 	bl	80039f6 <__iar_annotation$$branch+0x4>
 8002e50:	3a0a      	subs	r2, #10
 8002e52:	d101      	bne.n	8002e58 <__iar_annotation$$branch+0x4>

08002e54 <__iar_annotation$$branch>:
 8002e54:	f000 fde2 	bl	8003a1c <__iar_annotation$$branch+0x2a>
 8002e58:	a903      	add	r1, sp, #12
 8002e5a:	0020      	movs	r0, r4
 8002e5c:	f001 fb32 	bl	80044c4 <PE_StateMachine_VDM>
 8002e60:	0005      	movs	r5, r0
 8002e62:	7c62      	ldrb	r2, [r4, #17]
 8002e64:	4e31      	ldr	r6, [pc, #196]	; (8002f2c <__iar_annotation$$branch+0x6c>)
 8002e66:	7ca0      	ldrb	r0, [r4, #18]
 8002e68:	4290      	cmp	r0, r2
 8002e6a:	d007      	beq.n	8002e7c <__iar_annotation$$branch+0x28>
 8002e6c:	74a2      	strb	r2, [r4, #18]
 8002e6e:	2000      	movs	r0, #0
 8002e70:	9000      	str	r0, [sp, #0]
 8002e72:	2300      	movs	r3, #0
 8002e74:	7c21      	ldrb	r1, [r4, #16]
 8002e76:	2004      	movs	r0, #4
 8002e78:	6837      	ldr	r7, [r6, #0]
 8002e7a:	47b8      	blx	r7
 8002e7c:	4668      	mov	r0, sp
 8002e7e:	7b00      	ldrb	r0, [r0, #12]
 8002e80:	2814      	cmp	r0, #20
 8002e82:	d101      	bne.n	8002e88 <__iar_annotation$$branch+0x4>

08002e84 <__iar_annotation$$branch>:
 8002e84:	f000 fdec 	bl	8003a60 <__iar_annotation$$branch+0x6e>
 8002e88:	0020      	movs	r0, r4
 8002e8a:	f7fd fdab 	bl	80009e4 <PE_Check_AMSConflict>
 8002e8e:	2815      	cmp	r0, #21
 8002e90:	d109      	bne.n	8002ea6 <__iar_annotation$$branch+0x22>
 8002e92:	4668      	mov	r0, sp
 8002e94:	7b00      	ldrb	r0, [r0, #12]
 8002e96:	2814      	cmp	r0, #20
 8002e98:	d005      	beq.n	8002ea6 <__iar_annotation$$branch+0x22>
 8002e9a:	2014      	movs	r0, #20
 8002e9c:	4669      	mov	r1, sp
 8002e9e:	7308      	strb	r0, [r1, #12]
 8002ea0:	0020      	movs	r0, r4
 8002ea2:	f7fd fd58 	bl	8000956 <PE_Clear_RxEvent>
 8002ea6:	7c62      	ldrb	r2, [r4, #17]
 8002ea8:	7ca0      	ldrb	r0, [r4, #18]
 8002eaa:	4290      	cmp	r0, r2
 8002eac:	d007      	beq.n	8002ebe <__iar_annotation$$branch+0x3a>
 8002eae:	74a2      	strb	r2, [r4, #18]
 8002eb0:	2000      	movs	r0, #0
 8002eb2:	9000      	str	r0, [sp, #0]
 8002eb4:	2300      	movs	r3, #0
 8002eb6:	7c21      	ldrb	r1, [r4, #16]
 8002eb8:	2004      	movs	r0, #4
 8002eba:	6835      	ldr	r5, [r6, #0]
 8002ebc:	47a8      	blx	r5
 8002ebe:	2500      	movs	r5, #0

08002ec0 <__iar_annotation$$branch>:
 8002ec0:	f000 fded 	bl	8003a9e <__iar_annotation$$branch+0xac>
 8002ec4:	2500      	movs	r5, #0
 8002ec6:	43ed      	mvns	r5, r5
 8002ec8:	0028      	movs	r0, r5
 8002eca:	e6b2      	b.n	8002c32 <USBPD_PE_StateMachine_SRC+0xa6>
 8002ecc:	74a0      	strb	r0, [r4, #18]
 8002ece:	2000      	movs	r0, #0
 8002ed0:	9000      	str	r0, [sp, #0]
 8002ed2:	2300      	movs	r3, #0
 8002ed4:	22a6      	movs	r2, #166	; 0xa6
 8002ed6:	7c21      	ldrb	r1, [r4, #16]
 8002ed8:	2004      	movs	r0, #4
 8002eda:	4d14      	ldr	r5, [pc, #80]	; (8002f2c <__iar_annotation$$branch+0x6c>)
 8002edc:	682d      	ldr	r5, [r5, #0]
 8002ede:	47a8      	blx	r5
 8002ee0:	2502      	movs	r5, #2
 8002ee2:	2032      	movs	r0, #50	; 0x32
 8002ee4:	5c20      	ldrb	r0, [r4, r0]
 8002ee6:	280f      	cmp	r0, #15
 8002ee8:	d001      	beq.n	8002eee <__iar_annotation$$branch+0x2e>
 8002eea:	2814      	cmp	r0, #20
 8002eec:	d11c      	bne.n	8002f28 <__iar_annotation$$branch+0x68>
 8002eee:	4668      	mov	r0, sp
 8002ef0:	7b00      	ldrb	r0, [r0, #12]
 8002ef2:	2814      	cmp	r0, #20
 8002ef4:	d005      	beq.n	8002f02 <__iar_annotation$$branch+0x42>
 8002ef6:	2014      	movs	r0, #20
 8002ef8:	4669      	mov	r1, sp
 8002efa:	7308      	strb	r0, [r1, #12]
 8002efc:	0020      	movs	r0, r4
 8002efe:	f7fd fd2a 	bl	8000956 <PE_Clear_RxEvent>
 8002f02:	2032      	movs	r0, #50	; 0x32
 8002f04:	5c22      	ldrb	r2, [r4, r0]
 8002f06:	7462      	strb	r2, [r4, #17]
 8002f08:	2000      	movs	r0, #0
 8002f0a:	2332      	movs	r3, #50	; 0x32
 8002f0c:	54e0      	strb	r0, [r4, r3]
 8002f0e:	62e0      	str	r0, [r4, #44]	; 0x2c
 8002f10:	7ca0      	ldrb	r0, [r4, #18]
 8002f12:	4290      	cmp	r0, r2
 8002f14:	d008      	beq.n	8002f28 <__iar_annotation$$branch+0x68>
 8002f16:	74a2      	strb	r2, [r4, #18]
 8002f18:	2000      	movs	r0, #0
 8002f1a:	9000      	str	r0, [sp, #0]
 8002f1c:	2300      	movs	r3, #0
 8002f1e:	7c21      	ldrb	r1, [r4, #16]
 8002f20:	2004      	movs	r0, #4
 8002f22:	4e02      	ldr	r6, [pc, #8]	; (8002f2c <__iar_annotation$$branch+0x6c>)
 8002f24:	6836      	ldr	r6, [r6, #0]
 8002f26:	47b0      	blx	r6
 8002f28:	e6ab      	b.n	8002c82 <USBPD_PE_StateMachine_SRC+0xf6>
 8002f2a:	bf00      	nop
 8002f2c:	20000000 	.word	0x20000000
 8002f30:	fffbffff 	.word	0xfffbffff
 8002f34:	fffdffff 	.word	0xfffdffff
 8002f38:	00008011 	.word	0x00008011
 8002f3c:	0000025e 	.word	0x0000025e
 8002f40:	0000801b 	.word	0x0000801b
 8002f44:	0000f01f 	.word	0x0000f01f
 8002f48:	6860      	ldr	r0, [r4, #4]
 8002f4a:	6801      	ldr	r1, [r0, #0]
 8002f4c:	2210      	movs	r2, #16
 8002f4e:	4391      	bics	r1, r2
 8002f50:	6001      	str	r1, [r0, #0]
 8002f52:	215f      	movs	r1, #95	; 0x5f
 8002f54:	7c20      	ldrb	r0, [r4, #16]
 8002f56:	f7fd fa93 	bl	8000480 <USBPD_PE_Notification>
 8002f5a:	2500      	movs	r5, #0
 8002f5c:	43ed      	mvns	r5, r5
 8002f5e:	e780      	b.n	8002e62 <__iar_annotation$$branch+0xe>
 8002f60:	6860      	ldr	r0, [r4, #4]
 8002f62:	6801      	ldr	r1, [r0, #0]
 8002f64:	2210      	movs	r2, #16
 8002f66:	4391      	bics	r1, r2
 8002f68:	6001      	str	r1, [r0, #0]
 8002f6a:	68a0      	ldr	r0, [r4, #8]
 8002f6c:	6b41      	ldr	r1, [r0, #52]	; 0x34
 8002f6e:	2900      	cmp	r1, #0
 8002f70:	d0f3      	beq.n	8002f5a <__iar_annotation$$branch+0x9a>
 8002f72:	7c20      	ldrb	r0, [r4, #16]
 8002f74:	4788      	blx	r1
 8002f76:	e7f0      	b.n	8002f5a <__iar_annotation$$branch+0x9a>
 8002f78:	2701      	movs	r7, #1
 8002f7a:	6860      	ldr	r0, [r4, #4]
 8002f7c:	6800      	ldr	r0, [r0, #0]
 8002f7e:	0bc0      	lsrs	r0, r0, #15
 8002f80:	4038      	ands	r0, r7
 8002f82:	d002      	beq.n	8002f8a <__iar_annotation$$branch+0xca>
 8002f84:	6820      	ldr	r0, [r4, #0]
 8002f86:	6801      	ldr	r1, [r0, #0]
 8002f88:	e000      	b.n	8002f8c <__iar_annotation$$branch+0xcc>
 8002f8a:	2101      	movs	r1, #1
 8002f8c:	4668      	mov	r0, sp
 8002f8e:	7b40      	ldrb	r0, [r0, #13]
 8002f90:	f002 fc08 	bl	80057a4 <USBPD_PRL_SOPCapability>
 8002f94:	6860      	ldr	r0, [r4, #4]
 8002f96:	6801      	ldr	r1, [r0, #0]
 8002f98:	0b0a      	lsrs	r2, r1, #12
 8002f9a:	403a      	ands	r2, r7
 8002f9c:	d02f      	beq.n	8002ffe <__iar_annotation$$branch+0x13e>
 8002f9e:	078a      	lsls	r2, r1, #30
 8002fa0:	0f92      	lsrs	r2, r2, #30
 8002fa2:	2a01      	cmp	r2, #1
 8002fa4:	d101      	bne.n	8002faa <__iar_annotation$$branch+0xea>
 8002fa6:	2200      	movs	r2, #0
 8002fa8:	e000      	b.n	8002fac <__iar_annotation$$branch+0xec>
 8002faa:	2220      	movs	r2, #32
 8002fac:	2320      	movs	r3, #32
 8002fae:	4399      	bics	r1, r3
 8002fb0:	430a      	orrs	r2, r1
 8002fb2:	6002      	str	r2, [r0, #0]
 8002fb4:	2000      	movs	r0, #0
 8002fb6:	70f0      	strb	r0, [r6, #3]
 8002fb8:	2101      	movs	r1, #1
 8002fba:	0020      	movs	r0, r4
 8002fbc:	f7fe f9f3 	bl	80013a6 <PE_SetPowerNegotiation>
 8002fc0:	6860      	ldr	r0, [r4, #4]
 8002fc2:	6800      	ldr	r0, [r0, #0]
 8002fc4:	0901      	lsrs	r1, r0, #4
 8002fc6:	4039      	ands	r1, r7
 8002fc8:	d005      	beq.n	8002fd6 <__iar_annotation$$branch+0x116>
 8002fca:	48ae      	ldr	r0, [pc, #696]	; (8003284 <__iar_annotation$$branch+0x3c4>)
 8002fcc:	83e0      	strh	r0, [r4, #30]
 8002fce:	2514      	movs	r5, #20
 8002fd0:	2006      	movs	r0, #6
 8002fd2:	7460      	strb	r0, [r4, #17]
 8002fd4:	e745      	b.n	8002e62 <__iar_annotation$$branch+0xe>
 8002fd6:	0bc0      	lsrs	r0, r0, #15
 8002fd8:	4007      	ands	r7, r0
 8002fda:	d00a      	beq.n	8002ff2 <__iar_annotation$$branch+0x132>
 8002fdc:	6820      	ldr	r0, [r4, #0]
 8002fde:	7800      	ldrb	r0, [r0, #0]
 8002fe0:	0780      	lsls	r0, r0, #30
 8002fe2:	d400      	bmi.n	8002fe6 <__iar_annotation$$branch+0x126>
 8002fe4:	e087      	b.n	80030f6 <__iar_annotation$$branch+0x236>
 8002fe6:	7930      	ldrb	r0, [r6, #4]
 8002fe8:	2814      	cmp	r0, #20
 8002fea:	d300      	bcc.n	8002fee <__iar_annotation$$branch+0x12e>
 8002fec:	e083      	b.n	80030f6 <__iar_annotation$$branch+0x236>
 8002fee:	68e1      	ldr	r1, [r4, #12]
 8002ff0:	2900      	cmp	r1, #0
 8002ff2:	d100      	bne.n	8002ff6 <__iar_annotation$$branch+0x136>
 8002ff4:	e07f      	b.n	80030f6 <__iar_annotation$$branch+0x236>
 8002ff6:	1c40      	adds	r0, r0, #1
 8002ff8:	7130      	strb	r0, [r6, #4]
 8002ffa:	2005      	movs	r0, #5
 8002ffc:	e7e9      	b.n	8002fd2 <__iar_annotation$$branch+0x112>
 8002ffe:	2121      	movs	r1, #33	; 0x21
 8003000:	7c20      	ldrb	r0, [r4, #16]
 8003002:	f7fd fa3d 	bl	8000480 <USBPD_PE_Notification>
 8003006:	e04c      	b.n	80030a2 <__iar_annotation$$branch+0x1e2>
 8003008:	a903      	add	r1, sp, #12
 800300a:	0020      	movs	r0, r4
 800300c:	f000 fd8c 	bl	8003b28 <PE_StateMachine_VDMCable>
 8003010:	e726      	b.n	8002e60 <__iar_annotation$$branch+0xc>
 8003012:	8be0      	ldrh	r0, [r4, #30]
 8003014:	03a9      	lsls	r1, r5, #14
 8003016:	4288      	cmp	r0, r1
 8003018:	d102      	bne.n	8003020 <__iar_annotation$$branch+0x160>
 800301a:	2007      	movs	r0, #7
 800301c:	7460      	strb	r0, [r4, #17]
 800301e:	2500      	movs	r5, #0
 8003020:	e71f      	b.n	8002e62 <__iar_annotation$$branch+0xe>
 8003022:	6960      	ldr	r0, [r4, #20]
 8003024:	0740      	lsls	r0, r0, #29
 8003026:	0fc1      	lsrs	r1, r0, #31
 8003028:	0020      	movs	r0, r4
 800302a:	f000 fd45 	bl	8003ab8 <PE_Send_SRCCapabilities>
 800302e:	2805      	cmp	r0, #5
 8003030:	d002      	beq.n	8003038 <__iar_annotation$$branch+0x178>
 8003032:	2809      	cmp	r0, #9
 8003034:	d0f4      	beq.n	8003020 <__iar_annotation$$branch+0x160>
 8003036:	e011      	b.n	800305c <__iar_annotation$$branch+0x19c>
 8003038:	2001      	movs	r0, #1
 800303a:	7720      	strb	r0, [r4, #28]
 800303c:	6960      	ldr	r0, [r4, #20]
 800303e:	2104      	movs	r1, #4
 8003040:	4301      	orrs	r1, r0
 8003042:	6161      	str	r1, [r4, #20]
 8003044:	2000      	movs	r0, #0
 8003046:	70f0      	strb	r0, [r6, #3]
 8003048:	70b0      	strb	r0, [r6, #2]
 800304a:	83e7      	strh	r7, [r4, #30]
 800304c:	251b      	movs	r5, #27
 800304e:	2016      	movs	r0, #22
 8003050:	7460      	strb	r0, [r4, #17]
 8003052:	210f      	movs	r1, #15
 8003054:	7c20      	ldrb	r0, [r4, #16]
 8003056:	f7fd fa13 	bl	8000480 <USBPD_PE_Notification>
 800305a:	e702      	b.n	8002e62 <__iar_annotation$$branch+0xe>
 800305c:	6960      	ldr	r0, [r4, #20]
 800305e:	0741      	lsls	r1, r0, #29
 8003060:	0fc9      	lsrs	r1, r1, #31
 8003062:	d10f      	bne.n	8003084 <__iar_annotation$$branch+0x1c4>
 8003064:	78f0      	ldrb	r0, [r6, #3]
 8003066:	2833      	cmp	r0, #51	; 0x33
 8003068:	d217      	bcs.n	800309a <__iar_annotation$$branch+0x1da>
 800306a:	4887      	ldr	r0, [pc, #540]	; (8003288 <__iar_annotation$$branch+0x3c8>)
 800306c:	83e0      	strh	r0, [r4, #30]
 800306e:	2596      	movs	r5, #150	; 0x96
 8003070:	2008      	movs	r0, #8
 8003072:	7460      	strb	r0, [r4, #17]
 8003074:	4885      	ldr	r0, [pc, #532]	; (800328c <__iar_annotation$$branch+0x3cc>)
 8003076:	8c61      	ldrh	r1, [r4, #34]	; 0x22
 8003078:	4201      	tst	r1, r0
 800307a:	d002      	beq.n	8003082 <__iar_annotation$$branch+0x1c2>
 800307c:	8c61      	ldrh	r1, [r4, #34]	; 0x22
 800307e:	0005      	movs	r5, r0
 8003080:	400d      	ands	r5, r1
 8003082:	e6ee      	b.n	8002e62 <__iar_annotation$$branch+0xe>
 8003084:	6860      	ldr	r0, [r4, #4]
 8003086:	7800      	ldrb	r0, [r0, #0]
 8003088:	0780      	lsls	r0, r0, #30
 800308a:	0f80      	lsrs	r0, r0, #30
 800308c:	2802      	cmp	r0, #2
 800308e:	d102      	bne.n	8003096 <__iar_annotation$$branch+0x1d6>
 8003090:	7c20      	ldrb	r0, [r4, #16]
 8003092:	f002 fb68 	bl	8005766 <USBPD_PRL_SRCReleaseSinkNG>
 8003096:	2011      	movs	r0, #17
 8003098:	e7c0      	b.n	800301c <__iar_annotation$$branch+0x15c>
 800309a:	2121      	movs	r1, #33	; 0x21
 800309c:	7c20      	ldrb	r0, [r4, #16]
 800309e:	f7fd f9ef 	bl	8000480 <USBPD_PE_Notification>
 80030a2:	2000      	movs	r0, #0
 80030a4:	e795      	b.n	8002fd2 <__iar_annotation$$branch+0x112>
 80030a6:	2100      	movs	r1, #0
 80030a8:	0020      	movs	r0, r4
 80030aa:	f000 fd05 	bl	8003ab8 <PE_Send_SRCCapabilities>
 80030ae:	2805      	cmp	r0, #5
 80030b0:	d107      	bne.n	80030c2 <__iar_annotation$$branch+0x202>
 80030b2:	2104      	movs	r1, #4
 80030b4:	0020      	movs	r0, r4
 80030b6:	f7fe f976 	bl	80013a6 <PE_SetPowerNegotiation>
 80030ba:	2001      	movs	r0, #1
 80030bc:	7720      	strb	r0, [r4, #28]
 80030be:	83e7      	strh	r7, [r4, #30]
 80030c0:	e7c5      	b.n	800304e <__iar_annotation$$branch+0x18e>
 80030c2:	2000      	movs	r0, #0
 80030c4:	7720      	strb	r0, [r4, #28]
 80030c6:	2011      	movs	r0, #17
 80030c8:	e783      	b.n	8002fd2 <__iar_annotation$$branch+0x112>
 80030ca:	03a8      	lsls	r0, r5, #14
 80030cc:	8c61      	ldrh	r1, [r4, #34]	; 0x22
 80030ce:	4281      	cmp	r1, r0
 80030d0:	d106      	bne.n	80030e0 <__iar_annotation$$branch+0x220>
 80030d2:	2100      	movs	r1, #0
 80030d4:	8461      	strh	r1, [r4, #34]	; 0x22
 80030d6:	7931      	ldrb	r1, [r6, #4]
 80030d8:	1c49      	adds	r1, r1, #1
 80030da:	7131      	strb	r1, [r6, #4]
 80030dc:	2105      	movs	r1, #5
 80030de:	7461      	strb	r1, [r4, #17]
 80030e0:	8be1      	ldrh	r1, [r4, #30]
 80030e2:	4281      	cmp	r1, r0
 80030e4:	d1cd      	bne.n	8003082 <__iar_annotation$$branch+0x1c2>
 80030e6:	6820      	ldr	r0, [r4, #0]
 80030e8:	6840      	ldr	r0, [r0, #4]
 80030ea:	0601      	lsls	r1, r0, #24
 80030ec:	0fc9      	lsrs	r1, r1, #31
 80030ee:	d002      	beq.n	80030f6 <__iar_annotation$$branch+0x236>
 80030f0:	78f0      	ldrb	r0, [r6, #3]
 80030f2:	1c40      	adds	r0, r0, #1
 80030f4:	70f0      	strb	r0, [r6, #3]
 80030f6:	2007      	movs	r0, #7
 80030f8:	e76b      	b.n	8002fd2 <__iar_annotation$$branch+0x112>
 80030fa:	4668      	mov	r0, sp
 80030fc:	7b00      	ldrb	r0, [r0, #12]
 80030fe:	2811      	cmp	r0, #17
 8003100:	d109      	bne.n	8003116 <__iar_annotation$$branch+0x256>
 8003102:	8ea0      	ldrh	r0, [r4, #52]	; 0x34
 8003104:	0bc1      	lsrs	r1, r0, #15
 8003106:	d106      	bne.n	8003116 <__iar_annotation$$branch+0x256>
 8003108:	0b01      	lsrs	r1, r0, #12
 800310a:	0749      	lsls	r1, r1, #29
 800310c:	d100      	bne.n	8003110 <__iar_annotation$$branch+0x250>
 800310e:	e111      	b.n	8003334 <__iar_annotation$$branch+0x474>
 8003110:	06c0      	lsls	r0, r0, #27
 8003112:	0ec0      	lsrs	r0, r0, #27
 8003114:	2802      	cmp	r0, #2
 8003116:	d000      	beq.n	800311a <__iar_annotation$$branch+0x25a>
 8003118:	e10c      	b.n	8003334 <__iar_annotation$$branch+0x474>
 800311a:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800311c:	7881      	ldrb	r1, [r0, #2]
 800311e:	78c2      	ldrb	r2, [r0, #3]
 8003120:	0212      	lsls	r2, r2, #8
 8003122:	1889      	adds	r1, r1, r2
 8003124:	7902      	ldrb	r2, [r0, #4]
 8003126:	0412      	lsls	r2, r2, #16
 8003128:	1889      	adds	r1, r1, r2
 800312a:	7940      	ldrb	r0, [r0, #5]
 800312c:	0600      	lsls	r0, r0, #24
 800312e:	1808      	adds	r0, r1, r0
 8003130:	9000      	str	r0, [sp, #0]
 8003132:	8ea0      	ldrh	r0, [r4, #52]	; 0x34
 8003134:	0600      	lsls	r0, r0, #24
 8003136:	0f81      	lsrs	r1, r0, #30
 8003138:	7c20      	ldrb	r0, [r4, #16]
 800313a:	f7fd fd5b 	bl	8000bf4 <PE_ExtRevisionInteroperability>
 800313e:	2304      	movs	r3, #4
 8003140:	466a      	mov	r2, sp
 8003142:	2106      	movs	r1, #6
 8003144:	7c20      	ldrb	r0, [r4, #16]
 8003146:	68a5      	ldr	r5, [r4, #8]
 8003148:	69ad      	ldr	r5, [r5, #24]
 800314a:	47a8      	blx	r5
 800314c:	2009      	movs	r0, #9
 800314e:	7460      	strb	r0, [r4, #17]
 8003150:	2500      	movs	r5, #0
 8003152:	e0e5      	b.n	8003320 <__iar_annotation$$branch+0x460>
 8003154:	2702      	movs	r7, #2
 8003156:	2507      	movs	r5, #7
 8003158:	a901      	add	r1, sp, #4
 800315a:	7c20      	ldrb	r0, [r4, #16]
 800315c:	68a2      	ldr	r2, [r4, #8]
 800315e:	69d2      	ldr	r2, [r2, #28]
 8003160:	4790      	blx	r2
 8003162:	280a      	cmp	r0, #10
 8003164:	d010      	beq.n	8003188 <__iar_annotation$$branch+0x2c8>
 8003166:	280b      	cmp	r0, #11
 8003168:	d035      	beq.n	80031d6 <__iar_annotation$$branch+0x316>
 800316a:	280d      	cmp	r0, #13
 800316c:	6860      	ldr	r0, [r4, #4]
 800316e:	6800      	ldr	r0, [r0, #0]
 8003170:	d136      	bne.n	80031e0 <__iar_annotation$$branch+0x320>
 8003172:	0a00      	lsrs	r0, r0, #8
 8003174:	4005      	ands	r5, r0
 8003176:	2d03      	cmp	r5, #3
 8003178:	d101      	bne.n	800317e <__iar_annotation$$branch+0x2be>
 800317a:	2303      	movs	r3, #3
 800317c:	e000      	b.n	8003180 <__iar_annotation$$branch+0x2c0>
 800317e:	230e      	movs	r3, #14
 8003180:	2000      	movs	r0, #0
 8003182:	9000      	str	r0, [sp, #0]
 8003184:	220c      	movs	r2, #12
 8003186:	e035      	b.n	80031f4 <__iar_annotation$$branch+0x334>
 8003188:	48a9      	ldr	r0, [pc, #676]	; (8003430 <__iar_annotation$$branch+0x570>)
 800318a:	83e0      	strh	r0, [r4, #30]
 800318c:	271e      	movs	r7, #30
 800318e:	6860      	ldr	r0, [r4, #4]
 8003190:	6800      	ldr	r0, [r0, #0]
 8003192:	0a00      	lsrs	r0, r0, #8
 8003194:	4005      	ands	r5, r0
 8003196:	2d01      	cmp	r5, #1
 8003198:	d00b      	beq.n	80031b2 <__iar_annotation$$branch+0x2f2>
 800319a:	9801      	ldr	r0, [sp, #4]
 800319c:	2803      	cmp	r0, #3
 800319e:	d108      	bne.n	80031b2 <__iar_annotation$$branch+0x2f2>
 80031a0:	6960      	ldr	r0, [r4, #20]
 80031a2:	06c0      	lsls	r0, r0, #27
 80031a4:	0f80      	lsrs	r0, r0, #30
 80031a6:	2803      	cmp	r0, #3
 80031a8:	d103      	bne.n	80031b2 <__iar_annotation$$branch+0x2f2>
 80031aa:	2080      	movs	r0, #128	; 0x80
 80031ac:	0200      	lsls	r0, r0, #8
 80031ae:	83e0      	strh	r0, [r4, #30]
 80031b0:	2700      	movs	r7, #0
 80031b2:	2000      	movs	r0, #0
 80031b4:	9000      	str	r0, [sp, #0]
 80031b6:	230c      	movs	r3, #12
 80031b8:	2203      	movs	r2, #3
 80031ba:	2100      	movs	r1, #0
 80031bc:	0020      	movs	r0, r4
 80031be:	f7fe f9a7 	bl	8001510 <PE_Send_CtrlMessage>
 80031c2:	6960      	ldr	r0, [r4, #20]
 80031c4:	2118      	movs	r1, #24
 80031c6:	4388      	bics	r0, r1
 80031c8:	9901      	ldr	r1, [sp, #4]
 80031ca:	00c9      	lsls	r1, r1, #3
 80031cc:	2218      	movs	r2, #24
 80031ce:	400a      	ands	r2, r1
 80031d0:	4302      	orrs	r2, r0
 80031d2:	6162      	str	r2, [r4, #20]
 80031d4:	e012      	b.n	80031fc <__iar_annotation$$branch+0x33c>
 80031d6:	2000      	movs	r0, #0
 80031d8:	9000      	str	r0, [sp, #0]
 80031da:	230c      	movs	r3, #12
 80031dc:	2202      	movs	r2, #2
 80031de:	e009      	b.n	80031f4 <__iar_annotation$$branch+0x334>
 80031e0:	0a00      	lsrs	r0, r0, #8
 80031e2:	4005      	ands	r5, r0
 80031e4:	2d03      	cmp	r5, #3
 80031e6:	d101      	bne.n	80031ec <__iar_annotation$$branch+0x32c>
 80031e8:	2303      	movs	r3, #3
 80031ea:	e000      	b.n	80031ee <__iar_annotation$$branch+0x32e>
 80031ec:	230e      	movs	r3, #14
 80031ee:	2000      	movs	r0, #0
 80031f0:	9000      	str	r0, [sp, #0]
 80031f2:	2204      	movs	r2, #4
 80031f4:	2100      	movs	r1, #0
 80031f6:	0020      	movs	r0, r4
 80031f8:	f7fe f98a 	bl	8001510 <PE_Send_CtrlMessage>
 80031fc:	003d      	movs	r5, r7
 80031fe:	e630      	b.n	8002e62 <__iar_annotation$$branch+0xe>
 8003200:	8be0      	ldrh	r0, [r4, #30]
 8003202:	03a9      	lsls	r1, r5, #14
 8003204:	4288      	cmp	r0, r1
 8003206:	d1fa      	bne.n	80031fe <__iar_annotation$$branch+0x33e>
 8003208:	2104      	movs	r1, #4
 800320a:	0020      	movs	r0, r4
 800320c:	f7fe f8cb 	bl	80013a6 <PE_SetPowerNegotiation>
 8003210:	68a0      	ldr	r0, [r4, #8]
 8003212:	6801      	ldr	r1, [r0, #0]
 8003214:	2900      	cmp	r1, #0
 8003216:	d0f2      	beq.n	80031fe <__iar_annotation$$branch+0x33e>
 8003218:	7c20      	ldrb	r0, [r4, #16]
 800321a:	4788      	blx	r1
 800321c:	2800      	cmp	r0, #0
 800321e:	d000      	beq.n	8003222 <__iar_annotation$$branch+0x362>
 8003220:	e2db      	b.n	80037da <__iar_annotation$$branch+0x91a>
 8003222:	200d      	movs	r0, #13
 8003224:	e6d5      	b.n	8002fd2 <__iar_annotation$$branch+0x112>
 8003226:	2000      	movs	r0, #0
 8003228:	9000      	str	r0, [sp, #0]
 800322a:	2303      	movs	r3, #3
 800322c:	2206      	movs	r2, #6
 800322e:	2100      	movs	r1, #0
 8003230:	0020      	movs	r0, r4
 8003232:	f7fe f96d 	bl	8001510 <PE_Send_CtrlMessage>
 8003236:	2800      	cmp	r0, #0
 8003238:	d110      	bne.n	800325c <__iar_annotation$$branch+0x39c>
 800323a:	2103      	movs	r1, #3
 800323c:	0020      	movs	r0, r4
 800323e:	f7fe f8b2 	bl	80013a6 <PE_SetPowerNegotiation>
 8003242:	2110      	movs	r1, #16
 8003244:	7c20      	ldrb	r0, [r4, #16]
 8003246:	f7fd f91b 	bl	8000480 <USBPD_PE_Notification>
 800324a:	2000      	movs	r0, #0
 800324c:	84a0      	strh	r0, [r4, #36]	; 0x24
 800324e:	6960      	ldr	r0, [r4, #20]
 8003250:	06c0      	lsls	r0, r0, #27
 8003252:	0f80      	lsrs	r0, r0, #30
 8003254:	2803      	cmp	r0, #3
 8003256:	d101      	bne.n	800325c <__iar_annotation$$branch+0x39c>
 8003258:	4876      	ldr	r0, [pc, #472]	; (8003434 <__iar_annotation$$branch+0x574>)
 800325a:	84a0      	strh	r0, [r4, #36]	; 0x24
 800325c:	e601      	b.n	8002e62 <__iar_annotation$$branch+0xe>
 800325e:	2001      	movs	r0, #1
 8003260:	9000      	str	r0, [sp, #0]
 8003262:	2397      	movs	r3, #151	; 0x97
 8003264:	2202      	movs	r2, #2
 8003266:	2100      	movs	r1, #0
 8003268:	0020      	movs	r0, r4
 800326a:	f7fe f951 	bl	8001510 <PE_Send_CtrlMessage>
 800326e:	2800      	cmp	r0, #0
 8003270:	d1f4      	bne.n	800325c <__iar_annotation$$branch+0x39c>
 8003272:	7725      	strb	r5, [r4, #28]
 8003274:	2129      	movs	r1, #41	; 0x29
 8003276:	7c20      	ldrb	r0, [r4, #16]
 8003278:	f7fd f902 	bl	8000480 <USBPD_PE_Notification>
 800327c:	486e      	ldr	r0, [pc, #440]	; (8003438 <__iar_annotation$$branch+0x578>)
 800327e:	83e0      	strh	r0, [r4, #30]
 8003280:	4d6e      	ldr	r5, [pc, #440]	; (800343c <__iar_annotation$$branch+0x57c>)
 8003282:	e5ee      	b.n	8002e62 <__iar_annotation$$branch+0xe>
 8003284:	00008014 	.word	0x00008014
 8003288:	00008096 	.word	0x00008096
 800328c:	00007fff 	.word	0x00007fff
 8003290:	8be0      	ldrh	r0, [r4, #30]
 8003292:	03a9      	lsls	r1, r5, #14
 8003294:	4288      	cmp	r0, r1
 8003296:	d1f4      	bne.n	8003282 <__iar_annotation$$branch+0x3c2>
 8003298:	212a      	movs	r1, #42	; 0x2a
 800329a:	7c20      	ldrb	r0, [r4, #16]
 800329c:	f7fd f8f0 	bl	8000480 <USBPD_PE_Notification>
 80032a0:	2000      	movs	r0, #0
 80032a2:	9000      	str	r0, [sp, #0]
 80032a4:	2303      	movs	r3, #3
 80032a6:	2206      	movs	r2, #6
 80032a8:	2100      	movs	r1, #0
 80032aa:	0020      	movs	r0, r4
 80032ac:	f7fe f930 	bl	8001510 <PE_Send_CtrlMessage>
 80032b0:	2800      	cmp	r0, #0
 80032b2:	d109      	bne.n	80032c8 <__iar_annotation$$branch+0x408>
 80032b4:	212e      	movs	r1, #46	; 0x2e
 80032b6:	e6cd      	b.n	8003054 <__iar_annotation$$branch+0x194>
 80032b8:	2000      	movs	r0, #0
 80032ba:	9000      	str	r0, [sp, #0]
 80032bc:	2307      	movs	r3, #7
 80032be:	2203      	movs	r2, #3
 80032c0:	2100      	movs	r1, #0
 80032c2:	0020      	movs	r0, r4
 80032c4:	f7fe f924 	bl	8001510 <PE_Send_CtrlMessage>
 80032c8:	e5cb      	b.n	8002e62 <__iar_annotation$$branch+0xe>
 80032ca:	2000      	movs	r0, #0
 80032cc:	9000      	str	r0, [sp, #0]
 80032ce:	2312      	movs	r3, #18
 80032d0:	220d      	movs	r2, #13
 80032d2:	2031      	movs	r0, #49	; 0x31
 80032d4:	5c21      	ldrb	r1, [r4, r0]
 80032d6:	0020      	movs	r0, r4
 80032d8:	f7fe f91a 	bl	8001510 <PE_Send_CtrlMessage>
 80032dc:	2800      	cmp	r0, #0
 80032de:	d1f3      	bne.n	80032c8 <__iar_annotation$$branch+0x408>
 80032e0:	83e7      	strh	r7, [r4, #30]
 80032e2:	251b      	movs	r5, #27
 80032e4:	2130      	movs	r1, #48	; 0x30
 80032e6:	e6b5      	b.n	8003054 <__iar_annotation$$branch+0x194>
 80032e8:	4668      	mov	r0, sp
 80032ea:	7b00      	ldrb	r0, [r0, #12]
 80032ec:	2814      	cmp	r0, #20
 80032ee:	d021      	beq.n	8003334 <__iar_annotation$$branch+0x474>
 80032f0:	2030      	movs	r0, #48	; 0x30
 80032f2:	5c20      	ldrb	r0, [r4, r0]
 80032f4:	2231      	movs	r2, #49	; 0x31
 80032f6:	5ca2      	ldrb	r2, [r4, r2]
 80032f8:	4290      	cmp	r0, r2
 80032fa:	d11b      	bne.n	8003334 <__iar_annotation$$branch+0x474>
 80032fc:	8ea0      	ldrh	r0, [r4, #52]	; 0x34
 80032fe:	4001      	ands	r1, r0
 8003300:	2903      	cmp	r1, #3
 8003302:	d117      	bne.n	8003334 <__iar_annotation$$branch+0x474>
 8003304:	2131      	movs	r1, #49	; 0x31
 8003306:	7c20      	ldrb	r0, [r4, #16]
 8003308:	f7fd f8ba 	bl	8000480 <USBPD_PE_Notification>
 800330c:	2030      	movs	r0, #48	; 0x30
 800330e:	5c20      	ldrb	r0, [r4, r0]
 8003310:	2800      	cmp	r0, #0
 8003312:	d102      	bne.n	800331a <__iar_annotation$$branch+0x45a>
 8003314:	2007      	movs	r0, #7
 8003316:	7460      	strb	r0, [r4, #17]
 8003318:	e002      	b.n	8003320 <__iar_annotation$$branch+0x460>
 800331a:	2003      	movs	r0, #3
 800331c:	7460      	strb	r0, [r4, #17]
 800331e:	2500      	movs	r5, #0
 8003320:	4668      	mov	r0, sp
 8003322:	7b00      	ldrb	r0, [r0, #12]
 8003324:	2814      	cmp	r0, #20
 8003326:	d005      	beq.n	8003334 <__iar_annotation$$branch+0x474>
 8003328:	2014      	movs	r0, #20
 800332a:	4669      	mov	r1, sp
 800332c:	7308      	strb	r0, [r1, #12]
 800332e:	0020      	movs	r0, r4
 8003330:	f7fd fb11 	bl	8000956 <PE_Clear_RxEvent>
 8003334:	8be0      	ldrh	r0, [r4, #30]
 8003336:	2180      	movs	r1, #128	; 0x80
 8003338:	0209      	lsls	r1, r1, #8
 800333a:	4288      	cmp	r0, r1
 800333c:	d1c4      	bne.n	80032c8 <__iar_annotation$$branch+0x408>
 800333e:	e24c      	b.n	80037da <__iar_annotation$$branch+0x91a>
 8003340:	6860      	ldr	r0, [r4, #4]
 8003342:	7800      	ldrb	r0, [r0, #0]
 8003344:	0780      	lsls	r0, r0, #30
 8003346:	0f80      	lsrs	r0, r0, #30
 8003348:	2802      	cmp	r0, #2
 800334a:	d102      	bne.n	8003352 <__iar_annotation$$branch+0x492>
 800334c:	7c20      	ldrb	r0, [r4, #16]
 800334e:	f002 fa0a 	bl	8005766 <USBPD_PRL_SRCReleaseSinkNG>
 8003352:	2105      	movs	r1, #5
 8003354:	0020      	movs	r0, r4
 8003356:	f7fd fa99 	bl	800088c <PE_Send_RESET>
 800335a:	6860      	ldr	r0, [r4, #4]
 800335c:	6801      	ldr	r1, [r0, #0]
 800335e:	2210      	movs	r2, #16
 8003360:	4391      	bics	r1, r2
 8003362:	6001      	str	r1, [r0, #0]
 8003364:	78b0      	ldrb	r0, [r6, #2]
 8003366:	1c40      	adds	r0, r0, #1
 8003368:	70b0      	strb	r0, [r6, #2]
 800336a:	6961      	ldr	r1, [r4, #20]
 800336c:	4834      	ldr	r0, [pc, #208]	; (8003440 <__iar_annotation$$branch+0x580>)
 800336e:	4008      	ands	r0, r1
 8003370:	6160      	str	r0, [r4, #20]
 8003372:	2100      	movs	r1, #0
 8003374:	2232      	movs	r2, #50	; 0x32
 8003376:	54a1      	strb	r1, [r4, r2]
 8003378:	4932      	ldr	r1, [pc, #200]	; (8003444 <__iar_annotation$$branch+0x584>)
 800337a:	4001      	ands	r1, r0
 800337c:	6161      	str	r1, [r4, #20]
 800337e:	2202      	movs	r2, #2
 8003380:	2101      	movs	r1, #1
 8003382:	0020      	movs	r0, r4
 8003384:	f7fe f806 	bl	8001394 <PE_CallHardResetCallback>
 8003388:	2169      	movs	r1, #105	; 0x69
 800338a:	4668      	mov	r0, sp
 800338c:	7b40      	ldrb	r0, [r0, #13]
 800338e:	f7fd f877 	bl	8000480 <USBPD_PE_Notification>
 8003392:	83e7      	strh	r7, [r4, #30]
 8003394:	251b      	movs	r5, #27
 8003396:	2015      	movs	r0, #21
 8003398:	e61b      	b.n	8002fd2 <__iar_annotation$$branch+0x112>
 800339a:	6860      	ldr	r0, [r4, #4]
 800339c:	7800      	ldrb	r0, [r0, #0]
 800339e:	0780      	lsls	r0, r0, #30
 80033a0:	0f80      	lsrs	r0, r0, #30
 80033a2:	2802      	cmp	r0, #2
 80033a4:	d1f0      	bne.n	8003388 <__iar_annotation$$branch+0x4c8>
 80033a6:	7c20      	ldrb	r0, [r4, #16]
 80033a8:	f002 f9dd 	bl	8005766 <USBPD_PRL_SRCReleaseSinkNG>
 80033ac:	e7ec      	b.n	8003388 <__iar_annotation$$branch+0x4c8>
 80033ae:	8be0      	ldrh	r0, [r4, #30]
 80033b0:	03a9      	lsls	r1, r5, #14
 80033b2:	4288      	cmp	r0, r1
 80033b4:	d11a      	bne.n	80033ec <__iar_annotation$$branch+0x52c>
 80033b6:	6960      	ldr	r0, [r4, #20]
 80033b8:	78b1      	ldrb	r1, [r6, #2]
 80033ba:	2903      	cmp	r1, #3
 80033bc:	d303      	bcc.n	80033c6 <__iar_annotation$$branch+0x506>
 80033be:	0741      	lsls	r1, r0, #29
 80033c0:	0fc9      	lsrs	r1, r1, #31
 80033c2:	d130      	bne.n	8003426 <__iar_annotation$$branch+0x566>
 80033c4:	e66d      	b.n	80030a2 <__iar_annotation$$branch+0x1e2>
 80033c6:	4920      	ldr	r1, [pc, #128]	; (8003448 <__iar_annotation$$branch+0x588>)
 80033c8:	83e1      	strh	r1, [r4, #30]
 80033ca:	2117      	movs	r1, #23
 80033cc:	7461      	strb	r1, [r4, #17]
 80033ce:	2500      	movs	r5, #0
 80033d0:	0540      	lsls	r0, r0, #21
 80033d2:	0f80      	lsrs	r0, r0, #30
 80033d4:	1e42      	subs	r2, r0, #1
 80033d6:	4192      	sbcs	r2, r2
 80033d8:	0fd2      	lsrs	r2, r2, #31
 80033da:	2101      	movs	r1, #1
 80033dc:	0020      	movs	r0, r4
 80033de:	f7fd ffd9 	bl	8001394 <PE_CallHardResetCallback>
 80033e2:	2203      	movs	r2, #3
 80033e4:	2101      	movs	r1, #1
 80033e6:	0020      	movs	r0, r4
 80033e8:	f7fd ffd4 	bl	8001394 <PE_CallHardResetCallback>
 80033ec:	e539      	b.n	8002e62 <__iar_annotation$$branch+0xe>
 80033ee:	2100      	movs	r1, #0
 80033f0:	4668      	mov	r0, sp
 80033f2:	7b40      	ldrb	r0, [r0, #13]
 80033f4:	68a2      	ldr	r2, [r4, #8]
 80033f6:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 80033f8:	4790      	blx	r2
 80033fa:	2801      	cmp	r0, #1
 80033fc:	d105      	bne.n	800340a <__iar_annotation$$branch+0x54a>
 80033fe:	4813      	ldr	r0, [pc, #76]	; (800344c <__iar_annotation$$branch+0x58c>)
 8003400:	83e0      	strh	r0, [r4, #30]
 8003402:	25c8      	movs	r5, #200	; 0xc8
 8003404:	00ad      	lsls	r5, r5, #2
 8003406:	2013      	movs	r0, #19
 8003408:	7460      	strb	r0, [r4, #17]
 800340a:	8be0      	ldrh	r0, [r4, #30]
 800340c:	2180      	movs	r1, #128	; 0x80
 800340e:	0209      	lsls	r1, r1, #8
 8003410:	4288      	cmp	r0, r1
 8003412:	d1eb      	bne.n	80033ec <__iar_annotation$$branch+0x52c>
 8003414:	2206      	movs	r2, #6
 8003416:	2101      	movs	r1, #1
 8003418:	0020      	movs	r0, r4
 800341a:	f7fd ffbb 	bl	8001394 <PE_CallHardResetCallback>
 800341e:	6960      	ldr	r0, [r4, #20]
 8003420:	0741      	lsls	r1, r0, #29
 8003422:	0fc9      	lsrs	r1, r1, #31
 8003424:	d003      	beq.n	800342e <__iar_annotation$$branch+0x56e>
 8003426:	68a0      	ldr	r0, [r4, #8]
 8003428:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800342a:	2800      	cmp	r0, #0
 800342c:	d137      	bne.n	800349e <__iar_annotation$$branch+0x5de>
 800342e:	e638      	b.n	80030a2 <__iar_annotation$$branch+0x1e2>
 8003430:	0000801e 	.word	0x0000801e
 8003434:	0000b6b0 	.word	0x0000b6b0
 8003438:	00008226 	.word	0x00008226
 800343c:	00000226 	.word	0x00000226
 8003440:	fffff9ff 	.word	0xfffff9ff
 8003444:	fffffe3f 	.word	0xfffffe3f
 8003448:	0000828a 	.word	0x0000828a
 800344c:	00008320 	.word	0x00008320
 8003450:	8be0      	ldrh	r0, [r4, #30]
 8003452:	03a9      	lsls	r1, r5, #14
 8003454:	4288      	cmp	r0, r1
 8003456:	d126      	bne.n	80034a6 <__iar_annotation$$branch+0x5e6>
 8003458:	2204      	movs	r2, #4
 800345a:	2101      	movs	r1, #1
 800345c:	0020      	movs	r0, r4
 800345e:	f7fd ff99 	bl	8001394 <PE_CallHardResetCallback>
 8003462:	2101      	movs	r1, #1
 8003464:	4668      	mov	r0, sp
 8003466:	7b40      	ldrb	r0, [r0, #13]
 8003468:	68a2      	ldr	r2, [r4, #8]
 800346a:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800346c:	4790      	blx	r2
 800346e:	2801      	cmp	r0, #1
 8003470:	d10d      	bne.n	800348e <__iar_annotation$$branch+0x5ce>
 8003472:	0020      	movs	r0, r4
 8003474:	f7fd fb1d 	bl	8000ab2 <PE_Reset_HardReset>
 8003478:	2168      	movs	r1, #104	; 0x68
 800347a:	4668      	mov	r0, sp
 800347c:	7b40      	ldrb	r0, [r0, #13]
 800347e:	f7fc ffff 	bl	8000480 <USBPD_PE_Notification>
 8003482:	2205      	movs	r2, #5
 8003484:	2101      	movs	r1, #1
 8003486:	0020      	movs	r0, r4
 8003488:	f7fd ff84 	bl	8001394 <PE_CallHardResetCallback>
 800348c:	e633      	b.n	80030f6 <__iar_annotation$$branch+0x236>
 800348e:	2206      	movs	r2, #6
 8003490:	2101      	movs	r1, #1
 8003492:	0020      	movs	r0, r4
 8003494:	f7fd ff7e 	bl	8001394 <PE_CallHardResetCallback>
 8003498:	68a0      	ldr	r0, [r4, #8]
 800349a:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800349c:	2800      	cmp	r0, #0
 800349e:	d000      	beq.n	80034a2 <__iar_annotation$$branch+0x5e2>
 80034a0:	e2d6      	b.n	8003a50 <__iar_annotation$$branch+0x5e>
 80034a2:	2500      	movs	r5, #0
 80034a4:	7465      	strb	r5, [r4, #17]
 80034a6:	e4dc      	b.n	8002e62 <__iar_annotation$$branch+0xe>
 80034a8:	2001      	movs	r0, #1
 80034aa:	9000      	str	r0, [sp, #0]
 80034ac:	231b      	movs	r3, #27
 80034ae:	2207      	movs	r2, #7
 80034b0:	2100      	movs	r1, #0
 80034b2:	0020      	movs	r0, r4
 80034b4:	f7fe f82c 	bl	8001510 <PE_Send_CtrlMessage>
 80034b8:	2800      	cmp	r0, #0
 80034ba:	d1f4      	bne.n	80034a6 <__iar_annotation$$branch+0x5e6>
 80034bc:	2006      	movs	r0, #6
 80034be:	7720      	strb	r0, [r4, #28]
 80034c0:	83e7      	strh	r7, [r4, #30]
 80034c2:	251b      	movs	r5, #27
 80034c4:	210b      	movs	r1, #11
 80034c6:	e5c5      	b.n	8003054 <__iar_annotation$$branch+0x194>
 80034c8:	4668      	mov	r0, sp
 80034ca:	7b00      	ldrb	r0, [r0, #12]
 80034cc:	2811      	cmp	r0, #17
 80034ce:	d13e      	bne.n	800354e <__iar_annotation$$branch+0x68e>
 80034d0:	8ea0      	ldrh	r0, [r4, #52]	; 0x34
 80034d2:	0bc1      	lsrs	r1, r0, #15
 80034d4:	d11f      	bne.n	8003516 <__iar_annotation$$branch+0x656>
 80034d6:	0441      	lsls	r1, r0, #17
 80034d8:	0f49      	lsrs	r1, r1, #29
 80034da:	d01c      	beq.n	8003516 <__iar_annotation$$branch+0x656>
 80034dc:	06c0      	lsls	r0, r0, #27
 80034de:	0ec0      	lsrs	r0, r0, #27
 80034e0:	2801      	cmp	r0, #1
 80034e2:	d118      	bne.n	8003516 <__iar_annotation$$branch+0x656>
 80034e4:	008b      	lsls	r3, r1, #2
 80034e6:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 80034e8:	1c82      	adds	r2, r0, #2
 80034ea:	2104      	movs	r1, #4
 80034ec:	7c20      	ldrb	r0, [r4, #16]
 80034ee:	68a5      	ldr	r5, [r4, #8]
 80034f0:	69ad      	ldr	r5, [r5, #24]
 80034f2:	47a8      	blx	r5
 80034f4:	2003      	movs	r0, #3
 80034f6:	7460      	strb	r0, [r4, #17]
 80034f8:	2500      	movs	r5, #0
 80034fa:	4668      	mov	r0, sp
 80034fc:	7b00      	ldrb	r0, [r0, #12]
 80034fe:	2814      	cmp	r0, #20
 8003500:	d005      	beq.n	800350e <__iar_annotation$$branch+0x64e>
 8003502:	2014      	movs	r0, #20
 8003504:	4669      	mov	r1, sp
 8003506:	7308      	strb	r0, [r1, #12]
 8003508:	0020      	movs	r0, r4
 800350a:	f7fd fa24 	bl	8000956 <PE_Clear_RxEvent>
 800350e:	210d      	movs	r1, #13
 8003510:	7c20      	ldrb	r0, [r4, #16]
 8003512:	f7fc ffb5 	bl	8000480 <USBPD_PE_Notification>
 8003516:	8ea0      	ldrh	r0, [r4, #52]	; 0x34
 8003518:	21f0      	movs	r1, #240	; 0xf0
 800351a:	0209      	lsls	r1, r1, #8
 800351c:	4001      	ands	r1, r0
 800351e:	d116      	bne.n	800354e <__iar_annotation$$branch+0x68e>
 8003520:	06c0      	lsls	r0, r0, #27
 8003522:	0ec0      	lsrs	r0, r0, #27
 8003524:	2804      	cmp	r0, #4
 8003526:	d001      	beq.n	800352c <__iar_annotation$$branch+0x66c>
 8003528:	2810      	cmp	r0, #16
 800352a:	d110      	bne.n	800354e <__iar_annotation$$branch+0x68e>
 800352c:	2003      	movs	r0, #3
 800352e:	7460      	strb	r0, [r4, #17]
 8003530:	2500      	movs	r5, #0
 8003532:	4668      	mov	r0, sp
 8003534:	7b00      	ldrb	r0, [r0, #12]
 8003536:	2814      	cmp	r0, #20
 8003538:	d005      	beq.n	8003546 <__iar_annotation$$branch+0x686>
 800353a:	2014      	movs	r0, #20
 800353c:	4669      	mov	r1, sp
 800353e:	7308      	strb	r0, [r1, #12]
 8003540:	0020      	movs	r0, r4
 8003542:	f7fd fa08 	bl	8000956 <PE_Clear_RxEvent>
 8003546:	210e      	movs	r1, #14
 8003548:	7c20      	ldrb	r0, [r4, #16]
 800354a:	f7fc ff99 	bl	8000480 <USBPD_PE_Notification>
 800354e:	8be0      	ldrh	r0, [r4, #30]
 8003550:	2180      	movs	r1, #128	; 0x80
 8003552:	0209      	lsls	r1, r1, #8
 8003554:	4288      	cmp	r0, r1
 8003556:	d11f      	bne.n	8003598 <__iar_annotation$$branch+0x6d8>
 8003558:	2003      	movs	r0, #3
 800355a:	e55f      	b.n	800301c <__iar_annotation$$branch+0x15c>
 800355c:	68a0      	ldr	r0, [r4, #8]
 800355e:	6881      	ldr	r1, [r0, #8]
 8003560:	2900      	cmp	r1, #0
 8003562:	d01f      	beq.n	80035a4 <__iar_annotation$$branch+0x6e4>
 8003564:	7c20      	ldrb	r0, [r4, #16]
 8003566:	4788      	blx	r1
 8003568:	280a      	cmp	r0, #10
 800356a:	d002      	beq.n	8003572 <__iar_annotation$$branch+0x6b2>
 800356c:	280d      	cmp	r0, #13
 800356e:	d014      	beq.n	800359a <__iar_annotation$$branch+0x6da>
 8003570:	e018      	b.n	80035a4 <__iar_annotation$$branch+0x6e4>
 8003572:	1cf8      	adds	r0, r7, #3
 8003574:	83e0      	strh	r0, [r4, #30]
 8003576:	251e      	movs	r5, #30
 8003578:	2000      	movs	r0, #0
 800357a:	9000      	str	r0, [sp, #0]
 800357c:	2324      	movs	r3, #36	; 0x24
 800357e:	2203      	movs	r2, #3
 8003580:	2100      	movs	r1, #0
 8003582:	0020      	movs	r0, r4
 8003584:	f7fd ffc4 	bl	8001510 <PE_Send_CtrlMessage>
 8003588:	2800      	cmp	r0, #0
 800358a:	d105      	bne.n	8003598 <__iar_annotation$$branch+0x6d8>
 800358c:	2201      	movs	r2, #1
 800358e:	2101      	movs	r1, #1
 8003590:	7c20      	ldrb	r0, [r4, #16]
 8003592:	68a3      	ldr	r3, [r4, #8]
 8003594:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003596:	4798      	blx	r3
 8003598:	e463      	b.n	8002e62 <__iar_annotation$$branch+0xe>
 800359a:	2000      	movs	r0, #0
 800359c:	9000      	str	r0, [sp, #0]
 800359e:	2303      	movs	r3, #3
 80035a0:	220c      	movs	r2, #12
 80035a2:	e68d      	b.n	80032c0 <__iar_annotation$$branch+0x400>
 80035a4:	2000      	movs	r0, #0
 80035a6:	9000      	str	r0, [sp, #0]
 80035a8:	2303      	movs	r3, #3
 80035aa:	2204      	movs	r2, #4
 80035ac:	e688      	b.n	80032c0 <__iar_annotation$$branch+0x400>
 80035ae:	8be0      	ldrh	r0, [r4, #30]
 80035b0:	03a9      	lsls	r1, r5, #14
 80035b2:	4288      	cmp	r0, r1
 80035b4:	d1f0      	bne.n	8003598 <__iar_annotation$$branch+0x6d8>
 80035b6:	2104      	movs	r1, #4
 80035b8:	0020      	movs	r0, r4
 80035ba:	f7fd fef4 	bl	80013a6 <PE_SetPowerNegotiation>
 80035be:	6860      	ldr	r0, [r4, #4]
 80035c0:	6801      	ldr	r1, [r0, #0]
 80035c2:	2210      	movs	r2, #16
 80035c4:	430a      	orrs	r2, r1
 80035c6:	6002      	str	r2, [r0, #0]
 80035c8:	2206      	movs	r2, #6
 80035ca:	2101      	movs	r1, #1
 80035cc:	7c20      	ldrb	r0, [r4, #16]
 80035ce:	68a3      	ldr	r3, [r4, #8]
 80035d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80035d2:	4798      	blx	r3
 80035d4:	2207      	movs	r2, #7
 80035d6:	2101      	movs	r1, #1
 80035d8:	7c20      	ldrb	r0, [r4, #16]
 80035da:	68a3      	ldr	r3, [r4, #8]
 80035dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80035de:	4798      	blx	r3
 80035e0:	2100      	movs	r1, #0
 80035e2:	7c20      	ldrb	r0, [r4, #16]
 80035e4:	f002 f889 	bl	80056fa <USBPD_PRL_SetHeaderPowerRole>
 80035e8:	2000      	movs	r0, #0
 80035ea:	9000      	str	r0, [sp, #0]
 80035ec:	2325      	movs	r3, #37	; 0x25
 80035ee:	2206      	movs	r2, #6
 80035f0:	2100      	movs	r1, #0
 80035f2:	0020      	movs	r0, r4
 80035f4:	f7fd ff8c 	bl	8001510 <PE_Send_CtrlMessage>
 80035f8:	2800      	cmp	r0, #0
 80035fa:	d1cd      	bne.n	8003598 <__iar_annotation$$branch+0x6d8>
 80035fc:	e0c9      	b.n	8003792 <__iar_annotation$$branch+0x8d2>
 80035fe:	4668      	mov	r0, sp
 8003600:	7b00      	ldrb	r0, [r0, #12]
 8003602:	2811      	cmp	r0, #17
 8003604:	d10b      	bne.n	800361e <__iar_annotation$$branch+0x75e>
 8003606:	8ea0      	ldrh	r0, [r4, #52]	; 0x34
 8003608:	4001      	ands	r1, r0
 800360a:	2906      	cmp	r1, #6
 800360c:	d107      	bne.n	800361e <__iar_annotation$$branch+0x75e>
 800360e:	2014      	movs	r0, #20
 8003610:	4669      	mov	r1, sp
 8003612:	7308      	strb	r0, [r1, #12]
 8003614:	0020      	movs	r0, r4
 8003616:	f7fd f99e 	bl	8000956 <PE_Clear_RxEvent>
 800361a:	2026      	movs	r0, #38	; 0x26
 800361c:	7460      	strb	r0, [r4, #17]
 800361e:	8be0      	ldrh	r0, [r4, #30]
 8003620:	03a9      	lsls	r1, r5, #14
 8003622:	4288      	cmp	r0, r1
 8003624:	d1b8      	bne.n	8003598 <__iar_annotation$$branch+0x6d8>
 8003626:	68a3      	ldr	r3, [r4, #8]
 8003628:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800362a:	2800      	cmp	r0, #0
 800362c:	d000      	beq.n	8003630 <__iar_annotation$$branch+0x770>
 800362e:	e20f      	b.n	8003a50 <__iar_annotation$$branch+0x5e>
 8003630:	220a      	movs	r2, #10
 8003632:	2101      	movs	r1, #1
 8003634:	7c20      	ldrb	r0, [r4, #16]
 8003636:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003638:	4798      	blx	r3
 800363a:	e0ce      	b.n	80037da <__iar_annotation$$branch+0x91a>
 800363c:	2100      	movs	r1, #0
 800363e:	0020      	movs	r0, r4
 8003640:	f7fd f944 	bl	80008cc <PE_ChangePowerRole>
 8003644:	220d      	movs	r2, #13
 8003646:	2100      	movs	r1, #0
 8003648:	7c20      	ldrb	r0, [r4, #16]
 800364a:	68a3      	ldr	r3, [r4, #8]
 800364c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800364e:	4798      	blx	r3
 8003650:	2114      	movs	r1, #20
 8003652:	7c20      	ldrb	r0, [r4, #16]
 8003654:	f7fc ff14 	bl	8000480 <USBPD_PE_Notification>
 8003658:	220e      	movs	r2, #14
 800365a:	2100      	movs	r1, #0
 800365c:	7c20      	ldrb	r0, [r4, #16]
 800365e:	68a3      	ldr	r3, [r4, #8]
 8003660:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003662:	4798      	blx	r3
 8003664:	6860      	ldr	r0, [r4, #4]
 8003666:	7800      	ldrb	r0, [r0, #0]
 8003668:	0780      	lsls	r0, r0, #30
 800366a:	0f80      	lsrs	r0, r0, #30
 800366c:	2801      	cmp	r0, #1
 800366e:	d104      	bne.n	800367a <__iar_annotation$$branch+0x7ba>
 8003670:	2101      	movs	r1, #1
 8003672:	4668      	mov	r0, sp
 8003674:	7b40      	ldrb	r0, [r0, #13]
 8003676:	f002 f895 	bl	80057a4 <USBPD_PRL_SOPCapability>
 800367a:	0020      	movs	r0, r4
 800367c:	f7fd fa90 	bl	8000ba0 <PE_Reset_StateMachine>
 8003680:	e4cd      	b.n	800301e <__iar_annotation$$branch+0x15e>
 8003682:	2001      	movs	r0, #1
 8003684:	9000      	str	r0, [sp, #0]
 8003686:	231f      	movs	r3, #31
 8003688:	220a      	movs	r2, #10
 800368a:	2100      	movs	r1, #0
 800368c:	0020      	movs	r0, r4
 800368e:	f7fd ff3f 	bl	8001510 <PE_Send_CtrlMessage>
 8003692:	2800      	cmp	r0, #0
 8003694:	d1c6      	bne.n	8003624 <__iar_annotation$$branch+0x764>
 8003696:	2008      	movs	r0, #8
 8003698:	7720      	strb	r0, [r4, #28]
 800369a:	83e7      	strh	r7, [r4, #30]
 800369c:	251b      	movs	r5, #27
 800369e:	2202      	movs	r2, #2
 80036a0:	2101      	movs	r1, #1
 80036a2:	7c20      	ldrb	r0, [r4, #16]
 80036a4:	68a3      	ldr	r3, [r4, #8]
 80036a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80036a8:	4798      	blx	r3
 80036aa:	2139      	movs	r1, #57	; 0x39
 80036ac:	e4d2      	b.n	8003054 <__iar_annotation$$branch+0x194>
 80036ae:	4668      	mov	r0, sp
 80036b0:	7b00      	ldrb	r0, [r0, #12]
 80036b2:	2811      	cmp	r0, #17
 80036b4:	d145      	bne.n	8003742 <__iar_annotation$$branch+0x882>
 80036b6:	8ea0      	ldrh	r0, [r4, #52]	; 0x34
 80036b8:	391f      	subs	r1, #31
 80036ba:	4001      	ands	r1, r0
 80036bc:	d141      	bne.n	8003742 <__iar_annotation$$branch+0x882>
 80036be:	06c0      	lsls	r0, r0, #27
 80036c0:	0ec0      	lsrs	r0, r0, #27
 80036c2:	2803      	cmp	r0, #3
 80036c4:	d006      	beq.n	80036d4 <__iar_annotation$$branch+0x814>
 80036c6:	2804      	cmp	r0, #4
 80036c8:	d012      	beq.n	80036f0 <__iar_annotation$$branch+0x830>
 80036ca:	280c      	cmp	r0, #12
 80036cc:	d008      	beq.n	80036e0 <__iar_annotation$$branch+0x820>
 80036ce:	2810      	cmp	r0, #16
 80036d0:	d020      	beq.n	8003714 <__iar_annotation$$branch+0x854>
 80036d2:	e036      	b.n	8003742 <__iar_annotation$$branch+0x882>
 80036d4:	213a      	movs	r1, #58	; 0x3a
 80036d6:	7c20      	ldrb	r0, [r4, #16]
 80036d8:	f7fc fed2 	bl	8000480 <USBPD_PE_Notification>
 80036dc:	2020      	movs	r0, #32
 80036de:	e012      	b.n	8003706 <__iar_annotation$$branch+0x846>
 80036e0:	2205      	movs	r2, #5
 80036e2:	2101      	movs	r1, #1
 80036e4:	7c20      	ldrb	r0, [r4, #16]
 80036e6:	68a3      	ldr	r3, [r4, #8]
 80036e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80036ea:	4798      	blx	r3
 80036ec:	213b      	movs	r1, #59	; 0x3b
 80036ee:	e006      	b.n	80036fe <__iar_annotation$$branch+0x83e>
 80036f0:	2204      	movs	r2, #4
 80036f2:	2101      	movs	r1, #1
 80036f4:	7c20      	ldrb	r0, [r4, #16]
 80036f6:	68a3      	ldr	r3, [r4, #8]
 80036f8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80036fa:	4798      	blx	r3
 80036fc:	2116      	movs	r1, #22
 80036fe:	7c20      	ldrb	r0, [r4, #16]
 8003700:	f7fc febe 	bl	8000480 <USBPD_PE_Notification>
 8003704:	2003      	movs	r0, #3
 8003706:	7460      	strb	r0, [r4, #17]
 8003708:	2500      	movs	r5, #0
 800370a:	4668      	mov	r0, sp
 800370c:	7b00      	ldrb	r0, [r0, #12]
 800370e:	2814      	cmp	r0, #20
 8003710:	d111      	bne.n	8003736 <__iar_annotation$$branch+0x876>
 8003712:	e016      	b.n	8003742 <__iar_annotation$$branch+0x882>
 8003714:	2204      	movs	r2, #4
 8003716:	2101      	movs	r1, #1
 8003718:	7c20      	ldrb	r0, [r4, #16]
 800371a:	68a3      	ldr	r3, [r4, #8]
 800371c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800371e:	4798      	blx	r3
 8003720:	2117      	movs	r1, #23
 8003722:	7c20      	ldrb	r0, [r4, #16]
 8003724:	f7fc feac 	bl	8000480 <USBPD_PE_Notification>
 8003728:	2003      	movs	r0, #3
 800372a:	7460      	strb	r0, [r4, #17]
 800372c:	2500      	movs	r5, #0
 800372e:	4668      	mov	r0, sp
 8003730:	7b00      	ldrb	r0, [r0, #12]
 8003732:	2814      	cmp	r0, #20
 8003734:	d005      	beq.n	8003742 <__iar_annotation$$branch+0x882>
 8003736:	2014      	movs	r0, #20
 8003738:	4669      	mov	r1, sp
 800373a:	7308      	strb	r0, [r1, #12]
 800373c:	0020      	movs	r0, r4
 800373e:	f7fd f90a 	bl	8000956 <PE_Clear_RxEvent>
 8003742:	8be0      	ldrh	r0, [r4, #30]
 8003744:	2180      	movs	r1, #128	; 0x80
 8003746:	0209      	lsls	r1, r1, #8
 8003748:	4288      	cmp	r0, r1
 800374a:	d12c      	bne.n	80037a6 <__iar_annotation$$branch+0x8e6>
 800374c:	e704      	b.n	8003558 <__iar_annotation$$branch+0x698>
 800374e:	6860      	ldr	r0, [r4, #4]
 8003750:	6801      	ldr	r1, [r0, #0]
 8003752:	2210      	movs	r2, #16
 8003754:	430a      	orrs	r2, r1
 8003756:	6002      	str	r2, [r0, #0]
 8003758:	7f20      	ldrb	r0, [r4, #28]
 800375a:	2809      	cmp	r0, #9
 800375c:	d005      	beq.n	800376a <__iar_annotation$$branch+0x8aa>
 800375e:	2206      	movs	r2, #6
 8003760:	2101      	movs	r1, #1
 8003762:	7c20      	ldrb	r0, [r4, #16]
 8003764:	68a3      	ldr	r3, [r4, #8]
 8003766:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003768:	4798      	blx	r3
 800376a:	2207      	movs	r2, #7
 800376c:	2101      	movs	r1, #1
 800376e:	7c20      	ldrb	r0, [r4, #16]
 8003770:	68a3      	ldr	r3, [r4, #8]
 8003772:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003774:	4798      	blx	r3
 8003776:	2100      	movs	r1, #0
 8003778:	7c20      	ldrb	r0, [r4, #16]
 800377a:	f001 ffbe 	bl	80056fa <USBPD_PRL_SetHeaderPowerRole>
 800377e:	2000      	movs	r0, #0
 8003780:	9000      	str	r0, [sp, #0]
 8003782:	2321      	movs	r3, #33	; 0x21
 8003784:	2206      	movs	r2, #6
 8003786:	2100      	movs	r1, #0
 8003788:	0020      	movs	r0, r4
 800378a:	f7fd fec1 	bl	8001510 <PE_Send_CtrlMessage>
 800378e:	2800      	cmp	r0, #0
 8003790:	d109      	bne.n	80037a6 <__iar_annotation$$branch+0x8e6>
 8003792:	2208      	movs	r2, #8
 8003794:	2101      	movs	r1, #1
 8003796:	7c20      	ldrb	r0, [r4, #16]
 8003798:	68a3      	ldr	r3, [r4, #8]
 800379a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800379c:	4798      	blx	r3
 800379e:	48c5      	ldr	r0, [pc, #788]	; (8003ab4 <.text_3>)
 80037a0:	83e0      	strh	r0, [r4, #30]
 80037a2:	25eb      	movs	r5, #235	; 0xeb
 80037a4:	006d      	lsls	r5, r5, #1
 80037a6:	e6f7      	b.n	8003598 <__iar_annotation$$branch+0x6d8>
 80037a8:	4668      	mov	r0, sp
 80037aa:	7b00      	ldrb	r0, [r0, #12]
 80037ac:	2811      	cmp	r0, #17
 80037ae:	d10b      	bne.n	80037c8 <__iar_annotation$$branch+0x908>
 80037b0:	8ea0      	ldrh	r0, [r4, #52]	; 0x34
 80037b2:	4001      	ands	r1, r0
 80037b4:	2906      	cmp	r1, #6
 80037b6:	d107      	bne.n	80037c8 <__iar_annotation$$branch+0x908>
 80037b8:	2026      	movs	r0, #38	; 0x26
 80037ba:	7460      	strb	r0, [r4, #17]
 80037bc:	2014      	movs	r0, #20
 80037be:	4669      	mov	r1, sp
 80037c0:	7308      	strb	r0, [r1, #12]
 80037c2:	0020      	movs	r0, r4
 80037c4:	f7fd f8c7 	bl	8000956 <PE_Clear_RxEvent>
 80037c8:	8be0      	ldrh	r0, [r4, #30]
 80037ca:	03a9      	lsls	r1, r5, #14
 80037cc:	4288      	cmp	r0, r1
 80037ce:	d1ea      	bne.n	80037a6 <__iar_annotation$$branch+0x8e6>
 80037d0:	68a0      	ldr	r0, [r4, #8]
 80037d2:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80037d4:	2800      	cmp	r0, #0
 80037d6:	d000      	beq.n	80037da <__iar_annotation$$branch+0x91a>
 80037d8:	e13a      	b.n	8003a50 <__iar_annotation$$branch+0x5e>
 80037da:	200f      	movs	r0, #15
 80037dc:	e6bd      	b.n	800355a <__iar_annotation$$branch+0x69a>
 80037de:	8be0      	ldrh	r0, [r4, #30]
 80037e0:	03a9      	lsls	r1, r5, #14
 80037e2:	4288      	cmp	r0, r1
 80037e4:	d1df      	bne.n	80037a6 <__iar_annotation$$branch+0x8e6>
 80037e6:	220e      	movs	r2, #14
 80037e8:	2101      	movs	r1, #1
 80037ea:	7c20      	ldrb	r0, [r4, #16]
 80037ec:	68a3      	ldr	r3, [r4, #8]
 80037ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80037f0:	4798      	blx	r3
 80037f2:	6860      	ldr	r0, [r4, #4]
 80037f4:	7800      	ldrb	r0, [r0, #0]
 80037f6:	0780      	lsls	r0, r0, #30
 80037f8:	0f80      	lsrs	r0, r0, #30
 80037fa:	2802      	cmp	r0, #2
 80037fc:	d102      	bne.n	8003804 <__iar_annotation$$branch+0x944>
 80037fe:	7c20      	ldrb	r0, [r4, #16]
 8003800:	f001 ffb1 	bl	8005766 <USBPD_PRL_SRCReleaseSinkNG>
 8003804:	0020      	movs	r0, r4
 8003806:	f7fd f9cb 	bl	8000ba0 <PE_Reset_StateMachine>
 800380a:	2115      	movs	r1, #21
 800380c:	e74e      	b.n	80036ac <__iar_annotation$$branch+0x7ec>
 800380e:	2803      	cmp	r0, #3
 8003810:	d110      	bne.n	8003834 <__iar_annotation$$branch+0x974>
 8003812:	2000      	movs	r0, #0
 8003814:	7720      	strb	r0, [r4, #28]
 8003816:	6860      	ldr	r0, [r4, #4]
 8003818:	7800      	ldrb	r0, [r0, #0]
 800381a:	0780      	lsls	r0, r0, #30
 800381c:	0f80      	lsrs	r0, r0, #30
 800381e:	2802      	cmp	r0, #2
 8003820:	d102      	bne.n	8003828 <__iar_annotation$$branch+0x968>
 8003822:	7c20      	ldrb	r0, [r4, #16]
 8003824:	f001 ff9f 	bl	8005766 <USBPD_PRL_SRCReleaseSinkNG>
 8003828:	2004      	movs	r0, #4
 800382a:	7460      	strb	r0, [r4, #17]
 800382c:	2167      	movs	r1, #103	; 0x67
 800382e:	7c20      	ldrb	r0, [r4, #16]
 8003830:	f7fc fe26 	bl	8000480 <USBPD_PE_Notification>
 8003834:	4668      	mov	r0, sp
 8003836:	7b00      	ldrb	r0, [r0, #12]
 8003838:	2814      	cmp	r0, #20
 800383a:	d00d      	beq.n	8003858 <__iar_annotation$$branch+0x998>
 800383c:	0020      	movs	r0, r4
 800383e:	f7fe f917 	bl	8001a70 <PE_ManageRXEvent>
 8003842:	4668      	mov	r0, sp
 8003844:	7b00      	ldrb	r0, [r0, #12]
 8003846:	2814      	cmp	r0, #20
 8003848:	d005      	beq.n	8003856 <__iar_annotation$$branch+0x996>
 800384a:	2014      	movs	r0, #20
 800384c:	4669      	mov	r1, sp
 800384e:	7308      	strb	r0, [r1, #12]
 8003850:	0020      	movs	r0, r4
 8003852:	f7fd f880 	bl	8000956 <PE_Clear_RxEvent>
 8003856:	e69f      	b.n	8003598 <__iar_annotation$$branch+0x6d8>
 8003858:	6960      	ldr	r0, [r4, #20]
 800385a:	0cc0      	lsrs	r0, r0, #19
 800385c:	03ad      	lsls	r5, r5, #14
 800385e:	2800      	cmp	r0, #0
 8003860:	d01e      	beq.n	80038a0 <__iar_annotation$$branch+0x9e0>
 8003862:	8c21      	ldrh	r1, [r4, #32]
 8003864:	42a9      	cmp	r1, r5
 8003866:	d10e      	bne.n	8003886 <__iar_annotation$$branch+0x9c6>
 8003868:	200f      	movs	r0, #15
 800386a:	7460      	strb	r0, [r4, #17]
 800386c:	2000      	movs	r0, #0
 800386e:	9000      	str	r0, [sp, #0]
 8003870:	2300      	movs	r3, #0
 8003872:	2270      	movs	r2, #112	; 0x70
 8003874:	7c21      	ldrb	r1, [r4, #16]
 8003876:	2009      	movs	r0, #9
 8003878:	4da5      	ldr	r5, [pc, #660]	; (8003b10 <.text_5>)
 800387a:	682d      	ldr	r5, [r5, #0]
 800387c:	47a8      	blx	r5
 800387e:	78b0      	ldrb	r0, [r6, #2]
 8003880:	1c40      	adds	r0, r0, #1
 8003882:	70b0      	strb	r0, [r6, #2]
 8003884:	e6fc      	b.n	8003680 <__iar_annotation$$branch+0x7c0>
 8003886:	8ea1      	ldrh	r1, [r4, #52]	; 0x34
 8003888:	0509      	lsls	r1, r1, #20
 800388a:	0f49      	lsrs	r1, r1, #29
 800388c:	180a      	adds	r2, r1, r0
 800388e:	2333      	movs	r3, #51	; 0x33
 8003890:	435a      	muls	r2, r3
 8003892:	4315      	orrs	r5, r2
 8003894:	8425      	strh	r5, [r4, #32]
 8003896:	180d      	adds	r5, r1, r0
 8003898:	2033      	movs	r0, #51	; 0x33
 800389a:	4345      	muls	r5, r0
 800389c:	b2ad      	uxth	r5, r5
 800389e:	e67b      	b.n	8003598 <__iar_annotation$$branch+0x6d8>
 80038a0:	8ca0      	ldrh	r0, [r4, #36]	; 0x24
 80038a2:	42a8      	cmp	r0, r5
 80038a4:	d099      	beq.n	80037da <__iar_annotation$$branch+0x91a>
 80038a6:	7c20      	ldrb	r0, [r4, #16]
 80038a8:	f7fd f87a 	bl	80009a0 <PE_PRL_Control_RxEvent>
 80038ac:	2800      	cmp	r0, #0
 80038ae:	d113      	bne.n	80038d8 <__iar_annotation$$branch+0xa18>
 80038b0:	2032      	movs	r0, #50	; 0x32
 80038b2:	5c20      	ldrb	r0, [r4, r0]
 80038b4:	2800      	cmp	r0, #0
 80038b6:	d00f      	beq.n	80038d8 <__iar_annotation$$branch+0xa18>
 80038b8:	2133      	movs	r1, #51	; 0x33
 80038ba:	5c61      	ldrb	r1, [r4, r1]
 80038bc:	2231      	movs	r2, #49	; 0x31
 80038be:	54a1      	strb	r1, [r4, r2]
 80038c0:	7460      	strb	r0, [r4, #17]
 80038c2:	2500      	movs	r5, #0
 80038c4:	2132      	movs	r1, #50	; 0x32
 80038c6:	5465      	strb	r5, [r4, r1]
 80038c8:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80038ca:	62e0      	str	r0, [r4, #44]	; 0x2c
 80038cc:	6960      	ldr	r0, [r4, #20]
 80038ce:	2180      	movs	r1, #128	; 0x80
 80038d0:	01c9      	lsls	r1, r1, #7
 80038d2:	4301      	orrs	r1, r0
 80038d4:	6161      	str	r1, [r4, #20]
 80038d6:	e65f      	b.n	8003598 <__iar_annotation$$branch+0x6d8>
 80038d8:	8c60      	ldrh	r0, [r4, #34]	; 0x22
 80038da:	42a8      	cmp	r0, r5
 80038dc:	d104      	bne.n	80038e8 <__iar_annotation$$branch+0x4>
 80038de:	2500      	movs	r5, #0
 80038e0:	8465      	strh	r5, [r4, #34]	; 0x22
 80038e2:	7930      	ldrb	r0, [r6, #4]

080038e4 <__iar_annotation$$branch>:
 80038e4:	f7ff fb87 	bl	8002ff6 <__iar_annotation$$branch+0x136>
 80038e8:	0020      	movs	r0, r4
 80038ea:	f7fd fd83 	bl	80013f4 <PE_CalculateMinTiming>
 80038ee:	e080      	b.n	80039f2 <__iar_annotation$$branch>
 80038f0:	2000      	movs	r0, #0
 80038f2:	9002      	str	r0, [sp, #8]
 80038f4:	2003      	movs	r0, #3
 80038f6:	9001      	str	r0, [sp, #4]
 80038f8:	2001      	movs	r0, #1
 80038fa:	9000      	str	r0, [sp, #0]
 80038fc:	0023      	movs	r3, r4
 80038fe:	332c      	adds	r3, #44	; 0x2c
 8003900:	2206      	movs	r2, #6
 8003902:	2100      	movs	r1, #0
 8003904:	0020      	movs	r0, r4
 8003906:	f7fd fe2e 	bl	8001566 <PE_Send_DataMessage>
 800390a:	2800      	cmp	r0, #0
 800390c:	d1e3      	bne.n	80038d6 <__iar_annotation$$branch+0xa16>
 800390e:	215d      	movs	r1, #93	; 0x5d
 8003910:	e6cc      	b.n	80036ac <__iar_annotation$$branch+0x7ec>
 8003912:	2000      	movs	r0, #0
 8003914:	9004      	str	r0, [sp, #16]
 8003916:	ab04      	add	r3, sp, #16
 8003918:	aa05      	add	r2, sp, #20
 800391a:	210a      	movs	r1, #10
 800391c:	4668      	mov	r0, sp
 800391e:	7b40      	ldrb	r0, [r0, #13]
 8003920:	68a7      	ldr	r7, [r4, #8]
 8003922:	697f      	ldr	r7, [r7, #20]
 8003924:	47b8      	blx	r7
 8003926:	2104      	movs	r1, #4
 8003928:	9804      	ldr	r0, [sp, #16]
 800392a:	f7fd fd8f 	bl	800144c <PE_CheckDataSizeFromGetDataInfo>
 800392e:	2800      	cmp	r0, #0
 8003930:	d11f      	bne.n	8003972 <__iar_annotation$$branch+0x8e>
 8003932:	71f0      	strb	r0, [r6, #7]
 8003934:	7230      	strb	r0, [r6, #8]
 8003936:	7c20      	ldrb	r0, [r4, #16]
 8003938:	f7fd fa04 	bl	8000d44 <PE_Get_UnchunkedSupport>
 800393c:	2800      	cmp	r0, #0
 800393e:	d103      	bne.n	8003948 <__iar_annotation$$branch+0x64>
 8003940:	7a30      	ldrb	r0, [r6, #8]
 8003942:	2180      	movs	r1, #128	; 0x80
 8003944:	4301      	orrs	r1, r0
 8003946:	7231      	strb	r1, [r6, #8]
 8003948:	9a04      	ldr	r2, [sp, #16]
 800394a:	a905      	add	r1, sp, #20
 800394c:	4871      	ldr	r0, [pc, #452]	; (8003b14 <.text_6>)
 800394e:	1820      	adds	r0, r4, r0
 8003950:	f014 fcdc 	bl	801830c <__aeabi_memcpy>
 8003954:	2000      	movs	r0, #0
 8003956:	9002      	str	r0, [sp, #8]
 8003958:	2003      	movs	r0, #3
 800395a:	9001      	str	r0, [sp, #4]
 800395c:	2008      	movs	r0, #8
 800395e:	9000      	str	r0, [sp, #0]
 8003960:	486d      	ldr	r0, [pc, #436]	; (8003b18 <.text_7>)
 8003962:	1823      	adds	r3, r4, r0
 8003964:	220c      	movs	r2, #12
 8003966:	2100      	movs	r1, #0
 8003968:	0020      	movs	r0, r4
 800396a:	f7fd ff2f 	bl	80017cc <PE_Send_ExtendedMessage>
 800396e:	214c      	movs	r1, #76	; 0x4c
 8003970:	e69c      	b.n	80036ac <__iar_annotation$$branch+0x7ec>
 8003972:	2001      	movs	r0, #1
 8003974:	e510      	b.n	8003398 <__iar_annotation$$branch+0x4d8>
 8003976:	2001      	movs	r0, #1
 8003978:	9000      	str	r0, [sp, #0]
 800397a:	2339      	movs	r3, #57	; 0x39
 800397c:	7832      	ldrb	r2, [r6, #0]
 800397e:	2033      	movs	r0, #51	; 0x33
 8003980:	5c21      	ldrb	r1, [r4, r0]
 8003982:	0020      	movs	r0, r4
 8003984:	f7fd fdc4 	bl	8001510 <PE_Send_CtrlMessage>
 8003988:	2800      	cmp	r0, #0
 800398a:	d144      	bne.n	8003a16 <__iar_annotation$$branch+0x24>
 800398c:	7870      	ldrb	r0, [r6, #1]
 800398e:	7720      	strb	r0, [r4, #28]
 8003990:	83e7      	strh	r7, [r4, #30]
 8003992:	251b      	movs	r5, #27
 8003994:	2144      	movs	r1, #68	; 0x44
 8003996:	e689      	b.n	80036ac <__iar_annotation$$branch+0x7ec>
 8003998:	8be0      	ldrh	r0, [r4, #30]
 800399a:	03a9      	lsls	r1, r5, #14
 800399c:	4288      	cmp	r0, r1
 800399e:	d104      	bne.n	80039aa <__iar_annotation$$branch+0xc6>
 80039a0:	4668      	mov	r0, sp
 80039a2:	7b00      	ldrb	r0, [r0, #12]
 80039a4:	2814      	cmp	r0, #20
 80039a6:	d100      	bne.n	80039aa <__iar_annotation$$branch+0xc6>
 80039a8:	e5d6      	b.n	8003558 <__iar_annotation$$branch+0x698>
 80039aa:	4668      	mov	r0, sp
 80039ac:	7b00      	ldrb	r0, [r0, #12]
 80039ae:	2814      	cmp	r0, #20
 80039b0:	d031      	beq.n	8003a16 <__iar_annotation$$branch+0x24>
 80039b2:	8ea0      	ldrh	r0, [r4, #52]	; 0x34
 80039b4:	0bc1      	lsrs	r1, r0, #15
 80039b6:	d003      	beq.n	80039c0 <__iar_annotation$$branch+0xdc>
 80039b8:	0020      	movs	r0, r4
 80039ba:	f7fd fe11 	bl	80015e0 <PE_Check_ExtendedMessage>
 80039be:	e740      	b.n	8003842 <__iar_annotation$$branch+0x982>
 80039c0:	06c0      	lsls	r0, r0, #27
 80039c2:	0ec0      	lsrs	r0, r0, #27
 80039c4:	2810      	cmp	r0, #16
 80039c6:	d000      	beq.n	80039ca <__iar_annotation$$branch+0xe6>
 80039c8:	e5c6      	b.n	8003558 <__iar_annotation$$branch+0x698>
 80039ca:	2014      	movs	r0, #20
 80039cc:	4669      	mov	r1, sp
 80039ce:	7308      	strb	r0, [r1, #12]
 80039d0:	0020      	movs	r0, r4
 80039d2:	f7fc ffc0 	bl	8000956 <PE_Clear_RxEvent>
 80039d6:	2500      	movs	r5, #0
 80039d8:	83e5      	strh	r5, [r4, #30]
 80039da:	2003      	movs	r0, #3
 80039dc:	7460      	strb	r0, [r4, #17]
 80039de:	2159      	movs	r1, #89	; 0x59
 80039e0:	e664      	b.n	80036ac <__iar_annotation$$branch+0x7ec>
 80039e2:	0020      	movs	r0, r4
 80039e4:	f7fd ff1e 	bl	8001824 <PE_SubStateMachine_ExtendedMessages>
 80039e8:	e003      	b.n	80039f2 <__iar_annotation$$branch>
 80039ea:	a903      	add	r1, sp, #12
 80039ec:	0020      	movs	r0, r4
 80039ee:	f7fd f9bb 	bl	8000d68 <PE_SubStateMachine_Generic>

080039f2 <__iar_annotation$$branch>:
 80039f2:	f7ff fa35 	bl	8002e60 <__iar_annotation$$branch+0xc>
 80039f6:	a903      	add	r1, sp, #12
 80039f8:	0020      	movs	r0, r4
 80039fa:	f000 f9d5 	bl	8003da8 <PE_SubStateMachine_VconnSwap>
 80039fe:	0005      	movs	r5, r0
 8003a00:	6860      	ldr	r0, [r4, #4]
 8003a02:	6800      	ldr	r0, [r0, #0]
 8003a04:	0401      	lsls	r1, r0, #16
 8003a06:	0fc9      	lsrs	r1, r1, #31
 8003a08:	d006      	beq.n	8003a18 <__iar_annotation$$branch+0x26>
 8003a0a:	6820      	ldr	r0, [r4, #0]
 8003a0c:	6801      	ldr	r1, [r0, #0]
 8003a0e:	4668      	mov	r0, sp
 8003a10:	7b40      	ldrb	r0, [r0, #13]
 8003a12:	f001 fec7 	bl	80057a4 <USBPD_PRL_SOPCapability>
 8003a16:	e5bf      	b.n	8003598 <__iar_annotation$$branch+0x6d8>
 8003a18:	2101      	movs	r1, #1
 8003a1a:	e7f8      	b.n	8003a0e <__iar_annotation$$branch+0x1c>
 8003a1c:	4668      	mov	r0, sp
 8003a1e:	7b00      	ldrb	r0, [r0, #12]
 8003a20:	2811      	cmp	r0, #17
 8003a22:	d111      	bne.n	8003a48 <__iar_annotation$$branch+0x56>
 8003a24:	8ea0      	ldrh	r0, [r4, #52]	; 0x34
 8003a26:	4001      	ands	r1, r0
 8003a28:	2913      	cmp	r1, #19
 8003a2a:	d10d      	bne.n	8003a48 <__iar_annotation$$branch+0x56>
 8003a2c:	2014      	movs	r0, #20
 8003a2e:	4669      	mov	r1, sp
 8003a30:	7308      	strb	r0, [r1, #12]
 8003a32:	0020      	movs	r0, r4
 8003a34:	f7fc ff8f 	bl	8000956 <PE_Clear_RxEvent>
 8003a38:	2000      	movs	r0, #0
 8003a3a:	9000      	str	r0, [sp, #0]
 8003a3c:	2320      	movs	r3, #32
 8003a3e:	2203      	movs	r2, #3
 8003a40:	2100      	movs	r1, #0
 8003a42:	0020      	movs	r0, r4
 8003a44:	f7fd fd64 	bl	8001510 <PE_Send_CtrlMessage>
 8003a48:	8ce0      	ldrh	r0, [r4, #38]	; 0x26
 8003a4a:	03a9      	lsls	r1, r5, #14
 8003a4c:	4288      	cmp	r0, r1
 8003a4e:	d106      	bne.n	8003a5e <__iar_annotation$$branch+0x6c>
 8003a50:	2092      	movs	r0, #146	; 0x92
 8003a52:	e582      	b.n	800355a <__iar_annotation$$branch+0x69a>
 8003a54:	4668      	mov	r0, sp
 8003a56:	7b01      	ldrb	r1, [r0, #12]
 8003a58:	0020      	movs	r0, r4
 8003a5a:	f001 fc05 	bl	8005268 <PE_StateMachine_UVDM>
 8003a5e:	e59b      	b.n	8003598 <__iar_annotation$$branch+0x6d8>
 8003a60:	6960      	ldr	r0, [r4, #20]
 8003a62:	2701      	movs	r7, #1
 8003a64:	0b41      	lsrs	r1, r0, #13
 8003a66:	4039      	ands	r1, r7
 8003a68:	d019      	beq.n	8003a9e <__iar_annotation$$branch+0xac>
 8003a6a:	0b80      	lsrs	r0, r0, #14
 8003a6c:	4038      	ands	r0, r7
 8003a6e:	d007      	beq.n	8003a80 <__iar_annotation$$branch+0x8e>
 8003a70:	215b      	movs	r1, #91	; 0x5b
 8003a72:	7c20      	ldrb	r0, [r4, #16]
 8003a74:	f7fc fd04 	bl	8000480 <USBPD_PE_Notification>
 8003a78:	6960      	ldr	r0, [r4, #20]
 8003a7a:	4928      	ldr	r1, [pc, #160]	; (8003b1c <.text_8>)
 8003a7c:	4001      	ands	r1, r0
 8003a7e:	6161      	str	r1, [r4, #20]
 8003a80:	2003      	movs	r0, #3
 8003a82:	7460      	strb	r0, [r4, #17]
 8003a84:	7ca1      	ldrb	r1, [r4, #18]
 8003a86:	2903      	cmp	r1, #3
 8003a88:	d008      	beq.n	8003a9c <__iar_annotation$$branch+0xaa>
 8003a8a:	74a0      	strb	r0, [r4, #18]
 8003a8c:	2000      	movs	r0, #0
 8003a8e:	9000      	str	r0, [sp, #0]
 8003a90:	2300      	movs	r3, #0
 8003a92:	2203      	movs	r2, #3
 8003a94:	7c21      	ldrb	r1, [r4, #16]
 8003a96:	2004      	movs	r0, #4
 8003a98:	6835      	ldr	r5, [r6, #0]
 8003a9a:	47a8      	blx	r5
 8003a9c:	2501      	movs	r5, #1
 8003a9e:	6960      	ldr	r0, [r4, #20]
 8003aa0:	491f      	ldr	r1, [pc, #124]	; (8003b20 <.text_9>)
 8003aa2:	4001      	ands	r1, r0
 8003aa4:	6161      	str	r1, [r4, #20]
 8003aa6:	2d00      	cmp	r5, #0
 8003aa8:	d101      	bne.n	8003aae <__iar_annotation$$branch>

08003aaa <__iar_annotation$$branch>:
 8003aaa:	f7ff f8c9 	bl	8002c40 <USBPD_PE_StateMachine_SRC+0xb4>

08003aae <__iar_annotation$$branch>:
 8003aae:	f7ff fa0b 	bl	8002ec8 <__iar_annotation$$branch+0x8>
	...

08003ab4 <.text_3>:
 8003ab4:	000081d6 	.word	0x000081d6

08003ab8 <PE_Send_SRCCapabilities>:
 8003ab8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8003aba:	0004      	movs	r4, r0
 8003abc:	000d      	movs	r5, r1
 8003abe:	2000      	movs	r0, #0
 8003ac0:	9002      	str	r0, [sp, #8]
 8003ac2:	ab02      	add	r3, sp, #8
 8003ac4:	4817      	ldr	r0, [pc, #92]	; (8003b24 <.text_10>)
 8003ac6:	1822      	adds	r2, r4, r0
 8003ac8:	2100      	movs	r1, #0
 8003aca:	7c20      	ldrb	r0, [r4, #16]
 8003acc:	68a6      	ldr	r6, [r4, #8]
 8003ace:	6976      	ldr	r6, [r6, #20]
 8003ad0:	47b0      	blx	r6
 8003ad2:	9802      	ldr	r0, [sp, #8]
 8003ad4:	1c80      	adds	r0, r0, #2
 8003ad6:	9002      	str	r0, [sp, #8]
 8003ad8:	2104      	movs	r1, #4
 8003ada:	9802      	ldr	r0, [sp, #8]
 8003adc:	f7fd fcb6 	bl	800144c <PE_CheckDataSizeFromGetDataInfo>
 8003ae0:	2800      	cmp	r0, #0
 8003ae2:	d113      	bne.n	8003b0c <PE_Send_SRCCapabilities+0x54>
 8003ae4:	6860      	ldr	r0, [r4, #4]
 8003ae6:	6800      	ldr	r0, [r0, #0]
 8003ae8:	04c1      	lsls	r1, r0, #19
 8003aea:	0fc9      	lsrs	r1, r1, #31
 8003aec:	d00e      	beq.n	8003b0c <PE_Send_SRCCapabilities+0x54>
 8003aee:	9501      	str	r5, [sp, #4]
 8003af0:	9802      	ldr	r0, [sp, #8]
 8003af2:	b280      	uxth	r0, r0
 8003af4:	9000      	str	r0, [sp, #0]
 8003af6:	4808      	ldr	r0, [pc, #32]	; (8003b18 <.text_7>)
 8003af8:	1823      	adds	r3, r4, r0
 8003afa:	2201      	movs	r2, #1
 8003afc:	2100      	movs	r1, #0
 8003afe:	7c20      	ldrb	r0, [r4, #16]
 8003b00:	f001 fe54 	bl	80057ac <USBPD_PRL_SendMessage>
 8003b04:	2803      	cmp	r0, #3
 8003b06:	d0e7      	beq.n	8003ad8 <PE_Send_SRCCapabilities+0x20>
 8003b08:	b004      	add	sp, #16
 8003b0a:	bd70      	pop	{r4, r5, r6, pc}
 8003b0c:	2010      	movs	r0, #16
 8003b0e:	e7fb      	b.n	8003b08 <PE_Send_SRCCapabilities+0x50>

08003b10 <.text_5>:
 8003b10:	20000000 	.word	0x20000000

08003b14 <.text_6>:
 8003b14:	00000267 	.word	0x00000267

08003b18 <.text_7>:
 8003b18:	00000263 	.word	0x00000263

08003b1c <.text_8>:
 8003b1c:	ffffbfff 	.word	0xffffbfff

08003b20 <.text_9>:
 8003b20:	ffffdfff 	.word	0xffffdfff

08003b24 <.text_10>:
 8003b24:	00000265 	.word	0x00000265

08003b28 <PE_StateMachine_VDMCable>:
 8003b28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003b2a:	b08c      	sub	sp, #48	; 0x30
 8003b2c:	0004      	movs	r4, r0
 8003b2e:	2502      	movs	r5, #2
 8003b30:	2607      	movs	r6, #7
 8003b32:	7c60      	ldrb	r0, [r4, #17]
 8003b34:	2805      	cmp	r0, #5
 8003b36:	d002      	beq.n	8003b3e <PE_StateMachine_VDMCable+0x16>
 8003b38:	289a      	cmp	r0, #154	; 0x9a
 8003b3a:	d072      	beq.n	8003c22 <PE_StateMachine_VDMCable+0xfa>
 8003b3c:	e127      	b.n	8003d8e <PE_StateMachine_VDMCable+0x266>
 8003b3e:	6860      	ldr	r0, [r4, #4]
 8003b40:	7800      	ldrb	r0, [r0, #0]
 8003b42:	0781      	lsls	r1, r0, #30
 8003b44:	0f89      	lsrs	r1, r1, #30
 8003b46:	0020      	movs	r0, r4
 8003b48:	f000 fa5e 	bl	8004008 <PE_ExtRevisionInteroperability_Cable>
 8003b4c:	2094      	movs	r0, #148	; 0x94
 8003b4e:	0080      	lsls	r0, r0, #2
 8003b50:	5821      	ldr	r1, [r4, r0]
 8003b52:	201f      	movs	r0, #31
 8003b54:	4381      	bics	r1, r0
 8003b56:	488f      	ldr	r0, [pc, #572]	; (8003d94 <.text_3>)
 8003b58:	4308      	orrs	r0, r1
 8003b5a:	2194      	movs	r1, #148	; 0x94
 8003b5c:	0089      	lsls	r1, r1, #2
 8003b5e:	5060      	str	r0, [r4, r1]
 8003b60:	6861      	ldr	r1, [r4, #4]
 8003b62:	9100      	str	r1, [sp, #0]
 8003b64:	2101      	movs	r1, #1
 8003b66:	9a00      	ldr	r2, [sp, #0]
 8003b68:	6812      	ldr	r2, [r2, #0]
 8003b6a:	0953      	lsrs	r3, r2, #5
 8003b6c:	400b      	ands	r3, r1
 8003b6e:	4a8a      	ldr	r2, [pc, #552]	; (8003d98 <.text_4>)
 8003b70:	4002      	ands	r2, r0
 8003b72:	0358      	lsls	r0, r3, #13
 8003b74:	4310      	orrs	r0, r2
 8003b76:	22ff      	movs	r2, #255	; 0xff
 8003b78:	0612      	lsls	r2, r2, #24
 8003b7a:	4302      	orrs	r2, r0
 8003b7c:	2094      	movs	r0, #148	; 0x94
 8003b7e:	0080      	lsls	r0, r0, #2
 8003b80:	5022      	str	r2, [r4, r0]
 8003b82:	9800      	ldr	r0, [sp, #0]
 8003b84:	6800      	ldr	r0, [r0, #0]
 8003b86:	0880      	lsrs	r0, r0, #2
 8003b88:	4001      	ands	r1, r0
 8003b8a:	d003      	beq.n	8003b94 <PE_StateMachine_VDMCable+0x6c>
 8003b8c:	6960      	ldr	r0, [r4, #20]
 8003b8e:	0741      	lsls	r1, r0, #29
 8003b90:	0fc8      	lsrs	r0, r1, #31
 8003b92:	e000      	b.n	8003b96 <PE_StateMachine_VDMCable+0x6e>
 8003b94:	2002      	movs	r0, #2
 8003b96:	2194      	movs	r1, #148	; 0x94
 8003b98:	0089      	lsls	r1, r1, #2
 8003b9a:	1867      	adds	r7, r4, r1
 8003b9c:	9002      	str	r0, [sp, #8]
 8003b9e:	209a      	movs	r0, #154	; 0x9a
 8003ba0:	9001      	str	r0, [sp, #4]
 8003ba2:	2001      	movs	r0, #1
 8003ba4:	9000      	str	r0, [sp, #0]
 8003ba6:	003b      	movs	r3, r7
 8003ba8:	220f      	movs	r2, #15
 8003baa:	2101      	movs	r1, #1
 8003bac:	0020      	movs	r0, r4
 8003bae:	f7fd fcda 	bl	8001566 <PE_Send_DataMessage>
 8003bb2:	2800      	cmp	r0, #0
 8003bb4:	d109      	bne.n	8003bca <PE_StateMachine_VDMCable+0xa2>
 8003bb6:	6960      	ldr	r0, [r4, #20]
 8003bb8:	03e9      	lsls	r1, r5, #15
 8003bba:	4301      	orrs	r1, r0
 8003bbc:	6161      	str	r1, [r4, #20]
 8003bbe:	2051      	movs	r0, #81	; 0x51
 8003bc0:	7720      	strb	r0, [r4, #28]
 8003bc2:	4876      	ldr	r0, [pc, #472]	; (8003d9c <.text_5>)
 8003bc4:	8460      	strh	r0, [r4, #34]	; 0x22
 8003bc6:	251e      	movs	r5, #30
 8003bc8:	e0e1      	b.n	8003d8e <PE_StateMachine_VDMCable+0x266>
 8003bca:	2809      	cmp	r0, #9
 8003bcc:	d0fc      	beq.n	8003bc8 <PE_StateMachine_VDMCable+0xa0>
 8003bce:	7cb8      	ldrb	r0, [r7, #18]
 8003bd0:	2815      	cmp	r0, #21
 8003bd2:	d202      	bcs.n	8003bda <PE_StateMachine_VDMCable+0xb2>
 8003bd4:	4872      	ldr	r0, [pc, #456]	; (8003da0 <.text_6>)
 8003bd6:	8460      	strh	r0, [r4, #34]	; 0x22
 8003bd8:	e00a      	b.n	8003bf0 <PE_StateMachine_VDMCable+0xc8>
 8003bda:	68e0      	ldr	r0, [r4, #12]
 8003bdc:	6940      	ldr	r0, [r0, #20]
 8003bde:	9000      	str	r0, [sp, #0]
 8003be0:	2800      	cmp	r0, #0
 8003be2:	d005      	beq.n	8003bf0 <PE_StateMachine_VDMCable+0xc8>
 8003be4:	2300      	movs	r3, #0
 8003be6:	2205      	movs	r2, #5
 8003be8:	2101      	movs	r1, #1
 8003bea:	7c20      	ldrb	r0, [r4, #16]
 8003bec:	9f00      	ldr	r7, [sp, #0]
 8003bee:	47b8      	blx	r7
 8003bf0:	6860      	ldr	r0, [r4, #4]
 8003bf2:	6800      	ldr	r0, [r0, #0]
 8003bf4:	0a00      	lsrs	r0, r0, #8
 8003bf6:	4030      	ands	r0, r6
 8003bf8:	2803      	cmp	r0, #3
 8003bfa:	d100      	bne.n	8003bfe <PE_StateMachine_VDMCable+0xd6>
 8003bfc:	e0a4      	b.n	8003d48 <PE_StateMachine_VDMCable+0x220>
 8003bfe:	4869      	ldr	r0, [pc, #420]	; (8003da4 <.text_7>)
 8003c00:	8be1      	ldrh	r1, [r4, #30]
 8003c02:	4201      	tst	r1, r0
 8003c04:	d00b      	beq.n	8003c1e <PE_StateMachine_VDMCable+0xf6>
 8003c06:	2108      	movs	r1, #8
 8003c08:	7461      	strb	r1, [r4, #17]
 8003c0a:	8be1      	ldrh	r1, [r4, #30]
 8003c0c:	4001      	ands	r1, r0
 8003c0e:	292d      	cmp	r1, #45	; 0x2d
 8003c10:	d203      	bcs.n	8003c1a <PE_StateMachine_VDMCable+0xf2>
 8003c12:	8be1      	ldrh	r1, [r4, #30]
 8003c14:	0005      	movs	r5, r0
 8003c16:	400d      	ands	r5, r1
 8003c18:	e0b9      	b.n	8003d8e <PE_StateMachine_VDMCable+0x266>
 8003c1a:	252d      	movs	r5, #45	; 0x2d
 8003c1c:	e0b7      	b.n	8003d8e <PE_StateMachine_VDMCable+0x266>
 8003c1e:	7466      	strb	r6, [r4, #17]
 8003c20:	e0b5      	b.n	8003d8e <PE_StateMachine_VDMCable+0x266>
 8003c22:	9101      	str	r1, [sp, #4]
 8003c24:	2001      	movs	r0, #1
 8003c26:	f7fc fecf 	bl	80009c8 <PE_Convert_SOPRxEvent>
 8003c2a:	4669      	mov	r1, sp
 8003c2c:	7008      	strb	r0, [r1, #0]
 8003c2e:	8ea1      	ldrh	r1, [r4, #52]	; 0x34
 8003c30:	2700      	movs	r7, #0
 8003c32:	221f      	movs	r2, #31
 8003c34:	9801      	ldr	r0, [sp, #4]
 8003c36:	7800      	ldrb	r0, [r0, #0]
 8003c38:	466b      	mov	r3, sp
 8003c3a:	781b      	ldrb	r3, [r3, #0]
 8003c3c:	4298      	cmp	r0, r3
 8003c3e:	d14f      	bne.n	8003ce0 <PE_StateMachine_VDMCable+0x1b8>
 8003c40:	0bc8      	lsrs	r0, r1, #15
 8003c42:	d14d      	bne.n	8003ce0 <PE_StateMachine_VDMCable+0x1b8>
 8003c44:	0b08      	lsrs	r0, r1, #12
 8003c46:	4230      	tst	r0, r6
 8003c48:	d04a      	beq.n	8003ce0 <PE_StateMachine_VDMCable+0x1b8>
 8003c4a:	201f      	movs	r0, #31
 8003c4c:	4008      	ands	r0, r1
 8003c4e:	280f      	cmp	r0, #15
 8003c50:	d146      	bne.n	8003ce0 <PE_StateMachine_VDMCable+0x1b8>
 8003c52:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8003c54:	7880      	ldrb	r0, [r0, #2]
 8003c56:	9000      	str	r0, [sp, #0]
 8003c58:	4002      	ands	r2, r0
 8003c5a:	2a01      	cmp	r2, #1
 8003c5c:	d13b      	bne.n	8003cd6 <PE_StateMachine_VDMCable+0x1ae>
 8003c5e:	0980      	lsrs	r0, r0, #6
 8003c60:	d039      	beq.n	8003cd6 <PE_StateMachine_VDMCable+0x1ae>
 8003c62:	0608      	lsls	r0, r1, #24
 8003c64:	0f81      	lsrs	r1, r0, #30
 8003c66:	0020      	movs	r0, r4
 8003c68:	f000 f9ce 	bl	8004008 <PE_ExtRevisionInteroperability_Cable>
 8003c6c:	68e0      	ldr	r0, [r4, #12]
 8003c6e:	6940      	ldr	r0, [r0, #20]
 8003c70:	2800      	cmp	r0, #0
 8003c72:	d023      	beq.n	8003cbc <PE_StateMachine_VDMCable+0x194>
 8003c74:	9800      	ldr	r0, [sp, #0]
 8003c76:	0985      	lsrs	r5, r0, #6
 8003c78:	07a8      	lsls	r0, r5, #30
 8003c7a:	0f80      	lsrs	r0, r0, #30
 8003c7c:	2801      	cmp	r0, #1
 8003c7e:	d11d      	bne.n	8003cbc <PE_StateMachine_VDMCable+0x194>
 8003c80:	aa03      	add	r2, sp, #12
 8003c82:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8003c84:	1d81      	adds	r1, r0, #6
 8003c86:	7c20      	ldrb	r0, [r4, #16]
 8003c88:	f001 fb9a 	bl	80053c0 <PE_SVDM_CheckIdentity>
 8003c8c:	2800      	cmp	r0, #0
 8003c8e:	d111      	bne.n	8003cb4 <PE_StateMachine_VDMCable+0x18c>
 8003c90:	ab03      	add	r3, sp, #12
 8003c92:	07aa      	lsls	r2, r5, #30
 8003c94:	0f92      	lsrs	r2, r2, #30
 8003c96:	2101      	movs	r1, #1
 8003c98:	7c20      	ldrb	r0, [r4, #16]
 8003c9a:	68e5      	ldr	r5, [r4, #12]
 8003c9c:	696d      	ldr	r5, [r5, #20]
 8003c9e:	47a8      	blx	r5
 8003ca0:	2152      	movs	r1, #82	; 0x52
 8003ca2:	7c20      	ldrb	r0, [r4, #16]
 8003ca4:	f7fc fbec 	bl	8000480 <USBPD_PE_Notification>
 8003ca8:	2014      	movs	r0, #20
 8003caa:	2194      	movs	r1, #148	; 0x94
 8003cac:	0089      	lsls	r1, r1, #2
 8003cae:	1861      	adds	r1, r4, r1
 8003cb0:	7488      	strb	r0, [r1, #18]
 8003cb2:	e003      	b.n	8003cbc <PE_StateMachine_VDMCable+0x194>
 8003cb4:	211b      	movs	r1, #27
 8003cb6:	7c20      	ldrb	r0, [r4, #16]
 8003cb8:	f7fc fbe2 	bl	8000480 <USBPD_PE_Notification>
 8003cbc:	8467      	strh	r7, [r4, #34]	; 0x22
 8003cbe:	6860      	ldr	r0, [r4, #4]
 8003cc0:	6800      	ldr	r0, [r0, #0]
 8003cc2:	0a00      	lsrs	r0, r0, #8
 8003cc4:	4030      	ands	r0, r6
 8003cc6:	2803      	cmp	r0, #3
 8003cc8:	d102      	bne.n	8003cd0 <PE_StateMachine_VDMCable+0x1a8>
 8003cca:	7460      	strb	r0, [r4, #17]
 8003ccc:	2500      	movs	r5, #0
 8003cce:	e002      	b.n	8003cd6 <PE_StateMachine_VDMCable+0x1ae>
 8003cd0:	7466      	strb	r6, [r4, #17]
 8003cd2:	2500      	movs	r5, #0
 8003cd4:	7727      	strb	r7, [r4, #28]
 8003cd6:	9801      	ldr	r0, [sp, #4]
 8003cd8:	7800      	ldrb	r0, [r0, #0]
 8003cda:	2814      	cmp	r0, #20
 8003cdc:	d119      	bne.n	8003d12 <PE_StateMachine_VDMCable+0x1ea>
 8003cde:	e056      	b.n	8003d8e <PE_StateMachine_VDMCable+0x266>
 8003ce0:	2003      	movs	r0, #3
 8003ce2:	400a      	ands	r2, r1
 8003ce4:	2a10      	cmp	r2, #16
 8003ce6:	d11b      	bne.n	8003d20 <PE_StateMachine_VDMCable+0x1f8>
 8003ce8:	8467      	strh	r7, [r4, #34]	; 0x22
 8003cea:	6861      	ldr	r1, [r4, #4]
 8003cec:	6809      	ldr	r1, [r1, #0]
 8003cee:	0a09      	lsrs	r1, r1, #8
 8003cf0:	4031      	ands	r1, r6
 8003cf2:	2903      	cmp	r1, #3
 8003cf4:	d102      	bne.n	8003cfc <PE_StateMachine_VDMCable+0x1d4>
 8003cf6:	7460      	strb	r0, [r4, #17]
 8003cf8:	2500      	movs	r5, #0
 8003cfa:	e002      	b.n	8003d02 <PE_StateMachine_VDMCable+0x1da>
 8003cfc:	7466      	strb	r6, [r4, #17]
 8003cfe:	2500      	movs	r5, #0
 8003d00:	7727      	strb	r7, [r4, #28]
 8003d02:	2159      	movs	r1, #89	; 0x59
 8003d04:	7c20      	ldrb	r0, [r4, #16]
 8003d06:	f7fc fbbb 	bl	8000480 <USBPD_PE_Notification>
 8003d0a:	9801      	ldr	r0, [sp, #4]
 8003d0c:	7800      	ldrb	r0, [r0, #0]
 8003d0e:	2814      	cmp	r0, #20
 8003d10:	d03d      	beq.n	8003d8e <PE_StateMachine_VDMCable+0x266>
 8003d12:	2014      	movs	r0, #20
 8003d14:	9901      	ldr	r1, [sp, #4]
 8003d16:	7008      	strb	r0, [r1, #0]
 8003d18:	0020      	movs	r0, r4
 8003d1a:	f7fc fe1c 	bl	8000956 <PE_Clear_RxEvent>
 8003d1e:	e036      	b.n	8003d8e <PE_StateMachine_VDMCable+0x266>
 8003d20:	8c61      	ldrh	r1, [r4, #34]	; 0x22
 8003d22:	03aa      	lsls	r2, r5, #14
 8003d24:	4291      	cmp	r1, r2
 8003d26:	d132      	bne.n	8003d8e <PE_StateMachine_VDMCable+0x266>
 8003d28:	8467      	strh	r7, [r4, #34]	; 0x22
 8003d2a:	6861      	ldr	r1, [r4, #4]
 8003d2c:	680a      	ldr	r2, [r1, #0]
 8003d2e:	0a13      	lsrs	r3, r2, #8
 8003d30:	4033      	ands	r3, r6
 8003d32:	2b03      	cmp	r3, #3
 8003d34:	d10c      	bne.n	8003d50 <PE_StateMachine_VDMCable+0x228>
 8003d36:	68e0      	ldr	r0, [r4, #12]
 8003d38:	6945      	ldr	r5, [r0, #20]
 8003d3a:	2d00      	cmp	r5, #0
 8003d3c:	d004      	beq.n	8003d48 <PE_StateMachine_VDMCable+0x220>
 8003d3e:	2300      	movs	r3, #0
 8003d40:	2204      	movs	r2, #4
 8003d42:	2101      	movs	r1, #1
 8003d44:	7c20      	ldrb	r0, [r4, #16]
 8003d46:	47a8      	blx	r5
 8003d48:	2003      	movs	r0, #3
 8003d4a:	7460      	strb	r0, [r4, #17]
 8003d4c:	2500      	movs	r5, #0
 8003d4e:	e01e      	b.n	8003d8e <PE_StateMachine_VDMCable+0x266>
 8003d50:	0e93      	lsrs	r3, r2, #26
 8003d52:	4018      	ands	r0, r3
 8003d54:	2802      	cmp	r0, #2
 8003d56:	d10e      	bne.n	8003d76 <PE_StateMachine_VDMCable+0x24e>
 8003d58:	48b7      	ldr	r0, [pc, #732]	; (8004038 <.text_10>)
 8003d5a:	4010      	ands	r0, r2
 8003d5c:	066a      	lsls	r2, r5, #25
 8003d5e:	4302      	orrs	r2, r0
 8003d60:	600a      	str	r2, [r1, #0]
 8003d62:	2101      	movs	r1, #1
 8003d64:	7c20      	ldrb	r0, [r4, #16]
 8003d66:	f001 fcea 	bl	800573e <USBPD_PRL_CBL_SetHeaderSpecification>
 8003d6a:	480d      	ldr	r0, [pc, #52]	; (8003da0 <.text_6>)
 8003d6c:	8460      	strh	r0, [r4, #34]	; 0x22
 8003d6e:	252d      	movs	r5, #45	; 0x2d
 8003d70:	2008      	movs	r0, #8
 8003d72:	7460      	strb	r0, [r4, #17]
 8003d74:	e00a      	b.n	8003d8c <PE_StateMachine_VDMCable+0x264>
 8003d76:	68e0      	ldr	r0, [r4, #12]
 8003d78:	6945      	ldr	r5, [r0, #20]
 8003d7a:	2d00      	cmp	r5, #0
 8003d7c:	d004      	beq.n	8003d88 <PE_StateMachine_VDMCable+0x260>
 8003d7e:	2300      	movs	r3, #0
 8003d80:	2204      	movs	r2, #4
 8003d82:	2101      	movs	r1, #1
 8003d84:	7c20      	ldrb	r0, [r4, #16]
 8003d86:	47a8      	blx	r5
 8003d88:	7466      	strb	r6, [r4, #17]
 8003d8a:	2500      	movs	r5, #0
 8003d8c:	7727      	strb	r7, [r4, #28]
 8003d8e:	0028      	movs	r0, r5
 8003d90:	b00d      	add	sp, #52	; 0x34
 8003d92:	bdf0      	pop	{r4, r5, r6, r7, pc}

08003d94 <.text_3>:
 8003d94:	00008001 	.word	0x00008001

08003d98 <.text_4>:
 8003d98:	0000983f 	.word	0x0000983f

08003d9c <.text_5>:
 8003d9c:	0000801e 	.word	0x0000801e

08003da0 <.text_6>:
 8003da0:	0000802d 	.word	0x0000802d

08003da4 <.text_7>:
 8003da4:	00007fff 	.word	0x00007fff

08003da8 <PE_SubStateMachine_VconnSwap>:
 8003da8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003daa:	0004      	movs	r4, r0
 8003dac:	2502      	movs	r5, #2
 8003dae:	2703      	movs	r7, #3
 8003db0:	4ea2      	ldr	r6, [pc, #648]	; (800403c <.text_11>)
 8003db2:	2014      	movs	r0, #20
 8003db4:	7c62      	ldrb	r2, [r4, #17]
 8003db6:	2a9d      	cmp	r2, #157	; 0x9d
 8003db8:	d010      	beq.n	8003ddc <PE_SubStateMachine_VconnSwap+0x34>
 8003dba:	d30e      	bcc.n	8003dda <PE_SubStateMachine_VconnSwap+0x32>
 8003dbc:	2a9f      	cmp	r2, #159	; 0x9f
 8003dbe:	d057      	beq.n	8003e70 <PE_SubStateMachine_VconnSwap+0xc8>
 8003dc0:	d33d      	bcc.n	8003e3e <PE_SubStateMachine_VconnSwap+0x96>
 8003dc2:	2aa1      	cmp	r2, #161	; 0xa1
 8003dc4:	d100      	bne.n	8003dc8 <PE_SubStateMachine_VconnSwap+0x20>
 8003dc6:	e085      	b.n	8003ed4 <PE_SubStateMachine_VconnSwap+0x12c>
 8003dc8:	d377      	bcc.n	8003eba <PE_SubStateMachine_VconnSwap+0x112>
 8003dca:	2aa3      	cmp	r2, #163	; 0xa3
 8003dcc:	d100      	bne.n	8003dd0 <PE_SubStateMachine_VconnSwap+0x28>
 8003dce:	e0a3      	b.n	8003f18 <PE_SubStateMachine_VconnSwap+0x170>
 8003dd0:	d200      	bcs.n	8003dd4 <PE_SubStateMachine_VconnSwap+0x2c>
 8003dd2:	e08e      	b.n	8003ef2 <PE_SubStateMachine_VconnSwap+0x14a>
 8003dd4:	2aa4      	cmp	r2, #164	; 0xa4
 8003dd6:	d100      	bne.n	8003dda <PE_SubStateMachine_VconnSwap+0x32>
 8003dd8:	e106      	b.n	8003fe8 <PE_SubStateMachine_VconnSwap+0x240>
 8003dda:	e113      	b.n	8004004 <PE_SubStateMachine_VconnSwap+0x25c>
 8003ddc:	6860      	ldr	r0, [r4, #4]
 8003dde:	6800      	ldr	r0, [r0, #0]
 8003de0:	21b8      	movs	r1, #184	; 0xb8
 8003de2:	0149      	lsls	r1, r1, #5
 8003de4:	4001      	ands	r1, r0
 8003de6:	2098      	movs	r0, #152	; 0x98
 8003de8:	0140      	lsls	r0, r0, #5
 8003dea:	4281      	cmp	r1, r0
 8003dec:	d121      	bne.n	8003e32 <PE_SubStateMachine_VconnSwap+0x8a>
 8003dee:	7c20      	ldrb	r0, [r4, #16]
 8003df0:	68a1      	ldr	r1, [r4, #8]
 8003df2:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
 8003df4:	4788      	blx	r1
 8003df6:	280a      	cmp	r0, #10
 8003df8:	d002      	beq.n	8003e00 <PE_SubStateMachine_VconnSwap+0x58>
 8003dfa:	280d      	cmp	r0, #13
 8003dfc:	d007      	beq.n	8003e0e <PE_SubStateMachine_VconnSwap+0x66>
 8003dfe:	e00f      	b.n	8003e20 <PE_SubStateMachine_VconnSwap+0x78>
 8003e00:	209e      	movs	r0, #158	; 0x9e
 8003e02:	7460      	strb	r0, [r4, #17]
 8003e04:	6960      	ldr	r0, [r4, #20]
 8003e06:	02e9      	lsls	r1, r5, #11
 8003e08:	4301      	orrs	r1, r0
 8003e0a:	6161      	str	r1, [r4, #20]
 8003e0c:	e0fa      	b.n	8004004 <PE_SubStateMachine_VconnSwap+0x25c>
 8003e0e:	2000      	movs	r0, #0
 8003e10:	9000      	str	r0, [sp, #0]
 8003e12:	2303      	movs	r3, #3
 8003e14:	220c      	movs	r2, #12
 8003e16:	2100      	movs	r1, #0
 8003e18:	0020      	movs	r0, r4
 8003e1a:	f7fd fb79 	bl	8001510 <PE_Send_CtrlMessage>
 8003e1e:	e0f1      	b.n	8004004 <PE_SubStateMachine_VconnSwap+0x25c>
 8003e20:	2000      	movs	r0, #0
 8003e22:	9000      	str	r0, [sp, #0]
 8003e24:	2303      	movs	r3, #3
 8003e26:	2204      	movs	r2, #4
 8003e28:	2100      	movs	r1, #0
 8003e2a:	0020      	movs	r0, r4
 8003e2c:	f7fd fb70 	bl	8001510 <PE_Send_CtrlMessage>
 8003e30:	e002      	b.n	8003e38 <PE_SubStateMachine_VconnSwap+0x90>
 8003e32:	6960      	ldr	r0, [r4, #20]
 8003e34:	4006      	ands	r6, r0
 8003e36:	6166      	str	r6, [r4, #20]
 8003e38:	7467      	strb	r7, [r4, #17]
 8003e3a:	2500      	movs	r5, #0
 8003e3c:	e0e2      	b.n	8004004 <PE_SubStateMachine_VconnSwap+0x25c>
 8003e3e:	2000      	movs	r0, #0
 8003e40:	9000      	str	r0, [sp, #0]
 8003e42:	239e      	movs	r3, #158	; 0x9e
 8003e44:	2203      	movs	r2, #3
 8003e46:	2100      	movs	r1, #0
 8003e48:	0020      	movs	r0, r4
 8003e4a:	f7fd fb61 	bl	8001510 <PE_Send_CtrlMessage>
 8003e4e:	2800      	cmp	r0, #0
 8003e50:	d1f4      	bne.n	8003e3c <PE_SubStateMachine_VconnSwap+0x94>
 8003e52:	6860      	ldr	r0, [r4, #4]
 8003e54:	6800      	ldr	r0, [r0, #0]
 8003e56:	0401      	lsls	r1, r0, #16
 8003e58:	0fc9      	lsrs	r1, r1, #31
 8003e5a:	d005      	beq.n	8003e68 <PE_SubStateMachine_VconnSwap+0xc0>
 8003e5c:	209f      	movs	r0, #159	; 0x9f
 8003e5e:	7460      	strb	r0, [r4, #17]
 8003e60:	4877      	ldr	r0, [pc, #476]	; (8004040 <.text_12>)
 8003e62:	83e0      	strh	r0, [r4, #30]
 8003e64:	2596      	movs	r5, #150	; 0x96
 8003e66:	e001      	b.n	8003e6c <PE_SubStateMachine_VconnSwap+0xc4>
 8003e68:	20a0      	movs	r0, #160	; 0xa0
 8003e6a:	7460      	strb	r0, [r4, #17]
 8003e6c:	213f      	movs	r1, #63	; 0x3f
 8003e6e:	e0b7      	b.n	8003fe0 <PE_SubStateMachine_VconnSwap+0x238>
 8003e70:	8be2      	ldrh	r2, [r4, #30]
 8003e72:	03ab      	lsls	r3, r5, #14
 8003e74:	429a      	cmp	r2, r3
 8003e76:	d100      	bne.n	8003e7a <PE_SubStateMachine_VconnSwap+0xd2>
 8003e78:	e0ac      	b.n	8003fd4 <PE_SubStateMachine_VconnSwap+0x22c>
 8003e7a:	780a      	ldrb	r2, [r1, #0]
 8003e7c:	2a11      	cmp	r2, #17
 8003e7e:	d11b      	bne.n	8003eb8 <PE_SubStateMachine_VconnSwap+0x110>
 8003e80:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8003e82:	4b70      	ldr	r3, [pc, #448]	; (8004044 <.text_13>)
 8003e84:	4013      	ands	r3, r2
 8003e86:	2b06      	cmp	r3, #6
 8003e88:	d116      	bne.n	8003eb8 <PE_SubStateMachine_VconnSwap+0x110>
 8003e8a:	7008      	strb	r0, [r1, #0]
 8003e8c:	0020      	movs	r0, r4
 8003e8e:	f7fc fd62 	bl	8000956 <PE_Clear_RxEvent>
 8003e92:	68a0      	ldr	r0, [r4, #8]
 8003e94:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8003e96:	2a00      	cmp	r2, #0
 8003e98:	d002      	beq.n	8003ea0 <PE_SubStateMachine_VconnSwap+0xf8>
 8003e9a:	2100      	movs	r1, #0
 8003e9c:	7c20      	ldrb	r0, [r4, #16]
 8003e9e:	4790      	blx	r2
 8003ea0:	6960      	ldr	r0, [r4, #20]
 8003ea2:	4006      	ands	r6, r0
 8003ea4:	6166      	str	r6, [r4, #20]
 8003ea6:	7467      	strb	r7, [r4, #17]
 8003ea8:	2500      	movs	r5, #0
 8003eaa:	2142      	movs	r1, #66	; 0x42
 8003eac:	7c20      	ldrb	r0, [r4, #16]
 8003eae:	f7fc fae7 	bl	8000480 <USBPD_PE_Notification>
 8003eb2:	8465      	strh	r5, [r4, #34]	; 0x22
 8003eb4:	4964      	ldr	r1, [pc, #400]	; (8004048 <.text_14>)
 8003eb6:	5465      	strb	r5, [r4, r1]
 8003eb8:	e0a4      	b.n	8004004 <PE_SubStateMachine_VconnSwap+0x25c>
 8003eba:	68a0      	ldr	r0, [r4, #8]
 8003ebc:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8003ebe:	2a00      	cmp	r2, #0
 8003ec0:	d002      	beq.n	8003ec8 <PE_SubStateMachine_VconnSwap+0x120>
 8003ec2:	2101      	movs	r1, #1
 8003ec4:	7c20      	ldrb	r0, [r4, #16]
 8003ec6:	4790      	blx	r2
 8003ec8:	20a1      	movs	r0, #161	; 0xa1
 8003eca:	7460      	strb	r0, [r4, #17]
 8003ecc:	2000      	movs	r0, #0
 8003ece:	495e      	ldr	r1, [pc, #376]	; (8004048 <.text_14>)
 8003ed0:	5460      	strb	r0, [r4, r1]
 8003ed2:	e097      	b.n	8004004 <PE_SubStateMachine_VconnSwap+0x25c>
 8003ed4:	2000      	movs	r0, #0
 8003ed6:	9000      	str	r0, [sp, #0]
 8003ed8:	2303      	movs	r3, #3
 8003eda:	2206      	movs	r2, #6
 8003edc:	2100      	movs	r1, #0
 8003ede:	0020      	movs	r0, r4
 8003ee0:	f7fd fb16 	bl	8001510 <PE_Send_CtrlMessage>
 8003ee4:	2800      	cmp	r0, #0
 8003ee6:	d1f4      	bne.n	8003ed2 <PE_SubStateMachine_VconnSwap+0x12a>
 8003ee8:	6960      	ldr	r0, [r4, #20]
 8003eea:	4006      	ands	r6, r0
 8003eec:	6166      	str	r6, [r4, #20]
 8003eee:	2142      	movs	r1, #66	; 0x42
 8003ef0:	e076      	b.n	8003fe0 <PE_SubStateMachine_VconnSwap+0x238>
 8003ef2:	2000      	movs	r0, #0
 8003ef4:	9000      	str	r0, [sp, #0]
 8003ef6:	23a3      	movs	r3, #163	; 0xa3
 8003ef8:	220b      	movs	r2, #11
 8003efa:	2100      	movs	r1, #0
 8003efc:	0020      	movs	r0, r4
 8003efe:	f7fd fb07 	bl	8001510 <PE_Send_CtrlMessage>
 8003f02:	2800      	cmp	r0, #0
 8003f04:	d1e5      	bne.n	8003ed2 <PE_SubStateMachine_VconnSwap+0x12a>
 8003f06:	6960      	ldr	r0, [r4, #20]
 8003f08:	02e9      	lsls	r1, r5, #11
 8003f0a:	4301      	orrs	r1, r0
 8003f0c:	6161      	str	r1, [r4, #20]
 8003f0e:	484f      	ldr	r0, [pc, #316]	; (800404c <.text_15>)
 8003f10:	83e0      	strh	r0, [r4, #30]
 8003f12:	251b      	movs	r5, #27
 8003f14:	213e      	movs	r1, #62	; 0x3e
 8003f16:	e063      	b.n	8003fe0 <PE_SubStateMachine_VconnSwap+0x238>
 8003f18:	780a      	ldrb	r2, [r1, #0]
 8003f1a:	2a11      	cmp	r2, #17
 8003f1c:	d155      	bne.n	8003fca <PE_SubStateMachine_VconnSwap+0x222>
 8003f1e:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8003f20:	23f0      	movs	r3, #240	; 0xf0
 8003f22:	021b      	lsls	r3, r3, #8
 8003f24:	4013      	ands	r3, r2
 8003f26:	d150      	bne.n	8003fca <PE_SubStateMachine_VconnSwap+0x222>
 8003f28:	06d2      	lsls	r2, r2, #27
 8003f2a:	0ed2      	lsrs	r2, r2, #27
 8003f2c:	2a03      	cmp	r2, #3
 8003f2e:	d006      	beq.n	8003f3e <PE_SubStateMachine_VconnSwap+0x196>
 8003f30:	2a04      	cmp	r2, #4
 8003f32:	d024      	beq.n	8003f7e <PE_SubStateMachine_VconnSwap+0x1d6>
 8003f34:	2a0c      	cmp	r2, #12
 8003f36:	d014      	beq.n	8003f62 <PE_SubStateMachine_VconnSwap+0x1ba>
 8003f38:	2a10      	cmp	r2, #16
 8003f3a:	d02e      	beq.n	8003f9a <PE_SubStateMachine_VconnSwap+0x1f2>
 8003f3c:	e045      	b.n	8003fca <PE_SubStateMachine_VconnSwap+0x222>
 8003f3e:	6862      	ldr	r2, [r4, #4]
 8003f40:	6812      	ldr	r2, [r2, #0]
 8003f42:	0413      	lsls	r3, r2, #16
 8003f44:	0fdb      	lsrs	r3, r3, #31
 8003f46:	d001      	beq.n	8003f4c <PE_SubStateMachine_VconnSwap+0x1a4>
 8003f48:	229f      	movs	r2, #159	; 0x9f
 8003f4a:	e000      	b.n	8003f4e <PE_SubStateMachine_VconnSwap+0x1a6>
 8003f4c:	22a0      	movs	r2, #160	; 0xa0
 8003f4e:	7462      	strb	r2, [r4, #17]
 8003f50:	780a      	ldrb	r2, [r1, #0]
 8003f52:	2a14      	cmp	r2, #20
 8003f54:	d003      	beq.n	8003f5e <PE_SubStateMachine_VconnSwap+0x1b6>
 8003f56:	7008      	strb	r0, [r1, #0]
 8003f58:	0020      	movs	r0, r4
 8003f5a:	f7fc fcfc 	bl	8000956 <PE_Clear_RxEvent>
 8003f5e:	213f      	movs	r1, #63	; 0x3f
 8003f60:	e030      	b.n	8003fc4 <PE_SubStateMachine_VconnSwap+0x21c>
 8003f62:	6962      	ldr	r2, [r4, #20]
 8003f64:	4032      	ands	r2, r6
 8003f66:	6162      	str	r2, [r4, #20]
 8003f68:	7467      	strb	r7, [r4, #17]
 8003f6a:	2500      	movs	r5, #0
 8003f6c:	780a      	ldrb	r2, [r1, #0]
 8003f6e:	2a14      	cmp	r2, #20
 8003f70:	d003      	beq.n	8003f7a <PE_SubStateMachine_VconnSwap+0x1d2>
 8003f72:	7008      	strb	r0, [r1, #0]
 8003f74:	0020      	movs	r0, r4
 8003f76:	f7fc fcee 	bl	8000956 <PE_Clear_RxEvent>
 8003f7a:	2140      	movs	r1, #64	; 0x40
 8003f7c:	e022      	b.n	8003fc4 <PE_SubStateMachine_VconnSwap+0x21c>
 8003f7e:	6962      	ldr	r2, [r4, #20]
 8003f80:	4032      	ands	r2, r6
 8003f82:	6162      	str	r2, [r4, #20]
 8003f84:	7467      	strb	r7, [r4, #17]
 8003f86:	2500      	movs	r5, #0
 8003f88:	780a      	ldrb	r2, [r1, #0]
 8003f8a:	2a14      	cmp	r2, #20
 8003f8c:	d003      	beq.n	8003f96 <PE_SubStateMachine_VconnSwap+0x1ee>
 8003f8e:	7008      	strb	r0, [r1, #0]
 8003f90:	0020      	movs	r0, r4
 8003f92:	f7fc fce0 	bl	8000956 <PE_Clear_RxEvent>
 8003f96:	2141      	movs	r1, #65	; 0x41
 8003f98:	e014      	b.n	8003fc4 <PE_SubStateMachine_VconnSwap+0x21c>
 8003f9a:	6862      	ldr	r2, [r4, #4]
 8003f9c:	6812      	ldr	r2, [r2, #0]
 8003f9e:	0413      	lsls	r3, r2, #16
 8003fa0:	0fdb      	lsrs	r3, r3, #31
 8003fa2:	d102      	bne.n	8003faa <PE_SubStateMachine_VconnSwap+0x202>
 8003fa4:	22a4      	movs	r2, #164	; 0xa4
 8003fa6:	7462      	strb	r2, [r4, #17]
 8003fa8:	e004      	b.n	8003fb4 <PE_SubStateMachine_VconnSwap+0x20c>
 8003faa:	6962      	ldr	r2, [r4, #20]
 8003fac:	4032      	ands	r2, r6
 8003fae:	6162      	str	r2, [r4, #20]
 8003fb0:	7467      	strb	r7, [r4, #17]
 8003fb2:	2500      	movs	r5, #0
 8003fb4:	780a      	ldrb	r2, [r1, #0]
 8003fb6:	2a14      	cmp	r2, #20
 8003fb8:	d003      	beq.n	8003fc2 <PE_SubStateMachine_VconnSwap+0x21a>
 8003fba:	7008      	strb	r0, [r1, #0]
 8003fbc:	0020      	movs	r0, r4
 8003fbe:	f7fc fcca 	bl	8000956 <PE_Clear_RxEvent>
 8003fc2:	2143      	movs	r1, #67	; 0x43
 8003fc4:	7c20      	ldrb	r0, [r4, #16]
 8003fc6:	f7fc fa5b 	bl	8000480 <USBPD_PE_Notification>
 8003fca:	8be0      	ldrh	r0, [r4, #30]
 8003fcc:	2180      	movs	r1, #128	; 0x80
 8003fce:	0209      	lsls	r1, r1, #8
 8003fd0:	4288      	cmp	r0, r1
 8003fd2:	d117      	bne.n	8004004 <PE_SubStateMachine_VconnSwap+0x25c>
 8003fd4:	6960      	ldr	r0, [r4, #20]
 8003fd6:	4006      	ands	r6, r0
 8003fd8:	6166      	str	r6, [r4, #20]
 8003fda:	7467      	strb	r7, [r4, #17]
 8003fdc:	2500      	movs	r5, #0
 8003fde:	211c      	movs	r1, #28
 8003fe0:	7c20      	ldrb	r0, [r4, #16]
 8003fe2:	f7fc fa4d 	bl	8000480 <USBPD_PE_Notification>
 8003fe6:	e00d      	b.n	8004004 <PE_SubStateMachine_VconnSwap+0x25c>
 8003fe8:	68a0      	ldr	r0, [r4, #8]
 8003fea:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8003fec:	2a00      	cmp	r2, #0
 8003fee:	d002      	beq.n	8003ff6 <PE_SubStateMachine_VconnSwap+0x24e>
 8003ff0:	2101      	movs	r1, #1
 8003ff2:	7c20      	ldrb	r0, [r4, #16]
 8003ff4:	4790      	blx	r2
 8003ff6:	6960      	ldr	r0, [r4, #20]
 8003ff8:	4006      	ands	r6, r0
 8003ffa:	6166      	str	r6, [r4, #20]
 8003ffc:	7467      	strb	r7, [r4, #17]
 8003ffe:	2500      	movs	r5, #0
 8004000:	4813      	ldr	r0, [pc, #76]	; (8004050 <.text_16>)
 8004002:	8460      	strh	r0, [r4, #34]	; 0x22
 8004004:	0028      	movs	r0, r5
 8004006:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

08004008 <PE_ExtRevisionInteroperability_Cable>:
 8004008:	b538      	push	{r3, r4, r5, lr}
 800400a:	000a      	movs	r2, r1
 800400c:	6843      	ldr	r3, [r0, #4]
 800400e:	681c      	ldr	r4, [r3, #0]
 8004010:	2103      	movs	r1, #3
 8004012:	2503      	movs	r5, #3
 8004014:	4025      	ands	r5, r4
 8004016:	42aa      	cmp	r2, r5
 8004018:	d300      	bcc.n	800401c <PE_ExtRevisionInteroperability_Cable+0x14>
 800401a:	002a      	movs	r2, r5
 800401c:	4d06      	ldr	r5, [pc, #24]	; (8004038 <.text_10>)
 800401e:	4025      	ands	r5, r4
 8004020:	0694      	lsls	r4, r2, #26
 8004022:	068a      	lsls	r2, r1, #26
 8004024:	4022      	ands	r2, r4
 8004026:	432a      	orrs	r2, r5
 8004028:	601a      	str	r2, [r3, #0]
 800402a:	0e92      	lsrs	r2, r2, #26
 800402c:	4011      	ands	r1, r2
 800402e:	7c00      	ldrb	r0, [r0, #16]
 8004030:	f001 fb85 	bl	800573e <USBPD_PRL_CBL_SetHeaderSpecification>
 8004034:	bd31      	pop	{r0, r4, r5, pc}
	...

08004038 <.text_10>:
 8004038:	f3ffffff 	.word	0xf3ffffff

0800403c <.text_11>:
 800403c:	ffffefff 	.word	0xffffefff

08004040 <.text_12>:
 8004040:	00008096 	.word	0x00008096

08004044 <.text_13>:
 8004044:	0000f01f 	.word	0x0000f01f

08004048 <.text_14>:
 8004048:	00000262 	.word	0x00000262

0800404c <.text_15>:
 800404c:	0000801b 	.word	0x0000801b

08004050 <.text_16>:
 8004050:	0000802d 	.word	0x0000802d

08004054 <USBPD_PE_SVDM_RequestIdentity>:
 8004054:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004056:	000a      	movs	r2, r1
 8004058:	49aa      	ldr	r1, [pc, #680]	; (8004304 <.text_8>)
 800405a:	0083      	lsls	r3, r0, #2
 800405c:	58cb      	ldr	r3, [r1, r3]
 800405e:	2110      	movs	r1, #16
 8004060:	2401      	movs	r4, #1
 8004062:	681d      	ldr	r5, [r3, #0]
 8004064:	686d      	ldr	r5, [r5, #4]
 8004066:	0a6d      	lsrs	r5, r5, #9
 8004068:	4025      	ands	r5, r4
 800406a:	d004      	beq.n	8004076 <USBPD_PE_SVDM_RequestIdentity+0x22>
 800406c:	68dd      	ldr	r5, [r3, #12]
 800406e:	2d00      	cmp	r5, #0
 8004070:	d001      	beq.n	8004076 <USBPD_PE_SVDM_RequestIdentity+0x22>
 8004072:	2a02      	cmp	r2, #2
 8004074:	d101      	bne.n	800407a <USBPD_PE_SVDM_RequestIdentity+0x26>
 8004076:	2102      	movs	r1, #2
 8004078:	e02d      	b.n	80040d6 <USBPD_PE_SVDM_RequestIdentity+0x82>
 800407a:	2532      	movs	r5, #50	; 0x32
 800407c:	5d5d      	ldrb	r5, [r3, r5]
 800407e:	2d00      	cmp	r5, #0
 8004080:	d104      	bne.n	800408c <USBPD_PE_SVDM_RequestIdentity+0x38>
 8004082:	685d      	ldr	r5, [r3, #4]
 8004084:	682d      	ldr	r5, [r5, #0]
 8004086:	0b2d      	lsrs	r5, r5, #12
 8004088:	402c      	ands	r4, r5
 800408a:	d101      	bne.n	8004090 <USBPD_PE_SVDM_RequestIdentity+0x3c>
 800408c:	2103      	movs	r1, #3
 800408e:	e022      	b.n	80040d6 <USBPD_PE_SVDM_RequestIdentity+0x82>
 8004090:	2433      	movs	r4, #51	; 0x33
 8004092:	551a      	strb	r2, [r3, r4]
 8004094:	2507      	movs	r5, #7
 8004096:	2a00      	cmp	r2, #0
 8004098:	d002      	beq.n	80040a0 <USBPD_PE_SVDM_RequestIdentity+0x4c>
 800409a:	2a01      	cmp	r2, #1
 800409c:	d008      	beq.n	80040b0 <USBPD_PE_SVDM_RequestIdentity+0x5c>
 800409e:	e01a      	b.n	80040d6 <USBPD_PE_SVDM_RequestIdentity+0x82>
 80040a0:	685a      	ldr	r2, [r3, #4]
 80040a2:	6812      	ldr	r2, [r2, #0]
 80040a4:	0a12      	lsrs	r2, r2, #8
 80040a6:	4015      	ands	r5, r2
 80040a8:	2d03      	cmp	r5, #3
 80040aa:	d114      	bne.n	80040d6 <USBPD_PE_SVDM_RequestIdentity+0x82>
 80040ac:	217d      	movs	r1, #125	; 0x7d
 80040ae:	e00c      	b.n	80040ca <USBPD_PE_SVDM_RequestIdentity+0x76>
 80040b0:	685a      	ldr	r2, [r3, #4]
 80040b2:	6812      	ldr	r2, [r2, #0]
 80040b4:	4eab      	ldr	r6, [pc, #684]	; (8004364 <.text_10>)
 80040b6:	4016      	ands	r6, r2
 80040b8:	2782      	movs	r7, #130	; 0x82
 80040ba:	007f      	lsls	r7, r7, #1
 80040bc:	42be      	cmp	r6, r7
 80040be:	d003      	beq.n	80040c8 <USBPD_PE_SVDM_RequestIdentity+0x74>
 80040c0:	0a12      	lsrs	r2, r2, #8
 80040c2:	4015      	ands	r5, r2
 80040c4:	2d03      	cmp	r5, #3
 80040c6:	d106      	bne.n	80040d6 <USBPD_PE_SVDM_RequestIdentity+0x82>
 80040c8:	2105      	movs	r1, #5
 80040ca:	2232      	movs	r2, #50	; 0x32
 80040cc:	5499      	strb	r1, [r3, r2]
 80040ce:	6899      	ldr	r1, [r3, #8]
 80040d0:	6a89      	ldr	r1, [r1, #40]	; 0x28
 80040d2:	4788      	blx	r1
 80040d4:	2100      	movs	r1, #0
 80040d6:	0008      	movs	r0, r1
 80040d8:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

080040da <USBPD_PE_SVDM_RequestSVID>:
 80040da:	b570      	push	{r4, r5, r6, lr}
 80040dc:	000a      	movs	r2, r1
 80040de:	4989      	ldr	r1, [pc, #548]	; (8004304 <.text_8>)
 80040e0:	0083      	lsls	r3, r0, #2
 80040e2:	58cb      	ldr	r3, [r1, r3]
 80040e4:	2110      	movs	r1, #16
 80040e6:	68dc      	ldr	r4, [r3, #12]
 80040e8:	2c00      	cmp	r4, #0
 80040ea:	d001      	beq.n	80040f0 <USBPD_PE_SVDM_RequestSVID+0x16>
 80040ec:	2a02      	cmp	r2, #2
 80040ee:	d101      	bne.n	80040f4 <USBPD_PE_SVDM_RequestSVID+0x1a>
 80040f0:	2102      	movs	r1, #2
 80040f2:	e020      	b.n	8004136 <USBPD_PE_SVDM_RequestSVID+0x5c>
 80040f4:	2432      	movs	r4, #50	; 0x32
 80040f6:	5d1c      	ldrb	r4, [r3, r4]
 80040f8:	2c00      	cmp	r4, #0
 80040fa:	d105      	bne.n	8004108 <USBPD_PE_SVDM_RequestSVID+0x2e>
 80040fc:	685c      	ldr	r4, [r3, #4]
 80040fe:	6825      	ldr	r5, [r4, #0]
 8004100:	2401      	movs	r4, #1
 8004102:	0b2e      	lsrs	r6, r5, #12
 8004104:	4026      	ands	r6, r4
 8004106:	d101      	bne.n	800410c <USBPD_PE_SVDM_RequestSVID+0x32>
 8004108:	2103      	movs	r1, #3
 800410a:	e014      	b.n	8004136 <USBPD_PE_SVDM_RequestSVID+0x5c>
 800410c:	056d      	lsls	r5, r5, #21
 800410e:	0f6d      	lsrs	r5, r5, #29
 8004110:	2d03      	cmp	r5, #3
 8004112:	d110      	bne.n	8004136 <USBPD_PE_SVDM_RequestSVID+0x5c>
 8004114:	2533      	movs	r5, #51	; 0x33
 8004116:	555a      	strb	r2, [r3, r5]
 8004118:	257f      	movs	r5, #127	; 0x7f
 800411a:	2632      	movs	r6, #50	; 0x32
 800411c:	559d      	strb	r5, [r3, r6]
 800411e:	2a00      	cmp	r2, #0
 8004120:	d005      	beq.n	800412e <USBPD_PE_SVDM_RequestSVID+0x54>
 8004122:	2a01      	cmp	r2, #1
 8004124:	d107      	bne.n	8004136 <USBPD_PE_SVDM_RequestSVID+0x5c>
 8004126:	695a      	ldr	r2, [r3, #20]
 8004128:	0c12      	lsrs	r2, r2, #16
 800412a:	4014      	ands	r4, r2
 800412c:	d003      	beq.n	8004136 <USBPD_PE_SVDM_RequestSVID+0x5c>
 800412e:	6899      	ldr	r1, [r3, #8]
 8004130:	6a89      	ldr	r1, [r1, #40]	; 0x28
 8004132:	4788      	blx	r1
 8004134:	2100      	movs	r1, #0
 8004136:	0008      	movs	r0, r1
 8004138:	bd70      	pop	{r4, r5, r6, pc}

0800413a <USBPD_PE_SVDM_RequestMode>:
 800413a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800413c:	000b      	movs	r3, r1
 800413e:	4971      	ldr	r1, [pc, #452]	; (8004304 <.text_8>)
 8004140:	0084      	lsls	r4, r0, #2
 8004142:	590c      	ldr	r4, [r1, r4]
 8004144:	2110      	movs	r1, #16
 8004146:	68e5      	ldr	r5, [r4, #12]
 8004148:	2d00      	cmp	r5, #0
 800414a:	d001      	beq.n	8004150 <USBPD_PE_SVDM_RequestMode+0x16>
 800414c:	2b02      	cmp	r3, #2
 800414e:	d101      	bne.n	8004154 <USBPD_PE_SVDM_RequestMode+0x1a>
 8004150:	2102      	movs	r1, #2
 8004152:	e023      	b.n	800419c <USBPD_PE_SVDM_RequestMode+0x62>
 8004154:	2532      	movs	r5, #50	; 0x32
 8004156:	5d65      	ldrb	r5, [r4, r5]
 8004158:	2d00      	cmp	r5, #0
 800415a:	d105      	bne.n	8004168 <USBPD_PE_SVDM_RequestMode+0x2e>
 800415c:	6865      	ldr	r5, [r4, #4]
 800415e:	682e      	ldr	r6, [r5, #0]
 8004160:	2501      	movs	r5, #1
 8004162:	0b37      	lsrs	r7, r6, #12
 8004164:	402f      	ands	r7, r5
 8004166:	d101      	bne.n	800416c <USBPD_PE_SVDM_RequestMode+0x32>
 8004168:	2103      	movs	r1, #3
 800416a:	e017      	b.n	800419c <USBPD_PE_SVDM_RequestMode+0x62>
 800416c:	0576      	lsls	r6, r6, #21
 800416e:	0f76      	lsrs	r6, r6, #29
 8004170:	2e03      	cmp	r6, #3
 8004172:	d113      	bne.n	800419c <USBPD_PE_SVDM_RequestMode+0x62>
 8004174:	2633      	movs	r6, #51	; 0x33
 8004176:	55a3      	strb	r3, [r4, r6]
 8004178:	2681      	movs	r6, #129	; 0x81
 800417a:	2732      	movs	r7, #50	; 0x32
 800417c:	55e6      	strb	r6, [r4, r7]
 800417e:	2696      	movs	r6, #150	; 0x96
 8004180:	00b6      	lsls	r6, r6, #2
 8004182:	53a2      	strh	r2, [r4, r6]
 8004184:	2b00      	cmp	r3, #0
 8004186:	d005      	beq.n	8004194 <USBPD_PE_SVDM_RequestMode+0x5a>
 8004188:	2b01      	cmp	r3, #1
 800418a:	d107      	bne.n	800419c <USBPD_PE_SVDM_RequestMode+0x62>
 800418c:	6962      	ldr	r2, [r4, #20]
 800418e:	0c12      	lsrs	r2, r2, #16
 8004190:	4015      	ands	r5, r2
 8004192:	d003      	beq.n	800419c <USBPD_PE_SVDM_RequestMode+0x62>
 8004194:	68a1      	ldr	r1, [r4, #8]
 8004196:	6a89      	ldr	r1, [r1, #40]	; 0x28
 8004198:	4788      	blx	r1
 800419a:	2100      	movs	r1, #0
 800419c:	0008      	movs	r0, r1
 800419e:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

080041a0 <USBPD_PE_SVDM_RequestModeEnter>:
 80041a0:	b5f1      	push	{r0, r4, r5, r6, r7, lr}
 80041a2:	4858      	ldr	r0, [pc, #352]	; (8004304 <.text_8>)
 80041a4:	466c      	mov	r4, sp
 80041a6:	7824      	ldrb	r4, [r4, #0]
 80041a8:	00a4      	lsls	r4, r4, #2
 80041aa:	5904      	ldr	r4, [r0, r4]
 80041ac:	2010      	movs	r0, #16
 80041ae:	68e5      	ldr	r5, [r4, #12]
 80041b0:	2d00      	cmp	r5, #0
 80041b2:	d101      	bne.n	80041b8 <USBPD_PE_SVDM_RequestModeEnter+0x18>
 80041b4:	2002      	movs	r0, #2
 80041b6:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}
 80041b8:	2532      	movs	r5, #50	; 0x32
 80041ba:	5d65      	ldrb	r5, [r4, r5]
 80041bc:	2d00      	cmp	r5, #0
 80041be:	d105      	bne.n	80041cc <USBPD_PE_SVDM_RequestModeEnter+0x2c>
 80041c0:	6865      	ldr	r5, [r4, #4]
 80041c2:	682e      	ldr	r6, [r5, #0]
 80041c4:	2501      	movs	r5, #1
 80041c6:	0b37      	lsrs	r7, r6, #12
 80041c8:	402f      	ands	r7, r5
 80041ca:	d101      	bne.n	80041d0 <USBPD_PE_SVDM_RequestModeEnter+0x30>
 80041cc:	2003      	movs	r0, #3
 80041ce:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}
 80041d0:	27e1      	movs	r7, #225	; 0xe1
 80041d2:	00ff      	lsls	r7, r7, #3
 80041d4:	4037      	ands	r7, r6
 80041d6:	26c2      	movs	r6, #194	; 0xc2
 80041d8:	00b6      	lsls	r6, r6, #2
 80041da:	42b7      	cmp	r7, r6
 80041dc:	d11e      	bne.n	800421c <USBPD_PE_SVDM_RequestModeEnter+0x7c>
 80041de:	2633      	movs	r6, #51	; 0x33
 80041e0:	55a1      	strb	r1, [r4, r6]
 80041e2:	2682      	movs	r6, #130	; 0x82
 80041e4:	2732      	movs	r7, #50	; 0x32
 80041e6:	55e6      	strb	r6, [r4, r7]
 80041e8:	2696      	movs	r6, #150	; 0x96
 80041ea:	00b6      	lsls	r6, r6, #2
 80041ec:	53a2      	strh	r2, [r4, r6]
 80041ee:	6966      	ldr	r6, [r4, #20]
 80041f0:	4aaf      	ldr	r2, [pc, #700]	; (80044b0 <.text_13>)
 80041f2:	4032      	ands	r2, r6
 80041f4:	019e      	lsls	r6, r3, #6
 80041f6:	23e0      	movs	r3, #224	; 0xe0
 80041f8:	005b      	lsls	r3, r3, #1
 80041fa:	4033      	ands	r3, r6
 80041fc:	4313      	orrs	r3, r2
 80041fe:	6163      	str	r3, [r4, #20]
 8004200:	2900      	cmp	r1, #0
 8004202:	d005      	beq.n	8004210 <USBPD_PE_SVDM_RequestModeEnter+0x70>
 8004204:	2902      	cmp	r1, #2
 8004206:	d000      	beq.n	800420a <USBPD_PE_SVDM_RequestModeEnter+0x6a>
 8004208:	d208      	bcs.n	800421c <USBPD_PE_SVDM_RequestModeEnter+0x7c>
 800420a:	0c19      	lsrs	r1, r3, #16
 800420c:	400d      	ands	r5, r1
 800420e:	d005      	beq.n	800421c <USBPD_PE_SVDM_RequestModeEnter+0x7c>
 8004210:	4668      	mov	r0, sp
 8004212:	7800      	ldrb	r0, [r0, #0]
 8004214:	68a1      	ldr	r1, [r4, #8]
 8004216:	6a89      	ldr	r1, [r1, #40]	; 0x28
 8004218:	4788      	blx	r1
 800421a:	2000      	movs	r0, #0
 800421c:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

0800421e <USBPD_PE_SVDM_RequestModeExit>:
 800421e:	b5f1      	push	{r0, r4, r5, r6, r7, lr}
 8004220:	4838      	ldr	r0, [pc, #224]	; (8004304 <.text_8>)
 8004222:	466c      	mov	r4, sp
 8004224:	7824      	ldrb	r4, [r4, #0]
 8004226:	00a4      	lsls	r4, r4, #2
 8004228:	5904      	ldr	r4, [r0, r4]
 800422a:	2010      	movs	r0, #16
 800422c:	68e5      	ldr	r5, [r4, #12]
 800422e:	2d00      	cmp	r5, #0
 8004230:	d101      	bne.n	8004236 <USBPD_PE_SVDM_RequestModeExit+0x18>
 8004232:	2002      	movs	r0, #2
 8004234:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}
 8004236:	2532      	movs	r5, #50	; 0x32
 8004238:	5d65      	ldrb	r5, [r4, r5]
 800423a:	2d00      	cmp	r5, #0
 800423c:	d105      	bne.n	800424a <USBPD_PE_SVDM_RequestModeExit+0x2c>
 800423e:	6865      	ldr	r5, [r4, #4]
 8004240:	682e      	ldr	r6, [r5, #0]
 8004242:	2501      	movs	r5, #1
 8004244:	0b37      	lsrs	r7, r6, #12
 8004246:	402f      	ands	r7, r5
 8004248:	d101      	bne.n	800424e <USBPD_PE_SVDM_RequestModeExit+0x30>
 800424a:	2003      	movs	r0, #3
 800424c:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}
 800424e:	27e1      	movs	r7, #225	; 0xe1
 8004250:	00ff      	lsls	r7, r7, #3
 8004252:	4037      	ands	r7, r6
 8004254:	26c2      	movs	r6, #194	; 0xc2
 8004256:	00b6      	lsls	r6, r6, #2
 8004258:	42b7      	cmp	r7, r6
 800425a:	d11e      	bne.n	800429a <USBPD_PE_SVDM_RequestModeExit+0x7c>
 800425c:	2633      	movs	r6, #51	; 0x33
 800425e:	55a1      	strb	r1, [r4, r6]
 8004260:	2683      	movs	r6, #131	; 0x83
 8004262:	2732      	movs	r7, #50	; 0x32
 8004264:	55e6      	strb	r6, [r4, r7]
 8004266:	2696      	movs	r6, #150	; 0x96
 8004268:	00b6      	lsls	r6, r6, #2
 800426a:	53a2      	strh	r2, [r4, r6]
 800426c:	6966      	ldr	r6, [r4, #20]
 800426e:	4a90      	ldr	r2, [pc, #576]	; (80044b0 <.text_13>)
 8004270:	4032      	ands	r2, r6
 8004272:	019e      	lsls	r6, r3, #6
 8004274:	23e0      	movs	r3, #224	; 0xe0
 8004276:	005b      	lsls	r3, r3, #1
 8004278:	4033      	ands	r3, r6
 800427a:	4313      	orrs	r3, r2
 800427c:	6163      	str	r3, [r4, #20]
 800427e:	2900      	cmp	r1, #0
 8004280:	d005      	beq.n	800428e <USBPD_PE_SVDM_RequestModeExit+0x70>
 8004282:	2902      	cmp	r1, #2
 8004284:	d000      	beq.n	8004288 <USBPD_PE_SVDM_RequestModeExit+0x6a>
 8004286:	d208      	bcs.n	800429a <USBPD_PE_SVDM_RequestModeExit+0x7c>
 8004288:	0c19      	lsrs	r1, r3, #16
 800428a:	400d      	ands	r5, r1
 800428c:	d005      	beq.n	800429a <USBPD_PE_SVDM_RequestModeExit+0x7c>
 800428e:	4668      	mov	r0, sp
 8004290:	7800      	ldrb	r0, [r0, #0]
 8004292:	68a1      	ldr	r1, [r4, #8]
 8004294:	6a89      	ldr	r1, [r1, #40]	; 0x28
 8004296:	4788      	blx	r1
 8004298:	2000      	movs	r0, #0
 800429a:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

0800429c <USBPD_PE_SVDM_RequestSpecific>:
 800429c:	b5f1      	push	{r0, r4, r5, r6, r7, lr}
 800429e:	4819      	ldr	r0, [pc, #100]	; (8004304 <.text_8>)
 80042a0:	466c      	mov	r4, sp
 80042a2:	7824      	ldrb	r4, [r4, #0]
 80042a4:	00a4      	lsls	r4, r4, #2
 80042a6:	5904      	ldr	r4, [r0, r4]
 80042a8:	2010      	movs	r0, #16
 80042aa:	68e5      	ldr	r5, [r4, #12]
 80042ac:	2d00      	cmp	r5, #0
 80042ae:	d101      	bne.n	80042b4 <USBPD_PE_SVDM_RequestSpecific+0x18>
 80042b0:	2002      	movs	r0, #2
 80042b2:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}
 80042b4:	2532      	movs	r5, #50	; 0x32
 80042b6:	5d65      	ldrb	r5, [r4, r5]
 80042b8:	2d00      	cmp	r5, #0
 80042ba:	d105      	bne.n	80042c8 <USBPD_PE_SVDM_RequestSpecific+0x2c>
 80042bc:	6865      	ldr	r5, [r4, #4]
 80042be:	682d      	ldr	r5, [r5, #0]
 80042c0:	2601      	movs	r6, #1
 80042c2:	0b2f      	lsrs	r7, r5, #12
 80042c4:	4037      	ands	r7, r6
 80042c6:	d101      	bne.n	80042cc <USBPD_PE_SVDM_RequestSpecific+0x30>
 80042c8:	2003      	movs	r0, #3
 80042ca:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}
 80042cc:	6967      	ldr	r7, [r4, #20]
 80042ce:	0c3f      	lsrs	r7, r7, #16
 80042d0:	403e      	ands	r6, r7
 80042d2:	d101      	bne.n	80042d8 <USBPD_PE_SVDM_RequestSpecific+0x3c>
 80042d4:	000e      	movs	r6, r1
 80042d6:	d113      	bne.n	8004300 <USBPD_PE_SVDM_RequestSpecific+0x64>
 80042d8:	056d      	lsls	r5, r5, #21
 80042da:	0f6d      	lsrs	r5, r5, #29
 80042dc:	2d03      	cmp	r5, #3
 80042de:	d10f      	bne.n	8004300 <USBPD_PE_SVDM_RequestSpecific+0x64>
 80042e0:	2033      	movs	r0, #51	; 0x33
 80042e2:	5421      	strb	r1, [r4, r0]
 80042e4:	2085      	movs	r0, #133	; 0x85
 80042e6:	2132      	movs	r1, #50	; 0x32
 80042e8:	5460      	strb	r0, [r4, r1]
 80042ea:	2095      	movs	r0, #149	; 0x95
 80042ec:	0080      	lsls	r0, r0, #2
 80042ee:	1820      	adds	r0, r4, r0
 80042f0:	6002      	str	r2, [r0, #0]
 80042f2:	8083      	strh	r3, [r0, #4]
 80042f4:	4668      	mov	r0, sp
 80042f6:	7800      	ldrb	r0, [r0, #0]
 80042f8:	68a1      	ldr	r1, [r4, #8]
 80042fa:	6a89      	ldr	r1, [r1, #40]	; 0x28
 80042fc:	4788      	blx	r1
 80042fe:	2000      	movs	r0, #0
 8004300:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}
	...

08004304 <.text_8>:
 8004304:	200001bc 	.word	0x200001bc

08004308 <USBPD_PE_SVDM_RequestAttention>:
 8004308:	b538      	push	{r3, r4, r5, lr}
 800430a:	000b      	movs	r3, r1
 800430c:	4969      	ldr	r1, [pc, #420]	; (80044b4 <.text_14>)
 800430e:	0084      	lsls	r4, r0, #2
 8004310:	590d      	ldr	r5, [r1, r4]
 8004312:	2110      	movs	r1, #16
 8004314:	68ec      	ldr	r4, [r5, #12]
 8004316:	2c00      	cmp	r4, #0
 8004318:	d001      	beq.n	800431e <USBPD_PE_SVDM_RequestAttention+0x16>
 800431a:	2b00      	cmp	r3, #0
 800431c:	d001      	beq.n	8004322 <USBPD_PE_SVDM_RequestAttention+0x1a>
 800431e:	2102      	movs	r1, #2
 8004320:	e01e      	b.n	8004360 <USBPD_PE_SVDM_RequestAttention+0x58>
 8004322:	2332      	movs	r3, #50	; 0x32
 8004324:	5ceb      	ldrb	r3, [r5, r3]
 8004326:	2b00      	cmp	r3, #0
 8004328:	d104      	bne.n	8004334 <USBPD_PE_SVDM_RequestAttention+0x2c>
 800432a:	686b      	ldr	r3, [r5, #4]
 800432c:	681b      	ldr	r3, [r3, #0]
 800432e:	04dc      	lsls	r4, r3, #19
 8004330:	0fe4      	lsrs	r4, r4, #31
 8004332:	d101      	bne.n	8004338 <USBPD_PE_SVDM_RequestAttention+0x30>
 8004334:	2103      	movs	r1, #3
 8004336:	e013      	b.n	8004360 <USBPD_PE_SVDM_RequestAttention+0x58>
 8004338:	055b      	lsls	r3, r3, #21
 800433a:	0f5b      	lsrs	r3, r3, #29
 800433c:	2b03      	cmp	r3, #3
 800433e:	d10f      	bne.n	8004360 <USBPD_PE_SVDM_RequestAttention+0x58>
 8004340:	2400      	movs	r4, #0
 8004342:	2333      	movs	r3, #51	; 0x33
 8004344:	54ec      	strb	r4, [r5, r3]
 8004346:	2184      	movs	r1, #132	; 0x84
 8004348:	2332      	movs	r3, #50	; 0x32
 800434a:	54e9      	strb	r1, [r5, r3]
 800434c:	2195      	movs	r1, #149	; 0x95
 800434e:	0089      	lsls	r1, r1, #2
 8004350:	1869      	adds	r1, r5, r1
 8004352:	2306      	movs	r3, #6
 8004354:	600b      	str	r3, [r1, #0]
 8004356:	808a      	strh	r2, [r1, #4]
 8004358:	68a9      	ldr	r1, [r5, #8]
 800435a:	6a89      	ldr	r1, [r1, #40]	; 0x28
 800435c:	4788      	blx	r1
 800435e:	2100      	movs	r1, #0
 8004360:	0008      	movs	r0, r1
 8004362:	bd32      	pop	{r1, r4, r5, pc}

08004364 <.text_10>:
 8004364:	00000704 	.word	0x00000704

08004368 <USBPD_PE_UVDM_RequestMessage>:
 8004368:	b570      	push	{r4, r5, r6, lr}
 800436a:	000a      	movs	r2, r1
 800436c:	4951      	ldr	r1, [pc, #324]	; (80044b4 <.text_14>)
 800436e:	0083      	lsls	r3, r0, #2
 8004370:	58cb      	ldr	r3, [r1, r3]
 8004372:	2110      	movs	r1, #16
 8004374:	68dc      	ldr	r4, [r3, #12]
 8004376:	2c00      	cmp	r4, #0
 8004378:	d101      	bne.n	800437e <USBPD_PE_UVDM_RequestMessage+0x16>
 800437a:	2102      	movs	r1, #2
 800437c:	e01d      	b.n	80043ba <USBPD_PE_UVDM_RequestMessage+0x52>
 800437e:	2432      	movs	r4, #50	; 0x32
 8004380:	5d1c      	ldrb	r4, [r3, r4]
 8004382:	2c00      	cmp	r4, #0
 8004384:	d105      	bne.n	8004392 <USBPD_PE_UVDM_RequestMessage+0x2a>
 8004386:	685c      	ldr	r4, [r3, #4]
 8004388:	6824      	ldr	r4, [r4, #0]
 800438a:	2501      	movs	r5, #1
 800438c:	0b26      	lsrs	r6, r4, #12
 800438e:	402e      	ands	r6, r5
 8004390:	d101      	bne.n	8004396 <USBPD_PE_UVDM_RequestMessage+0x2e>
 8004392:	2103      	movs	r1, #3
 8004394:	e011      	b.n	80043ba <USBPD_PE_UVDM_RequestMessage+0x52>
 8004396:	0be6      	lsrs	r6, r4, #15
 8004398:	4035      	ands	r5, r6
 800439a:	d101      	bne.n	80043a0 <USBPD_PE_UVDM_RequestMessage+0x38>
 800439c:	0015      	movs	r5, r2
 800439e:	d10c      	bne.n	80043ba <USBPD_PE_UVDM_RequestMessage+0x52>
 80043a0:	0564      	lsls	r4, r4, #21
 80043a2:	0f64      	lsrs	r4, r4, #29
 80043a4:	2c03      	cmp	r4, #3
 80043a6:	d108      	bne.n	80043ba <USBPD_PE_UVDM_RequestMessage+0x52>
 80043a8:	2133      	movs	r1, #51	; 0x33
 80043aa:	545a      	strb	r2, [r3, r1]
 80043ac:	2186      	movs	r1, #134	; 0x86
 80043ae:	2232      	movs	r2, #50	; 0x32
 80043b0:	5499      	strb	r1, [r3, r2]
 80043b2:	6899      	ldr	r1, [r3, #8]
 80043b4:	6a89      	ldr	r1, [r1, #40]	; 0x28
 80043b6:	4788      	blx	r1
 80043b8:	2100      	movs	r1, #0
 80043ba:	0008      	movs	r0, r1
 80043bc:	bd70      	pop	{r4, r5, r6, pc}

080043be <PE_Receive_SVDM>:
 80043be:	493e      	ldr	r1, [pc, #248]	; (80044b8 <.text_15>)
 80043c0:	1842      	adds	r2, r0, r1
 80043c2:	8e81      	ldrh	r1, [r0, #52]	; 0x34
 80043c4:	0449      	lsls	r1, r1, #17
 80043c6:	0f49      	lsrs	r1, r1, #29
 80043c8:	1e49      	subs	r1, r1, #1
 80043ca:	7611      	strb	r1, [r2, #24]
 80043cc:	2131      	movs	r1, #49	; 0x31
 80043ce:	5c41      	ldrb	r1, [r0, r1]
 80043d0:	2900      	cmp	r1, #0
 80043d2:	d000      	beq.n	80043d6 <PE_Receive_SVDM+0x18>
 80043d4:	4770      	bx	lr
 80043d6:	b570      	push	{r4, r5, r6, lr}
 80043d8:	2300      	movs	r3, #0
 80043da:	e010      	b.n	80043fe <PE_Receive_SVDM+0x40>
 80043dc:	6b81      	ldr	r1, [r0, #56]	; 0x38
 80043de:	009c      	lsls	r4, r3, #2
 80043e0:	1909      	adds	r1, r1, r4
 80043e2:	798c      	ldrb	r4, [r1, #6]
 80043e4:	79cd      	ldrb	r5, [r1, #7]
 80043e6:	022d      	lsls	r5, r5, #8
 80043e8:	1964      	adds	r4, r4, r5
 80043ea:	7a0d      	ldrb	r5, [r1, #8]
 80043ec:	042d      	lsls	r5, r5, #16
 80043ee:	1964      	adds	r4, r4, r5
 80043f0:	7a49      	ldrb	r1, [r1, #9]
 80043f2:	0609      	lsls	r1, r1, #24
 80043f4:	1861      	adds	r1, r4, r1
 80043f6:	009c      	lsls	r4, r3, #2
 80043f8:	5111      	str	r1, [r2, r4]
 80043fa:	1c5b      	adds	r3, r3, #1
 80043fc:	b2db      	uxtb	r3, r3
 80043fe:	7e11      	ldrb	r1, [r2, #24]
 8004400:	428b      	cmp	r3, r1
 8004402:	dbeb      	blt.n	80043dc <PE_Receive_SVDM+0x1e>
 8004404:	0004      	movs	r4, r0
 8004406:	2503      	movs	r5, #3
 8004408:	4b2c      	ldr	r3, [pc, #176]	; (80044bc <.text_16>)
 800440a:	482d      	ldr	r0, [pc, #180]	; (80044c0 <.text_17>)
 800440c:	2694      	movs	r6, #148	; 0x94
 800440e:	00b6      	lsls	r6, r6, #2
 8004410:	5da6      	ldrb	r6, [r4, r6]
 8004412:	06f6      	lsls	r6, r6, #27
 8004414:	0ef6      	lsrs	r6, r6, #27
 8004416:	1e76      	subs	r6, r6, #1
 8004418:	d00d      	beq.n	8004436 <PE_Receive_SVDM+0x78>
 800441a:	1e76      	subs	r6, r6, #1
 800441c:	d022      	beq.n	8004464 <PE_Receive_SVDM+0xa6>
 800441e:	1e76      	subs	r6, r6, #1
 8004420:	d025      	beq.n	800446e <PE_Receive_SVDM+0xb0>
 8004422:	1e76      	subs	r6, r6, #1
 8004424:	d028      	beq.n	8004478 <PE_Receive_SVDM+0xba>
 8004426:	1e76      	subs	r6, r6, #1
 8004428:	d02b      	beq.n	8004482 <PE_Receive_SVDM+0xc4>
 800442a:	1e76      	subs	r6, r6, #1
 800442c:	d02e      	beq.n	800448c <PE_Receive_SVDM+0xce>
 800442e:	3e0a      	subs	r6, #10
 8004430:	2e0f      	cmp	r6, #15
 8004432:	d937      	bls.n	80044a4 <PE_Receive_SVDM+0xe6>
 8004434:	bd70      	pop	{r4, r5, r6, pc}
 8004436:	2150      	movs	r1, #80	; 0x50
 8004438:	7721      	strb	r1, [r4, #28]
 800443a:	6861      	ldr	r1, [r4, #4]
 800443c:	680a      	ldr	r2, [r1, #0]
 800443e:	0693      	lsls	r3, r2, #26
 8004440:	0fdb      	lsrs	r3, r3, #31
 8004442:	2694      	movs	r6, #148	; 0x94
 8004444:	00b6      	lsls	r6, r6, #2
 8004446:	59a6      	ldr	r6, [r4, r6]
 8004448:	0b76      	lsrs	r6, r6, #13
 800444a:	4035      	ands	r5, r6
 800444c:	429d      	cmp	r5, r3
 800444e:	da00      	bge.n	8004452 <PE_Receive_SVDM+0x94>
 8004450:	002b      	movs	r3, r5
 8004452:	2520      	movs	r5, #32
 8004454:	43aa      	bics	r2, r5
 8004456:	015b      	lsls	r3, r3, #5
 8004458:	402b      	ands	r3, r5
 800445a:	4313      	orrs	r3, r2
 800445c:	600b      	str	r3, [r1, #0]
 800445e:	83e0      	strh	r0, [r4, #30]
 8004460:	2075      	movs	r0, #117	; 0x75
 8004462:	e023      	b.n	80044ac <PE_Receive_SVDM+0xee>
 8004464:	2152      	movs	r1, #82	; 0x52
 8004466:	7721      	strb	r1, [r4, #28]
 8004468:	83e0      	strh	r0, [r4, #30]
 800446a:	2076      	movs	r0, #118	; 0x76
 800446c:	e01e      	b.n	80044ac <PE_Receive_SVDM+0xee>
 800446e:	2153      	movs	r1, #83	; 0x53
 8004470:	7721      	strb	r1, [r4, #28]
 8004472:	83e0      	strh	r0, [r4, #30]
 8004474:	2078      	movs	r0, #120	; 0x78
 8004476:	e019      	b.n	80044ac <PE_Receive_SVDM+0xee>
 8004478:	2054      	movs	r0, #84	; 0x54
 800447a:	7720      	strb	r0, [r4, #28]
 800447c:	83e3      	strh	r3, [r4, #30]
 800447e:	2079      	movs	r0, #121	; 0x79
 8004480:	e014      	b.n	80044ac <PE_Receive_SVDM+0xee>
 8004482:	2055      	movs	r0, #85	; 0x55
 8004484:	7720      	strb	r0, [r4, #28]
 8004486:	83e3      	strh	r3, [r4, #30]
 8004488:	207a      	movs	r0, #122	; 0x7a
 800448a:	e00f      	b.n	80044ac <PE_Receive_SVDM+0xee>
 800448c:	68e0      	ldr	r0, [r4, #12]
 800448e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8004490:	2b00      	cmp	r3, #0
 8004492:	d005      	beq.n	80044a0 <PE_Receive_SVDM+0xe2>
 8004494:	2900      	cmp	r1, #0
 8004496:	d000      	beq.n	800449a <PE_Receive_SVDM+0xdc>
 8004498:	2101      	movs	r1, #1
 800449a:	6812      	ldr	r2, [r2, #0]
 800449c:	7c20      	ldrb	r0, [r4, #16]
 800449e:	4798      	blx	r3
 80044a0:	7465      	strb	r5, [r4, #17]
 80044a2:	bd70      	pop	{r4, r5, r6, pc}
 80044a4:	215a      	movs	r1, #90	; 0x5a
 80044a6:	7721      	strb	r1, [r4, #28]
 80044a8:	83e0      	strh	r0, [r4, #30]
 80044aa:	207b      	movs	r0, #123	; 0x7b
 80044ac:	7460      	strb	r0, [r4, #17]
 80044ae:	bd70      	pop	{r4, r5, r6, pc}

080044b0 <.text_13>:
 80044b0:	fffffe3f 	.word	0xfffffe3f

080044b4 <.text_14>:
 80044b4:	200001bc 	.word	0x200001bc

080044b8 <.text_15>:
 80044b8:	00000494 	.word	0x00000494

080044bc <.text_16>:
 80044bc:	00008019 	.word	0x00008019

080044c0 <.text_17>:
 80044c0:	0000800f 	.word	0x0000800f

080044c4 <PE_StateMachine_VDM>:
 80044c4:	b5f2      	push	{r1, r4, r5, r6, r7, lr}
 80044c6:	b09c      	sub	sp, #112	; 0x70
 80044c8:	0005      	movs	r5, r0
 80044ca:	2002      	movs	r0, #2
 80044cc:	9004      	str	r0, [sp, #16]
 80044ce:	7c6a      	ldrb	r2, [r5, #17]
 80044d0:	0010      	movs	r0, r2
 80044d2:	3875      	subs	r0, #117	; 0x75
 80044d4:	2807      	cmp	r0, #7
 80044d6:	d206      	bcs.n	80044e6 <__iar_annotation$$branch+0x4>
 80044d8:	981c      	ldr	r0, [sp, #112]	; 0x70
 80044da:	7800      	ldrb	r0, [r0, #0]
 80044dc:	2814      	cmp	r0, #20
 80044de:	d002      	beq.n	80044e6 <__iar_annotation$$branch+0x4>
 80044e0:	2002      	movs	r0, #2

080044e2 <__iar_annotation$$branch>:
 80044e2:	f000 febc 	bl	800525e <__iar_annotation$$branch+0xce4>
 80044e6:	2094      	movs	r0, #148	; 0x94
 80044e8:	0080      	lsls	r0, r0, #2
 80044ea:	182c      	adds	r4, r5, r0
 80044ec:	210b      	movs	r1, #11
 80044ee:	271e      	movs	r7, #30
 80044f0:	201f      	movs	r0, #31
 80044f2:	43c0      	mvns	r0, r0
 80044f4:	26c0      	movs	r6, #192	; 0xc0
 80044f6:	43f6      	mvns	r6, r6
 80044f8:	2a75      	cmp	r2, #117	; 0x75
 80044fa:	d041      	beq.n	8004580 <__iar_annotation$$branch+0x6>
 80044fc:	2a76      	cmp	r2, #118	; 0x76
 80044fe:	d100      	bne.n	8004502 <__iar_annotation$$branch+0x20>
 8004500:	e0bb      	b.n	800467a <__iar_annotation$$branch+0x100>
 8004502:	2a77      	cmp	r2, #119	; 0x77
 8004504:	d100      	bne.n	8004508 <__iar_annotation$$branch+0x26>
 8004506:	e144      	b.n	8004792 <__iar_annotation$$branch+0x218>
 8004508:	2a78      	cmp	r2, #120	; 0x78
 800450a:	d100      	bne.n	800450e <__iar_annotation$$branch+0x2c>
 800450c:	e1b4      	b.n	8004878 <__iar_annotation$$branch+0x2fe>
 800450e:	2a79      	cmp	r2, #121	; 0x79
 8004510:	d100      	bne.n	8004514 <__iar_annotation$$branch+0x32>
 8004512:	e216      	b.n	8004942 <__iar_annotation$$branch+0x3c8>
 8004514:	2a7a      	cmp	r2, #122	; 0x7a
 8004516:	d100      	bne.n	800451a <__iar_annotation$$branch+0x38>
 8004518:	e24b      	b.n	80049b2 <__iar_annotation$$branch+0x438>
 800451a:	2a7b      	cmp	r2, #123	; 0x7b
 800451c:	d100      	bne.n	8004520 <__iar_annotation$$branch+0x3e>
 800451e:	e292      	b.n	8004a46 <__iar_annotation$$branch+0x4cc>
 8004520:	2a7d      	cmp	r2, #125	; 0x7d
 8004522:	d100      	bne.n	8004526 <__iar_annotation$$branch+0x44>
 8004524:	e2e0      	b.n	8004ae8 <__iar_annotation$$branch+0x56e>
 8004526:	2a7f      	cmp	r2, #127	; 0x7f
 8004528:	d100      	bne.n	800452c <__iar_annotation$$branch+0x4a>
 800452a:	e352      	b.n	8004bd2 <__iar_annotation$$branch+0x658>
 800452c:	2a81      	cmp	r2, #129	; 0x81
 800452e:	d100      	bne.n	8004532 <__iar_annotation$$branch+0x50>
 8004530:	e3c2      	b.n	8004cb8 <__iar_annotation$$branch+0x73e>
 8004532:	2a82      	cmp	r2, #130	; 0x82
 8004534:	d101      	bne.n	800453a <__iar_annotation$$branch+0x4>

08004536 <__iar_annotation$$branch>:
 8004536:	f000 fc3b 	bl	8004db0 <__iar_annotation$$branch+0x836>
 800453a:	2a83      	cmp	r2, #131	; 0x83
 800453c:	d101      	bne.n	8004542 <__iar_annotation$$branch+0x4>

0800453e <__iar_annotation$$branch>:
 800453e:	f000 fcc9 	bl	8004ed4 <__iar_annotation$$branch+0x95a>
 8004542:	2a84      	cmp	r2, #132	; 0x84
 8004544:	d101      	bne.n	800454a <__iar_annotation$$branch+0x4>

08004546 <__iar_annotation$$branch>:
 8004546:	f000 fe38 	bl	80051ba <__iar_annotation$$branch+0xc40>
 800454a:	2a85      	cmp	r2, #133	; 0x85
 800454c:	d101      	bne.n	8004552 <__iar_annotation$$branch+0x4>

0800454e <__iar_annotation$$branch>:
 800454e:	f000 fd5d 	bl	800500c <__iar_annotation$$branch+0xa92>
 8004552:	2a87      	cmp	r2, #135	; 0x87
 8004554:	d100      	bne.n	8004558 <__iar_annotation$$branch+0xa>
 8004556:	e2fc      	b.n	8004b52 <__iar_annotation$$branch+0x5d8>
 8004558:	2a89      	cmp	r2, #137	; 0x89
 800455a:	d100      	bne.n	800455e <__iar_annotation$$branch+0x10>
 800455c:	e375      	b.n	8004c4a <__iar_annotation$$branch+0x6d0>
 800455e:	2a8b      	cmp	r2, #139	; 0x8b
 8004560:	d101      	bne.n	8004566 <__iar_annotation$$branch+0x4>

08004562 <__iar_annotation$$branch>:
 8004562:	f000 fbe4 	bl	8004d2e <__iar_annotation$$branch+0x7b4>
 8004566:	2a8c      	cmp	r2, #140	; 0x8c
 8004568:	d101      	bne.n	800456e <__iar_annotation$$branch+0x4>

0800456a <__iar_annotation$$branch>:
 800456a:	f000 fc63 	bl	8004e34 <__iar_annotation$$branch+0x8ba>
 800456e:	2a8d      	cmp	r2, #141	; 0x8d
 8004570:	d101      	bne.n	8004576 <__iar_annotation$$branch+0x4>

08004572 <__iar_annotation$$branch>:
 8004572:	f000 fcf7 	bl	8004f64 <__iar_annotation$$branch+0x9ea>
 8004576:	2a8f      	cmp	r2, #143	; 0x8f
 8004578:	d101      	bne.n	800457e <__iar_annotation$$branch+0x4>

0800457a <__iar_annotation$$branch>:
 800457a:	f000 fda5 	bl	80050c8 <__iar_annotation$$branch+0xb4e>
 800457e:	e2b2      	b.n	8004ae6 <__iar_annotation$$branch+0x56c>
 8004580:	2201      	movs	r2, #1
 8004582:	9203      	str	r2, [sp, #12]
 8004584:	03d3      	lsls	r3, r2, #15
 8004586:	8bea      	ldrh	r2, [r5, #30]
 8004588:	429a      	cmp	r2, r3
 800458a:	d100      	bne.n	800458e <__iar_annotation$$branch+0x14>
 800458c:	e262      	b.n	8004a54 <__iar_annotation$$branch+0x4da>
 800458e:	2701      	movs	r7, #1
 8004590:	6822      	ldr	r2, [r4, #0]
 8004592:	4010      	ands	r0, r2
 8004594:	4338      	orrs	r0, r7
 8004596:	6020      	str	r0, [r4, #0]
 8004598:	4303      	orrs	r3, r0
 800459a:	6023      	str	r3, [r4, #0]
 800459c:	6868      	ldr	r0, [r5, #4]
 800459e:	6800      	ldr	r0, [r0, #0]
 80045a0:	0942      	lsrs	r2, r0, #5
 80045a2:	403a      	ands	r2, r7
 80045a4:	48c9      	ldr	r0, [pc, #804]	; (80048cc <__iar_annotation$$branch+0x352>)
 80045a6:	4018      	ands	r0, r3
 80045a8:	0352      	lsls	r2, r2, #13
 80045aa:	4302      	orrs	r2, r0
 80045ac:	6022      	str	r2, [r4, #0]
 80045ae:	6868      	ldr	r0, [r5, #4]
 80045b0:	6800      	ldr	r0, [r0, #0]
 80045b2:	4001      	ands	r1, r0
 80045b4:	2909      	cmp	r1, #9
 80045b6:	d051      	beq.n	800465c <__iar_annotation$$branch+0xe2>
 80045b8:	68e8      	ldr	r0, [r5, #12]
 80045ba:	2800      	cmp	r0, #0
 80045bc:	d04e      	beq.n	800465c <__iar_annotation$$branch+0xe2>
 80045be:	6803      	ldr	r3, [r0, #0]
 80045c0:	2b00      	cmp	r3, #0
 80045c2:	d04b      	beq.n	800465c <__iar_annotation$$branch+0xe2>
 80045c4:	0c10      	lsrs	r0, r2, #16
 80045c6:	21ff      	movs	r1, #255	; 0xff
 80045c8:	0209      	lsls	r1, r1, #8
 80045ca:	4288      	cmp	r0, r1
 80045cc:	d146      	bne.n	800465c <__iar_annotation$$branch+0xe2>
 80045ce:	a90b      	add	r1, sp, #44	; 0x2c
 80045d0:	7c28      	ldrb	r0, [r5, #16]
 80045d2:	4798      	blx	r3
 80045d4:	2803      	cmp	r0, #3
 80045d6:	d002      	beq.n	80045de <__iar_annotation$$branch+0x64>
 80045d8:	280f      	cmp	r0, #15
 80045da:	d005      	beq.n	80045e8 <__iar_annotation$$branch+0x6e>
 80045dc:	e03e      	b.n	800465c <__iar_annotation$$branch+0xe2>
 80045de:	6820      	ldr	r0, [r4, #0]
 80045e0:	21c0      	movs	r1, #192	; 0xc0
 80045e2:	4301      	orrs	r1, r0
 80045e4:	6021      	str	r1, [r4, #0]
 80045e6:	e03e      	b.n	8004666 <__iar_annotation$$branch+0xec>
 80045e8:	6820      	ldr	r0, [r4, #0]
 80045ea:	4006      	ands	r6, r0
 80045ec:	2040      	movs	r0, #64	; 0x40
 80045ee:	4330      	orrs	r0, r6
 80045f0:	6020      	str	r0, [r4, #0]
 80045f2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80045f4:	9015      	str	r0, [sp, #84]	; 0x54
 80045f6:	980c      	ldr	r0, [sp, #48]	; 0x30
 80045f8:	9016      	str	r0, [sp, #88]	; 0x58
 80045fa:	980d      	ldr	r0, [sp, #52]	; 0x34
 80045fc:	9017      	str	r0, [sp, #92]	; 0x5c
 80045fe:	2004      	movs	r0, #4
 8004600:	9003      	str	r0, [sp, #12]
 8004602:	a80b      	add	r0, sp, #44	; 0x2c
 8004604:	2120      	movs	r1, #32
 8004606:	5c40      	ldrb	r0, [r0, r1]
 8004608:	0841      	lsrs	r1, r0, #1
 800460a:	4239      	tst	r1, r7
 800460c:	d003      	beq.n	8004616 <__iar_annotation$$branch+0x9c>
 800460e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004610:	9118      	str	r1, [sp, #96]	; 0x60
 8004612:	2105      	movs	r1, #5
 8004614:	9103      	str	r1, [sp, #12]
 8004616:	08c2      	lsrs	r2, r0, #3
 8004618:	2101      	movs	r1, #1
 800461a:	4011      	ands	r1, r2
 800461c:	d008      	beq.n	8004630 <__iar_annotation$$branch+0xb6>
 800461e:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8004620:	aa14      	add	r2, sp, #80	; 0x50
 8004622:	9b03      	ldr	r3, [sp, #12]
 8004624:	009b      	lsls	r3, r3, #2
 8004626:	50d6      	str	r6, [r2, r3]
 8004628:	9a03      	ldr	r2, [sp, #12]
 800462a:	1c52      	adds	r2, r2, #1
 800462c:	b2d2      	uxtb	r2, r2
 800462e:	9203      	str	r2, [sp, #12]
 8004630:	0900      	lsrs	r0, r0, #4
 8004632:	4238      	tst	r0, r7
 8004634:	d017      	beq.n	8004666 <__iar_annotation$$branch+0xec>
 8004636:	2900      	cmp	r1, #0
 8004638:	d007      	beq.n	800464a <__iar_annotation$$branch+0xd0>
 800463a:	2000      	movs	r0, #0
 800463c:	a914      	add	r1, sp, #80	; 0x50
 800463e:	9a03      	ldr	r2, [sp, #12]
 8004640:	0092      	lsls	r2, r2, #2
 8004642:	5088      	str	r0, [r1, r2]
 8004644:	9803      	ldr	r0, [sp, #12]
 8004646:	1c40      	adds	r0, r0, #1
 8004648:	9003      	str	r0, [sp, #12]
 800464a:	9812      	ldr	r0, [sp, #72]	; 0x48
 800464c:	a914      	add	r1, sp, #80	; 0x50
 800464e:	9a03      	ldr	r2, [sp, #12]
 8004650:	0092      	lsls	r2, r2, #2
 8004652:	5088      	str	r0, [r1, r2]
 8004654:	9803      	ldr	r0, [sp, #12]
 8004656:	1c40      	adds	r0, r0, #1
 8004658:	9003      	str	r0, [sp, #12]
 800465a:	e004      	b.n	8004666 <__iar_annotation$$branch+0xec>
 800465c:	6820      	ldr	r0, [r4, #0]
 800465e:	4006      	ands	r6, r0
 8004660:	2080      	movs	r0, #128	; 0x80
 8004662:	4330      	orrs	r0, r6
 8004664:	6020      	str	r0, [r4, #0]
 8004666:	6820      	ldr	r0, [r4, #0]
 8004668:	9014      	str	r0, [sp, #80]	; 0x50
 800466a:	2000      	movs	r0, #0
 800466c:	9002      	str	r0, [sp, #8]
 800466e:	2003      	movs	r0, #3
 8004670:	9001      	str	r0, [sp, #4]
 8004672:	9803      	ldr	r0, [sp, #12]
 8004674:	9000      	str	r0, [sp, #0]
 8004676:	ab14      	add	r3, sp, #80	; 0x50
 8004678:	e22f      	b.n	8004ada <__iar_annotation$$branch+0x560>
 800467a:	2201      	movs	r2, #1
 800467c:	466b      	mov	r3, sp
 800467e:	731a      	strb	r2, [r3, #12]
 8004680:	03d2      	lsls	r2, r2, #15
 8004682:	8beb      	ldrh	r3, [r5, #30]
 8004684:	4293      	cmp	r3, r2
 8004686:	d100      	bne.n	800468a <__iar_annotation$$branch+0x110>
 8004688:	e1e4      	b.n	8004a54 <__iar_annotation$$branch+0x4da>
 800468a:	6823      	ldr	r3, [r4, #0]
 800468c:	4018      	ands	r0, r3
 800468e:	2302      	movs	r3, #2
 8004690:	4303      	orrs	r3, r0
 8004692:	6023      	str	r3, [r4, #0]
 8004694:	431a      	orrs	r2, r3
 8004696:	6022      	str	r2, [r4, #0]
 8004698:	6868      	ldr	r0, [r5, #4]
 800469a:	6803      	ldr	r3, [r0, #0]
 800469c:	0698      	lsls	r0, r3, #26
 800469e:	0fc0      	lsrs	r0, r0, #31
 80046a0:	4b8a      	ldr	r3, [pc, #552]	; (80048cc <__iar_annotation$$branch+0x352>)
 80046a2:	4013      	ands	r3, r2
 80046a4:	0340      	lsls	r0, r0, #13
 80046a6:	4318      	orrs	r0, r3
 80046a8:	6020      	str	r0, [r4, #0]
 80046aa:	686a      	ldr	r2, [r5, #4]
 80046ac:	6812      	ldr	r2, [r2, #0]
 80046ae:	4011      	ands	r1, r2
 80046b0:	2909      	cmp	r1, #9
 80046b2:	d05f      	beq.n	8004774 <__iar_annotation$$branch+0x1fa>
 80046b4:	68e9      	ldr	r1, [r5, #12]
 80046b6:	684b      	ldr	r3, [r1, #4]
 80046b8:	2b00      	cmp	r3, #0
 80046ba:	d05b      	beq.n	8004774 <__iar_annotation$$branch+0x1fa>
 80046bc:	0c00      	lsrs	r0, r0, #16
 80046be:	21ff      	movs	r1, #255	; 0xff
 80046c0:	0209      	lsls	r1, r1, #8
 80046c2:	4288      	cmp	r0, r1
 80046c4:	d156      	bne.n	8004774 <__iar_annotation$$branch+0x1fa>
 80046c6:	4882      	ldr	r0, [pc, #520]	; (80048d0 <__iar_annotation$$branch+0x356>)
 80046c8:	182a      	adds	r2, r5, r0
 80046ca:	a905      	add	r1, sp, #20
 80046cc:	7c28      	ldrb	r0, [r5, #16]
 80046ce:	4798      	blx	r3
 80046d0:	2803      	cmp	r0, #3
 80046d2:	d04b      	beq.n	800476c <__iar_annotation$$branch+0x1f2>
 80046d4:	280f      	cmp	r0, #15
 80046d6:	d14d      	bne.n	8004774 <__iar_annotation$$branch+0x1fa>
 80046d8:	6820      	ldr	r0, [r4, #0]
 80046da:	4006      	ands	r6, r0
 80046dc:	2040      	movs	r0, #64	; 0x40
 80046de:	4330      	orrs	r0, r6
 80046e0:	6020      	str	r0, [r4, #0]
 80046e2:	211c      	movs	r1, #28
 80046e4:	a806      	add	r0, sp, #24
 80046e6:	f013 fe1c 	bl	8018322 <__aeabi_memclr>
 80046ea:	2300      	movs	r3, #0
 80046ec:	2200      	movs	r2, #0
 80046ee:	a806      	add	r0, sp, #24
 80046f0:	9000      	str	r0, [sp, #0]
 80046f2:	e014      	b.n	800471e <__iar_annotation$$branch+0x1a4>
 80046f4:	005f      	lsls	r7, r3, #1
 80046f6:	5bf6      	ldrh	r6, [r6, r7]
 80046f8:	0436      	lsls	r6, r6, #16
 80046fa:	430e      	orrs	r6, r1
 80046fc:	6006      	str	r6, [r0, #0]
 80046fe:	e00d      	b.n	800471c <__iar_annotation$$branch+0x1a2>
 8004700:	1c52      	adds	r2, r2, #1
 8004702:	9800      	ldr	r0, [sp, #0]
 8004704:	1d00      	adds	r0, r0, #4
 8004706:	0859      	lsrs	r1, r3, #1
 8004708:	0089      	lsls	r1, r1, #2
 800470a:	1840      	adds	r0, r0, r1
 800470c:	07d9      	lsls	r1, r3, #31
 800470e:	6801      	ldr	r1, [r0, #0]
 8004710:	9e05      	ldr	r6, [sp, #20]
 8004712:	d5ef      	bpl.n	80046f4 <__iar_annotation$$branch+0x17a>
 8004714:	005f      	lsls	r7, r3, #1
 8004716:	5bf6      	ldrh	r6, [r6, r7]
 8004718:	4331      	orrs	r1, r6
 800471a:	6001      	str	r1, [r0, #0]
 800471c:	1c5b      	adds	r3, r3, #1
 800471e:	486d      	ldr	r0, [pc, #436]	; (80048d4 <__iar_annotation$$branch+0x35a>)
 8004720:	1828      	adds	r0, r5, r0
 8004722:	7840      	ldrb	r0, [r0, #1]
 8004724:	4283      	cmp	r3, r0
 8004726:	d201      	bcs.n	800472c <__iar_annotation$$branch+0x1b2>
 8004728:	2b0c      	cmp	r3, #12
 800472a:	d3e9      	bcc.n	8004700 <__iar_annotation$$branch+0x186>
 800472c:	1a80      	subs	r0, r0, r2
 800472e:	4969      	ldr	r1, [pc, #420]	; (80048d4 <__iar_annotation$$branch+0x35a>)
 8004730:	1869      	adds	r1, r5, r1
 8004732:	7048      	strb	r0, [r1, #1]
 8004734:	b2d0      	uxtb	r0, r2
 8004736:	280c      	cmp	r0, #12
 8004738:	d111      	bne.n	800475e <__iar_annotation$$branch+0x1e4>
 800473a:	6820      	ldr	r0, [r4, #0]
 800473c:	9006      	str	r0, [sp, #24]
 800473e:	2000      	movs	r0, #0
 8004740:	9002      	str	r0, [sp, #8]
 8004742:	2077      	movs	r0, #119	; 0x77
 8004744:	9001      	str	r0, [sp, #4]
 8004746:	2007      	movs	r0, #7
 8004748:	9000      	str	r0, [sp, #0]
 800474a:	ab06      	add	r3, sp, #24
 800474c:	220f      	movs	r2, #15
 800474e:	2031      	movs	r0, #49	; 0x31
 8004750:	5c29      	ldrb	r1, [r5, r0]
 8004752:	0028      	movs	r0, r5
 8004754:	f7fc ff07 	bl	8001566 <PE_Send_DataMessage>
 8004758:	485f      	ldr	r0, [pc, #380]	; (80048d8 <__iar_annotation$$branch+0x35e>)
 800475a:	83e8      	strh	r0, [r5, #30]
 800475c:	e1c3      	b.n	8004ae6 <__iar_annotation$$branch+0x56c>
 800475e:	0612      	lsls	r2, r2, #24
 8004760:	0e50      	lsrs	r0, r2, #25
 8004762:	1c80      	adds	r0, r0, #2
 8004764:	4669      	mov	r1, sp
 8004766:	7308      	strb	r0, [r1, #12]
 8004768:	6820      	ldr	r0, [r4, #0]
 800476a:	e008      	b.n	800477e <__iar_annotation$$branch+0x204>
 800476c:	6821      	ldr	r1, [r4, #0]
 800476e:	20c0      	movs	r0, #192	; 0xc0
 8004770:	4308      	orrs	r0, r1
 8004772:	e003      	b.n	800477c <__iar_annotation$$branch+0x202>
 8004774:	6820      	ldr	r0, [r4, #0]
 8004776:	4006      	ands	r6, r0
 8004778:	2080      	movs	r0, #128	; 0x80
 800477a:	4330      	orrs	r0, r6
 800477c:	6020      	str	r0, [r4, #0]
 800477e:	9006      	str	r0, [sp, #24]
 8004780:	2000      	movs	r0, #0
 8004782:	9002      	str	r0, [sp, #8]
 8004784:	2003      	movs	r0, #3
 8004786:	9001      	str	r0, [sp, #4]
 8004788:	4668      	mov	r0, sp
 800478a:	7b00      	ldrb	r0, [r0, #12]
 800478c:	9000      	str	r0, [sp, #0]
 800478e:	ab06      	add	r3, sp, #24
 8004790:	e1a3      	b.n	8004ada <__iar_annotation$$branch+0x560>
 8004792:	2180      	movs	r1, #128	; 0x80
 8004794:	0209      	lsls	r1, r1, #8
 8004796:	8bea      	ldrh	r2, [r5, #30]
 8004798:	428a      	cmp	r2, r1
 800479a:	d100      	bne.n	800479e <__iar_annotation$$branch+0x224>
 800479c:	e15a      	b.n	8004a54 <__iar_annotation$$branch+0x4da>
 800479e:	6822      	ldr	r2, [r4, #0]
 80047a0:	4010      	ands	r0, r2
 80047a2:	2202      	movs	r2, #2
 80047a4:	4302      	orrs	r2, r0
 80047a6:	6022      	str	r2, [r4, #0]
 80047a8:	b292      	uxth	r2, r2
 80047aa:	20ff      	movs	r0, #255	; 0xff
 80047ac:	0600      	lsls	r0, r0, #24
 80047ae:	4310      	orrs	r0, r2
 80047b0:	6020      	str	r0, [r4, #0]
 80047b2:	4301      	orrs	r1, r0
 80047b4:	6021      	str	r1, [r4, #0]
 80047b6:	2701      	movs	r7, #1
 80047b8:	6868      	ldr	r0, [r5, #4]
 80047ba:	6800      	ldr	r0, [r0, #0]
 80047bc:	0940      	lsrs	r0, r0, #5
 80047be:	4038      	ands	r0, r7
 80047c0:	4a42      	ldr	r2, [pc, #264]	; (80048cc <__iar_annotation$$branch+0x352>)
 80047c2:	400a      	ands	r2, r1
 80047c4:	0340      	lsls	r0, r0, #13
 80047c6:	4310      	orrs	r0, r2
 80047c8:	6020      	str	r0, [r4, #0]
 80047ca:	4006      	ands	r6, r0
 80047cc:	2040      	movs	r0, #64	; 0x40
 80047ce:	4330      	orrs	r0, r6
 80047d0:	6020      	str	r0, [r4, #0]
 80047d2:	aa03      	add	r2, sp, #12
 80047d4:	a905      	add	r1, sp, #20
 80047d6:	7c28      	ldrb	r0, [r5, #16]
 80047d8:	68eb      	ldr	r3, [r5, #12]
 80047da:	685b      	ldr	r3, [r3, #4]
 80047dc:	4798      	blx	r3
 80047de:	211c      	movs	r1, #28
 80047e0:	a806      	add	r0, sp, #24
 80047e2:	f013 fd9e 	bl	8018322 <__aeabi_memclr>
 80047e6:	2100      	movs	r1, #0
 80047e8:	2200      	movs	r2, #0
 80047ea:	a806      	add	r0, sp, #24
 80047ec:	002c      	movs	r4, r5
 80047ee:	e016      	b.n	800481e <__iar_annotation$$branch+0x2a4>
 80047f0:	004d      	lsls	r5, r1, #1
 80047f2:	5b75      	ldrh	r5, [r6, r5]
 80047f4:	042d      	lsls	r5, r5, #16
 80047f6:	4666      	mov	r6, ip
 80047f8:	4335      	orrs	r5, r6
 80047fa:	601d      	str	r5, [r3, #0]
 80047fc:	e00e      	b.n	800481c <__iar_annotation$$branch+0x2a2>
 80047fe:	1c52      	adds	r2, r2, #1
 8004800:	1d03      	adds	r3, r0, #4
 8004802:	084d      	lsrs	r5, r1, #1
 8004804:	00ad      	lsls	r5, r5, #2
 8004806:	195b      	adds	r3, r3, r5
 8004808:	4239      	tst	r1, r7
 800480a:	681e      	ldr	r6, [r3, #0]
 800480c:	46b4      	mov	ip, r6
 800480e:	9e05      	ldr	r6, [sp, #20]
 8004810:	d0ee      	beq.n	80047f0 <__iar_annotation$$branch+0x276>
 8004812:	004d      	lsls	r5, r1, #1
 8004814:	5b75      	ldrh	r5, [r6, r5]
 8004816:	4666      	mov	r6, ip
 8004818:	432e      	orrs	r6, r5
 800481a:	601e      	str	r6, [r3, #0]
 800481c:	1c49      	adds	r1, r1, #1
 800481e:	4b2d      	ldr	r3, [pc, #180]	; (80048d4 <__iar_annotation$$branch+0x35a>)
 8004820:	18e3      	adds	r3, r4, r3
 8004822:	785b      	ldrb	r3, [r3, #1]
 8004824:	4299      	cmp	r1, r3
 8004826:	d201      	bcs.n	800482c <__iar_annotation$$branch+0x2b2>
 8004828:	290c      	cmp	r1, #12
 800482a:	d3e8      	bcc.n	80047fe <__iar_annotation$$branch+0x284>
 800482c:	1a98      	subs	r0, r3, r2
 800482e:	4929      	ldr	r1, [pc, #164]	; (80048d4 <__iar_annotation$$branch+0x35a>)
 8004830:	1861      	adds	r1, r4, r1
 8004832:	7048      	strb	r0, [r1, #1]
 8004834:	b2d0      	uxtb	r0, r2
 8004836:	280c      	cmp	r0, #12
 8004838:	d10f      	bne.n	800485a <__iar_annotation$$branch+0x2e0>
 800483a:	2000      	movs	r0, #0
 800483c:	9002      	str	r0, [sp, #8]
 800483e:	2077      	movs	r0, #119	; 0x77
 8004840:	9001      	str	r0, [sp, #4]
 8004842:	2007      	movs	r0, #7
 8004844:	9000      	str	r0, [sp, #0]
 8004846:	ab06      	add	r3, sp, #24
 8004848:	220f      	movs	r2, #15
 800484a:	2031      	movs	r0, #49	; 0x31
 800484c:	5c21      	ldrb	r1, [r4, r0]
 800484e:	0020      	movs	r0, r4
 8004850:	f7fc fe89 	bl	8001566 <PE_Send_DataMessage>
 8004854:	4820      	ldr	r0, [pc, #128]	; (80048d8 <__iar_annotation$$branch+0x35e>)
 8004856:	83e0      	strh	r0, [r4, #30]
 8004858:	e145      	b.n	8004ae6 <__iar_annotation$$branch+0x56c>
 800485a:	2000      	movs	r0, #0
 800485c:	9002      	str	r0, [sp, #8]
 800485e:	2003      	movs	r0, #3
 8004860:	9001      	str	r0, [sp, #4]
 8004862:	0610      	lsls	r0, r2, #24
 8004864:	0e40      	lsrs	r0, r0, #25
 8004866:	1c80      	adds	r0, r0, #2
 8004868:	b2c0      	uxtb	r0, r0
 800486a:	9000      	str	r0, [sp, #0]
 800486c:	ab06      	add	r3, sp, #24
 800486e:	220f      	movs	r2, #15
 8004870:	2031      	movs	r0, #49	; 0x31
 8004872:	5c21      	ldrb	r1, [r4, r0]
 8004874:	0020      	movs	r0, r4
 8004876:	e134      	b.n	8004ae2 <__iar_annotation$$branch+0x568>
 8004878:	2201      	movs	r2, #1
 800487a:	9206      	str	r2, [sp, #24]
 800487c:	03d2      	lsls	r2, r2, #15
 800487e:	8beb      	ldrh	r3, [r5, #30]
 8004880:	4293      	cmp	r3, r2
 8004882:	d100      	bne.n	8004886 <__iar_annotation$$branch+0x30c>
 8004884:	e3c1      	b.n	800500a <__iar_annotation$$branch+0xa90>
 8004886:	6823      	ldr	r3, [r4, #0]
 8004888:	4018      	ands	r0, r3
 800488a:	2303      	movs	r3, #3
 800488c:	4303      	orrs	r3, r0
 800488e:	6023      	str	r3, [r4, #0]
 8004890:	431a      	orrs	r2, r3
 8004892:	6022      	str	r2, [r4, #0]
 8004894:	6868      	ldr	r0, [r5, #4]
 8004896:	6803      	ldr	r3, [r0, #0]
 8004898:	0698      	lsls	r0, r3, #26
 800489a:	0fc0      	lsrs	r0, r0, #31
 800489c:	4b0b      	ldr	r3, [pc, #44]	; (80048cc <__iar_annotation$$branch+0x352>)
 800489e:	4013      	ands	r3, r2
 80048a0:	0340      	lsls	r0, r0, #13
 80048a2:	4318      	orrs	r0, r3
 80048a4:	6020      	str	r0, [r4, #0]
 80048a6:	686a      	ldr	r2, [r5, #4]
 80048a8:	6812      	ldr	r2, [r2, #0]
 80048aa:	4011      	ands	r1, r2
 80048ac:	2909      	cmp	r1, #9
 80048ae:	d037      	beq.n	8004920 <__iar_annotation$$branch+0x3a6>
 80048b0:	68e9      	ldr	r1, [r5, #12]
 80048b2:	688f      	ldr	r7, [r1, #8]
 80048b4:	2f00      	cmp	r7, #0
 80048b6:	d033      	beq.n	8004920 <__iar_annotation$$branch+0x3a6>
 80048b8:	ab03      	add	r3, sp, #12
 80048ba:	aa05      	add	r2, sp, #20
 80048bc:	0c01      	lsrs	r1, r0, #16
 80048be:	7c28      	ldrb	r0, [r5, #16]
 80048c0:	47b8      	blx	r7
 80048c2:	2803      	cmp	r0, #3
 80048c4:	d00a      	beq.n	80048dc <__iar_annotation$$branch+0x362>
 80048c6:	280f      	cmp	r0, #15
 80048c8:	d00d      	beq.n	80048e6 <__iar_annotation$$branch+0x36c>
 80048ca:	e029      	b.n	8004920 <__iar_annotation$$branch+0x3a6>
 80048cc:	ffff9fff 	.word	0xffff9fff
 80048d0:	000004ad 	.word	0x000004ad
 80048d4:	000004ac 	.word	0x000004ac
 80048d8:	0000800f 	.word	0x0000800f
 80048dc:	6820      	ldr	r0, [r4, #0]
 80048de:	21c0      	movs	r1, #192	; 0xc0
 80048e0:	4301      	orrs	r1, r0
 80048e2:	6021      	str	r1, [r4, #0]
 80048e4:	e023      	b.n	800492e <__iar_annotation$$branch+0x3b4>
 80048e6:	4668      	mov	r0, sp
 80048e8:	7b00      	ldrb	r0, [r0, #12]
 80048ea:	2800      	cmp	r0, #0
 80048ec:	d018      	beq.n	8004920 <__iar_annotation$$branch+0x3a6>
 80048ee:	4668      	mov	r0, sp
 80048f0:	7b02      	ldrb	r2, [r0, #12]
 80048f2:	2a07      	cmp	r2, #7
 80048f4:	d214      	bcs.n	8004920 <__iar_annotation$$branch+0x3a6>
 80048f6:	6820      	ldr	r0, [r4, #0]
 80048f8:	4006      	ands	r6, r0
 80048fa:	2040      	movs	r0, #64	; 0x40
 80048fc:	4330      	orrs	r0, r6
 80048fe:	6020      	str	r0, [r4, #0]
 8004900:	2300      	movs	r3, #0
 8004902:	9806      	ldr	r0, [sp, #24]
 8004904:	4293      	cmp	r3, r2
 8004906:	d211      	bcs.n	800492c <__iar_annotation$$branch+0x3b2>
 8004908:	9905      	ldr	r1, [sp, #20]
 800490a:	6809      	ldr	r1, [r1, #0]
 800490c:	ae07      	add	r6, sp, #28
 800490e:	1d36      	adds	r6, r6, #4
 8004910:	009f      	lsls	r7, r3, #2
 8004912:	51f1      	str	r1, [r6, r7]
 8004914:	9905      	ldr	r1, [sp, #20]
 8004916:	1d09      	adds	r1, r1, #4
 8004918:	9105      	str	r1, [sp, #20]
 800491a:	1c40      	adds	r0, r0, #1
 800491c:	1c5b      	adds	r3, r3, #1
 800491e:	e7f1      	b.n	8004904 <__iar_annotation$$branch+0x38a>
 8004920:	6820      	ldr	r0, [r4, #0]
 8004922:	4006      	ands	r6, r0
 8004924:	2080      	movs	r0, #128	; 0x80
 8004926:	4330      	orrs	r0, r6
 8004928:	6020      	str	r0, [r4, #0]
 800492a:	e000      	b.n	800492e <__iar_annotation$$branch+0x3b4>
 800492c:	9006      	str	r0, [sp, #24]
 800492e:	6820      	ldr	r0, [r4, #0]
 8004930:	9007      	str	r0, [sp, #28]
 8004932:	2000      	movs	r0, #0
 8004934:	9002      	str	r0, [sp, #8]
 8004936:	2003      	movs	r0, #3
 8004938:	9001      	str	r0, [sp, #4]
 800493a:	9806      	ldr	r0, [sp, #24]
 800493c:	9000      	str	r0, [sp, #0]
 800493e:	ab07      	add	r3, sp, #28
 8004940:	e0cb      	b.n	8004ada <__iar_annotation$$branch+0x560>
 8004942:	2180      	movs	r1, #128	; 0x80
 8004944:	0209      	lsls	r1, r1, #8
 8004946:	8bea      	ldrh	r2, [r5, #30]
 8004948:	428a      	cmp	r2, r1
 800494a:	d100      	bne.n	800494e <__iar_annotation$$branch+0x3d4>
 800494c:	e35d      	b.n	800500a <__iar_annotation$$branch+0xa90>
 800494e:	6822      	ldr	r2, [r4, #0]
 8004950:	4010      	ands	r0, r2
 8004952:	2204      	movs	r2, #4
 8004954:	4302      	orrs	r2, r0
 8004956:	6022      	str	r2, [r4, #0]
 8004958:	4311      	orrs	r1, r2
 800495a:	6021      	str	r1, [r4, #0]
 800495c:	2001      	movs	r0, #1
 800495e:	686a      	ldr	r2, [r5, #4]
 8004960:	6812      	ldr	r2, [r2, #0]
 8004962:	0952      	lsrs	r2, r2, #5
 8004964:	4002      	ands	r2, r0
 8004966:	4ba6      	ldr	r3, [pc, #664]	; (8004c00 <__iar_annotation$$branch+0x686>)
 8004968:	400b      	ands	r3, r1
 800496a:	0351      	lsls	r1, r2, #13
 800496c:	4319      	orrs	r1, r3
 800496e:	6021      	str	r1, [r4, #0]
 8004970:	686a      	ldr	r2, [r5, #4]
 8004972:	6812      	ldr	r2, [r2, #0]
 8004974:	08d2      	lsrs	r2, r2, #3
 8004976:	4010      	ands	r0, r2
 8004978:	d152      	bne.n	8004a20 <__iar_annotation$$branch+0x4a6>
 800497a:	68e8      	ldr	r0, [r5, #12]
 800497c:	68c3      	ldr	r3, [r0, #12]
 800497e:	2b00      	cmp	r3, #0
 8004980:	d04e      	beq.n	8004a20 <__iar_annotation$$branch+0x4a6>
 8004982:	2707      	movs	r7, #7
 8004984:	0a0a      	lsrs	r2, r1, #8
 8004986:	403a      	ands	r2, r7
 8004988:	0c09      	lsrs	r1, r1, #16
 800498a:	7c28      	ldrb	r0, [r5, #16]
 800498c:	4798      	blx	r3
 800498e:	2803      	cmp	r0, #3
 8004990:	d041      	beq.n	8004a16 <__iar_annotation$$branch+0x49c>
 8004992:	280f      	cmp	r0, #15
 8004994:	d144      	bne.n	8004a20 <__iar_annotation$$branch+0x4a6>
 8004996:	6820      	ldr	r0, [r4, #0]
 8004998:	4006      	ands	r6, r0
 800499a:	2040      	movs	r0, #64	; 0x40
 800499c:	4330      	orrs	r0, r6
 800499e:	6020      	str	r0, [r4, #0]
 80049a0:	0a00      	lsrs	r0, r0, #8
 80049a2:	4007      	ands	r7, r0
 80049a4:	6968      	ldr	r0, [r5, #20]
 80049a6:	4940      	ldr	r1, [pc, #256]	; (8004aa8 <__iar_annotation$$branch+0x52e>)
 80049a8:	4001      	ands	r1, r0
 80049aa:	01b8      	lsls	r0, r7, #6
 80049ac:	4308      	orrs	r0, r1
 80049ae:	6168      	str	r0, [r5, #20]
 80049b0:	e03b      	b.n	8004a2a <__iar_annotation$$branch+0x4b0>
 80049b2:	2180      	movs	r1, #128	; 0x80
 80049b4:	0209      	lsls	r1, r1, #8
 80049b6:	8bea      	ldrh	r2, [r5, #30]
 80049b8:	428a      	cmp	r2, r1
 80049ba:	d04b      	beq.n	8004a54 <__iar_annotation$$branch+0x4da>
 80049bc:	6822      	ldr	r2, [r4, #0]
 80049be:	4010      	ands	r0, r2
 80049c0:	2205      	movs	r2, #5
 80049c2:	4302      	orrs	r2, r0
 80049c4:	6022      	str	r2, [r4, #0]
 80049c6:	4311      	orrs	r1, r2
 80049c8:	6021      	str	r1, [r4, #0]
 80049ca:	2001      	movs	r0, #1
 80049cc:	686a      	ldr	r2, [r5, #4]
 80049ce:	6812      	ldr	r2, [r2, #0]
 80049d0:	0952      	lsrs	r2, r2, #5
 80049d2:	4002      	ands	r2, r0
 80049d4:	4b8a      	ldr	r3, [pc, #552]	; (8004c00 <__iar_annotation$$branch+0x686>)
 80049d6:	400b      	ands	r3, r1
 80049d8:	0351      	lsls	r1, r2, #13
 80049da:	4319      	orrs	r1, r3
 80049dc:	6021      	str	r1, [r4, #0]
 80049de:	686a      	ldr	r2, [r5, #4]
 80049e0:	6812      	ldr	r2, [r2, #0]
 80049e2:	08d2      	lsrs	r2, r2, #3
 80049e4:	4010      	ands	r0, r2
 80049e6:	d11b      	bne.n	8004a20 <__iar_annotation$$branch+0x4a6>
 80049e8:	68e8      	ldr	r0, [r5, #12]
 80049ea:	6903      	ldr	r3, [r0, #16]
 80049ec:	2b00      	cmp	r3, #0
 80049ee:	d017      	beq.n	8004a20 <__iar_annotation$$branch+0x4a6>
 80049f0:	0548      	lsls	r0, r1, #21
 80049f2:	0f42      	lsrs	r2, r0, #29
 80049f4:	0c09      	lsrs	r1, r1, #16
 80049f6:	7c28      	ldrb	r0, [r5, #16]
 80049f8:	4798      	blx	r3
 80049fa:	2803      	cmp	r0, #3
 80049fc:	d00b      	beq.n	8004a16 <__iar_annotation$$branch+0x49c>
 80049fe:	280f      	cmp	r0, #15
 8004a00:	d10e      	bne.n	8004a20 <__iar_annotation$$branch+0x4a6>
 8004a02:	6820      	ldr	r0, [r4, #0]
 8004a04:	4006      	ands	r6, r0
 8004a06:	2040      	movs	r0, #64	; 0x40
 8004a08:	4330      	orrs	r0, r6
 8004a0a:	6020      	str	r0, [r4, #0]
 8004a0c:	6968      	ldr	r0, [r5, #20]
 8004a0e:	4926      	ldr	r1, [pc, #152]	; (8004aa8 <__iar_annotation$$branch+0x52e>)
 8004a10:	4001      	ands	r1, r0
 8004a12:	6169      	str	r1, [r5, #20]
 8004a14:	e009      	b.n	8004a2a <__iar_annotation$$branch+0x4b0>
 8004a16:	6820      	ldr	r0, [r4, #0]
 8004a18:	21c0      	movs	r1, #192	; 0xc0
 8004a1a:	4301      	orrs	r1, r0
 8004a1c:	6021      	str	r1, [r4, #0]
 8004a1e:	e004      	b.n	8004a2a <__iar_annotation$$branch+0x4b0>
 8004a20:	6820      	ldr	r0, [r4, #0]
 8004a22:	4006      	ands	r6, r0
 8004a24:	2080      	movs	r0, #128	; 0x80
 8004a26:	4330      	orrs	r0, r6
 8004a28:	6020      	str	r0, [r4, #0]
 8004a2a:	2000      	movs	r0, #0
 8004a2c:	9002      	str	r0, [sp, #8]
 8004a2e:	2003      	movs	r0, #3
 8004a30:	9001      	str	r0, [sp, #4]
 8004a32:	2001      	movs	r0, #1
 8004a34:	9000      	str	r0, [sp, #0]
 8004a36:	0023      	movs	r3, r4
 8004a38:	220f      	movs	r2, #15
 8004a3a:	2031      	movs	r0, #49	; 0x31
 8004a3c:	5c29      	ldrb	r1, [r5, r0]
 8004a3e:	0028      	movs	r0, r5
 8004a40:	f7fc fd91 	bl	8001566 <PE_Send_DataMessage>
 8004a44:	e04f      	b.n	8004ae6 <__iar_annotation$$branch+0x56c>
 8004a46:	2001      	movs	r0, #1
 8004a48:	4669      	mov	r1, sp
 8004a4a:	7308      	strb	r0, [r1, #12]
 8004a4c:	8be8      	ldrh	r0, [r5, #30]
 8004a4e:	2180      	movs	r1, #128	; 0x80
 8004a50:	0209      	lsls	r1, r1, #8
 8004a52:	4288      	cmp	r0, r1
 8004a54:	d100      	bne.n	8004a58 <__iar_annotation$$branch+0x4de>
 8004a56:	e3ab      	b.n	80051b0 <__iar_annotation$$branch+0xc36>
 8004a58:	68e8      	ldr	r0, [r5, #12]
 8004a5a:	6b47      	ldr	r7, [r0, #52]	; 0x34
 8004a5c:	2f00      	cmp	r7, #0
 8004a5e:	d02a      	beq.n	8004ab6 <__iar_annotation$$branch+0x53c>
 8004a60:	4868      	ldr	r0, [pc, #416]	; (8004c04 <__iar_annotation$$branch+0x68a>)
 8004a62:	182b      	adds	r3, r5, r0
 8004a64:	3018      	adds	r0, #24
 8004a66:	182a      	adds	r2, r5, r0
 8004a68:	7820      	ldrb	r0, [r4, #0]
 8004a6a:	06c1      	lsls	r1, r0, #27
 8004a6c:	0ec9      	lsrs	r1, r1, #27
 8004a6e:	7c28      	ldrb	r0, [r5, #16]
 8004a70:	47b8      	blx	r7
 8004a72:	2803      	cmp	r0, #3
 8004a74:	d01a      	beq.n	8004aac <__iar_annotation$$branch+0x532>
 8004a76:	280f      	cmp	r0, #15
 8004a78:	d11d      	bne.n	8004ab6 <__iar_annotation$$branch+0x53c>
 8004a7a:	6820      	ldr	r0, [r4, #0]
 8004a7c:	4006      	ands	r6, r0
 8004a7e:	2040      	movs	r0, #64	; 0x40
 8004a80:	4330      	orrs	r0, r6
 8004a82:	6020      	str	r0, [r4, #0]
 8004a84:	2200      	movs	r2, #0
 8004a86:	4668      	mov	r0, sp
 8004a88:	7b00      	ldrb	r0, [r0, #12]
 8004a8a:	495f      	ldr	r1, [pc, #380]	; (8004c08 <__iar_annotation$$branch+0x68e>)
 8004a8c:	5c69      	ldrb	r1, [r5, r1]
 8004a8e:	428a      	cmp	r2, r1
 8004a90:	d217      	bcs.n	8004ac2 <__iar_annotation$$branch+0x548>
 8004a92:	0091      	lsls	r1, r2, #2
 8004a94:	4b5b      	ldr	r3, [pc, #364]	; (8004c04 <__iar_annotation$$branch+0x68a>)
 8004a96:	18eb      	adds	r3, r5, r3
 8004a98:	585b      	ldr	r3, [r3, r1]
 8004a9a:	ae05      	add	r6, sp, #20
 8004a9c:	1d36      	adds	r6, r6, #4
 8004a9e:	5073      	str	r3, [r6, r1]
 8004aa0:	1c40      	adds	r0, r0, #1
 8004aa2:	1c52      	adds	r2, r2, #1
 8004aa4:	e7f1      	b.n	8004a8a <__iar_annotation$$branch+0x510>
 8004aa6:	bf00      	nop
 8004aa8:	fffffe3f 	.word	0xfffffe3f
 8004aac:	6820      	ldr	r0, [r4, #0]
 8004aae:	21c0      	movs	r1, #192	; 0xc0
 8004ab0:	4301      	orrs	r1, r0
 8004ab2:	6021      	str	r1, [r4, #0]
 8004ab4:	e007      	b.n	8004ac6 <__iar_annotation$$branch+0x54c>
 8004ab6:	6820      	ldr	r0, [r4, #0]
 8004ab8:	4006      	ands	r6, r0
 8004aba:	2080      	movs	r0, #128	; 0x80
 8004abc:	4330      	orrs	r0, r6
 8004abe:	6020      	str	r0, [r4, #0]
 8004ac0:	e001      	b.n	8004ac6 <__iar_annotation$$branch+0x54c>
 8004ac2:	4669      	mov	r1, sp
 8004ac4:	7308      	strb	r0, [r1, #12]
 8004ac6:	6820      	ldr	r0, [r4, #0]
 8004ac8:	9005      	str	r0, [sp, #20]
 8004aca:	2000      	movs	r0, #0
 8004acc:	9002      	str	r0, [sp, #8]
 8004ace:	2003      	movs	r0, #3
 8004ad0:	9001      	str	r0, [sp, #4]
 8004ad2:	4668      	mov	r0, sp
 8004ad4:	7b00      	ldrb	r0, [r0, #12]
 8004ad6:	9000      	str	r0, [sp, #0]
 8004ad8:	ab05      	add	r3, sp, #20
 8004ada:	220f      	movs	r2, #15
 8004adc:	2031      	movs	r0, #49	; 0x31
 8004ade:	5c29      	ldrb	r1, [r5, r0]
 8004ae0:	0028      	movs	r0, r5
 8004ae2:	f7fc fd40 	bl	8001566 <PE_Send_DataMessage>
 8004ae6:	e3b9      	b.n	800525c <__iar_annotation$$branch+0xce2>
 8004ae8:	2101      	movs	r1, #1
 8004aea:	6822      	ldr	r2, [r4, #0]
 8004aec:	4010      	ands	r0, r2
 8004aee:	4308      	orrs	r0, r1
 8004af0:	6020      	str	r0, [r4, #0]
 8004af2:	03ca      	lsls	r2, r1, #15
 8004af4:	4302      	orrs	r2, r0
 8004af6:	6022      	str	r2, [r4, #0]
 8004af8:	6868      	ldr	r0, [r5, #4]
 8004afa:	6800      	ldr	r0, [r0, #0]
 8004afc:	0943      	lsrs	r3, r0, #5
 8004afe:	400b      	ands	r3, r1
 8004b00:	483f      	ldr	r0, [pc, #252]	; (8004c00 <__iar_annotation$$branch+0x686>)
 8004b02:	4010      	ands	r0, r2
 8004b04:	035a      	lsls	r2, r3, #13
 8004b06:	4302      	orrs	r2, r0
 8004b08:	6022      	str	r2, [r4, #0]
 8004b0a:	48bf      	ldr	r0, [pc, #764]	; (8004e08 <__iar_annotation$$branch+0x88e>)
 8004b0c:	4010      	ands	r0, r2
 8004b0e:	6020      	str	r0, [r4, #0]
 8004b10:	4006      	ands	r6, r0
 8004b12:	6026      	str	r6, [r4, #0]
 8004b14:	b2b0      	uxth	r0, r6
 8004b16:	22ff      	movs	r2, #255	; 0xff
 8004b18:	0612      	lsls	r2, r2, #24
 8004b1a:	4302      	orrs	r2, r0
 8004b1c:	6022      	str	r2, [r4, #0]
 8004b1e:	6868      	ldr	r0, [r5, #4]
 8004b20:	6800      	ldr	r0, [r0, #0]
 8004b22:	0880      	lsrs	r0, r0, #2
 8004b24:	4001      	ands	r1, r0
 8004b26:	d003      	beq.n	8004b30 <__iar_annotation$$branch+0x5b6>
 8004b28:	6968      	ldr	r0, [r5, #20]
 8004b2a:	0741      	lsls	r1, r0, #29
 8004b2c:	0fc8      	lsrs	r0, r1, #31
 8004b2e:	e000      	b.n	8004b32 <__iar_annotation$$branch+0x5b8>
 8004b30:	2002      	movs	r0, #2
 8004b32:	9002      	str	r0, [sp, #8]
 8004b34:	2087      	movs	r0, #135	; 0x87
 8004b36:	9001      	str	r0, [sp, #4]
 8004b38:	2001      	movs	r0, #1
 8004b3a:	9000      	str	r0, [sp, #0]
 8004b3c:	0023      	movs	r3, r4
 8004b3e:	220f      	movs	r2, #15
 8004b40:	2031      	movs	r0, #49	; 0x31
 8004b42:	5c29      	ldrb	r1, [r5, r0]
 8004b44:	0028      	movs	r0, r5
 8004b46:	f7fc fd0e 	bl	8001566 <PE_Send_DataMessage>
 8004b4a:	2800      	cmp	r0, #0
 8004b4c:	d1cb      	bne.n	8004ae6 <__iar_annotation$$branch+0x56c>
 8004b4e:	2050      	movs	r0, #80	; 0x50
 8004b50:	e0e8      	b.n	8004d24 <__iar_annotation$$branch+0x7aa>
 8004b52:	2031      	movs	r0, #49	; 0x31
 8004b54:	5c28      	ldrb	r0, [r5, r0]
 8004b56:	f7fb ff37 	bl	80009c8 <PE_Convert_SOPRxEvent>
 8004b5a:	991c      	ldr	r1, [sp, #112]	; 0x70
 8004b5c:	7809      	ldrb	r1, [r1, #0]
 8004b5e:	4281      	cmp	r1, r0
 8004b60:	d000      	beq.n	8004b64 <__iar_annotation$$branch+0x5ea>
 8004b62:	e245      	b.n	8004ff0 <__iar_annotation$$branch+0xa76>
 8004b64:	8ea8      	ldrh	r0, [r5, #52]	; 0x34
 8004b66:	0bc2      	lsrs	r2, r0, #15
 8004b68:	d176      	bne.n	8004c58 <__iar_annotation$$branch+0x6de>
 8004b6a:	0b02      	lsrs	r2, r0, #12
 8004b6c:	0752      	lsls	r2, r2, #29
 8004b6e:	d012      	beq.n	8004b96 <__iar_annotation$$branch+0x61c>
 8004b70:	06c0      	lsls	r0, r0, #27
 8004b72:	0ec0      	lsrs	r0, r0, #27
 8004b74:	280f      	cmp	r0, #15
 8004b76:	d16f      	bne.n	8004c58 <__iar_annotation$$branch+0x6de>
 8004b78:	2914      	cmp	r1, #20
 8004b7a:	d005      	beq.n	8004b88 <__iar_annotation$$branch+0x60e>
 8004b7c:	2014      	movs	r0, #20
 8004b7e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8004b80:	7008      	strb	r0, [r1, #0]
 8004b82:	0028      	movs	r0, r5
 8004b84:	f7fb fee7 	bl	8000956 <PE_Clear_RxEvent>
 8004b88:	6ba8      	ldr	r0, [r5, #56]	; 0x38
 8004b8a:	7881      	ldrb	r1, [r0, #2]
 8004b8c:	06ca      	lsls	r2, r1, #27
 8004b8e:	0ed2      	lsrs	r2, r2, #27
 8004b90:	2a01      	cmp	r2, #1
 8004b92:	d161      	bne.n	8004c58 <__iar_annotation$$branch+0x6de>
 8004b94:	098c      	lsrs	r4, r1, #6
 8004b96:	d100      	bne.n	8004b9a <__iar_annotation$$branch+0x620>
 8004b98:	e22a      	b.n	8004ff0 <__iar_annotation$$branch+0xa76>
 8004b9a:	68e9      	ldr	r1, [r5, #12]
 8004b9c:	6949      	ldr	r1, [r1, #20]
 8004b9e:	2900      	cmp	r1, #0
 8004ba0:	d100      	bne.n	8004ba4 <__iar_annotation$$branch+0x62a>
 8004ba2:	e2e3      	b.n	800516c <__iar_annotation$$branch+0xbf2>
 8004ba4:	2103      	movs	r1, #3
 8004ba6:	4021      	ands	r1, r4
 8004ba8:	2901      	cmp	r1, #1
 8004baa:	d000      	beq.n	8004bae <__iar_annotation$$branch+0x634>
 8004bac:	e2de      	b.n	800516c <__iar_annotation$$branch+0xbf2>
 8004bae:	aa0b      	add	r2, sp, #44	; 0x2c
 8004bb0:	1d81      	adds	r1, r0, #6
 8004bb2:	7c28      	ldrb	r0, [r5, #16]
 8004bb4:	f000 fc04 	bl	80053c0 <PE_SVDM_CheckIdentity>
 8004bb8:	2800      	cmp	r0, #0
 8004bba:	d108      	bne.n	8004bce <__iar_annotation$$branch+0x654>
 8004bbc:	ab0b      	add	r3, sp, #44	; 0x2c
 8004bbe:	2201      	movs	r2, #1
 8004bc0:	2100      	movs	r1, #0
 8004bc2:	7c28      	ldrb	r0, [r5, #16]
 8004bc4:	68ec      	ldr	r4, [r5, #12]
 8004bc6:	6964      	ldr	r4, [r4, #20]
 8004bc8:	47a0      	blx	r4
 8004bca:	2151      	movs	r1, #81	; 0x51
 8004bcc:	e0ec      	b.n	8004da8 <__iar_annotation$$branch+0x82e>
 8004bce:	211b      	movs	r1, #27
 8004bd0:	e0ea      	b.n	8004da8 <__iar_annotation$$branch+0x82e>
 8004bd2:	6821      	ldr	r1, [r4, #0]
 8004bd4:	400e      	ands	r6, r1
 8004bd6:	6026      	str	r6, [r4, #0]
 8004bd8:	2102      	movs	r1, #2
 8004bda:	4030      	ands	r0, r6
 8004bdc:	4308      	orrs	r0, r1
 8004bde:	6020      	str	r0, [r4, #0]
 8004be0:	b280      	uxth	r0, r0
 8004be2:	22ff      	movs	r2, #255	; 0xff
 8004be4:	0612      	lsls	r2, r2, #24
 8004be6:	4302      	orrs	r2, r0
 8004be8:	6022      	str	r2, [r4, #0]
 8004bea:	0388      	lsls	r0, r1, #14
 8004bec:	4310      	orrs	r0, r2
 8004bee:	6020      	str	r0, [r4, #0]
 8004bf0:	2201      	movs	r2, #1
 8004bf2:	686b      	ldr	r3, [r5, #4]
 8004bf4:	681b      	ldr	r3, [r3, #0]
 8004bf6:	095e      	lsrs	r6, r3, #5
 8004bf8:	4016      	ands	r6, r2
 8004bfa:	4b01      	ldr	r3, [pc, #4]	; (8004c00 <__iar_annotation$$branch+0x686>)
 8004bfc:	e006      	b.n	8004c0c <__iar_annotation$$branch+0x692>
 8004bfe:	bf00      	nop
 8004c00:	ffff9fff 	.word	0xffff9fff
 8004c04:	00000494 	.word	0x00000494
 8004c08:	000004ac 	.word	0x000004ac
 8004c0c:	4003      	ands	r3, r0
 8004c0e:	0370      	lsls	r0, r6, #13
 8004c10:	4318      	orrs	r0, r3
 8004c12:	6020      	str	r0, [r4, #0]
 8004c14:	4b7c      	ldr	r3, [pc, #496]	; (8004e08 <__iar_annotation$$branch+0x88e>)
 8004c16:	4003      	ands	r3, r0
 8004c18:	6023      	str	r3, [r4, #0]
 8004c1a:	6868      	ldr	r0, [r5, #4]
 8004c1c:	6800      	ldr	r0, [r0, #0]
 8004c1e:	0880      	lsrs	r0, r0, #2
 8004c20:	4002      	ands	r2, r0
 8004c22:	d002      	beq.n	8004c2a <__iar_annotation$$branch+0x6b0>
 8004c24:	6968      	ldr	r0, [r5, #20]
 8004c26:	0740      	lsls	r0, r0, #29
 8004c28:	0fc1      	lsrs	r1, r0, #31
 8004c2a:	9102      	str	r1, [sp, #8]
 8004c2c:	2089      	movs	r0, #137	; 0x89
 8004c2e:	9001      	str	r0, [sp, #4]
 8004c30:	2001      	movs	r0, #1
 8004c32:	9000      	str	r0, [sp, #0]
 8004c34:	0023      	movs	r3, r4
 8004c36:	220f      	movs	r2, #15
 8004c38:	2031      	movs	r0, #49	; 0x31
 8004c3a:	5c29      	ldrb	r1, [r5, r0]
 8004c3c:	0028      	movs	r0, r5
 8004c3e:	f7fc fc92 	bl	8001566 <PE_Send_DataMessage>
 8004c42:	2800      	cmp	r0, #0
 8004c44:	d172      	bne.n	8004d2c <__iar_annotation$$branch+0x7b2>
 8004c46:	2052      	movs	r0, #82	; 0x52
 8004c48:	e06c      	b.n	8004d24 <__iar_annotation$$branch+0x7aa>
 8004c4a:	2031      	movs	r0, #49	; 0x31
 8004c4c:	5c28      	ldrb	r0, [r5, r0]
 8004c4e:	f7fb febb 	bl	80009c8 <PE_Convert_SOPRxEvent>
 8004c52:	991c      	ldr	r1, [sp, #112]	; 0x70
 8004c54:	7809      	ldrb	r1, [r1, #0]
 8004c56:	4281      	cmp	r1, r0
 8004c58:	d000      	beq.n	8004c5c <__iar_annotation$$branch+0x6e2>
 8004c5a:	e1c9      	b.n	8004ff0 <__iar_annotation$$branch+0xa76>
 8004c5c:	8ea8      	ldrh	r0, [r5, #52]	; 0x34
 8004c5e:	0bc2      	lsrs	r2, r0, #15
 8004c60:	d1fa      	bne.n	8004c58 <__iar_annotation$$branch+0x6de>
 8004c62:	0b02      	lsrs	r2, r0, #12
 8004c64:	0752      	lsls	r2, r2, #29
 8004c66:	d06f      	beq.n	8004d48 <__iar_annotation$$branch+0x7ce>
 8004c68:	06c0      	lsls	r0, r0, #27
 8004c6a:	0ec0      	lsrs	r0, r0, #27
 8004c6c:	280f      	cmp	r0, #15
 8004c6e:	d1f3      	bne.n	8004c58 <__iar_annotation$$branch+0x6de>
 8004c70:	2914      	cmp	r1, #20
 8004c72:	d005      	beq.n	8004c80 <__iar_annotation$$branch+0x706>
 8004c74:	2014      	movs	r0, #20
 8004c76:	991c      	ldr	r1, [sp, #112]	; 0x70
 8004c78:	7008      	strb	r0, [r1, #0]
 8004c7a:	0028      	movs	r0, r5
 8004c7c:	f7fb fe6b 	bl	8000956 <PE_Clear_RxEvent>
 8004c80:	6ba8      	ldr	r0, [r5, #56]	; 0x38
 8004c82:	7881      	ldrb	r1, [r0, #2]
 8004c84:	06ca      	lsls	r2, r1, #27
 8004c86:	0ed2      	lsrs	r2, r2, #27
 8004c88:	2a02      	cmp	r2, #2
 8004c8a:	d1e5      	bne.n	8004c58 <__iar_annotation$$branch+0x6de>
 8004c8c:	060c      	lsls	r4, r1, #24
 8004c8e:	d05b      	beq.n	8004d48 <__iar_annotation$$branch+0x7ce>
 8004c90:	68e9      	ldr	r1, [r5, #12]
 8004c92:	6989      	ldr	r1, [r1, #24]
 8004c94:	2900      	cmp	r1, #0
 8004c96:	d100      	bne.n	8004c9a <__iar_annotation$$branch+0x720>
 8004c98:	e268      	b.n	800516c <__iar_annotation$$branch+0xbf2>
 8004c9a:	aa0b      	add	r2, sp, #44	; 0x2c
 8004c9c:	1d81      	adds	r1, r0, #6
 8004c9e:	7c28      	ldrb	r0, [r5, #16]
 8004ca0:	f000 fc55 	bl	800554e <PE_SVDM_CheckSVIDs>
 8004ca4:	ab0b      	add	r3, sp, #44	; 0x2c
 8004ca6:	0fa2      	lsrs	r2, r4, #30
 8004ca8:	2031      	movs	r0, #49	; 0x31
 8004caa:	5c29      	ldrb	r1, [r5, r0]
 8004cac:	7c28      	ldrb	r0, [r5, #16]
 8004cae:	68ec      	ldr	r4, [r5, #12]
 8004cb0:	69a4      	ldr	r4, [r4, #24]
 8004cb2:	47a0      	blx	r4
 8004cb4:	2153      	movs	r1, #83	; 0x53
 8004cb6:	e077      	b.n	8004da8 <__iar_annotation$$branch+0x82e>
 8004cb8:	6821      	ldr	r1, [r4, #0]
 8004cba:	400e      	ands	r6, r1
 8004cbc:	6026      	str	r6, [r4, #0]
 8004cbe:	4030      	ands	r0, r6
 8004cc0:	2103      	movs	r1, #3
 8004cc2:	4301      	orrs	r1, r0
 8004cc4:	6021      	str	r1, [r4, #0]
 8004cc6:	8920      	ldrh	r0, [r4, #8]
 8004cc8:	b28a      	uxth	r2, r1
 8004cca:	0401      	lsls	r1, r0, #16
 8004ccc:	4311      	orrs	r1, r2
 8004cce:	6021      	str	r1, [r4, #0]
 8004cd0:	2080      	movs	r0, #128	; 0x80
 8004cd2:	0200      	lsls	r0, r0, #8
 8004cd4:	4308      	orrs	r0, r1
 8004cd6:	6020      	str	r0, [r4, #0]
 8004cd8:	2101      	movs	r1, #1
 8004cda:	686a      	ldr	r2, [r5, #4]
 8004cdc:	6812      	ldr	r2, [r2, #0]
 8004cde:	0952      	lsrs	r2, r2, #5
 8004ce0:	400a      	ands	r2, r1
 8004ce2:	4b9e      	ldr	r3, [pc, #632]	; (8004f5c <__iar_annotation$$branch+0x9e2>)
 8004ce4:	4003      	ands	r3, r0
 8004ce6:	0350      	lsls	r0, r2, #13
 8004ce8:	4318      	orrs	r0, r3
 8004cea:	6020      	str	r0, [r4, #0]
 8004cec:	4a46      	ldr	r2, [pc, #280]	; (8004e08 <__iar_annotation$$branch+0x88e>)
 8004cee:	4002      	ands	r2, r0
 8004cf0:	6022      	str	r2, [r4, #0]
 8004cf2:	6868      	ldr	r0, [r5, #4]
 8004cf4:	6800      	ldr	r0, [r0, #0]
 8004cf6:	0880      	lsrs	r0, r0, #2
 8004cf8:	4001      	ands	r1, r0
 8004cfa:	d003      	beq.n	8004d04 <__iar_annotation$$branch+0x78a>
 8004cfc:	6968      	ldr	r0, [r5, #20]
 8004cfe:	0741      	lsls	r1, r0, #29
 8004d00:	0fc8      	lsrs	r0, r1, #31
 8004d02:	e000      	b.n	8004d06 <__iar_annotation$$branch+0x78c>
 8004d04:	2002      	movs	r0, #2
 8004d06:	9002      	str	r0, [sp, #8]
 8004d08:	208b      	movs	r0, #139	; 0x8b
 8004d0a:	9001      	str	r0, [sp, #4]
 8004d0c:	2001      	movs	r0, #1
 8004d0e:	9000      	str	r0, [sp, #0]
 8004d10:	0023      	movs	r3, r4
 8004d12:	220f      	movs	r2, #15
 8004d14:	2031      	movs	r0, #49	; 0x31
 8004d16:	5c29      	ldrb	r1, [r5, r0]
 8004d18:	0028      	movs	r0, r5
 8004d1a:	f7fc fc24 	bl	8001566 <PE_Send_DataMessage>
 8004d1e:	2800      	cmp	r0, #0
 8004d20:	d104      	bne.n	8004d2c <__iar_annotation$$branch+0x7b2>
 8004d22:	2053      	movs	r0, #83	; 0x53
 8004d24:	7728      	strb	r0, [r5, #28]
 8004d26:	488e      	ldr	r0, [pc, #568]	; (8004f60 <__iar_annotation$$branch+0x9e6>)
 8004d28:	83e8      	strh	r0, [r5, #30]
 8004d2a:	9704      	str	r7, [sp, #16]
 8004d2c:	e296      	b.n	800525c <__iar_annotation$$branch+0xce2>
 8004d2e:	2031      	movs	r0, #49	; 0x31
 8004d30:	5c28      	ldrb	r0, [r5, r0]
 8004d32:	f7fb fe49 	bl	80009c8 <PE_Convert_SOPRxEvent>
 8004d36:	991c      	ldr	r1, [sp, #112]	; 0x70
 8004d38:	7809      	ldrb	r1, [r1, #0]
 8004d3a:	4281      	cmp	r1, r0
 8004d3c:	d18c      	bne.n	8004c58 <__iar_annotation$$branch+0x6de>
 8004d3e:	8ea8      	ldrh	r0, [r5, #52]	; 0x34
 8004d40:	0bc2      	lsrs	r2, r0, #15
 8004d42:	d189      	bne.n	8004c58 <__iar_annotation$$branch+0x6de>
 8004d44:	0b02      	lsrs	r2, r0, #12
 8004d46:	0752      	lsls	r2, r2, #29
 8004d48:	d100      	bne.n	8004d4c <__iar_annotation$$branch+0x7d2>
 8004d4a:	e151      	b.n	8004ff0 <__iar_annotation$$branch+0xa76>
 8004d4c:	06c0      	lsls	r0, r0, #27
 8004d4e:	0ec0      	lsrs	r0, r0, #27
 8004d50:	280f      	cmp	r0, #15
 8004d52:	d000      	beq.n	8004d56 <__iar_annotation$$branch+0x7dc>
 8004d54:	e14c      	b.n	8004ff0 <__iar_annotation$$branch+0xa76>
 8004d56:	2914      	cmp	r1, #20
 8004d58:	d005      	beq.n	8004d66 <__iar_annotation$$branch+0x7ec>
 8004d5a:	2014      	movs	r0, #20
 8004d5c:	991c      	ldr	r1, [sp, #112]	; 0x70
 8004d5e:	7008      	strb	r0, [r1, #0]
 8004d60:	0028      	movs	r0, r5
 8004d62:	f7fb fdf8 	bl	8000956 <PE_Clear_RxEvent>
 8004d66:	6ba8      	ldr	r0, [r5, #56]	; 0x38
 8004d68:	7881      	ldrb	r1, [r0, #2]
 8004d6a:	06ca      	lsls	r2, r1, #27
 8004d6c:	0ed2      	lsrs	r2, r2, #27
 8004d6e:	2a03      	cmp	r2, #3
 8004d70:	d1ef      	bne.n	8004d52 <__iar_annotation$$branch+0x7d8>
 8004d72:	098e      	lsrs	r6, r1, #6
 8004d74:	d0e8      	beq.n	8004d48 <__iar_annotation$$branch+0x7ce>
 8004d76:	68e9      	ldr	r1, [r5, #12]
 8004d78:	69c9      	ldr	r1, [r1, #28]
 8004d7a:	2900      	cmp	r1, #0
 8004d7c:	d017      	beq.n	8004dae <__iar_annotation$$branch+0x834>
 8004d7e:	ab0b      	add	r3, sp, #44	; 0x2c
 8004d80:	1d82      	adds	r2, r0, #6
 8004d82:	6820      	ldr	r0, [r4, #0]
 8004d84:	0c01      	lsrs	r1, r0, #16
 8004d86:	7c28      	ldrb	r0, [r5, #16]
 8004d88:	f000 fc22 	bl	80055d0 <PE_SVDM_CheckModes>
 8004d8c:	2403      	movs	r4, #3
 8004d8e:	ab0b      	add	r3, sp, #44	; 0x2c
 8004d90:	2203      	movs	r2, #3
 8004d92:	4032      	ands	r2, r6
 8004d94:	2031      	movs	r0, #49	; 0x31
 8004d96:	5c29      	ldrb	r1, [r5, r0]
 8004d98:	7c28      	ldrb	r0, [r5, #16]
 8004d9a:	68ef      	ldr	r7, [r5, #12]
 8004d9c:	69ff      	ldr	r7, [r7, #28]
 8004d9e:	47b8      	blx	r7
 8004da0:	4034      	ands	r4, r6
 8004da2:	2c01      	cmp	r4, #1
 8004da4:	d103      	bne.n	8004dae <__iar_annotation$$branch+0x834>
 8004da6:	2154      	movs	r1, #84	; 0x54
 8004da8:	7c28      	ldrb	r0, [r5, #16]
 8004daa:	f7fb fb69 	bl	8000480 <USBPD_PE_Notification>
 8004dae:	e1dd      	b.n	800516c <__iar_annotation$$branch+0xbf2>
 8004db0:	6821      	ldr	r1, [r4, #0]
 8004db2:	400e      	ands	r6, r1
 8004db4:	6026      	str	r6, [r4, #0]
 8004db6:	4030      	ands	r0, r6
 8004db8:	2104      	movs	r1, #4
 8004dba:	4301      	orrs	r1, r0
 8004dbc:	6021      	str	r1, [r4, #0]
 8004dbe:	8920      	ldrh	r0, [r4, #8]
 8004dc0:	b289      	uxth	r1, r1
 8004dc2:	0400      	lsls	r0, r0, #16
 8004dc4:	4308      	orrs	r0, r1
 8004dc6:	6020      	str	r0, [r4, #0]
 8004dc8:	2180      	movs	r1, #128	; 0x80
 8004dca:	0209      	lsls	r1, r1, #8
 8004dcc:	4301      	orrs	r1, r0
 8004dce:	6021      	str	r1, [r4, #0]
 8004dd0:	2001      	movs	r0, #1
 8004dd2:	686a      	ldr	r2, [r5, #4]
 8004dd4:	6812      	ldr	r2, [r2, #0]
 8004dd6:	0952      	lsrs	r2, r2, #5
 8004dd8:	4002      	ands	r2, r0
 8004dda:	4b60      	ldr	r3, [pc, #384]	; (8004f5c <__iar_annotation$$branch+0x9e2>)
 8004ddc:	400b      	ands	r3, r1
 8004dde:	0351      	lsls	r1, r2, #13
 8004de0:	4319      	orrs	r1, r3
 8004de2:	6021      	str	r1, [r4, #0]
 8004de4:	696a      	ldr	r2, [r5, #20]
 8004de6:	05d2      	lsls	r2, r2, #23
 8004de8:	0f52      	lsrs	r2, r2, #29
 8004dea:	4b07      	ldr	r3, [pc, #28]	; (8004e08 <__iar_annotation$$branch+0x88e>)
 8004dec:	400b      	ands	r3, r1
 8004dee:	0211      	lsls	r1, r2, #8
 8004df0:	4319      	orrs	r1, r3
 8004df2:	6021      	str	r1, [r4, #0]
 8004df4:	6869      	ldr	r1, [r5, #4]
 8004df6:	6809      	ldr	r1, [r1, #0]
 8004df8:	0889      	lsrs	r1, r1, #2
 8004dfa:	4008      	ands	r0, r1
 8004dfc:	d006      	beq.n	8004e0c <__iar_annotation$$branch+0x892>
 8004dfe:	6968      	ldr	r0, [r5, #20]
 8004e00:	0741      	lsls	r1, r0, #29
 8004e02:	0fc8      	lsrs	r0, r1, #31
 8004e04:	e003      	b.n	8004e0e <__iar_annotation$$branch+0x894>
 8004e06:	bf00      	nop
 8004e08:	fffff8ff 	.word	0xfffff8ff
 8004e0c:	2002      	movs	r0, #2
 8004e0e:	9002      	str	r0, [sp, #8]
 8004e10:	208c      	movs	r0, #140	; 0x8c
 8004e12:	9001      	str	r0, [sp, #4]
 8004e14:	2001      	movs	r0, #1
 8004e16:	9000      	str	r0, [sp, #0]
 8004e18:	0023      	movs	r3, r4
 8004e1a:	220f      	movs	r2, #15
 8004e1c:	2031      	movs	r0, #49	; 0x31
 8004e1e:	5c29      	ldrb	r1, [r5, r0]
 8004e20:	0028      	movs	r0, r5
 8004e22:	f7fc fba0 	bl	8001566 <PE_Send_DataMessage>
 8004e26:	2800      	cmp	r0, #0
 8004e28:	d000      	beq.n	8004e2c <__iar_annotation$$branch+0x8b2>
 8004e2a:	e217      	b.n	800525c <__iar_annotation$$branch+0xce2>
 8004e2c:	2054      	movs	r0, #84	; 0x54
 8004e2e:	7728      	strb	r0, [r5, #28]
 8004e30:	2134      	movs	r1, #52	; 0x34
 8004e32:	e08c      	b.n	8004f4e <__iar_annotation$$branch+0x9d4>
 8004e34:	2634      	movs	r6, #52	; 0x34
 8004e36:	2031      	movs	r0, #49	; 0x31
 8004e38:	5c28      	ldrb	r0, [r5, r0]
 8004e3a:	f7fb fdc5 	bl	80009c8 <PE_Convert_SOPRxEvent>
 8004e3e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8004e40:	7809      	ldrb	r1, [r1, #0]
 8004e42:	4281      	cmp	r1, r0
 8004e44:	d144      	bne.n	8004ed0 <__iar_annotation$$branch+0x956>
 8004e46:	8ea8      	ldrh	r0, [r5, #52]	; 0x34
 8004e48:	0bc2      	lsrs	r2, r0, #15
 8004e4a:	d141      	bne.n	8004ed0 <__iar_annotation$$branch+0x956>
 8004e4c:	2707      	movs	r7, #7
 8004e4e:	0b02      	lsrs	r2, r0, #12
 8004e50:	423a      	tst	r2, r7
 8004e52:	d03d      	beq.n	8004ed0 <__iar_annotation$$branch+0x956>
 8004e54:	06c0      	lsls	r0, r0, #27
 8004e56:	0ec0      	lsrs	r0, r0, #27
 8004e58:	280f      	cmp	r0, #15
 8004e5a:	d139      	bne.n	8004ed0 <__iar_annotation$$branch+0x956>
 8004e5c:	2914      	cmp	r1, #20
 8004e5e:	d005      	beq.n	8004e6c <__iar_annotation$$branch+0x8f2>
 8004e60:	2014      	movs	r0, #20
 8004e62:	991c      	ldr	r1, [sp, #112]	; 0x70
 8004e64:	7008      	strb	r0, [r1, #0]
 8004e66:	0028      	movs	r0, r5
 8004e68:	f7fb fd75 	bl	8000956 <PE_Clear_RxEvent>
 8004e6c:	2000      	movs	r0, #0
 8004e6e:	7728      	strb	r0, [r5, #28]
 8004e70:	6ba8      	ldr	r0, [r5, #56]	; 0x38
 8004e72:	7880      	ldrb	r0, [r0, #2]
 8004e74:	06c1      	lsls	r1, r0, #27
 8004e76:	0ec9      	lsrs	r1, r1, #27
 8004e78:	2904      	cmp	r1, #4
 8004e7a:	d129      	bne.n	8004ed0 <__iar_annotation$$branch+0x956>
 8004e7c:	0980      	lsrs	r0, r0, #6
 8004e7e:	d027      	beq.n	8004ed0 <__iar_annotation$$branch+0x956>
 8004e80:	9001      	str	r0, [sp, #4]
 8004e82:	488f      	ldr	r0, [pc, #572]	; (80050c0 <__iar_annotation$$branch+0xb46>)
 8004e84:	9901      	ldr	r1, [sp, #4]
 8004e86:	2901      	cmp	r1, #1
 8004e88:	d004      	beq.n	8004e94 <__iar_annotation$$branch+0x91a>
 8004e8a:	d30e      	bcc.n	8004eaa <__iar_annotation$$branch+0x930>
 8004e8c:	2903      	cmp	r1, #3
 8004e8e:	d008      	beq.n	8004ea2 <__iar_annotation$$branch+0x928>
 8004e90:	d302      	bcc.n	8004e98 <__iar_annotation$$branch+0x91e>
 8004e92:	e00a      	b.n	8004eaa <__iar_annotation$$branch+0x930>
 8004e94:	2635      	movs	r6, #53	; 0x35
 8004e96:	e008      	b.n	8004eaa <__iar_annotation$$branch+0x930>
 8004e98:	6969      	ldr	r1, [r5, #20]
 8004e9a:	4008      	ands	r0, r1
 8004e9c:	6168      	str	r0, [r5, #20]
 8004e9e:	2636      	movs	r6, #54	; 0x36
 8004ea0:	e003      	b.n	8004eaa <__iar_annotation$$branch+0x930>
 8004ea2:	6969      	ldr	r1, [r5, #20]
 8004ea4:	4008      	ands	r0, r1
 8004ea6:	6168      	str	r0, [r5, #20]
 8004ea8:	2637      	movs	r6, #55	; 0x37
 8004eaa:	0031      	movs	r1, r6
 8004eac:	7c28      	ldrb	r0, [r5, #16]
 8004eae:	f7fb fae7 	bl	8000480 <USBPD_PE_Notification>
 8004eb2:	68e8      	ldr	r0, [r5, #12]
 8004eb4:	6a06      	ldr	r6, [r0, #32]
 8004eb6:	2e00      	cmp	r6, #0
 8004eb8:	d009      	beq.n	8004ece <__iar_annotation$$branch+0x954>
 8004eba:	6820      	ldr	r0, [r4, #0]
 8004ebc:	0a01      	lsrs	r1, r0, #8
 8004ebe:	400f      	ands	r7, r1
 8004ec0:	9700      	str	r7, [sp, #0]
 8004ec2:	0c03      	lsrs	r3, r0, #16
 8004ec4:	9a01      	ldr	r2, [sp, #4]
 8004ec6:	2031      	movs	r0, #49	; 0x31
 8004ec8:	5c29      	ldrb	r1, [r5, r0]
 8004eca:	7c28      	ldrb	r0, [r5, #16]
 8004ecc:	47b0      	blx	r6
 8004ece:	e14d      	b.n	800516c <__iar_annotation$$branch+0xbf2>
 8004ed0:	5da8      	ldrb	r0, [r5, r6]
 8004ed2:	e08f      	b.n	8004ff4 <__iar_annotation$$branch+0xa7a>
 8004ed4:	6821      	ldr	r1, [r4, #0]
 8004ed6:	400e      	ands	r6, r1
 8004ed8:	6026      	str	r6, [r4, #0]
 8004eda:	4030      	ands	r0, r6
 8004edc:	2105      	movs	r1, #5
 8004ede:	4301      	orrs	r1, r0
 8004ee0:	6021      	str	r1, [r4, #0]
 8004ee2:	8920      	ldrh	r0, [r4, #8]
 8004ee4:	b289      	uxth	r1, r1
 8004ee6:	0400      	lsls	r0, r0, #16
 8004ee8:	4308      	orrs	r0, r1
 8004eea:	6020      	str	r0, [r4, #0]
 8004eec:	2180      	movs	r1, #128	; 0x80
 8004eee:	0209      	lsls	r1, r1, #8
 8004ef0:	4301      	orrs	r1, r0
 8004ef2:	6021      	str	r1, [r4, #0]
 8004ef4:	2001      	movs	r0, #1
 8004ef6:	686a      	ldr	r2, [r5, #4]
 8004ef8:	6812      	ldr	r2, [r2, #0]
 8004efa:	0952      	lsrs	r2, r2, #5
 8004efc:	4002      	ands	r2, r0
 8004efe:	4b17      	ldr	r3, [pc, #92]	; (8004f5c <__iar_annotation$$branch+0x9e2>)
 8004f00:	400b      	ands	r3, r1
 8004f02:	0351      	lsls	r1, r2, #13
 8004f04:	4319      	orrs	r1, r3
 8004f06:	6021      	str	r1, [r4, #0]
 8004f08:	696a      	ldr	r2, [r5, #20]
 8004f0a:	05d2      	lsls	r2, r2, #23
 8004f0c:	0f52      	lsrs	r2, r2, #29
 8004f0e:	4b6d      	ldr	r3, [pc, #436]	; (80050c4 <__iar_annotation$$branch+0xb4a>)
 8004f10:	400b      	ands	r3, r1
 8004f12:	0211      	lsls	r1, r2, #8
 8004f14:	4319      	orrs	r1, r3
 8004f16:	6021      	str	r1, [r4, #0]
 8004f18:	6869      	ldr	r1, [r5, #4]
 8004f1a:	6809      	ldr	r1, [r1, #0]
 8004f1c:	0889      	lsrs	r1, r1, #2
 8004f1e:	4008      	ands	r0, r1
 8004f20:	d003      	beq.n	8004f2a <__iar_annotation$$branch+0x9b0>
 8004f22:	6968      	ldr	r0, [r5, #20]
 8004f24:	0741      	lsls	r1, r0, #29
 8004f26:	0fc8      	lsrs	r0, r1, #31
 8004f28:	e000      	b.n	8004f2c <__iar_annotation$$branch+0x9b2>
 8004f2a:	2002      	movs	r0, #2
 8004f2c:	9002      	str	r0, [sp, #8]
 8004f2e:	208d      	movs	r0, #141	; 0x8d
 8004f30:	9001      	str	r0, [sp, #4]
 8004f32:	2001      	movs	r0, #1
 8004f34:	9000      	str	r0, [sp, #0]
 8004f36:	0023      	movs	r3, r4
 8004f38:	220f      	movs	r2, #15
 8004f3a:	2031      	movs	r0, #49	; 0x31
 8004f3c:	5c29      	ldrb	r1, [r5, r0]
 8004f3e:	0028      	movs	r0, r5
 8004f40:	f7fc fb11 	bl	8001566 <PE_Send_DataMessage>
 8004f44:	2800      	cmp	r0, #0
 8004f46:	d15e      	bne.n	8005006 <__iar_annotation$$branch+0xa8c>
 8004f48:	2055      	movs	r0, #85	; 0x55
 8004f4a:	7728      	strb	r0, [r5, #28]
 8004f4c:	2155      	movs	r1, #85	; 0x55
 8004f4e:	7c28      	ldrb	r0, [r5, #16]
 8004f50:	f7fb fa96 	bl	8000480 <USBPD_PE_Notification>
 8004f54:	48c3      	ldr	r0, [pc, #780]	; (8005264 <.text_19>)
 8004f56:	83e8      	strh	r0, [r5, #30]
 8004f58:	2032      	movs	r0, #50	; 0x32
 8004f5a:	e12c      	b.n	80051b6 <__iar_annotation$$branch+0xc3c>
 8004f5c:	ffff9fff 	.word	0xffff9fff
 8004f60:	0000801e 	.word	0x0000801e
 8004f64:	2031      	movs	r0, #49	; 0x31
 8004f66:	5c28      	ldrb	r0, [r5, r0]
 8004f68:	f7fb fd2e 	bl	80009c8 <PE_Convert_SOPRxEvent>
 8004f6c:	991c      	ldr	r1, [sp, #112]	; 0x70
 8004f6e:	7809      	ldrb	r1, [r1, #0]
 8004f70:	4281      	cmp	r1, r0
 8004f72:	d13d      	bne.n	8004ff0 <__iar_annotation$$branch+0xa76>
 8004f74:	8ea8      	ldrh	r0, [r5, #52]	; 0x34
 8004f76:	0bc2      	lsrs	r2, r0, #15
 8004f78:	d13a      	bne.n	8004ff0 <__iar_annotation$$branch+0xa76>
 8004f7a:	2607      	movs	r6, #7
 8004f7c:	0b02      	lsrs	r2, r0, #12
 8004f7e:	4232      	tst	r2, r6
 8004f80:	d036      	beq.n	8004ff0 <__iar_annotation$$branch+0xa76>
 8004f82:	06c0      	lsls	r0, r0, #27
 8004f84:	0ec0      	lsrs	r0, r0, #27
 8004f86:	280f      	cmp	r0, #15
 8004f88:	d132      	bne.n	8004ff0 <__iar_annotation$$branch+0xa76>
 8004f8a:	2914      	cmp	r1, #20
 8004f8c:	d005      	beq.n	8004f9a <__iar_annotation$$branch+0xa20>
 8004f8e:	2014      	movs	r0, #20
 8004f90:	991c      	ldr	r1, [sp, #112]	; 0x70
 8004f92:	7008      	strb	r0, [r1, #0]
 8004f94:	0028      	movs	r0, r5
 8004f96:	f7fb fcde 	bl	8000956 <PE_Clear_RxEvent>
 8004f9a:	2000      	movs	r0, #0
 8004f9c:	7728      	strb	r0, [r5, #28]
 8004f9e:	6ba8      	ldr	r0, [r5, #56]	; 0x38
 8004fa0:	7880      	ldrb	r0, [r0, #2]
 8004fa2:	06c1      	lsls	r1, r0, #27
 8004fa4:	0ec9      	lsrs	r1, r1, #27
 8004fa6:	2905      	cmp	r1, #5
 8004fa8:	d122      	bne.n	8004ff0 <__iar_annotation$$branch+0xa76>
 8004faa:	0980      	lsrs	r0, r0, #6
 8004fac:	d020      	beq.n	8004ff0 <__iar_annotation$$branch+0xa76>
 8004fae:	9001      	str	r0, [sp, #4]
 8004fb0:	2801      	cmp	r0, #1
 8004fb2:	d004      	beq.n	8004fbe <__iar_annotation$$branch+0xa44>
 8004fb4:	d309      	bcc.n	8004fca <__iar_annotation$$branch+0xa50>
 8004fb6:	2803      	cmp	r0, #3
 8004fb8:	d005      	beq.n	8004fc6 <__iar_annotation$$branch+0xa4c>
 8004fba:	d302      	bcc.n	8004fc2 <__iar_annotation$$branch+0xa48>
 8004fbc:	e005      	b.n	8004fca <__iar_annotation$$branch+0xa50>
 8004fbe:	2156      	movs	r1, #86	; 0x56
 8004fc0:	e004      	b.n	8004fcc <__iar_annotation$$branch+0xa52>
 8004fc2:	2157      	movs	r1, #87	; 0x57
 8004fc4:	e002      	b.n	8004fcc <__iar_annotation$$branch+0xa52>
 8004fc6:	2158      	movs	r1, #88	; 0x58
 8004fc8:	e000      	b.n	8004fcc <__iar_annotation$$branch+0xa52>
 8004fca:	2155      	movs	r1, #85	; 0x55
 8004fcc:	7c28      	ldrb	r0, [r5, #16]
 8004fce:	f7fb fa57 	bl	8000480 <USBPD_PE_Notification>
 8004fd2:	68e8      	ldr	r0, [r5, #12]
 8004fd4:	6a47      	ldr	r7, [r0, #36]	; 0x24
 8004fd6:	2f00      	cmp	r7, #0
 8004fd8:	d009      	beq.n	8004fee <__iar_annotation$$branch+0xa74>
 8004fda:	6820      	ldr	r0, [r4, #0]
 8004fdc:	0a01      	lsrs	r1, r0, #8
 8004fde:	400e      	ands	r6, r1
 8004fe0:	9600      	str	r6, [sp, #0]
 8004fe2:	0c03      	lsrs	r3, r0, #16
 8004fe4:	9a01      	ldr	r2, [sp, #4]
 8004fe6:	2031      	movs	r0, #49	; 0x31
 8004fe8:	5c29      	ldrb	r1, [r5, r0]
 8004fea:	7c28      	ldrb	r0, [r5, #16]
 8004fec:	47b8      	blx	r7
 8004fee:	e0bd      	b.n	800516c <__iar_annotation$$branch+0xbf2>
 8004ff0:	2034      	movs	r0, #52	; 0x34
 8004ff2:	5c28      	ldrb	r0, [r5, r0]
 8004ff4:	06c0      	lsls	r0, r0, #27
 8004ff6:	0ec0      	lsrs	r0, r0, #27
 8004ff8:	2810      	cmp	r0, #16
 8004ffa:	d100      	bne.n	8004ffe <__iar_annotation$$branch+0xa84>
 8004ffc:	e0bf      	b.n	800517e <__iar_annotation$$branch+0xc04>
 8004ffe:	8be8      	ldrh	r0, [r5, #30]
 8005000:	2180      	movs	r1, #128	; 0x80
 8005002:	0209      	lsls	r1, r1, #8
 8005004:	4288      	cmp	r0, r1
 8005006:	d000      	beq.n	800500a <__iar_annotation$$branch+0xa90>
 8005008:	e128      	b.n	800525c <__iar_annotation$$branch+0xce2>
 800500a:	e0d1      	b.n	80051b0 <__iar_annotation$$branch+0xc36>
 800500c:	2100      	movs	r1, #0
 800500e:	466a      	mov	r2, sp
 8005010:	7311      	strb	r1, [r2, #12]
 8005012:	6821      	ldr	r1, [r4, #0]
 8005014:	400e      	ands	r6, r1
 8005016:	6026      	str	r6, [r4, #0]
 8005018:	6861      	ldr	r1, [r4, #4]
 800501a:	4030      	ands	r0, r6
 800501c:	06c9      	lsls	r1, r1, #27
 800501e:	0ec9      	lsrs	r1, r1, #27
 8005020:	4301      	orrs	r1, r0
 8005022:	6021      	str	r1, [r4, #0]
 8005024:	8920      	ldrh	r0, [r4, #8]
 8005026:	b28a      	uxth	r2, r1
 8005028:	0401      	lsls	r1, r0, #16
 800502a:	4311      	orrs	r1, r2
 800502c:	6021      	str	r1, [r4, #0]
 800502e:	2080      	movs	r0, #128	; 0x80
 8005030:	0200      	lsls	r0, r0, #8
 8005032:	4308      	orrs	r0, r1
 8005034:	6020      	str	r0, [r4, #0]
 8005036:	2601      	movs	r6, #1
 8005038:	6869      	ldr	r1, [r5, #4]
 800503a:	6809      	ldr	r1, [r1, #0]
 800503c:	0949      	lsrs	r1, r1, #5
 800503e:	4031      	ands	r1, r6
 8005040:	4aaa      	ldr	r2, [pc, #680]	; (80052ec <.text_21>)
 8005042:	4002      	ands	r2, r0
 8005044:	0348      	lsls	r0, r1, #13
 8005046:	4310      	orrs	r0, r2
 8005048:	6020      	str	r0, [r4, #0]
 800504a:	491e      	ldr	r1, [pc, #120]	; (80050c4 <__iar_annotation$$branch+0xb4a>)
 800504c:	4001      	ands	r1, r0
 800504e:	0230      	lsls	r0, r6, #8
 8005050:	4308      	orrs	r0, r1
 8005052:	6020      	str	r0, [r4, #0]
 8005054:	9005      	str	r0, [sp, #20]
 8005056:	68e8      	ldr	r0, [r5, #12]
 8005058:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800505a:	9001      	str	r0, [sp, #4]
 800505c:	2800      	cmp	r0, #0
 800505e:	d00b      	beq.n	8005078 <__iar_annotation$$branch+0xafe>
 8005060:	a805      	add	r0, sp, #20
 8005062:	1d00      	adds	r0, r0, #4
 8005064:	9000      	str	r0, [sp, #0]
 8005066:	ab03      	add	r3, sp, #12
 8005068:	7820      	ldrb	r0, [r4, #0]
 800506a:	06c2      	lsls	r2, r0, #27
 800506c:	0ed2      	lsrs	r2, r2, #27
 800506e:	2031      	movs	r0, #49	; 0x31
 8005070:	5c29      	ldrb	r1, [r5, r0]
 8005072:	7c28      	ldrb	r0, [r5, #16]
 8005074:	9c01      	ldr	r4, [sp, #4]
 8005076:	47a0      	blx	r4
 8005078:	4668      	mov	r0, sp
 800507a:	7b00      	ldrb	r0, [r0, #12]
 800507c:	1c40      	adds	r0, r0, #1
 800507e:	4669      	mov	r1, sp
 8005080:	7308      	strb	r0, [r1, #12]
 8005082:	6868      	ldr	r0, [r5, #4]
 8005084:	6800      	ldr	r0, [r0, #0]
 8005086:	0880      	lsrs	r0, r0, #2
 8005088:	4006      	ands	r6, r0
 800508a:	d003      	beq.n	8005094 <__iar_annotation$$branch+0xb1a>
 800508c:	6968      	ldr	r0, [r5, #20]
 800508e:	0741      	lsls	r1, r0, #29
 8005090:	0fc8      	lsrs	r0, r1, #31
 8005092:	e000      	b.n	8005096 <__iar_annotation$$branch+0xb1c>
 8005094:	2002      	movs	r0, #2
 8005096:	9002      	str	r0, [sp, #8]
 8005098:	208f      	movs	r0, #143	; 0x8f
 800509a:	9001      	str	r0, [sp, #4]
 800509c:	4668      	mov	r0, sp
 800509e:	7b00      	ldrb	r0, [r0, #12]
 80050a0:	9000      	str	r0, [sp, #0]
 80050a2:	ab05      	add	r3, sp, #20
 80050a4:	220f      	movs	r2, #15
 80050a6:	2031      	movs	r0, #49	; 0x31
 80050a8:	5c29      	ldrb	r1, [r5, r0]
 80050aa:	0028      	movs	r0, r5
 80050ac:	f7fc fa5b 	bl	8001566 <PE_Send_DataMessage>
 80050b0:	2800      	cmp	r0, #0
 80050b2:	d104      	bne.n	80050be <__iar_annotation$$branch+0xb44>
 80050b4:	205a      	movs	r0, #90	; 0x5a
 80050b6:	7728      	strb	r0, [r5, #28]
 80050b8:	48bf      	ldr	r0, [pc, #764]	; (80053b8 <.text_23>)
 80050ba:	83e8      	strh	r0, [r5, #30]
 80050bc:	9704      	str	r7, [sp, #16]
 80050be:	e0ca      	b.n	8005256 <__iar_annotation$$branch+0xcdc>
 80050c0:	fffffe3f 	.word	0xfffffe3f
 80050c4:	fffff8ff 	.word	0xfffff8ff
 80050c8:	2607      	movs	r6, #7
 80050ca:	8ea8      	ldrh	r0, [r5, #52]	; 0x34
 80050cc:	0b00      	lsrs	r0, r0, #12
 80050ce:	2107      	movs	r1, #7
 80050d0:	4001      	ands	r1, r0
 80050d2:	1e48      	subs	r0, r1, #1
 80050d4:	4669      	mov	r1, sp
 80050d6:	7108      	strb	r0, [r1, #4]
 80050d8:	2031      	movs	r0, #49	; 0x31
 80050da:	5c28      	ldrb	r0, [r5, r0]
 80050dc:	f7fb fc74 	bl	80009c8 <PE_Convert_SOPRxEvent>
 80050e0:	991c      	ldr	r1, [sp, #112]	; 0x70
 80050e2:	7809      	ldrb	r1, [r1, #0]
 80050e4:	4281      	cmp	r1, r0
 80050e6:	d144      	bne.n	8005172 <__iar_annotation$$branch+0xbf8>
 80050e8:	8ea8      	ldrh	r0, [r5, #52]	; 0x34
 80050ea:	0bc2      	lsrs	r2, r0, #15
 80050ec:	d141      	bne.n	8005172 <__iar_annotation$$branch+0xbf8>
 80050ee:	0b02      	lsrs	r2, r0, #12
 80050f0:	4232      	tst	r2, r6
 80050f2:	d03e      	beq.n	8005172 <__iar_annotation$$branch+0xbf8>
 80050f4:	06c0      	lsls	r0, r0, #27
 80050f6:	0ec0      	lsrs	r0, r0, #27
 80050f8:	280f      	cmp	r0, #15
 80050fa:	d13a      	bne.n	8005172 <__iar_annotation$$branch+0xbf8>
 80050fc:	2914      	cmp	r1, #20
 80050fe:	d005      	beq.n	800510c <__iar_annotation$$branch+0xb92>
 8005100:	2014      	movs	r0, #20
 8005102:	991c      	ldr	r1, [sp, #112]	; 0x70
 8005104:	7008      	strb	r0, [r1, #0]
 8005106:	0028      	movs	r0, r5
 8005108:	f7fb fc25 	bl	8000956 <PE_Clear_RxEvent>
 800510c:	6ba8      	ldr	r0, [r5, #56]	; 0x38
 800510e:	7880      	ldrb	r0, [r0, #2]
 8005110:	06c1      	lsls	r1, r0, #27
 8005112:	0ec9      	lsrs	r1, r1, #27
 8005114:	6862      	ldr	r2, [r4, #4]
 8005116:	4291      	cmp	r1, r2
 8005118:	d12b      	bne.n	8005172 <__iar_annotation$$branch+0xbf8>
 800511a:	0981      	lsrs	r1, r0, #6
 800511c:	d029      	beq.n	8005172 <__iar_annotation$$branch+0xbf8>
 800511e:	68e9      	ldr	r1, [r5, #12]
 8005120:	6b89      	ldr	r1, [r1, #56]	; 0x38
 8005122:	2900      	cmp	r1, #0
 8005124:	d022      	beq.n	800516c <__iar_annotation$$branch+0xbf2>
 8005126:	2600      	movs	r6, #0
 8005128:	e011      	b.n	800514e <__iar_annotation$$branch+0xbd4>
 800512a:	6ba9      	ldr	r1, [r5, #56]	; 0x38
 800512c:	00b2      	lsls	r2, r6, #2
 800512e:	188b      	adds	r3, r1, r2
 8005130:	799c      	ldrb	r4, [r3, #6]
 8005132:	79df      	ldrb	r7, [r3, #7]
 8005134:	023f      	lsls	r7, r7, #8
 8005136:	19e4      	adds	r4, r4, r7
 8005138:	3108      	adds	r1, #8
 800513a:	5c89      	ldrb	r1, [r1, r2]
 800513c:	0409      	lsls	r1, r1, #16
 800513e:	1861      	adds	r1, r4, r1
 8005140:	7a5a      	ldrb	r2, [r3, #9]
 8005142:	0612      	lsls	r2, r2, #24
 8005144:	1889      	adds	r1, r1, r2
 8005146:	aa05      	add	r2, sp, #20
 8005148:	00b3      	lsls	r3, r6, #2
 800514a:	50d1      	str	r1, [r2, r3]
 800514c:	1c76      	adds	r6, r6, #1
 800514e:	4669      	mov	r1, sp
 8005150:	7909      	ldrb	r1, [r1, #4]
 8005152:	428e      	cmp	r6, r1
 8005154:	d3e9      	bcc.n	800512a <__iar_annotation$$branch+0xbb0>
 8005156:	a905      	add	r1, sp, #20
 8005158:	9100      	str	r1, [sp, #0]
 800515a:	ab01      	add	r3, sp, #4
 800515c:	06c2      	lsls	r2, r0, #27
 800515e:	0ed2      	lsrs	r2, r2, #27
 8005160:	2031      	movs	r0, #49	; 0x31
 8005162:	5c29      	ldrb	r1, [r5, r0]
 8005164:	7c28      	ldrb	r0, [r5, #16]
 8005166:	68ec      	ldr	r4, [r5, #12]
 8005168:	6ba4      	ldr	r4, [r4, #56]	; 0x38
 800516a:	47a0      	blx	r4
 800516c:	2000      	movs	r0, #0
 800516e:	83e8      	strh	r0, [r5, #30]
 8005170:	e01e      	b.n	80051b0 <__iar_annotation$$branch+0xc36>
 8005172:	2034      	movs	r0, #52	; 0x34
 8005174:	5c28      	ldrb	r0, [r5, r0]
 8005176:	06c0      	lsls	r0, r0, #27
 8005178:	0ec0      	lsrs	r0, r0, #27
 800517a:	2810      	cmp	r0, #16
 800517c:	d113      	bne.n	80051a6 <__iar_annotation$$branch+0xc2c>
 800517e:	981c      	ldr	r0, [sp, #112]	; 0x70
 8005180:	7800      	ldrb	r0, [r0, #0]
 8005182:	2814      	cmp	r0, #20
 8005184:	d005      	beq.n	8005192 <__iar_annotation$$branch+0xc18>
 8005186:	2014      	movs	r0, #20
 8005188:	991c      	ldr	r1, [sp, #112]	; 0x70
 800518a:	7008      	strb	r0, [r1, #0]
 800518c:	0028      	movs	r0, r5
 800518e:	f7fb fbe2 	bl	8000956 <PE_Clear_RxEvent>
 8005192:	2000      	movs	r0, #0
 8005194:	83e8      	strh	r0, [r5, #30]
 8005196:	2103      	movs	r1, #3
 8005198:	7469      	strb	r1, [r5, #17]
 800519a:	9004      	str	r0, [sp, #16]
 800519c:	2159      	movs	r1, #89	; 0x59
 800519e:	7c28      	ldrb	r0, [r5, #16]
 80051a0:	f7fb f96e 	bl	8000480 <USBPD_PE_Notification>
 80051a4:	e05a      	b.n	800525c <__iar_annotation$$branch+0xce2>
 80051a6:	8be8      	ldrh	r0, [r5, #30]
 80051a8:	2180      	movs	r1, #128	; 0x80
 80051aa:	0209      	lsls	r1, r1, #8
 80051ac:	4288      	cmp	r0, r1
 80051ae:	d155      	bne.n	800525c <__iar_annotation$$branch+0xce2>
 80051b0:	2003      	movs	r0, #3
 80051b2:	7468      	strb	r0, [r5, #17]
 80051b4:	2000      	movs	r0, #0
 80051b6:	9004      	str	r0, [sp, #16]
 80051b8:	e050      	b.n	800525c <__iar_annotation$$branch+0xce2>
 80051ba:	2100      	movs	r1, #0
 80051bc:	466a      	mov	r2, sp
 80051be:	7311      	strb	r1, [r2, #12]
 80051c0:	6821      	ldr	r1, [r4, #0]
 80051c2:	400e      	ands	r6, r1
 80051c4:	6026      	str	r6, [r4, #0]
 80051c6:	6861      	ldr	r1, [r4, #4]
 80051c8:	4030      	ands	r0, r6
 80051ca:	06c9      	lsls	r1, r1, #27
 80051cc:	0ec9      	lsrs	r1, r1, #27
 80051ce:	4301      	orrs	r1, r0
 80051d0:	6021      	str	r1, [r4, #0]
 80051d2:	8920      	ldrh	r0, [r4, #8]
 80051d4:	b28a      	uxth	r2, r1
 80051d6:	0401      	lsls	r1, r0, #16
 80051d8:	4311      	orrs	r1, r2
 80051da:	6021      	str	r1, [r4, #0]
 80051dc:	2080      	movs	r0, #128	; 0x80
 80051de:	0200      	lsls	r0, r0, #8
 80051e0:	4308      	orrs	r0, r1
 80051e2:	6020      	str	r0, [r4, #0]
 80051e4:	2601      	movs	r6, #1
 80051e6:	6869      	ldr	r1, [r5, #4]
 80051e8:	6809      	ldr	r1, [r1, #0]
 80051ea:	0949      	lsrs	r1, r1, #5
 80051ec:	4031      	ands	r1, r6
 80051ee:	4a3f      	ldr	r2, [pc, #252]	; (80052ec <.text_21>)
 80051f0:	4002      	ands	r2, r0
 80051f2:	0348      	lsls	r0, r1, #13
 80051f4:	4310      	orrs	r0, r2
 80051f6:	6020      	str	r0, [r4, #0]
 80051f8:	4970      	ldr	r1, [pc, #448]	; (80053bc <.text_24>)
 80051fa:	4001      	ands	r1, r0
 80051fc:	0230      	lsls	r0, r6, #8
 80051fe:	4308      	orrs	r0, r1
 8005200:	6020      	str	r0, [r4, #0]
 8005202:	9005      	str	r0, [sp, #20]
 8005204:	68e8      	ldr	r0, [r5, #12]
 8005206:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8005208:	2b00      	cmp	r3, #0
 800520a:	d004      	beq.n	8005216 <__iar_annotation$$branch+0xc9c>
 800520c:	a805      	add	r0, sp, #20
 800520e:	1d02      	adds	r2, r0, #4
 8005210:	a903      	add	r1, sp, #12
 8005212:	7c28      	ldrb	r0, [r5, #16]
 8005214:	4798      	blx	r3
 8005216:	4668      	mov	r0, sp
 8005218:	7b00      	ldrb	r0, [r0, #12]
 800521a:	1c40      	adds	r0, r0, #1
 800521c:	4669      	mov	r1, sp
 800521e:	7308      	strb	r0, [r1, #12]
 8005220:	6868      	ldr	r0, [r5, #4]
 8005222:	6800      	ldr	r0, [r0, #0]
 8005224:	0880      	lsrs	r0, r0, #2
 8005226:	4006      	ands	r6, r0
 8005228:	d003      	beq.n	8005232 <__iar_annotation$$branch+0xcb8>
 800522a:	6968      	ldr	r0, [r5, #20]
 800522c:	0741      	lsls	r1, r0, #29
 800522e:	0fc8      	lsrs	r0, r1, #31
 8005230:	e000      	b.n	8005234 <__iar_annotation$$branch+0xcba>
 8005232:	2002      	movs	r0, #2
 8005234:	9002      	str	r0, [sp, #8]
 8005236:	2003      	movs	r0, #3
 8005238:	9001      	str	r0, [sp, #4]
 800523a:	4668      	mov	r0, sp
 800523c:	7b00      	ldrb	r0, [r0, #12]
 800523e:	9000      	str	r0, [sp, #0]
 8005240:	ab05      	add	r3, sp, #20
 8005242:	220f      	movs	r2, #15
 8005244:	2031      	movs	r0, #49	; 0x31
 8005246:	5c29      	ldrb	r1, [r5, r0]
 8005248:	0028      	movs	r0, r5
 800524a:	f7fc f98c 	bl	8001566 <PE_Send_DataMessage>
 800524e:	2800      	cmp	r0, #0
 8005250:	d101      	bne.n	8005256 <__iar_annotation$$branch+0xcdc>
 8005252:	205a      	movs	r0, #90	; 0x5a
 8005254:	7728      	strb	r0, [r5, #28]
 8005256:	2000      	movs	r0, #0
 8005258:	2132      	movs	r1, #50	; 0x32
 800525a:	5468      	strb	r0, [r5, r1]
 800525c:	9804      	ldr	r0, [sp, #16]
 800525e:	b01d      	add	sp, #116	; 0x74
 8005260:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08005264 <.text_19>:
 8005264:	00008032 	.word	0x00008032

08005268 <PE_StateMachine_UVDM>:
 8005268:	2914      	cmp	r1, #20
 800526a:	d000      	beq.n	800526e <PE_StateMachine_UVDM+0x6>
 800526c:	4770      	bx	lr
 800526e:	b570      	push	{r4, r5, r6, lr}
 8005270:	b08c      	sub	sp, #48	; 0x30
 8005272:	0004      	movs	r4, r0
 8005274:	68e0      	ldr	r0, [r4, #12]
 8005276:	2800      	cmp	r0, #0
 8005278:	d035      	beq.n	80052e6 <PE_StateMachine_UVDM+0x7e>
 800527a:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800527c:	2800      	cmp	r0, #0
 800527e:	d032      	beq.n	80052e6 <PE_StateMachine_UVDM+0x7e>
 8005280:	2500      	movs	r5, #0
 8005282:	4669      	mov	r1, sp
 8005284:	730d      	strb	r5, [r1, #12]
 8005286:	a805      	add	r0, sp, #20
 8005288:	1d03      	adds	r3, r0, #4
 800528a:	aa03      	add	r2, sp, #12
 800528c:	a904      	add	r1, sp, #16
 800528e:	7c20      	ldrb	r0, [r4, #16]
 8005290:	68e6      	ldr	r6, [r4, #12]
 8005292:	6bf6      	ldr	r6, [r6, #60]	; 0x3c
 8005294:	47b0      	blx	r6
 8005296:	9804      	ldr	r0, [sp, #16]
 8005298:	49cc      	ldr	r1, [pc, #816]	; (80055cc <.text_27>)
 800529a:	4001      	ands	r1, r0
 800529c:	9104      	str	r1, [sp, #16]
 800529e:	4668      	mov	r0, sp
 80052a0:	7b00      	ldrb	r0, [r0, #12]
 80052a2:	1c40      	adds	r0, r0, #1
 80052a4:	4669      	mov	r1, sp
 80052a6:	7308      	strb	r0, [r1, #12]
 80052a8:	9804      	ldr	r0, [sp, #16]
 80052aa:	9005      	str	r0, [sp, #20]
 80052ac:	6860      	ldr	r0, [r4, #4]
 80052ae:	6800      	ldr	r0, [r0, #0]
 80052b0:	0741      	lsls	r1, r0, #29
 80052b2:	0fc9      	lsrs	r1, r1, #31
 80052b4:	d003      	beq.n	80052be <PE_StateMachine_UVDM+0x56>
 80052b6:	6960      	ldr	r0, [r4, #20]
 80052b8:	0741      	lsls	r1, r0, #29
 80052ba:	0fc8      	lsrs	r0, r1, #31
 80052bc:	e000      	b.n	80052c0 <PE_StateMachine_UVDM+0x58>
 80052be:	2002      	movs	r0, #2
 80052c0:	9002      	str	r0, [sp, #8]
 80052c2:	2003      	movs	r0, #3
 80052c4:	9001      	str	r0, [sp, #4]
 80052c6:	4668      	mov	r0, sp
 80052c8:	7b00      	ldrb	r0, [r0, #12]
 80052ca:	9000      	str	r0, [sp, #0]
 80052cc:	ab05      	add	r3, sp, #20
 80052ce:	220f      	movs	r2, #15
 80052d0:	2031      	movs	r0, #49	; 0x31
 80052d2:	5c21      	ldrb	r1, [r4, r0]
 80052d4:	0020      	movs	r0, r4
 80052d6:	f7fc f946 	bl	8001566 <PE_Send_DataMessage>
 80052da:	2800      	cmp	r0, #0
 80052dc:	d101      	bne.n	80052e2 <PE_StateMachine_UVDM+0x7a>
 80052de:	2059      	movs	r0, #89	; 0x59
 80052e0:	7720      	strb	r0, [r4, #28]
 80052e2:	2032      	movs	r0, #50	; 0x32
 80052e4:	5425      	strb	r5, [r4, r0]
 80052e6:	b00c      	add	sp, #48	; 0x30
 80052e8:	bd70      	pop	{r4, r5, r6, pc}
	...

080052ec <.text_21>:
 80052ec:	ffff9fff 	.word	0xffff9fff

080052f0 <PE_Check_DataMessageVDM>:
 80052f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80052f2:	2403      	movs	r4, #3
 80052f4:	2501      	movs	r5, #1
 80052f6:	6801      	ldr	r1, [r0, #0]
 80052f8:	6849      	ldr	r1, [r1, #4]
 80052fa:	0949      	lsrs	r1, r1, #5
 80052fc:	4029      	ands	r1, r5
 80052fe:	d01f      	beq.n	8005340 <PE_Check_DataMessageVDM+0x50>
 8005300:	68c1      	ldr	r1, [r0, #12]
 8005302:	2900      	cmp	r1, #0
 8005304:	d01c      	beq.n	8005340 <PE_Check_DataMessageVDM+0x50>
 8005306:	6b81      	ldr	r1, [r0, #56]	; 0x38
 8005308:	788a      	ldrb	r2, [r1, #2]
 800530a:	78cb      	ldrb	r3, [r1, #3]
 800530c:	021b      	lsls	r3, r3, #8
 800530e:	18d2      	adds	r2, r2, r3
 8005310:	790b      	ldrb	r3, [r1, #4]
 8005312:	041b      	lsls	r3, r3, #16
 8005314:	18d2      	adds	r2, r2, r3
 8005316:	7949      	ldrb	r1, [r1, #5]
 8005318:	0609      	lsls	r1, r1, #24
 800531a:	1851      	adds	r1, r2, r1
 800531c:	9100      	str	r1, [sp, #0]
 800531e:	0bca      	lsrs	r2, r1, #15
 8005320:	402a      	ands	r2, r5
 8005322:	d014      	beq.n	800534e <PE_Check_DataMessageVDM+0x5e>
 8005324:	2394      	movs	r3, #148	; 0x94
 8005326:	009b      	lsls	r3, r3, #2
 8005328:	50c1      	str	r1, [r0, r3]
 800532a:	0989      	lsrs	r1, r1, #6
 800532c:	4021      	ands	r1, r4
 800532e:	d107      	bne.n	8005340 <PE_Check_DataMessageVDM+0x50>
 8005330:	6801      	ldr	r1, [r0, #0]
 8005332:	6849      	ldr	r1, [r1, #4]
 8005334:	0a09      	lsrs	r1, r1, #8
 8005336:	4029      	ands	r1, r5
 8005338:	d002      	beq.n	8005340 <PE_Check_DataMessageVDM+0x50>
 800533a:	f7ff f840 	bl	80043be <PE_Receive_SVDM>
 800533e:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}
 8005340:	6841      	ldr	r1, [r0, #4]
 8005342:	6809      	ldr	r1, [r1, #0]
 8005344:	400c      	ands	r4, r1
 8005346:	2c02      	cmp	r4, #2
 8005348:	d134      	bne.n	80053b4 <PE_Check_DataMessageVDM+0xc4>
 800534a:	7445      	strb	r5, [r0, #17]
 800534c:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}
 800534e:	8e81      	ldrh	r1, [r0, #52]	; 0x34
 8005350:	0449      	lsls	r1, r1, #17
 8005352:	0f49      	lsrs	r1, r1, #29
 8005354:	1e49      	subs	r1, r1, #1
 8005356:	4ab1      	ldr	r2, [pc, #708]	; (800561c <.text_29>)
 8005358:	5481      	strb	r1, [r0, r2]
 800535a:	0006      	movs	r6, r0
 800535c:	2000      	movs	r0, #0
 800535e:	e00f      	b.n	8005380 <PE_Check_DataMessageVDM+0x90>
 8005360:	6bb1      	ldr	r1, [r6, #56]	; 0x38
 8005362:	0082      	lsls	r2, r0, #2
 8005364:	1889      	adds	r1, r1, r2
 8005366:	798a      	ldrb	r2, [r1, #6]
 8005368:	79cf      	ldrb	r7, [r1, #7]
 800536a:	023f      	lsls	r7, r7, #8
 800536c:	19d2      	adds	r2, r2, r7
 800536e:	7a0f      	ldrb	r7, [r1, #8]
 8005370:	043f      	lsls	r7, r7, #16
 8005372:	19d2      	adds	r2, r2, r7
 8005374:	7a49      	ldrb	r1, [r1, #9]
 8005376:	0609      	lsls	r1, r1, #24
 8005378:	1851      	adds	r1, r2, r1
 800537a:	0082      	lsls	r2, r0, #2
 800537c:	5099      	str	r1, [r3, r2]
 800537e:	1c40      	adds	r0, r0, #1
 8005380:	49a7      	ldr	r1, [pc, #668]	; (8005620 <.text_30>)
 8005382:	1873      	adds	r3, r6, r1
 8005384:	3118      	adds	r1, #24
 8005386:	1872      	adds	r2, r6, r1
 8005388:	7811      	ldrb	r1, [r2, #0]
 800538a:	4288      	cmp	r0, r1
 800538c:	d3e8      	bcc.n	8005360 <PE_Check_DataMessageVDM+0x70>
 800538e:	9900      	ldr	r1, [sp, #0]
 8005390:	68f0      	ldr	r0, [r6, #12]
 8005392:	2800      	cmp	r0, #0
 8005394:	d008      	beq.n	80053a8 <PE_Check_DataMessageVDM+0xb8>
 8005396:	6c07      	ldr	r7, [r0, #64]	; 0x40
 8005398:	2f00      	cmp	r7, #0
 800539a:	d005      	beq.n	80053a8 <PE_Check_DataMessageVDM+0xb8>
 800539c:	7c30      	ldrb	r0, [r6, #16]
 800539e:	47b8      	blx	r7
 80053a0:	2800      	cmp	r0, #0
 80053a2:	d101      	bne.n	80053a8 <PE_Check_DataMessageVDM+0xb8>
 80053a4:	7474      	strb	r4, [r6, #17]
 80053a6:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}
 80053a8:	6870      	ldr	r0, [r6, #4]
 80053aa:	6800      	ldr	r0, [r0, #0]
 80053ac:	4004      	ands	r4, r0
 80053ae:	2c02      	cmp	r4, #2
 80053b0:	d100      	bne.n	80053b4 <PE_Check_DataMessageVDM+0xc4>
 80053b2:	7475      	strb	r5, [r6, #17]
 80053b4:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}
	...

080053b8 <.text_23>:
 80053b8:	0000801e 	.word	0x0000801e

080053bc <.text_24>:
 80053bc:	fffff8ff 	.word	0xfffff8ff

080053c0 <PE_SVDM_CheckIdentity>:
 80053c0:	b5fc      	push	{r2, r3, r4, r5, r6, r7, lr}
 80053c2:	0003      	movs	r3, r0
 80053c4:	2000      	movs	r0, #0
 80053c6:	4c97      	ldr	r4, [pc, #604]	; (8005624 <.text_31>)
 80053c8:	009b      	lsls	r3, r3, #2
 80053ca:	58e3      	ldr	r3, [r4, r3]
 80053cc:	9301      	str	r3, [sp, #4]
 80053ce:	8e9b      	ldrh	r3, [r3, #52]	; 0x34
 80053d0:	045b      	lsls	r3, r3, #17
 80053d2:	0f5b      	lsrs	r3, r3, #29
 80053d4:	1e5c      	subs	r4, r3, #1
 80053d6:	b2e3      	uxtb	r3, r4
 80053d8:	2b03      	cmp	r3, #3
 80053da:	d200      	bcs.n	80053de <PE_SVDM_CheckIdentity+0x1e>
 80053dc:	e0b5      	b.n	800554a <PE_SVDM_CheckIdentity+0x18a>
 80053de:	000b      	movs	r3, r1
 80053e0:	7819      	ldrb	r1, [r3, #0]
 80053e2:	785d      	ldrb	r5, [r3, #1]
 80053e4:	022d      	lsls	r5, r5, #8
 80053e6:	1949      	adds	r1, r1, r5
 80053e8:	789d      	ldrb	r5, [r3, #2]
 80053ea:	042d      	lsls	r5, r5, #16
 80053ec:	1949      	adds	r1, r1, r5
 80053ee:	78dd      	ldrb	r5, [r3, #3]
 80053f0:	062d      	lsls	r5, r5, #24
 80053f2:	194d      	adds	r5, r1, r5
 80053f4:	6015      	str	r5, [r2, #0]
 80053f6:	7919      	ldrb	r1, [r3, #4]
 80053f8:	795e      	ldrb	r6, [r3, #5]
 80053fa:	0236      	lsls	r6, r6, #8
 80053fc:	1989      	adds	r1, r1, r6
 80053fe:	799e      	ldrb	r6, [r3, #6]
 8005400:	0436      	lsls	r6, r6, #16
 8005402:	1989      	adds	r1, r1, r6
 8005404:	79de      	ldrb	r6, [r3, #7]
 8005406:	0636      	lsls	r6, r6, #24
 8005408:	1989      	adds	r1, r1, r6
 800540a:	6051      	str	r1, [r2, #4]
 800540c:	2108      	movs	r1, #8
 800540e:	7a1e      	ldrb	r6, [r3, #8]
 8005410:	7a5f      	ldrb	r7, [r3, #9]
 8005412:	023f      	lsls	r7, r7, #8
 8005414:	19f6      	adds	r6, r6, r7
 8005416:	7a9f      	ldrb	r7, [r3, #10]
 8005418:	043f      	lsls	r7, r7, #16
 800541a:	19f6      	adds	r6, r6, r7
 800541c:	7adf      	ldrb	r7, [r3, #11]
 800541e:	063f      	lsls	r7, r7, #24
 8005420:	19f6      	adds	r6, r6, r7
 8005422:	6096      	str	r6, [r2, #8]
 8005424:	1ee4      	subs	r4, r4, #3
 8005426:	2620      	movs	r6, #32
 8005428:	5d97      	ldrb	r7, [r2, r6]
 800542a:	26e0      	movs	r6, #224	; 0xe0
 800542c:	403e      	ands	r6, r7
 800542e:	466f      	mov	r7, sp
 8005430:	703e      	strb	r6, [r7, #0]
 8005432:	466e      	mov	r6, sp
 8005434:	7836      	ldrb	r6, [r6, #0]
 8005436:	2720      	movs	r7, #32
 8005438:	55d6      	strb	r6, [r2, r7]
 800543a:	0626      	lsls	r6, r4, #24
 800543c:	d022      	beq.n	8005484 <PE_SVDM_CheckIdentity+0xc4>
 800543e:	1e66      	subs	r6, r4, #1
 8005440:	466f      	mov	r7, sp
 8005442:	707e      	strb	r6, [r7, #1]
 8005444:	00ae      	lsls	r6, r5, #2
 8005446:	0f76      	lsrs	r6, r6, #29
 8005448:	2e05      	cmp	r6, #5
 800544a:	d827      	bhi.n	800549c <PE_SVDM_CheckIdentity+0xdc>
 800544c:	a701      	add	r7, pc, #4	; (adr r7, 8005454 <PE_SVDM_CheckIdentity+0x94>)
 800544e:	5dbf      	ldrb	r7, [r7, r6]
 8005450:	44bf      	add	pc, r7
 8005452:	bf00      	nop
 8005454:	5a060632 	.word	0x5a060632
 8005458:	a680      	.short	0xa680
 800545a:	210c      	movs	r1, #12
 800545c:	466c      	mov	r4, sp
 800545e:	7824      	ldrb	r4, [r4, #0]
 8005460:	2608      	movs	r6, #8
 8005462:	4326      	orrs	r6, r4
 8005464:	2420      	movs	r4, #32
 8005466:	5516      	strb	r6, [r2, r4]
 8005468:	7b1c      	ldrb	r4, [r3, #12]
 800546a:	7b5e      	ldrb	r6, [r3, #13]
 800546c:	0236      	lsls	r6, r6, #8
 800546e:	19a4      	adds	r4, r4, r6
 8005470:	7b9e      	ldrb	r6, [r3, #14]
 8005472:	0436      	lsls	r6, r6, #16
 8005474:	19a4      	adds	r4, r4, r6
 8005476:	7bde      	ldrb	r6, [r3, #15]
 8005478:	0636      	lsls	r6, r6, #24
 800547a:	19a4      	adds	r4, r4, r6
 800547c:	6194      	str	r4, [r2, #24]
 800547e:	466c      	mov	r4, sp
 8005480:	7864      	ldrb	r4, [r4, #1]
 8005482:	0026      	movs	r6, r4
 8005484:	d062      	beq.n	800554c <PE_SVDM_CheckIdentity+0x18c>
 8005486:	9e01      	ldr	r6, [sp, #4]
 8005488:	8eb6      	ldrh	r6, [r6, #52]	; 0x34
 800548a:	0636      	lsls	r6, r6, #24
 800548c:	0fb6      	lsrs	r6, r6, #30
 800548e:	2e02      	cmp	r6, #2
 8005490:	d35c      	bcc.n	800554c <PE_SVDM_CheckIdentity+0x18c>
 8005492:	01ad      	lsls	r5, r5, #6
 8005494:	0f6d      	lsrs	r5, r5, #29
 8005496:	d059      	beq.n	800554c <PE_SVDM_CheckIdentity+0x18c>
 8005498:	1e6d      	subs	r5, r5, #1
 800549a:	2d02      	cmp	r5, #2
 800549c:	d855      	bhi.n	800554a <PE_SVDM_CheckIdentity+0x18a>
 800549e:	2520      	movs	r5, #32
 80054a0:	5d55      	ldrb	r5, [r2, r5]
 80054a2:	08ef      	lsrs	r7, r5, #3
 80054a4:	07ff      	lsls	r7, r7, #31
 80054a6:	d53b      	bpl.n	8005520 <PE_SVDM_CheckIdentity+0x160>
 80054a8:	3108      	adds	r1, #8
 80054aa:	1e64      	subs	r4, r4, #1
 80054ac:	e039      	b.n	8005522 <PE_SVDM_CheckIdentity+0x162>
 80054ae:	210c      	movs	r1, #12
 80054b0:	466c      	mov	r4, sp
 80054b2:	7824      	ldrb	r4, [r4, #0]
 80054b4:	2601      	movs	r6, #1
 80054b6:	4326      	orrs	r6, r4
 80054b8:	2420      	movs	r4, #32
 80054ba:	5516      	strb	r6, [r2, r4]
 80054bc:	7b1c      	ldrb	r4, [r3, #12]
 80054be:	7b5e      	ldrb	r6, [r3, #13]
 80054c0:	0236      	lsls	r6, r6, #8
 80054c2:	19a4      	adds	r4, r4, r6
 80054c4:	7b9e      	ldrb	r6, [r3, #14]
 80054c6:	0436      	lsls	r6, r6, #16
 80054c8:	19a4      	adds	r4, r4, r6
 80054ca:	7bde      	ldrb	r6, [r3, #15]
 80054cc:	0636      	lsls	r6, r6, #24
 80054ce:	19a4      	adds	r4, r4, r6
 80054d0:	60d4      	str	r4, [r2, #12]
 80054d2:	e7d4      	b.n	800547e <PE_SVDM_CheckIdentity+0xbe>
 80054d4:	210c      	movs	r1, #12
 80054d6:	466c      	mov	r4, sp
 80054d8:	7824      	ldrb	r4, [r4, #0]
 80054da:	2604      	movs	r6, #4
 80054dc:	4326      	orrs	r6, r4
 80054de:	2420      	movs	r4, #32
 80054e0:	5516      	strb	r6, [r2, r4]
 80054e2:	7b1c      	ldrb	r4, [r3, #12]
 80054e4:	7b5e      	ldrb	r6, [r3, #13]
 80054e6:	0236      	lsls	r6, r6, #8
 80054e8:	19a4      	adds	r4, r4, r6
 80054ea:	7b9e      	ldrb	r6, [r3, #14]
 80054ec:	0436      	lsls	r6, r6, #16
 80054ee:	19a4      	adds	r4, r4, r6
 80054f0:	7bde      	ldrb	r6, [r3, #15]
 80054f2:	0636      	lsls	r6, r6, #24
 80054f4:	19a4      	adds	r4, r4, r6
 80054f6:	6154      	str	r4, [r2, #20]
 80054f8:	e7c1      	b.n	800547e <PE_SVDM_CheckIdentity+0xbe>
 80054fa:	210c      	movs	r1, #12
 80054fc:	466c      	mov	r4, sp
 80054fe:	7824      	ldrb	r4, [r4, #0]
 8005500:	2602      	movs	r6, #2
 8005502:	4326      	orrs	r6, r4
 8005504:	2420      	movs	r4, #32
 8005506:	5516      	strb	r6, [r2, r4]
 8005508:	7b1c      	ldrb	r4, [r3, #12]
 800550a:	7b5e      	ldrb	r6, [r3, #13]
 800550c:	0236      	lsls	r6, r6, #8
 800550e:	19a4      	adds	r4, r4, r6
 8005510:	7b9e      	ldrb	r6, [r3, #14]
 8005512:	0436      	lsls	r6, r6, #16
 8005514:	19a4      	adds	r4, r4, r6
 8005516:	7bde      	ldrb	r6, [r3, #15]
 8005518:	0636      	lsls	r6, r6, #24
 800551a:	19a4      	adds	r4, r4, r6
 800551c:	6114      	str	r4, [r2, #16]
 800551e:	e7ae      	b.n	800547e <PE_SVDM_CheckIdentity+0xbe>
 8005520:	1d09      	adds	r1, r1, #4
 8005522:	b2e4      	uxtb	r4, r4
 8005524:	2c01      	cmp	r4, #1
 8005526:	d110      	bne.n	800554a <PE_SVDM_CheckIdentity+0x18a>
 8005528:	2410      	movs	r4, #16
 800552a:	432c      	orrs	r4, r5
 800552c:	2520      	movs	r5, #32
 800552e:	5554      	strb	r4, [r2, r5]
 8005530:	1859      	adds	r1, r3, r1
 8005532:	780b      	ldrb	r3, [r1, #0]
 8005534:	784c      	ldrb	r4, [r1, #1]
 8005536:	0224      	lsls	r4, r4, #8
 8005538:	191b      	adds	r3, r3, r4
 800553a:	788c      	ldrb	r4, [r1, #2]
 800553c:	0424      	lsls	r4, r4, #16
 800553e:	191b      	adds	r3, r3, r4
 8005540:	78c9      	ldrb	r1, [r1, #3]
 8005542:	0609      	lsls	r1, r1, #24
 8005544:	1859      	adds	r1, r3, r1
 8005546:	61d1      	str	r1, [r2, #28]
 8005548:	bdf6      	pop	{r1, r2, r4, r5, r6, r7, pc}
 800554a:	2002      	movs	r0, #2
 800554c:	bdf6      	pop	{r1, r2, r4, r5, r6, r7, pc}

0800554e <PE_SVDM_CheckSVIDs>:
 800554e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005550:	4b34      	ldr	r3, [pc, #208]	; (8005624 <.text_31>)
 8005552:	0080      	lsls	r0, r0, #2
 8005554:	5818      	ldr	r0, [r3, r0]
 8005556:	8e80      	ldrh	r0, [r0, #52]	; 0x34
 8005558:	0440      	lsls	r0, r0, #17
 800555a:	0f40      	lsrs	r0, r0, #29
 800555c:	1e46      	subs	r6, r0, #1
 800555e:	b2f6      	uxtb	r6, r6
 8005560:	2000      	movs	r0, #0
 8005562:	2500      	movs	r5, #0
 8005564:	7610      	strb	r0, [r2, #24]
 8005566:	7650      	strb	r0, [r2, #25]
 8005568:	000b      	movs	r3, r1
 800556a:	0014      	movs	r4, r2
 800556c:	0031      	movs	r1, r6
 800556e:	5c1a      	ldrb	r2, [r3, r0]
 8005570:	1c5e      	adds	r6, r3, #1
 8005572:	5c36      	ldrb	r6, [r6, r0]
 8005574:	0236      	lsls	r6, r6, #8
 8005576:	1992      	adds	r2, r2, r6
 8005578:	7e26      	ldrb	r6, [r4, #24]
 800557a:	0076      	lsls	r6, r6, #1
 800557c:	53a2      	strh	r2, [r4, r6]
 800557e:	7e26      	ldrb	r6, [r4, #24]
 8005580:	2201      	movs	r2, #1
 8005582:	0077      	lsls	r7, r6, #1
 8005584:	5be7      	ldrh	r7, [r4, r7]
 8005586:	2f00      	cmp	r7, #0
 8005588:	d002      	beq.n	8005590 <PE_SVDM_CheckSVIDs+0x42>
 800558a:	1c76      	adds	r6, r6, #1
 800558c:	7626      	strb	r6, [r4, #24]
 800558e:	e001      	b.n	8005594 <PE_SVDM_CheckSVIDs+0x46>
 8005590:	2501      	movs	r5, #1
 8005592:	7662      	strb	r2, [r4, #25]
 8005594:	1c80      	adds	r0, r0, #2
 8005596:	b2c0      	uxtb	r0, r0
 8005598:	5c1e      	ldrb	r6, [r3, r0]
 800559a:	1c5f      	adds	r7, r3, #1
 800559c:	5c3f      	ldrb	r7, [r7, r0]
 800559e:	023f      	lsls	r7, r7, #8
 80055a0:	19f6      	adds	r6, r6, r7
 80055a2:	7e27      	ldrb	r7, [r4, #24]
 80055a4:	007f      	lsls	r7, r7, #1
 80055a6:	53e6      	strh	r6, [r4, r7]
 80055a8:	7e26      	ldrb	r6, [r4, #24]
 80055aa:	0077      	lsls	r7, r6, #1
 80055ac:	5be7      	ldrh	r7, [r4, r7]
 80055ae:	2f00      	cmp	r7, #0
 80055b0:	d002      	beq.n	80055b8 <PE_SVDM_CheckSVIDs+0x6a>
 80055b2:	1c76      	adds	r6, r6, #1
 80055b4:	7626      	strb	r6, [r4, #24]
 80055b6:	e001      	b.n	80055bc <PE_SVDM_CheckSVIDs+0x6e>
 80055b8:	2501      	movs	r5, #1
 80055ba:	7662      	strb	r2, [r4, #25]
 80055bc:	1c80      	adds	r0, r0, #2
 80055be:	b2c0      	uxtb	r0, r0
 80055c0:	008a      	lsls	r2, r1, #2
 80055c2:	4290      	cmp	r0, r2
 80055c4:	d201      	bcs.n	80055ca <PE_SVDM_CheckSVIDs+0x7c>
 80055c6:	002a      	movs	r2, r5
 80055c8:	d0d1      	beq.n	800556e <PE_SVDM_CheckSVIDs+0x20>
 80055ca:	bdf0      	pop	{r4, r5, r6, r7, pc}

080055cc <.text_27>:
 80055cc:	ffff7fff 	.word	0xffff7fff

080055d0 <PE_SVDM_CheckModes>:
 80055d0:	b530      	push	{r4, r5, lr}
 80055d2:	4c14      	ldr	r4, [pc, #80]	; (8005624 <.text_31>)
 80055d4:	0080      	lsls	r0, r0, #2
 80055d6:	5820      	ldr	r0, [r4, r0]
 80055d8:	8e80      	ldrh	r0, [r0, #52]	; 0x34
 80055da:	0440      	lsls	r0, r0, #17
 80055dc:	0f40      	lsrs	r0, r0, #29
 80055de:	1e40      	subs	r0, r0, #1
 80055e0:	b2c0      	uxtb	r0, r0
 80055e2:	2400      	movs	r4, #0
 80055e4:	8399      	strh	r1, [r3, #28]
 80055e6:	601c      	str	r4, [r3, #0]
 80055e8:	5d11      	ldrb	r1, [r2, r4]
 80055ea:	1915      	adds	r5, r2, r4
 80055ec:	786d      	ldrb	r5, [r5, #1]
 80055ee:	022d      	lsls	r5, r5, #8
 80055f0:	1949      	adds	r1, r1, r5
 80055f2:	1915      	adds	r5, r2, r4
 80055f4:	78ad      	ldrb	r5, [r5, #2]
 80055f6:	042d      	lsls	r5, r5, #16
 80055f8:	1949      	adds	r1, r1, r5
 80055fa:	1915      	adds	r5, r2, r4
 80055fc:	78ed      	ldrb	r5, [r5, #3]
 80055fe:	062d      	lsls	r5, r5, #24
 8005600:	1949      	adds	r1, r1, r5
 8005602:	681d      	ldr	r5, [r3, #0]
 8005604:	00ad      	lsls	r5, r5, #2
 8005606:	195d      	adds	r5, r3, r5
 8005608:	6069      	str	r1, [r5, #4]
 800560a:	6819      	ldr	r1, [r3, #0]
 800560c:	1c49      	adds	r1, r1, #1
 800560e:	6019      	str	r1, [r3, #0]
 8005610:	1d24      	adds	r4, r4, #4
 8005612:	b2e4      	uxtb	r4, r4
 8005614:	0081      	lsls	r1, r0, #2
 8005616:	428c      	cmp	r4, r1
 8005618:	d3e6      	bcc.n	80055e8 <PE_SVDM_CheckModes+0x18>
 800561a:	bd30      	pop	{r4, r5, pc}

0800561c <.text_29>:
 800561c:	000004ac 	.word	0x000004ac

08005620 <.text_30>:
 8005620:	00000494 	.word	0x00000494

08005624 <.text_31>:
 8005624:	200001bc 	.word	0x200001bc

08005628 <USBPD_PRL_TimerCounter>:
 8005628:	4954      	ldr	r1, [pc, #336]	; (800577c <.text_15>)
 800562a:	0080      	lsls	r0, r0, #2
 800562c:	1808      	adds	r0, r1, r0
 800562e:	6801      	ldr	r1, [r0, #0]
 8005630:	790a      	ldrb	r2, [r1, #4]
 8005632:	2a00      	cmp	r2, #0
 8005634:	d002      	beq.n	800563c <USBPD_PRL_TimerCounter+0x14>
 8005636:	790a      	ldrb	r2, [r1, #4]
 8005638:	1e52      	subs	r2, r2, #1
 800563a:	710a      	strb	r2, [r1, #4]
 800563c:	6800      	ldr	r0, [r0, #0]
 800563e:	7841      	ldrb	r1, [r0, #1]
 8005640:	2900      	cmp	r1, #0
 8005642:	d001      	beq.n	8005648 <USBPD_PRL_TimerCounter+0x20>
 8005644:	1e49      	subs	r1, r1, #1
 8005646:	7041      	strb	r1, [r0, #1]
 8005648:	4770      	bx	lr
	...

0800564c <USBPD_PRL_Init>:
 800564c:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
 800564e:	b081      	sub	sp, #4
 8005650:	0014      	movs	r4, r2
 8005652:	001d      	movs	r5, r3
 8005654:	2616      	movs	r6, #22
 8005656:	209c      	movs	r0, #156	; 0x9c
 8005658:	0040      	lsls	r0, r0, #1
 800565a:	f012 fca1 	bl	8017fa0 <malloc>
 800565e:	0007      	movs	r7, r0
 8005660:	d01e      	beq.n	80056a0 <USBPD_PRL_Init+0x54>
 8005662:	9e02      	ldr	r6, [sp, #8]
 8005664:	219c      	movs	r1, #156	; 0x9c
 8005666:	0049      	lsls	r1, r1, #1
 8005668:	f012 fe5b 	bl	8018322 <__aeabi_memclr>
 800566c:	220f      	movs	r2, #15
 800566e:	2103      	movs	r1, #3
 8005670:	1db8      	adds	r0, r7, #6
 8005672:	f012 fe4f 	bl	8018314 <__aeabi_memset>
 8005676:	4841      	ldr	r0, [pc, #260]	; (800577c <.text_15>)
 8005678:	4669      	mov	r1, sp
 800567a:	7909      	ldrb	r1, [r1, #4]
 800567c:	0089      	lsls	r1, r1, #2
 800567e:	5047      	str	r7, [r0, r1]
 8005680:	62bc      	str	r4, [r7, #40]	; 0x28
 8005682:	62fd      	str	r5, [r7, #44]	; 0x2c
 8005684:	2001      	movs	r0, #1
 8005686:	9000      	str	r0, [sp, #0]
 8005688:	6870      	ldr	r0, [r6, #4]
 800568a:	0743      	lsls	r3, r0, #29
 800568c:	0fdb      	lsrs	r3, r3, #31
 800568e:	003a      	movs	r2, r7
 8005690:	3230      	adds	r2, #48	; 0x30
 8005692:	bf00      	nop
 8005694:	a103      	add	r1, pc, #12	; (adr r1, 80056a4 <USBPD_PRL_Init::PRL_PhyCallbacks>)
 8005696:	4668      	mov	r0, sp
 8005698:	7900      	ldrb	r0, [r0, #4]
 800569a:	f006 fd13 	bl	800c0c4 <USBPD_PHY_Init>
 800569e:	0006      	movs	r6, r0
 80056a0:	0030      	movs	r0, r6
 80056a2:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

080056a4 <USBPD_PRL_Init::PRL_PhyCallbacks>:
 80056a4:	5cdd 0800 6035 0800 608f 0800 60a9 0800     .\..5`...`...`..
 80056b4:	60b1 0800 579d 0800                         .`...W..

080056bc <USBPD_PRL_GetMemoryConsumption>:
 80056bc:	20ea      	movs	r0, #234	; 0xea
 80056be:	0080      	lsls	r0, r0, #2
 80056c0:	4770      	bx	lr

080056c2 <USBPD_PRL_SetHeader>:
 80056c2:	b530      	push	{r4, r5, lr}
 80056c4:	4c2d      	ldr	r4, [pc, #180]	; (800577c <.text_15>)
 80056c6:	0080      	lsls	r0, r0, #2
 80056c8:	5820      	ldr	r0, [r4, r0]
 80056ca:	8a44      	ldrh	r4, [r0, #18]
 80056cc:	4d2c      	ldr	r5, [pc, #176]	; (8005780 <.text_16>)
 80056ce:	4025      	ands	r5, r4
 80056d0:	0209      	lsls	r1, r1, #8
 80056d2:	2480      	movs	r4, #128	; 0x80
 80056d4:	0064      	lsls	r4, r4, #1
 80056d6:	4021      	ands	r1, r4
 80056d8:	4329      	orrs	r1, r5
 80056da:	8241      	strh	r1, [r0, #18]
 80056dc:	4c29      	ldr	r4, [pc, #164]	; (8005784 <.text_17>)
 80056de:	400c      	ands	r4, r1
 80056e0:	0151      	lsls	r1, r2, #5
 80056e2:	2220      	movs	r2, #32
 80056e4:	4011      	ands	r1, r2
 80056e6:	4321      	orrs	r1, r4
 80056e8:	8241      	strh	r1, [r0, #18]
 80056ea:	4a27      	ldr	r2, [pc, #156]	; (8005788 <.text_18>)
 80056ec:	400a      	ands	r2, r1
 80056ee:	0199      	lsls	r1, r3, #6
 80056f0:	23c0      	movs	r3, #192	; 0xc0
 80056f2:	400b      	ands	r3, r1
 80056f4:	4313      	orrs	r3, r2
 80056f6:	8243      	strh	r3, [r0, #18]
 80056f8:	bd30      	pop	{r4, r5, pc}

080056fa <USBPD_PRL_SetHeaderPowerRole>:
 80056fa:	4a20      	ldr	r2, [pc, #128]	; (800577c <.text_15>)
 80056fc:	0080      	lsls	r0, r0, #2
 80056fe:	5810      	ldr	r0, [r2, r0]
 8005700:	8a42      	ldrh	r2, [r0, #18]
 8005702:	4b1f      	ldr	r3, [pc, #124]	; (8005780 <.text_16>)
 8005704:	4013      	ands	r3, r2
 8005706:	0209      	lsls	r1, r1, #8
 8005708:	2280      	movs	r2, #128	; 0x80
 800570a:	0052      	lsls	r2, r2, #1
 800570c:	e007      	b.n	800571e <.text_10>

0800570e <USBPD_PRL_SetHeaderDataRole>:
 800570e:	4a1b      	ldr	r2, [pc, #108]	; (800577c <.text_15>)
 8005710:	0080      	lsls	r0, r0, #2
 8005712:	5810      	ldr	r0, [r2, r0]
 8005714:	8a42      	ldrh	r2, [r0, #18]
 8005716:	4b1b      	ldr	r3, [pc, #108]	; (8005784 <.text_17>)
 8005718:	4013      	ands	r3, r2
 800571a:	0149      	lsls	r1, r1, #5
 800571c:	2220      	movs	r2, #32

0800571e <.text_10>:
 800571e:	4011      	ands	r1, r2
 8005720:	4319      	orrs	r1, r3
 8005722:	8241      	strh	r1, [r0, #18]
 8005724:	4770      	bx	lr

08005726 <USBPD_PRL_SetHeaderSpecification>:
 8005726:	4a15      	ldr	r2, [pc, #84]	; (800577c <.text_15>)
 8005728:	0080      	lsls	r0, r0, #2
 800572a:	5810      	ldr	r0, [r2, r0]
 800572c:	8a42      	ldrh	r2, [r0, #18]
 800572e:	4b16      	ldr	r3, [pc, #88]	; (8005788 <.text_18>)
 8005730:	4013      	ands	r3, r2
 8005732:	0189      	lsls	r1, r1, #6
 8005734:	22c0      	movs	r2, #192	; 0xc0
 8005736:	400a      	ands	r2, r1
 8005738:	431a      	orrs	r2, r3
 800573a:	8242      	strh	r2, [r0, #18]
 800573c:	4770      	bx	lr

0800573e <USBPD_PRL_CBL_SetHeaderSpecification>:
 800573e:	4a0f      	ldr	r2, [pc, #60]	; (800577c <.text_15>)
 8005740:	0080      	lsls	r0, r0, #2
 8005742:	5810      	ldr	r0, [r2, r0]
 8005744:	018a      	lsls	r2, r1, #6
 8005746:	21c0      	movs	r1, #192	; 0xc0
 8005748:	4011      	ands	r1, r2
 800574a:	4a0f      	ldr	r2, [pc, #60]	; (8005788 <.text_18>)
 800574c:	8a83      	ldrh	r3, [r0, #20]
 800574e:	4013      	ands	r3, r2
 8005750:	430b      	orrs	r3, r1
 8005752:	8283      	strh	r3, [r0, #20]
 8005754:	8ac3      	ldrh	r3, [r0, #22]
 8005756:	401a      	ands	r2, r3
 8005758:	4311      	orrs	r1, r2
 800575a:	82c1      	strh	r1, [r0, #22]
 800575c:	4770      	bx	lr

0800575e <USBPD_PRL_SRCSetSinkNG>:
 800575e:	b580      	push	{r7, lr}
 8005760:	f006 fda5 	bl	800c2ae <USBPD_PHY_SetResistor_SinkTxNG>
 8005764:	bd01      	pop	{r0, pc}

08005766 <USBPD_PRL_SRCReleaseSinkNG>:
 8005766:	b510      	push	{r4, lr}
 8005768:	0004      	movs	r4, r0
 800576a:	f006 fdaf 	bl	800c2cc <USBPD_PHY_SetResistor_SinkTxOK>
 800576e:	2000      	movs	r0, #0
 8005770:	4902      	ldr	r1, [pc, #8]	; (800577c <.text_15>)
 8005772:	00a2      	lsls	r2, r4, #2
 8005774:	5889      	ldr	r1, [r1, r2]
 8005776:	7148      	strb	r0, [r1, #5]
 8005778:	bd10      	pop	{r4, pc}
	...

0800577c <.text_15>:
 800577c:	200001c8 	.word	0x200001c8

08005780 <.text_16>:
 8005780:	0000feff 	.word	0x0000feff

08005784 <.text_17>:
 8005784:	0000ffdf 	.word	0x0000ffdf

08005788 <.text_18>:
 8005788:	0000ff3f 	.word	0x0000ff3f

0800578c <USBPD_PRL_IsResistor_SinkTxOK>:
 800578c:	b580      	push	{r7, lr}
 800578e:	f006 fdc3 	bl	800c318 <USBPD_PHY_IsResistor_SinkTxOk>
 8005792:	bd02      	pop	{r1, pc}

08005794 <USBPD_PRL_FastRoleSwapSignalling>:
 8005794:	b580      	push	{r7, lr}
 8005796:	f006 fdcf 	bl	800c338 <USBPD_PHY_FastRoleSwapSignalling>
 800579a:	bd01      	pop	{r0, pc}

0800579c <PRL_FastRoleSwapReception>:
 800579c:	b580      	push	{r7, lr}
 800579e:	f7fb fa4d 	bl	8000c3c <PE_PRL_FastRoleSwapReception>
 80057a2:	bd01      	pop	{r0, pc}

080057a4 <USBPD_PRL_SOPCapability>:
 80057a4:	b580      	push	{r7, lr}
 80057a6:	f006 fda1 	bl	800c2ec <USBPD_PHY_SOPSupported>
 80057aa:	bd01      	pop	{r0, pc}

080057ac <USBPD_PRL_SendMessage>:
 80057ac:	b5f5      	push	{r0, r2, r4, r5, r6, r7, lr}
 80057ae:	b087      	sub	sp, #28
 80057b0:	2503      	movs	r5, #3
 80057b2:	4668      	mov	r0, sp
 80057b4:	7f00      	ldrb	r0, [r0, #28]
 80057b6:	9005      	str	r0, [sp, #20]
 80057b8:	48ca      	ldr	r0, [pc, #808]	; (8005ae4 <USBPD_PRL_SendMessage+0x338>)
 80057ba:	9a05      	ldr	r2, [sp, #20]
 80057bc:	0092      	lsls	r2, r2, #2
 80057be:	1880      	adds	r0, r0, r2
 80057c0:	9000      	str	r0, [sp, #0]
 80057c2:	6800      	ldr	r0, [r0, #0]
 80057c4:	0004      	movs	r4, r0
 80057c6:	7962      	ldrb	r2, [r4, #5]
 80057c8:	2a00      	cmp	r2, #0
 80057ca:	d004      	beq.n	80057d6 <USBPD_PRL_SendMessage+0x2a>
 80057cc:	7a62      	ldrb	r2, [r4, #9]
 80057ce:	2a00      	cmp	r2, #0
 80057d0:	d101      	bne.n	80057d6 <USBPD_PRL_SendMessage+0x2a>
 80057d2:	220f      	movs	r2, #15
 80057d4:	7142      	strb	r2, [r0, #5]
 80057d6:	466a      	mov	r2, sp
 80057d8:	7111      	strb	r1, [r2, #4]
 80057da:	4669      	mov	r1, sp
 80057dc:	7909      	ldrb	r1, [r1, #4]
 80057de:	9104      	str	r1, [sp, #16]
 80057e0:	1861      	adds	r1, r4, r1
 80057e2:	9a05      	ldr	r2, [sp, #20]
 80057e4:	0052      	lsls	r2, r2, #1
 80057e6:	1c52      	adds	r2, r2, #1
 80057e8:	466e      	mov	r6, sp
 80057ea:	7172      	strb	r2, [r6, #5]
 80057ec:	9a04      	ldr	r2, [sp, #16]
 80057ee:	0052      	lsls	r2, r2, #1
 80057f0:	9203      	str	r2, [sp, #12]
 80057f2:	2600      	movs	r6, #0
 80057f4:	9302      	str	r3, [sp, #8]
 80057f6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80057f8:	7963      	ldrb	r3, [r4, #5]
 80057fa:	2b10      	cmp	r3, #16
 80057fc:	d900      	bls.n	8005800 <USBPD_PRL_SendMessage+0x54>
 80057fe:	e1f6      	b.n	8005bee <USBPD_PRL_SendMessage+0x442>
 8005800:	a701      	add	r7, pc, #4	; (adr r7, 8005808 <USBPD_PRL_SendMessage+0x5c>)
 8005802:	005b      	lsls	r3, r3, #1
 8005804:	5aff      	ldrh	r7, [r7, r3]
 8005806:	44bf      	add	pc, r7
 8005808:	00480020 	.word	0x00480020
 800580c:	03e4005e 	.word	0x03e4005e
 8005810:	00a8006a 	.word	0x00a8006a
 8005814:	015a0086 	.word	0x015a0086
 8005818:	03e403e4 	.word	0x03e403e4
 800581c:	030802de 	.word	0x030802de
 8005820:	03560334 	.word	0x03560334
 8005824:	03de03e4 	.word	0x03de03e4
 8005828:	03a6      	.short	0x03a6
 800582a:	f3ef 8710 	mrs	r7, PRIMASK
 800582e:	b672      	cpsid	i
 8005830:	4668      	mov	r0, sp
 8005832:	7f00      	ldrb	r0, [r0, #28]
 8005834:	f7fb f8b4 	bl	80009a0 <PE_PRL_Control_RxEvent>
 8005838:	2800      	cmp	r0, #0
 800583a:	d105      	bne.n	8005848 <USBPD_PRL_SendMessage+0x9c>
 800583c:	7aa0      	ldrb	r0, [r4, #10]
 800583e:	2800      	cmp	r0, #0
 8005840:	d102      	bne.n	8005848 <USBPD_PRL_SendMessage+0x9c>
 8005842:	20ff      	movs	r0, #255	; 0xff
 8005844:	7260      	strb	r0, [r4, #9]
 8005846:	e000      	b.n	800584a <USBPD_PRL_SendMessage+0x9e>
 8005848:	7266      	strb	r6, [r4, #9]
 800584a:	f387 8810 	msr	PRIMASK, r7
 800584e:	2006      	movs	r0, #6
 8005850:	e1a0      	b.n	8005b94 <USBPD_PRL_SendMessage+0x3e8>
 8005852:	4668      	mov	r0, sp
 8005854:	7f00      	ldrb	r0, [r0, #28]
 8005856:	f006 fd2a 	bl	800c2ae <USBPD_PHY_SetResistor_SinkTxNG>
 800585a:	2002      	movs	r0, #2
 800585c:	9900      	ldr	r1, [sp, #0]
 800585e:	6809      	ldr	r1, [r1, #0]
 8005860:	7148      	strb	r0, [r1, #5]
 8005862:	2013      	movs	r0, #19
 8005864:	7060      	strb	r0, [r4, #1]
 8005866:	e1c4      	b.n	8005bf2 <USBPD_PRL_SendMessage+0x446>
 8005868:	2a01      	cmp	r2, #1
 800586a:	d10f      	bne.n	800588c <USBPD_PRL_SendMessage+0xe0>
 800586c:	7861      	ldrb	r1, [r4, #1]
 800586e:	2900      	cmp	r1, #0
 8005870:	d10a      	bne.n	8005888 <USBPD_PRL_SendMessage+0xdc>
 8005872:	e01c      	b.n	80058ae <USBPD_PRL_SendMessage+0x102>
 8005874:	2a02      	cmp	r2, #2
 8005876:	d109      	bne.n	800588c <USBPD_PRL_SendMessage+0xe0>
 8005878:	4668      	mov	r0, sp
 800587a:	7f00      	ldrb	r0, [r0, #28]
 800587c:	f006 fd4c 	bl	800c318 <USBPD_PHY_IsResistor_SinkTxOk>
 8005880:	2801      	cmp	r0, #1
 8005882:	d101      	bne.n	8005888 <USBPD_PRL_SendMessage+0xdc>
 8005884:	2005      	movs	r0, #5
 8005886:	e185      	b.n	8005b94 <USBPD_PRL_SendMessage+0x3e8>
 8005888:	2509      	movs	r5, #9
 800588a:	e1b2      	b.n	8005bf2 <USBPD_PRL_SendMessage+0x446>
 800588c:	2106      	movs	r1, #6
 800588e:	e154      	b.n	8005b3a <USBPD_PRL_SendMessage+0x38e>
 8005890:	9903      	ldr	r1, [sp, #12]
 8005892:	1861      	adds	r1, r4, r1
 8005894:	8a49      	ldrh	r1, [r1, #18]
 8005896:	0609      	lsls	r1, r1, #24
 8005898:	0f89      	lsrs	r1, r1, #30
 800589a:	2902      	cmp	r1, #2
 800589c:	d107      	bne.n	80058ae <USBPD_PRL_SendMessage+0x102>
 800589e:	2a01      	cmp	r2, #1
 80058a0:	d101      	bne.n	80058a6 <USBPD_PRL_SendMessage+0xfa>
 80058a2:	7142      	strb	r2, [r0, #5]
 80058a4:	e1a5      	b.n	8005bf2 <USBPD_PRL_SendMessage+0x446>
 80058a6:	2a02      	cmp	r2, #2
 80058a8:	d101      	bne.n	80058ae <USBPD_PRL_SendMessage+0x102>
 80058aa:	2104      	movs	r1, #4
 80058ac:	e145      	b.n	8005b3a <USBPD_PRL_SendMessage+0x38e>
 80058ae:	2105      	movs	r1, #5
 80058b0:	e143      	b.n	8005b3a <USBPD_PRL_SendMessage+0x38e>
 80058b2:	9803      	ldr	r0, [sp, #12]
 80058b4:	1820      	adds	r0, r4, r0
 80058b6:	8a43      	ldrh	r3, [r0, #18]
 80058b8:	4acf      	ldr	r2, [pc, #828]	; (8005bf8 <.text_24>)
 80058ba:	401a      	ands	r2, r3
 80058bc:	ab08      	add	r3, sp, #32
 80058be:	781b      	ldrb	r3, [r3, #0]
 80058c0:	06db      	lsls	r3, r3, #27
 80058c2:	0edb      	lsrs	r3, r3, #27
 80058c4:	4313      	orrs	r3, r2
 80058c6:	8243      	strh	r3, [r0, #18]
 80058c8:	045a      	lsls	r2, r3, #17
 80058ca:	0c52      	lsrs	r2, r2, #17
 80058cc:	ab08      	add	r3, sp, #32
 80058ce:	781b      	ldrb	r3, [r3, #0]
 80058d0:	09db      	lsrs	r3, r3, #7
 80058d2:	03db      	lsls	r3, r3, #15
 80058d4:	4313      	orrs	r3, r2
 80058d6:	8243      	strh	r3, [r0, #18]
 80058d8:	70a6      	strb	r6, [r4, #2]
 80058da:	8a43      	ldrh	r3, [r0, #18]
 80058dc:	0bda      	lsrs	r2, r3, #15
 80058de:	d023      	beq.n	8005928 <USBPD_PRL_SendMessage+0x17c>
 80058e0:	9a02      	ldr	r2, [sp, #8]
 80058e2:	7892      	ldrb	r2, [r2, #2]
 80058e4:	9b02      	ldr	r3, [sp, #8]
 80058e6:	78db      	ldrb	r3, [r3, #3]
 80058e8:	021b      	lsls	r3, r3, #8
 80058ea:	18d2      	adds	r2, r2, r3
 80058ec:	83a2      	strh	r2, [r4, #28]
 80058ee:	8ba2      	ldrh	r2, [r4, #28]
 80058f0:	0a93      	lsrs	r3, r2, #10
 80058f2:	07db      	lsls	r3, r3, #31
 80058f4:	d40f      	bmi.n	8005916 <USBPD_PRL_SendMessage+0x16a>
 80058f6:	0ad2      	lsrs	r2, r2, #11
 80058f8:	0712      	lsls	r2, r2, #28
 80058fa:	d122      	bne.n	8005942 <USBPD_PRL_SendMessage+0x196>
 80058fc:	466a      	mov	r2, sp
 80058fe:	8f12      	ldrh	r2, [r2, #56]	; 0x38
 8005900:	1f12      	subs	r2, r2, #4
 8005902:	8462      	strh	r2, [r4, #34]	; 0x22
 8005904:	05d2      	lsls	r2, r2, #23
 8005906:	0dd2      	lsrs	r2, r2, #23
 8005908:	8ba3      	ldrh	r3, [r4, #28]
 800590a:	27fe      	movs	r7, #254	; 0xfe
 800590c:	023f      	lsls	r7, r7, #8
 800590e:	401f      	ands	r7, r3
 8005910:	433a      	orrs	r2, r7
 8005912:	83a2      	strh	r2, [r4, #28]
 8005914:	e015      	b.n	8005942 <USBPD_PRL_SendMessage+0x196>
 8005916:	8466      	strh	r6, [r4, #34]	; 0x22
 8005918:	8a42      	ldrh	r2, [r0, #18]
 800591a:	4bb8      	ldr	r3, [pc, #736]	; (8005bfc <.text_25>)
 800591c:	4013      	ands	r3, r2
 800591e:	2280      	movs	r2, #128	; 0x80
 8005920:	0152      	lsls	r2, r2, #5
 8005922:	431a      	orrs	r2, r3
 8005924:	8242      	strh	r2, [r0, #18]
 8005926:	e00c      	b.n	8005942 <USBPD_PRL_SendMessage+0x196>
 8005928:	4ab4      	ldr	r2, [pc, #720]	; (8005bfc <.text_25>)
 800592a:	401a      	ands	r2, r3
 800592c:	466b      	mov	r3, sp
 800592e:	8f1b      	ldrh	r3, [r3, #56]	; 0x38
 8005930:	1e9b      	subs	r3, r3, #2
 8005932:	089b      	lsrs	r3, r3, #2
 8005934:	031b      	lsls	r3, r3, #12
 8005936:	27e0      	movs	r7, #224	; 0xe0
 8005938:	01ff      	lsls	r7, r7, #7
 800593a:	401f      	ands	r7, r3
 800593c:	4317      	orrs	r7, r2
 800593e:	8247      	strh	r7, [r0, #18]
 8005940:	8466      	strh	r6, [r4, #34]	; 0x22
 8005942:	aa08      	add	r2, sp, #32
 8005944:	7812      	ldrb	r2, [r2, #0]
 8005946:	2a0d      	cmp	r2, #13
 8005948:	d10a      	bne.n	8005960 <USBPD_PRL_SendMessage+0x1b4>
 800594a:	8a40      	ldrh	r0, [r0, #18]
 800594c:	22f0      	movs	r2, #240	; 0xf0
 800594e:	0212      	lsls	r2, r2, #8
 8005950:	4002      	ands	r2, r0
 8005952:	d105      	bne.n	8005960 <USBPD_PRL_SendMessage+0x1b4>
 8005954:	72ce      	strb	r6, [r1, #11]
 8005956:	220f      	movs	r2, #15
 8005958:	2103      	movs	r1, #3
 800595a:	1da0      	adds	r0, r4, #6
 800595c:	f012 fcda 	bl	8018314 <__aeabi_memset>
 8005960:	2007      	movs	r0, #7
 8005962:	e117      	b.n	8005b94 <USBPD_PRL_SendMessage+0x3e8>
 8005964:	4669      	mov	r1, sp
 8005966:	8f0c      	ldrh	r4, [r1, #56]	; 0x38
 8005968:	9903      	ldr	r1, [sp, #12]
 800596a:	1841      	adds	r1, r0, r1
 800596c:	4a5d      	ldr	r2, [pc, #372]	; (8005ae4 <USBPD_PRL_SendMessage+0x338>)
 800596e:	466b      	mov	r3, sp
 8005970:	7f1b      	ldrb	r3, [r3, #28]
 8005972:	009b      	lsls	r3, r3, #2
 8005974:	58d2      	ldr	r2, [r2, r3]
 8005976:	466b      	mov	r3, sp
 8005978:	791b      	ldrb	r3, [r3, #4]
 800597a:	005b      	lsls	r3, r3, #1
 800597c:	18d2      	adds	r2, r2, r3
 800597e:	8a52      	ldrh	r2, [r2, #18]
 8005980:	0bd3      	lsrs	r3, r2, #15
 8005982:	d074      	beq.n	8005a6e <USBPD_PRL_SendMessage+0x2c2>
 8005984:	8b83      	ldrh	r3, [r0, #28]
 8005986:	0a9b      	lsrs	r3, r3, #10
 8005988:	07db      	lsls	r3, r3, #31
 800598a:	d465      	bmi.n	8005a58 <USBPD_PRL_SendMessage+0x2ac>
 800598c:	4b55      	ldr	r3, [pc, #340]	; (8005ae4 <USBPD_PRL_SendMessage+0x338>)
 800598e:	466f      	mov	r7, sp
 8005990:	7f3f      	ldrb	r7, [r7, #28]
 8005992:	00bf      	lsls	r7, r7, #2
 8005994:	59db      	ldr	r3, [r3, r7]
 8005996:	8b9b      	ldrh	r3, [r3, #28]
 8005998:	8c47      	ldrh	r7, [r0, #34]	; 0x22
 800599a:	2f1b      	cmp	r7, #27
 800599c:	d30a      	bcc.n	80059b4 <USBPD_PRL_SendMessage+0x208>
 800599e:	0bdf      	lsrs	r7, r3, #15
 80059a0:	d008      	beq.n	80059b4 <USBPD_PRL_SendMessage+0x208>
 80059a2:	23e0      	movs	r3, #224	; 0xe0
 80059a4:	01db      	lsls	r3, r3, #7
 80059a6:	4313      	orrs	r3, r2
 80059a8:	824b      	strh	r3, [r1, #18]
 80059aa:	8c41      	ldrh	r1, [r0, #34]	; 0x22
 80059ac:	391a      	subs	r1, #26
 80059ae:	8441      	strh	r1, [r0, #34]	; 0x22
 80059b0:	241e      	movs	r4, #30
 80059b2:	e051      	b.n	8005a58 <USBPD_PRL_SendMessage+0x2ac>
 80059b4:	0ada      	lsrs	r2, r3, #11
 80059b6:	0712      	lsls	r2, r2, #28
 80059b8:	d107      	bne.n	80059ca <USBPD_PRL_SendMessage+0x21e>
 80059ba:	22fe      	movs	r2, #254	; 0xfe
 80059bc:	0212      	lsls	r2, r2, #8
 80059be:	401a      	ands	r2, r3
 80059c0:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 80059c2:	05db      	lsls	r3, r3, #23
 80059c4:	0ddb      	lsrs	r3, r3, #23
 80059c6:	4313      	orrs	r3, r2
 80059c8:	8383      	strh	r3, [r0, #28]
 80059ca:	8a4b      	ldrh	r3, [r1, #18]
 80059cc:	4a8b      	ldr	r2, [pc, #556]	; (8005bfc <.text_25>)
 80059ce:	401a      	ands	r2, r3
 80059d0:	824a      	strh	r2, [r1, #18]
 80059d2:	8b83      	ldrh	r3, [r0, #28]
 80059d4:	0bdb      	lsrs	r3, r3, #15
 80059d6:	d03c      	beq.n	8005a52 <USBPD_PRL_SendMessage+0x2a6>
 80059d8:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 80059da:	1c9b      	adds	r3, r3, #2
 80059dc:	089b      	lsrs	r3, r3, #2
 80059de:	031b      	lsls	r3, r3, #12
 80059e0:	24e0      	movs	r4, #224	; 0xe0
 80059e2:	01e4      	lsls	r4, r4, #7
 80059e4:	401c      	ands	r4, r3
 80059e6:	4314      	orrs	r4, r2
 80059e8:	824c      	strh	r4, [r1, #18]
 80059ea:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 80059ec:	1c80      	adds	r0, r0, #2
 80059ee:	0781      	lsls	r1, r0, #30
 80059f0:	0f89      	lsrs	r1, r1, #30
 80059f2:	d025      	beq.n	8005a40 <USBPD_PRL_SendMessage+0x294>
 80059f4:	2200      	movs	r2, #0
 80059f6:	483b      	ldr	r0, [pc, #236]	; (8005ae4 <USBPD_PRL_SendMessage+0x338>)
 80059f8:	9b05      	ldr	r3, [sp, #20]
 80059fa:	009b      	lsls	r3, r3, #2
 80059fc:	18c0      	adds	r0, r0, r3
 80059fe:	9000      	str	r0, [sp, #0]
 8005a00:	9802      	ldr	r0, [sp, #8]
 8005a02:	9102      	str	r1, [sp, #8]
 8005a04:	e004      	b.n	8005a10 <USBPD_PRL_SendMessage+0x264>
 8005a06:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8005a08:	1859      	adds	r1, r3, r1
 8005a0a:	1841      	adds	r1, r0, r1
 8005a0c:	710e      	strb	r6, [r1, #4]
 8005a0e:	1c52      	adds	r2, r2, #1
 8005a10:	9900      	ldr	r1, [sp, #0]
 8005a12:	680b      	ldr	r3, [r1, #0]
 8005a14:	b2d1      	uxtb	r1, r2
 8005a16:	2404      	movs	r4, #4
 8005a18:	9f02      	ldr	r7, [sp, #8]
 8005a1a:	1be4      	subs	r4, r4, r7
 8005a1c:	42a1      	cmp	r1, r4
 8005a1e:	d3f2      	bcc.n	8005a06 <USBPD_PRL_SendMessage+0x25a>
 8005a20:	9002      	str	r0, [sp, #8]
 8005a22:	0018      	movs	r0, r3
 8005a24:	3012      	adds	r0, #18
 8005a26:	9903      	ldr	r1, [sp, #12]
 8005a28:	1840      	adds	r0, r0, r1
 8005a2a:	8801      	ldrh	r1, [r0, #0]
 8005a2c:	4a73      	ldr	r2, [pc, #460]	; (8005bfc <.text_25>)
 8005a2e:	400a      	ands	r2, r1
 8005a30:	0b09      	lsrs	r1, r1, #12
 8005a32:	1c49      	adds	r1, r1, #1
 8005a34:	0309      	lsls	r1, r1, #12
 8005a36:	23e0      	movs	r3, #224	; 0xe0
 8005a38:	01db      	lsls	r3, r3, #7
 8005a3a:	400b      	ands	r3, r1
 8005a3c:	4313      	orrs	r3, r2
 8005a3e:	8003      	strh	r3, [r0, #0]
 8005a40:	9800      	ldr	r0, [sp, #0]
 8005a42:	6800      	ldr	r0, [r0, #0]
 8005a44:	3012      	adds	r0, #18
 8005a46:	9903      	ldr	r1, [sp, #12]
 8005a48:	5a40      	ldrh	r0, [r0, r1]
 8005a4a:	0440      	lsls	r0, r0, #17
 8005a4c:	0f40      	lsrs	r0, r0, #29
 8005a4e:	0084      	lsls	r4, r0, #2
 8005a50:	1ca4      	adds	r4, r4, #2
 8005a52:	9800      	ldr	r0, [sp, #0]
 8005a54:	6800      	ldr	r0, [r0, #0]
 8005a56:	8446      	strh	r6, [r0, #34]	; 0x22
 8005a58:	9800      	ldr	r0, [sp, #0]
 8005a5a:	6800      	ldr	r0, [r0, #0]
 8005a5c:	8b80      	ldrh	r0, [r0, #28]
 8005a5e:	9902      	ldr	r1, [sp, #8]
 8005a60:	7088      	strb	r0, [r1, #2]
 8005a62:	9800      	ldr	r0, [sp, #0]
 8005a64:	6800      	ldr	r0, [r0, #0]
 8005a66:	8b80      	ldrh	r0, [r0, #28]
 8005a68:	0a00      	lsrs	r0, r0, #8
 8005a6a:	9902      	ldr	r1, [sp, #8]
 8005a6c:	70c8      	strb	r0, [r1, #3]
 8005a6e:	9800      	ldr	r0, [sp, #0]
 8005a70:	6802      	ldr	r2, [r0, #0]
 8005a72:	0010      	movs	r0, r2
 8005a74:	3012      	adds	r0, #18
 8005a76:	9903      	ldr	r1, [sp, #12]
 8005a78:	1840      	adds	r0, r0, r1
 8005a7a:	8803      	ldrh	r3, [r0, #0]
 8005a7c:	498c      	ldr	r1, [pc, #560]	; (8005cb0 <.text_30>)
 8005a7e:	4019      	ands	r1, r3
 8005a80:	320b      	adds	r2, #11
 8005a82:	9b04      	ldr	r3, [sp, #16]
 8005a84:	5cd2      	ldrb	r2, [r2, r3]
 8005a86:	0253      	lsls	r3, r2, #9
 8005a88:	22e0      	movs	r2, #224	; 0xe0
 8005a8a:	0112      	lsls	r2, r2, #4
 8005a8c:	401a      	ands	r2, r3
 8005a8e:	430a      	orrs	r2, r1
 8005a90:	8002      	strh	r2, [r0, #0]
 8005a92:	9802      	ldr	r0, [sp, #8]
 8005a94:	7002      	strb	r2, [r0, #0]
 8005a96:	9800      	ldr	r0, [sp, #0]
 8005a98:	6800      	ldr	r0, [r0, #0]
 8005a9a:	3012      	adds	r0, #18
 8005a9c:	9903      	ldr	r1, [sp, #12]
 8005a9e:	5a40      	ldrh	r0, [r0, r1]
 8005aa0:	0a00      	lsrs	r0, r0, #8
 8005aa2:	9902      	ldr	r1, [sp, #8]
 8005aa4:	7048      	strb	r0, [r1, #1]
 8005aa6:	9800      	ldr	r0, [sp, #0]
 8005aa8:	6800      	ldr	r0, [r0, #0]
 8005aaa:	81c4      	strh	r4, [r0, #14]
 8005aac:	210a      	movs	r1, #10
 8005aae:	7141      	strb	r1, [r0, #5]
 8005ab0:	2102      	movs	r1, #2
 8005ab2:	7401      	strb	r1, [r0, #16]
 8005ab4:	b2a0      	uxth	r0, r4
 8005ab6:	9000      	str	r0, [sp, #0]
 8005ab8:	9b02      	ldr	r3, [sp, #8]
 8005aba:	4668      	mov	r0, sp
 8005abc:	7902      	ldrb	r2, [r0, #4]
 8005abe:	7f01      	ldrb	r1, [r0, #28]
 8005ac0:	2002      	movs	r0, #2
 8005ac2:	4e7c      	ldr	r6, [pc, #496]	; (8005cb4 <.text_31>)
 8005ac4:	6836      	ldr	r6, [r6, #0]
 8005ac6:	47b0      	blx	r6
 8005ac8:	497b      	ldr	r1, [pc, #492]	; (8005cb8 <.text_32>)
 8005aca:	4668      	mov	r0, sp
 8005acc:	7940      	ldrb	r0, [r0, #5]
 8005ace:	f007 ffaf 	bl	800da30 <USBPD_TIM_Start>
 8005ad2:	b2a3      	uxth	r3, r4
 8005ad4:	9a02      	ldr	r2, [sp, #8]
 8005ad6:	4668      	mov	r0, sp
 8005ad8:	7901      	ldrb	r1, [r0, #4]
 8005ada:	7f00      	ldrb	r0, [r0, #28]
 8005adc:	f006 fba1 	bl	800c222 <USBPD_PHY_SendMessage>
 8005ae0:	e087      	b.n	8005bf2 <USBPD_PRL_SendMessage+0x446>
 8005ae2:	bf00      	nop
 8005ae4:	200001c8 	.word	0x200001c8
 8005ae8:	f3ef 8410 	mrs	r4, PRIMASK
 8005aec:	b672      	cpsid	i
 8005aee:	9800      	ldr	r0, [sp, #0]
 8005af0:	6800      	ldr	r0, [r0, #0]
 8005af2:	7940      	ldrb	r0, [r0, #5]
 8005af4:	280a      	cmp	r0, #10
 8005af6:	d109      	bne.n	8005b0c <USBPD_PRL_SendMessage+0x360>
 8005af8:	4668      	mov	r0, sp
 8005afa:	7940      	ldrb	r0, [r0, #5]
 8005afc:	f008 f806 	bl	800db0c <USBPD_TIM_IsExpired>
 8005b00:	2801      	cmp	r0, #1
 8005b02:	d103      	bne.n	8005b0c <USBPD_PRL_SendMessage+0x360>
 8005b04:	200d      	movs	r0, #13
 8005b06:	9900      	ldr	r1, [sp, #0]
 8005b08:	6809      	ldr	r1, [r1, #0]
 8005b0a:	7148      	strb	r0, [r1, #5]
 8005b0c:	f384 8810 	msr	PRIMASK, r4
 8005b10:	e06f      	b.n	8005bf2 <USBPD_PRL_SendMessage+0x446>
 8005b12:	7aca      	ldrb	r2, [r1, #11]
 8005b14:	8b67      	ldrh	r7, [r4, #26]
 8005b16:	053f      	lsls	r7, r7, #20
 8005b18:	0f7f      	lsrs	r7, r7, #29
 8005b1a:	42ba      	cmp	r2, r7
 8005b1c:	d10c      	bne.n	8005b38 <USBPD_PRL_SendMessage+0x38c>
 8005b1e:	7ea3      	ldrb	r3, [r4, #26]
 8005b20:	06db      	lsls	r3, r3, #27
 8005b22:	0edb      	lsrs	r3, r3, #27
 8005b24:	2b01      	cmp	r3, #1
 8005b26:	d107      	bne.n	8005b38 <USBPD_PRL_SendMessage+0x38c>
 8005b28:	1c52      	adds	r2, r2, #1
 8005b2a:	0750      	lsls	r0, r2, #29
 8005b2c:	0f40      	lsrs	r0, r0, #29
 8005b2e:	72c8      	strb	r0, [r1, #11]
 8005b30:	9800      	ldr	r0, [sp, #0]
 8005b32:	6800      	ldr	r0, [r0, #0]
 8005b34:	7146      	strb	r6, [r0, #5]
 8005b36:	e011      	b.n	8005b5c <USBPD_PRL_SendMessage+0x3b0>
 8005b38:	210d      	movs	r1, #13
 8005b3a:	7141      	strb	r1, [r0, #5]
 8005b3c:	e059      	b.n	8005bf2 <USBPD_PRL_SendMessage+0x446>
 8005b3e:	7ac8      	ldrb	r0, [r1, #11]
 8005b40:	1c40      	adds	r0, r0, #1
 8005b42:	0740      	lsls	r0, r0, #29
 8005b44:	0f40      	lsrs	r0, r0, #29
 8005b46:	72c8      	strb	r0, [r1, #11]
 8005b48:	9800      	ldr	r0, [sp, #0]
 8005b4a:	6800      	ldr	r0, [r0, #0]
 8005b4c:	7146      	strb	r6, [r0, #5]
 8005b4e:	8ba1      	ldrh	r1, [r4, #28]
 8005b50:	485a      	ldr	r0, [pc, #360]	; (8005cbc <.text_33>)
 8005b52:	4008      	ands	r0, r1
 8005b54:	83a0      	strh	r0, [r4, #28]
 8005b56:	495a      	ldr	r1, [pc, #360]	; (8005cc0 <.text_34>)
 8005b58:	4001      	ands	r1, r0
 8005b5a:	83a1      	strh	r1, [r4, #28]
 8005b5c:	2505      	movs	r5, #5
 8005b5e:	e048      	b.n	8005bf2 <USBPD_PRL_SendMessage+0x446>
 8005b60:	78a0      	ldrb	r0, [r4, #2]
 8005b62:	1c40      	adds	r0, r0, #1
 8005b64:	70a0      	strb	r0, [r4, #2]
 8005b66:	9a03      	ldr	r2, [sp, #12]
 8005b68:	18a2      	adds	r2, r4, r2
 8005b6a:	8a52      	ldrh	r2, [r2, #18]
 8005b6c:	0613      	lsls	r3, r2, #24
 8005b6e:	0f9b      	lsrs	r3, r3, #30
 8005b70:	2b01      	cmp	r3, #1
 8005b72:	d101      	bne.n	8005b78 <USBPD_PRL_SendMessage+0x3cc>
 8005b74:	2303      	movs	r3, #3
 8005b76:	e000      	b.n	8005b7a <USBPD_PRL_SendMessage+0x3ce>
 8005b78:	2302      	movs	r3, #2
 8005b7a:	0bd2      	lsrs	r2, r2, #15
 8005b7c:	d006      	beq.n	8005b8c <USBPD_PRL_SendMessage+0x3e0>
 8005b7e:	8ba2      	ldrh	r2, [r4, #28]
 8005b80:	0bd4      	lsrs	r4, r2, #15
 8005b82:	d103      	bne.n	8005b8c <USBPD_PRL_SendMessage+0x3e0>
 8005b84:	05d2      	lsls	r2, r2, #23
 8005b86:	0dd2      	lsrs	r2, r2, #23
 8005b88:	2a1b      	cmp	r2, #27
 8005b8a:	d207      	bcs.n	8005b9c <USBPD_PRL_SendMessage+0x3f0>
 8005b8c:	b2c0      	uxtb	r0, r0
 8005b8e:	4283      	cmp	r3, r0
 8005b90:	d304      	bcc.n	8005b9c <USBPD_PRL_SendMessage+0x3f0>
 8005b92:	2010      	movs	r0, #16
 8005b94:	9900      	ldr	r1, [sp, #0]
 8005b96:	6809      	ldr	r1, [r1, #0]
 8005b98:	7148      	strb	r0, [r1, #5]
 8005b9a:	e02a      	b.n	8005bf2 <USBPD_PRL_SendMessage+0x446>
 8005b9c:	9800      	ldr	r0, [sp, #0]
 8005b9e:	6800      	ldr	r0, [r0, #0]
 8005ba0:	7146      	strb	r6, [r0, #5]
 8005ba2:	2507      	movs	r5, #7
 8005ba4:	7ac8      	ldrb	r0, [r1, #11]
 8005ba6:	1c40      	adds	r0, r0, #1
 8005ba8:	2207      	movs	r2, #7
 8005baa:	4002      	ands	r2, r0
 8005bac:	72ca      	strb	r2, [r1, #11]
 8005bae:	e020      	b.n	8005bf2 <USBPD_PRL_SendMessage+0x446>
 8005bb0:	210a      	movs	r1, #10
 8005bb2:	7141      	strb	r1, [r0, #5]
 8005bb4:	2002      	movs	r0, #2
 8005bb6:	7420      	strb	r0, [r4, #16]
 8005bb8:	493f      	ldr	r1, [pc, #252]	; (8005cb8 <.text_32>)
 8005bba:	4668      	mov	r0, sp
 8005bbc:	7940      	ldrb	r0, [r0, #5]
 8005bbe:	f007 ff37 	bl	800da30 <USBPD_TIM_Start>
 8005bc2:	89e3      	ldrh	r3, [r4, #14]
 8005bc4:	9a02      	ldr	r2, [sp, #8]
 8005bc6:	4668      	mov	r0, sp
 8005bc8:	7901      	ldrb	r1, [r0, #4]
 8005bca:	7f00      	ldrb	r0, [r0, #28]
 8005bcc:	f006 fb29 	bl	800c222 <USBPD_PHY_SendMessage>
 8005bd0:	4668      	mov	r0, sp
 8005bd2:	8f00      	ldrh	r0, [r0, #56]	; 0x38
 8005bd4:	9000      	str	r0, [sp, #0]
 8005bd6:	9b02      	ldr	r3, [sp, #8]
 8005bd8:	4668      	mov	r0, sp
 8005bda:	7902      	ldrb	r2, [r0, #4]
 8005bdc:	7f01      	ldrb	r1, [r0, #28]
 8005bde:	2002      	movs	r0, #2
 8005be0:	4c34      	ldr	r4, [pc, #208]	; (8005cb4 <.text_31>)
 8005be2:	6824      	ldr	r4, [r4, #0]
 8005be4:	47a0      	blx	r4
 8005be6:	e004      	b.n	8005bf2 <USBPD_PRL_SendMessage+0x446>
 8005be8:	7146      	strb	r6, [r0, #5]
 8005bea:	2506      	movs	r5, #6
 8005bec:	e001      	b.n	8005bf2 <USBPD_PRL_SendMessage+0x446>
 8005bee:	7146      	strb	r6, [r0, #5]
 8005bf0:	2510      	movs	r5, #16
 8005bf2:	0028      	movs	r0, r5
 8005bf4:	b009      	add	sp, #36	; 0x24
 8005bf6:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005bf8 <.text_24>:
 8005bf8:	0000ffe0 	.word	0x0000ffe0

08005bfc <.text_25>:
 8005bfc:	00008fff 	.word	0x00008fff

08005c00 <USBPD_PRL_ResetRequestProcess>:
 8005c00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005c02:	0005      	movs	r5, r0
 8005c04:	000e      	movs	r6, r1
 8005c06:	482f      	ldr	r0, [pc, #188]	; (8005cc4 <.text_35>)
 8005c08:	00a9      	lsls	r1, r5, #2
 8005c0a:	1840      	adds	r0, r0, r1
 8005c0c:	9000      	str	r0, [sp, #0]
 8005c0e:	6804      	ldr	r4, [r0, #0]
 8005c10:	2700      	movs	r7, #0
 8005c12:	70e7      	strb	r7, [r4, #3]
 8005c14:	72e7      	strb	r7, [r4, #11]
 8005c16:	7327      	strb	r7, [r4, #12]
 8005c18:	7367      	strb	r7, [r4, #13]
 8005c1a:	220f      	movs	r2, #15
 8005c1c:	2103      	movs	r1, #3
 8005c1e:	1da0      	adds	r0, r4, #6
 8005c20:	f012 fb78 	bl	8018314 <__aeabi_memset>
 8005c24:	9800      	ldr	r0, [sp, #0]
 8005c26:	6800      	ldr	r0, [r0, #0]
 8005c28:	7147      	strb	r7, [r0, #5]
 8005c2a:	9700      	str	r7, [sp, #0]
 8005c2c:	2300      	movs	r3, #0
 8005c2e:	0032      	movs	r2, r6
 8005c30:	0029      	movs	r1, r5
 8005c32:	2002      	movs	r0, #2
 8005c34:	4f1f      	ldr	r7, [pc, #124]	; (8005cb4 <.text_31>)
 8005c36:	683f      	ldr	r7, [r7, #0]
 8005c38:	47b8      	blx	r7
 8005c3a:	0028      	movs	r0, r5
 8005c3c:	f000 f849 	bl	8005cd2 <PRL_DisableRX>
 8005c40:	0031      	movs	r1, r6
 8005c42:	0028      	movs	r0, r5
 8005c44:	f006 fad7 	bl	800c1f6 <USBPD_PHY_ResetRequest>
 8005c48:	2005      	movs	r0, #5
 8005c4a:	7120      	strb	r0, [r4, #4]
 8005c4c:	78e0      	ldrb	r0, [r4, #3]
 8005c4e:	2801      	cmp	r0, #1
 8005c50:	d002      	beq.n	8005c58 <USBPD_PRL_ResetRequestProcess+0x58>
 8005c52:	7920      	ldrb	r0, [r4, #4]
 8005c54:	2800      	cmp	r0, #0
 8005c56:	d1f9      	bne.n	8005c4c <USBPD_PRL_ResetRequestProcess+0x4c>
 8005c58:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}

08005c5a <USBDPD_PRL_BistCarrierEyeMode>:
 8005c5a:	b580      	push	{r7, lr}
 8005c5c:	2905      	cmp	r1, #5
 8005c5e:	d102      	bne.n	8005c66 <USBDPD_PRL_BistCarrierEyeMode+0xc>
 8005c60:	f006 fafe 	bl	800c260 <USBPD_PHY_Send_BIST_Pattern>
 8005c64:	bd02      	pop	{r1, pc}
 8005c66:	2010      	movs	r0, #16
 8005c68:	bd02      	pop	{r1, pc}

08005c6a <USBDPD_PRL_BistCarrierEyeModeExit>:
 8005c6a:	b580      	push	{r7, lr}
 8005c6c:	2905      	cmp	r1, #5
 8005c6e:	d103      	bne.n	8005c78 <USBDPD_PRL_BistCarrierEyeModeExit+0xe>
 8005c70:	2107      	movs	r1, #7
 8005c72:	f006 fb05 	bl	800c280 <USBPD_PHY_ExitTransmit>
 8005c76:	bd02      	pop	{r1, pc}
 8005c78:	2010      	movs	r0, #16
 8005c7a:	bd02      	pop	{r1, pc}

08005c7c <USBPD_PRL_Reset>:
 8005c7c:	b570      	push	{r4, r5, r6, lr}
 8005c7e:	0004      	movs	r4, r0
 8005c80:	4810      	ldr	r0, [pc, #64]	; (8005cc4 <.text_35>)
 8005c82:	00a1      	lsls	r1, r4, #2
 8005c84:	5845      	ldr	r5, [r0, r1]
 8005c86:	2600      	movs	r6, #0
 8005c88:	716e      	strb	r6, [r5, #5]
 8005c8a:	702e      	strb	r6, [r5, #0]
 8005c8c:	712e      	strb	r6, [r5, #4]
 8005c8e:	72ee      	strb	r6, [r5, #11]
 8005c90:	732e      	strb	r6, [r5, #12]
 8005c92:	736e      	strb	r6, [r5, #13]
 8005c94:	220f      	movs	r2, #15
 8005c96:	2103      	movs	r1, #3
 8005c98:	1da8      	adds	r0, r5, #6
 8005c9a:	f012 fb3b 	bl	8018314 <__aeabi_memset>
 8005c9e:	2025      	movs	r0, #37	; 0x25
 8005ca0:	542e      	strb	r6, [r5, r0]
 8005ca2:	0020      	movs	r0, r4
 8005ca4:	f006 fa9d 	bl	800c1e2 <USBPD_PHY_Reset>
 8005ca8:	0020      	movs	r0, r4
 8005caa:	f006 fb54 	bl	800c356 <USBPD_PHY_EnableRX>
 8005cae:	bd70      	pop	{r4, r5, r6, pc}

08005cb0 <.text_30>:
 8005cb0:	0000f1ff 	.word	0x0000f1ff

08005cb4 <.text_31>:
 8005cb4:	20000000 	.word	0x20000000

08005cb8 <.text_32>:
 8005cb8:	00002710 	.word	0x00002710

08005cbc <.text_33>:
 8005cbc:	000087ff 	.word	0x000087ff

08005cc0 <.text_34>:
 8005cc0:	0000fbff 	.word	0x0000fbff

08005cc4 <.text_35>:
 8005cc4:	200001c8 	.word	0x200001c8

08005cc8 <USBPD_PRL_Stop>:
 8005cc8:	b580      	push	{r7, lr}
 8005cca:	f006 fb53 	bl	800c374 <USBPD_PHY_DisableRX>
 8005cce:	bd01      	pop	{r0, pc}

08005cd0 <USBPD_PRL_DeInit>:
 8005cd0:	4770      	bx	lr

08005cd2 <PRL_DisableRX>:
 8005cd2:	b580      	push	{r7, lr}
 8005cd4:	f006 fb4e 	bl	800c374 <USBPD_PHY_DisableRX>
 8005cd8:	bd01      	pop	{r0, pc}
	...

08005cdc <PRL_Received>:
 8005cdc:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
 8005cde:	b089      	sub	sp, #36	; 0x24
 8005ce0:	a809      	add	r0, sp, #36	; 0x24
 8005ce2:	7805      	ldrb	r5, [r0, #0]
 8005ce4:	48d0      	ldr	r0, [pc, #832]	; (8006028 <PRL_Received+0x34c>)
 8005ce6:	00a9      	lsls	r1, r5, #2
 8005ce8:	1846      	adds	r6, r0, r1
 8005cea:	6834      	ldr	r4, [r6, #0]
 8005cec:	4628      	mov	r0, r5
 8005cee:	f006 fa6d 	bl	800c1cc <USBPD_PHY_GetMinGOODCRCTimerValue>
 8005cf2:	a909      	add	r1, sp, #36	; 0x24
 8005cf4:	7809      	ldrb	r1, [r1, #0]
 8005cf6:	0049      	lsls	r1, r1, #1
 8005cf8:	466a      	mov	r2, sp
 8005cfa:	7011      	strb	r1, [r2, #0]
 8005cfc:	0001      	movs	r1, r0
 8005cfe:	4668      	mov	r0, sp
 8005d00:	7800      	ldrb	r0, [r0, #0]
 8005d02:	f007 fe95 	bl	800da30 <USBPD_TIM_Start>
 8005d06:	2030      	movs	r0, #48	; 0x30
 8005d08:	5c20      	ldrb	r0, [r4, r0]
 8005d0a:	2131      	movs	r1, #49	; 0x31
 8005d0c:	5c61      	ldrb	r1, [r4, r1]
 8005d0e:	0209      	lsls	r1, r1, #8
 8005d10:	1840      	adds	r0, r0, r1
 8005d12:	4669      	mov	r1, sp
 8005d14:	8088      	strh	r0, [r1, #4]
 8005d16:	4668      	mov	r0, sp
 8005d18:	8880      	ldrh	r0, [r0, #4]
 8005d1a:	0440      	lsls	r0, r0, #17
 8005d1c:	0f40      	lsrs	r0, r0, #29
 8005d1e:	0080      	lsls	r0, r0, #2
 8005d20:	9005      	str	r0, [sp, #20]
 8005d22:	1c80      	adds	r0, r0, #2
 8005d24:	9007      	str	r0, [sp, #28]
 8005d26:	48c1      	ldr	r0, [pc, #772]	; (800602c <.text_40>)
 8005d28:	8889      	ldrh	r1, [r1, #4]
 8005d2a:	4001      	ands	r1, r0
 8005d2c:	2901      	cmp	r1, #1
 8005d2e:	d116      	bne.n	8005d5e <PRL_Received+0x82>
 8005d30:	0068      	lsls	r0, r5, #1
 8005d32:	1c40      	adds	r0, r0, #1
 8005d34:	b2c0      	uxtb	r0, r0
 8005d36:	f007 fee9 	bl	800db0c <USBPD_TIM_IsExpired>
 8005d3a:	2801      	cmp	r0, #1
 8005d3c:	d04c      	beq.n	8005dd8 <PRL_Received+0xfc>
 8005d3e:	200b      	movs	r0, #11
 8005d40:	6831      	ldr	r1, [r6, #0]
 8005d42:	7148      	strb	r0, [r1, #5]
 8005d44:	4668      	mov	r0, sp
 8005d46:	8880      	ldrh	r0, [r0, #4]
 8005d48:	8360      	strh	r0, [r4, #26]
 8005d4a:	9807      	ldr	r0, [sp, #28]
 8005d4c:	9000      	str	r0, [sp, #0]
 8005d4e:	0023      	movs	r3, r4
 8005d50:	3330      	adds	r3, #48	; 0x30
 8005d52:	a80a      	add	r0, sp, #40	; 0x28
 8005d54:	7802      	ldrb	r2, [r0, #0]
 8005d56:	a809      	add	r0, sp, #36	; 0x24
 8005d58:	7801      	ldrb	r1, [r0, #0]
 8005d5a:	2001      	movs	r0, #1
 8005d5c:	e15f      	b.n	800601e <PRL_Received+0x342>
 8005d5e:	49b4      	ldr	r1, [pc, #720]	; (8006030 <.text_41>)
 8005d60:	880f      	ldrh	r7, [r1, #0]
 8005d62:	2601      	movs	r6, #1
 8005d64:	72a6      	strb	r6, [r4, #10]
 8005d66:	a90a      	add	r1, sp, #40	; 0x28
 8005d68:	7809      	ldrb	r1, [r1, #0]
 8005d6a:	1861      	adds	r1, r4, r1
 8005d6c:	9104      	str	r1, [sp, #16]
 8005d6e:	2500      	movs	r5, #0
 8005d70:	4669      	mov	r1, sp
 8005d72:	8889      	ldrh	r1, [r1, #4]
 8005d74:	4008      	ands	r0, r1
 8005d76:	280d      	cmp	r0, #13
 8005d78:	d106      	bne.n	8005d88 <PRL_Received+0xac>
 8005d7a:	9904      	ldr	r1, [sp, #16]
 8005d7c:	72cd      	strb	r5, [r1, #11]
 8005d7e:	220f      	movs	r2, #15
 8005d80:	2103      	movs	r1, #3
 8005d82:	1da0      	adds	r0, r4, #6
 8005d84:	f012 fac6 	bl	8018314 <__aeabi_memset>
 8005d88:	a80a      	add	r0, sp, #40	; 0x28
 8005d8a:	7800      	ldrb	r0, [r0, #0]
 8005d8c:	2800      	cmp	r0, #0
 8005d8e:	d10d      	bne.n	8005dac <PRL_Received+0xd0>
 8005d90:	8a61      	ldrh	r1, [r4, #18]
 8005d92:	094a      	lsrs	r2, r1, #5
 8005d94:	2001      	movs	r0, #1
 8005d96:	4010      	ands	r0, r2
 8005d98:	0a0a      	lsrs	r2, r1, #8
 8005d9a:	2101      	movs	r1, #1
 8005d9c:	4011      	ands	r1, r2
 8005d9e:	4abf      	ldr	r2, [pc, #764]	; (800609c <.text_44>)
 8005da0:	403a      	ands	r2, r7
 8005da2:	0143      	lsls	r3, r0, #5
 8005da4:	4313      	orrs	r3, r2
 8005da6:	0208      	lsls	r0, r1, #8
 8005da8:	4318      	orrs	r0, r3
 8005daa:	e001      	b.n	8005db0 <PRL_Received+0xd4>
 8005dac:	48bc      	ldr	r0, [pc, #752]	; (80060a0 <.text_45>)
 8005dae:	4038      	ands	r0, r7
 8005db0:	49bc      	ldr	r1, [pc, #752]	; (80060a4 <.text_46>)
 8005db2:	4001      	ands	r1, r0
 8005db4:	4668      	mov	r0, sp
 8005db6:	8880      	ldrh	r0, [r0, #4]
 8005db8:	22e0      	movs	r2, #224	; 0xe0
 8005dba:	0112      	lsls	r2, r2, #4
 8005dbc:	4002      	ands	r2, r0
 8005dbe:	430a      	orrs	r2, r1
 8005dc0:	2040      	movs	r0, #64	; 0x40
 8005dc2:	4310      	orrs	r0, r2
 8005dc4:	7620      	strb	r0, [r4, #24]
 8005dc6:	0a00      	lsrs	r0, r0, #8
 8005dc8:	7660      	strb	r0, [r4, #25]
 8005dca:	a80a      	add	r0, sp, #40	; 0x28
 8005dcc:	7801      	ldrb	r1, [r0, #0]
 8005dce:	a809      	add	r0, sp, #36	; 0x24
 8005dd0:	7800      	ldrb	r0, [r0, #0]
 8005dd2:	f7fa ff49 	bl	8000c68 <PE_PRL_PostReceiveEvent>
 8005dd6:	2800      	cmp	r0, #0
 8005dd8:	d100      	bne.n	8005ddc <PRL_Received+0x100>
 8005dda:	e123      	b.n	8006024 <PRL_Received+0x348>
 8005ddc:	7426      	strb	r6, [r4, #16]
 8005dde:	4668      	mov	r0, sp
 8005de0:	7800      	ldrb	r0, [r0, #0]
 8005de2:	f007 fe93 	bl	800db0c <USBPD_TIM_IsExpired>
 8005de6:	2800      	cmp	r0, #0
 8005de8:	d0f9      	beq.n	8005dde <PRL_Received+0x102>
 8005dea:	2302      	movs	r3, #2
 8005dec:	0022      	movs	r2, r4
 8005dee:	3218      	adds	r2, #24
 8005df0:	a80a      	add	r0, sp, #40	; 0x28
 8005df2:	7801      	ldrb	r1, [r0, #0]
 8005df4:	a809      	add	r0, sp, #36	; 0x24
 8005df6:	7800      	ldrb	r0, [r0, #0]
 8005df8:	f006 fa13 	bl	800c222 <USBPD_PHY_SendMessage>
 8005dfc:	9006      	str	r0, [sp, #24]
 8005dfe:	a80a      	add	r0, sp, #40	; 0x28
 8005e00:	7800      	ldrb	r0, [r0, #0]
 8005e02:	7260      	strb	r0, [r4, #9]
 8005e04:	0021      	movs	r1, r4
 8005e06:	3130      	adds	r1, #48	; 0x30
 8005e08:	a809      	add	r0, sp, #36	; 0x24
 8005e0a:	7800      	ldrb	r0, [r0, #0]
 8005e0c:	f7fa ff60 	bl	8000cd0 <PE_PRL_PostReceiveEventCopy>
 8005e10:	2033      	movs	r0, #51	; 0x33
 8005e12:	5c20      	ldrb	r0, [r4, r0]
 8005e14:	2132      	movs	r1, #50	; 0x32
 8005e16:	5c61      	ldrb	r1, [r4, r1]
 8005e18:	0203      	lsls	r3, r0, #8
 8005e1a:	18ca      	adds	r2, r1, r3
 8005e1c:	466b      	mov	r3, sp
 8005e1e:	80da      	strh	r2, [r3, #6]
 8005e20:	466a      	mov	r2, sp
 8005e22:	8892      	ldrh	r2, [r2, #4]
 8005e24:	0452      	lsls	r2, r2, #17
 8005e26:	0f52      	lsrs	r2, r2, #29
 8005e28:	81da      	strh	r2, [r3, #14]
 8005e2a:	466a      	mov	r2, sp
 8005e2c:	88d2      	ldrh	r2, [r2, #6]
 8005e2e:	05d2      	lsls	r2, r2, #23
 8005e30:	0dd2      	lsrs	r2, r2, #23
 8005e32:	811a      	strh	r2, [r3, #8]
 8005e34:	466a      	mov	r2, sp
 8005e36:	88d2      	ldrh	r2, [r2, #6]
 8005e38:	0bd2      	lsrs	r2, r2, #15
 8005e3a:	819a      	strh	r2, [r3, #12]
 8005e3c:	466a      	mov	r2, sp
 8005e3e:	8892      	ldrh	r2, [r2, #4]
 8005e40:	0bd2      	lsrs	r2, r2, #15
 8005e42:	815a      	strh	r2, [r3, #10]
 8005e44:	d007      	beq.n	8005e56 <PRL_Received+0x17a>
 8005e46:	466a      	mov	r2, sp
 8005e48:	8992      	ldrh	r2, [r2, #12]
 8005e4a:	2a00      	cmp	r2, #0
 8005e4c:	d103      	bne.n	8005e56 <PRL_Received+0x17a>
 8005e4e:	4668      	mov	r0, sp
 8005e50:	8900      	ldrh	r0, [r0, #8]
 8005e52:	1d00      	adds	r0, r0, #4
 8005e54:	e01b      	b.n	8005e8e <PRL_Received+0x1b2>
 8005e56:	7822      	ldrb	r2, [r4, #0]
 8005e58:	2a00      	cmp	r2, #0
 8005e5a:	d117      	bne.n	8005e8c <PRL_Received+0x1b0>
 8005e5c:	466a      	mov	r2, sp
 8005e5e:	89d2      	ldrh	r2, [r2, #14]
 8005e60:	2a00      	cmp	r2, #0
 8005e62:	d013      	beq.n	8005e8c <PRL_Received+0x1b0>
 8005e64:	466a      	mov	r2, sp
 8005e66:	8892      	ldrh	r2, [r2, #4]
 8005e68:	06d2      	lsls	r2, r2, #27
 8005e6a:	0ed2      	lsrs	r2, r2, #27
 8005e6c:	2a03      	cmp	r2, #3
 8005e6e:	d10d      	bne.n	8005e8c <PRL_Received+0x1b0>
 8005e70:	0200      	lsls	r0, r0, #8
 8005e72:	1808      	adds	r0, r1, r0
 8005e74:	2134      	movs	r1, #52	; 0x34
 8005e76:	5c61      	ldrb	r1, [r4, r1]
 8005e78:	0409      	lsls	r1, r1, #16
 8005e7a:	1840      	adds	r0, r0, r1
 8005e7c:	2135      	movs	r1, #53	; 0x35
 8005e7e:	5c61      	ldrb	r1, [r4, r1]
 8005e80:	0609      	lsls	r1, r1, #24
 8005e82:	1840      	adds	r0, r0, r1
 8005e84:	0f00      	lsrs	r0, r0, #28
 8005e86:	2808      	cmp	r0, #8
 8005e88:	d100      	bne.n	8005e8c <PRL_Received+0x1b0>
 8005e8a:	7026      	strb	r6, [r4, #0]
 8005e8c:	9807      	ldr	r0, [sp, #28]
 8005e8e:	9000      	str	r0, [sp, #0]
 8005e90:	0023      	movs	r3, r4
 8005e92:	3330      	adds	r3, #48	; 0x30
 8005e94:	a80a      	add	r0, sp, #40	; 0x28
 8005e96:	7802      	ldrb	r2, [r0, #0]
 8005e98:	a809      	add	r0, sp, #36	; 0x24
 8005e9a:	7801      	ldrb	r1, [r0, #0]
 8005e9c:	2001      	movs	r0, #1
 8005e9e:	4fc1      	ldr	r7, [pc, #772]	; (80061a4 <.text_51>)
 8005ea0:	683f      	ldr	r7, [r7, #0]
 8005ea2:	47b8      	blx	r7
 8005ea4:	9806      	ldr	r0, [sp, #24]
 8005ea6:	2800      	cmp	r0, #0
 8005ea8:	d10b      	bne.n	8005ec2 <PRL_Received+0x1e6>
 8005eaa:	2002      	movs	r0, #2
 8005eac:	9000      	str	r0, [sp, #0]
 8005eae:	0023      	movs	r3, r4
 8005eb0:	3318      	adds	r3, #24
 8005eb2:	a80a      	add	r0, sp, #40	; 0x28
 8005eb4:	7802      	ldrb	r2, [r0, #0]
 8005eb6:	a809      	add	r0, sp, #36	; 0x24
 8005eb8:	7801      	ldrb	r1, [r0, #0]
 8005eba:	2002      	movs	r0, #2
 8005ebc:	4fb9      	ldr	r7, [pc, #740]	; (80061a4 <.text_51>)
 8005ebe:	683f      	ldr	r7, [r7, #0]
 8005ec0:	47b8      	blx	r7
 8005ec2:	4668      	mov	r0, sp
 8005ec4:	8880      	ldrh	r0, [r0, #4]
 8005ec6:	0a40      	lsrs	r0, r0, #9
 8005ec8:	2107      	movs	r1, #7
 8005eca:	9a04      	ldr	r2, [sp, #16]
 8005ecc:	7992      	ldrb	r2, [r2, #6]
 8005ece:	2307      	movs	r3, #7
 8005ed0:	4003      	ands	r3, r0
 8005ed2:	429a      	cmp	r2, r3
 8005ed4:	d103      	bne.n	8005ede <PRL_Received+0x202>
 8005ed6:	9a06      	ldr	r2, [sp, #24]
 8005ed8:	2a00      	cmp	r2, #0
 8005eda:	d100      	bne.n	8005ede <PRL_Received+0x202>
 8005edc:	e08f      	b.n	8005ffe <PRL_Received+0x322>
 8005ede:	4001      	ands	r1, r0
 8005ee0:	9804      	ldr	r0, [sp, #16]
 8005ee2:	7181      	strb	r1, [r0, #6]
 8005ee4:	4668      	mov	r0, sp
 8005ee6:	8880      	ldrh	r0, [r0, #4]
 8005ee8:	8420      	strh	r0, [r4, #32]
 8005eea:	4668      	mov	r0, sp
 8005eec:	8940      	ldrh	r0, [r0, #10]
 8005eee:	2800      	cmp	r0, #0
 8005ef0:	d043      	beq.n	8005f7a <PRL_Received+0x29e>
 8005ef2:	4668      	mov	r0, sp
 8005ef4:	8980      	ldrh	r0, [r0, #12]
 8005ef6:	2800      	cmp	r0, #0
 8005ef8:	d03f      	beq.n	8005f7a <PRL_Received+0x29e>
 8005efa:	4668      	mov	r0, sp
 8005efc:	88c0      	ldrh	r0, [r0, #6]
 8005efe:	83e0      	strh	r0, [r4, #30]
 8005f00:	4668      	mov	r0, sp
 8005f02:	88c0      	ldrh	r0, [r0, #6]
 8005f04:	0440      	lsls	r0, r0, #17
 8005f06:	0f01      	lsrs	r1, r0, #28
 8005f08:	201a      	movs	r0, #26
 8005f0a:	4348      	muls	r0, r1
 8005f0c:	9905      	ldr	r1, [sp, #20]
 8005f0e:	1e89      	subs	r1, r1, #2
 8005f10:	466a      	mov	r2, sp
 8005f12:	88d2      	ldrh	r2, [r2, #6]
 8005f14:	23f8      	movs	r3, #248	; 0xf8
 8005f16:	01db      	lsls	r3, r3, #7
 8005f18:	4013      	ands	r3, r2
 8005f1a:	d12f      	bne.n	8005f7c <PRL_Received+0x2a0>
 8005f1c:	466a      	mov	r2, sp
 8005f1e:	88d2      	ldrh	r2, [r2, #6]
 8005f20:	05d2      	lsls	r2, r2, #23
 8005f22:	0dd2      	lsrs	r2, r2, #23
 8005f24:	466b      	mov	r3, sp
 8005f26:	89db      	ldrh	r3, [r3, #14]
 8005f28:	2b07      	cmp	r3, #7
 8005f2a:	d30a      	bcc.n	8005f42 <PRL_Received+0x266>
 8005f2c:	2a1a      	cmp	r2, #26
 8005f2e:	d811      	bhi.n	8005f54 <PRL_Received+0x278>
 8005f30:	e007      	b.n	8005f42 <PRL_Received+0x266>
 8005f32:	0023      	movs	r3, r4
 8005f34:	3334      	adds	r3, #52	; 0x34
 8005f36:	5d5b      	ldrb	r3, [r3, r5]
 8005f38:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8005f3a:	182f      	adds	r7, r5, r0
 8005f3c:	55f3      	strb	r3, [r6, r7]
 8005f3e:	1c6d      	adds	r5, r5, #1
 8005f40:	b2ad      	uxth	r5, r5
 8005f42:	428d      	cmp	r5, r1
 8005f44:	d3f5      	bcc.n	8005f32 <PRL_Received+0x256>
 8005f46:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8005f48:	4291      	cmp	r1, r2
 8005f4a:	d301      	bcc.n	8005f50 <PRL_Received+0x274>
 8005f4c:	4669      	mov	r1, sp
 8005f4e:	8909      	ldrh	r1, [r1, #8]
 8005f50:	8001      	strh	r1, [r0, #0]
 8005f52:	e00c      	b.n	8005f6e <PRL_Received+0x292>
 8005f54:	2025      	movs	r0, #37	; 0x25
 8005f56:	5426      	strb	r6, [r4, r0]
 8005f58:	0020      	movs	r0, r4
 8005f5a:	3034      	adds	r0, #52	; 0x34
 8005f5c:	5d40      	ldrb	r0, [r0, r5]
 8005f5e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8005f60:	5548      	strb	r0, [r1, r5]
 8005f62:	1c6d      	adds	r5, r5, #1
 8005f64:	2d1a      	cmp	r5, #26
 8005f66:	d3f7      	bcc.n	8005f58 <PRL_Received+0x27c>
 8005f68:	201a      	movs	r0, #26
 8005f6a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8005f6c:	8008      	strh	r0, [r1, #0]
 8005f6e:	a80a      	add	r0, sp, #40	; 0x28
 8005f70:	7801      	ldrb	r1, [r0, #0]
 8005f72:	a809      	add	r0, sp, #36	; 0x24
 8005f74:	7800      	ldrb	r0, [r0, #0]
 8005f76:	f7fa fe77 	bl	8000c68 <PE_PRL_PostReceiveEvent>
 8005f7a:	e053      	b.n	8006024 <PRL_Received+0x348>
 8005f7c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8005f7e:	8812      	ldrh	r2, [r2, #0]
 8005f80:	9b05      	ldr	r3, [sp, #20]
 8005f82:	18d3      	adds	r3, r2, r3
 8005f84:	1e9b      	subs	r3, r3, #2
 8005f86:	27ff      	movs	r7, #255	; 0xff
 8005f88:	1dbf      	adds	r7, r7, #6
 8005f8a:	321a      	adds	r2, #26
 8005f8c:	42ba      	cmp	r2, r7
 8005f8e:	d21b      	bcs.n	8005fc8 <PRL_Received+0x2ec>
 8005f90:	466a      	mov	r2, sp
 8005f92:	8912      	ldrh	r2, [r2, #8]
 8005f94:	4293      	cmp	r3, r2
 8005f96:	d217      	bcs.n	8005fc8 <PRL_Received+0x2ec>
 8005f98:	2225      	movs	r2, #37	; 0x25
 8005f9a:	54a6      	strb	r6, [r4, r2]
 8005f9c:	e007      	b.n	8005fae <PRL_Received+0x2d2>
 8005f9e:	0022      	movs	r2, r4
 8005fa0:	3234      	adds	r2, #52	; 0x34
 8005fa2:	5d52      	ldrb	r2, [r2, r5]
 8005fa4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8005fa6:	182e      	adds	r6, r5, r0
 8005fa8:	559a      	strb	r2, [r3, r6]
 8005faa:	1c6d      	adds	r5, r5, #1
 8005fac:	b2ad      	uxth	r5, r5
 8005fae:	428d      	cmp	r5, r1
 8005fb0:	d3f5      	bcc.n	8005f9e <PRL_Received+0x2c2>
 8005fb2:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8005fb4:	8801      	ldrh	r1, [r0, #0]
 8005fb6:	466a      	mov	r2, sp
 8005fb8:	8892      	ldrh	r2, [r2, #4]
 8005fba:	0a92      	lsrs	r2, r2, #10
 8005fbc:	231c      	movs	r3, #28
 8005fbe:	4013      	ands	r3, r2
 8005fc0:	1e9a      	subs	r2, r3, #2
 8005fc2:	1889      	adds	r1, r1, r2
 8005fc4:	8001      	strh	r1, [r0, #0]
 8005fc6:	e02d      	b.n	8006024 <PRL_Received+0x348>
 8005fc8:	42bb      	cmp	r3, r7
 8005fca:	d215      	bcs.n	8005ff8 <PRL_Received+0x31c>
 8005fcc:	466a      	mov	r2, sp
 8005fce:	8912      	ldrh	r2, [r2, #8]
 8005fd0:	4293      	cmp	r3, r2
 8005fd2:	d311      	bcc.n	8005ff8 <PRL_Received+0x31c>
 8005fd4:	2225      	movs	r2, #37	; 0x25
 8005fd6:	54a6      	strb	r6, [r4, r2]
 8005fd8:	e007      	b.n	8005fea <PRL_Received+0x30e>
 8005fda:	0022      	movs	r2, r4
 8005fdc:	3234      	adds	r2, #52	; 0x34
 8005fde:	5d52      	ldrb	r2, [r2, r5]
 8005fe0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8005fe2:	182e      	adds	r6, r5, r0
 8005fe4:	559a      	strb	r2, [r3, r6]
 8005fe6:	1c6d      	adds	r5, r5, #1
 8005fe8:	b2ad      	uxth	r5, r5
 8005fea:	428d      	cmp	r5, r1
 8005fec:	d3f5      	bcc.n	8005fda <PRL_Received+0x2fe>
 8005fee:	4668      	mov	r0, sp
 8005ff0:	8900      	ldrh	r0, [r0, #8]
 8005ff2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8005ff4:	8008      	strh	r0, [r1, #0]
 8005ff6:	e015      	b.n	8006024 <PRL_Received+0x348>
 8005ff8:	2025      	movs	r0, #37	; 0x25
 8005ffa:	5425      	strb	r5, [r4, r0]
 8005ffc:	e012      	b.n	8006024 <PRL_Received+0x348>
 8005ffe:	20ff      	movs	r0, #255	; 0xff
 8006000:	7260      	strb	r0, [r4, #9]
 8006002:	7425      	strb	r5, [r4, #16]
 8006004:	a809      	add	r0, sp, #36	; 0x24
 8006006:	7800      	ldrb	r0, [r0, #0]
 8006008:	f7fa fe4a 	bl	8000ca0 <PE_PRL_PostReceiveEventError>
 800600c:	72a5      	strb	r5, [r4, #10]
 800600e:	2017      	movs	r0, #23
 8006010:	9000      	str	r0, [sp, #0]
 8006012:	bf00      	nop
 8006014:	a367      	add	r3, pc, #412	; (adr r3, 80061b4 <.text_55>)
 8006016:	2200      	movs	r2, #0
 8006018:	a809      	add	r0, sp, #36	; 0x24
 800601a:	7801      	ldrb	r1, [r0, #0]
 800601c:	2006      	movs	r0, #6
 800601e:	4c61      	ldr	r4, [pc, #388]	; (80061a4 <.text_51>)
 8006020:	6824      	ldr	r4, [r4, #0]
 8006022:	47a0      	blx	r4
 8006024:	b00b      	add	sp, #44	; 0x2c
 8006026:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006028:	200001c8 	.word	0x200001c8

0800602c <.text_40>:
 800602c:	0000f01f 	.word	0x0000f01f

08006030 <.text_41>:
 8006030:	080198d8 	.word	0x080198d8

08006034 <PRL_ResetIndicate>:
 8006034:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006036:	0004      	movs	r4, r0
 8006038:	000d      	movs	r5, r1
 800603a:	2d05      	cmp	r5, #5
 800603c:	d119      	bne.n	8006072 <PRL_ResetIndicate+0x3e>
 800603e:	485a      	ldr	r0, [pc, #360]	; (80061a8 <.text_52>)
 8006040:	00a1      	lsls	r1, r4, #2
 8006042:	1840      	adds	r0, r0, r1
 8006044:	9000      	str	r0, [sp, #0]
 8006046:	6807      	ldr	r7, [r0, #0]
 8006048:	2600      	movs	r6, #0
 800604a:	2000      	movs	r0, #0
 800604c:	b2c2      	uxtb	r2, r0
 800604e:	18ba      	adds	r2, r7, r2
 8006050:	72d6      	strb	r6, [r2, #11]
 8006052:	1c40      	adds	r0, r0, #1
 8006054:	b2c1      	uxtb	r1, r0
 8006056:	2903      	cmp	r1, #3
 8006058:	d3f8      	bcc.n	800604c <PRL_ResetIndicate+0x18>
 800605a:	220f      	movs	r2, #15
 800605c:	2103      	movs	r1, #3
 800605e:	1db8      	adds	r0, r7, #6
 8006060:	f012 f958 	bl	8018314 <__aeabi_memset>
 8006064:	9900      	ldr	r1, [sp, #0]
 8006066:	6809      	ldr	r1, [r1, #0]
 8006068:	714e      	strb	r6, [r1, #5]
 800606a:	703e      	strb	r6, [r7, #0]
 800606c:	0020      	movs	r0, r4
 800606e:	f7ff fe30 	bl	8005cd2 <PRL_DisableRX>
 8006072:	2000      	movs	r0, #0
 8006074:	9000      	str	r0, [sp, #0]
 8006076:	2300      	movs	r3, #0
 8006078:	002a      	movs	r2, r5
 800607a:	0021      	movs	r1, r4
 800607c:	2001      	movs	r0, #1
 800607e:	4e49      	ldr	r6, [pc, #292]	; (80061a4 <.text_51>)
 8006080:	6836      	ldr	r6, [r6, #0]
 8006082:	47b0      	blx	r6
 8006084:	0029      	movs	r1, r5
 8006086:	0020      	movs	r0, r4
 8006088:	f7fa fce6 	bl	8000a58 <PE_PRL_ResetReceived>
 800608c:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}

0800608e <PRL_ResetCompleted>:
 800608e:	2101      	movs	r1, #1
 8006090:	4a45      	ldr	r2, [pc, #276]	; (80061a8 <.text_52>)
 8006092:	0080      	lsls	r0, r0, #2
 8006094:	5810      	ldr	r0, [r2, r0]
 8006096:	70c1      	strb	r1, [r0, #3]
 8006098:	4770      	bx	lr
	...

0800609c <.text_44>:
 800609c:	0000fedf 	.word	0x0000fedf

080060a0 <.text_45>:
 80060a0:	0000feff 	.word	0x0000feff

080060a4 <.text_46>:
 80060a4:	0000f13f 	.word	0x0000f13f

080060a8 <PRL_BistCompleted>:
 80060a8:	b580      	push	{r7, lr}
 80060aa:	f7fa fd01 	bl	8000ab0 <PE_PRL_BistCompleted>
 80060ae:	bd01      	pop	{r0, pc}

080060b0 <PRL_TxCompleted>:
 80060b0:	b570      	push	{r4, r5, r6, lr}
 80060b2:	0004      	movs	r4, r0
 80060b4:	4a3c      	ldr	r2, [pc, #240]	; (80061a8 <.text_52>)
 80060b6:	00a3      	lsls	r3, r4, #2
 80060b8:	58d6      	ldr	r6, [r2, r3]
 80060ba:	2500      	movs	r5, #0
 80060bc:	7c32      	ldrb	r2, [r6, #16]
 80060be:	2a01      	cmp	r2, #1
 80060c0:	d002      	beq.n	80060c8 <PRL_TxCompleted+0x18>
 80060c2:	2a02      	cmp	r2, #2
 80060c4:	d009      	beq.n	80060da <PRL_TxCompleted+0x2a>
 80060c6:	e010      	b.n	80060ea <PRL_TxCompleted+0x3a>
 80060c8:	2900      	cmp	r1, #0
 80060ca:	d102      	bne.n	80060d2 <PRL_TxCompleted+0x22>
 80060cc:	f7fa fe1a 	bl	8000d04 <PE_PRL_PostReceiveEventComplete>
 80060d0:	e001      	b.n	80060d6 <PRL_TxCompleted+0x26>
 80060d2:	f7fa fde5 	bl	8000ca0 <PE_PRL_PostReceiveEventError>
 80060d6:	72b5      	strb	r5, [r6, #10]
 80060d8:	e007      	b.n	80060ea <PRL_TxCompleted+0x3a>
 80060da:	f006 f869 	bl	800c1b0 <USBPD_PHY_GetRetryTimerValue>
 80060de:	0001      	movs	r1, r0
 80060e0:	0060      	lsls	r0, r4, #1
 80060e2:	1c40      	adds	r0, r0, #1
 80060e4:	b2c0      	uxtb	r0, r0
 80060e6:	f007 fca3 	bl	800da30 <USBPD_TIM_Start>
 80060ea:	7435      	strb	r5, [r6, #16]
 80060ec:	bd70      	pop	{r4, r5, r6, pc}

080060ee <USBPD_PRL_PrepareExtendedTxChunkSending>:
 80060ee:	b570      	push	{r4, r5, r6, lr}
 80060f0:	4c2d      	ldr	r4, [pc, #180]	; (80061a8 <.text_52>)
 80060f2:	0080      	lsls	r0, r0, #2
 80060f4:	5820      	ldr	r0, [r4, r0]
 80060f6:	2480      	movs	r4, #128	; 0x80
 80060f8:	0224      	lsls	r4, r4, #8
 80060fa:	8b85      	ldrh	r5, [r0, #28]
 80060fc:	4e2b      	ldr	r6, [pc, #172]	; (80061ac <.text_53>)
 80060fe:	402e      	ands	r6, r5
 8006100:	02c9      	lsls	r1, r1, #11
 8006102:	4331      	orrs	r1, r6
 8006104:	25fe      	movs	r5, #254	; 0xfe
 8006106:	022d      	lsls	r5, r5, #8
 8006108:	400d      	ands	r5, r1
 800610a:	05d1      	lsls	r1, r2, #23
 800610c:	0dc9      	lsrs	r1, r1, #23
 800610e:	4329      	orrs	r1, r5
 8006110:	4321      	orrs	r1, r4
 8006112:	8381      	strh	r1, [r0, #28]
 8006114:	8a41      	ldrh	r1, [r0, #18]
 8006116:	430c      	orrs	r4, r1
 8006118:	8244      	strh	r4, [r0, #18]
 800611a:	4a25      	ldr	r2, [pc, #148]	; (80061b0 <.text_54>)
 800611c:	4022      	ands	r2, r4
 800611e:	2120      	movs	r1, #32
 8006120:	5c41      	ldrb	r1, [r0, r1]
 8006122:	06c9      	lsls	r1, r1, #27
 8006124:	0ec9      	lsrs	r1, r1, #27
 8006126:	4311      	orrs	r1, r2
 8006128:	8241      	strh	r1, [r0, #18]
 800612a:	7019      	strb	r1, [r3, #0]
 800612c:	8a41      	ldrh	r1, [r0, #18]
 800612e:	0a09      	lsrs	r1, r1, #8
 8006130:	7059      	strb	r1, [r3, #1]
 8006132:	8b81      	ldrh	r1, [r0, #28]
 8006134:	7099      	strb	r1, [r3, #2]
 8006136:	8b80      	ldrh	r0, [r0, #28]
 8006138:	0a00      	lsrs	r0, r0, #8
 800613a:	70d8      	strb	r0, [r3, #3]
 800613c:	bd70      	pop	{r4, r5, r6, pc}

0800613e <USBPD_PRL_PrepareChunkRequest>:
 800613e:	b510      	push	{r4, lr}
 8006140:	4a19      	ldr	r2, [pc, #100]	; (80061a8 <.text_52>)
 8006142:	0080      	lsls	r0, r0, #2
 8006144:	5810      	ldr	r0, [r2, r0]
 8006146:	8b83      	ldrh	r3, [r0, #28]
 8006148:	2284      	movs	r2, #132	; 0x84
 800614a:	0212      	lsls	r2, r2, #8
 800614c:	431a      	orrs	r2, r3
 800614e:	8382      	strh	r2, [r0, #28]
 8006150:	2386      	movs	r3, #134	; 0x86
 8006152:	021b      	lsls	r3, r3, #8
 8006154:	4013      	ands	r3, r2
 8006156:	8bc2      	ldrh	r2, [r0, #30]
 8006158:	0ad2      	lsrs	r2, r2, #11
 800615a:	1c52      	adds	r2, r2, #1
 800615c:	02d2      	lsls	r2, r2, #11
 800615e:	24f0      	movs	r4, #240	; 0xf0
 8006160:	01e4      	lsls	r4, r4, #7
 8006162:	4014      	ands	r4, r2
 8006164:	431c      	orrs	r4, r3
 8006166:	8384      	strh	r4, [r0, #28]
 8006168:	8a43      	ldrh	r3, [r0, #18]
 800616a:	2280      	movs	r2, #128	; 0x80
 800616c:	0212      	lsls	r2, r2, #8
 800616e:	431a      	orrs	r2, r3
 8006170:	0003      	movs	r3, r0
 8006172:	3312      	adds	r3, #18
 8006174:	801a      	strh	r2, [r3, #0]
 8006176:	4c0e      	ldr	r4, [pc, #56]	; (80061b0 <.text_54>)
 8006178:	4014      	ands	r4, r2
 800617a:	2220      	movs	r2, #32
 800617c:	5c82      	ldrb	r2, [r0, r2]
 800617e:	06d2      	lsls	r2, r2, #27
 8006180:	0ed2      	lsrs	r2, r2, #27
 8006182:	4322      	orrs	r2, r4
 8006184:	801a      	strh	r2, [r3, #0]
 8006186:	2200      	movs	r2, #0
 8006188:	7142      	strb	r2, [r0, #5]
 800618a:	8a43      	ldrh	r3, [r0, #18]
 800618c:	700b      	strb	r3, [r1, #0]
 800618e:	8a43      	ldrh	r3, [r0, #18]
 8006190:	0a1b      	lsrs	r3, r3, #8
 8006192:	704b      	strb	r3, [r1, #1]
 8006194:	8b83      	ldrh	r3, [r0, #28]
 8006196:	708b      	strb	r3, [r1, #2]
 8006198:	8b80      	ldrh	r0, [r0, #28]
 800619a:	0a00      	lsrs	r0, r0, #8
 800619c:	70c8      	strb	r0, [r1, #3]
 800619e:	710a      	strb	r2, [r1, #4]
 80061a0:	714a      	strb	r2, [r1, #5]
 80061a2:	bd10      	pop	{r4, pc}

080061a4 <.text_51>:
 80061a4:	20000000 	.word	0x20000000

080061a8 <.text_52>:
 80061a8:	200001c8 	.word	0x200001c8

080061ac <.text_53>:
 80061ac:	000083ff 	.word	0x000083ff

080061b0 <.text_54>:
 80061b0:	0000ffe0 	.word	0x0000ffe0

080061b4 <.text_55>:
 80061b4:	5f4c5250 	.word	0x5f4c5250
 80061b8:	4e455645 	.word	0x4e455645
 80061bc:	58525f54 	.word	0x58525f54
 80061c0:	5349445f 	.word	0x5349445f
 80061c4:	44524143 	.word	0x44524143
 80061c8:	00004445 	.word	0x00004445

080061cc <strlen>:
 80061cc:	2300      	movs	r3, #0
 80061ce:	5cc2      	ldrb	r2, [r0, r3]
 80061d0:	3301      	adds	r3, #1
 80061d2:	2a00      	cmp	r2, #0
 80061d4:	d1fb      	bne.n	80061ce <strlen+0x2>
 80061d6:	1e58      	subs	r0, r3, #1
 80061d8:	4770      	bx	lr
	...

080061dc <__gnu_thumb1_case_shi>:
 80061dc:	b403      	push	{r0, r1}
 80061de:	4671      	mov	r1, lr
 80061e0:	0849      	lsrs	r1, r1, #1
 80061e2:	0040      	lsls	r0, r0, #1
 80061e4:	0049      	lsls	r1, r1, #1
 80061e6:	5e09      	ldrsh	r1, [r1, r0]
 80061e8:	0049      	lsls	r1, r1, #1
 80061ea:	448e      	add	lr, r1
 80061ec:	bc03      	pop	{r0, r1}
 80061ee:	4770      	bx	lr

080061f0 <__udivsi3>:
 80061f0:	2200      	movs	r2, #0
 80061f2:	0843      	lsrs	r3, r0, #1
 80061f4:	428b      	cmp	r3, r1
 80061f6:	d374      	bcc.n	80062e2 <__udivsi3+0xf2>
 80061f8:	0903      	lsrs	r3, r0, #4
 80061fa:	428b      	cmp	r3, r1
 80061fc:	d35f      	bcc.n	80062be <__udivsi3+0xce>
 80061fe:	0a03      	lsrs	r3, r0, #8
 8006200:	428b      	cmp	r3, r1
 8006202:	d344      	bcc.n	800628e <__udivsi3+0x9e>
 8006204:	0b03      	lsrs	r3, r0, #12
 8006206:	428b      	cmp	r3, r1
 8006208:	d328      	bcc.n	800625c <__udivsi3+0x6c>
 800620a:	0c03      	lsrs	r3, r0, #16
 800620c:	428b      	cmp	r3, r1
 800620e:	d30d      	bcc.n	800622c <__udivsi3+0x3c>
 8006210:	22ff      	movs	r2, #255	; 0xff
 8006212:	0209      	lsls	r1, r1, #8
 8006214:	ba12      	rev	r2, r2
 8006216:	0c03      	lsrs	r3, r0, #16
 8006218:	428b      	cmp	r3, r1
 800621a:	d302      	bcc.n	8006222 <__udivsi3+0x32>
 800621c:	1212      	asrs	r2, r2, #8
 800621e:	0209      	lsls	r1, r1, #8
 8006220:	d065      	beq.n	80062ee <__udivsi3+0xfe>
 8006222:	0b03      	lsrs	r3, r0, #12
 8006224:	428b      	cmp	r3, r1
 8006226:	d319      	bcc.n	800625c <__udivsi3+0x6c>
 8006228:	e000      	b.n	800622c <__udivsi3+0x3c>
 800622a:	0a09      	lsrs	r1, r1, #8
 800622c:	0bc3      	lsrs	r3, r0, #15
 800622e:	428b      	cmp	r3, r1
 8006230:	d301      	bcc.n	8006236 <__udivsi3+0x46>
 8006232:	03cb      	lsls	r3, r1, #15
 8006234:	1ac0      	subs	r0, r0, r3
 8006236:	4152      	adcs	r2, r2
 8006238:	0b83      	lsrs	r3, r0, #14
 800623a:	428b      	cmp	r3, r1
 800623c:	d301      	bcc.n	8006242 <__udivsi3+0x52>
 800623e:	038b      	lsls	r3, r1, #14
 8006240:	1ac0      	subs	r0, r0, r3
 8006242:	4152      	adcs	r2, r2
 8006244:	0b43      	lsrs	r3, r0, #13
 8006246:	428b      	cmp	r3, r1
 8006248:	d301      	bcc.n	800624e <__udivsi3+0x5e>
 800624a:	034b      	lsls	r3, r1, #13
 800624c:	1ac0      	subs	r0, r0, r3
 800624e:	4152      	adcs	r2, r2
 8006250:	0b03      	lsrs	r3, r0, #12
 8006252:	428b      	cmp	r3, r1
 8006254:	d301      	bcc.n	800625a <__udivsi3+0x6a>
 8006256:	030b      	lsls	r3, r1, #12
 8006258:	1ac0      	subs	r0, r0, r3
 800625a:	4152      	adcs	r2, r2
 800625c:	0ac3      	lsrs	r3, r0, #11
 800625e:	428b      	cmp	r3, r1
 8006260:	d301      	bcc.n	8006266 <__udivsi3+0x76>
 8006262:	02cb      	lsls	r3, r1, #11
 8006264:	1ac0      	subs	r0, r0, r3
 8006266:	4152      	adcs	r2, r2
 8006268:	0a83      	lsrs	r3, r0, #10
 800626a:	428b      	cmp	r3, r1
 800626c:	d301      	bcc.n	8006272 <__udivsi3+0x82>
 800626e:	028b      	lsls	r3, r1, #10
 8006270:	1ac0      	subs	r0, r0, r3
 8006272:	4152      	adcs	r2, r2
 8006274:	0a43      	lsrs	r3, r0, #9
 8006276:	428b      	cmp	r3, r1
 8006278:	d301      	bcc.n	800627e <__udivsi3+0x8e>
 800627a:	024b      	lsls	r3, r1, #9
 800627c:	1ac0      	subs	r0, r0, r3
 800627e:	4152      	adcs	r2, r2
 8006280:	0a03      	lsrs	r3, r0, #8
 8006282:	428b      	cmp	r3, r1
 8006284:	d301      	bcc.n	800628a <__udivsi3+0x9a>
 8006286:	020b      	lsls	r3, r1, #8
 8006288:	1ac0      	subs	r0, r0, r3
 800628a:	4152      	adcs	r2, r2
 800628c:	d2cd      	bcs.n	800622a <__udivsi3+0x3a>
 800628e:	09c3      	lsrs	r3, r0, #7
 8006290:	428b      	cmp	r3, r1
 8006292:	d301      	bcc.n	8006298 <__udivsi3+0xa8>
 8006294:	01cb      	lsls	r3, r1, #7
 8006296:	1ac0      	subs	r0, r0, r3
 8006298:	4152      	adcs	r2, r2
 800629a:	0983      	lsrs	r3, r0, #6
 800629c:	428b      	cmp	r3, r1
 800629e:	d301      	bcc.n	80062a4 <__udivsi3+0xb4>
 80062a0:	018b      	lsls	r3, r1, #6
 80062a2:	1ac0      	subs	r0, r0, r3
 80062a4:	4152      	adcs	r2, r2
 80062a6:	0943      	lsrs	r3, r0, #5
 80062a8:	428b      	cmp	r3, r1
 80062aa:	d301      	bcc.n	80062b0 <__udivsi3+0xc0>
 80062ac:	014b      	lsls	r3, r1, #5
 80062ae:	1ac0      	subs	r0, r0, r3
 80062b0:	4152      	adcs	r2, r2
 80062b2:	0903      	lsrs	r3, r0, #4
 80062b4:	428b      	cmp	r3, r1
 80062b6:	d301      	bcc.n	80062bc <__udivsi3+0xcc>
 80062b8:	010b      	lsls	r3, r1, #4
 80062ba:	1ac0      	subs	r0, r0, r3
 80062bc:	4152      	adcs	r2, r2
 80062be:	08c3      	lsrs	r3, r0, #3
 80062c0:	428b      	cmp	r3, r1
 80062c2:	d301      	bcc.n	80062c8 <__udivsi3+0xd8>
 80062c4:	00cb      	lsls	r3, r1, #3
 80062c6:	1ac0      	subs	r0, r0, r3
 80062c8:	4152      	adcs	r2, r2
 80062ca:	0883      	lsrs	r3, r0, #2
 80062cc:	428b      	cmp	r3, r1
 80062ce:	d301      	bcc.n	80062d4 <__udivsi3+0xe4>
 80062d0:	008b      	lsls	r3, r1, #2
 80062d2:	1ac0      	subs	r0, r0, r3
 80062d4:	4152      	adcs	r2, r2
 80062d6:	0843      	lsrs	r3, r0, #1
 80062d8:	428b      	cmp	r3, r1
 80062da:	d301      	bcc.n	80062e0 <__udivsi3+0xf0>
 80062dc:	004b      	lsls	r3, r1, #1
 80062de:	1ac0      	subs	r0, r0, r3
 80062e0:	4152      	adcs	r2, r2
 80062e2:	1a41      	subs	r1, r0, r1
 80062e4:	d200      	bcs.n	80062e8 <__udivsi3+0xf8>
 80062e6:	4601      	mov	r1, r0
 80062e8:	4152      	adcs	r2, r2
 80062ea:	4610      	mov	r0, r2
 80062ec:	4770      	bx	lr
 80062ee:	e7ff      	b.n	80062f0 <__udivsi3+0x100>
 80062f0:	b501      	push	{r0, lr}
 80062f2:	2000      	movs	r0, #0
 80062f4:	f000 f806 	bl	8006304 <__aeabi_idiv0>
 80062f8:	bd02      	pop	{r1, pc}
 80062fa:	46c0      	nop			; (mov r8, r8)

080062fc <__aeabi_uidivmod>:
 80062fc:	2900      	cmp	r1, #0
 80062fe:	d0f7      	beq.n	80062f0 <__udivsi3+0x100>
 8006300:	e776      	b.n	80061f0 <__udivsi3>
 8006302:	4770      	bx	lr

08006304 <__aeabi_idiv0>:
 8006304:	4770      	bx	lr
 8006306:	46c0      	nop			; (mov r8, r8)

08006308 <__aeabi_uldivmod>:
 8006308:	2b00      	cmp	r3, #0
 800630a:	d111      	bne.n	8006330 <__aeabi_uldivmod+0x28>
 800630c:	2a00      	cmp	r2, #0
 800630e:	d10f      	bne.n	8006330 <__aeabi_uldivmod+0x28>
 8006310:	2900      	cmp	r1, #0
 8006312:	d100      	bne.n	8006316 <__aeabi_uldivmod+0xe>
 8006314:	2800      	cmp	r0, #0
 8006316:	d002      	beq.n	800631e <__aeabi_uldivmod+0x16>
 8006318:	2100      	movs	r1, #0
 800631a:	43c9      	mvns	r1, r1
 800631c:	0008      	movs	r0, r1
 800631e:	b407      	push	{r0, r1, r2}
 8006320:	4802      	ldr	r0, [pc, #8]	; (800632c <__aeabi_uldivmod+0x24>)
 8006322:	a102      	add	r1, pc, #8	; (adr r1, 800632c <__aeabi_uldivmod+0x24>)
 8006324:	1840      	adds	r0, r0, r1
 8006326:	9002      	str	r0, [sp, #8]
 8006328:	bd03      	pop	{r0, r1, pc}
 800632a:	46c0      	nop			; (mov r8, r8)
 800632c:	ffffffd9 	.word	0xffffffd9
 8006330:	b403      	push	{r0, r1}
 8006332:	4668      	mov	r0, sp
 8006334:	b501      	push	{r0, lr}
 8006336:	9802      	ldr	r0, [sp, #8]
 8006338:	f000 f806 	bl	8006348 <__udivmoddi4>
 800633c:	9b01      	ldr	r3, [sp, #4]
 800633e:	469e      	mov	lr, r3
 8006340:	b002      	add	sp, #8
 8006342:	bc0c      	pop	{r2, r3}
 8006344:	4770      	bx	lr
 8006346:	46c0      	nop			; (mov r8, r8)

08006348 <__udivmoddi4>:
 8006348:	b5f0      	push	{r4, r5, r6, r7, lr}
 800634a:	4657      	mov	r7, sl
 800634c:	464e      	mov	r6, r9
 800634e:	4645      	mov	r5, r8
 8006350:	46de      	mov	lr, fp
 8006352:	b5e0      	push	{r5, r6, r7, lr}
 8006354:	0004      	movs	r4, r0
 8006356:	000d      	movs	r5, r1
 8006358:	4692      	mov	sl, r2
 800635a:	4699      	mov	r9, r3
 800635c:	b083      	sub	sp, #12
 800635e:	428b      	cmp	r3, r1
 8006360:	d830      	bhi.n	80063c4 <__udivmoddi4+0x7c>
 8006362:	d02d      	beq.n	80063c0 <__udivmoddi4+0x78>
 8006364:	4649      	mov	r1, r9
 8006366:	4650      	mov	r0, sl
 8006368:	f000 f8ba 	bl	80064e0 <__clzdi2>
 800636c:	0029      	movs	r1, r5
 800636e:	0006      	movs	r6, r0
 8006370:	0020      	movs	r0, r4
 8006372:	f000 f8b5 	bl	80064e0 <__clzdi2>
 8006376:	1a33      	subs	r3, r6, r0
 8006378:	4698      	mov	r8, r3
 800637a:	3b20      	subs	r3, #32
 800637c:	d434      	bmi.n	80063e8 <__udivmoddi4+0xa0>
 800637e:	469b      	mov	fp, r3
 8006380:	4653      	mov	r3, sl
 8006382:	465a      	mov	r2, fp
 8006384:	4093      	lsls	r3, r2
 8006386:	4642      	mov	r2, r8
 8006388:	001f      	movs	r7, r3
 800638a:	4653      	mov	r3, sl
 800638c:	4093      	lsls	r3, r2
 800638e:	001e      	movs	r6, r3
 8006390:	42af      	cmp	r7, r5
 8006392:	d83b      	bhi.n	800640c <__udivmoddi4+0xc4>
 8006394:	42af      	cmp	r7, r5
 8006396:	d100      	bne.n	800639a <__udivmoddi4+0x52>
 8006398:	e079      	b.n	800648e <__udivmoddi4+0x146>
 800639a:	465b      	mov	r3, fp
 800639c:	1ba4      	subs	r4, r4, r6
 800639e:	41bd      	sbcs	r5, r7
 80063a0:	2b00      	cmp	r3, #0
 80063a2:	da00      	bge.n	80063a6 <__udivmoddi4+0x5e>
 80063a4:	e076      	b.n	8006494 <__udivmoddi4+0x14c>
 80063a6:	2200      	movs	r2, #0
 80063a8:	2300      	movs	r3, #0
 80063aa:	9200      	str	r2, [sp, #0]
 80063ac:	9301      	str	r3, [sp, #4]
 80063ae:	2301      	movs	r3, #1
 80063b0:	465a      	mov	r2, fp
 80063b2:	4093      	lsls	r3, r2
 80063b4:	9301      	str	r3, [sp, #4]
 80063b6:	2301      	movs	r3, #1
 80063b8:	4642      	mov	r2, r8
 80063ba:	4093      	lsls	r3, r2
 80063bc:	9300      	str	r3, [sp, #0]
 80063be:	e029      	b.n	8006414 <__udivmoddi4+0xcc>
 80063c0:	4282      	cmp	r2, r0
 80063c2:	d9cf      	bls.n	8006364 <__udivmoddi4+0x1c>
 80063c4:	2200      	movs	r2, #0
 80063c6:	2300      	movs	r3, #0
 80063c8:	9200      	str	r2, [sp, #0]
 80063ca:	9301      	str	r3, [sp, #4]
 80063cc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80063ce:	2b00      	cmp	r3, #0
 80063d0:	d001      	beq.n	80063d6 <__udivmoddi4+0x8e>
 80063d2:	601c      	str	r4, [r3, #0]
 80063d4:	605d      	str	r5, [r3, #4]
 80063d6:	9800      	ldr	r0, [sp, #0]
 80063d8:	9901      	ldr	r1, [sp, #4]
 80063da:	b003      	add	sp, #12
 80063dc:	bcf0      	pop	{r4, r5, r6, r7}
 80063de:	46bb      	mov	fp, r7
 80063e0:	46b2      	mov	sl, r6
 80063e2:	46a9      	mov	r9, r5
 80063e4:	46a0      	mov	r8, r4
 80063e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80063e8:	4642      	mov	r2, r8
 80063ea:	469b      	mov	fp, r3
 80063ec:	2320      	movs	r3, #32
 80063ee:	1a9b      	subs	r3, r3, r2
 80063f0:	4652      	mov	r2, sl
 80063f2:	40da      	lsrs	r2, r3
 80063f4:	4641      	mov	r1, r8
 80063f6:	0013      	movs	r3, r2
 80063f8:	464a      	mov	r2, r9
 80063fa:	408a      	lsls	r2, r1
 80063fc:	0017      	movs	r7, r2
 80063fe:	4642      	mov	r2, r8
 8006400:	431f      	orrs	r7, r3
 8006402:	4653      	mov	r3, sl
 8006404:	4093      	lsls	r3, r2
 8006406:	001e      	movs	r6, r3
 8006408:	42af      	cmp	r7, r5
 800640a:	d9c3      	bls.n	8006394 <__udivmoddi4+0x4c>
 800640c:	2200      	movs	r2, #0
 800640e:	2300      	movs	r3, #0
 8006410:	9200      	str	r2, [sp, #0]
 8006412:	9301      	str	r3, [sp, #4]
 8006414:	4643      	mov	r3, r8
 8006416:	2b00      	cmp	r3, #0
 8006418:	d0d8      	beq.n	80063cc <__udivmoddi4+0x84>
 800641a:	07fb      	lsls	r3, r7, #31
 800641c:	0872      	lsrs	r2, r6, #1
 800641e:	431a      	orrs	r2, r3
 8006420:	4646      	mov	r6, r8
 8006422:	087b      	lsrs	r3, r7, #1
 8006424:	e00e      	b.n	8006444 <__udivmoddi4+0xfc>
 8006426:	42ab      	cmp	r3, r5
 8006428:	d101      	bne.n	800642e <__udivmoddi4+0xe6>
 800642a:	42a2      	cmp	r2, r4
 800642c:	d80c      	bhi.n	8006448 <__udivmoddi4+0x100>
 800642e:	1aa4      	subs	r4, r4, r2
 8006430:	419d      	sbcs	r5, r3
 8006432:	2001      	movs	r0, #1
 8006434:	1924      	adds	r4, r4, r4
 8006436:	416d      	adcs	r5, r5
 8006438:	2100      	movs	r1, #0
 800643a:	3e01      	subs	r6, #1
 800643c:	1824      	adds	r4, r4, r0
 800643e:	414d      	adcs	r5, r1
 8006440:	2e00      	cmp	r6, #0
 8006442:	d006      	beq.n	8006452 <__udivmoddi4+0x10a>
 8006444:	42ab      	cmp	r3, r5
 8006446:	d9ee      	bls.n	8006426 <__udivmoddi4+0xde>
 8006448:	3e01      	subs	r6, #1
 800644a:	1924      	adds	r4, r4, r4
 800644c:	416d      	adcs	r5, r5
 800644e:	2e00      	cmp	r6, #0
 8006450:	d1f8      	bne.n	8006444 <__udivmoddi4+0xfc>
 8006452:	9800      	ldr	r0, [sp, #0]
 8006454:	9901      	ldr	r1, [sp, #4]
 8006456:	465b      	mov	r3, fp
 8006458:	1900      	adds	r0, r0, r4
 800645a:	4169      	adcs	r1, r5
 800645c:	2b00      	cmp	r3, #0
 800645e:	db24      	blt.n	80064aa <__udivmoddi4+0x162>
 8006460:	002b      	movs	r3, r5
 8006462:	465a      	mov	r2, fp
 8006464:	4644      	mov	r4, r8
 8006466:	40d3      	lsrs	r3, r2
 8006468:	002a      	movs	r2, r5
 800646a:	40e2      	lsrs	r2, r4
 800646c:	001c      	movs	r4, r3
 800646e:	465b      	mov	r3, fp
 8006470:	0015      	movs	r5, r2
 8006472:	2b00      	cmp	r3, #0
 8006474:	db2a      	blt.n	80064cc <__udivmoddi4+0x184>
 8006476:	0026      	movs	r6, r4
 8006478:	409e      	lsls	r6, r3
 800647a:	0033      	movs	r3, r6
 800647c:	0026      	movs	r6, r4
 800647e:	4647      	mov	r7, r8
 8006480:	40be      	lsls	r6, r7
 8006482:	0032      	movs	r2, r6
 8006484:	1a80      	subs	r0, r0, r2
 8006486:	4199      	sbcs	r1, r3
 8006488:	9000      	str	r0, [sp, #0]
 800648a:	9101      	str	r1, [sp, #4]
 800648c:	e79e      	b.n	80063cc <__udivmoddi4+0x84>
 800648e:	42a3      	cmp	r3, r4
 8006490:	d8bc      	bhi.n	800640c <__udivmoddi4+0xc4>
 8006492:	e782      	b.n	800639a <__udivmoddi4+0x52>
 8006494:	4642      	mov	r2, r8
 8006496:	2320      	movs	r3, #32
 8006498:	2100      	movs	r1, #0
 800649a:	1a9b      	subs	r3, r3, r2
 800649c:	2200      	movs	r2, #0
 800649e:	9100      	str	r1, [sp, #0]
 80064a0:	9201      	str	r2, [sp, #4]
 80064a2:	2201      	movs	r2, #1
 80064a4:	40da      	lsrs	r2, r3
 80064a6:	9201      	str	r2, [sp, #4]
 80064a8:	e785      	b.n	80063b6 <__udivmoddi4+0x6e>
 80064aa:	4642      	mov	r2, r8
 80064ac:	2320      	movs	r3, #32
 80064ae:	1a9b      	subs	r3, r3, r2
 80064b0:	002a      	movs	r2, r5
 80064b2:	4646      	mov	r6, r8
 80064b4:	409a      	lsls	r2, r3
 80064b6:	0023      	movs	r3, r4
 80064b8:	40f3      	lsrs	r3, r6
 80064ba:	4644      	mov	r4, r8
 80064bc:	4313      	orrs	r3, r2
 80064be:	002a      	movs	r2, r5
 80064c0:	40e2      	lsrs	r2, r4
 80064c2:	001c      	movs	r4, r3
 80064c4:	465b      	mov	r3, fp
 80064c6:	0015      	movs	r5, r2
 80064c8:	2b00      	cmp	r3, #0
 80064ca:	dad4      	bge.n	8006476 <__udivmoddi4+0x12e>
 80064cc:	4642      	mov	r2, r8
 80064ce:	002f      	movs	r7, r5
 80064d0:	2320      	movs	r3, #32
 80064d2:	0026      	movs	r6, r4
 80064d4:	4097      	lsls	r7, r2
 80064d6:	1a9b      	subs	r3, r3, r2
 80064d8:	40de      	lsrs	r6, r3
 80064da:	003b      	movs	r3, r7
 80064dc:	4333      	orrs	r3, r6
 80064de:	e7cd      	b.n	800647c <__udivmoddi4+0x134>

080064e0 <__clzdi2>:
 80064e0:	b510      	push	{r4, lr}
 80064e2:	2900      	cmp	r1, #0
 80064e4:	d103      	bne.n	80064ee <__clzdi2+0xe>
 80064e6:	f000 f807 	bl	80064f8 <__clzsi2>
 80064ea:	3020      	adds	r0, #32
 80064ec:	e002      	b.n	80064f4 <__clzdi2+0x14>
 80064ee:	0008      	movs	r0, r1
 80064f0:	f000 f802 	bl	80064f8 <__clzsi2>
 80064f4:	bd10      	pop	{r4, pc}
 80064f6:	46c0      	nop			; (mov r8, r8)

080064f8 <__clzsi2>:
 80064f8:	211c      	movs	r1, #28
 80064fa:	2301      	movs	r3, #1
 80064fc:	041b      	lsls	r3, r3, #16
 80064fe:	4298      	cmp	r0, r3
 8006500:	d301      	bcc.n	8006506 <__clzsi2+0xe>
 8006502:	0c00      	lsrs	r0, r0, #16
 8006504:	3910      	subs	r1, #16
 8006506:	0a1b      	lsrs	r3, r3, #8
 8006508:	4298      	cmp	r0, r3
 800650a:	d301      	bcc.n	8006510 <__clzsi2+0x18>
 800650c:	0a00      	lsrs	r0, r0, #8
 800650e:	3908      	subs	r1, #8
 8006510:	091b      	lsrs	r3, r3, #4
 8006512:	4298      	cmp	r0, r3
 8006514:	d301      	bcc.n	800651a <__clzsi2+0x22>
 8006516:	0900      	lsrs	r0, r0, #4
 8006518:	3904      	subs	r1, #4
 800651a:	a202      	add	r2, pc, #8	; (adr r2, 8006524 <__clzsi2+0x2c>)
 800651c:	5c10      	ldrb	r0, [r2, r0]
 800651e:	1840      	adds	r0, r0, r1
 8006520:	4770      	bx	lr
 8006522:	46c0      	nop			; (mov r8, r8)
 8006524:	02020304 	.word	0x02020304
 8006528:	01010101 	.word	0x01010101
	...

08006534 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8006534:	b580      	push	{r7, lr}
 8006536:	b082      	sub	sp, #8
 8006538:	af00      	add	r7, sp, #0
 800653a:	0002      	movs	r2, r0
 800653c:	1dfb      	adds	r3, r7, #7
 800653e:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8006540:	1dfb      	adds	r3, r7, #7
 8006542:	781b      	ldrb	r3, [r3, #0]
 8006544:	2b7f      	cmp	r3, #127	; 0x7f
 8006546:	d809      	bhi.n	800655c <__NVIC_EnableIRQ+0x28>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8006548:	1dfb      	adds	r3, r7, #7
 800654a:	781b      	ldrb	r3, [r3, #0]
 800654c:	001a      	movs	r2, r3
 800654e:	231f      	movs	r3, #31
 8006550:	401a      	ands	r2, r3
 8006552:	4b04      	ldr	r3, [pc, #16]	; (8006564 <__NVIC_EnableIRQ+0x30>)
 8006554:	2101      	movs	r1, #1
 8006556:	4091      	lsls	r1, r2
 8006558:	000a      	movs	r2, r1
 800655a:	601a      	str	r2, [r3, #0]
    __COMPILER_BARRIER();
  }
}
 800655c:	46c0      	nop			; (mov r8, r8)
 800655e:	46bd      	mov	sp, r7
 8006560:	b002      	add	sp, #8
 8006562:	bd80      	pop	{r7, pc}
 8006564:	e000e100 	.word	0xe000e100

08006568 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8006568:	b590      	push	{r4, r7, lr}
 800656a:	b083      	sub	sp, #12
 800656c:	af00      	add	r7, sp, #0
 800656e:	0002      	movs	r2, r0
 8006570:	6039      	str	r1, [r7, #0]
 8006572:	1dfb      	adds	r3, r7, #7
 8006574:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8006576:	1dfb      	adds	r3, r7, #7
 8006578:	781b      	ldrb	r3, [r3, #0]
 800657a:	2b7f      	cmp	r3, #127	; 0x7f
 800657c:	d828      	bhi.n	80065d0 <__NVIC_SetPriority+0x68>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800657e:	4a2f      	ldr	r2, [pc, #188]	; (800663c <__NVIC_SetPriority+0xd4>)
 8006580:	1dfb      	adds	r3, r7, #7
 8006582:	781b      	ldrb	r3, [r3, #0]
 8006584:	b25b      	sxtb	r3, r3
 8006586:	089b      	lsrs	r3, r3, #2
 8006588:	33c0      	adds	r3, #192	; 0xc0
 800658a:	009b      	lsls	r3, r3, #2
 800658c:	589b      	ldr	r3, [r3, r2]
 800658e:	1dfa      	adds	r2, r7, #7
 8006590:	7812      	ldrb	r2, [r2, #0]
 8006592:	0011      	movs	r1, r2
 8006594:	2203      	movs	r2, #3
 8006596:	400a      	ands	r2, r1
 8006598:	00d2      	lsls	r2, r2, #3
 800659a:	21ff      	movs	r1, #255	; 0xff
 800659c:	4091      	lsls	r1, r2
 800659e:	000a      	movs	r2, r1
 80065a0:	43d2      	mvns	r2, r2
 80065a2:	401a      	ands	r2, r3
 80065a4:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 80065a6:	683b      	ldr	r3, [r7, #0]
 80065a8:	019b      	lsls	r3, r3, #6
 80065aa:	22ff      	movs	r2, #255	; 0xff
 80065ac:	401a      	ands	r2, r3
 80065ae:	1dfb      	adds	r3, r7, #7
 80065b0:	781b      	ldrb	r3, [r3, #0]
 80065b2:	0018      	movs	r0, r3
 80065b4:	2303      	movs	r3, #3
 80065b6:	4003      	ands	r3, r0
 80065b8:	00db      	lsls	r3, r3, #3
 80065ba:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80065bc:	481f      	ldr	r0, [pc, #124]	; (800663c <__NVIC_SetPriority+0xd4>)
 80065be:	1dfb      	adds	r3, r7, #7
 80065c0:	781b      	ldrb	r3, [r3, #0]
 80065c2:	b25b      	sxtb	r3, r3
 80065c4:	089b      	lsrs	r3, r3, #2
 80065c6:	430a      	orrs	r2, r1
 80065c8:	33c0      	adds	r3, #192	; 0xc0
 80065ca:	009b      	lsls	r3, r3, #2
 80065cc:	501a      	str	r2, [r3, r0]
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 80065ce:	e031      	b.n	8006634 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80065d0:	4a1b      	ldr	r2, [pc, #108]	; (8006640 <__NVIC_SetPriority+0xd8>)
 80065d2:	1dfb      	adds	r3, r7, #7
 80065d4:	781b      	ldrb	r3, [r3, #0]
 80065d6:	0019      	movs	r1, r3
 80065d8:	230f      	movs	r3, #15
 80065da:	400b      	ands	r3, r1
 80065dc:	3b08      	subs	r3, #8
 80065de:	089b      	lsrs	r3, r3, #2
 80065e0:	3306      	adds	r3, #6
 80065e2:	009b      	lsls	r3, r3, #2
 80065e4:	18d3      	adds	r3, r2, r3
 80065e6:	3304      	adds	r3, #4
 80065e8:	681b      	ldr	r3, [r3, #0]
 80065ea:	1dfa      	adds	r2, r7, #7
 80065ec:	7812      	ldrb	r2, [r2, #0]
 80065ee:	0011      	movs	r1, r2
 80065f0:	2203      	movs	r2, #3
 80065f2:	400a      	ands	r2, r1
 80065f4:	00d2      	lsls	r2, r2, #3
 80065f6:	21ff      	movs	r1, #255	; 0xff
 80065f8:	4091      	lsls	r1, r2
 80065fa:	000a      	movs	r2, r1
 80065fc:	43d2      	mvns	r2, r2
 80065fe:	401a      	ands	r2, r3
 8006600:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8006602:	683b      	ldr	r3, [r7, #0]
 8006604:	019b      	lsls	r3, r3, #6
 8006606:	22ff      	movs	r2, #255	; 0xff
 8006608:	401a      	ands	r2, r3
 800660a:	1dfb      	adds	r3, r7, #7
 800660c:	781b      	ldrb	r3, [r3, #0]
 800660e:	0018      	movs	r0, r3
 8006610:	2303      	movs	r3, #3
 8006612:	4003      	ands	r3, r0
 8006614:	00db      	lsls	r3, r3, #3
 8006616:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8006618:	4809      	ldr	r0, [pc, #36]	; (8006640 <__NVIC_SetPriority+0xd8>)
 800661a:	1dfb      	adds	r3, r7, #7
 800661c:	781b      	ldrb	r3, [r3, #0]
 800661e:	001c      	movs	r4, r3
 8006620:	230f      	movs	r3, #15
 8006622:	4023      	ands	r3, r4
 8006624:	3b08      	subs	r3, #8
 8006626:	089b      	lsrs	r3, r3, #2
 8006628:	430a      	orrs	r2, r1
 800662a:	3306      	adds	r3, #6
 800662c:	009b      	lsls	r3, r3, #2
 800662e:	18c3      	adds	r3, r0, r3
 8006630:	3304      	adds	r3, #4
 8006632:	601a      	str	r2, [r3, #0]
}
 8006634:	46c0      	nop			; (mov r8, r8)
 8006636:	46bd      	mov	sp, r7
 8006638:	b003      	add	sp, #12
 800663a:	bd90      	pop	{r4, r7, pc}
 800663c:	e000e100 	.word	0xe000e100
 8006640:	e000ed00 	.word	0xe000ed00

08006644 <LL_DMA_SetDataTransferDirection>:
  *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
  *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
  * @retval None
  */
__STATIC_INLINE void LL_DMA_SetDataTransferDirection(const DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Direction)
{
 8006644:	b580      	push	{r7, lr}
 8006646:	b086      	sub	sp, #24
 8006648:	af00      	add	r7, sp, #0
 800664a:	60f8      	str	r0, [r7, #12]
 800664c:	60b9      	str	r1, [r7, #8]
 800664e:	607a      	str	r2, [r7, #4]
  uint32_t dma_base_addr = (uint32_t)DMAx;
 8006650:	68fb      	ldr	r3, [r7, #12]
 8006652:	617b      	str	r3, [r7, #20]
  MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 8006654:	4a0c      	ldr	r2, [pc, #48]	; (8006688 <LL_DMA_SetDataTransferDirection+0x44>)
 8006656:	68bb      	ldr	r3, [r7, #8]
 8006658:	18d3      	adds	r3, r2, r3
 800665a:	781b      	ldrb	r3, [r3, #0]
 800665c:	001a      	movs	r2, r3
 800665e:	697b      	ldr	r3, [r7, #20]
 8006660:	18d3      	adds	r3, r2, r3
 8006662:	681b      	ldr	r3, [r3, #0]
 8006664:	4a09      	ldr	r2, [pc, #36]	; (800668c <LL_DMA_SetDataTransferDirection+0x48>)
 8006666:	4013      	ands	r3, r2
 8006668:	0019      	movs	r1, r3
 800666a:	4a07      	ldr	r2, [pc, #28]	; (8006688 <LL_DMA_SetDataTransferDirection+0x44>)
 800666c:	68bb      	ldr	r3, [r7, #8]
 800666e:	18d3      	adds	r3, r2, r3
 8006670:	781b      	ldrb	r3, [r3, #0]
 8006672:	001a      	movs	r2, r3
 8006674:	697b      	ldr	r3, [r7, #20]
 8006676:	18d3      	adds	r3, r2, r3
 8006678:	687a      	ldr	r2, [r7, #4]
 800667a:	430a      	orrs	r2, r1
 800667c:	601a      	str	r2, [r3, #0]
             DMA_CCR_DIR | DMA_CCR_MEM2MEM, Direction);
}
 800667e:	46c0      	nop			; (mov r8, r8)
 8006680:	46bd      	mov	sp, r7
 8006682:	b006      	add	sp, #24
 8006684:	bd80      	pop	{r7, pc}
 8006686:	46c0      	nop			; (mov r8, r8)
 8006688:	080198dc 	.word	0x080198dc
 800668c:	ffffbfef 	.word	0xffffbfef

08006690 <LL_DMA_SetMode>:
  *         @arg @ref LL_DMA_MODE_NORMAL
  *         @arg @ref LL_DMA_MODE_CIRCULAR
  * @retval None
  */
__STATIC_INLINE void LL_DMA_SetMode(const DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Mode)
{
 8006690:	b580      	push	{r7, lr}
 8006692:	b086      	sub	sp, #24
 8006694:	af00      	add	r7, sp, #0
 8006696:	60f8      	str	r0, [r7, #12]
 8006698:	60b9      	str	r1, [r7, #8]
 800669a:	607a      	str	r2, [r7, #4]
  uint32_t dma_base_addr = (uint32_t)DMAx;
 800669c:	68fb      	ldr	r3, [r7, #12]
 800669e:	617b      	str	r3, [r7, #20]
  MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_CIRC,
 80066a0:	4a0c      	ldr	r2, [pc, #48]	; (80066d4 <LL_DMA_SetMode+0x44>)
 80066a2:	68bb      	ldr	r3, [r7, #8]
 80066a4:	18d3      	adds	r3, r2, r3
 80066a6:	781b      	ldrb	r3, [r3, #0]
 80066a8:	001a      	movs	r2, r3
 80066aa:	697b      	ldr	r3, [r7, #20]
 80066ac:	18d3      	adds	r3, r2, r3
 80066ae:	681b      	ldr	r3, [r3, #0]
 80066b0:	2220      	movs	r2, #32
 80066b2:	4393      	bics	r3, r2
 80066b4:	0019      	movs	r1, r3
 80066b6:	4a07      	ldr	r2, [pc, #28]	; (80066d4 <LL_DMA_SetMode+0x44>)
 80066b8:	68bb      	ldr	r3, [r7, #8]
 80066ba:	18d3      	adds	r3, r2, r3
 80066bc:	781b      	ldrb	r3, [r3, #0]
 80066be:	001a      	movs	r2, r3
 80066c0:	697b      	ldr	r3, [r7, #20]
 80066c2:	18d3      	adds	r3, r2, r3
 80066c4:	687a      	ldr	r2, [r7, #4]
 80066c6:	430a      	orrs	r2, r1
 80066c8:	601a      	str	r2, [r3, #0]
             Mode);
}
 80066ca:	46c0      	nop			; (mov r8, r8)
 80066cc:	46bd      	mov	sp, r7
 80066ce:	b006      	add	sp, #24
 80066d0:	bd80      	pop	{r7, pc}
 80066d2:	46c0      	nop			; (mov r8, r8)
 80066d4:	080198dc 	.word	0x080198dc

080066d8 <LL_DMA_SetPeriphIncMode>:
  *         @arg @ref LL_DMA_PERIPH_INCREMENT
  *         @arg @ref LL_DMA_PERIPH_NOINCREMENT
  * @retval None
  */
__STATIC_INLINE void LL_DMA_SetPeriphIncMode(const DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphOrM2MSrcIncMode)
{
 80066d8:	b580      	push	{r7, lr}
 80066da:	b086      	sub	sp, #24
 80066dc:	af00      	add	r7, sp, #0
 80066de:	60f8      	str	r0, [r7, #12]
 80066e0:	60b9      	str	r1, [r7, #8]
 80066e2:	607a      	str	r2, [r7, #4]
  uint32_t dma_base_addr = (uint32_t)DMAx;
 80066e4:	68fb      	ldr	r3, [r7, #12]
 80066e6:	617b      	str	r3, [r7, #20]
  MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_PINC,
 80066e8:	4a0c      	ldr	r2, [pc, #48]	; (800671c <LL_DMA_SetPeriphIncMode+0x44>)
 80066ea:	68bb      	ldr	r3, [r7, #8]
 80066ec:	18d3      	adds	r3, r2, r3
 80066ee:	781b      	ldrb	r3, [r3, #0]
 80066f0:	001a      	movs	r2, r3
 80066f2:	697b      	ldr	r3, [r7, #20]
 80066f4:	18d3      	adds	r3, r2, r3
 80066f6:	681b      	ldr	r3, [r3, #0]
 80066f8:	2240      	movs	r2, #64	; 0x40
 80066fa:	4393      	bics	r3, r2
 80066fc:	0019      	movs	r1, r3
 80066fe:	4a07      	ldr	r2, [pc, #28]	; (800671c <LL_DMA_SetPeriphIncMode+0x44>)
 8006700:	68bb      	ldr	r3, [r7, #8]
 8006702:	18d3      	adds	r3, r2, r3
 8006704:	781b      	ldrb	r3, [r3, #0]
 8006706:	001a      	movs	r2, r3
 8006708:	697b      	ldr	r3, [r7, #20]
 800670a:	18d3      	adds	r3, r2, r3
 800670c:	687a      	ldr	r2, [r7, #4]
 800670e:	430a      	orrs	r2, r1
 8006710:	601a      	str	r2, [r3, #0]
             PeriphOrM2MSrcIncMode);
}
 8006712:	46c0      	nop			; (mov r8, r8)
 8006714:	46bd      	mov	sp, r7
 8006716:	b006      	add	sp, #24
 8006718:	bd80      	pop	{r7, pc}
 800671a:	46c0      	nop			; (mov r8, r8)
 800671c:	080198dc 	.word	0x080198dc

08006720 <LL_DMA_SetMemoryIncMode>:
  *         @arg @ref LL_DMA_MEMORY_INCREMENT
  *         @arg @ref LL_DMA_MEMORY_NOINCREMENT
  * @retval None
  */
__STATIC_INLINE void LL_DMA_SetMemoryIncMode(const DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryOrM2MDstIncMode)
{
 8006720:	b580      	push	{r7, lr}
 8006722:	b086      	sub	sp, #24
 8006724:	af00      	add	r7, sp, #0
 8006726:	60f8      	str	r0, [r7, #12]
 8006728:	60b9      	str	r1, [r7, #8]
 800672a:	607a      	str	r2, [r7, #4]
  uint32_t dma_base_addr = (uint32_t)DMAx;
 800672c:	68fb      	ldr	r3, [r7, #12]
 800672e:	617b      	str	r3, [r7, #20]
  MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_MINC,
 8006730:	4a0c      	ldr	r2, [pc, #48]	; (8006764 <LL_DMA_SetMemoryIncMode+0x44>)
 8006732:	68bb      	ldr	r3, [r7, #8]
 8006734:	18d3      	adds	r3, r2, r3
 8006736:	781b      	ldrb	r3, [r3, #0]
 8006738:	001a      	movs	r2, r3
 800673a:	697b      	ldr	r3, [r7, #20]
 800673c:	18d3      	adds	r3, r2, r3
 800673e:	681b      	ldr	r3, [r3, #0]
 8006740:	2280      	movs	r2, #128	; 0x80
 8006742:	4393      	bics	r3, r2
 8006744:	0019      	movs	r1, r3
 8006746:	4a07      	ldr	r2, [pc, #28]	; (8006764 <LL_DMA_SetMemoryIncMode+0x44>)
 8006748:	68bb      	ldr	r3, [r7, #8]
 800674a:	18d3      	adds	r3, r2, r3
 800674c:	781b      	ldrb	r3, [r3, #0]
 800674e:	001a      	movs	r2, r3
 8006750:	697b      	ldr	r3, [r7, #20]
 8006752:	18d3      	adds	r3, r2, r3
 8006754:	687a      	ldr	r2, [r7, #4]
 8006756:	430a      	orrs	r2, r1
 8006758:	601a      	str	r2, [r3, #0]
             MemoryOrM2MDstIncMode);
}
 800675a:	46c0      	nop			; (mov r8, r8)
 800675c:	46bd      	mov	sp, r7
 800675e:	b006      	add	sp, #24
 8006760:	bd80      	pop	{r7, pc}
 8006762:	46c0      	nop			; (mov r8, r8)
 8006764:	080198dc 	.word	0x080198dc

08006768 <LL_DMA_SetPeriphSize>:
  *         @arg @ref LL_DMA_PDATAALIGN_HALFWORD
  *         @arg @ref LL_DMA_PDATAALIGN_WORD
  * @retval None
  */
__STATIC_INLINE void LL_DMA_SetPeriphSize(const DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphOrM2MSrcDataSize)
{
 8006768:	b580      	push	{r7, lr}
 800676a:	b086      	sub	sp, #24
 800676c:	af00      	add	r7, sp, #0
 800676e:	60f8      	str	r0, [r7, #12]
 8006770:	60b9      	str	r1, [r7, #8]
 8006772:	607a      	str	r2, [r7, #4]
  uint32_t dma_base_addr = (uint32_t)DMAx;
 8006774:	68fb      	ldr	r3, [r7, #12]
 8006776:	617b      	str	r3, [r7, #20]
  MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_PSIZE,
 8006778:	4a0c      	ldr	r2, [pc, #48]	; (80067ac <LL_DMA_SetPeriphSize+0x44>)
 800677a:	68bb      	ldr	r3, [r7, #8]
 800677c:	18d3      	adds	r3, r2, r3
 800677e:	781b      	ldrb	r3, [r3, #0]
 8006780:	001a      	movs	r2, r3
 8006782:	697b      	ldr	r3, [r7, #20]
 8006784:	18d3      	adds	r3, r2, r3
 8006786:	681b      	ldr	r3, [r3, #0]
 8006788:	4a09      	ldr	r2, [pc, #36]	; (80067b0 <LL_DMA_SetPeriphSize+0x48>)
 800678a:	4013      	ands	r3, r2
 800678c:	0019      	movs	r1, r3
 800678e:	4a07      	ldr	r2, [pc, #28]	; (80067ac <LL_DMA_SetPeriphSize+0x44>)
 8006790:	68bb      	ldr	r3, [r7, #8]
 8006792:	18d3      	adds	r3, r2, r3
 8006794:	781b      	ldrb	r3, [r3, #0]
 8006796:	001a      	movs	r2, r3
 8006798:	697b      	ldr	r3, [r7, #20]
 800679a:	18d3      	adds	r3, r2, r3
 800679c:	687a      	ldr	r2, [r7, #4]
 800679e:	430a      	orrs	r2, r1
 80067a0:	601a      	str	r2, [r3, #0]
             PeriphOrM2MSrcDataSize);
}
 80067a2:	46c0      	nop			; (mov r8, r8)
 80067a4:	46bd      	mov	sp, r7
 80067a6:	b006      	add	sp, #24
 80067a8:	bd80      	pop	{r7, pc}
 80067aa:	46c0      	nop			; (mov r8, r8)
 80067ac:	080198dc 	.word	0x080198dc
 80067b0:	fffffcff 	.word	0xfffffcff

080067b4 <LL_DMA_SetMemorySize>:
  *         @arg @ref LL_DMA_MDATAALIGN_HALFWORD
  *         @arg @ref LL_DMA_MDATAALIGN_WORD
  * @retval None
  */
__STATIC_INLINE void LL_DMA_SetMemorySize(const DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryOrM2MDstDataSize)
{
 80067b4:	b580      	push	{r7, lr}
 80067b6:	b086      	sub	sp, #24
 80067b8:	af00      	add	r7, sp, #0
 80067ba:	60f8      	str	r0, [r7, #12]
 80067bc:	60b9      	str	r1, [r7, #8]
 80067be:	607a      	str	r2, [r7, #4]
  uint32_t dma_base_addr = (uint32_t)DMAx;
 80067c0:	68fb      	ldr	r3, [r7, #12]
 80067c2:	617b      	str	r3, [r7, #20]
  MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_MSIZE,
 80067c4:	4a0c      	ldr	r2, [pc, #48]	; (80067f8 <LL_DMA_SetMemorySize+0x44>)
 80067c6:	68bb      	ldr	r3, [r7, #8]
 80067c8:	18d3      	adds	r3, r2, r3
 80067ca:	781b      	ldrb	r3, [r3, #0]
 80067cc:	001a      	movs	r2, r3
 80067ce:	697b      	ldr	r3, [r7, #20]
 80067d0:	18d3      	adds	r3, r2, r3
 80067d2:	681b      	ldr	r3, [r3, #0]
 80067d4:	4a09      	ldr	r2, [pc, #36]	; (80067fc <LL_DMA_SetMemorySize+0x48>)
 80067d6:	4013      	ands	r3, r2
 80067d8:	0019      	movs	r1, r3
 80067da:	4a07      	ldr	r2, [pc, #28]	; (80067f8 <LL_DMA_SetMemorySize+0x44>)
 80067dc:	68bb      	ldr	r3, [r7, #8]
 80067de:	18d3      	adds	r3, r2, r3
 80067e0:	781b      	ldrb	r3, [r3, #0]
 80067e2:	001a      	movs	r2, r3
 80067e4:	697b      	ldr	r3, [r7, #20]
 80067e6:	18d3      	adds	r3, r2, r3
 80067e8:	687a      	ldr	r2, [r7, #4]
 80067ea:	430a      	orrs	r2, r1
 80067ec:	601a      	str	r2, [r3, #0]
             MemoryOrM2MDstDataSize);
}
 80067ee:	46c0      	nop			; (mov r8, r8)
 80067f0:	46bd      	mov	sp, r7
 80067f2:	b006      	add	sp, #24
 80067f4:	bd80      	pop	{r7, pc}
 80067f6:	46c0      	nop			; (mov r8, r8)
 80067f8:	080198dc 	.word	0x080198dc
 80067fc:	fffff3ff 	.word	0xfffff3ff

08006800 <LL_DMA_SetChannelPriorityLevel>:
  *         @arg @ref LL_DMA_PRIORITY_HIGH
  *         @arg @ref LL_DMA_PRIORITY_VERYHIGH
  * @retval None
  */
__STATIC_INLINE void LL_DMA_SetChannelPriorityLevel(const DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Priority)
{
 8006800:	b580      	push	{r7, lr}
 8006802:	b086      	sub	sp, #24
 8006804:	af00      	add	r7, sp, #0
 8006806:	60f8      	str	r0, [r7, #12]
 8006808:	60b9      	str	r1, [r7, #8]
 800680a:	607a      	str	r2, [r7, #4]
  uint32_t dma_base_addr = (uint32_t)DMAx;
 800680c:	68fb      	ldr	r3, [r7, #12]
 800680e:	617b      	str	r3, [r7, #20]
  MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_PL,
 8006810:	4a0c      	ldr	r2, [pc, #48]	; (8006844 <LL_DMA_SetChannelPriorityLevel+0x44>)
 8006812:	68bb      	ldr	r3, [r7, #8]
 8006814:	18d3      	adds	r3, r2, r3
 8006816:	781b      	ldrb	r3, [r3, #0]
 8006818:	001a      	movs	r2, r3
 800681a:	697b      	ldr	r3, [r7, #20]
 800681c:	18d3      	adds	r3, r2, r3
 800681e:	681b      	ldr	r3, [r3, #0]
 8006820:	4a09      	ldr	r2, [pc, #36]	; (8006848 <LL_DMA_SetChannelPriorityLevel+0x48>)
 8006822:	4013      	ands	r3, r2
 8006824:	0019      	movs	r1, r3
 8006826:	4a07      	ldr	r2, [pc, #28]	; (8006844 <LL_DMA_SetChannelPriorityLevel+0x44>)
 8006828:	68bb      	ldr	r3, [r7, #8]
 800682a:	18d3      	adds	r3, r2, r3
 800682c:	781b      	ldrb	r3, [r3, #0]
 800682e:	001a      	movs	r2, r3
 8006830:	697b      	ldr	r3, [r7, #20]
 8006832:	18d3      	adds	r3, r2, r3
 8006834:	687a      	ldr	r2, [r7, #4]
 8006836:	430a      	orrs	r2, r1
 8006838:	601a      	str	r2, [r3, #0]
             Priority);
}
 800683a:	46c0      	nop			; (mov r8, r8)
 800683c:	46bd      	mov	sp, r7
 800683e:	b006      	add	sp, #24
 8006840:	bd80      	pop	{r7, pc}
 8006842:	46c0      	nop			; (mov r8, r8)
 8006844:	080198dc 	.word	0x080198dc
 8006848:	ffffcfff 	.word	0xffffcfff

0800684c <LL_DMA_SetPeriphRequest>:
  *         @arg @ref LL_DMAMUX_REQ_UCPD2_RX
  *         @arg @ref LL_DMAMUX_REQ_UCPD2_TX
  * @retval None
  */
__STATIC_INLINE void LL_DMA_SetPeriphRequest(const DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Request)
{
 800684c:	b580      	push	{r7, lr}
 800684e:	b086      	sub	sp, #24
 8006850:	af00      	add	r7, sp, #0
 8006852:	60f8      	str	r0, [r7, #12]
 8006854:	60b9      	str	r1, [r7, #8]
 8006856:	607a      	str	r2, [r7, #4]
  uint32_t dmamux_ccr_offset = ((((uint32_t)DMAx ^ (uint32_t)DMA1) >> 10U) * 7U);
 8006858:	68fb      	ldr	r3, [r7, #12]
 800685a:	0a9b      	lsrs	r3, r3, #10
 800685c:	4a0f      	ldr	r2, [pc, #60]	; (800689c <LL_DMA_SetPeriphRequest+0x50>)
 800685e:	405a      	eors	r2, r3
 8006860:	0013      	movs	r3, r2
 8006862:	00db      	lsls	r3, r3, #3
 8006864:	1a9b      	subs	r3, r3, r2
 8006866:	617b      	str	r3, [r7, #20]
  MODIFY_REG((DMAMUX1_Channel0 + Channel + dmamux_ccr_offset)->CCR, DMAMUX_CxCR_DMAREQ_ID, Request);
 8006868:	68ba      	ldr	r2, [r7, #8]
 800686a:	697b      	ldr	r3, [r7, #20]
 800686c:	18d3      	adds	r3, r2, r3
 800686e:	009b      	lsls	r3, r3, #2
 8006870:	4a0b      	ldr	r2, [pc, #44]	; (80068a0 <LL_DMA_SetPeriphRequest+0x54>)
 8006872:	4694      	mov	ip, r2
 8006874:	4463      	add	r3, ip
 8006876:	681b      	ldr	r3, [r3, #0]
 8006878:	227f      	movs	r2, #127	; 0x7f
 800687a:	4393      	bics	r3, r2
 800687c:	0019      	movs	r1, r3
 800687e:	68ba      	ldr	r2, [r7, #8]
 8006880:	697b      	ldr	r3, [r7, #20]
 8006882:	18d3      	adds	r3, r2, r3
 8006884:	009b      	lsls	r3, r3, #2
 8006886:	4a06      	ldr	r2, [pc, #24]	; (80068a0 <LL_DMA_SetPeriphRequest+0x54>)
 8006888:	4694      	mov	ip, r2
 800688a:	4463      	add	r3, ip
 800688c:	687a      	ldr	r2, [r7, #4]
 800688e:	430a      	orrs	r2, r1
 8006890:	601a      	str	r2, [r3, #0]
}
 8006892:	46c0      	nop			; (mov r8, r8)
 8006894:	46bd      	mov	sp, r7
 8006896:	b006      	add	sp, #24
 8006898:	bd80      	pop	{r7, pc}
 800689a:	46c0      	nop			; (mov r8, r8)
 800689c:	00100080 	.word	0x00100080
 80068a0:	40020800 	.word	0x40020800

080068a4 <LL_LPUART_Enable>:
  * @rmtoll CR1          UE            LL_LPUART_Enable
  * @param  LPUARTx LPUART Instance
  * @retval None
  */
__STATIC_INLINE void LL_LPUART_Enable(USART_TypeDef *LPUARTx)
{
 80068a4:	b580      	push	{r7, lr}
 80068a6:	b082      	sub	sp, #8
 80068a8:	af00      	add	r7, sp, #0
 80068aa:	6078      	str	r0, [r7, #4]
  SET_BIT(LPUARTx->CR1, USART_CR1_UE);
 80068ac:	687b      	ldr	r3, [r7, #4]
 80068ae:	681b      	ldr	r3, [r3, #0]
 80068b0:	2201      	movs	r2, #1
 80068b2:	431a      	orrs	r2, r3
 80068b4:	687b      	ldr	r3, [r7, #4]
 80068b6:	601a      	str	r2, [r3, #0]
}
 80068b8:	46c0      	nop			; (mov r8, r8)
 80068ba:	46bd      	mov	sp, r7
 80068bc:	b002      	add	sp, #8
 80068be:	bd80      	pop	{r7, pc}

080068c0 <LL_LPUART_DisableFIFO>:
  * @rmtoll CR1          FIFOEN        LL_LPUART_DisableFIFO
  * @param  LPUARTx LPUART Instance
  * @retval None
  */
__STATIC_INLINE void LL_LPUART_DisableFIFO(USART_TypeDef *LPUARTx)
{
 80068c0:	b580      	push	{r7, lr}
 80068c2:	b082      	sub	sp, #8
 80068c4:	af00      	add	r7, sp, #0
 80068c6:	6078      	str	r0, [r7, #4]
  CLEAR_BIT(LPUARTx->CR1, USART_CR1_FIFOEN);
 80068c8:	687b      	ldr	r3, [r7, #4]
 80068ca:	681b      	ldr	r3, [r3, #0]
 80068cc:	4a03      	ldr	r2, [pc, #12]	; (80068dc <LL_LPUART_DisableFIFO+0x1c>)
 80068ce:	401a      	ands	r2, r3
 80068d0:	687b      	ldr	r3, [r7, #4]
 80068d2:	601a      	str	r2, [r3, #0]
}
 80068d4:	46c0      	nop			; (mov r8, r8)
 80068d6:	46bd      	mov	sp, r7
 80068d8:	b002      	add	sp, #8
 80068da:	bd80      	pop	{r7, pc}
 80068dc:	dfffffff 	.word	0xdfffffff

080068e0 <LL_LPUART_SetTXFIFOThreshold>:
  *         @arg @ref LL_LPUART_FIFOTHRESHOLD_7_8
  *         @arg @ref LL_LPUART_FIFOTHRESHOLD_8_8
  * @retval None
  */
__STATIC_INLINE void LL_LPUART_SetTXFIFOThreshold(USART_TypeDef *LPUARTx, uint32_t Threshold)
{
 80068e0:	b580      	push	{r7, lr}
 80068e2:	b086      	sub	sp, #24
 80068e4:	af00      	add	r7, sp, #0
 80068e6:	6078      	str	r0, [r7, #4]
 80068e8:	6039      	str	r1, [r7, #0]
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80068ea:	f3ef 8310 	mrs	r3, PRIMASK
 80068ee:	60bb      	str	r3, [r7, #8]
  return(result);
 80068f0:	68bb      	ldr	r3, [r7, #8]
  ATOMIC_MODIFY_REG(LPUARTx->CR3, USART_CR3_TXFTCFG, Threshold << USART_CR3_TXFTCFG_Pos);
 80068f2:	617b      	str	r3, [r7, #20]
 80068f4:	2301      	movs	r3, #1
 80068f6:	60fb      	str	r3, [r7, #12]
  \details Assigns the given value to the Priority Mask Register.
  \param [in]    priMask  Priority Mask
 */
__STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
{
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80068f8:	68fb      	ldr	r3, [r7, #12]
 80068fa:	f383 8810 	msr	PRIMASK, r3
}
 80068fe:	46c0      	nop			; (mov r8, r8)
 8006900:	687b      	ldr	r3, [r7, #4]
 8006902:	689b      	ldr	r3, [r3, #8]
 8006904:	00db      	lsls	r3, r3, #3
 8006906:	08da      	lsrs	r2, r3, #3
 8006908:	683b      	ldr	r3, [r7, #0]
 800690a:	075b      	lsls	r3, r3, #29
 800690c:	431a      	orrs	r2, r3
 800690e:	687b      	ldr	r3, [r7, #4]
 8006910:	609a      	str	r2, [r3, #8]
 8006912:	697b      	ldr	r3, [r7, #20]
 8006914:	613b      	str	r3, [r7, #16]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8006916:	693b      	ldr	r3, [r7, #16]
 8006918:	f383 8810 	msr	PRIMASK, r3
}
 800691c:	46c0      	nop			; (mov r8, r8)
}
 800691e:	46c0      	nop			; (mov r8, r8)
 8006920:	46bd      	mov	sp, r7
 8006922:	b006      	add	sp, #24
 8006924:	bd80      	pop	{r7, pc}
	...

08006928 <LL_LPUART_SetRXFIFOThreshold>:
  *         @arg @ref LL_LPUART_FIFOTHRESHOLD_7_8
  *         @arg @ref LL_LPUART_FIFOTHRESHOLD_8_8
  * @retval None
  */
__STATIC_INLINE void LL_LPUART_SetRXFIFOThreshold(USART_TypeDef *LPUARTx, uint32_t Threshold)
{
 8006928:	b580      	push	{r7, lr}
 800692a:	b086      	sub	sp, #24
 800692c:	af00      	add	r7, sp, #0
 800692e:	6078      	str	r0, [r7, #4]
 8006930:	6039      	str	r1, [r7, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006932:	f3ef 8310 	mrs	r3, PRIMASK
 8006936:	60bb      	str	r3, [r7, #8]
  return(result);
 8006938:	68bb      	ldr	r3, [r7, #8]
  ATOMIC_MODIFY_REG(LPUARTx->CR3, USART_CR3_RXFTCFG, Threshold << USART_CR3_RXFTCFG_Pos);
 800693a:	617b      	str	r3, [r7, #20]
 800693c:	2301      	movs	r3, #1
 800693e:	60fb      	str	r3, [r7, #12]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8006940:	68fb      	ldr	r3, [r7, #12]
 8006942:	f383 8810 	msr	PRIMASK, r3
}
 8006946:	46c0      	nop			; (mov r8, r8)
 8006948:	687b      	ldr	r3, [r7, #4]
 800694a:	689b      	ldr	r3, [r3, #8]
 800694c:	4a08      	ldr	r2, [pc, #32]	; (8006970 <LL_LPUART_SetRXFIFOThreshold+0x48>)
 800694e:	401a      	ands	r2, r3
 8006950:	683b      	ldr	r3, [r7, #0]
 8006952:	065b      	lsls	r3, r3, #25
 8006954:	431a      	orrs	r2, r3
 8006956:	687b      	ldr	r3, [r7, #4]
 8006958:	609a      	str	r2, [r3, #8]
 800695a:	697b      	ldr	r3, [r7, #20]
 800695c:	613b      	str	r3, [r7, #16]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800695e:	693b      	ldr	r3, [r7, #16]
 8006960:	f383 8810 	msr	PRIMASK, r3
}
 8006964:	46c0      	nop			; (mov r8, r8)
}
 8006966:	46c0      	nop			; (mov r8, r8)
 8006968:	46bd      	mov	sp, r7
 800696a:	b006      	add	sp, #24
 800696c:	bd80      	pop	{r7, pc}
 800696e:	46c0      	nop			; (mov r8, r8)
 8006970:	f1ffffff 	.word	0xf1ffffff

08006974 <LL_LPUART_IsActiveFlag_TEACK>:
  * @rmtoll ISR          TEACK         LL_LPUART_IsActiveFlag_TEACK
  * @param  LPUARTx LPUART Instance
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_TEACK(const USART_TypeDef *LPUARTx)
{
 8006974:	b580      	push	{r7, lr}
 8006976:	b082      	sub	sp, #8
 8006978:	af00      	add	r7, sp, #0
 800697a:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(LPUARTx->ISR, USART_ISR_TEACK) == (USART_ISR_TEACK)) ? 1UL : 0UL);
 800697c:	687b      	ldr	r3, [r7, #4]
 800697e:	69da      	ldr	r2, [r3, #28]
 8006980:	2380      	movs	r3, #128	; 0x80
 8006982:	039b      	lsls	r3, r3, #14
 8006984:	401a      	ands	r2, r3
 8006986:	2380      	movs	r3, #128	; 0x80
 8006988:	039b      	lsls	r3, r3, #14
 800698a:	429a      	cmp	r2, r3
 800698c:	d101      	bne.n	8006992 <LL_LPUART_IsActiveFlag_TEACK+0x1e>
 800698e:	2301      	movs	r3, #1
 8006990:	e000      	b.n	8006994 <LL_LPUART_IsActiveFlag_TEACK+0x20>
 8006992:	2300      	movs	r3, #0
}
 8006994:	0018      	movs	r0, r3
 8006996:	46bd      	mov	sp, r7
 8006998:	b002      	add	sp, #8
 800699a:	bd80      	pop	{r7, pc}

0800699c <LL_LPUART_IsActiveFlag_REACK>:
  * @rmtoll ISR          REACK         LL_LPUART_IsActiveFlag_REACK
  * @param  LPUARTx LPUART Instance
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_REACK(const USART_TypeDef *LPUARTx)
{
 800699c:	b580      	push	{r7, lr}
 800699e:	b082      	sub	sp, #8
 80069a0:	af00      	add	r7, sp, #0
 80069a2:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(LPUARTx->ISR, USART_ISR_REACK) == (USART_ISR_REACK)) ? 1UL : 0UL);
 80069a4:	687b      	ldr	r3, [r7, #4]
 80069a6:	69da      	ldr	r2, [r3, #28]
 80069a8:	2380      	movs	r3, #128	; 0x80
 80069aa:	03db      	lsls	r3, r3, #15
 80069ac:	401a      	ands	r2, r3
 80069ae:	2380      	movs	r3, #128	; 0x80
 80069b0:	03db      	lsls	r3, r3, #15
 80069b2:	429a      	cmp	r2, r3
 80069b4:	d101      	bne.n	80069ba <LL_LPUART_IsActiveFlag_REACK+0x1e>
 80069b6:	2301      	movs	r3, #1
 80069b8:	e000      	b.n	80069bc <LL_LPUART_IsActiveFlag_REACK+0x20>
 80069ba:	2300      	movs	r3, #0
}
 80069bc:	0018      	movs	r0, r3
 80069be:	46bd      	mov	sp, r7
 80069c0:	b002      	add	sp, #8
 80069c2:	bd80      	pop	{r7, pc}

080069c4 <LL_APB1_GRP1_EnableClock>:
  *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1  (1)
  * @note Peripheral marked with (1) are not available all devices
  * @retval None
  */
__STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
{
 80069c4:	b580      	push	{r7, lr}
 80069c6:	b084      	sub	sp, #16
 80069c8:	af00      	add	r7, sp, #0
 80069ca:	6078      	str	r0, [r7, #4]
  __IO uint32_t tmpreg;
  SET_BIT(RCC->APBENR1, Periphs);
 80069cc:	4b07      	ldr	r3, [pc, #28]	; (80069ec <LL_APB1_GRP1_EnableClock+0x28>)
 80069ce:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 80069d0:	4b06      	ldr	r3, [pc, #24]	; (80069ec <LL_APB1_GRP1_EnableClock+0x28>)
 80069d2:	687a      	ldr	r2, [r7, #4]
 80069d4:	430a      	orrs	r2, r1
 80069d6:	63da      	str	r2, [r3, #60]	; 0x3c
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->APBENR1, Periphs);
 80069d8:	4b04      	ldr	r3, [pc, #16]	; (80069ec <LL_APB1_GRP1_EnableClock+0x28>)
 80069da:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80069dc:	687a      	ldr	r2, [r7, #4]
 80069de:	4013      	ands	r3, r2
 80069e0:	60fb      	str	r3, [r7, #12]
  (void)tmpreg;
 80069e2:	68fb      	ldr	r3, [r7, #12]
}
 80069e4:	46c0      	nop			; (mov r8, r8)
 80069e6:	46bd      	mov	sp, r7
 80069e8:	b004      	add	sp, #16
 80069ea:	bd80      	pop	{r7, pc}
 80069ec:	40021000 	.word	0x40021000

080069f0 <LL_IOP_GRP1_EnableClock>:
  *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOE
  *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOF
  * @retval None
  */
__STATIC_INLINE void LL_IOP_GRP1_EnableClock(uint32_t Periphs)
{
 80069f0:	b580      	push	{r7, lr}
 80069f2:	b084      	sub	sp, #16
 80069f4:	af00      	add	r7, sp, #0
 80069f6:	6078      	str	r0, [r7, #4]
  __IO uint32_t tmpreg;
  SET_BIT(RCC->IOPENR, Periphs);
 80069f8:	4b07      	ldr	r3, [pc, #28]	; (8006a18 <LL_IOP_GRP1_EnableClock+0x28>)
 80069fa:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80069fc:	4b06      	ldr	r3, [pc, #24]	; (8006a18 <LL_IOP_GRP1_EnableClock+0x28>)
 80069fe:	687a      	ldr	r2, [r7, #4]
 8006a00:	430a      	orrs	r2, r1
 8006a02:	635a      	str	r2, [r3, #52]	; 0x34
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->IOPENR, Periphs);
 8006a04:	4b04      	ldr	r3, [pc, #16]	; (8006a18 <LL_IOP_GRP1_EnableClock+0x28>)
 8006a06:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006a08:	687a      	ldr	r2, [r7, #4]
 8006a0a:	4013      	ands	r3, r2
 8006a0c:	60fb      	str	r3, [r7, #12]
  (void)tmpreg;
 8006a0e:	68fb      	ldr	r3, [r7, #12]
}
 8006a10:	46c0      	nop			; (mov r8, r8)
 8006a12:	46bd      	mov	sp, r7
 8006a14:	b004      	add	sp, #16
 8006a16:	bd80      	pop	{r7, pc}
 8006a18:	40021000 	.word	0x40021000

08006a1c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8006a1c:	b580      	push	{r7, lr}
 8006a1e:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8006a20:	f000 fd04 	bl	800742c <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8006a24:	f000 f820 	bl	8006a68 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8006a28:	f000 fa9a 	bl	8006f60 <MX_GPIO_Init>
  MX_DMA_Init();
 8006a2c:	f000 fa74 	bl	8006f18 <MX_DMA_Init>
  MX_UCPD1_Init();
 8006a30:	f000 f9cc 	bl	8006dcc <MX_UCPD1_Init>
  MX_ADC1_Init();
 8006a34:	f000 f876 	bl	8006b24 <MX_ADC1_Init>
  MX_LPUART1_UART_Init();
 8006a38:	f000 f8e6 	bl	8006c08 <MX_LPUART1_UART_Init>
  /* USER CODE BEGIN 2 */

  /* USER CODE END 2 */

  /* Init scheduler */
  osKernelInitialize();
 8006a3c:	f007 f92a 	bl	800dc94 <osKernelInitialize>
  /* USBPD initialisation ---------------------------------*/
  MX_USBPD_Init();
 8006a40:	f009 ff00 	bl	8010844 <MX_USBPD_Init>
  /* add queues, ... */
  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */
  /* creation of defaultTask */
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8006a44:	4a05      	ldr	r2, [pc, #20]	; (8006a5c <main+0x40>)
 8006a46:	4b06      	ldr	r3, [pc, #24]	; (8006a60 <main+0x44>)
 8006a48:	2100      	movs	r1, #0
 8006a4a:	0018      	movs	r0, r3
 8006a4c:	f007 f96a 	bl	800dd24 <osThreadNew>
 8006a50:	0002      	movs	r2, r0
 8006a52:	4b04      	ldr	r3, [pc, #16]	; (8006a64 <main+0x48>)
 8006a54:	601a      	str	r2, [r3, #0]
  /* USER CODE BEGIN RTOS_EVENTS */
  /* add events, ... */
  /* USER CODE END RTOS_EVENTS */

  /* Start scheduler */
  osKernelStart();
 8006a56:	f007 f93f 	bl	800dcd8 <osKernelStart>

  /* We should never get here as control is now taken by the scheduler */
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8006a5a:	e7fe      	b.n	8006a5a <main+0x3e>
 8006a5c:	080198e4 	.word	0x080198e4
 8006a60:	080070c5 	.word	0x080070c5
 8006a64:	20000238 	.word	0x20000238

08006a68 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8006a68:	b590      	push	{r4, r7, lr}
 8006a6a:	b095      	sub	sp, #84	; 0x54
 8006a6c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8006a6e:	2414      	movs	r4, #20
 8006a70:	193b      	adds	r3, r7, r4
 8006a72:	0018      	movs	r0, r3
 8006a74:	233c      	movs	r3, #60	; 0x3c
 8006a76:	001a      	movs	r2, r3
 8006a78:	2100      	movs	r1, #0
 8006a7a:	f011 fba3 	bl	80181c4 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8006a7e:	1d3b      	adds	r3, r7, #4
 8006a80:	0018      	movs	r0, r3
 8006a82:	2310      	movs	r3, #16
 8006a84:	001a      	movs	r2, r3
 8006a86:	2100      	movs	r1, #0
 8006a88:	f011 fb9c 	bl	80181c4 <memset>

  /** Configure the main internal regulator output voltage
  */
  HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
 8006a8c:	2380      	movs	r3, #128	; 0x80
 8006a8e:	009b      	lsls	r3, r3, #2
 8006a90:	0018      	movs	r0, r3
 8006a92:	f002 f901 	bl	8008c98 <HAL_PWREx_ControlVoltageScaling>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8006a96:	193b      	adds	r3, r7, r4
 8006a98:	2202      	movs	r2, #2
 8006a9a:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8006a9c:	193b      	adds	r3, r7, r4
 8006a9e:	2280      	movs	r2, #128	; 0x80
 8006aa0:	0052      	lsls	r2, r2, #1
 8006aa2:	60da      	str	r2, [r3, #12]
  RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
 8006aa4:	0021      	movs	r1, r4
 8006aa6:	187b      	adds	r3, r7, r1
 8006aa8:	2200      	movs	r2, #0
 8006aaa:	611a      	str	r2, [r3, #16]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8006aac:	187b      	adds	r3, r7, r1
 8006aae:	2240      	movs	r2, #64	; 0x40
 8006ab0:	615a      	str	r2, [r3, #20]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8006ab2:	187b      	adds	r3, r7, r1
 8006ab4:	2202      	movs	r2, #2
 8006ab6:	621a      	str	r2, [r3, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8006ab8:	187b      	adds	r3, r7, r1
 8006aba:	2202      	movs	r2, #2
 8006abc:	625a      	str	r2, [r3, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 8006abe:	187b      	adds	r3, r7, r1
 8006ac0:	2200      	movs	r2, #0
 8006ac2:	629a      	str	r2, [r3, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLN = 8;
 8006ac4:	187b      	adds	r3, r7, r1
 8006ac6:	2208      	movs	r2, #8
 8006ac8:	62da      	str	r2, [r3, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8006aca:	187b      	adds	r3, r7, r1
 8006acc:	2280      	movs	r2, #128	; 0x80
 8006ace:	0292      	lsls	r2, r2, #10
 8006ad0:	631a      	str	r2, [r3, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 8006ad2:	187b      	adds	r3, r7, r1
 8006ad4:	2280      	movs	r2, #128	; 0x80
 8006ad6:	0492      	lsls	r2, r2, #18
 8006ad8:	635a      	str	r2, [r3, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 8006ada:	187b      	adds	r3, r7, r1
 8006adc:	2280      	movs	r2, #128	; 0x80
 8006ade:	0592      	lsls	r2, r2, #22
 8006ae0:	639a      	str	r2, [r3, #56]	; 0x38
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8006ae2:	187b      	adds	r3, r7, r1
 8006ae4:	0018      	movs	r0, r3
 8006ae6:	f002 f923 	bl	8008d30 <HAL_RCC_OscConfig>
 8006aea:	1e03      	subs	r3, r0, #0
 8006aec:	d001      	beq.n	8006af2 <SystemClock_Config+0x8a>
  {
    Error_Handler();
 8006aee:	f000 fb01 	bl	80070f4 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8006af2:	1d3b      	adds	r3, r7, #4
 8006af4:	2207      	movs	r2, #7
 8006af6:	601a      	str	r2, [r3, #0]
                              |RCC_CLOCKTYPE_PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8006af8:	1d3b      	adds	r3, r7, #4
 8006afa:	2202      	movs	r2, #2
 8006afc:	605a      	str	r2, [r3, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8006afe:	1d3b      	adds	r3, r7, #4
 8006b00:	2200      	movs	r2, #0
 8006b02:	609a      	str	r2, [r3, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8006b04:	1d3b      	adds	r3, r7, #4
 8006b06:	2200      	movs	r2, #0
 8006b08:	60da      	str	r2, [r3, #12]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8006b0a:	1d3b      	adds	r3, r7, #4
 8006b0c:	2102      	movs	r1, #2
 8006b0e:	0018      	movs	r0, r3
 8006b10:	f002 fc6e 	bl	80093f0 <HAL_RCC_ClockConfig>
 8006b14:	1e03      	subs	r3, r0, #0
 8006b16:	d001      	beq.n	8006b1c <SystemClock_Config+0xb4>
  {
    Error_Handler();
 8006b18:	f000 faec 	bl	80070f4 <Error_Handler>
  }
}
 8006b1c:	46c0      	nop			; (mov r8, r8)
 8006b1e:	46bd      	mov	sp, r7
 8006b20:	b015      	add	sp, #84	; 0x54
 8006b22:	bd90      	pop	{r4, r7, pc}

08006b24 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8006b24:	b580      	push	{r7, lr}
 8006b26:	b084      	sub	sp, #16
 8006b28:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8006b2a:	1d3b      	adds	r3, r7, #4
 8006b2c:	0018      	movs	r0, r3
 8006b2e:	230c      	movs	r3, #12
 8006b30:	001a      	movs	r2, r3
 8006b32:	2100      	movs	r1, #0
 8006b34:	f011 fb46 	bl	80181c4 <memset>

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 8006b38:	4b30      	ldr	r3, [pc, #192]	; (8006bfc <MX_ADC1_Init+0xd8>)
 8006b3a:	4a31      	ldr	r2, [pc, #196]	; (8006c00 <MX_ADC1_Init+0xdc>)
 8006b3c:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8006b3e:	4b2f      	ldr	r3, [pc, #188]	; (8006bfc <MX_ADC1_Init+0xd8>)
 8006b40:	2280      	movs	r2, #128	; 0x80
 8006b42:	0612      	lsls	r2, r2, #24
 8006b44:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8006b46:	4b2d      	ldr	r3, [pc, #180]	; (8006bfc <MX_ADC1_Init+0xd8>)
 8006b48:	2200      	movs	r2, #0
 8006b4a:	609a      	str	r2, [r3, #8]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8006b4c:	4b2b      	ldr	r3, [pc, #172]	; (8006bfc <MX_ADC1_Init+0xd8>)
 8006b4e:	2200      	movs	r2, #0
 8006b50:	60da      	str	r2, [r3, #12]
  hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 8006b52:	4b2a      	ldr	r3, [pc, #168]	; (8006bfc <MX_ADC1_Init+0xd8>)
 8006b54:	2200      	movs	r2, #0
 8006b56:	611a      	str	r2, [r3, #16]
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8006b58:	4b28      	ldr	r3, [pc, #160]	; (8006bfc <MX_ADC1_Init+0xd8>)
 8006b5a:	2204      	movs	r2, #4
 8006b5c:	615a      	str	r2, [r3, #20]
  hadc1.Init.LowPowerAutoWait = DISABLE;
 8006b5e:	4b27      	ldr	r3, [pc, #156]	; (8006bfc <MX_ADC1_Init+0xd8>)
 8006b60:	2200      	movs	r2, #0
 8006b62:	761a      	strb	r2, [r3, #24]
  hadc1.Init.LowPowerAutoPowerOff = DISABLE;
 8006b64:	4b25      	ldr	r3, [pc, #148]	; (8006bfc <MX_ADC1_Init+0xd8>)
 8006b66:	2200      	movs	r2, #0
 8006b68:	765a      	strb	r2, [r3, #25]
  hadc1.Init.ContinuousConvMode = ENABLE;
 8006b6a:	4b24      	ldr	r3, [pc, #144]	; (8006bfc <MX_ADC1_Init+0xd8>)
 8006b6c:	2201      	movs	r2, #1
 8006b6e:	769a      	strb	r2, [r3, #26]
  hadc1.Init.NbrOfConversion = 1;
 8006b70:	4b22      	ldr	r3, [pc, #136]	; (8006bfc <MX_ADC1_Init+0xd8>)
 8006b72:	2201      	movs	r2, #1
 8006b74:	61da      	str	r2, [r3, #28]
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8006b76:	4b21      	ldr	r3, [pc, #132]	; (8006bfc <MX_ADC1_Init+0xd8>)
 8006b78:	2200      	movs	r2, #0
 8006b7a:	625a      	str	r2, [r3, #36]	; 0x24
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8006b7c:	4b1f      	ldr	r3, [pc, #124]	; (8006bfc <MX_ADC1_Init+0xd8>)
 8006b7e:	2200      	movs	r2, #0
 8006b80:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8006b82:	4b1e      	ldr	r3, [pc, #120]	; (8006bfc <MX_ADC1_Init+0xd8>)
 8006b84:	222c      	movs	r2, #44	; 0x2c
 8006b86:	2100      	movs	r1, #0
 8006b88:	5499      	strb	r1, [r3, r2]
  hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 8006b8a:	4b1c      	ldr	r3, [pc, #112]	; (8006bfc <MX_ADC1_Init+0xd8>)
 8006b8c:	2280      	movs	r2, #128	; 0x80
 8006b8e:	0152      	lsls	r2, r2, #5
 8006b90:	631a      	str	r2, [r3, #48]	; 0x30
  hadc1.Init.SamplingTimeCommon1 = ADC_SAMPLETIME_160CYCLES_5;
 8006b92:	4b1a      	ldr	r3, [pc, #104]	; (8006bfc <MX_ADC1_Init+0xd8>)
 8006b94:	2207      	movs	r2, #7
 8006b96:	635a      	str	r2, [r3, #52]	; 0x34
  hadc1.Init.SamplingTimeCommon2 = ADC_SAMPLETIME_160CYCLES_5;
 8006b98:	4b18      	ldr	r3, [pc, #96]	; (8006bfc <MX_ADC1_Init+0xd8>)
 8006b9a:	2207      	movs	r2, #7
 8006b9c:	639a      	str	r2, [r3, #56]	; 0x38
  hadc1.Init.OversamplingMode = DISABLE;
 8006b9e:	4b17      	ldr	r3, [pc, #92]	; (8006bfc <MX_ADC1_Init+0xd8>)
 8006ba0:	223c      	movs	r2, #60	; 0x3c
 8006ba2:	2100      	movs	r1, #0
 8006ba4:	5499      	strb	r1, [r3, r2]
  hadc1.Init.TriggerFrequencyMode = ADC_TRIGGER_FREQ_HIGH;
 8006ba6:	4b15      	ldr	r3, [pc, #84]	; (8006bfc <MX_ADC1_Init+0xd8>)
 8006ba8:	2200      	movs	r2, #0
 8006baa:	64da      	str	r2, [r3, #76]	; 0x4c
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8006bac:	4b13      	ldr	r3, [pc, #76]	; (8006bfc <MX_ADC1_Init+0xd8>)
 8006bae:	0018      	movs	r0, r3
 8006bb0:	f000 fdf8 	bl	80077a4 <HAL_ADC_Init>
 8006bb4:	1e03      	subs	r3, r0, #0
 8006bb6:	d001      	beq.n	8006bbc <MX_ADC1_Init+0x98>
  {
    Error_Handler();
 8006bb8:	f000 fa9c 	bl	80070f4 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_9;
 8006bbc:	1d3b      	adds	r3, r7, #4
 8006bbe:	4a11      	ldr	r2, [pc, #68]	; (8006c04 <MX_ADC1_Init+0xe0>)
 8006bc0:	601a      	str	r2, [r3, #0]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8006bc2:	1d3b      	adds	r3, r7, #4
 8006bc4:	2200      	movs	r2, #0
 8006bc6:	605a      	str	r2, [r3, #4]
  sConfig.SamplingTime = ADC_SAMPLINGTIME_COMMON_1;
 8006bc8:	1d3b      	adds	r3, r7, #4
 8006bca:	2200      	movs	r2, #0
 8006bcc:	609a      	str	r2, [r3, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8006bce:	1d3a      	adds	r2, r7, #4
 8006bd0:	4b0a      	ldr	r3, [pc, #40]	; (8006bfc <MX_ADC1_Init+0xd8>)
 8006bd2:	0011      	movs	r1, r2
 8006bd4:	0018      	movs	r0, r3
 8006bd6:	f000 ffdb 	bl	8007b90 <HAL_ADC_ConfigChannel>
 8006bda:	1e03      	subs	r3, r0, #0
 8006bdc:	d001      	beq.n	8006be2 <MX_ADC1_Init+0xbe>
  {
    Error_Handler();
 8006bde:	f000 fa89 	bl	80070f4 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */
  HAL_ADCEx_Calibration_Start(&hadc1);
 8006be2:	4b06      	ldr	r3, [pc, #24]	; (8006bfc <MX_ADC1_Init+0xd8>)
 8006be4:	0018      	movs	r0, r3
 8006be6:	f001 fb27 	bl	8008238 <HAL_ADCEx_Calibration_Start>
  HAL_ADC_Start(&hadc1);
 8006bea:	4b04      	ldr	r3, [pc, #16]	; (8006bfc <MX_ADC1_Init+0xd8>)
 8006bec:	0018      	movs	r0, r3
 8006bee:	f000 ff81 	bl	8007af4 <HAL_ADC_Start>
  /* USER CODE END ADC1_Init 2 */

}
 8006bf2:	46c0      	nop			; (mov r8, r8)
 8006bf4:	46bd      	mov	sp, r7
 8006bf6:	b004      	add	sp, #16
 8006bf8:	bd80      	pop	{r7, pc}
 8006bfa:	46c0      	nop			; (mov r8, r8)
 8006bfc:	200001d4 	.word	0x200001d4
 8006c00:	40012400 	.word	0x40012400
 8006c04:	24000200 	.word	0x24000200

08006c08 <MX_LPUART1_UART_Init>:
  * @brief LPUART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_LPUART1_UART_Init(void)
{
 8006c08:	b590      	push	{r4, r7, lr}
 8006c0a:	b0a1      	sub	sp, #132	; 0x84
 8006c0c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN LPUART1_Init 0 */

  /* USER CODE END LPUART1_Init 0 */

  LL_LPUART_InitTypeDef LPUART_InitStruct = {0};
 8006c0e:	2364      	movs	r3, #100	; 0x64
 8006c10:	18fb      	adds	r3, r7, r3
 8006c12:	0018      	movs	r0, r3
 8006c14:	231c      	movs	r3, #28
 8006c16:	001a      	movs	r2, r3
 8006c18:	2100      	movs	r1, #0
 8006c1a:	f011 fad3 	bl	80181c4 <memset>

  LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 8006c1e:	234c      	movs	r3, #76	; 0x4c
 8006c20:	18fb      	adds	r3, r7, r3
 8006c22:	0018      	movs	r0, r3
 8006c24:	2318      	movs	r3, #24
 8006c26:	001a      	movs	r2, r3
 8006c28:	2100      	movs	r1, #0
 8006c2a:	f011 facb 	bl	80181c4 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8006c2e:	003b      	movs	r3, r7
 8006c30:	0018      	movs	r0, r3
 8006c32:	234c      	movs	r3, #76	; 0x4c
 8006c34:	001a      	movs	r2, r3
 8006c36:	2100      	movs	r1, #0
 8006c38:	f011 fac4 	bl	80181c4 <memset>

  /** Initializes the peripherals clocks
  */
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_LPUART1;
 8006c3c:	003b      	movs	r3, r7
 8006c3e:	2210      	movs	r2, #16
 8006c40:	601a      	str	r2, [r3, #0]
  PeriphClkInit.Lpuart1ClockSelection = RCC_LPUART1CLKSOURCE_PCLK1;
 8006c42:	003b      	movs	r3, r7
 8006c44:	2200      	movs	r2, #0
 8006c46:	611a      	str	r2, [r3, #16]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8006c48:	003b      	movs	r3, r7
 8006c4a:	0018      	movs	r0, r3
 8006c4c:	f002 fda4 	bl	8009798 <HAL_RCCEx_PeriphCLKConfig>
 8006c50:	1e03      	subs	r3, r0, #0
 8006c52:	d001      	beq.n	8006c58 <MX_LPUART1_UART_Init+0x50>
  {
    Error_Handler();
 8006c54:	f000 fa4e 	bl	80070f4 <Error_Handler>
  }

  /* Peripheral clock enable */
  LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_LPUART1);
 8006c58:	2380      	movs	r3, #128	; 0x80
 8006c5a:	035b      	lsls	r3, r3, #13
 8006c5c:	0018      	movs	r0, r3
 8006c5e:	f7ff feb1 	bl	80069c4 <LL_APB1_GRP1_EnableClock>

  LL_IOP_GRP1_EnableClock(LL_IOP_GRP1_PERIPH_GPIOA);
 8006c62:	2001      	movs	r0, #1
 8006c64:	f7ff fec4 	bl	80069f0 <LL_IOP_GRP1_EnableClock>
  /**LPUART1 GPIO Configuration
  PA2   ------> LPUART1_TX
  PA3   ------> LPUART1_RX
  */
  GPIO_InitStruct.Pin = LL_GPIO_PIN_2;
 8006c68:	244c      	movs	r4, #76	; 0x4c
 8006c6a:	193b      	adds	r3, r7, r4
 8006c6c:	2204      	movs	r2, #4
 8006c6e:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 8006c70:	193b      	adds	r3, r7, r4
 8006c72:	2202      	movs	r2, #2
 8006c74:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 8006c76:	193b      	adds	r3, r7, r4
 8006c78:	2200      	movs	r2, #0
 8006c7a:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 8006c7c:	193b      	adds	r3, r7, r4
 8006c7e:	2200      	movs	r2, #0
 8006c80:	60da      	str	r2, [r3, #12]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 8006c82:	193b      	adds	r3, r7, r4
 8006c84:	2200      	movs	r2, #0
 8006c86:	611a      	str	r2, [r3, #16]
  GPIO_InitStruct.Alternate = LL_GPIO_AF_6;
 8006c88:	193b      	adds	r3, r7, r4
 8006c8a:	2206      	movs	r2, #6
 8006c8c:	615a      	str	r2, [r3, #20]
  LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8006c8e:	193a      	adds	r2, r7, r4
 8006c90:	23a0      	movs	r3, #160	; 0xa0
 8006c92:	05db      	lsls	r3, r3, #23
 8006c94:	0011      	movs	r1, r2
 8006c96:	0018      	movs	r0, r3
 8006c98:	f003 fc1a 	bl	800a4d0 <LL_GPIO_Init>

  GPIO_InitStruct.Pin = LL_GPIO_PIN_3;
 8006c9c:	0021      	movs	r1, r4
 8006c9e:	187b      	adds	r3, r7, r1
 8006ca0:	2208      	movs	r2, #8
 8006ca2:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 8006ca4:	187b      	adds	r3, r7, r1
 8006ca6:	2202      	movs	r2, #2
 8006ca8:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 8006caa:	187b      	adds	r3, r7, r1
 8006cac:	2200      	movs	r2, #0
 8006cae:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 8006cb0:	187b      	adds	r3, r7, r1
 8006cb2:	2200      	movs	r2, #0
 8006cb4:	60da      	str	r2, [r3, #12]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 8006cb6:	187b      	adds	r3, r7, r1
 8006cb8:	2200      	movs	r2, #0
 8006cba:	611a      	str	r2, [r3, #16]
  GPIO_InitStruct.Alternate = LL_GPIO_AF_6;
 8006cbc:	187b      	adds	r3, r7, r1
 8006cbe:	2206      	movs	r2, #6
 8006cc0:	615a      	str	r2, [r3, #20]
  LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8006cc2:	187a      	adds	r2, r7, r1
 8006cc4:	23a0      	movs	r3, #160	; 0xa0
 8006cc6:	05db      	lsls	r3, r3, #23
 8006cc8:	0011      	movs	r1, r2
 8006cca:	0018      	movs	r0, r3
 8006ccc:	f003 fc00 	bl	800a4d0 <LL_GPIO_Init>

  /* LPUART1 DMA Init */

  /* LPUART1_TX Init */
  LL_DMA_SetPeriphRequest(DMA1, LL_DMA_CHANNEL_3, LL_DMAMUX_REQ_LPUART1_TX);
 8006cd0:	4b3c      	ldr	r3, [pc, #240]	; (8006dc4 <MX_LPUART1_UART_Init+0x1bc>)
 8006cd2:	220f      	movs	r2, #15
 8006cd4:	2102      	movs	r1, #2
 8006cd6:	0018      	movs	r0, r3
 8006cd8:	f7ff fdb8 	bl	800684c <LL_DMA_SetPeriphRequest>

  LL_DMA_SetDataTransferDirection(DMA1, LL_DMA_CHANNEL_3, LL_DMA_DIRECTION_MEMORY_TO_PERIPH);
 8006cdc:	4b39      	ldr	r3, [pc, #228]	; (8006dc4 <MX_LPUART1_UART_Init+0x1bc>)
 8006cde:	2210      	movs	r2, #16
 8006ce0:	2102      	movs	r1, #2
 8006ce2:	0018      	movs	r0, r3
 8006ce4:	f7ff fcae 	bl	8006644 <LL_DMA_SetDataTransferDirection>

  LL_DMA_SetChannelPriorityLevel(DMA1, LL_DMA_CHANNEL_3, LL_DMA_PRIORITY_LOW);
 8006ce8:	4b36      	ldr	r3, [pc, #216]	; (8006dc4 <MX_LPUART1_UART_Init+0x1bc>)
 8006cea:	2200      	movs	r2, #0
 8006cec:	2102      	movs	r1, #2
 8006cee:	0018      	movs	r0, r3
 8006cf0:	f7ff fd86 	bl	8006800 <LL_DMA_SetChannelPriorityLevel>

  LL_DMA_SetMode(DMA1, LL_DMA_CHANNEL_3, LL_DMA_MODE_NORMAL);
 8006cf4:	4b33      	ldr	r3, [pc, #204]	; (8006dc4 <MX_LPUART1_UART_Init+0x1bc>)
 8006cf6:	2200      	movs	r2, #0
 8006cf8:	2102      	movs	r1, #2
 8006cfa:	0018      	movs	r0, r3
 8006cfc:	f7ff fcc8 	bl	8006690 <LL_DMA_SetMode>

  LL_DMA_SetPeriphIncMode(DMA1, LL_DMA_CHANNEL_3, LL_DMA_PERIPH_NOINCREMENT);
 8006d00:	4b30      	ldr	r3, [pc, #192]	; (8006dc4 <MX_LPUART1_UART_Init+0x1bc>)
 8006d02:	2200      	movs	r2, #0
 8006d04:	2102      	movs	r1, #2
 8006d06:	0018      	movs	r0, r3
 8006d08:	f7ff fce6 	bl	80066d8 <LL_DMA_SetPeriphIncMode>

  LL_DMA_SetMemoryIncMode(DMA1, LL_DMA_CHANNEL_3, LL_DMA_MEMORY_INCREMENT);
 8006d0c:	4b2d      	ldr	r3, [pc, #180]	; (8006dc4 <MX_LPUART1_UART_Init+0x1bc>)
 8006d0e:	2280      	movs	r2, #128	; 0x80
 8006d10:	2102      	movs	r1, #2
 8006d12:	0018      	movs	r0, r3
 8006d14:	f7ff fd04 	bl	8006720 <LL_DMA_SetMemoryIncMode>

  LL_DMA_SetPeriphSize(DMA1, LL_DMA_CHANNEL_3, LL_DMA_PDATAALIGN_BYTE);
 8006d18:	4b2a      	ldr	r3, [pc, #168]	; (8006dc4 <MX_LPUART1_UART_Init+0x1bc>)
 8006d1a:	2200      	movs	r2, #0
 8006d1c:	2102      	movs	r1, #2
 8006d1e:	0018      	movs	r0, r3
 8006d20:	f7ff fd22 	bl	8006768 <LL_DMA_SetPeriphSize>

  LL_DMA_SetMemorySize(DMA1, LL_DMA_CHANNEL_3, LL_DMA_MDATAALIGN_BYTE);
 8006d24:	4b27      	ldr	r3, [pc, #156]	; (8006dc4 <MX_LPUART1_UART_Init+0x1bc>)
 8006d26:	2200      	movs	r2, #0
 8006d28:	2102      	movs	r1, #2
 8006d2a:	0018      	movs	r0, r3
 8006d2c:	f7ff fd42 	bl	80067b4 <LL_DMA_SetMemorySize>

  /* LPUART1 interrupt Init */
  NVIC_SetPriority(USART3_4_5_6_LPUART1_IRQn, 3);
 8006d30:	2103      	movs	r1, #3
 8006d32:	201d      	movs	r0, #29
 8006d34:	f7ff fc18 	bl	8006568 <__NVIC_SetPriority>
  NVIC_EnableIRQ(USART3_4_5_6_LPUART1_IRQn);
 8006d38:	201d      	movs	r0, #29
 8006d3a:	f7ff fbfb 	bl	8006534 <__NVIC_EnableIRQ>

  /* USER CODE BEGIN LPUART1_Init 1 */

  /* USER CODE END LPUART1_Init 1 */
  LPUART_InitStruct.PrescalerValue = LL_LPUART_PRESCALER_DIV1;
 8006d3e:	2164      	movs	r1, #100	; 0x64
 8006d40:	187b      	adds	r3, r7, r1
 8006d42:	2200      	movs	r2, #0
 8006d44:	601a      	str	r2, [r3, #0]
  LPUART_InitStruct.BaudRate = 921600;
 8006d46:	187b      	adds	r3, r7, r1
 8006d48:	22e1      	movs	r2, #225	; 0xe1
 8006d4a:	0312      	lsls	r2, r2, #12
 8006d4c:	605a      	str	r2, [r3, #4]
  LPUART_InitStruct.DataWidth = LL_LPUART_DATAWIDTH_7B;
 8006d4e:	187b      	adds	r3, r7, r1
 8006d50:	2280      	movs	r2, #128	; 0x80
 8006d52:	0552      	lsls	r2, r2, #21
 8006d54:	609a      	str	r2, [r3, #8]
  LPUART_InitStruct.StopBits = LL_LPUART_STOPBITS_1;
 8006d56:	187b      	adds	r3, r7, r1
 8006d58:	2200      	movs	r2, #0
 8006d5a:	60da      	str	r2, [r3, #12]
  LPUART_InitStruct.Parity = LL_LPUART_PARITY_NONE;
 8006d5c:	187b      	adds	r3, r7, r1
 8006d5e:	2200      	movs	r2, #0
 8006d60:	611a      	str	r2, [r3, #16]
  LPUART_InitStruct.TransferDirection = LL_LPUART_DIRECTION_TX_RX;
 8006d62:	187b      	adds	r3, r7, r1
 8006d64:	220c      	movs	r2, #12
 8006d66:	615a      	str	r2, [r3, #20]
  LPUART_InitStruct.HardwareFlowControl = LL_LPUART_HWCONTROL_NONE;
 8006d68:	187b      	adds	r3, r7, r1
 8006d6a:	2200      	movs	r2, #0
 8006d6c:	619a      	str	r2, [r3, #24]
  LL_LPUART_Init(LPUART1, &LPUART_InitStruct);
 8006d6e:	187b      	adds	r3, r7, r1
 8006d70:	4a15      	ldr	r2, [pc, #84]	; (8006dc8 <MX_LPUART1_UART_Init+0x1c0>)
 8006d72:	0019      	movs	r1, r3
 8006d74:	0010      	movs	r0, r2
 8006d76:	f003 fc93 	bl	800a6a0 <LL_LPUART_Init>
  LL_LPUART_SetTXFIFOThreshold(LPUART1, LL_LPUART_FIFOTHRESHOLD_1_8);
 8006d7a:	4b13      	ldr	r3, [pc, #76]	; (8006dc8 <MX_LPUART1_UART_Init+0x1c0>)
 8006d7c:	2100      	movs	r1, #0
 8006d7e:	0018      	movs	r0, r3
 8006d80:	f7ff fdae 	bl	80068e0 <LL_LPUART_SetTXFIFOThreshold>
  LL_LPUART_SetRXFIFOThreshold(LPUART1, LL_LPUART_FIFOTHRESHOLD_1_8);
 8006d84:	4b10      	ldr	r3, [pc, #64]	; (8006dc8 <MX_LPUART1_UART_Init+0x1c0>)
 8006d86:	2100      	movs	r1, #0
 8006d88:	0018      	movs	r0, r3
 8006d8a:	f7ff fdcd 	bl	8006928 <LL_LPUART_SetRXFIFOThreshold>
  LL_LPUART_DisableFIFO(LPUART1);
 8006d8e:	4b0e      	ldr	r3, [pc, #56]	; (8006dc8 <MX_LPUART1_UART_Init+0x1c0>)
 8006d90:	0018      	movs	r0, r3
 8006d92:	f7ff fd95 	bl	80068c0 <LL_LPUART_DisableFIFO>

  /* USER CODE BEGIN WKUPType LPUART1 */

  /* USER CODE END WKUPType LPUART1 */

  LL_LPUART_Enable(LPUART1);
 8006d96:	4b0c      	ldr	r3, [pc, #48]	; (8006dc8 <MX_LPUART1_UART_Init+0x1c0>)
 8006d98:	0018      	movs	r0, r3
 8006d9a:	f7ff fd83 	bl	80068a4 <LL_LPUART_Enable>

  /* Polling LPUART1 initialisation */
  while((!(LL_LPUART_IsActiveFlag_TEACK(LPUART1))) || (!(LL_LPUART_IsActiveFlag_REACK(LPUART1))))
 8006d9e:	46c0      	nop			; (mov r8, r8)
 8006da0:	4b09      	ldr	r3, [pc, #36]	; (8006dc8 <MX_LPUART1_UART_Init+0x1c0>)
 8006da2:	0018      	movs	r0, r3
 8006da4:	f7ff fde6 	bl	8006974 <LL_LPUART_IsActiveFlag_TEACK>
 8006da8:	1e03      	subs	r3, r0, #0
 8006daa:	d0f9      	beq.n	8006da0 <MX_LPUART1_UART_Init+0x198>
 8006dac:	4b06      	ldr	r3, [pc, #24]	; (8006dc8 <MX_LPUART1_UART_Init+0x1c0>)
 8006dae:	0018      	movs	r0, r3
 8006db0:	f7ff fdf4 	bl	800699c <LL_LPUART_IsActiveFlag_REACK>
 8006db4:	1e03      	subs	r3, r0, #0
 8006db6:	d0f3      	beq.n	8006da0 <MX_LPUART1_UART_Init+0x198>
  }
  /* USER CODE BEGIN LPUART1_Init 2 */

  /* USER CODE END LPUART1_Init 2 */

}
 8006db8:	46c0      	nop			; (mov r8, r8)
 8006dba:	46c0      	nop			; (mov r8, r8)
 8006dbc:	46bd      	mov	sp, r7
 8006dbe:	b021      	add	sp, #132	; 0x84
 8006dc0:	bd90      	pop	{r4, r7, pc}
 8006dc2:	46c0      	nop			; (mov r8, r8)
 8006dc4:	40020000 	.word	0x40020000
 8006dc8:	40008000 	.word	0x40008000

08006dcc <MX_UCPD1_Init>:
  * @brief UCPD1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_UCPD1_Init(void)
{
 8006dcc:	b580      	push	{r7, lr}
 8006dce:	b086      	sub	sp, #24
 8006dd0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN UCPD1_Init 0 */

  /* USER CODE END UCPD1_Init 0 */

  LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 8006dd2:	003b      	movs	r3, r7
 8006dd4:	0018      	movs	r0, r3
 8006dd6:	2318      	movs	r3, #24
 8006dd8:	001a      	movs	r2, r3
 8006dda:	2100      	movs	r1, #0
 8006ddc:	f011 f9f2 	bl	80181c4 <memset>

  /* Peripheral clock enable */
  LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_UCPD1);
 8006de0:	2380      	movs	r3, #128	; 0x80
 8006de2:	049b      	lsls	r3, r3, #18
 8006de4:	0018      	movs	r0, r3
 8006de6:	f7ff fded 	bl	80069c4 <LL_APB1_GRP1_EnableClock>

  LL_IOP_GRP1_EnableClock(LL_IOP_GRP1_PERIPH_GPIOB);
 8006dea:	2002      	movs	r0, #2
 8006dec:	f7ff fe00 	bl	80069f0 <LL_IOP_GRP1_EnableClock>
  LL_IOP_GRP1_EnableClock(LL_IOP_GRP1_PERIPH_GPIOA);
 8006df0:	2001      	movs	r0, #1
 8006df2:	f7ff fdfd 	bl	80069f0 <LL_IOP_GRP1_EnableClock>
  /**UCPD1 GPIO Configuration
  PB15   ------> UCPD1_CC2
  PA8   ------> UCPD1_CC1
  */
  GPIO_InitStruct.Pin = LL_GPIO_PIN_15;
 8006df6:	003b      	movs	r3, r7
 8006df8:	2280      	movs	r2, #128	; 0x80
 8006dfa:	0212      	lsls	r2, r2, #8
 8006dfc:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 8006dfe:	003b      	movs	r3, r7
 8006e00:	2203      	movs	r2, #3
 8006e02:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 8006e04:	003b      	movs	r3, r7
 8006e06:	2200      	movs	r2, #0
 8006e08:	611a      	str	r2, [r3, #16]
  LL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8006e0a:	003b      	movs	r3, r7
 8006e0c:	4a40      	ldr	r2, [pc, #256]	; (8006f10 <MX_UCPD1_Init+0x144>)
 8006e0e:	0019      	movs	r1, r3
 8006e10:	0010      	movs	r0, r2
 8006e12:	f003 fb5d 	bl	800a4d0 <LL_GPIO_Init>

  GPIO_InitStruct.Pin = LL_GPIO_PIN_8;
 8006e16:	003b      	movs	r3, r7
 8006e18:	2280      	movs	r2, #128	; 0x80
 8006e1a:	0052      	lsls	r2, r2, #1
 8006e1c:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 8006e1e:	003b      	movs	r3, r7
 8006e20:	2203      	movs	r2, #3
 8006e22:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 8006e24:	003b      	movs	r3, r7
 8006e26:	2200      	movs	r2, #0
 8006e28:	611a      	str	r2, [r3, #16]
  LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8006e2a:	003a      	movs	r2, r7
 8006e2c:	23a0      	movs	r3, #160	; 0xa0
 8006e2e:	05db      	lsls	r3, r3, #23
 8006e30:	0011      	movs	r1, r2
 8006e32:	0018      	movs	r0, r3
 8006e34:	f003 fb4c 	bl	800a4d0 <LL_GPIO_Init>

  /* UCPD1 DMA Init */

  /* UCPD1_RX Init */
  LL_DMA_SetPeriphRequest(DMA1, LL_DMA_CHANNEL_1, LL_DMAMUX_REQ_UCPD1_RX);
 8006e38:	4b36      	ldr	r3, [pc, #216]	; (8006f14 <MX_UCPD1_Init+0x148>)
 8006e3a:	223a      	movs	r2, #58	; 0x3a
 8006e3c:	2100      	movs	r1, #0
 8006e3e:	0018      	movs	r0, r3
 8006e40:	f7ff fd04 	bl	800684c <LL_DMA_SetPeriphRequest>

  LL_DMA_SetDataTransferDirection(DMA1, LL_DMA_CHANNEL_1, LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
 8006e44:	4b33      	ldr	r3, [pc, #204]	; (8006f14 <MX_UCPD1_Init+0x148>)
 8006e46:	2200      	movs	r2, #0
 8006e48:	2100      	movs	r1, #0
 8006e4a:	0018      	movs	r0, r3
 8006e4c:	f7ff fbfa 	bl	8006644 <LL_DMA_SetDataTransferDirection>

  LL_DMA_SetChannelPriorityLevel(DMA1, LL_DMA_CHANNEL_1, LL_DMA_PRIORITY_LOW);
 8006e50:	4b30      	ldr	r3, [pc, #192]	; (8006f14 <MX_UCPD1_Init+0x148>)
 8006e52:	2200      	movs	r2, #0
 8006e54:	2100      	movs	r1, #0
 8006e56:	0018      	movs	r0, r3
 8006e58:	f7ff fcd2 	bl	8006800 <LL_DMA_SetChannelPriorityLevel>

  LL_DMA_SetMode(DMA1, LL_DMA_CHANNEL_1, LL_DMA_MODE_NORMAL);
 8006e5c:	4b2d      	ldr	r3, [pc, #180]	; (8006f14 <MX_UCPD1_Init+0x148>)
 8006e5e:	2200      	movs	r2, #0
 8006e60:	2100      	movs	r1, #0
 8006e62:	0018      	movs	r0, r3
 8006e64:	f7ff fc14 	bl	8006690 <LL_DMA_SetMode>

  LL_DMA_SetPeriphIncMode(DMA1, LL_DMA_CHANNEL_1, LL_DMA_PERIPH_NOINCREMENT);
 8006e68:	4b2a      	ldr	r3, [pc, #168]	; (8006f14 <MX_UCPD1_Init+0x148>)
 8006e6a:	2200      	movs	r2, #0
 8006e6c:	2100      	movs	r1, #0
 8006e6e:	0018      	movs	r0, r3
 8006e70:	f7ff fc32 	bl	80066d8 <LL_DMA_SetPeriphIncMode>

  LL_DMA_SetMemoryIncMode(DMA1, LL_DMA_CHANNEL_1, LL_DMA_MEMORY_INCREMENT);
 8006e74:	4b27      	ldr	r3, [pc, #156]	; (8006f14 <MX_UCPD1_Init+0x148>)
 8006e76:	2280      	movs	r2, #128	; 0x80
 8006e78:	2100      	movs	r1, #0
 8006e7a:	0018      	movs	r0, r3
 8006e7c:	f7ff fc50 	bl	8006720 <LL_DMA_SetMemoryIncMode>

  LL_DMA_SetPeriphSize(DMA1, LL_DMA_CHANNEL_1, LL_DMA_PDATAALIGN_BYTE);
 8006e80:	4b24      	ldr	r3, [pc, #144]	; (8006f14 <MX_UCPD1_Init+0x148>)
 8006e82:	2200      	movs	r2, #0
 8006e84:	2100      	movs	r1, #0
 8006e86:	0018      	movs	r0, r3
 8006e88:	f7ff fc6e 	bl	8006768 <LL_DMA_SetPeriphSize>

  LL_DMA_SetMemorySize(DMA1, LL_DMA_CHANNEL_1, LL_DMA_MDATAALIGN_BYTE);
 8006e8c:	4b21      	ldr	r3, [pc, #132]	; (8006f14 <MX_UCPD1_Init+0x148>)
 8006e8e:	2200      	movs	r2, #0
 8006e90:	2100      	movs	r1, #0
 8006e92:	0018      	movs	r0, r3
 8006e94:	f7ff fc8e 	bl	80067b4 <LL_DMA_SetMemorySize>

  /* UCPD1_TX Init */
  LL_DMA_SetPeriphRequest(DMA1, LL_DMA_CHANNEL_2, LL_DMAMUX_REQ_UCPD1_TX);
 8006e98:	4b1e      	ldr	r3, [pc, #120]	; (8006f14 <MX_UCPD1_Init+0x148>)
 8006e9a:	223b      	movs	r2, #59	; 0x3b
 8006e9c:	2101      	movs	r1, #1
 8006e9e:	0018      	movs	r0, r3
 8006ea0:	f7ff fcd4 	bl	800684c <LL_DMA_SetPeriphRequest>

  LL_DMA_SetDataTransferDirection(DMA1, LL_DMA_CHANNEL_2, LL_DMA_DIRECTION_MEMORY_TO_PERIPH);
 8006ea4:	4b1b      	ldr	r3, [pc, #108]	; (8006f14 <MX_UCPD1_Init+0x148>)
 8006ea6:	2210      	movs	r2, #16
 8006ea8:	2101      	movs	r1, #1
 8006eaa:	0018      	movs	r0, r3
 8006eac:	f7ff fbca 	bl	8006644 <LL_DMA_SetDataTransferDirection>

  LL_DMA_SetChannelPriorityLevel(DMA1, LL_DMA_CHANNEL_2, LL_DMA_PRIORITY_LOW);
 8006eb0:	4b18      	ldr	r3, [pc, #96]	; (8006f14 <MX_UCPD1_Init+0x148>)
 8006eb2:	2200      	movs	r2, #0
 8006eb4:	2101      	movs	r1, #1
 8006eb6:	0018      	movs	r0, r3
 8006eb8:	f7ff fca2 	bl	8006800 <LL_DMA_SetChannelPriorityLevel>

  LL_DMA_SetMode(DMA1, LL_DMA_CHANNEL_2, LL_DMA_MODE_NORMAL);
 8006ebc:	4b15      	ldr	r3, [pc, #84]	; (8006f14 <MX_UCPD1_Init+0x148>)
 8006ebe:	2200      	movs	r2, #0
 8006ec0:	2101      	movs	r1, #1
 8006ec2:	0018      	movs	r0, r3
 8006ec4:	f7ff fbe4 	bl	8006690 <LL_DMA_SetMode>

  LL_DMA_SetPeriphIncMode(DMA1, LL_DMA_CHANNEL_2, LL_DMA_PERIPH_NOINCREMENT);
 8006ec8:	4b12      	ldr	r3, [pc, #72]	; (8006f14 <MX_UCPD1_Init+0x148>)
 8006eca:	2200      	movs	r2, #0
 8006ecc:	2101      	movs	r1, #1
 8006ece:	0018      	movs	r0, r3
 8006ed0:	f7ff fc02 	bl	80066d8 <LL_DMA_SetPeriphIncMode>

  LL_DMA_SetMemoryIncMode(DMA1, LL_DMA_CHANNEL_2, LL_DMA_MEMORY_INCREMENT);
 8006ed4:	4b0f      	ldr	r3, [pc, #60]	; (8006f14 <MX_UCPD1_Init+0x148>)
 8006ed6:	2280      	movs	r2, #128	; 0x80
 8006ed8:	2101      	movs	r1, #1
 8006eda:	0018      	movs	r0, r3
 8006edc:	f7ff fc20 	bl	8006720 <LL_DMA_SetMemoryIncMode>

  LL_DMA_SetPeriphSize(DMA1, LL_DMA_CHANNEL_2, LL_DMA_PDATAALIGN_BYTE);
 8006ee0:	4b0c      	ldr	r3, [pc, #48]	; (8006f14 <MX_UCPD1_Init+0x148>)
 8006ee2:	2200      	movs	r2, #0
 8006ee4:	2101      	movs	r1, #1
 8006ee6:	0018      	movs	r0, r3
 8006ee8:	f7ff fc3e 	bl	8006768 <LL_DMA_SetPeriphSize>

  LL_DMA_SetMemorySize(DMA1, LL_DMA_CHANNEL_2, LL_DMA_MDATAALIGN_BYTE);
 8006eec:	4b09      	ldr	r3, [pc, #36]	; (8006f14 <MX_UCPD1_Init+0x148>)
 8006eee:	2200      	movs	r2, #0
 8006ef0:	2101      	movs	r1, #1
 8006ef2:	0018      	movs	r0, r3
 8006ef4:	f7ff fc5e 	bl	80067b4 <LL_DMA_SetMemorySize>

  /* UCPD1 interrupt Init */
  NVIC_SetPriority(USB_UCPD1_2_IRQn, 3);
 8006ef8:	2103      	movs	r1, #3
 8006efa:	2008      	movs	r0, #8
 8006efc:	f7ff fb34 	bl	8006568 <__NVIC_SetPriority>
  NVIC_EnableIRQ(USB_UCPD1_2_IRQn);
 8006f00:	2008      	movs	r0, #8
 8006f02:	f7ff fb17 	bl	8006534 <__NVIC_EnableIRQ>
  /* USER CODE END UCPD1_Init 1 */
  /* USER CODE BEGIN UCPD1_Init 2 */

  /* USER CODE END UCPD1_Init 2 */

}
 8006f06:	46c0      	nop			; (mov r8, r8)
 8006f08:	46bd      	mov	sp, r7
 8006f0a:	b006      	add	sp, #24
 8006f0c:	bd80      	pop	{r7, pc}
 8006f0e:	46c0      	nop			; (mov r8, r8)
 8006f10:	50000400 	.word	0x50000400
 8006f14:	40020000 	.word	0x40020000

08006f18 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8006f18:	b580      	push	{r7, lr}
 8006f1a:	b082      	sub	sp, #8
 8006f1c:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 8006f1e:	4b0f      	ldr	r3, [pc, #60]	; (8006f5c <MX_DMA_Init+0x44>)
 8006f20:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8006f22:	4b0e      	ldr	r3, [pc, #56]	; (8006f5c <MX_DMA_Init+0x44>)
 8006f24:	2101      	movs	r1, #1
 8006f26:	430a      	orrs	r2, r1
 8006f28:	639a      	str	r2, [r3, #56]	; 0x38
 8006f2a:	4b0c      	ldr	r3, [pc, #48]	; (8006f5c <MX_DMA_Init+0x44>)
 8006f2c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006f2e:	2201      	movs	r2, #1
 8006f30:	4013      	ands	r3, r2
 8006f32:	607b      	str	r3, [r7, #4]
 8006f34:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Channel1_IRQn interrupt configuration */
  NVIC_SetPriority(DMA1_Channel1_IRQn, 3);
 8006f36:	2103      	movs	r1, #3
 8006f38:	2009      	movs	r0, #9
 8006f3a:	f7ff fb15 	bl	8006568 <__NVIC_SetPriority>
  NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 8006f3e:	2009      	movs	r0, #9
 8006f40:	f7ff faf8 	bl	8006534 <__NVIC_EnableIRQ>
  /* DMA1_Channel2_3_IRQn interrupt configuration */
  NVIC_SetPriority(DMA1_Channel2_3_IRQn, 3);
 8006f44:	2103      	movs	r1, #3
 8006f46:	200a      	movs	r0, #10
 8006f48:	f7ff fb0e 	bl	8006568 <__NVIC_SetPriority>
  NVIC_EnableIRQ(DMA1_Channel2_3_IRQn);
 8006f4c:	200a      	movs	r0, #10
 8006f4e:	f7ff faf1 	bl	8006534 <__NVIC_EnableIRQ>

}
 8006f52:	46c0      	nop			; (mov r8, r8)
 8006f54:	46bd      	mov	sp, r7
 8006f56:	b002      	add	sp, #8
 8006f58:	bd80      	pop	{r7, pc}
 8006f5a:	46c0      	nop			; (mov r8, r8)
 8006f5c:	40021000 	.word	0x40021000

08006f60 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8006f60:	b590      	push	{r4, r7, lr}
 8006f62:	b089      	sub	sp, #36	; 0x24
 8006f64:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8006f66:	240c      	movs	r4, #12
 8006f68:	193b      	adds	r3, r7, r4
 8006f6a:	0018      	movs	r0, r3
 8006f6c:	2314      	movs	r3, #20
 8006f6e:	001a      	movs	r2, r3
 8006f70:	2100      	movs	r1, #0
 8006f72:	f011 f927 	bl	80181c4 <memset>
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8006f76:	4b3a      	ldr	r3, [pc, #232]	; (8007060 <MX_GPIO_Init+0x100>)
 8006f78:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006f7a:	4b39      	ldr	r3, [pc, #228]	; (8007060 <MX_GPIO_Init+0x100>)
 8006f7c:	2104      	movs	r1, #4
 8006f7e:	430a      	orrs	r2, r1
 8006f80:	635a      	str	r2, [r3, #52]	; 0x34
 8006f82:	4b37      	ldr	r3, [pc, #220]	; (8007060 <MX_GPIO_Init+0x100>)
 8006f84:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006f86:	2204      	movs	r2, #4
 8006f88:	4013      	ands	r3, r2
 8006f8a:	60bb      	str	r3, [r7, #8]
 8006f8c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8006f8e:	4b34      	ldr	r3, [pc, #208]	; (8007060 <MX_GPIO_Init+0x100>)
 8006f90:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006f92:	4b33      	ldr	r3, [pc, #204]	; (8007060 <MX_GPIO_Init+0x100>)
 8006f94:	2101      	movs	r1, #1
 8006f96:	430a      	orrs	r2, r1
 8006f98:	635a      	str	r2, [r3, #52]	; 0x34
 8006f9a:	4b31      	ldr	r3, [pc, #196]	; (8007060 <MX_GPIO_Init+0x100>)
 8006f9c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006f9e:	2201      	movs	r2, #1
 8006fa0:	4013      	ands	r3, r2
 8006fa2:	607b      	str	r3, [r7, #4]
 8006fa4:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8006fa6:	4b2e      	ldr	r3, [pc, #184]	; (8007060 <MX_GPIO_Init+0x100>)
 8006fa8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006faa:	4b2d      	ldr	r3, [pc, #180]	; (8007060 <MX_GPIO_Init+0x100>)
 8006fac:	2102      	movs	r1, #2
 8006fae:	430a      	orrs	r2, r1
 8006fb0:	635a      	str	r2, [r3, #52]	; 0x34
 8006fb2:	4b2b      	ldr	r3, [pc, #172]	; (8007060 <MX_GPIO_Init+0x100>)
 8006fb4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006fb6:	2202      	movs	r2, #2
 8006fb8:	4013      	ands	r3, r2
 8006fba:	603b      	str	r3, [r7, #0]
 8006fbc:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(DB_OUT_GPIO_Port, DB_OUT_Pin, GPIO_PIN_SET);
 8006fbe:	4b29      	ldr	r3, [pc, #164]	; (8007064 <MX_GPIO_Init+0x104>)
 8006fc0:	2201      	movs	r2, #1
 8006fc2:	2140      	movs	r1, #64	; 0x40
 8006fc4:	0018      	movs	r0, r3
 8006fc6:	f001 fe15 	bl	8008bf4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(VCC_OUT_GPIO_Port, VCC_OUT_Pin, GPIO_PIN_SET);
 8006fca:	2380      	movs	r3, #128	; 0x80
 8006fcc:	00db      	lsls	r3, r3, #3
 8006fce:	4826      	ldr	r0, [pc, #152]	; (8007068 <MX_GPIO_Init+0x108>)
 8006fd0:	2201      	movs	r2, #1
 8006fd2:	0019      	movs	r1, r3
 8006fd4:	f001 fe0e 	bl	8008bf4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : USER_BUTTON_Pin */
  GPIO_InitStruct.Pin = USER_BUTTON_Pin;
 8006fd8:	193b      	adds	r3, r7, r4
 8006fda:	2280      	movs	r2, #128	; 0x80
 8006fdc:	0192      	lsls	r2, r2, #6
 8006fde:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8006fe0:	193b      	adds	r3, r7, r4
 8006fe2:	2284      	movs	r2, #132	; 0x84
 8006fe4:	0392      	lsls	r2, r2, #14
 8006fe6:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006fe8:	193b      	adds	r3, r7, r4
 8006fea:	2200      	movs	r2, #0
 8006fec:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(USER_BUTTON_GPIO_Port, &GPIO_InitStruct);
 8006fee:	193b      	adds	r3, r7, r4
 8006ff0:	4a1d      	ldr	r2, [pc, #116]	; (8007068 <MX_GPIO_Init+0x108>)
 8006ff2:	0019      	movs	r1, r3
 8006ff4:	0010      	movs	r0, r2
 8006ff6:	f001 fc91 	bl	800891c <HAL_GPIO_Init>

  /*Configure GPIO pin : DB_OUT_Pin */
  GPIO_InitStruct.Pin = DB_OUT_Pin;
 8006ffa:	193b      	adds	r3, r7, r4
 8006ffc:	2240      	movs	r2, #64	; 0x40
 8006ffe:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8007000:	193b      	adds	r3, r7, r4
 8007002:	2201      	movs	r2, #1
 8007004:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8007006:	193b      	adds	r3, r7, r4
 8007008:	2200      	movs	r2, #0
 800700a:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800700c:	193b      	adds	r3, r7, r4
 800700e:	2200      	movs	r2, #0
 8007010:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(DB_OUT_GPIO_Port, &GPIO_InitStruct);
 8007012:	193b      	adds	r3, r7, r4
 8007014:	4a13      	ldr	r2, [pc, #76]	; (8007064 <MX_GPIO_Init+0x104>)
 8007016:	0019      	movs	r1, r3
 8007018:	0010      	movs	r0, r2
 800701a:	f001 fc7f 	bl	800891c <HAL_GPIO_Init>

  /*Configure GPIO pin : VCC_OUT_Pin */
  GPIO_InitStruct.Pin = VCC_OUT_Pin;
 800701e:	0021      	movs	r1, r4
 8007020:	187b      	adds	r3, r7, r1
 8007022:	2280      	movs	r2, #128	; 0x80
 8007024:	00d2      	lsls	r2, r2, #3
 8007026:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8007028:	187b      	adds	r3, r7, r1
 800702a:	2201      	movs	r2, #1
 800702c:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800702e:	187b      	adds	r3, r7, r1
 8007030:	2200      	movs	r2, #0
 8007032:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8007034:	187b      	adds	r3, r7, r1
 8007036:	2200      	movs	r2, #0
 8007038:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(VCC_OUT_GPIO_Port, &GPIO_InitStruct);
 800703a:	187b      	adds	r3, r7, r1
 800703c:	4a0a      	ldr	r2, [pc, #40]	; (8007068 <MX_GPIO_Init+0x108>)
 800703e:	0019      	movs	r1, r3
 8007040:	0010      	movs	r0, r2
 8007042:	f001 fc6b 	bl	800891c <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI4_15_IRQn, 3, 0);
 8007046:	2200      	movs	r2, #0
 8007048:	2103      	movs	r1, #3
 800704a:	2007      	movs	r0, #7
 800704c:	f001 fa8a 	bl	8008564 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI4_15_IRQn);
 8007050:	2007      	movs	r0, #7
 8007052:	f001 fa9c 	bl	800858e <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8007056:	46c0      	nop			; (mov r8, r8)
 8007058:	46bd      	mov	sp, r7
 800705a:	b009      	add	sp, #36	; 0x24
 800705c:	bd90      	pop	{r4, r7, pc}
 800705e:	46c0      	nop			; (mov r8, r8)
 8007060:	40021000 	.word	0x40021000
 8007064:	50000400 	.word	0x50000400
 8007068:	50000800 	.word	0x50000800

0800706c <HAL_GPIO_EXTI_Falling_Callback>:
* @brief EXTI line detection callbacks
* @param GPIO_Pin Specifies the pins connected EXTI line
* @retval None
*/
void HAL_GPIO_EXTI_Falling_Callback(uint16_t GPIO_Pin)
{
 800706c:	b590      	push	{r4, r7, lr}
 800706e:	b089      	sub	sp, #36	; 0x24
 8007070:	af02      	add	r7, sp, #8
 8007072:	0002      	movs	r2, r0
 8007074:	1dbb      	adds	r3, r7, #6
 8007076:	801a      	strh	r2, [r3, #0]
	if (GPIO_Pin == USER_BUTTON_Pin) /* Will display in trace the VBUS value when user button
 8007078:	1dbb      	adds	r3, r7, #6
 800707a:	881a      	ldrh	r2, [r3, #0]
 800707c:	2380      	movs	r3, #128	; 0x80
 800707e:	019b      	lsls	r3, r3, #6
 8007080:	429a      	cmp	r2, r3
 8007082:	d118      	bne.n	80070b6 <HAL_GPIO_EXTI_Falling_Callback+0x4a>
is pressed */
	{
		char _str[10];
		BSP_PWR_VBUSGetVoltage(0);
 8007084:	2000      	movs	r0, #0
 8007086:	f00b fe03 	bl	8012c90 <BSP_PWR_VBUSGetVoltage>
		sprintf(_str,"VBUS:%lu", BSP_PWR_VBUSGetVoltage(0));
 800708a:	2000      	movs	r0, #0
 800708c:	f00b fe00 	bl	8012c90 <BSP_PWR_VBUSGetVoltage>
 8007090:	0002      	movs	r2, r0
 8007092:	490b      	ldr	r1, [pc, #44]	; (80070c0 <HAL_GPIO_EXTI_Falling_Callback+0x54>)
 8007094:	240c      	movs	r4, #12
 8007096:	193b      	adds	r3, r7, r4
 8007098:	0018      	movs	r0, r3
 800709a:	f011 f873 	bl	8018184 <siprintf>
		USBPD_TRACE_Add(USBPD_TRACE_DEBUG, 0, 0, (uint8_t*)_str, strlen(_str));
 800709e:	193b      	adds	r3, r7, r4
 80070a0:	0018      	movs	r0, r3
 80070a2:	f7ff f893 	bl	80061cc <strlen>
 80070a6:	0002      	movs	r2, r0
 80070a8:	193b      	adds	r3, r7, r4
 80070aa:	9200      	str	r2, [sp, #0]
 80070ac:	2200      	movs	r2, #0
 80070ae:	2100      	movs	r1, #0
 80070b0:	2006      	movs	r0, #6
 80070b2:	f003 fd9f 	bl	800abf4 <USBPD_TRACE_Add>
	}
}
 80070b6:	46c0      	nop			; (mov r8, r8)
 80070b8:	46bd      	mov	sp, r7
 80070ba:	b007      	add	sp, #28
 80070bc:	bd90      	pop	{r4, r7, pc}
 80070be:	46c0      	nop			; (mov r8, r8)
 80070c0:	08018a7c 	.word	0x08018a7c

080070c4 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 80070c4:	b580      	push	{r7, lr}
 80070c6:	b082      	sub	sp, #8
 80070c8:	af00      	add	r7, sp, #0
 80070ca:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(1);
 80070cc:	2001      	movs	r0, #1
 80070ce:	f006 ff0f 	bl	800def0 <osDelay>
 80070d2:	e7fb      	b.n	80070cc <StartDefaultTask+0x8>

080070d4 <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 80070d4:	b580      	push	{r7, lr}
 80070d6:	b082      	sub	sp, #8
 80070d8:	af00      	add	r7, sp, #0
 80070da:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM2) {
 80070dc:	687b      	ldr	r3, [r7, #4]
 80070de:	681a      	ldr	r2, [r3, #0]
 80070e0:	2380      	movs	r3, #128	; 0x80
 80070e2:	05db      	lsls	r3, r3, #23
 80070e4:	429a      	cmp	r2, r3
 80070e6:	d101      	bne.n	80070ec <HAL_TIM_PeriodElapsedCallback+0x18>
    HAL_IncTick();
 80070e8:	f000 f9c0 	bl	800746c <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80070ec:	46c0      	nop			; (mov r8, r8)
 80070ee:	46bd      	mov	sp, r7
 80070f0:	b002      	add	sp, #8
 80070f2:	bd80      	pop	{r7, pc}

080070f4 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80070f4:	b580      	push	{r7, lr}
 80070f6:	af00      	add	r7, sp, #0
  __ASM volatile ("cpsid i" : : : "memory");
 80070f8:	b672      	cpsid	i
}
 80070fa:	46c0      	nop			; (mov r8, r8)
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80070fc:	e7fe      	b.n	80070fc <Error_Handler+0x8>
	...

08007100 <HAL_MspInit>:
 8007100:	b580      	push	{r7, lr}
 8007102:	b082      	sub	sp, #8
 8007104:	af00      	add	r7, sp, #0
 8007106:	4b15      	ldr	r3, [pc, #84]	; (800715c <HAL_MspInit+0x5c>)
 8007108:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800710a:	4b14      	ldr	r3, [pc, #80]	; (800715c <HAL_MspInit+0x5c>)
 800710c:	2101      	movs	r1, #1
 800710e:	430a      	orrs	r2, r1
 8007110:	641a      	str	r2, [r3, #64]	; 0x40
 8007112:	4b12      	ldr	r3, [pc, #72]	; (800715c <HAL_MspInit+0x5c>)
 8007114:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007116:	2201      	movs	r2, #1
 8007118:	4013      	ands	r3, r2
 800711a:	607b      	str	r3, [r7, #4]
 800711c:	687b      	ldr	r3, [r7, #4]
 800711e:	4b0f      	ldr	r3, [pc, #60]	; (800715c <HAL_MspInit+0x5c>)
 8007120:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8007122:	4b0e      	ldr	r3, [pc, #56]	; (800715c <HAL_MspInit+0x5c>)
 8007124:	2180      	movs	r1, #128	; 0x80
 8007126:	0549      	lsls	r1, r1, #21
 8007128:	430a      	orrs	r2, r1
 800712a:	63da      	str	r2, [r3, #60]	; 0x3c
 800712c:	4b0b      	ldr	r3, [pc, #44]	; (800715c <HAL_MspInit+0x5c>)
 800712e:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8007130:	2380      	movs	r3, #128	; 0x80
 8007132:	055b      	lsls	r3, r3, #21
 8007134:	4013      	ands	r3, r2
 8007136:	603b      	str	r3, [r7, #0]
 8007138:	683b      	ldr	r3, [r7, #0]
 800713a:	2302      	movs	r3, #2
 800713c:	425b      	negs	r3, r3
 800713e:	2200      	movs	r2, #0
 8007140:	2103      	movs	r1, #3
 8007142:	0018      	movs	r0, r3
 8007144:	f001 fa0e 	bl	8008564 <HAL_NVIC_SetPriority>
 8007148:	23c0      	movs	r3, #192	; 0xc0
 800714a:	00db      	lsls	r3, r3, #3
 800714c:	0018      	movs	r0, r3
 800714e:	f000 f9cd 	bl	80074ec <HAL_SYSCFG_StrobeDBattpinsConfig>
 8007152:	46c0      	nop			; (mov r8, r8)
 8007154:	46bd      	mov	sp, r7
 8007156:	b002      	add	sp, #8
 8007158:	bd80      	pop	{r7, pc}
 800715a:	46c0      	nop			; (mov r8, r8)
 800715c:	40021000 	.word	0x40021000

08007160 <HAL_ADC_MspInit>:
 8007160:	b590      	push	{r4, r7, lr}
 8007162:	b08b      	sub	sp, #44	; 0x2c
 8007164:	af00      	add	r7, sp, #0
 8007166:	6078      	str	r0, [r7, #4]
 8007168:	2414      	movs	r4, #20
 800716a:	193b      	adds	r3, r7, r4
 800716c:	0018      	movs	r0, r3
 800716e:	2314      	movs	r3, #20
 8007170:	001a      	movs	r2, r3
 8007172:	2100      	movs	r1, #0
 8007174:	f011 f826 	bl	80181c4 <memset>
 8007178:	687b      	ldr	r3, [r7, #4]
 800717a:	681b      	ldr	r3, [r3, #0]
 800717c:	4a17      	ldr	r2, [pc, #92]	; (80071dc <HAL_ADC_MspInit+0x7c>)
 800717e:	4293      	cmp	r3, r2
 8007180:	d128      	bne.n	80071d4 <HAL_ADC_MspInit+0x74>
 8007182:	4b17      	ldr	r3, [pc, #92]	; (80071e0 <HAL_ADC_MspInit+0x80>)
 8007184:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007186:	4b16      	ldr	r3, [pc, #88]	; (80071e0 <HAL_ADC_MspInit+0x80>)
 8007188:	2180      	movs	r1, #128	; 0x80
 800718a:	0349      	lsls	r1, r1, #13
 800718c:	430a      	orrs	r2, r1
 800718e:	641a      	str	r2, [r3, #64]	; 0x40
 8007190:	4b13      	ldr	r3, [pc, #76]	; (80071e0 <HAL_ADC_MspInit+0x80>)
 8007192:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007194:	2380      	movs	r3, #128	; 0x80
 8007196:	035b      	lsls	r3, r3, #13
 8007198:	4013      	ands	r3, r2
 800719a:	613b      	str	r3, [r7, #16]
 800719c:	693b      	ldr	r3, [r7, #16]
 800719e:	4b10      	ldr	r3, [pc, #64]	; (80071e0 <HAL_ADC_MspInit+0x80>)
 80071a0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80071a2:	4b0f      	ldr	r3, [pc, #60]	; (80071e0 <HAL_ADC_MspInit+0x80>)
 80071a4:	2102      	movs	r1, #2
 80071a6:	430a      	orrs	r2, r1
 80071a8:	635a      	str	r2, [r3, #52]	; 0x34
 80071aa:	4b0d      	ldr	r3, [pc, #52]	; (80071e0 <HAL_ADC_MspInit+0x80>)
 80071ac:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80071ae:	2202      	movs	r2, #2
 80071b0:	4013      	ands	r3, r2
 80071b2:	60fb      	str	r3, [r7, #12]
 80071b4:	68fb      	ldr	r3, [r7, #12]
 80071b6:	193b      	adds	r3, r7, r4
 80071b8:	2202      	movs	r2, #2
 80071ba:	601a      	str	r2, [r3, #0]
 80071bc:	193b      	adds	r3, r7, r4
 80071be:	2203      	movs	r2, #3
 80071c0:	605a      	str	r2, [r3, #4]
 80071c2:	193b      	adds	r3, r7, r4
 80071c4:	2200      	movs	r2, #0
 80071c6:	609a      	str	r2, [r3, #8]
 80071c8:	193b      	adds	r3, r7, r4
 80071ca:	4a06      	ldr	r2, [pc, #24]	; (80071e4 <HAL_ADC_MspInit+0x84>)
 80071cc:	0019      	movs	r1, r3
 80071ce:	0010      	movs	r0, r2
 80071d0:	f001 fba4 	bl	800891c <HAL_GPIO_Init>
 80071d4:	46c0      	nop			; (mov r8, r8)
 80071d6:	46bd      	mov	sp, r7
 80071d8:	b00b      	add	sp, #44	; 0x2c
 80071da:	bd90      	pop	{r4, r7, pc}
 80071dc:	40012400 	.word	0x40012400
 80071e0:	40021000 	.word	0x40021000
 80071e4:	50000400 	.word	0x50000400

080071e8 <HAL_InitTick>:
 80071e8:	b5b0      	push	{r4, r5, r7, lr}
 80071ea:	b08c      	sub	sp, #48	; 0x30
 80071ec:	af00      	add	r7, sp, #0
 80071ee:	6078      	str	r0, [r7, #4]
 80071f0:	232b      	movs	r3, #43	; 0x2b
 80071f2:	18fb      	adds	r3, r7, r3
 80071f4:	2200      	movs	r2, #0
 80071f6:	701a      	strb	r2, [r3, #0]
 80071f8:	4b38      	ldr	r3, [pc, #224]	; (80072dc <HAL_InitTick+0xf4>)
 80071fa:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80071fc:	4b37      	ldr	r3, [pc, #220]	; (80072dc <HAL_InitTick+0xf4>)
 80071fe:	2101      	movs	r1, #1
 8007200:	430a      	orrs	r2, r1
 8007202:	63da      	str	r2, [r3, #60]	; 0x3c
 8007204:	4b35      	ldr	r3, [pc, #212]	; (80072dc <HAL_InitTick+0xf4>)
 8007206:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007208:	2201      	movs	r2, #1
 800720a:	4013      	ands	r3, r2
 800720c:	60bb      	str	r3, [r7, #8]
 800720e:	68bb      	ldr	r3, [r7, #8]
 8007210:	230c      	movs	r3, #12
 8007212:	18fa      	adds	r2, r7, r3
 8007214:	2410      	movs	r4, #16
 8007216:	193b      	adds	r3, r7, r4
 8007218:	0011      	movs	r1, r2
 800721a:	0018      	movs	r0, r3
 800721c:	f002 fa92 	bl	8009744 <HAL_RCC_GetClockConfig>
 8007220:	193b      	adds	r3, r7, r4
 8007222:	68db      	ldr	r3, [r3, #12]
 8007224:	627b      	str	r3, [r7, #36]	; 0x24
 8007226:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007228:	2b00      	cmp	r3, #0
 800722a:	d104      	bne.n	8007236 <HAL_InitTick+0x4e>
 800722c:	f002 fa74 	bl	8009718 <HAL_RCC_GetPCLK1Freq>
 8007230:	0003      	movs	r3, r0
 8007232:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007234:	e004      	b.n	8007240 <HAL_InitTick+0x58>
 8007236:	f002 fa6f 	bl	8009718 <HAL_RCC_GetPCLK1Freq>
 800723a:	0003      	movs	r3, r0
 800723c:	005b      	lsls	r3, r3, #1
 800723e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007240:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007242:	4927      	ldr	r1, [pc, #156]	; (80072e0 <HAL_InitTick+0xf8>)
 8007244:	0018      	movs	r0, r3
 8007246:	f7fe ffd3 	bl	80061f0 <__udivsi3>
 800724a:	0003      	movs	r3, r0
 800724c:	3b01      	subs	r3, #1
 800724e:	623b      	str	r3, [r7, #32]
 8007250:	4b24      	ldr	r3, [pc, #144]	; (80072e4 <HAL_InitTick+0xfc>)
 8007252:	2280      	movs	r2, #128	; 0x80
 8007254:	05d2      	lsls	r2, r2, #23
 8007256:	601a      	str	r2, [r3, #0]
 8007258:	4b22      	ldr	r3, [pc, #136]	; (80072e4 <HAL_InitTick+0xfc>)
 800725a:	4a23      	ldr	r2, [pc, #140]	; (80072e8 <HAL_InitTick+0x100>)
 800725c:	60da      	str	r2, [r3, #12]
 800725e:	4b21      	ldr	r3, [pc, #132]	; (80072e4 <HAL_InitTick+0xfc>)
 8007260:	6a3a      	ldr	r2, [r7, #32]
 8007262:	605a      	str	r2, [r3, #4]
 8007264:	4b1f      	ldr	r3, [pc, #124]	; (80072e4 <HAL_InitTick+0xfc>)
 8007266:	2200      	movs	r2, #0
 8007268:	611a      	str	r2, [r3, #16]
 800726a:	4b1e      	ldr	r3, [pc, #120]	; (80072e4 <HAL_InitTick+0xfc>)
 800726c:	2200      	movs	r2, #0
 800726e:	609a      	str	r2, [r3, #8]
 8007270:	4b1c      	ldr	r3, [pc, #112]	; (80072e4 <HAL_InitTick+0xfc>)
 8007272:	2200      	movs	r2, #0
 8007274:	619a      	str	r2, [r3, #24]
 8007276:	252b      	movs	r5, #43	; 0x2b
 8007278:	197c      	adds	r4, r7, r5
 800727a:	4b1a      	ldr	r3, [pc, #104]	; (80072e4 <HAL_InitTick+0xfc>)
 800727c:	0018      	movs	r0, r3
 800727e:	f002 fcc7 	bl	8009c10 <HAL_TIM_Base_Init>
 8007282:	0003      	movs	r3, r0
 8007284:	7023      	strb	r3, [r4, #0]
 8007286:	197b      	adds	r3, r7, r5
 8007288:	781b      	ldrb	r3, [r3, #0]
 800728a:	2b00      	cmp	r3, #0
 800728c:	d11e      	bne.n	80072cc <HAL_InitTick+0xe4>
 800728e:	197c      	adds	r4, r7, r5
 8007290:	4b14      	ldr	r3, [pc, #80]	; (80072e4 <HAL_InitTick+0xfc>)
 8007292:	0018      	movs	r0, r3
 8007294:	f002 fd1c 	bl	8009cd0 <HAL_TIM_Base_Start_IT>
 8007298:	0003      	movs	r3, r0
 800729a:	7023      	strb	r3, [r4, #0]
 800729c:	197b      	adds	r3, r7, r5
 800729e:	781b      	ldrb	r3, [r3, #0]
 80072a0:	2b00      	cmp	r3, #0
 80072a2:	d113      	bne.n	80072cc <HAL_InitTick+0xe4>
 80072a4:	200f      	movs	r0, #15
 80072a6:	f001 f972 	bl	800858e <HAL_NVIC_EnableIRQ>
 80072aa:	687b      	ldr	r3, [r7, #4]
 80072ac:	2b03      	cmp	r3, #3
 80072ae:	d809      	bhi.n	80072c4 <HAL_InitTick+0xdc>
 80072b0:	687b      	ldr	r3, [r7, #4]
 80072b2:	2200      	movs	r2, #0
 80072b4:	0019      	movs	r1, r3
 80072b6:	200f      	movs	r0, #15
 80072b8:	f001 f954 	bl	8008564 <HAL_NVIC_SetPriority>
 80072bc:	4b0b      	ldr	r3, [pc, #44]	; (80072ec <HAL_InitTick+0x104>)
 80072be:	687a      	ldr	r2, [r7, #4]
 80072c0:	601a      	str	r2, [r3, #0]
 80072c2:	e003      	b.n	80072cc <HAL_InitTick+0xe4>
 80072c4:	232b      	movs	r3, #43	; 0x2b
 80072c6:	18fb      	adds	r3, r7, r3
 80072c8:	2201      	movs	r2, #1
 80072ca:	701a      	strb	r2, [r3, #0]
 80072cc:	232b      	movs	r3, #43	; 0x2b
 80072ce:	18fb      	adds	r3, r7, r3
 80072d0:	781b      	ldrb	r3, [r3, #0]
 80072d2:	0018      	movs	r0, r3
 80072d4:	46bd      	mov	sp, r7
 80072d6:	b00c      	add	sp, #48	; 0x30
 80072d8:	bdb0      	pop	{r4, r5, r7, pc}
 80072da:	46c0      	nop			; (mov r8, r8)
 80072dc:	40021000 	.word	0x40021000
 80072e0:	000f4240 	.word	0x000f4240
 80072e4:	2000023c 	.word	0x2000023c
 80072e8:	000003e7 	.word	0x000003e7
 80072ec:	20000008 	.word	0x20000008

080072f0 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80072f0:	b580      	push	{r7, lr}
 80072f2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 80072f4:	e7fe      	b.n	80072f4 <NMI_Handler+0x4>

080072f6 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80072f6:	b580      	push	{r7, lr}
 80072f8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80072fa:	e7fe      	b.n	80072fa <HardFault_Handler+0x4>

080072fc <EXTI4_15_IRQHandler>:

/**
  * @brief This function handles EXTI line 4 to 15 interrupts.
  */
void EXTI4_15_IRQHandler(void)
{
 80072fc:	b580      	push	{r7, lr}
 80072fe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI4_15_IRQn 0 */

  /* USER CODE END EXTI4_15_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(USER_BUTTON_Pin);
 8007300:	2380      	movs	r3, #128	; 0x80
 8007302:	019b      	lsls	r3, r3, #6
 8007304:	0018      	movs	r0, r3
 8007306:	f001 fc93 	bl	8008c30 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI4_15_IRQn 1 */

  /* USER CODE END EXTI4_15_IRQn 1 */
}
 800730a:	46c0      	nop			; (mov r8, r8)
 800730c:	46bd      	mov	sp, r7
 800730e:	bd80      	pop	{r7, pc}

08007310 <USB_UCPD1_2_IRQHandler>:

/**
  * @brief This function handles USB, UCPD1 and UCPD2 global interrupts.
  */
void USB_UCPD1_2_IRQHandler(void)
{
 8007310:	b580      	push	{r7, lr}
 8007312:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USB_UCPD1_2_IRQn 0 */

  /* USER CODE END USB_UCPD1_2_IRQn 0 */
  USBPD_PORT0_IRQHandler();
 8007314:	f004 fcb2 	bl	800bc7c <USBPD_PORT0_IRQHandler>

  /* USER CODE BEGIN USB_UCPD1_2_IRQn 1 */

  /* USER CODE END USB_UCPD1_2_IRQn 1 */
}
 8007318:	46c0      	nop			; (mov r8, r8)
 800731a:	46bd      	mov	sp, r7
 800731c:	bd80      	pop	{r7, pc}

0800731e <DMA1_Channel1_IRQHandler>:

/**
  * @brief This function handles DMA1 channel 1 interrupt.
  */
void DMA1_Channel1_IRQHandler(void)
{
 800731e:	b580      	push	{r7, lr}
 8007320:	af00      	add	r7, sp, #0
  /* USER CODE END DMA1_Channel1_IRQn 0 */

  /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */

  /* USER CODE END DMA1_Channel1_IRQn 1 */
}
 8007322:	46c0      	nop			; (mov r8, r8)
 8007324:	46bd      	mov	sp, r7
 8007326:	bd80      	pop	{r7, pc}

08007328 <DMA1_Channel2_3_IRQHandler>:

/**
  * @brief This function handles DMA1 channel 2 and channel 3 interrupts.
  */
void DMA1_Channel2_3_IRQHandler(void)
{
 8007328:	b580      	push	{r7, lr}
 800732a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Channel2_3_IRQn 0 */

  /* USER CODE END DMA1_Channel2_3_IRQn 0 */
  TRACER_EMB_IRQHandlerDMA();
 800732c:	f00f fe5c 	bl	8016fe8 <TRACER_EMB_IRQHandlerDMA>
  /* USER CODE BEGIN DMA1_Channel2_3_IRQn 1 */

  /* USER CODE END DMA1_Channel2_3_IRQn 1 */
}
 8007330:	46c0      	nop			; (mov r8, r8)
 8007332:	46bd      	mov	sp, r7
 8007334:	bd80      	pop	{r7, pc}
	...

08007338 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8007338:	b580      	push	{r7, lr}
 800733a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 800733c:	4b03      	ldr	r3, [pc, #12]	; (800734c <TIM2_IRQHandler+0x14>)
 800733e:	0018      	movs	r0, r3
 8007340:	f002 fd28 	bl	8009d94 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8007344:	46c0      	nop			; (mov r8, r8)
 8007346:	46bd      	mov	sp, r7
 8007348:	bd80      	pop	{r7, pc}
 800734a:	46c0      	nop			; (mov r8, r8)
 800734c:	2000023c 	.word	0x2000023c

08007350 <USART3_4_5_6_LPUART1_IRQHandler>:

/**
  * @brief This function handles USART3, USART4, USART5, USART6, LPUART1 globlal Interrupts (combined with EXTI 28).
  */
void USART3_4_5_6_LPUART1_IRQHandler(void)
{
 8007350:	b580      	push	{r7, lr}
 8007352:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART3_4_5_6_LPUART1_IRQn 0 */

  /* USER CODE END USART3_4_5_6_LPUART1_IRQn 0 */
  TRACER_EMB_IRQHandlerUSART();
 8007354:	f00f fe4f 	bl	8016ff6 <TRACER_EMB_IRQHandlerUSART>
  /* USER CODE BEGIN USART3_4_5_6_LPUART1_IRQn 1 */

  /* USER CODE END USART3_4_5_6_LPUART1_IRQn 1 */
}
 8007358:	46c0      	nop			; (mov r8, r8)
 800735a:	46bd      	mov	sp, r7
 800735c:	bd80      	pop	{r7, pc}
	...

08007360 <_sbrk>:
 8007360:	b580      	push	{r7, lr}
 8007362:	b086      	sub	sp, #24
 8007364:	af00      	add	r7, sp, #0
 8007366:	6078      	str	r0, [r7, #4]
 8007368:	4a14      	ldr	r2, [pc, #80]	; (80073bc <_sbrk+0x5c>)
 800736a:	4b15      	ldr	r3, [pc, #84]	; (80073c0 <_sbrk+0x60>)
 800736c:	1ad3      	subs	r3, r2, r3
 800736e:	617b      	str	r3, [r7, #20]
 8007370:	697b      	ldr	r3, [r7, #20]
 8007372:	613b      	str	r3, [r7, #16]
 8007374:	4b13      	ldr	r3, [pc, #76]	; (80073c4 <_sbrk+0x64>)
 8007376:	681b      	ldr	r3, [r3, #0]
 8007378:	2b00      	cmp	r3, #0
 800737a:	d102      	bne.n	8007382 <_sbrk+0x22>
 800737c:	4b11      	ldr	r3, [pc, #68]	; (80073c4 <_sbrk+0x64>)
 800737e:	4a12      	ldr	r2, [pc, #72]	; (80073c8 <_sbrk+0x68>)
 8007380:	601a      	str	r2, [r3, #0]
 8007382:	4b10      	ldr	r3, [pc, #64]	; (80073c4 <_sbrk+0x64>)
 8007384:	681a      	ldr	r2, [r3, #0]
 8007386:	687b      	ldr	r3, [r7, #4]
 8007388:	18d3      	adds	r3, r2, r3
 800738a:	693a      	ldr	r2, [r7, #16]
 800738c:	429a      	cmp	r2, r3
 800738e:	d207      	bcs.n	80073a0 <_sbrk+0x40>
 8007390:	f010 ff90 	bl	80182b4 <__errno>
 8007394:	0003      	movs	r3, r0
 8007396:	220c      	movs	r2, #12
 8007398:	601a      	str	r2, [r3, #0]
 800739a:	2301      	movs	r3, #1
 800739c:	425b      	negs	r3, r3
 800739e:	e009      	b.n	80073b4 <_sbrk+0x54>
 80073a0:	4b08      	ldr	r3, [pc, #32]	; (80073c4 <_sbrk+0x64>)
 80073a2:	681b      	ldr	r3, [r3, #0]
 80073a4:	60fb      	str	r3, [r7, #12]
 80073a6:	4b07      	ldr	r3, [pc, #28]	; (80073c4 <_sbrk+0x64>)
 80073a8:	681a      	ldr	r2, [r3, #0]
 80073aa:	687b      	ldr	r3, [r7, #4]
 80073ac:	18d2      	adds	r2, r2, r3
 80073ae:	4b05      	ldr	r3, [pc, #20]	; (80073c4 <_sbrk+0x64>)
 80073b0:	601a      	str	r2, [r3, #0]
 80073b2:	68fb      	ldr	r3, [r7, #12]
 80073b4:	0018      	movs	r0, r3
 80073b6:	46bd      	mov	sp, r7
 80073b8:	b006      	add	sp, #24
 80073ba:	bd80      	pop	{r7, pc}
 80073bc:	20024000 	.word	0x20024000
 80073c0:	00000400 	.word	0x00000400
 80073c4:	20000288 	.word	0x20000288
 80073c8:	200034c0 	.word	0x200034c0

080073cc <SystemInit>:
 80073cc:	b580      	push	{r7, lr}
 80073ce:	af00      	add	r7, sp, #0
 80073d0:	46c0      	nop			; (mov r8, r8)
 80073d2:	46bd      	mov	sp, r7
 80073d4:	bd80      	pop	{r7, pc}
	...

080073d8 <Reset_Handler>:
 80073d8:	480d      	ldr	r0, [pc, #52]	; (8007410 <LoopForever+0x2>)
 80073da:	4685      	mov	sp, r0
 80073dc:	f7ff fff6 	bl	80073cc <SystemInit>
 80073e0:	480c      	ldr	r0, [pc, #48]	; (8007414 <LoopForever+0x6>)
 80073e2:	490d      	ldr	r1, [pc, #52]	; (8007418 <LoopForever+0xa>)
 80073e4:	4a0d      	ldr	r2, [pc, #52]	; (800741c <LoopForever+0xe>)
 80073e6:	2300      	movs	r3, #0
 80073e8:	e002      	b.n	80073f0 <LoopCopyDataInit>

080073ea <CopyDataInit>:
 80073ea:	58d4      	ldr	r4, [r2, r3]
 80073ec:	50c4      	str	r4, [r0, r3]
 80073ee:	3304      	adds	r3, #4

080073f0 <LoopCopyDataInit>:
 80073f0:	18c4      	adds	r4, r0, r3
 80073f2:	428c      	cmp	r4, r1
 80073f4:	d3f9      	bcc.n	80073ea <CopyDataInit>
 80073f6:	4a0a      	ldr	r2, [pc, #40]	; (8007420 <LoopForever+0x12>)
 80073f8:	4c0a      	ldr	r4, [pc, #40]	; (8007424 <LoopForever+0x16>)
 80073fa:	2300      	movs	r3, #0
 80073fc:	e001      	b.n	8007402 <LoopFillZerobss>

080073fe <FillZerobss>:
 80073fe:	6013      	str	r3, [r2, #0]
 8007400:	3204      	adds	r2, #4

08007402 <LoopFillZerobss>:
 8007402:	42a2      	cmp	r2, r4
 8007404:	d3fb      	bcc.n	80073fe <FillZerobss>
 8007406:	f010 ff5b 	bl	80182c0 <__libc_init_array>
 800740a:	f7ff fb07 	bl	8006a1c <main>

0800740e <LoopForever>:
 800740e:	e7fe      	b.n	800740e <LoopForever>
 8007410:	20024000 	.word	0x20024000
 8007414:	20000000 	.word	0x20000000
 8007418:	20000194 	.word	0x20000194
 800741c:	0801a1fc 	.word	0x0801a1fc
 8007420:	20000194 	.word	0x20000194
 8007424:	200034c0 	.word	0x200034c0

08007428 <ADC1_COMP_IRQHandler>:
 8007428:	e7fe      	b.n	8007428 <ADC1_COMP_IRQHandler>
	...

0800742c <HAL_Init>:
 800742c:	b580      	push	{r7, lr}
 800742e:	b082      	sub	sp, #8
 8007430:	af00      	add	r7, sp, #0
 8007432:	1dfb      	adds	r3, r7, #7
 8007434:	2200      	movs	r2, #0
 8007436:	701a      	strb	r2, [r3, #0]
 8007438:	4b0b      	ldr	r3, [pc, #44]	; (8007468 <HAL_Init+0x3c>)
 800743a:	681a      	ldr	r2, [r3, #0]
 800743c:	4b0a      	ldr	r3, [pc, #40]	; (8007468 <HAL_Init+0x3c>)
 800743e:	2180      	movs	r1, #128	; 0x80
 8007440:	0049      	lsls	r1, r1, #1
 8007442:	430a      	orrs	r2, r1
 8007444:	601a      	str	r2, [r3, #0]
 8007446:	2003      	movs	r0, #3
 8007448:	f7ff fece 	bl	80071e8 <HAL_InitTick>
 800744c:	1e03      	subs	r3, r0, #0
 800744e:	d003      	beq.n	8007458 <HAL_Init+0x2c>
 8007450:	1dfb      	adds	r3, r7, #7
 8007452:	2201      	movs	r2, #1
 8007454:	701a      	strb	r2, [r3, #0]
 8007456:	e001      	b.n	800745c <HAL_Init+0x30>
 8007458:	f7ff fe52 	bl	8007100 <HAL_MspInit>
 800745c:	1dfb      	adds	r3, r7, #7
 800745e:	781b      	ldrb	r3, [r3, #0]
 8007460:	0018      	movs	r0, r3
 8007462:	46bd      	mov	sp, r7
 8007464:	b002      	add	sp, #8
 8007466:	bd80      	pop	{r7, pc}
 8007468:	40022000 	.word	0x40022000

0800746c <HAL_IncTick>:
 800746c:	b580      	push	{r7, lr}
 800746e:	af00      	add	r7, sp, #0
 8007470:	4b05      	ldr	r3, [pc, #20]	; (8007488 <HAL_IncTick+0x1c>)
 8007472:	781b      	ldrb	r3, [r3, #0]
 8007474:	001a      	movs	r2, r3
 8007476:	4b05      	ldr	r3, [pc, #20]	; (800748c <HAL_IncTick+0x20>)
 8007478:	681b      	ldr	r3, [r3, #0]
 800747a:	18d2      	adds	r2, r2, r3
 800747c:	4b03      	ldr	r3, [pc, #12]	; (800748c <HAL_IncTick+0x20>)
 800747e:	601a      	str	r2, [r3, #0]
 8007480:	46c0      	nop			; (mov r8, r8)
 8007482:	46bd      	mov	sp, r7
 8007484:	bd80      	pop	{r7, pc}
 8007486:	46c0      	nop			; (mov r8, r8)
 8007488:	2000000c 	.word	0x2000000c
 800748c:	2000028c 	.word	0x2000028c

08007490 <HAL_GetTick>:
 8007490:	b580      	push	{r7, lr}
 8007492:	af00      	add	r7, sp, #0
 8007494:	4b02      	ldr	r3, [pc, #8]	; (80074a0 <HAL_GetTick+0x10>)
 8007496:	681b      	ldr	r3, [r3, #0]
 8007498:	0018      	movs	r0, r3
 800749a:	46bd      	mov	sp, r7
 800749c:	bd80      	pop	{r7, pc}
 800749e:	46c0      	nop			; (mov r8, r8)
 80074a0:	2000028c 	.word	0x2000028c

080074a4 <HAL_Delay>:
 80074a4:	b580      	push	{r7, lr}
 80074a6:	b084      	sub	sp, #16
 80074a8:	af00      	add	r7, sp, #0
 80074aa:	6078      	str	r0, [r7, #4]
 80074ac:	f7ff fff0 	bl	8007490 <HAL_GetTick>
 80074b0:	0003      	movs	r3, r0
 80074b2:	60bb      	str	r3, [r7, #8]
 80074b4:	687b      	ldr	r3, [r7, #4]
 80074b6:	60fb      	str	r3, [r7, #12]
 80074b8:	68fb      	ldr	r3, [r7, #12]
 80074ba:	3301      	adds	r3, #1
 80074bc:	d005      	beq.n	80074ca <HAL_Delay+0x26>
 80074be:	4b0a      	ldr	r3, [pc, #40]	; (80074e8 <HAL_Delay+0x44>)
 80074c0:	781b      	ldrb	r3, [r3, #0]
 80074c2:	001a      	movs	r2, r3
 80074c4:	68fb      	ldr	r3, [r7, #12]
 80074c6:	189b      	adds	r3, r3, r2
 80074c8:	60fb      	str	r3, [r7, #12]
 80074ca:	46c0      	nop			; (mov r8, r8)
 80074cc:	f7ff ffe0 	bl	8007490 <HAL_GetTick>
 80074d0:	0002      	movs	r2, r0
 80074d2:	68bb      	ldr	r3, [r7, #8]
 80074d4:	1ad3      	subs	r3, r2, r3
 80074d6:	68fa      	ldr	r2, [r7, #12]
 80074d8:	429a      	cmp	r2, r3
 80074da:	d8f7      	bhi.n	80074cc <HAL_Delay+0x28>
 80074dc:	46c0      	nop			; (mov r8, r8)
 80074de:	46c0      	nop			; (mov r8, r8)
 80074e0:	46bd      	mov	sp, r7
 80074e2:	b004      	add	sp, #16
 80074e4:	bd80      	pop	{r7, pc}
 80074e6:	46c0      	nop			; (mov r8, r8)
 80074e8:	2000000c 	.word	0x2000000c

080074ec <HAL_SYSCFG_StrobeDBattpinsConfig>:
 80074ec:	b580      	push	{r7, lr}
 80074ee:	b082      	sub	sp, #8
 80074f0:	af00      	add	r7, sp, #0
 80074f2:	6078      	str	r0, [r7, #4]
 80074f4:	4b06      	ldr	r3, [pc, #24]	; (8007510 <HAL_SYSCFG_StrobeDBattpinsConfig+0x24>)
 80074f6:	681b      	ldr	r3, [r3, #0]
 80074f8:	4a06      	ldr	r2, [pc, #24]	; (8007514 <HAL_SYSCFG_StrobeDBattpinsConfig+0x28>)
 80074fa:	4013      	ands	r3, r2
 80074fc:	0019      	movs	r1, r3
 80074fe:	4b04      	ldr	r3, [pc, #16]	; (8007510 <HAL_SYSCFG_StrobeDBattpinsConfig+0x24>)
 8007500:	687a      	ldr	r2, [r7, #4]
 8007502:	430a      	orrs	r2, r1
 8007504:	601a      	str	r2, [r3, #0]
 8007506:	46c0      	nop			; (mov r8, r8)
 8007508:	46bd      	mov	sp, r7
 800750a:	b002      	add	sp, #8
 800750c:	bd80      	pop	{r7, pc}
 800750e:	46c0      	nop			; (mov r8, r8)
 8007510:	40010000 	.word	0x40010000
 8007514:	fffff9ff 	.word	0xfffff9ff

08007518 <LL_ADC_SetCommonPathInternalCh>:
 8007518:	b580      	push	{r7, lr}
 800751a:	b082      	sub	sp, #8
 800751c:	af00      	add	r7, sp, #0
 800751e:	6078      	str	r0, [r7, #4]
 8007520:	6039      	str	r1, [r7, #0]
 8007522:	687b      	ldr	r3, [r7, #4]
 8007524:	681b      	ldr	r3, [r3, #0]
 8007526:	4a05      	ldr	r2, [pc, #20]	; (800753c <LL_ADC_SetCommonPathInternalCh+0x24>)
 8007528:	401a      	ands	r2, r3
 800752a:	683b      	ldr	r3, [r7, #0]
 800752c:	431a      	orrs	r2, r3
 800752e:	687b      	ldr	r3, [r7, #4]
 8007530:	601a      	str	r2, [r3, #0]
 8007532:	46c0      	nop			; (mov r8, r8)
 8007534:	46bd      	mov	sp, r7
 8007536:	b002      	add	sp, #8
 8007538:	bd80      	pop	{r7, pc}
 800753a:	46c0      	nop			; (mov r8, r8)
 800753c:	fe3fffff 	.word	0xfe3fffff

08007540 <LL_ADC_GetCommonPathInternalCh>:
 8007540:	b580      	push	{r7, lr}
 8007542:	b082      	sub	sp, #8
 8007544:	af00      	add	r7, sp, #0
 8007546:	6078      	str	r0, [r7, #4]
 8007548:	687b      	ldr	r3, [r7, #4]
 800754a:	681a      	ldr	r2, [r3, #0]
 800754c:	23e0      	movs	r3, #224	; 0xe0
 800754e:	045b      	lsls	r3, r3, #17
 8007550:	4013      	ands	r3, r2
 8007552:	0018      	movs	r0, r3
 8007554:	46bd      	mov	sp, r7
 8007556:	b002      	add	sp, #8
 8007558:	bd80      	pop	{r7, pc}

0800755a <LL_ADC_SetSamplingTimeCommonChannels>:
 800755a:	b580      	push	{r7, lr}
 800755c:	b084      	sub	sp, #16
 800755e:	af00      	add	r7, sp, #0
 8007560:	60f8      	str	r0, [r7, #12]
 8007562:	60b9      	str	r1, [r7, #8]
 8007564:	607a      	str	r2, [r7, #4]
 8007566:	68fb      	ldr	r3, [r7, #12]
 8007568:	695b      	ldr	r3, [r3, #20]
 800756a:	68ba      	ldr	r2, [r7, #8]
 800756c:	2104      	movs	r1, #4
 800756e:	400a      	ands	r2, r1
 8007570:	2107      	movs	r1, #7
 8007572:	4091      	lsls	r1, r2
 8007574:	000a      	movs	r2, r1
 8007576:	43d2      	mvns	r2, r2
 8007578:	401a      	ands	r2, r3
 800757a:	68bb      	ldr	r3, [r7, #8]
 800757c:	2104      	movs	r1, #4
 800757e:	400b      	ands	r3, r1
 8007580:	6879      	ldr	r1, [r7, #4]
 8007582:	4099      	lsls	r1, r3
 8007584:	000b      	movs	r3, r1
 8007586:	431a      	orrs	r2, r3
 8007588:	68fb      	ldr	r3, [r7, #12]
 800758a:	615a      	str	r2, [r3, #20]
 800758c:	46c0      	nop			; (mov r8, r8)
 800758e:	46bd      	mov	sp, r7
 8007590:	b004      	add	sp, #16
 8007592:	bd80      	pop	{r7, pc}

08007594 <LL_ADC_GetSamplingTimeCommonChannels>:
 8007594:	b580      	push	{r7, lr}
 8007596:	b082      	sub	sp, #8
 8007598:	af00      	add	r7, sp, #0
 800759a:	6078      	str	r0, [r7, #4]
 800759c:	6039      	str	r1, [r7, #0]
 800759e:	687b      	ldr	r3, [r7, #4]
 80075a0:	695b      	ldr	r3, [r3, #20]
 80075a2:	683a      	ldr	r2, [r7, #0]
 80075a4:	2104      	movs	r1, #4
 80075a6:	400a      	ands	r2, r1
 80075a8:	2107      	movs	r1, #7
 80075aa:	4091      	lsls	r1, r2
 80075ac:	000a      	movs	r2, r1
 80075ae:	401a      	ands	r2, r3
 80075b0:	683b      	ldr	r3, [r7, #0]
 80075b2:	2104      	movs	r1, #4
 80075b4:	400b      	ands	r3, r1
 80075b6:	40da      	lsrs	r2, r3
 80075b8:	0013      	movs	r3, r2
 80075ba:	0018      	movs	r0, r3
 80075bc:	46bd      	mov	sp, r7
 80075be:	b002      	add	sp, #8
 80075c0:	bd80      	pop	{r7, pc}

080075c2 <LL_ADC_REG_SetSequencerRanks>:
 80075c2:	b580      	push	{r7, lr}
 80075c4:	b084      	sub	sp, #16
 80075c6:	af00      	add	r7, sp, #0
 80075c8:	60f8      	str	r0, [r7, #12]
 80075ca:	60b9      	str	r1, [r7, #8]
 80075cc:	607a      	str	r2, [r7, #4]
 80075ce:	68fb      	ldr	r3, [r7, #12]
 80075d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80075d2:	68ba      	ldr	r2, [r7, #8]
 80075d4:	211f      	movs	r1, #31
 80075d6:	400a      	ands	r2, r1
 80075d8:	210f      	movs	r1, #15
 80075da:	4091      	lsls	r1, r2
 80075dc:	000a      	movs	r2, r1
 80075de:	43d2      	mvns	r2, r2
 80075e0:	401a      	ands	r2, r3
 80075e2:	687b      	ldr	r3, [r7, #4]
 80075e4:	0e9b      	lsrs	r3, r3, #26
 80075e6:	210f      	movs	r1, #15
 80075e8:	4019      	ands	r1, r3
 80075ea:	68bb      	ldr	r3, [r7, #8]
 80075ec:	201f      	movs	r0, #31
 80075ee:	4003      	ands	r3, r0
 80075f0:	4099      	lsls	r1, r3
 80075f2:	000b      	movs	r3, r1
 80075f4:	431a      	orrs	r2, r3
 80075f6:	68fb      	ldr	r3, [r7, #12]
 80075f8:	629a      	str	r2, [r3, #40]	; 0x28
 80075fa:	46c0      	nop			; (mov r8, r8)
 80075fc:	46bd      	mov	sp, r7
 80075fe:	b004      	add	sp, #16
 8007600:	bd80      	pop	{r7, pc}

08007602 <LL_ADC_REG_SetSequencerChAdd>:
 8007602:	b580      	push	{r7, lr}
 8007604:	b082      	sub	sp, #8
 8007606:	af00      	add	r7, sp, #0
 8007608:	6078      	str	r0, [r7, #4]
 800760a:	6039      	str	r1, [r7, #0]
 800760c:	687b      	ldr	r3, [r7, #4]
 800760e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8007610:	683b      	ldr	r3, [r7, #0]
 8007612:	035b      	lsls	r3, r3, #13
 8007614:	0b5b      	lsrs	r3, r3, #13
 8007616:	431a      	orrs	r2, r3
 8007618:	687b      	ldr	r3, [r7, #4]
 800761a:	629a      	str	r2, [r3, #40]	; 0x28
 800761c:	46c0      	nop			; (mov r8, r8)
 800761e:	46bd      	mov	sp, r7
 8007620:	b002      	add	sp, #8
 8007622:	bd80      	pop	{r7, pc}

08007624 <LL_ADC_REG_SetSequencerChRem>:
 8007624:	b580      	push	{r7, lr}
 8007626:	b082      	sub	sp, #8
 8007628:	af00      	add	r7, sp, #0
 800762a:	6078      	str	r0, [r7, #4]
 800762c:	6039      	str	r1, [r7, #0]
 800762e:	687b      	ldr	r3, [r7, #4]
 8007630:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007632:	683a      	ldr	r2, [r7, #0]
 8007634:	0352      	lsls	r2, r2, #13
 8007636:	0b52      	lsrs	r2, r2, #13
 8007638:	43d2      	mvns	r2, r2
 800763a:	401a      	ands	r2, r3
 800763c:	687b      	ldr	r3, [r7, #4]
 800763e:	629a      	str	r2, [r3, #40]	; 0x28
 8007640:	46c0      	nop			; (mov r8, r8)
 8007642:	46bd      	mov	sp, r7
 8007644:	b002      	add	sp, #8
 8007646:	bd80      	pop	{r7, pc}

08007648 <LL_ADC_SetChannelSamplingTime>:
 8007648:	b580      	push	{r7, lr}
 800764a:	b084      	sub	sp, #16
 800764c:	af00      	add	r7, sp, #0
 800764e:	60f8      	str	r0, [r7, #12]
 8007650:	60b9      	str	r1, [r7, #8]
 8007652:	607a      	str	r2, [r7, #4]
 8007654:	68fb      	ldr	r3, [r7, #12]
 8007656:	695b      	ldr	r3, [r3, #20]
 8007658:	68ba      	ldr	r2, [r7, #8]
 800765a:	0212      	lsls	r2, r2, #8
 800765c:	43d2      	mvns	r2, r2
 800765e:	401a      	ands	r2, r3
 8007660:	68bb      	ldr	r3, [r7, #8]
 8007662:	021b      	lsls	r3, r3, #8
 8007664:	6879      	ldr	r1, [r7, #4]
 8007666:	400b      	ands	r3, r1
 8007668:	4904      	ldr	r1, [pc, #16]	; (800767c <LL_ADC_SetChannelSamplingTime+0x34>)
 800766a:	400b      	ands	r3, r1
 800766c:	431a      	orrs	r2, r3
 800766e:	68fb      	ldr	r3, [r7, #12]
 8007670:	615a      	str	r2, [r3, #20]
 8007672:	46c0      	nop			; (mov r8, r8)
 8007674:	46bd      	mov	sp, r7
 8007676:	b004      	add	sp, #16
 8007678:	bd80      	pop	{r7, pc}
 800767a:	46c0      	nop			; (mov r8, r8)
 800767c:	07ffff00 	.word	0x07ffff00

08007680 <LL_ADC_EnableInternalRegulator>:
 8007680:	b580      	push	{r7, lr}
 8007682:	b082      	sub	sp, #8
 8007684:	af00      	add	r7, sp, #0
 8007686:	6078      	str	r0, [r7, #4]
 8007688:	687b      	ldr	r3, [r7, #4]
 800768a:	689b      	ldr	r3, [r3, #8]
 800768c:	4a05      	ldr	r2, [pc, #20]	; (80076a4 <LL_ADC_EnableInternalRegulator+0x24>)
 800768e:	4013      	ands	r3, r2
 8007690:	2280      	movs	r2, #128	; 0x80
 8007692:	0552      	lsls	r2, r2, #21
 8007694:	431a      	orrs	r2, r3
 8007696:	687b      	ldr	r3, [r7, #4]
 8007698:	609a      	str	r2, [r3, #8]
 800769a:	46c0      	nop			; (mov r8, r8)
 800769c:	46bd      	mov	sp, r7
 800769e:	b002      	add	sp, #8
 80076a0:	bd80      	pop	{r7, pc}
 80076a2:	46c0      	nop			; (mov r8, r8)
 80076a4:	6fffffe8 	.word	0x6fffffe8

080076a8 <LL_ADC_IsInternalRegulatorEnabled>:
 80076a8:	b580      	push	{r7, lr}
 80076aa:	b082      	sub	sp, #8
 80076ac:	af00      	add	r7, sp, #0
 80076ae:	6078      	str	r0, [r7, #4]
 80076b0:	687b      	ldr	r3, [r7, #4]
 80076b2:	689a      	ldr	r2, [r3, #8]
 80076b4:	2380      	movs	r3, #128	; 0x80
 80076b6:	055b      	lsls	r3, r3, #21
 80076b8:	401a      	ands	r2, r3
 80076ba:	2380      	movs	r3, #128	; 0x80
 80076bc:	055b      	lsls	r3, r3, #21
 80076be:	429a      	cmp	r2, r3
 80076c0:	d101      	bne.n	80076c6 <LL_ADC_IsInternalRegulatorEnabled+0x1e>
 80076c2:	2301      	movs	r3, #1
 80076c4:	e000      	b.n	80076c8 <LL_ADC_IsInternalRegulatorEnabled+0x20>
 80076c6:	2300      	movs	r3, #0
 80076c8:	0018      	movs	r0, r3
 80076ca:	46bd      	mov	sp, r7
 80076cc:	b002      	add	sp, #8
 80076ce:	bd80      	pop	{r7, pc}

080076d0 <LL_ADC_Enable>:
 80076d0:	b580      	push	{r7, lr}
 80076d2:	b082      	sub	sp, #8
 80076d4:	af00      	add	r7, sp, #0
 80076d6:	6078      	str	r0, [r7, #4]
 80076d8:	687b      	ldr	r3, [r7, #4]
 80076da:	689b      	ldr	r3, [r3, #8]
 80076dc:	4a04      	ldr	r2, [pc, #16]	; (80076f0 <LL_ADC_Enable+0x20>)
 80076de:	4013      	ands	r3, r2
 80076e0:	2201      	movs	r2, #1
 80076e2:	431a      	orrs	r2, r3
 80076e4:	687b      	ldr	r3, [r7, #4]
 80076e6:	609a      	str	r2, [r3, #8]
 80076e8:	46c0      	nop			; (mov r8, r8)
 80076ea:	46bd      	mov	sp, r7
 80076ec:	b002      	add	sp, #8
 80076ee:	bd80      	pop	{r7, pc}
 80076f0:	7fffffe8 	.word	0x7fffffe8

080076f4 <LL_ADC_Disable>:
 80076f4:	b580      	push	{r7, lr}
 80076f6:	b082      	sub	sp, #8
 80076f8:	af00      	add	r7, sp, #0
 80076fa:	6078      	str	r0, [r7, #4]
 80076fc:	687b      	ldr	r3, [r7, #4]
 80076fe:	689b      	ldr	r3, [r3, #8]
 8007700:	4a04      	ldr	r2, [pc, #16]	; (8007714 <LL_ADC_Disable+0x20>)
 8007702:	4013      	ands	r3, r2
 8007704:	2202      	movs	r2, #2
 8007706:	431a      	orrs	r2, r3
 8007708:	687b      	ldr	r3, [r7, #4]
 800770a:	609a      	str	r2, [r3, #8]
 800770c:	46c0      	nop			; (mov r8, r8)
 800770e:	46bd      	mov	sp, r7
 8007710:	b002      	add	sp, #8
 8007712:	bd80      	pop	{r7, pc}
 8007714:	7fffffe8 	.word	0x7fffffe8

08007718 <LL_ADC_IsEnabled>:
 8007718:	b580      	push	{r7, lr}
 800771a:	b082      	sub	sp, #8
 800771c:	af00      	add	r7, sp, #0
 800771e:	6078      	str	r0, [r7, #4]
 8007720:	687b      	ldr	r3, [r7, #4]
 8007722:	689b      	ldr	r3, [r3, #8]
 8007724:	2201      	movs	r2, #1
 8007726:	4013      	ands	r3, r2
 8007728:	2b01      	cmp	r3, #1
 800772a:	d101      	bne.n	8007730 <LL_ADC_IsEnabled+0x18>
 800772c:	2301      	movs	r3, #1
 800772e:	e000      	b.n	8007732 <LL_ADC_IsEnabled+0x1a>
 8007730:	2300      	movs	r3, #0
 8007732:	0018      	movs	r0, r3
 8007734:	46bd      	mov	sp, r7
 8007736:	b002      	add	sp, #8
 8007738:	bd80      	pop	{r7, pc}

0800773a <LL_ADC_IsDisableOngoing>:
 800773a:	b580      	push	{r7, lr}
 800773c:	b082      	sub	sp, #8
 800773e:	af00      	add	r7, sp, #0
 8007740:	6078      	str	r0, [r7, #4]
 8007742:	687b      	ldr	r3, [r7, #4]
 8007744:	689b      	ldr	r3, [r3, #8]
 8007746:	2202      	movs	r2, #2
 8007748:	4013      	ands	r3, r2
 800774a:	2b02      	cmp	r3, #2
 800774c:	d101      	bne.n	8007752 <LL_ADC_IsDisableOngoing+0x18>
 800774e:	2301      	movs	r3, #1
 8007750:	e000      	b.n	8007754 <LL_ADC_IsDisableOngoing+0x1a>
 8007752:	2300      	movs	r3, #0
 8007754:	0018      	movs	r0, r3
 8007756:	46bd      	mov	sp, r7
 8007758:	b002      	add	sp, #8
 800775a:	bd80      	pop	{r7, pc}

0800775c <LL_ADC_REG_StartConversion>:
 800775c:	b580      	push	{r7, lr}
 800775e:	b082      	sub	sp, #8
 8007760:	af00      	add	r7, sp, #0
 8007762:	6078      	str	r0, [r7, #4]
 8007764:	687b      	ldr	r3, [r7, #4]
 8007766:	689b      	ldr	r3, [r3, #8]
 8007768:	4a04      	ldr	r2, [pc, #16]	; (800777c <LL_ADC_REG_StartConversion+0x20>)
 800776a:	4013      	ands	r3, r2
 800776c:	2204      	movs	r2, #4
 800776e:	431a      	orrs	r2, r3
 8007770:	687b      	ldr	r3, [r7, #4]
 8007772:	609a      	str	r2, [r3, #8]
 8007774:	46c0      	nop			; (mov r8, r8)
 8007776:	46bd      	mov	sp, r7
 8007778:	b002      	add	sp, #8
 800777a:	bd80      	pop	{r7, pc}
 800777c:	7fffffe8 	.word	0x7fffffe8

08007780 <LL_ADC_REG_IsConversionOngoing>:
 8007780:	b580      	push	{r7, lr}
 8007782:	b082      	sub	sp, #8
 8007784:	af00      	add	r7, sp, #0
 8007786:	6078      	str	r0, [r7, #4]
 8007788:	687b      	ldr	r3, [r7, #4]
 800778a:	689b      	ldr	r3, [r3, #8]
 800778c:	2204      	movs	r2, #4
 800778e:	4013      	ands	r3, r2
 8007790:	2b04      	cmp	r3, #4
 8007792:	d101      	bne.n	8007798 <LL_ADC_REG_IsConversionOngoing+0x18>
 8007794:	2301      	movs	r3, #1
 8007796:	e000      	b.n	800779a <LL_ADC_REG_IsConversionOngoing+0x1a>
 8007798:	2300      	movs	r3, #0
 800779a:	0018      	movs	r0, r3
 800779c:	46bd      	mov	sp, r7
 800779e:	b002      	add	sp, #8
 80077a0:	bd80      	pop	{r7, pc}
	...

080077a4 <HAL_ADC_Init>:
 80077a4:	b580      	push	{r7, lr}
 80077a6:	b088      	sub	sp, #32
 80077a8:	af00      	add	r7, sp, #0
 80077aa:	6078      	str	r0, [r7, #4]
 80077ac:	231f      	movs	r3, #31
 80077ae:	18fb      	adds	r3, r7, r3
 80077b0:	2200      	movs	r2, #0
 80077b2:	701a      	strb	r2, [r3, #0]
 80077b4:	2300      	movs	r3, #0
 80077b6:	61bb      	str	r3, [r7, #24]
 80077b8:	2300      	movs	r3, #0
 80077ba:	617b      	str	r3, [r7, #20]
 80077bc:	2300      	movs	r3, #0
 80077be:	60fb      	str	r3, [r7, #12]
 80077c0:	687b      	ldr	r3, [r7, #4]
 80077c2:	2b00      	cmp	r3, #0
 80077c4:	d101      	bne.n	80077ca <HAL_ADC_Init+0x26>
 80077c6:	2301      	movs	r3, #1
 80077c8:	e17f      	b.n	8007aca <HAL_ADC_Init+0x326>
 80077ca:	687b      	ldr	r3, [r7, #4]
 80077cc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80077ce:	2b00      	cmp	r3, #0
 80077d0:	d10a      	bne.n	80077e8 <HAL_ADC_Init+0x44>
 80077d2:	687b      	ldr	r3, [r7, #4]
 80077d4:	0018      	movs	r0, r3
 80077d6:	f7ff fcc3 	bl	8007160 <HAL_ADC_MspInit>
 80077da:	687b      	ldr	r3, [r7, #4]
 80077dc:	2200      	movs	r2, #0
 80077de:	65da      	str	r2, [r3, #92]	; 0x5c
 80077e0:	687b      	ldr	r3, [r7, #4]
 80077e2:	2254      	movs	r2, #84	; 0x54
 80077e4:	2100      	movs	r1, #0
 80077e6:	5499      	strb	r1, [r3, r2]
 80077e8:	687b      	ldr	r3, [r7, #4]
 80077ea:	681b      	ldr	r3, [r3, #0]
 80077ec:	0018      	movs	r0, r3
 80077ee:	f7ff ff5b 	bl	80076a8 <LL_ADC_IsInternalRegulatorEnabled>
 80077f2:	1e03      	subs	r3, r0, #0
 80077f4:	d115      	bne.n	8007822 <HAL_ADC_Init+0x7e>
 80077f6:	687b      	ldr	r3, [r7, #4]
 80077f8:	681b      	ldr	r3, [r3, #0]
 80077fa:	0018      	movs	r0, r3
 80077fc:	f7ff ff40 	bl	8007680 <LL_ADC_EnableInternalRegulator>
 8007800:	4bb4      	ldr	r3, [pc, #720]	; (8007ad4 <HAL_ADC_Init+0x330>)
 8007802:	681b      	ldr	r3, [r3, #0]
 8007804:	49b4      	ldr	r1, [pc, #720]	; (8007ad8 <HAL_ADC_Init+0x334>)
 8007806:	0018      	movs	r0, r3
 8007808:	f7fe fcf2 	bl	80061f0 <__udivsi3>
 800780c:	0003      	movs	r3, r0
 800780e:	3301      	adds	r3, #1
 8007810:	005b      	lsls	r3, r3, #1
 8007812:	60fb      	str	r3, [r7, #12]
 8007814:	e002      	b.n	800781c <HAL_ADC_Init+0x78>
 8007816:	68fb      	ldr	r3, [r7, #12]
 8007818:	3b01      	subs	r3, #1
 800781a:	60fb      	str	r3, [r7, #12]
 800781c:	68fb      	ldr	r3, [r7, #12]
 800781e:	2b00      	cmp	r3, #0
 8007820:	d1f9      	bne.n	8007816 <HAL_ADC_Init+0x72>
 8007822:	687b      	ldr	r3, [r7, #4]
 8007824:	681b      	ldr	r3, [r3, #0]
 8007826:	0018      	movs	r0, r3
 8007828:	f7ff ff3e 	bl	80076a8 <LL_ADC_IsInternalRegulatorEnabled>
 800782c:	1e03      	subs	r3, r0, #0
 800782e:	d10f      	bne.n	8007850 <HAL_ADC_Init+0xac>
 8007830:	687b      	ldr	r3, [r7, #4]
 8007832:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007834:	2210      	movs	r2, #16
 8007836:	431a      	orrs	r2, r3
 8007838:	687b      	ldr	r3, [r7, #4]
 800783a:	659a      	str	r2, [r3, #88]	; 0x58
 800783c:	687b      	ldr	r3, [r7, #4]
 800783e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007840:	2201      	movs	r2, #1
 8007842:	431a      	orrs	r2, r3
 8007844:	687b      	ldr	r3, [r7, #4]
 8007846:	65da      	str	r2, [r3, #92]	; 0x5c
 8007848:	231f      	movs	r3, #31
 800784a:	18fb      	adds	r3, r7, r3
 800784c:	2201      	movs	r2, #1
 800784e:	701a      	strb	r2, [r3, #0]
 8007850:	687b      	ldr	r3, [r7, #4]
 8007852:	681b      	ldr	r3, [r3, #0]
 8007854:	0018      	movs	r0, r3
 8007856:	f7ff ff93 	bl	8007780 <LL_ADC_REG_IsConversionOngoing>
 800785a:	0003      	movs	r3, r0
 800785c:	613b      	str	r3, [r7, #16]
 800785e:	687b      	ldr	r3, [r7, #4]
 8007860:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007862:	2210      	movs	r2, #16
 8007864:	4013      	ands	r3, r2
 8007866:	d000      	beq.n	800786a <HAL_ADC_Init+0xc6>
 8007868:	e122      	b.n	8007ab0 <HAL_ADC_Init+0x30c>
 800786a:	693b      	ldr	r3, [r7, #16]
 800786c:	2b00      	cmp	r3, #0
 800786e:	d000      	beq.n	8007872 <HAL_ADC_Init+0xce>
 8007870:	e11e      	b.n	8007ab0 <HAL_ADC_Init+0x30c>
 8007872:	687b      	ldr	r3, [r7, #4]
 8007874:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007876:	4a99      	ldr	r2, [pc, #612]	; (8007adc <HAL_ADC_Init+0x338>)
 8007878:	4013      	ands	r3, r2
 800787a:	2202      	movs	r2, #2
 800787c:	431a      	orrs	r2, r3
 800787e:	687b      	ldr	r3, [r7, #4]
 8007880:	659a      	str	r2, [r3, #88]	; 0x58
 8007882:	687b      	ldr	r3, [r7, #4]
 8007884:	681b      	ldr	r3, [r3, #0]
 8007886:	0018      	movs	r0, r3
 8007888:	f7ff ff46 	bl	8007718 <LL_ADC_IsEnabled>
 800788c:	1e03      	subs	r3, r0, #0
 800788e:	d000      	beq.n	8007892 <HAL_ADC_Init+0xee>
 8007890:	e0ad      	b.n	80079ee <HAL_ADC_Init+0x24a>
 8007892:	687b      	ldr	r3, [r7, #4]
 8007894:	689a      	ldr	r2, [r3, #8]
 8007896:	687b      	ldr	r3, [r7, #4]
 8007898:	7e1b      	ldrb	r3, [r3, #24]
 800789a:	039b      	lsls	r3, r3, #14
 800789c:	431a      	orrs	r2, r3
 800789e:	687b      	ldr	r3, [r7, #4]
 80078a0:	7e5b      	ldrb	r3, [r3, #25]
 80078a2:	03db      	lsls	r3, r3, #15
 80078a4:	431a      	orrs	r2, r3
 80078a6:	687b      	ldr	r3, [r7, #4]
 80078a8:	7e9b      	ldrb	r3, [r3, #26]
 80078aa:	035b      	lsls	r3, r3, #13
 80078ac:	431a      	orrs	r2, r3
 80078ae:	687b      	ldr	r3, [r7, #4]
 80078b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80078b2:	2b00      	cmp	r3, #0
 80078b4:	d002      	beq.n	80078bc <HAL_ADC_Init+0x118>
 80078b6:	2380      	movs	r3, #128	; 0x80
 80078b8:	015b      	lsls	r3, r3, #5
 80078ba:	e000      	b.n	80078be <HAL_ADC_Init+0x11a>
 80078bc:	2300      	movs	r3, #0
 80078be:	431a      	orrs	r2, r3
 80078c0:	687b      	ldr	r3, [r7, #4]
 80078c2:	68db      	ldr	r3, [r3, #12]
 80078c4:	431a      	orrs	r2, r3
 80078c6:	687b      	ldr	r3, [r7, #4]
 80078c8:	691b      	ldr	r3, [r3, #16]
 80078ca:	2b00      	cmp	r3, #0
 80078cc:	da04      	bge.n	80078d8 <HAL_ADC_Init+0x134>
 80078ce:	687b      	ldr	r3, [r7, #4]
 80078d0:	691b      	ldr	r3, [r3, #16]
 80078d2:	005b      	lsls	r3, r3, #1
 80078d4:	085b      	lsrs	r3, r3, #1
 80078d6:	e001      	b.n	80078dc <HAL_ADC_Init+0x138>
 80078d8:	2380      	movs	r3, #128	; 0x80
 80078da:	039b      	lsls	r3, r3, #14
 80078dc:	431a      	orrs	r2, r3
 80078de:	687b      	ldr	r3, [r7, #4]
 80078e0:	212c      	movs	r1, #44	; 0x2c
 80078e2:	5c5b      	ldrb	r3, [r3, r1]
 80078e4:	005b      	lsls	r3, r3, #1
 80078e6:	4313      	orrs	r3, r2
 80078e8:	69ba      	ldr	r2, [r7, #24]
 80078ea:	4313      	orrs	r3, r2
 80078ec:	61bb      	str	r3, [r7, #24]
 80078ee:	687b      	ldr	r3, [r7, #4]
 80078f0:	2220      	movs	r2, #32
 80078f2:	5c9b      	ldrb	r3, [r3, r2]
 80078f4:	2b01      	cmp	r3, #1
 80078f6:	d115      	bne.n	8007924 <HAL_ADC_Init+0x180>
 80078f8:	687b      	ldr	r3, [r7, #4]
 80078fa:	7e9b      	ldrb	r3, [r3, #26]
 80078fc:	2b00      	cmp	r3, #0
 80078fe:	d105      	bne.n	800790c <HAL_ADC_Init+0x168>
 8007900:	69bb      	ldr	r3, [r7, #24]
 8007902:	2280      	movs	r2, #128	; 0x80
 8007904:	0252      	lsls	r2, r2, #9
 8007906:	4313      	orrs	r3, r2
 8007908:	61bb      	str	r3, [r7, #24]
 800790a:	e00b      	b.n	8007924 <HAL_ADC_Init+0x180>
 800790c:	687b      	ldr	r3, [r7, #4]
 800790e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007910:	2220      	movs	r2, #32
 8007912:	431a      	orrs	r2, r3
 8007914:	687b      	ldr	r3, [r7, #4]
 8007916:	659a      	str	r2, [r3, #88]	; 0x58
 8007918:	687b      	ldr	r3, [r7, #4]
 800791a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800791c:	2201      	movs	r2, #1
 800791e:	431a      	orrs	r2, r3
 8007920:	687b      	ldr	r3, [r7, #4]
 8007922:	65da      	str	r2, [r3, #92]	; 0x5c
 8007924:	687b      	ldr	r3, [r7, #4]
 8007926:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007928:	2b00      	cmp	r3, #0
 800792a:	d00a      	beq.n	8007942 <HAL_ADC_Init+0x19e>
 800792c:	687b      	ldr	r3, [r7, #4]
 800792e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8007930:	23e0      	movs	r3, #224	; 0xe0
 8007932:	005b      	lsls	r3, r3, #1
 8007934:	401a      	ands	r2, r3
 8007936:	687b      	ldr	r3, [r7, #4]
 8007938:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800793a:	4313      	orrs	r3, r2
 800793c:	69ba      	ldr	r2, [r7, #24]
 800793e:	4313      	orrs	r3, r2
 8007940:	61bb      	str	r3, [r7, #24]
 8007942:	687b      	ldr	r3, [r7, #4]
 8007944:	681b      	ldr	r3, [r3, #0]
 8007946:	68db      	ldr	r3, [r3, #12]
 8007948:	4a65      	ldr	r2, [pc, #404]	; (8007ae0 <HAL_ADC_Init+0x33c>)
 800794a:	4013      	ands	r3, r2
 800794c:	0019      	movs	r1, r3
 800794e:	687b      	ldr	r3, [r7, #4]
 8007950:	681b      	ldr	r3, [r3, #0]
 8007952:	69ba      	ldr	r2, [r7, #24]
 8007954:	430a      	orrs	r2, r1
 8007956:	60da      	str	r2, [r3, #12]
 8007958:	687b      	ldr	r3, [r7, #4]
 800795a:	685b      	ldr	r3, [r3, #4]
 800795c:	0f9b      	lsrs	r3, r3, #30
 800795e:	079a      	lsls	r2, r3, #30
 8007960:	687b      	ldr	r3, [r7, #4]
 8007962:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007964:	4313      	orrs	r3, r2
 8007966:	697a      	ldr	r2, [r7, #20]
 8007968:	4313      	orrs	r3, r2
 800796a:	617b      	str	r3, [r7, #20]
 800796c:	687b      	ldr	r3, [r7, #4]
 800796e:	223c      	movs	r2, #60	; 0x3c
 8007970:	5c9b      	ldrb	r3, [r3, r2]
 8007972:	2b01      	cmp	r3, #1
 8007974:	d111      	bne.n	800799a <HAL_ADC_Init+0x1f6>
 8007976:	687b      	ldr	r3, [r7, #4]
 8007978:	685b      	ldr	r3, [r3, #4]
 800797a:	0f9b      	lsrs	r3, r3, #30
 800797c:	079a      	lsls	r2, r3, #30
 800797e:	687b      	ldr	r3, [r7, #4]
 8007980:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007982:	431a      	orrs	r2, r3
 8007984:	687b      	ldr	r3, [r7, #4]
 8007986:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007988:	431a      	orrs	r2, r3
 800798a:	687b      	ldr	r3, [r7, #4]
 800798c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800798e:	431a      	orrs	r2, r3
 8007990:	697b      	ldr	r3, [r7, #20]
 8007992:	4313      	orrs	r3, r2
 8007994:	2201      	movs	r2, #1
 8007996:	4313      	orrs	r3, r2
 8007998:	617b      	str	r3, [r7, #20]
 800799a:	687b      	ldr	r3, [r7, #4]
 800799c:	681b      	ldr	r3, [r3, #0]
 800799e:	691b      	ldr	r3, [r3, #16]
 80079a0:	4a50      	ldr	r2, [pc, #320]	; (8007ae4 <HAL_ADC_Init+0x340>)
 80079a2:	4013      	ands	r3, r2
 80079a4:	0019      	movs	r1, r3
 80079a6:	687b      	ldr	r3, [r7, #4]
 80079a8:	681b      	ldr	r3, [r3, #0]
 80079aa:	697a      	ldr	r2, [r7, #20]
 80079ac:	430a      	orrs	r2, r1
 80079ae:	611a      	str	r2, [r3, #16]
 80079b0:	687b      	ldr	r3, [r7, #4]
 80079b2:	685a      	ldr	r2, [r3, #4]
 80079b4:	23c0      	movs	r3, #192	; 0xc0
 80079b6:	061b      	lsls	r3, r3, #24
 80079b8:	429a      	cmp	r2, r3
 80079ba:	d018      	beq.n	80079ee <HAL_ADC_Init+0x24a>
 80079bc:	687b      	ldr	r3, [r7, #4]
 80079be:	685a      	ldr	r2, [r3, #4]
 80079c0:	2380      	movs	r3, #128	; 0x80
 80079c2:	05db      	lsls	r3, r3, #23
 80079c4:	429a      	cmp	r2, r3
 80079c6:	d012      	beq.n	80079ee <HAL_ADC_Init+0x24a>
 80079c8:	687b      	ldr	r3, [r7, #4]
 80079ca:	685a      	ldr	r2, [r3, #4]
 80079cc:	2380      	movs	r3, #128	; 0x80
 80079ce:	061b      	lsls	r3, r3, #24
 80079d0:	429a      	cmp	r2, r3
 80079d2:	d00c      	beq.n	80079ee <HAL_ADC_Init+0x24a>
 80079d4:	4b44      	ldr	r3, [pc, #272]	; (8007ae8 <HAL_ADC_Init+0x344>)
 80079d6:	681b      	ldr	r3, [r3, #0]
 80079d8:	4a44      	ldr	r2, [pc, #272]	; (8007aec <HAL_ADC_Init+0x348>)
 80079da:	4013      	ands	r3, r2
 80079dc:	0019      	movs	r1, r3
 80079de:	687b      	ldr	r3, [r7, #4]
 80079e0:	685a      	ldr	r2, [r3, #4]
 80079e2:	23f0      	movs	r3, #240	; 0xf0
 80079e4:	039b      	lsls	r3, r3, #14
 80079e6:	401a      	ands	r2, r3
 80079e8:	4b3f      	ldr	r3, [pc, #252]	; (8007ae8 <HAL_ADC_Init+0x344>)
 80079ea:	430a      	orrs	r2, r1
 80079ec:	601a      	str	r2, [r3, #0]
 80079ee:	687b      	ldr	r3, [r7, #4]
 80079f0:	6818      	ldr	r0, [r3, #0]
 80079f2:	687b      	ldr	r3, [r7, #4]
 80079f4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80079f6:	001a      	movs	r2, r3
 80079f8:	2100      	movs	r1, #0
 80079fa:	f7ff fdae 	bl	800755a <LL_ADC_SetSamplingTimeCommonChannels>
 80079fe:	687b      	ldr	r3, [r7, #4]
 8007a00:	6818      	ldr	r0, [r3, #0]
 8007a02:	687b      	ldr	r3, [r7, #4]
 8007a04:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007a06:	493a      	ldr	r1, [pc, #232]	; (8007af0 <HAL_ADC_Init+0x34c>)
 8007a08:	001a      	movs	r2, r3
 8007a0a:	f7ff fda6 	bl	800755a <LL_ADC_SetSamplingTimeCommonChannels>
 8007a0e:	687b      	ldr	r3, [r7, #4]
 8007a10:	691b      	ldr	r3, [r3, #16]
 8007a12:	2b00      	cmp	r3, #0
 8007a14:	d109      	bne.n	8007a2a <HAL_ADC_Init+0x286>
 8007a16:	687b      	ldr	r3, [r7, #4]
 8007a18:	681b      	ldr	r3, [r3, #0]
 8007a1a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8007a1c:	687b      	ldr	r3, [r7, #4]
 8007a1e:	681b      	ldr	r3, [r3, #0]
 8007a20:	2110      	movs	r1, #16
 8007a22:	4249      	negs	r1, r1
 8007a24:	430a      	orrs	r2, r1
 8007a26:	629a      	str	r2, [r3, #40]	; 0x28
 8007a28:	e018      	b.n	8007a5c <HAL_ADC_Init+0x2b8>
 8007a2a:	687b      	ldr	r3, [r7, #4]
 8007a2c:	691a      	ldr	r2, [r3, #16]
 8007a2e:	2380      	movs	r3, #128	; 0x80
 8007a30:	039b      	lsls	r3, r3, #14
 8007a32:	429a      	cmp	r2, r3
 8007a34:	d112      	bne.n	8007a5c <HAL_ADC_Init+0x2b8>
 8007a36:	687b      	ldr	r3, [r7, #4]
 8007a38:	681b      	ldr	r3, [r3, #0]
 8007a3a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007a3c:	687b      	ldr	r3, [r7, #4]
 8007a3e:	69db      	ldr	r3, [r3, #28]
 8007a40:	3b01      	subs	r3, #1
 8007a42:	009b      	lsls	r3, r3, #2
 8007a44:	221c      	movs	r2, #28
 8007a46:	4013      	ands	r3, r2
 8007a48:	2210      	movs	r2, #16
 8007a4a:	4252      	negs	r2, r2
 8007a4c:	409a      	lsls	r2, r3
 8007a4e:	0011      	movs	r1, r2
 8007a50:	687b      	ldr	r3, [r7, #4]
 8007a52:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8007a54:	687b      	ldr	r3, [r7, #4]
 8007a56:	681b      	ldr	r3, [r3, #0]
 8007a58:	430a      	orrs	r2, r1
 8007a5a:	629a      	str	r2, [r3, #40]	; 0x28
 8007a5c:	687b      	ldr	r3, [r7, #4]
 8007a5e:	681b      	ldr	r3, [r3, #0]
 8007a60:	2100      	movs	r1, #0
 8007a62:	0018      	movs	r0, r3
 8007a64:	f7ff fd96 	bl	8007594 <LL_ADC_GetSamplingTimeCommonChannels>
 8007a68:	0002      	movs	r2, r0
 8007a6a:	687b      	ldr	r3, [r7, #4]
 8007a6c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007a6e:	429a      	cmp	r2, r3
 8007a70:	d10b      	bne.n	8007a8a <HAL_ADC_Init+0x2e6>
 8007a72:	687b      	ldr	r3, [r7, #4]
 8007a74:	2200      	movs	r2, #0
 8007a76:	65da      	str	r2, [r3, #92]	; 0x5c
 8007a78:	687b      	ldr	r3, [r7, #4]
 8007a7a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007a7c:	2203      	movs	r2, #3
 8007a7e:	4393      	bics	r3, r2
 8007a80:	2201      	movs	r2, #1
 8007a82:	431a      	orrs	r2, r3
 8007a84:	687b      	ldr	r3, [r7, #4]
 8007a86:	659a      	str	r2, [r3, #88]	; 0x58
 8007a88:	e01c      	b.n	8007ac4 <HAL_ADC_Init+0x320>
 8007a8a:	687b      	ldr	r3, [r7, #4]
 8007a8c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007a8e:	2212      	movs	r2, #18
 8007a90:	4393      	bics	r3, r2
 8007a92:	2210      	movs	r2, #16
 8007a94:	431a      	orrs	r2, r3
 8007a96:	687b      	ldr	r3, [r7, #4]
 8007a98:	659a      	str	r2, [r3, #88]	; 0x58
 8007a9a:	687b      	ldr	r3, [r7, #4]
 8007a9c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007a9e:	2201      	movs	r2, #1
 8007aa0:	431a      	orrs	r2, r3
 8007aa2:	687b      	ldr	r3, [r7, #4]
 8007aa4:	65da      	str	r2, [r3, #92]	; 0x5c
 8007aa6:	231f      	movs	r3, #31
 8007aa8:	18fb      	adds	r3, r7, r3
 8007aaa:	2201      	movs	r2, #1
 8007aac:	701a      	strb	r2, [r3, #0]
 8007aae:	e009      	b.n	8007ac4 <HAL_ADC_Init+0x320>
 8007ab0:	687b      	ldr	r3, [r7, #4]
 8007ab2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007ab4:	2210      	movs	r2, #16
 8007ab6:	431a      	orrs	r2, r3
 8007ab8:	687b      	ldr	r3, [r7, #4]
 8007aba:	659a      	str	r2, [r3, #88]	; 0x58
 8007abc:	231f      	movs	r3, #31
 8007abe:	18fb      	adds	r3, r7, r3
 8007ac0:	2201      	movs	r2, #1
 8007ac2:	701a      	strb	r2, [r3, #0]
 8007ac4:	231f      	movs	r3, #31
 8007ac6:	18fb      	adds	r3, r7, r3
 8007ac8:	781b      	ldrb	r3, [r3, #0]
 8007aca:	0018      	movs	r0, r3
 8007acc:	46bd      	mov	sp, r7
 8007ace:	b008      	add	sp, #32
 8007ad0:	bd80      	pop	{r7, pc}
 8007ad2:	46c0      	nop			; (mov r8, r8)
 8007ad4:	20000004 	.word	0x20000004
 8007ad8:	00030d40 	.word	0x00030d40
 8007adc:	fffffefd 	.word	0xfffffefd
 8007ae0:	ffde0201 	.word	0xffde0201
 8007ae4:	1ffffc02 	.word	0x1ffffc02
 8007ae8:	40012708 	.word	0x40012708
 8007aec:	ffc3ffff 	.word	0xffc3ffff
 8007af0:	07ffff04 	.word	0x07ffff04

08007af4 <HAL_ADC_Start>:
 8007af4:	b5b0      	push	{r4, r5, r7, lr}
 8007af6:	b084      	sub	sp, #16
 8007af8:	af00      	add	r7, sp, #0
 8007afa:	6078      	str	r0, [r7, #4]
 8007afc:	687b      	ldr	r3, [r7, #4]
 8007afe:	681b      	ldr	r3, [r3, #0]
 8007b00:	0018      	movs	r0, r3
 8007b02:	f7ff fe3d 	bl	8007780 <LL_ADC_REG_IsConversionOngoing>
 8007b06:	1e03      	subs	r3, r0, #0
 8007b08:	d135      	bne.n	8007b76 <HAL_ADC_Start+0x82>
 8007b0a:	687b      	ldr	r3, [r7, #4]
 8007b0c:	2254      	movs	r2, #84	; 0x54
 8007b0e:	5c9b      	ldrb	r3, [r3, r2]
 8007b10:	2b01      	cmp	r3, #1
 8007b12:	d101      	bne.n	8007b18 <HAL_ADC_Start+0x24>
 8007b14:	2302      	movs	r3, #2
 8007b16:	e035      	b.n	8007b84 <HAL_ADC_Start+0x90>
 8007b18:	687b      	ldr	r3, [r7, #4]
 8007b1a:	2254      	movs	r2, #84	; 0x54
 8007b1c:	2101      	movs	r1, #1
 8007b1e:	5499      	strb	r1, [r3, r2]
 8007b20:	250f      	movs	r5, #15
 8007b22:	197c      	adds	r4, r7, r5
 8007b24:	687b      	ldr	r3, [r7, #4]
 8007b26:	0018      	movs	r0, r3
 8007b28:	f000 fa0a 	bl	8007f40 <ADC_Enable>
 8007b2c:	0003      	movs	r3, r0
 8007b2e:	7023      	strb	r3, [r4, #0]
 8007b30:	197b      	adds	r3, r7, r5
 8007b32:	781b      	ldrb	r3, [r3, #0]
 8007b34:	2b00      	cmp	r3, #0
 8007b36:	d119      	bne.n	8007b6c <HAL_ADC_Start+0x78>
 8007b38:	687b      	ldr	r3, [r7, #4]
 8007b3a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007b3c:	4a13      	ldr	r2, [pc, #76]	; (8007b8c <HAL_ADC_Start+0x98>)
 8007b3e:	4013      	ands	r3, r2
 8007b40:	2280      	movs	r2, #128	; 0x80
 8007b42:	0052      	lsls	r2, r2, #1
 8007b44:	431a      	orrs	r2, r3
 8007b46:	687b      	ldr	r3, [r7, #4]
 8007b48:	659a      	str	r2, [r3, #88]	; 0x58
 8007b4a:	687b      	ldr	r3, [r7, #4]
 8007b4c:	2200      	movs	r2, #0
 8007b4e:	65da      	str	r2, [r3, #92]	; 0x5c
 8007b50:	687b      	ldr	r3, [r7, #4]
 8007b52:	681b      	ldr	r3, [r3, #0]
 8007b54:	221c      	movs	r2, #28
 8007b56:	601a      	str	r2, [r3, #0]
 8007b58:	687b      	ldr	r3, [r7, #4]
 8007b5a:	2254      	movs	r2, #84	; 0x54
 8007b5c:	2100      	movs	r1, #0
 8007b5e:	5499      	strb	r1, [r3, r2]
 8007b60:	687b      	ldr	r3, [r7, #4]
 8007b62:	681b      	ldr	r3, [r3, #0]
 8007b64:	0018      	movs	r0, r3
 8007b66:	f7ff fdf9 	bl	800775c <LL_ADC_REG_StartConversion>
 8007b6a:	e008      	b.n	8007b7e <HAL_ADC_Start+0x8a>
 8007b6c:	687b      	ldr	r3, [r7, #4]
 8007b6e:	2254      	movs	r2, #84	; 0x54
 8007b70:	2100      	movs	r1, #0
 8007b72:	5499      	strb	r1, [r3, r2]
 8007b74:	e003      	b.n	8007b7e <HAL_ADC_Start+0x8a>
 8007b76:	230f      	movs	r3, #15
 8007b78:	18fb      	adds	r3, r7, r3
 8007b7a:	2202      	movs	r2, #2
 8007b7c:	701a      	strb	r2, [r3, #0]
 8007b7e:	230f      	movs	r3, #15
 8007b80:	18fb      	adds	r3, r7, r3
 8007b82:	781b      	ldrb	r3, [r3, #0]
 8007b84:	0018      	movs	r0, r3
 8007b86:	46bd      	mov	sp, r7
 8007b88:	b004      	add	sp, #16
 8007b8a:	bdb0      	pop	{r4, r5, r7, pc}
 8007b8c:	fffff0fe 	.word	0xfffff0fe

08007b90 <HAL_ADC_ConfigChannel>:
 8007b90:	b580      	push	{r7, lr}
 8007b92:	b086      	sub	sp, #24
 8007b94:	af00      	add	r7, sp, #0
 8007b96:	6078      	str	r0, [r7, #4]
 8007b98:	6039      	str	r1, [r7, #0]
 8007b9a:	2317      	movs	r3, #23
 8007b9c:	18fb      	adds	r3, r7, r3
 8007b9e:	2200      	movs	r2, #0
 8007ba0:	701a      	strb	r2, [r3, #0]
 8007ba2:	2300      	movs	r3, #0
 8007ba4:	60fb      	str	r3, [r7, #12]
 8007ba6:	687b      	ldr	r3, [r7, #4]
 8007ba8:	2254      	movs	r2, #84	; 0x54
 8007baa:	5c9b      	ldrb	r3, [r3, r2]
 8007bac:	2b01      	cmp	r3, #1
 8007bae:	d101      	bne.n	8007bb4 <HAL_ADC_ConfigChannel+0x24>
 8007bb0:	2302      	movs	r3, #2
 8007bb2:	e1c0      	b.n	8007f36 <HAL_ADC_ConfigChannel+0x3a6>
 8007bb4:	687b      	ldr	r3, [r7, #4]
 8007bb6:	2254      	movs	r2, #84	; 0x54
 8007bb8:	2101      	movs	r1, #1
 8007bba:	5499      	strb	r1, [r3, r2]
 8007bbc:	687b      	ldr	r3, [r7, #4]
 8007bbe:	681b      	ldr	r3, [r3, #0]
 8007bc0:	0018      	movs	r0, r3
 8007bc2:	f7ff fddd 	bl	8007780 <LL_ADC_REG_IsConversionOngoing>
 8007bc6:	1e03      	subs	r3, r0, #0
 8007bc8:	d000      	beq.n	8007bcc <HAL_ADC_ConfigChannel+0x3c>
 8007bca:	e1a3      	b.n	8007f14 <HAL_ADC_ConfigChannel+0x384>
 8007bcc:	683b      	ldr	r3, [r7, #0]
 8007bce:	685b      	ldr	r3, [r3, #4]
 8007bd0:	2b02      	cmp	r3, #2
 8007bd2:	d100      	bne.n	8007bd6 <HAL_ADC_ConfigChannel+0x46>
 8007bd4:	e143      	b.n	8007e5e <HAL_ADC_ConfigChannel+0x2ce>
 8007bd6:	687b      	ldr	r3, [r7, #4]
 8007bd8:	691a      	ldr	r2, [r3, #16]
 8007bda:	2380      	movs	r3, #128	; 0x80
 8007bdc:	061b      	lsls	r3, r3, #24
 8007bde:	429a      	cmp	r2, r3
 8007be0:	d004      	beq.n	8007bec <HAL_ADC_ConfigChannel+0x5c>
 8007be2:	687b      	ldr	r3, [r7, #4]
 8007be4:	691b      	ldr	r3, [r3, #16]
 8007be6:	4ac1      	ldr	r2, [pc, #772]	; (8007eec <HAL_ADC_ConfigChannel+0x35c>)
 8007be8:	4293      	cmp	r3, r2
 8007bea:	d108      	bne.n	8007bfe <HAL_ADC_ConfigChannel+0x6e>
 8007bec:	687b      	ldr	r3, [r7, #4]
 8007bee:	681a      	ldr	r2, [r3, #0]
 8007bf0:	683b      	ldr	r3, [r7, #0]
 8007bf2:	681b      	ldr	r3, [r3, #0]
 8007bf4:	0019      	movs	r1, r3
 8007bf6:	0010      	movs	r0, r2
 8007bf8:	f7ff fd03 	bl	8007602 <LL_ADC_REG_SetSequencerChAdd>
 8007bfc:	e0c9      	b.n	8007d92 <HAL_ADC_ConfigChannel+0x202>
 8007bfe:	687b      	ldr	r3, [r7, #4]
 8007c00:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8007c02:	683b      	ldr	r3, [r7, #0]
 8007c04:	685b      	ldr	r3, [r3, #4]
 8007c06:	211f      	movs	r1, #31
 8007c08:	400b      	ands	r3, r1
 8007c0a:	210f      	movs	r1, #15
 8007c0c:	4099      	lsls	r1, r3
 8007c0e:	000b      	movs	r3, r1
 8007c10:	43db      	mvns	r3, r3
 8007c12:	4013      	ands	r3, r2
 8007c14:	0019      	movs	r1, r3
 8007c16:	683b      	ldr	r3, [r7, #0]
 8007c18:	681b      	ldr	r3, [r3, #0]
 8007c1a:	035b      	lsls	r3, r3, #13
 8007c1c:	0b5b      	lsrs	r3, r3, #13
 8007c1e:	d105      	bne.n	8007c2c <HAL_ADC_ConfigChannel+0x9c>
 8007c20:	683b      	ldr	r3, [r7, #0]
 8007c22:	681b      	ldr	r3, [r3, #0]
 8007c24:	0e9b      	lsrs	r3, r3, #26
 8007c26:	221f      	movs	r2, #31
 8007c28:	4013      	ands	r3, r2
 8007c2a:	e098      	b.n	8007d5e <HAL_ADC_ConfigChannel+0x1ce>
 8007c2c:	683b      	ldr	r3, [r7, #0]
 8007c2e:	681b      	ldr	r3, [r3, #0]
 8007c30:	2201      	movs	r2, #1
 8007c32:	4013      	ands	r3, r2
 8007c34:	d000      	beq.n	8007c38 <HAL_ADC_ConfigChannel+0xa8>
 8007c36:	e091      	b.n	8007d5c <HAL_ADC_ConfigChannel+0x1cc>
 8007c38:	683b      	ldr	r3, [r7, #0]
 8007c3a:	681b      	ldr	r3, [r3, #0]
 8007c3c:	2202      	movs	r2, #2
 8007c3e:	4013      	ands	r3, r2
 8007c40:	d000      	beq.n	8007c44 <HAL_ADC_ConfigChannel+0xb4>
 8007c42:	e089      	b.n	8007d58 <HAL_ADC_ConfigChannel+0x1c8>
 8007c44:	683b      	ldr	r3, [r7, #0]
 8007c46:	681b      	ldr	r3, [r3, #0]
 8007c48:	2204      	movs	r2, #4
 8007c4a:	4013      	ands	r3, r2
 8007c4c:	d000      	beq.n	8007c50 <HAL_ADC_ConfigChannel+0xc0>
 8007c4e:	e081      	b.n	8007d54 <HAL_ADC_ConfigChannel+0x1c4>
 8007c50:	683b      	ldr	r3, [r7, #0]
 8007c52:	681b      	ldr	r3, [r3, #0]
 8007c54:	2208      	movs	r2, #8
 8007c56:	4013      	ands	r3, r2
 8007c58:	d000      	beq.n	8007c5c <HAL_ADC_ConfigChannel+0xcc>
 8007c5a:	e079      	b.n	8007d50 <HAL_ADC_ConfigChannel+0x1c0>
 8007c5c:	683b      	ldr	r3, [r7, #0]
 8007c5e:	681b      	ldr	r3, [r3, #0]
 8007c60:	2210      	movs	r2, #16
 8007c62:	4013      	ands	r3, r2
 8007c64:	d000      	beq.n	8007c68 <HAL_ADC_ConfigChannel+0xd8>
 8007c66:	e071      	b.n	8007d4c <HAL_ADC_ConfigChannel+0x1bc>
 8007c68:	683b      	ldr	r3, [r7, #0]
 8007c6a:	681b      	ldr	r3, [r3, #0]
 8007c6c:	2220      	movs	r2, #32
 8007c6e:	4013      	ands	r3, r2
 8007c70:	d000      	beq.n	8007c74 <HAL_ADC_ConfigChannel+0xe4>
 8007c72:	e069      	b.n	8007d48 <HAL_ADC_ConfigChannel+0x1b8>
 8007c74:	683b      	ldr	r3, [r7, #0]
 8007c76:	681b      	ldr	r3, [r3, #0]
 8007c78:	2240      	movs	r2, #64	; 0x40
 8007c7a:	4013      	ands	r3, r2
 8007c7c:	d000      	beq.n	8007c80 <HAL_ADC_ConfigChannel+0xf0>
 8007c7e:	e061      	b.n	8007d44 <HAL_ADC_ConfigChannel+0x1b4>
 8007c80:	683b      	ldr	r3, [r7, #0]
 8007c82:	681b      	ldr	r3, [r3, #0]
 8007c84:	2280      	movs	r2, #128	; 0x80
 8007c86:	4013      	ands	r3, r2
 8007c88:	d000      	beq.n	8007c8c <HAL_ADC_ConfigChannel+0xfc>
 8007c8a:	e059      	b.n	8007d40 <HAL_ADC_ConfigChannel+0x1b0>
 8007c8c:	683b      	ldr	r3, [r7, #0]
 8007c8e:	681a      	ldr	r2, [r3, #0]
 8007c90:	2380      	movs	r3, #128	; 0x80
 8007c92:	005b      	lsls	r3, r3, #1
 8007c94:	4013      	ands	r3, r2
 8007c96:	d151      	bne.n	8007d3c <HAL_ADC_ConfigChannel+0x1ac>
 8007c98:	683b      	ldr	r3, [r7, #0]
 8007c9a:	681a      	ldr	r2, [r3, #0]
 8007c9c:	2380      	movs	r3, #128	; 0x80
 8007c9e:	009b      	lsls	r3, r3, #2
 8007ca0:	4013      	ands	r3, r2
 8007ca2:	d149      	bne.n	8007d38 <HAL_ADC_ConfigChannel+0x1a8>
 8007ca4:	683b      	ldr	r3, [r7, #0]
 8007ca6:	681a      	ldr	r2, [r3, #0]
 8007ca8:	2380      	movs	r3, #128	; 0x80
 8007caa:	00db      	lsls	r3, r3, #3
 8007cac:	4013      	ands	r3, r2
 8007cae:	d141      	bne.n	8007d34 <HAL_ADC_ConfigChannel+0x1a4>
 8007cb0:	683b      	ldr	r3, [r7, #0]
 8007cb2:	681a      	ldr	r2, [r3, #0]
 8007cb4:	2380      	movs	r3, #128	; 0x80
 8007cb6:	011b      	lsls	r3, r3, #4
 8007cb8:	4013      	ands	r3, r2
 8007cba:	d139      	bne.n	8007d30 <HAL_ADC_ConfigChannel+0x1a0>
 8007cbc:	683b      	ldr	r3, [r7, #0]
 8007cbe:	681a      	ldr	r2, [r3, #0]
 8007cc0:	2380      	movs	r3, #128	; 0x80
 8007cc2:	015b      	lsls	r3, r3, #5
 8007cc4:	4013      	ands	r3, r2
 8007cc6:	d131      	bne.n	8007d2c <HAL_ADC_ConfigChannel+0x19c>
 8007cc8:	683b      	ldr	r3, [r7, #0]
 8007cca:	681a      	ldr	r2, [r3, #0]
 8007ccc:	2380      	movs	r3, #128	; 0x80
 8007cce:	019b      	lsls	r3, r3, #6
 8007cd0:	4013      	ands	r3, r2
 8007cd2:	d129      	bne.n	8007d28 <HAL_ADC_ConfigChannel+0x198>
 8007cd4:	683b      	ldr	r3, [r7, #0]
 8007cd6:	681a      	ldr	r2, [r3, #0]
 8007cd8:	2380      	movs	r3, #128	; 0x80
 8007cda:	01db      	lsls	r3, r3, #7
 8007cdc:	4013      	ands	r3, r2
 8007cde:	d121      	bne.n	8007d24 <HAL_ADC_ConfigChannel+0x194>
 8007ce0:	683b      	ldr	r3, [r7, #0]
 8007ce2:	681a      	ldr	r2, [r3, #0]
 8007ce4:	2380      	movs	r3, #128	; 0x80
 8007ce6:	021b      	lsls	r3, r3, #8
 8007ce8:	4013      	ands	r3, r2
 8007cea:	d119      	bne.n	8007d20 <HAL_ADC_ConfigChannel+0x190>
 8007cec:	683b      	ldr	r3, [r7, #0]
 8007cee:	681a      	ldr	r2, [r3, #0]
 8007cf0:	2380      	movs	r3, #128	; 0x80
 8007cf2:	025b      	lsls	r3, r3, #9
 8007cf4:	4013      	ands	r3, r2
 8007cf6:	d111      	bne.n	8007d1c <HAL_ADC_ConfigChannel+0x18c>
 8007cf8:	683b      	ldr	r3, [r7, #0]
 8007cfa:	681a      	ldr	r2, [r3, #0]
 8007cfc:	2380      	movs	r3, #128	; 0x80
 8007cfe:	029b      	lsls	r3, r3, #10
 8007d00:	4013      	ands	r3, r2
 8007d02:	d109      	bne.n	8007d18 <HAL_ADC_ConfigChannel+0x188>
 8007d04:	683b      	ldr	r3, [r7, #0]
 8007d06:	681a      	ldr	r2, [r3, #0]
 8007d08:	2380      	movs	r3, #128	; 0x80
 8007d0a:	02db      	lsls	r3, r3, #11
 8007d0c:	4013      	ands	r3, r2
 8007d0e:	d001      	beq.n	8007d14 <HAL_ADC_ConfigChannel+0x184>
 8007d10:	2312      	movs	r3, #18
 8007d12:	e024      	b.n	8007d5e <HAL_ADC_ConfigChannel+0x1ce>
 8007d14:	2300      	movs	r3, #0
 8007d16:	e022      	b.n	8007d5e <HAL_ADC_ConfigChannel+0x1ce>
 8007d18:	2311      	movs	r3, #17
 8007d1a:	e020      	b.n	8007d5e <HAL_ADC_ConfigChannel+0x1ce>
 8007d1c:	2310      	movs	r3, #16
 8007d1e:	e01e      	b.n	8007d5e <HAL_ADC_ConfigChannel+0x1ce>
 8007d20:	230f      	movs	r3, #15
 8007d22:	e01c      	b.n	8007d5e <HAL_ADC_ConfigChannel+0x1ce>
 8007d24:	230e      	movs	r3, #14
 8007d26:	e01a      	b.n	8007d5e <HAL_ADC_ConfigChannel+0x1ce>
 8007d28:	230d      	movs	r3, #13
 8007d2a:	e018      	b.n	8007d5e <HAL_ADC_ConfigChannel+0x1ce>
 8007d2c:	230c      	movs	r3, #12
 8007d2e:	e016      	b.n	8007d5e <HAL_ADC_ConfigChannel+0x1ce>
 8007d30:	230b      	movs	r3, #11
 8007d32:	e014      	b.n	8007d5e <HAL_ADC_ConfigChannel+0x1ce>
 8007d34:	230a      	movs	r3, #10
 8007d36:	e012      	b.n	8007d5e <HAL_ADC_ConfigChannel+0x1ce>
 8007d38:	2309      	movs	r3, #9
 8007d3a:	e010      	b.n	8007d5e <HAL_ADC_ConfigChannel+0x1ce>
 8007d3c:	2308      	movs	r3, #8
 8007d3e:	e00e      	b.n	8007d5e <HAL_ADC_ConfigChannel+0x1ce>
 8007d40:	2307      	movs	r3, #7
 8007d42:	e00c      	b.n	8007d5e <HAL_ADC_ConfigChannel+0x1ce>
 8007d44:	2306      	movs	r3, #6
 8007d46:	e00a      	b.n	8007d5e <HAL_ADC_ConfigChannel+0x1ce>
 8007d48:	2305      	movs	r3, #5
 8007d4a:	e008      	b.n	8007d5e <HAL_ADC_ConfigChannel+0x1ce>
 8007d4c:	2304      	movs	r3, #4
 8007d4e:	e006      	b.n	8007d5e <HAL_ADC_ConfigChannel+0x1ce>
 8007d50:	2303      	movs	r3, #3
 8007d52:	e004      	b.n	8007d5e <HAL_ADC_ConfigChannel+0x1ce>
 8007d54:	2302      	movs	r3, #2
 8007d56:	e002      	b.n	8007d5e <HAL_ADC_ConfigChannel+0x1ce>
 8007d58:	2301      	movs	r3, #1
 8007d5a:	e000      	b.n	8007d5e <HAL_ADC_ConfigChannel+0x1ce>
 8007d5c:	2300      	movs	r3, #0
 8007d5e:	683a      	ldr	r2, [r7, #0]
 8007d60:	6852      	ldr	r2, [r2, #4]
 8007d62:	201f      	movs	r0, #31
 8007d64:	4002      	ands	r2, r0
 8007d66:	4093      	lsls	r3, r2
 8007d68:	000a      	movs	r2, r1
 8007d6a:	431a      	orrs	r2, r3
 8007d6c:	687b      	ldr	r3, [r7, #4]
 8007d6e:	661a      	str	r2, [r3, #96]	; 0x60
 8007d70:	683b      	ldr	r3, [r7, #0]
 8007d72:	685b      	ldr	r3, [r3, #4]
 8007d74:	089b      	lsrs	r3, r3, #2
 8007d76:	1c5a      	adds	r2, r3, #1
 8007d78:	687b      	ldr	r3, [r7, #4]
 8007d7a:	69db      	ldr	r3, [r3, #28]
 8007d7c:	429a      	cmp	r2, r3
 8007d7e:	d808      	bhi.n	8007d92 <HAL_ADC_ConfigChannel+0x202>
 8007d80:	687b      	ldr	r3, [r7, #4]
 8007d82:	6818      	ldr	r0, [r3, #0]
 8007d84:	683b      	ldr	r3, [r7, #0]
 8007d86:	6859      	ldr	r1, [r3, #4]
 8007d88:	683b      	ldr	r3, [r7, #0]
 8007d8a:	681b      	ldr	r3, [r3, #0]
 8007d8c:	001a      	movs	r2, r3
 8007d8e:	f7ff fc18 	bl	80075c2 <LL_ADC_REG_SetSequencerRanks>
 8007d92:	687b      	ldr	r3, [r7, #4]
 8007d94:	6818      	ldr	r0, [r3, #0]
 8007d96:	683b      	ldr	r3, [r7, #0]
 8007d98:	6819      	ldr	r1, [r3, #0]
 8007d9a:	683b      	ldr	r3, [r7, #0]
 8007d9c:	689b      	ldr	r3, [r3, #8]
 8007d9e:	001a      	movs	r2, r3
 8007da0:	f7ff fc52 	bl	8007648 <LL_ADC_SetChannelSamplingTime>
 8007da4:	683b      	ldr	r3, [r7, #0]
 8007da6:	681b      	ldr	r3, [r3, #0]
 8007da8:	2b00      	cmp	r3, #0
 8007daa:	db00      	blt.n	8007dae <HAL_ADC_ConfigChannel+0x21e>
 8007dac:	e0bc      	b.n	8007f28 <HAL_ADC_ConfigChannel+0x398>
 8007dae:	4b50      	ldr	r3, [pc, #320]	; (8007ef0 <HAL_ADC_ConfigChannel+0x360>)
 8007db0:	0018      	movs	r0, r3
 8007db2:	f7ff fbc5 	bl	8007540 <LL_ADC_GetCommonPathInternalCh>
 8007db6:	0003      	movs	r3, r0
 8007db8:	613b      	str	r3, [r7, #16]
 8007dba:	683b      	ldr	r3, [r7, #0]
 8007dbc:	681b      	ldr	r3, [r3, #0]
 8007dbe:	4a4d      	ldr	r2, [pc, #308]	; (8007ef4 <HAL_ADC_ConfigChannel+0x364>)
 8007dc0:	4293      	cmp	r3, r2
 8007dc2:	d122      	bne.n	8007e0a <HAL_ADC_ConfigChannel+0x27a>
 8007dc4:	693a      	ldr	r2, [r7, #16]
 8007dc6:	2380      	movs	r3, #128	; 0x80
 8007dc8:	041b      	lsls	r3, r3, #16
 8007dca:	4013      	ands	r3, r2
 8007dcc:	d11d      	bne.n	8007e0a <HAL_ADC_ConfigChannel+0x27a>
 8007dce:	693b      	ldr	r3, [r7, #16]
 8007dd0:	2280      	movs	r2, #128	; 0x80
 8007dd2:	0412      	lsls	r2, r2, #16
 8007dd4:	4313      	orrs	r3, r2
 8007dd6:	4a46      	ldr	r2, [pc, #280]	; (8007ef0 <HAL_ADC_ConfigChannel+0x360>)
 8007dd8:	0019      	movs	r1, r3
 8007dda:	0010      	movs	r0, r2
 8007ddc:	f7ff fb9c 	bl	8007518 <LL_ADC_SetCommonPathInternalCh>
 8007de0:	4b45      	ldr	r3, [pc, #276]	; (8007ef8 <HAL_ADC_ConfigChannel+0x368>)
 8007de2:	681b      	ldr	r3, [r3, #0]
 8007de4:	4945      	ldr	r1, [pc, #276]	; (8007efc <HAL_ADC_ConfigChannel+0x36c>)
 8007de6:	0018      	movs	r0, r3
 8007de8:	f7fe fa02 	bl	80061f0 <__udivsi3>
 8007dec:	0003      	movs	r3, r0
 8007dee:	1c5a      	adds	r2, r3, #1
 8007df0:	0013      	movs	r3, r2
 8007df2:	005b      	lsls	r3, r3, #1
 8007df4:	189b      	adds	r3, r3, r2
 8007df6:	009b      	lsls	r3, r3, #2
 8007df8:	60fb      	str	r3, [r7, #12]
 8007dfa:	e002      	b.n	8007e02 <HAL_ADC_ConfigChannel+0x272>
 8007dfc:	68fb      	ldr	r3, [r7, #12]
 8007dfe:	3b01      	subs	r3, #1
 8007e00:	60fb      	str	r3, [r7, #12]
 8007e02:	68fb      	ldr	r3, [r7, #12]
 8007e04:	2b00      	cmp	r3, #0
 8007e06:	d1f9      	bne.n	8007dfc <HAL_ADC_ConfigChannel+0x26c>
 8007e08:	e08e      	b.n	8007f28 <HAL_ADC_ConfigChannel+0x398>
 8007e0a:	683b      	ldr	r3, [r7, #0]
 8007e0c:	681b      	ldr	r3, [r3, #0]
 8007e0e:	4a3c      	ldr	r2, [pc, #240]	; (8007f00 <HAL_ADC_ConfigChannel+0x370>)
 8007e10:	4293      	cmp	r3, r2
 8007e12:	d10e      	bne.n	8007e32 <HAL_ADC_ConfigChannel+0x2a2>
 8007e14:	693a      	ldr	r2, [r7, #16]
 8007e16:	2380      	movs	r3, #128	; 0x80
 8007e18:	045b      	lsls	r3, r3, #17
 8007e1a:	4013      	ands	r3, r2
 8007e1c:	d109      	bne.n	8007e32 <HAL_ADC_ConfigChannel+0x2a2>
 8007e1e:	693b      	ldr	r3, [r7, #16]
 8007e20:	2280      	movs	r2, #128	; 0x80
 8007e22:	0452      	lsls	r2, r2, #17
 8007e24:	4313      	orrs	r3, r2
 8007e26:	4a32      	ldr	r2, [pc, #200]	; (8007ef0 <HAL_ADC_ConfigChannel+0x360>)
 8007e28:	0019      	movs	r1, r3
 8007e2a:	0010      	movs	r0, r2
 8007e2c:	f7ff fb74 	bl	8007518 <LL_ADC_SetCommonPathInternalCh>
 8007e30:	e07a      	b.n	8007f28 <HAL_ADC_ConfigChannel+0x398>
 8007e32:	683b      	ldr	r3, [r7, #0]
 8007e34:	681b      	ldr	r3, [r3, #0]
 8007e36:	4a33      	ldr	r2, [pc, #204]	; (8007f04 <HAL_ADC_ConfigChannel+0x374>)
 8007e38:	4293      	cmp	r3, r2
 8007e3a:	d000      	beq.n	8007e3e <HAL_ADC_ConfigChannel+0x2ae>
 8007e3c:	e074      	b.n	8007f28 <HAL_ADC_ConfigChannel+0x398>
 8007e3e:	693a      	ldr	r2, [r7, #16]
 8007e40:	2380      	movs	r3, #128	; 0x80
 8007e42:	03db      	lsls	r3, r3, #15
 8007e44:	4013      	ands	r3, r2
 8007e46:	d000      	beq.n	8007e4a <HAL_ADC_ConfigChannel+0x2ba>
 8007e48:	e06e      	b.n	8007f28 <HAL_ADC_ConfigChannel+0x398>
 8007e4a:	693b      	ldr	r3, [r7, #16]
 8007e4c:	2280      	movs	r2, #128	; 0x80
 8007e4e:	03d2      	lsls	r2, r2, #15
 8007e50:	4313      	orrs	r3, r2
 8007e52:	4a27      	ldr	r2, [pc, #156]	; (8007ef0 <HAL_ADC_ConfigChannel+0x360>)
 8007e54:	0019      	movs	r1, r3
 8007e56:	0010      	movs	r0, r2
 8007e58:	f7ff fb5e 	bl	8007518 <LL_ADC_SetCommonPathInternalCh>
 8007e5c:	e064      	b.n	8007f28 <HAL_ADC_ConfigChannel+0x398>
 8007e5e:	687b      	ldr	r3, [r7, #4]
 8007e60:	691a      	ldr	r2, [r3, #16]
 8007e62:	2380      	movs	r3, #128	; 0x80
 8007e64:	061b      	lsls	r3, r3, #24
 8007e66:	429a      	cmp	r2, r3
 8007e68:	d004      	beq.n	8007e74 <HAL_ADC_ConfigChannel+0x2e4>
 8007e6a:	687b      	ldr	r3, [r7, #4]
 8007e6c:	691b      	ldr	r3, [r3, #16]
 8007e6e:	4a1f      	ldr	r2, [pc, #124]	; (8007eec <HAL_ADC_ConfigChannel+0x35c>)
 8007e70:	4293      	cmp	r3, r2
 8007e72:	d107      	bne.n	8007e84 <HAL_ADC_ConfigChannel+0x2f4>
 8007e74:	687b      	ldr	r3, [r7, #4]
 8007e76:	681a      	ldr	r2, [r3, #0]
 8007e78:	683b      	ldr	r3, [r7, #0]
 8007e7a:	681b      	ldr	r3, [r3, #0]
 8007e7c:	0019      	movs	r1, r3
 8007e7e:	0010      	movs	r0, r2
 8007e80:	f7ff fbd0 	bl	8007624 <LL_ADC_REG_SetSequencerChRem>
 8007e84:	683b      	ldr	r3, [r7, #0]
 8007e86:	681b      	ldr	r3, [r3, #0]
 8007e88:	2b00      	cmp	r3, #0
 8007e8a:	da4d      	bge.n	8007f28 <HAL_ADC_ConfigChannel+0x398>
 8007e8c:	4b18      	ldr	r3, [pc, #96]	; (8007ef0 <HAL_ADC_ConfigChannel+0x360>)
 8007e8e:	0018      	movs	r0, r3
 8007e90:	f7ff fb56 	bl	8007540 <LL_ADC_GetCommonPathInternalCh>
 8007e94:	0003      	movs	r3, r0
 8007e96:	613b      	str	r3, [r7, #16]
 8007e98:	683b      	ldr	r3, [r7, #0]
 8007e9a:	681b      	ldr	r3, [r3, #0]
 8007e9c:	4a15      	ldr	r2, [pc, #84]	; (8007ef4 <HAL_ADC_ConfigChannel+0x364>)
 8007e9e:	4293      	cmp	r3, r2
 8007ea0:	d108      	bne.n	8007eb4 <HAL_ADC_ConfigChannel+0x324>
 8007ea2:	693b      	ldr	r3, [r7, #16]
 8007ea4:	4a18      	ldr	r2, [pc, #96]	; (8007f08 <HAL_ADC_ConfigChannel+0x378>)
 8007ea6:	4013      	ands	r3, r2
 8007ea8:	4a11      	ldr	r2, [pc, #68]	; (8007ef0 <HAL_ADC_ConfigChannel+0x360>)
 8007eaa:	0019      	movs	r1, r3
 8007eac:	0010      	movs	r0, r2
 8007eae:	f7ff fb33 	bl	8007518 <LL_ADC_SetCommonPathInternalCh>
 8007eb2:	e039      	b.n	8007f28 <HAL_ADC_ConfigChannel+0x398>
 8007eb4:	683b      	ldr	r3, [r7, #0]
 8007eb6:	681b      	ldr	r3, [r3, #0]
 8007eb8:	4a11      	ldr	r2, [pc, #68]	; (8007f00 <HAL_ADC_ConfigChannel+0x370>)
 8007eba:	4293      	cmp	r3, r2
 8007ebc:	d108      	bne.n	8007ed0 <HAL_ADC_ConfigChannel+0x340>
 8007ebe:	693b      	ldr	r3, [r7, #16]
 8007ec0:	4a12      	ldr	r2, [pc, #72]	; (8007f0c <HAL_ADC_ConfigChannel+0x37c>)
 8007ec2:	4013      	ands	r3, r2
 8007ec4:	4a0a      	ldr	r2, [pc, #40]	; (8007ef0 <HAL_ADC_ConfigChannel+0x360>)
 8007ec6:	0019      	movs	r1, r3
 8007ec8:	0010      	movs	r0, r2
 8007eca:	f7ff fb25 	bl	8007518 <LL_ADC_SetCommonPathInternalCh>
 8007ece:	e02b      	b.n	8007f28 <HAL_ADC_ConfigChannel+0x398>
 8007ed0:	683b      	ldr	r3, [r7, #0]
 8007ed2:	681b      	ldr	r3, [r3, #0]
 8007ed4:	4a0b      	ldr	r2, [pc, #44]	; (8007f04 <HAL_ADC_ConfigChannel+0x374>)
 8007ed6:	4293      	cmp	r3, r2
 8007ed8:	d126      	bne.n	8007f28 <HAL_ADC_ConfigChannel+0x398>
 8007eda:	693b      	ldr	r3, [r7, #16]
 8007edc:	4a0c      	ldr	r2, [pc, #48]	; (8007f10 <HAL_ADC_ConfigChannel+0x380>)
 8007ede:	4013      	ands	r3, r2
 8007ee0:	4a03      	ldr	r2, [pc, #12]	; (8007ef0 <HAL_ADC_ConfigChannel+0x360>)
 8007ee2:	0019      	movs	r1, r3
 8007ee4:	0010      	movs	r0, r2
 8007ee6:	f7ff fb17 	bl	8007518 <LL_ADC_SetCommonPathInternalCh>
 8007eea:	e01d      	b.n	8007f28 <HAL_ADC_ConfigChannel+0x398>
 8007eec:	80000004 	.word	0x80000004
 8007ef0:	40012708 	.word	0x40012708
 8007ef4:	b0001000 	.word	0xb0001000
 8007ef8:	20000004 	.word	0x20000004
 8007efc:	00030d40 	.word	0x00030d40
 8007f00:	b8004000 	.word	0xb8004000
 8007f04:	b4002000 	.word	0xb4002000
 8007f08:	ff7fffff 	.word	0xff7fffff
 8007f0c:	feffffff 	.word	0xfeffffff
 8007f10:	ffbfffff 	.word	0xffbfffff
 8007f14:	687b      	ldr	r3, [r7, #4]
 8007f16:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007f18:	2220      	movs	r2, #32
 8007f1a:	431a      	orrs	r2, r3
 8007f1c:	687b      	ldr	r3, [r7, #4]
 8007f1e:	659a      	str	r2, [r3, #88]	; 0x58
 8007f20:	2317      	movs	r3, #23
 8007f22:	18fb      	adds	r3, r7, r3
 8007f24:	2201      	movs	r2, #1
 8007f26:	701a      	strb	r2, [r3, #0]
 8007f28:	687b      	ldr	r3, [r7, #4]
 8007f2a:	2254      	movs	r2, #84	; 0x54
 8007f2c:	2100      	movs	r1, #0
 8007f2e:	5499      	strb	r1, [r3, r2]
 8007f30:	2317      	movs	r3, #23
 8007f32:	18fb      	adds	r3, r7, r3
 8007f34:	781b      	ldrb	r3, [r3, #0]
 8007f36:	0018      	movs	r0, r3
 8007f38:	46bd      	mov	sp, r7
 8007f3a:	b006      	add	sp, #24
 8007f3c:	bd80      	pop	{r7, pc}
 8007f3e:	46c0      	nop			; (mov r8, r8)

08007f40 <ADC_Enable>:
 8007f40:	b580      	push	{r7, lr}
 8007f42:	b084      	sub	sp, #16
 8007f44:	af00      	add	r7, sp, #0
 8007f46:	6078      	str	r0, [r7, #4]
 8007f48:	2300      	movs	r3, #0
 8007f4a:	60bb      	str	r3, [r7, #8]
 8007f4c:	687b      	ldr	r3, [r7, #4]
 8007f4e:	681b      	ldr	r3, [r3, #0]
 8007f50:	0018      	movs	r0, r3
 8007f52:	f7ff fbe1 	bl	8007718 <LL_ADC_IsEnabled>
 8007f56:	1e03      	subs	r3, r0, #0
 8007f58:	d000      	beq.n	8007f5c <ADC_Enable+0x1c>
 8007f5a:	e069      	b.n	8008030 <ADC_Enable+0xf0>
 8007f5c:	687b      	ldr	r3, [r7, #4]
 8007f5e:	681b      	ldr	r3, [r3, #0]
 8007f60:	689b      	ldr	r3, [r3, #8]
 8007f62:	4a36      	ldr	r2, [pc, #216]	; (800803c <ADC_Enable+0xfc>)
 8007f64:	4013      	ands	r3, r2
 8007f66:	d00d      	beq.n	8007f84 <ADC_Enable+0x44>
 8007f68:	687b      	ldr	r3, [r7, #4]
 8007f6a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007f6c:	2210      	movs	r2, #16
 8007f6e:	431a      	orrs	r2, r3
 8007f70:	687b      	ldr	r3, [r7, #4]
 8007f72:	659a      	str	r2, [r3, #88]	; 0x58
 8007f74:	687b      	ldr	r3, [r7, #4]
 8007f76:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007f78:	2201      	movs	r2, #1
 8007f7a:	431a      	orrs	r2, r3
 8007f7c:	687b      	ldr	r3, [r7, #4]
 8007f7e:	65da      	str	r2, [r3, #92]	; 0x5c
 8007f80:	2301      	movs	r3, #1
 8007f82:	e056      	b.n	8008032 <ADC_Enable+0xf2>
 8007f84:	687b      	ldr	r3, [r7, #4]
 8007f86:	681b      	ldr	r3, [r3, #0]
 8007f88:	0018      	movs	r0, r3
 8007f8a:	f7ff fba1 	bl	80076d0 <LL_ADC_Enable>
 8007f8e:	4b2c      	ldr	r3, [pc, #176]	; (8008040 <ADC_Enable+0x100>)
 8007f90:	0018      	movs	r0, r3
 8007f92:	f7ff fad5 	bl	8007540 <LL_ADC_GetCommonPathInternalCh>
 8007f96:	0002      	movs	r2, r0
 8007f98:	2380      	movs	r3, #128	; 0x80
 8007f9a:	041b      	lsls	r3, r3, #16
 8007f9c:	4013      	ands	r3, r2
 8007f9e:	d00f      	beq.n	8007fc0 <ADC_Enable+0x80>
 8007fa0:	4b28      	ldr	r3, [pc, #160]	; (8008044 <ADC_Enable+0x104>)
 8007fa2:	681b      	ldr	r3, [r3, #0]
 8007fa4:	4928      	ldr	r1, [pc, #160]	; (8008048 <ADC_Enable+0x108>)
 8007fa6:	0018      	movs	r0, r3
 8007fa8:	f7fe f922 	bl	80061f0 <__udivsi3>
 8007fac:	0003      	movs	r3, r0
 8007fae:	3301      	adds	r3, #1
 8007fb0:	60bb      	str	r3, [r7, #8]
 8007fb2:	e002      	b.n	8007fba <ADC_Enable+0x7a>
 8007fb4:	68bb      	ldr	r3, [r7, #8]
 8007fb6:	3b01      	subs	r3, #1
 8007fb8:	60bb      	str	r3, [r7, #8]
 8007fba:	68bb      	ldr	r3, [r7, #8]
 8007fbc:	2b00      	cmp	r3, #0
 8007fbe:	d1f9      	bne.n	8007fb4 <ADC_Enable+0x74>
 8007fc0:	687b      	ldr	r3, [r7, #4]
 8007fc2:	7e5b      	ldrb	r3, [r3, #25]
 8007fc4:	2b01      	cmp	r3, #1
 8007fc6:	d033      	beq.n	8008030 <ADC_Enable+0xf0>
 8007fc8:	f7ff fa62 	bl	8007490 <HAL_GetTick>
 8007fcc:	0003      	movs	r3, r0
 8007fce:	60fb      	str	r3, [r7, #12]
 8007fd0:	e027      	b.n	8008022 <ADC_Enable+0xe2>
 8007fd2:	687b      	ldr	r3, [r7, #4]
 8007fd4:	681b      	ldr	r3, [r3, #0]
 8007fd6:	0018      	movs	r0, r3
 8007fd8:	f7ff fb9e 	bl	8007718 <LL_ADC_IsEnabled>
 8007fdc:	1e03      	subs	r3, r0, #0
 8007fde:	d104      	bne.n	8007fea <ADC_Enable+0xaa>
 8007fe0:	687b      	ldr	r3, [r7, #4]
 8007fe2:	681b      	ldr	r3, [r3, #0]
 8007fe4:	0018      	movs	r0, r3
 8007fe6:	f7ff fb73 	bl	80076d0 <LL_ADC_Enable>
 8007fea:	f7ff fa51 	bl	8007490 <HAL_GetTick>
 8007fee:	0002      	movs	r2, r0
 8007ff0:	68fb      	ldr	r3, [r7, #12]
 8007ff2:	1ad3      	subs	r3, r2, r3
 8007ff4:	2b02      	cmp	r3, #2
 8007ff6:	d914      	bls.n	8008022 <ADC_Enable+0xe2>
 8007ff8:	687b      	ldr	r3, [r7, #4]
 8007ffa:	681b      	ldr	r3, [r3, #0]
 8007ffc:	681b      	ldr	r3, [r3, #0]
 8007ffe:	2201      	movs	r2, #1
 8008000:	4013      	ands	r3, r2
 8008002:	2b01      	cmp	r3, #1
 8008004:	d00d      	beq.n	8008022 <ADC_Enable+0xe2>
 8008006:	687b      	ldr	r3, [r7, #4]
 8008008:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800800a:	2210      	movs	r2, #16
 800800c:	431a      	orrs	r2, r3
 800800e:	687b      	ldr	r3, [r7, #4]
 8008010:	659a      	str	r2, [r3, #88]	; 0x58
 8008012:	687b      	ldr	r3, [r7, #4]
 8008014:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008016:	2201      	movs	r2, #1
 8008018:	431a      	orrs	r2, r3
 800801a:	687b      	ldr	r3, [r7, #4]
 800801c:	65da      	str	r2, [r3, #92]	; 0x5c
 800801e:	2301      	movs	r3, #1
 8008020:	e007      	b.n	8008032 <ADC_Enable+0xf2>
 8008022:	687b      	ldr	r3, [r7, #4]
 8008024:	681b      	ldr	r3, [r3, #0]
 8008026:	681b      	ldr	r3, [r3, #0]
 8008028:	2201      	movs	r2, #1
 800802a:	4013      	ands	r3, r2
 800802c:	2b01      	cmp	r3, #1
 800802e:	d1d0      	bne.n	8007fd2 <ADC_Enable+0x92>
 8008030:	2300      	movs	r3, #0
 8008032:	0018      	movs	r0, r3
 8008034:	46bd      	mov	sp, r7
 8008036:	b004      	add	sp, #16
 8008038:	bd80      	pop	{r7, pc}
 800803a:	46c0      	nop			; (mov r8, r8)
 800803c:	80000017 	.word	0x80000017
 8008040:	40012708 	.word	0x40012708
 8008044:	20000004 	.word	0x20000004
 8008048:	00030d40 	.word	0x00030d40

0800804c <ADC_Disable>:
 800804c:	b580      	push	{r7, lr}
 800804e:	b084      	sub	sp, #16
 8008050:	af00      	add	r7, sp, #0
 8008052:	6078      	str	r0, [r7, #4]
 8008054:	687b      	ldr	r3, [r7, #4]
 8008056:	681b      	ldr	r3, [r3, #0]
 8008058:	0018      	movs	r0, r3
 800805a:	f7ff fb6e 	bl	800773a <LL_ADC_IsDisableOngoing>
 800805e:	0003      	movs	r3, r0
 8008060:	60fb      	str	r3, [r7, #12]
 8008062:	687b      	ldr	r3, [r7, #4]
 8008064:	681b      	ldr	r3, [r3, #0]
 8008066:	0018      	movs	r0, r3
 8008068:	f7ff fb56 	bl	8007718 <LL_ADC_IsEnabled>
 800806c:	1e03      	subs	r3, r0, #0
 800806e:	d046      	beq.n	80080fe <ADC_Disable+0xb2>
 8008070:	68fb      	ldr	r3, [r7, #12]
 8008072:	2b00      	cmp	r3, #0
 8008074:	d143      	bne.n	80080fe <ADC_Disable+0xb2>
 8008076:	687b      	ldr	r3, [r7, #4]
 8008078:	681b      	ldr	r3, [r3, #0]
 800807a:	689b      	ldr	r3, [r3, #8]
 800807c:	2205      	movs	r2, #5
 800807e:	4013      	ands	r3, r2
 8008080:	2b01      	cmp	r3, #1
 8008082:	d10d      	bne.n	80080a0 <ADC_Disable+0x54>
 8008084:	687b      	ldr	r3, [r7, #4]
 8008086:	681b      	ldr	r3, [r3, #0]
 8008088:	0018      	movs	r0, r3
 800808a:	f7ff fb33 	bl	80076f4 <LL_ADC_Disable>
 800808e:	687b      	ldr	r3, [r7, #4]
 8008090:	681b      	ldr	r3, [r3, #0]
 8008092:	2203      	movs	r2, #3
 8008094:	601a      	str	r2, [r3, #0]
 8008096:	f7ff f9fb 	bl	8007490 <HAL_GetTick>
 800809a:	0003      	movs	r3, r0
 800809c:	60bb      	str	r3, [r7, #8]
 800809e:	e028      	b.n	80080f2 <ADC_Disable+0xa6>
 80080a0:	687b      	ldr	r3, [r7, #4]
 80080a2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80080a4:	2210      	movs	r2, #16
 80080a6:	431a      	orrs	r2, r3
 80080a8:	687b      	ldr	r3, [r7, #4]
 80080aa:	659a      	str	r2, [r3, #88]	; 0x58
 80080ac:	687b      	ldr	r3, [r7, #4]
 80080ae:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80080b0:	2201      	movs	r2, #1
 80080b2:	431a      	orrs	r2, r3
 80080b4:	687b      	ldr	r3, [r7, #4]
 80080b6:	65da      	str	r2, [r3, #92]	; 0x5c
 80080b8:	2301      	movs	r3, #1
 80080ba:	e021      	b.n	8008100 <ADC_Disable+0xb4>
 80080bc:	f7ff f9e8 	bl	8007490 <HAL_GetTick>
 80080c0:	0002      	movs	r2, r0
 80080c2:	68bb      	ldr	r3, [r7, #8]
 80080c4:	1ad3      	subs	r3, r2, r3
 80080c6:	2b02      	cmp	r3, #2
 80080c8:	d913      	bls.n	80080f2 <ADC_Disable+0xa6>
 80080ca:	687b      	ldr	r3, [r7, #4]
 80080cc:	681b      	ldr	r3, [r3, #0]
 80080ce:	689b      	ldr	r3, [r3, #8]
 80080d0:	2201      	movs	r2, #1
 80080d2:	4013      	ands	r3, r2
 80080d4:	d00d      	beq.n	80080f2 <ADC_Disable+0xa6>
 80080d6:	687b      	ldr	r3, [r7, #4]
 80080d8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80080da:	2210      	movs	r2, #16
 80080dc:	431a      	orrs	r2, r3
 80080de:	687b      	ldr	r3, [r7, #4]
 80080e0:	659a      	str	r2, [r3, #88]	; 0x58
 80080e2:	687b      	ldr	r3, [r7, #4]
 80080e4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80080e6:	2201      	movs	r2, #1
 80080e8:	431a      	orrs	r2, r3
 80080ea:	687b      	ldr	r3, [r7, #4]
 80080ec:	65da      	str	r2, [r3, #92]	; 0x5c
 80080ee:	2301      	movs	r3, #1
 80080f0:	e006      	b.n	8008100 <ADC_Disable+0xb4>
 80080f2:	687b      	ldr	r3, [r7, #4]
 80080f4:	681b      	ldr	r3, [r3, #0]
 80080f6:	689b      	ldr	r3, [r3, #8]
 80080f8:	2201      	movs	r2, #1
 80080fa:	4013      	ands	r3, r2
 80080fc:	d1de      	bne.n	80080bc <ADC_Disable+0x70>
 80080fe:	2300      	movs	r3, #0
 8008100:	0018      	movs	r0, r3
 8008102:	46bd      	mov	sp, r7
 8008104:	b004      	add	sp, #16
 8008106:	bd80      	pop	{r7, pc}

08008108 <LL_ADC_GetCommonClock>:
 8008108:	b580      	push	{r7, lr}
 800810a:	b082      	sub	sp, #8
 800810c:	af00      	add	r7, sp, #0
 800810e:	6078      	str	r0, [r7, #4]
 8008110:	687b      	ldr	r3, [r7, #4]
 8008112:	681a      	ldr	r2, [r3, #0]
 8008114:	23f0      	movs	r3, #240	; 0xf0
 8008116:	039b      	lsls	r3, r3, #14
 8008118:	4013      	ands	r3, r2
 800811a:	0018      	movs	r0, r3
 800811c:	46bd      	mov	sp, r7
 800811e:	b002      	add	sp, #8
 8008120:	bd80      	pop	{r7, pc}

08008122 <LL_ADC_GetClock>:
 8008122:	b580      	push	{r7, lr}
 8008124:	b082      	sub	sp, #8
 8008126:	af00      	add	r7, sp, #0
 8008128:	6078      	str	r0, [r7, #4]
 800812a:	687b      	ldr	r3, [r7, #4]
 800812c:	691b      	ldr	r3, [r3, #16]
 800812e:	0f9b      	lsrs	r3, r3, #30
 8008130:	079b      	lsls	r3, r3, #30
 8008132:	0018      	movs	r0, r3
 8008134:	46bd      	mov	sp, r7
 8008136:	b002      	add	sp, #8
 8008138:	bd80      	pop	{r7, pc}

0800813a <LL_ADC_SetCalibrationFactor>:
 800813a:	b580      	push	{r7, lr}
 800813c:	b082      	sub	sp, #8
 800813e:	af00      	add	r7, sp, #0
 8008140:	6078      	str	r0, [r7, #4]
 8008142:	6039      	str	r1, [r7, #0]
 8008144:	687b      	ldr	r3, [r7, #4]
 8008146:	22b4      	movs	r2, #180	; 0xb4
 8008148:	589b      	ldr	r3, [r3, r2]
 800814a:	227f      	movs	r2, #127	; 0x7f
 800814c:	4393      	bics	r3, r2
 800814e:	001a      	movs	r2, r3
 8008150:	683b      	ldr	r3, [r7, #0]
 8008152:	431a      	orrs	r2, r3
 8008154:	687b      	ldr	r3, [r7, #4]
 8008156:	21b4      	movs	r1, #180	; 0xb4
 8008158:	505a      	str	r2, [r3, r1]
 800815a:	46c0      	nop			; (mov r8, r8)
 800815c:	46bd      	mov	sp, r7
 800815e:	b002      	add	sp, #8
 8008160:	bd80      	pop	{r7, pc}

08008162 <LL_ADC_GetCalibrationFactor>:
 8008162:	b580      	push	{r7, lr}
 8008164:	b082      	sub	sp, #8
 8008166:	af00      	add	r7, sp, #0
 8008168:	6078      	str	r0, [r7, #4]
 800816a:	687b      	ldr	r3, [r7, #4]
 800816c:	22b4      	movs	r2, #180	; 0xb4
 800816e:	589b      	ldr	r3, [r3, r2]
 8008170:	227f      	movs	r2, #127	; 0x7f
 8008172:	4013      	ands	r3, r2
 8008174:	0018      	movs	r0, r3
 8008176:	46bd      	mov	sp, r7
 8008178:	b002      	add	sp, #8
 800817a:	bd80      	pop	{r7, pc}

0800817c <LL_ADC_Enable>:
 800817c:	b580      	push	{r7, lr}
 800817e:	b082      	sub	sp, #8
 8008180:	af00      	add	r7, sp, #0
 8008182:	6078      	str	r0, [r7, #4]
 8008184:	687b      	ldr	r3, [r7, #4]
 8008186:	689b      	ldr	r3, [r3, #8]
 8008188:	4a04      	ldr	r2, [pc, #16]	; (800819c <LL_ADC_Enable+0x20>)
 800818a:	4013      	ands	r3, r2
 800818c:	2201      	movs	r2, #1
 800818e:	431a      	orrs	r2, r3
 8008190:	687b      	ldr	r3, [r7, #4]
 8008192:	609a      	str	r2, [r3, #8]
 8008194:	46c0      	nop			; (mov r8, r8)
 8008196:	46bd      	mov	sp, r7
 8008198:	b002      	add	sp, #8
 800819a:	bd80      	pop	{r7, pc}
 800819c:	7fffffe8 	.word	0x7fffffe8

080081a0 <LL_ADC_Disable>:
 80081a0:	b580      	push	{r7, lr}
 80081a2:	b082      	sub	sp, #8
 80081a4:	af00      	add	r7, sp, #0
 80081a6:	6078      	str	r0, [r7, #4]
 80081a8:	687b      	ldr	r3, [r7, #4]
 80081aa:	689b      	ldr	r3, [r3, #8]
 80081ac:	4a04      	ldr	r2, [pc, #16]	; (80081c0 <LL_ADC_Disable+0x20>)
 80081ae:	4013      	ands	r3, r2
 80081b0:	2202      	movs	r2, #2
 80081b2:	431a      	orrs	r2, r3
 80081b4:	687b      	ldr	r3, [r7, #4]
 80081b6:	609a      	str	r2, [r3, #8]
 80081b8:	46c0      	nop			; (mov r8, r8)
 80081ba:	46bd      	mov	sp, r7
 80081bc:	b002      	add	sp, #8
 80081be:	bd80      	pop	{r7, pc}
 80081c0:	7fffffe8 	.word	0x7fffffe8

080081c4 <LL_ADC_IsEnabled>:
 80081c4:	b580      	push	{r7, lr}
 80081c6:	b082      	sub	sp, #8
 80081c8:	af00      	add	r7, sp, #0
 80081ca:	6078      	str	r0, [r7, #4]
 80081cc:	687b      	ldr	r3, [r7, #4]
 80081ce:	689b      	ldr	r3, [r3, #8]
 80081d0:	2201      	movs	r2, #1
 80081d2:	4013      	ands	r3, r2
 80081d4:	2b01      	cmp	r3, #1
 80081d6:	d101      	bne.n	80081dc <LL_ADC_IsEnabled+0x18>
 80081d8:	2301      	movs	r3, #1
 80081da:	e000      	b.n	80081de <LL_ADC_IsEnabled+0x1a>
 80081dc:	2300      	movs	r3, #0
 80081de:	0018      	movs	r0, r3
 80081e0:	46bd      	mov	sp, r7
 80081e2:	b002      	add	sp, #8
 80081e4:	bd80      	pop	{r7, pc}
	...

080081e8 <LL_ADC_StartCalibration>:
 80081e8:	b580      	push	{r7, lr}
 80081ea:	b082      	sub	sp, #8
 80081ec:	af00      	add	r7, sp, #0
 80081ee:	6078      	str	r0, [r7, #4]
 80081f0:	687b      	ldr	r3, [r7, #4]
 80081f2:	689b      	ldr	r3, [r3, #8]
 80081f4:	4a05      	ldr	r2, [pc, #20]	; (800820c <LL_ADC_StartCalibration+0x24>)
 80081f6:	4013      	ands	r3, r2
 80081f8:	2280      	movs	r2, #128	; 0x80
 80081fa:	0612      	lsls	r2, r2, #24
 80081fc:	431a      	orrs	r2, r3
 80081fe:	687b      	ldr	r3, [r7, #4]
 8008200:	609a      	str	r2, [r3, #8]
 8008202:	46c0      	nop			; (mov r8, r8)
 8008204:	46bd      	mov	sp, r7
 8008206:	b002      	add	sp, #8
 8008208:	bd80      	pop	{r7, pc}
 800820a:	46c0      	nop			; (mov r8, r8)
 800820c:	7fffffe8 	.word	0x7fffffe8

08008210 <LL_ADC_IsCalibrationOnGoing>:
 8008210:	b580      	push	{r7, lr}
 8008212:	b082      	sub	sp, #8
 8008214:	af00      	add	r7, sp, #0
 8008216:	6078      	str	r0, [r7, #4]
 8008218:	687b      	ldr	r3, [r7, #4]
 800821a:	689b      	ldr	r3, [r3, #8]
 800821c:	0fdb      	lsrs	r3, r3, #31
 800821e:	07da      	lsls	r2, r3, #31
 8008220:	2380      	movs	r3, #128	; 0x80
 8008222:	061b      	lsls	r3, r3, #24
 8008224:	429a      	cmp	r2, r3
 8008226:	d101      	bne.n	800822c <LL_ADC_IsCalibrationOnGoing+0x1c>
 8008228:	2301      	movs	r3, #1
 800822a:	e000      	b.n	800822e <LL_ADC_IsCalibrationOnGoing+0x1e>
 800822c:	2300      	movs	r3, #0
 800822e:	0018      	movs	r0, r3
 8008230:	46bd      	mov	sp, r7
 8008232:	b002      	add	sp, #8
 8008234:	bd80      	pop	{r7, pc}
	...

08008238 <HAL_ADCEx_Calibration_Start>:
 8008238:	b590      	push	{r4, r7, lr}
 800823a:	b08b      	sub	sp, #44	; 0x2c
 800823c:	af00      	add	r7, sp, #0
 800823e:	6078      	str	r0, [r7, #4]
 8008240:	2300      	movs	r3, #0
 8008242:	60fb      	str	r3, [r7, #12]
 8008244:	2300      	movs	r3, #0
 8008246:	623b      	str	r3, [r7, #32]
 8008248:	687b      	ldr	r3, [r7, #4]
 800824a:	2254      	movs	r2, #84	; 0x54
 800824c:	5c9b      	ldrb	r3, [r3, r2]
 800824e:	2b01      	cmp	r3, #1
 8008250:	d101      	bne.n	8008256 <HAL_ADCEx_Calibration_Start+0x1e>
 8008252:	2302      	movs	r3, #2
 8008254:	e0dd      	b.n	8008412 <HAL_ADCEx_Calibration_Start+0x1da>
 8008256:	687b      	ldr	r3, [r7, #4]
 8008258:	2254      	movs	r2, #84	; 0x54
 800825a:	2101      	movs	r1, #1
 800825c:	5499      	strb	r1, [r3, r2]
 800825e:	231f      	movs	r3, #31
 8008260:	18fc      	adds	r4, r7, r3
 8008262:	687b      	ldr	r3, [r7, #4]
 8008264:	0018      	movs	r0, r3
 8008266:	f7ff fef1 	bl	800804c <ADC_Disable>
 800826a:	0003      	movs	r3, r0
 800826c:	7023      	strb	r3, [r4, #0]
 800826e:	687b      	ldr	r3, [r7, #4]
 8008270:	681b      	ldr	r3, [r3, #0]
 8008272:	0018      	movs	r0, r3
 8008274:	f7ff ffa6 	bl	80081c4 <LL_ADC_IsEnabled>
 8008278:	1e03      	subs	r3, r0, #0
 800827a:	d000      	beq.n	800827e <HAL_ADCEx_Calibration_Start+0x46>
 800827c:	e0bc      	b.n	80083f8 <HAL_ADCEx_Calibration_Start+0x1c0>
 800827e:	687b      	ldr	r3, [r7, #4]
 8008280:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008282:	4a66      	ldr	r2, [pc, #408]	; (800841c <HAL_ADCEx_Calibration_Start+0x1e4>)
 8008284:	4013      	ands	r3, r2
 8008286:	2202      	movs	r2, #2
 8008288:	431a      	orrs	r2, r3
 800828a:	687b      	ldr	r3, [r7, #4]
 800828c:	659a      	str	r2, [r3, #88]	; 0x58
 800828e:	687b      	ldr	r3, [r7, #4]
 8008290:	681b      	ldr	r3, [r3, #0]
 8008292:	68db      	ldr	r3, [r3, #12]
 8008294:	4a62      	ldr	r2, [pc, #392]	; (8008420 <HAL_ADCEx_Calibration_Start+0x1e8>)
 8008296:	4013      	ands	r3, r2
 8008298:	61bb      	str	r3, [r7, #24]
 800829a:	687b      	ldr	r3, [r7, #4]
 800829c:	681b      	ldr	r3, [r3, #0]
 800829e:	68da      	ldr	r2, [r3, #12]
 80082a0:	687b      	ldr	r3, [r7, #4]
 80082a2:	681b      	ldr	r3, [r3, #0]
 80082a4:	495f      	ldr	r1, [pc, #380]	; (8008424 <HAL_ADCEx_Calibration_Start+0x1ec>)
 80082a6:	400a      	ands	r2, r1
 80082a8:	60da      	str	r2, [r3, #12]
 80082aa:	2300      	movs	r3, #0
 80082ac:	627b      	str	r3, [r7, #36]	; 0x24
 80082ae:	e02d      	b.n	800830c <HAL_ADCEx_Calibration_Start+0xd4>
 80082b0:	687b      	ldr	r3, [r7, #4]
 80082b2:	681b      	ldr	r3, [r3, #0]
 80082b4:	0018      	movs	r0, r3
 80082b6:	f7ff ff97 	bl	80081e8 <LL_ADC_StartCalibration>
 80082ba:	e014      	b.n	80082e6 <HAL_ADCEx_Calibration_Start+0xae>
 80082bc:	68fb      	ldr	r3, [r7, #12]
 80082be:	3301      	adds	r3, #1
 80082c0:	60fb      	str	r3, [r7, #12]
 80082c2:	68fb      	ldr	r3, [r7, #12]
 80082c4:	4a58      	ldr	r2, [pc, #352]	; (8008428 <HAL_ADCEx_Calibration_Start+0x1f0>)
 80082c6:	4293      	cmp	r3, r2
 80082c8:	d90d      	bls.n	80082e6 <HAL_ADCEx_Calibration_Start+0xae>
 80082ca:	687b      	ldr	r3, [r7, #4]
 80082cc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80082ce:	2212      	movs	r2, #18
 80082d0:	4393      	bics	r3, r2
 80082d2:	2210      	movs	r2, #16
 80082d4:	431a      	orrs	r2, r3
 80082d6:	687b      	ldr	r3, [r7, #4]
 80082d8:	659a      	str	r2, [r3, #88]	; 0x58
 80082da:	687b      	ldr	r3, [r7, #4]
 80082dc:	2254      	movs	r2, #84	; 0x54
 80082de:	2100      	movs	r1, #0
 80082e0:	5499      	strb	r1, [r3, r2]
 80082e2:	2301      	movs	r3, #1
 80082e4:	e095      	b.n	8008412 <HAL_ADCEx_Calibration_Start+0x1da>
 80082e6:	687b      	ldr	r3, [r7, #4]
 80082e8:	681b      	ldr	r3, [r3, #0]
 80082ea:	0018      	movs	r0, r3
 80082ec:	f7ff ff90 	bl	8008210 <LL_ADC_IsCalibrationOnGoing>
 80082f0:	1e03      	subs	r3, r0, #0
 80082f2:	d1e3      	bne.n	80082bc <HAL_ADCEx_Calibration_Start+0x84>
 80082f4:	687b      	ldr	r3, [r7, #4]
 80082f6:	681b      	ldr	r3, [r3, #0]
 80082f8:	0018      	movs	r0, r3
 80082fa:	f7ff ff32 	bl	8008162 <LL_ADC_GetCalibrationFactor>
 80082fe:	0002      	movs	r2, r0
 8008300:	6a3b      	ldr	r3, [r7, #32]
 8008302:	189b      	adds	r3, r3, r2
 8008304:	623b      	str	r3, [r7, #32]
 8008306:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008308:	3301      	adds	r3, #1
 800830a:	627b      	str	r3, [r7, #36]	; 0x24
 800830c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800830e:	2b07      	cmp	r3, #7
 8008310:	d9ce      	bls.n	80082b0 <HAL_ADCEx_Calibration_Start+0x78>
 8008312:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8008314:	6a38      	ldr	r0, [r7, #32]
 8008316:	f7fd ff6b 	bl	80061f0 <__udivsi3>
 800831a:	0003      	movs	r3, r0
 800831c:	623b      	str	r3, [r7, #32]
 800831e:	687b      	ldr	r3, [r7, #4]
 8008320:	681b      	ldr	r3, [r3, #0]
 8008322:	0018      	movs	r0, r3
 8008324:	f7ff ff2a 	bl	800817c <LL_ADC_Enable>
 8008328:	687b      	ldr	r3, [r7, #4]
 800832a:	681b      	ldr	r3, [r3, #0]
 800832c:	0018      	movs	r0, r3
 800832e:	f7ff fef8 	bl	8008122 <LL_ADC_GetClock>
 8008332:	1e03      	subs	r3, r0, #0
 8008334:	d11b      	bne.n	800836e <HAL_ADCEx_Calibration_Start+0x136>
 8008336:	4b3d      	ldr	r3, [pc, #244]	; (800842c <HAL_ADCEx_Calibration_Start+0x1f4>)
 8008338:	0018      	movs	r0, r3
 800833a:	f7ff fee5 	bl	8008108 <LL_ADC_GetCommonClock>
 800833e:	0003      	movs	r3, r0
 8008340:	617b      	str	r3, [r7, #20]
 8008342:	697a      	ldr	r2, [r7, #20]
 8008344:	23e0      	movs	r3, #224	; 0xe0
 8008346:	035b      	lsls	r3, r3, #13
 8008348:	429a      	cmp	r2, r3
 800834a:	d310      	bcc.n	800836e <HAL_ADCEx_Calibration_Start+0x136>
 800834c:	697b      	ldr	r3, [r7, #20]
 800834e:	0c9b      	lsrs	r3, r3, #18
 8008350:	3b03      	subs	r3, #3
 8008352:	2201      	movs	r2, #1
 8008354:	409a      	lsls	r2, r3
 8008356:	0013      	movs	r3, r2
 8008358:	60bb      	str	r3, [r7, #8]
 800835a:	68bb      	ldr	r3, [r7, #8]
 800835c:	085b      	lsrs	r3, r3, #1
 800835e:	60bb      	str	r3, [r7, #8]
 8008360:	e002      	b.n	8008368 <HAL_ADCEx_Calibration_Start+0x130>
 8008362:	68bb      	ldr	r3, [r7, #8]
 8008364:	3b01      	subs	r3, #1
 8008366:	60bb      	str	r3, [r7, #8]
 8008368:	68bb      	ldr	r3, [r7, #8]
 800836a:	2b00      	cmp	r3, #0
 800836c:	d1f9      	bne.n	8008362 <HAL_ADCEx_Calibration_Start+0x12a>
 800836e:	687b      	ldr	r3, [r7, #4]
 8008370:	681b      	ldr	r3, [r3, #0]
 8008372:	6a3a      	ldr	r2, [r7, #32]
 8008374:	0011      	movs	r1, r2
 8008376:	0018      	movs	r0, r3
 8008378:	f7ff fedf 	bl	800813a <LL_ADC_SetCalibrationFactor>
 800837c:	687b      	ldr	r3, [r7, #4]
 800837e:	681b      	ldr	r3, [r3, #0]
 8008380:	0018      	movs	r0, r3
 8008382:	f7ff ff0d 	bl	80081a0 <LL_ADC_Disable>
 8008386:	f7ff f883 	bl	8007490 <HAL_GetTick>
 800838a:	0003      	movs	r3, r0
 800838c:	613b      	str	r3, [r7, #16]
 800838e:	e01b      	b.n	80083c8 <HAL_ADCEx_Calibration_Start+0x190>
 8008390:	f7ff f87e 	bl	8007490 <HAL_GetTick>
 8008394:	0002      	movs	r2, r0
 8008396:	693b      	ldr	r3, [r7, #16]
 8008398:	1ad3      	subs	r3, r2, r3
 800839a:	2b02      	cmp	r3, #2
 800839c:	d914      	bls.n	80083c8 <HAL_ADCEx_Calibration_Start+0x190>
 800839e:	687b      	ldr	r3, [r7, #4]
 80083a0:	681b      	ldr	r3, [r3, #0]
 80083a2:	0018      	movs	r0, r3
 80083a4:	f7ff ff0e 	bl	80081c4 <LL_ADC_IsEnabled>
 80083a8:	1e03      	subs	r3, r0, #0
 80083aa:	d00d      	beq.n	80083c8 <HAL_ADCEx_Calibration_Start+0x190>
 80083ac:	687b      	ldr	r3, [r7, #4]
 80083ae:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80083b0:	2210      	movs	r2, #16
 80083b2:	431a      	orrs	r2, r3
 80083b4:	687b      	ldr	r3, [r7, #4]
 80083b6:	659a      	str	r2, [r3, #88]	; 0x58
 80083b8:	687b      	ldr	r3, [r7, #4]
 80083ba:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80083bc:	2201      	movs	r2, #1
 80083be:	431a      	orrs	r2, r3
 80083c0:	687b      	ldr	r3, [r7, #4]
 80083c2:	65da      	str	r2, [r3, #92]	; 0x5c
 80083c4:	2301      	movs	r3, #1
 80083c6:	e024      	b.n	8008412 <HAL_ADCEx_Calibration_Start+0x1da>
 80083c8:	687b      	ldr	r3, [r7, #4]
 80083ca:	681b      	ldr	r3, [r3, #0]
 80083cc:	0018      	movs	r0, r3
 80083ce:	f7ff fef9 	bl	80081c4 <LL_ADC_IsEnabled>
 80083d2:	1e03      	subs	r3, r0, #0
 80083d4:	d1dc      	bne.n	8008390 <HAL_ADCEx_Calibration_Start+0x158>
 80083d6:	687b      	ldr	r3, [r7, #4]
 80083d8:	681b      	ldr	r3, [r3, #0]
 80083da:	68d9      	ldr	r1, [r3, #12]
 80083dc:	687b      	ldr	r3, [r7, #4]
 80083de:	681b      	ldr	r3, [r3, #0]
 80083e0:	69ba      	ldr	r2, [r7, #24]
 80083e2:	430a      	orrs	r2, r1
 80083e4:	60da      	str	r2, [r3, #12]
 80083e6:	687b      	ldr	r3, [r7, #4]
 80083e8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80083ea:	2203      	movs	r2, #3
 80083ec:	4393      	bics	r3, r2
 80083ee:	2201      	movs	r2, #1
 80083f0:	431a      	orrs	r2, r3
 80083f2:	687b      	ldr	r3, [r7, #4]
 80083f4:	659a      	str	r2, [r3, #88]	; 0x58
 80083f6:	e005      	b.n	8008404 <HAL_ADCEx_Calibration_Start+0x1cc>
 80083f8:	687b      	ldr	r3, [r7, #4]
 80083fa:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80083fc:	2210      	movs	r2, #16
 80083fe:	431a      	orrs	r2, r3
 8008400:	687b      	ldr	r3, [r7, #4]
 8008402:	659a      	str	r2, [r3, #88]	; 0x58
 8008404:	687b      	ldr	r3, [r7, #4]
 8008406:	2254      	movs	r2, #84	; 0x54
 8008408:	2100      	movs	r1, #0
 800840a:	5499      	strb	r1, [r3, r2]
 800840c:	231f      	movs	r3, #31
 800840e:	18fb      	adds	r3, r7, r3
 8008410:	781b      	ldrb	r3, [r3, #0]
 8008412:	0018      	movs	r0, r3
 8008414:	46bd      	mov	sp, r7
 8008416:	b00b      	add	sp, #44	; 0x2c
 8008418:	bd90      	pop	{r4, r7, pc}
 800841a:	46c0      	nop			; (mov r8, r8)
 800841c:	fffffefd 	.word	0xfffffefd
 8008420:	00008003 	.word	0x00008003
 8008424:	ffff7ffc 	.word	0xffff7ffc
 8008428:	0002f1ff 	.word	0x0002f1ff
 800842c:	40012708 	.word	0x40012708

08008430 <__NVIC_EnableIRQ>:
 8008430:	b580      	push	{r7, lr}
 8008432:	b082      	sub	sp, #8
 8008434:	af00      	add	r7, sp, #0
 8008436:	0002      	movs	r2, r0
 8008438:	1dfb      	adds	r3, r7, #7
 800843a:	701a      	strb	r2, [r3, #0]
 800843c:	1dfb      	adds	r3, r7, #7
 800843e:	781b      	ldrb	r3, [r3, #0]
 8008440:	2b7f      	cmp	r3, #127	; 0x7f
 8008442:	d809      	bhi.n	8008458 <__NVIC_EnableIRQ+0x28>
 8008444:	1dfb      	adds	r3, r7, #7
 8008446:	781b      	ldrb	r3, [r3, #0]
 8008448:	001a      	movs	r2, r3
 800844a:	231f      	movs	r3, #31
 800844c:	401a      	ands	r2, r3
 800844e:	4b04      	ldr	r3, [pc, #16]	; (8008460 <__NVIC_EnableIRQ+0x30>)
 8008450:	2101      	movs	r1, #1
 8008452:	4091      	lsls	r1, r2
 8008454:	000a      	movs	r2, r1
 8008456:	601a      	str	r2, [r3, #0]
 8008458:	46c0      	nop			; (mov r8, r8)
 800845a:	46bd      	mov	sp, r7
 800845c:	b002      	add	sp, #8
 800845e:	bd80      	pop	{r7, pc}
 8008460:	e000e100 	.word	0xe000e100

08008464 <__NVIC_SetPriority>:
 8008464:	b590      	push	{r4, r7, lr}
 8008466:	b083      	sub	sp, #12
 8008468:	af00      	add	r7, sp, #0
 800846a:	0002      	movs	r2, r0
 800846c:	6039      	str	r1, [r7, #0]
 800846e:	1dfb      	adds	r3, r7, #7
 8008470:	701a      	strb	r2, [r3, #0]
 8008472:	1dfb      	adds	r3, r7, #7
 8008474:	781b      	ldrb	r3, [r3, #0]
 8008476:	2b7f      	cmp	r3, #127	; 0x7f
 8008478:	d828      	bhi.n	80084cc <__NVIC_SetPriority+0x68>
 800847a:	4a2f      	ldr	r2, [pc, #188]	; (8008538 <__NVIC_SetPriority+0xd4>)
 800847c:	1dfb      	adds	r3, r7, #7
 800847e:	781b      	ldrb	r3, [r3, #0]
 8008480:	b25b      	sxtb	r3, r3
 8008482:	089b      	lsrs	r3, r3, #2
 8008484:	33c0      	adds	r3, #192	; 0xc0
 8008486:	009b      	lsls	r3, r3, #2
 8008488:	589b      	ldr	r3, [r3, r2]
 800848a:	1dfa      	adds	r2, r7, #7
 800848c:	7812      	ldrb	r2, [r2, #0]
 800848e:	0011      	movs	r1, r2
 8008490:	2203      	movs	r2, #3
 8008492:	400a      	ands	r2, r1
 8008494:	00d2      	lsls	r2, r2, #3
 8008496:	21ff      	movs	r1, #255	; 0xff
 8008498:	4091      	lsls	r1, r2
 800849a:	000a      	movs	r2, r1
 800849c:	43d2      	mvns	r2, r2
 800849e:	401a      	ands	r2, r3
 80084a0:	0011      	movs	r1, r2
 80084a2:	683b      	ldr	r3, [r7, #0]
 80084a4:	019b      	lsls	r3, r3, #6
 80084a6:	22ff      	movs	r2, #255	; 0xff
 80084a8:	401a      	ands	r2, r3
 80084aa:	1dfb      	adds	r3, r7, #7
 80084ac:	781b      	ldrb	r3, [r3, #0]
 80084ae:	0018      	movs	r0, r3
 80084b0:	2303      	movs	r3, #3
 80084b2:	4003      	ands	r3, r0
 80084b4:	00db      	lsls	r3, r3, #3
 80084b6:	409a      	lsls	r2, r3
 80084b8:	481f      	ldr	r0, [pc, #124]	; (8008538 <__NVIC_SetPriority+0xd4>)
 80084ba:	1dfb      	adds	r3, r7, #7
 80084bc:	781b      	ldrb	r3, [r3, #0]
 80084be:	b25b      	sxtb	r3, r3
 80084c0:	089b      	lsrs	r3, r3, #2
 80084c2:	430a      	orrs	r2, r1
 80084c4:	33c0      	adds	r3, #192	; 0xc0
 80084c6:	009b      	lsls	r3, r3, #2
 80084c8:	501a      	str	r2, [r3, r0]
 80084ca:	e031      	b.n	8008530 <__NVIC_SetPriority+0xcc>
 80084cc:	4a1b      	ldr	r2, [pc, #108]	; (800853c <__NVIC_SetPriority+0xd8>)
 80084ce:	1dfb      	adds	r3, r7, #7
 80084d0:	781b      	ldrb	r3, [r3, #0]
 80084d2:	0019      	movs	r1, r3
 80084d4:	230f      	movs	r3, #15
 80084d6:	400b      	ands	r3, r1
 80084d8:	3b08      	subs	r3, #8
 80084da:	089b      	lsrs	r3, r3, #2
 80084dc:	3306      	adds	r3, #6
 80084de:	009b      	lsls	r3, r3, #2
 80084e0:	18d3      	adds	r3, r2, r3
 80084e2:	3304      	adds	r3, #4
 80084e4:	681b      	ldr	r3, [r3, #0]
 80084e6:	1dfa      	adds	r2, r7, #7
 80084e8:	7812      	ldrb	r2, [r2, #0]
 80084ea:	0011      	movs	r1, r2
 80084ec:	2203      	movs	r2, #3
 80084ee:	400a      	ands	r2, r1
 80084f0:	00d2      	lsls	r2, r2, #3
 80084f2:	21ff      	movs	r1, #255	; 0xff
 80084f4:	4091      	lsls	r1, r2
 80084f6:	000a      	movs	r2, r1
 80084f8:	43d2      	mvns	r2, r2
 80084fa:	401a      	ands	r2, r3
 80084fc:	0011      	movs	r1, r2
 80084fe:	683b      	ldr	r3, [r7, #0]
 8008500:	019b      	lsls	r3, r3, #6
 8008502:	22ff      	movs	r2, #255	; 0xff
 8008504:	401a      	ands	r2, r3
 8008506:	1dfb      	adds	r3, r7, #7
 8008508:	781b      	ldrb	r3, [r3, #0]
 800850a:	0018      	movs	r0, r3
 800850c:	2303      	movs	r3, #3
 800850e:	4003      	ands	r3, r0
 8008510:	00db      	lsls	r3, r3, #3
 8008512:	409a      	lsls	r2, r3
 8008514:	4809      	ldr	r0, [pc, #36]	; (800853c <__NVIC_SetPriority+0xd8>)
 8008516:	1dfb      	adds	r3, r7, #7
 8008518:	781b      	ldrb	r3, [r3, #0]
 800851a:	001c      	movs	r4, r3
 800851c:	230f      	movs	r3, #15
 800851e:	4023      	ands	r3, r4
 8008520:	3b08      	subs	r3, #8
 8008522:	089b      	lsrs	r3, r3, #2
 8008524:	430a      	orrs	r2, r1
 8008526:	3306      	adds	r3, #6
 8008528:	009b      	lsls	r3, r3, #2
 800852a:	18c3      	adds	r3, r0, r3
 800852c:	3304      	adds	r3, #4
 800852e:	601a      	str	r2, [r3, #0]
 8008530:	46c0      	nop			; (mov r8, r8)
 8008532:	46bd      	mov	sp, r7
 8008534:	b003      	add	sp, #12
 8008536:	bd90      	pop	{r4, r7, pc}
 8008538:	e000e100 	.word	0xe000e100
 800853c:	e000ed00 	.word	0xe000ed00

08008540 <__NVIC_SystemReset>:
 8008540:	b580      	push	{r7, lr}
 8008542:	af00      	add	r7, sp, #0
 8008544:	f3bf 8f4f 	dsb	sy
 8008548:	46c0      	nop			; (mov r8, r8)
 800854a:	4b04      	ldr	r3, [pc, #16]	; (800855c <__NVIC_SystemReset+0x1c>)
 800854c:	4a04      	ldr	r2, [pc, #16]	; (8008560 <__NVIC_SystemReset+0x20>)
 800854e:	60da      	str	r2, [r3, #12]
 8008550:	f3bf 8f4f 	dsb	sy
 8008554:	46c0      	nop			; (mov r8, r8)
 8008556:	46c0      	nop			; (mov r8, r8)
 8008558:	e7fd      	b.n	8008556 <__NVIC_SystemReset+0x16>
 800855a:	46c0      	nop			; (mov r8, r8)
 800855c:	e000ed00 	.word	0xe000ed00
 8008560:	05fa0004 	.word	0x05fa0004

08008564 <HAL_NVIC_SetPriority>:
 8008564:	b580      	push	{r7, lr}
 8008566:	b084      	sub	sp, #16
 8008568:	af00      	add	r7, sp, #0
 800856a:	60b9      	str	r1, [r7, #8]
 800856c:	607a      	str	r2, [r7, #4]
 800856e:	210f      	movs	r1, #15
 8008570:	187b      	adds	r3, r7, r1
 8008572:	1c02      	adds	r2, r0, #0
 8008574:	701a      	strb	r2, [r3, #0]
 8008576:	68ba      	ldr	r2, [r7, #8]
 8008578:	187b      	adds	r3, r7, r1
 800857a:	781b      	ldrb	r3, [r3, #0]
 800857c:	b25b      	sxtb	r3, r3
 800857e:	0011      	movs	r1, r2
 8008580:	0018      	movs	r0, r3
 8008582:	f7ff ff6f 	bl	8008464 <__NVIC_SetPriority>
 8008586:	46c0      	nop			; (mov r8, r8)
 8008588:	46bd      	mov	sp, r7
 800858a:	b004      	add	sp, #16
 800858c:	bd80      	pop	{r7, pc}

0800858e <HAL_NVIC_EnableIRQ>:
 800858e:	b580      	push	{r7, lr}
 8008590:	b082      	sub	sp, #8
 8008592:	af00      	add	r7, sp, #0
 8008594:	0002      	movs	r2, r0
 8008596:	1dfb      	adds	r3, r7, #7
 8008598:	701a      	strb	r2, [r3, #0]
 800859a:	1dfb      	adds	r3, r7, #7
 800859c:	781b      	ldrb	r3, [r3, #0]
 800859e:	b25b      	sxtb	r3, r3
 80085a0:	0018      	movs	r0, r3
 80085a2:	f7ff ff45 	bl	8008430 <__NVIC_EnableIRQ>
 80085a6:	46c0      	nop			; (mov r8, r8)
 80085a8:	46bd      	mov	sp, r7
 80085aa:	b002      	add	sp, #8
 80085ac:	bd80      	pop	{r7, pc}

080085ae <HAL_NVIC_SystemReset>:
 80085ae:	b580      	push	{r7, lr}
 80085b0:	af00      	add	r7, sp, #0
 80085b2:	f7ff ffc5 	bl	8008540 <__NVIC_SystemReset>
	...

080085b8 <HAL_FLASH_Program>:
 80085b8:	b5b0      	push	{r4, r5, r7, lr}
 80085ba:	b086      	sub	sp, #24
 80085bc:	af00      	add	r7, sp, #0
 80085be:	60f8      	str	r0, [r7, #12]
 80085c0:	60b9      	str	r1, [r7, #8]
 80085c2:	603a      	str	r2, [r7, #0]
 80085c4:	607b      	str	r3, [r7, #4]
 80085c6:	4b21      	ldr	r3, [pc, #132]	; (800864c <HAL_FLASH_Program+0x94>)
 80085c8:	781b      	ldrb	r3, [r3, #0]
 80085ca:	2b01      	cmp	r3, #1
 80085cc:	d101      	bne.n	80085d2 <HAL_FLASH_Program+0x1a>
 80085ce:	2302      	movs	r3, #2
 80085d0:	e038      	b.n	8008644 <HAL_FLASH_Program+0x8c>
 80085d2:	4b1e      	ldr	r3, [pc, #120]	; (800864c <HAL_FLASH_Program+0x94>)
 80085d4:	2201      	movs	r2, #1
 80085d6:	701a      	strb	r2, [r3, #0]
 80085d8:	4b1c      	ldr	r3, [pc, #112]	; (800864c <HAL_FLASH_Program+0x94>)
 80085da:	2200      	movs	r2, #0
 80085dc:	605a      	str	r2, [r3, #4]
 80085de:	2517      	movs	r5, #23
 80085e0:	197c      	adds	r4, r7, r5
 80085e2:	23fa      	movs	r3, #250	; 0xfa
 80085e4:	009b      	lsls	r3, r3, #2
 80085e6:	0018      	movs	r0, r3
 80085e8:	f000 f87a 	bl	80086e0 <FLASH_WaitForLastOperation>
 80085ec:	0003      	movs	r3, r0
 80085ee:	7023      	strb	r3, [r4, #0]
 80085f0:	197b      	adds	r3, r7, r5
 80085f2:	781b      	ldrb	r3, [r3, #0]
 80085f4:	2b00      	cmp	r3, #0
 80085f6:	d11f      	bne.n	8008638 <HAL_FLASH_Program+0x80>
 80085f8:	68fb      	ldr	r3, [r7, #12]
 80085fa:	2b01      	cmp	r3, #1
 80085fc:	d106      	bne.n	800860c <HAL_FLASH_Program+0x54>
 80085fe:	683a      	ldr	r2, [r7, #0]
 8008600:	687b      	ldr	r3, [r7, #4]
 8008602:	68b9      	ldr	r1, [r7, #8]
 8008604:	0008      	movs	r0, r1
 8008606:	f000 f8b9 	bl	800877c <FLASH_Program_DoubleWord>
 800860a:	e005      	b.n	8008618 <HAL_FLASH_Program+0x60>
 800860c:	683a      	ldr	r2, [r7, #0]
 800860e:	68bb      	ldr	r3, [r7, #8]
 8008610:	0011      	movs	r1, r2
 8008612:	0018      	movs	r0, r3
 8008614:	f010 fa24 	bl	8018a60 <__FLASH_Program_Fast_veneer>
 8008618:	2317      	movs	r3, #23
 800861a:	18fc      	adds	r4, r7, r3
 800861c:	23fa      	movs	r3, #250	; 0xfa
 800861e:	009b      	lsls	r3, r3, #2
 8008620:	0018      	movs	r0, r3
 8008622:	f000 f85d 	bl	80086e0 <FLASH_WaitForLastOperation>
 8008626:	0003      	movs	r3, r0
 8008628:	7023      	strb	r3, [r4, #0]
 800862a:	4b09      	ldr	r3, [pc, #36]	; (8008650 <HAL_FLASH_Program+0x98>)
 800862c:	695a      	ldr	r2, [r3, #20]
 800862e:	68fb      	ldr	r3, [r7, #12]
 8008630:	43d9      	mvns	r1, r3
 8008632:	4b07      	ldr	r3, [pc, #28]	; (8008650 <HAL_FLASH_Program+0x98>)
 8008634:	400a      	ands	r2, r1
 8008636:	615a      	str	r2, [r3, #20]
 8008638:	4b04      	ldr	r3, [pc, #16]	; (800864c <HAL_FLASH_Program+0x94>)
 800863a:	2200      	movs	r2, #0
 800863c:	701a      	strb	r2, [r3, #0]
 800863e:	2317      	movs	r3, #23
 8008640:	18fb      	adds	r3, r7, r3
 8008642:	781b      	ldrb	r3, [r3, #0]
 8008644:	0018      	movs	r0, r3
 8008646:	46bd      	mov	sp, r7
 8008648:	b006      	add	sp, #24
 800864a:	bdb0      	pop	{r4, r5, r7, pc}
 800864c:	20000290 	.word	0x20000290
 8008650:	40022000 	.word	0x40022000

08008654 <HAL_FLASH_Unlock>:
 8008654:	b580      	push	{r7, lr}
 8008656:	b082      	sub	sp, #8
 8008658:	af00      	add	r7, sp, #0
 800865a:	1dfb      	adds	r3, r7, #7
 800865c:	2200      	movs	r2, #0
 800865e:	701a      	strb	r2, [r3, #0]
 8008660:	4b0b      	ldr	r3, [pc, #44]	; (8008690 <HAL_FLASH_Unlock+0x3c>)
 8008662:	695b      	ldr	r3, [r3, #20]
 8008664:	2b00      	cmp	r3, #0
 8008666:	da0c      	bge.n	8008682 <HAL_FLASH_Unlock+0x2e>
 8008668:	4b09      	ldr	r3, [pc, #36]	; (8008690 <HAL_FLASH_Unlock+0x3c>)
 800866a:	4a0a      	ldr	r2, [pc, #40]	; (8008694 <HAL_FLASH_Unlock+0x40>)
 800866c:	609a      	str	r2, [r3, #8]
 800866e:	4b08      	ldr	r3, [pc, #32]	; (8008690 <HAL_FLASH_Unlock+0x3c>)
 8008670:	4a09      	ldr	r2, [pc, #36]	; (8008698 <HAL_FLASH_Unlock+0x44>)
 8008672:	609a      	str	r2, [r3, #8]
 8008674:	4b06      	ldr	r3, [pc, #24]	; (8008690 <HAL_FLASH_Unlock+0x3c>)
 8008676:	695b      	ldr	r3, [r3, #20]
 8008678:	2b00      	cmp	r3, #0
 800867a:	da02      	bge.n	8008682 <HAL_FLASH_Unlock+0x2e>
 800867c:	1dfb      	adds	r3, r7, #7
 800867e:	2201      	movs	r2, #1
 8008680:	701a      	strb	r2, [r3, #0]
 8008682:	1dfb      	adds	r3, r7, #7
 8008684:	781b      	ldrb	r3, [r3, #0]
 8008686:	0018      	movs	r0, r3
 8008688:	46bd      	mov	sp, r7
 800868a:	b002      	add	sp, #8
 800868c:	bd80      	pop	{r7, pc}
 800868e:	46c0      	nop			; (mov r8, r8)
 8008690:	40022000 	.word	0x40022000
 8008694:	45670123 	.word	0x45670123
 8008698:	cdef89ab 	.word	0xcdef89ab

0800869c <HAL_FLASH_Lock>:
 800869c:	b580      	push	{r7, lr}
 800869e:	b082      	sub	sp, #8
 80086a0:	af00      	add	r7, sp, #0
 80086a2:	1dfb      	adds	r3, r7, #7
 80086a4:	2201      	movs	r2, #1
 80086a6:	701a      	strb	r2, [r3, #0]
 80086a8:	23fa      	movs	r3, #250	; 0xfa
 80086aa:	009b      	lsls	r3, r3, #2
 80086ac:	0018      	movs	r0, r3
 80086ae:	f000 f817 	bl	80086e0 <FLASH_WaitForLastOperation>
 80086b2:	4b0a      	ldr	r3, [pc, #40]	; (80086dc <HAL_FLASH_Lock+0x40>)
 80086b4:	695a      	ldr	r2, [r3, #20]
 80086b6:	4b09      	ldr	r3, [pc, #36]	; (80086dc <HAL_FLASH_Lock+0x40>)
 80086b8:	2180      	movs	r1, #128	; 0x80
 80086ba:	0609      	lsls	r1, r1, #24
 80086bc:	430a      	orrs	r2, r1
 80086be:	615a      	str	r2, [r3, #20]
 80086c0:	4b06      	ldr	r3, [pc, #24]	; (80086dc <HAL_FLASH_Lock+0x40>)
 80086c2:	695b      	ldr	r3, [r3, #20]
 80086c4:	2b00      	cmp	r3, #0
 80086c6:	da02      	bge.n	80086ce <HAL_FLASH_Lock+0x32>
 80086c8:	1dfb      	adds	r3, r7, #7
 80086ca:	2200      	movs	r2, #0
 80086cc:	701a      	strb	r2, [r3, #0]
 80086ce:	1dfb      	adds	r3, r7, #7
 80086d0:	781b      	ldrb	r3, [r3, #0]
 80086d2:	0018      	movs	r0, r3
 80086d4:	46bd      	mov	sp, r7
 80086d6:	b002      	add	sp, #8
 80086d8:	bd80      	pop	{r7, pc}
 80086da:	46c0      	nop			; (mov r8, r8)
 80086dc:	40022000 	.word	0x40022000

080086e0 <FLASH_WaitForLastOperation>:
 80086e0:	b580      	push	{r7, lr}
 80086e2:	b084      	sub	sp, #16
 80086e4:	af00      	add	r7, sp, #0
 80086e6:	6078      	str	r0, [r7, #4]
 80086e8:	f7fe fed2 	bl	8007490 <HAL_GetTick>
 80086ec:	0003      	movs	r3, r0
 80086ee:	60fb      	str	r3, [r7, #12]
 80086f0:	23c0      	movs	r3, #192	; 0xc0
 80086f2:	029b      	lsls	r3, r3, #10
 80086f4:	60bb      	str	r3, [r7, #8]
 80086f6:	e00c      	b.n	8008712 <FLASH_WaitForLastOperation+0x32>
 80086f8:	687b      	ldr	r3, [r7, #4]
 80086fa:	3301      	adds	r3, #1
 80086fc:	d009      	beq.n	8008712 <FLASH_WaitForLastOperation+0x32>
 80086fe:	f7fe fec7 	bl	8007490 <HAL_GetTick>
 8008702:	0002      	movs	r2, r0
 8008704:	68fb      	ldr	r3, [r7, #12]
 8008706:	1ad3      	subs	r3, r2, r3
 8008708:	687a      	ldr	r2, [r7, #4]
 800870a:	429a      	cmp	r2, r3
 800870c:	d801      	bhi.n	8008712 <FLASH_WaitForLastOperation+0x32>
 800870e:	2303      	movs	r3, #3
 8008710:	e028      	b.n	8008764 <FLASH_WaitForLastOperation+0x84>
 8008712:	4b16      	ldr	r3, [pc, #88]	; (800876c <FLASH_WaitForLastOperation+0x8c>)
 8008714:	691b      	ldr	r3, [r3, #16]
 8008716:	68ba      	ldr	r2, [r7, #8]
 8008718:	4013      	ands	r3, r2
 800871a:	d1ed      	bne.n	80086f8 <FLASH_WaitForLastOperation+0x18>
 800871c:	4b13      	ldr	r3, [pc, #76]	; (800876c <FLASH_WaitForLastOperation+0x8c>)
 800871e:	691b      	ldr	r3, [r3, #16]
 8008720:	4a13      	ldr	r2, [pc, #76]	; (8008770 <FLASH_WaitForLastOperation+0x90>)
 8008722:	4013      	ands	r3, r2
 8008724:	60bb      	str	r3, [r7, #8]
 8008726:	4b11      	ldr	r3, [pc, #68]	; (800876c <FLASH_WaitForLastOperation+0x8c>)
 8008728:	4a12      	ldr	r2, [pc, #72]	; (8008774 <FLASH_WaitForLastOperation+0x94>)
 800872a:	611a      	str	r2, [r3, #16]
 800872c:	68bb      	ldr	r3, [r7, #8]
 800872e:	2b00      	cmp	r3, #0
 8008730:	d011      	beq.n	8008756 <FLASH_WaitForLastOperation+0x76>
 8008732:	4b11      	ldr	r3, [pc, #68]	; (8008778 <FLASH_WaitForLastOperation+0x98>)
 8008734:	68ba      	ldr	r2, [r7, #8]
 8008736:	605a      	str	r2, [r3, #4]
 8008738:	2301      	movs	r3, #1
 800873a:	e013      	b.n	8008764 <FLASH_WaitForLastOperation+0x84>
 800873c:	687b      	ldr	r3, [r7, #4]
 800873e:	3301      	adds	r3, #1
 8008740:	d009      	beq.n	8008756 <FLASH_WaitForLastOperation+0x76>
 8008742:	f7fe fea5 	bl	8007490 <HAL_GetTick>
 8008746:	0002      	movs	r2, r0
 8008748:	68fb      	ldr	r3, [r7, #12]
 800874a:	1ad3      	subs	r3, r2, r3
 800874c:	687a      	ldr	r2, [r7, #4]
 800874e:	429a      	cmp	r2, r3
 8008750:	d801      	bhi.n	8008756 <FLASH_WaitForLastOperation+0x76>
 8008752:	2303      	movs	r3, #3
 8008754:	e006      	b.n	8008764 <FLASH_WaitForLastOperation+0x84>
 8008756:	4b05      	ldr	r3, [pc, #20]	; (800876c <FLASH_WaitForLastOperation+0x8c>)
 8008758:	691a      	ldr	r2, [r3, #16]
 800875a:	2380      	movs	r3, #128	; 0x80
 800875c:	02db      	lsls	r3, r3, #11
 800875e:	4013      	ands	r3, r2
 8008760:	d1ec      	bne.n	800873c <FLASH_WaitForLastOperation+0x5c>
 8008762:	2300      	movs	r3, #0
 8008764:	0018      	movs	r0, r3
 8008766:	46bd      	mov	sp, r7
 8008768:	b004      	add	sp, #16
 800876a:	bd80      	pop	{r7, pc}
 800876c:	40022000 	.word	0x40022000
 8008770:	0000c3fa 	.word	0x0000c3fa
 8008774:	0008c3fb 	.word	0x0008c3fb
 8008778:	20000290 	.word	0x20000290

0800877c <FLASH_Program_DoubleWord>:
 800877c:	b5b0      	push	{r4, r5, r7, lr}
 800877e:	b084      	sub	sp, #16
 8008780:	af00      	add	r7, sp, #0
 8008782:	60f8      	str	r0, [r7, #12]
 8008784:	603a      	str	r2, [r7, #0]
 8008786:	607b      	str	r3, [r7, #4]
 8008788:	4b0b      	ldr	r3, [pc, #44]	; (80087b8 <FLASH_Program_DoubleWord+0x3c>)
 800878a:	695a      	ldr	r2, [r3, #20]
 800878c:	4b0a      	ldr	r3, [pc, #40]	; (80087b8 <FLASH_Program_DoubleWord+0x3c>)
 800878e:	2101      	movs	r1, #1
 8008790:	430a      	orrs	r2, r1
 8008792:	615a      	str	r2, [r3, #20]
 8008794:	68fb      	ldr	r3, [r7, #12]
 8008796:	683a      	ldr	r2, [r7, #0]
 8008798:	601a      	str	r2, [r3, #0]
 800879a:	f3bf 8f6f 	isb	sy
 800879e:	46c0      	nop			; (mov r8, r8)
 80087a0:	687b      	ldr	r3, [r7, #4]
 80087a2:	001c      	movs	r4, r3
 80087a4:	2300      	movs	r3, #0
 80087a6:	001d      	movs	r5, r3
 80087a8:	68fb      	ldr	r3, [r7, #12]
 80087aa:	3304      	adds	r3, #4
 80087ac:	0022      	movs	r2, r4
 80087ae:	601a      	str	r2, [r3, #0]
 80087b0:	46c0      	nop			; (mov r8, r8)
 80087b2:	46bd      	mov	sp, r7
 80087b4:	b004      	add	sp, #16
 80087b6:	bdb0      	pop	{r4, r5, r7, pc}
 80087b8:	40022000 	.word	0x40022000

080087bc <HAL_FLASHEx_Erase>:
 80087bc:	b5b0      	push	{r4, r5, r7, lr}
 80087be:	b084      	sub	sp, #16
 80087c0:	af00      	add	r7, sp, #0
 80087c2:	6078      	str	r0, [r7, #4]
 80087c4:	6039      	str	r1, [r7, #0]
 80087c6:	4b33      	ldr	r3, [pc, #204]	; (8008894 <HAL_FLASHEx_Erase+0xd8>)
 80087c8:	781b      	ldrb	r3, [r3, #0]
 80087ca:	2b01      	cmp	r3, #1
 80087cc:	d101      	bne.n	80087d2 <HAL_FLASHEx_Erase+0x16>
 80087ce:	2302      	movs	r3, #2
 80087d0:	e05c      	b.n	800888c <HAL_FLASHEx_Erase+0xd0>
 80087d2:	4b30      	ldr	r3, [pc, #192]	; (8008894 <HAL_FLASHEx_Erase+0xd8>)
 80087d4:	2201      	movs	r2, #1
 80087d6:	701a      	strb	r2, [r3, #0]
 80087d8:	4b2e      	ldr	r3, [pc, #184]	; (8008894 <HAL_FLASHEx_Erase+0xd8>)
 80087da:	2200      	movs	r2, #0
 80087dc:	605a      	str	r2, [r3, #4]
 80087de:	250f      	movs	r5, #15
 80087e0:	197c      	adds	r4, r7, r5
 80087e2:	23fa      	movs	r3, #250	; 0xfa
 80087e4:	009b      	lsls	r3, r3, #2
 80087e6:	0018      	movs	r0, r3
 80087e8:	f7ff ff7a 	bl	80086e0 <FLASH_WaitForLastOperation>
 80087ec:	0003      	movs	r3, r0
 80087ee:	7023      	strb	r3, [r4, #0]
 80087f0:	002c      	movs	r4, r5
 80087f2:	193b      	adds	r3, r7, r4
 80087f4:	781b      	ldrb	r3, [r3, #0]
 80087f6:	2b00      	cmp	r3, #0
 80087f8:	d142      	bne.n	8008880 <HAL_FLASHEx_Erase+0xc4>
 80087fa:	687b      	ldr	r3, [r7, #4]
 80087fc:	681b      	ldr	r3, [r3, #0]
 80087fe:	2b04      	cmp	r3, #4
 8008800:	d10d      	bne.n	800881e <HAL_FLASHEx_Erase+0x62>
 8008802:	687b      	ldr	r3, [r7, #4]
 8008804:	685b      	ldr	r3, [r3, #4]
 8008806:	0018      	movs	r0, r3
 8008808:	f000 f848 	bl	800889c <FLASH_MassErase>
 800880c:	193c      	adds	r4, r7, r4
 800880e:	23fa      	movs	r3, #250	; 0xfa
 8008810:	009b      	lsls	r3, r3, #2
 8008812:	0018      	movs	r0, r3
 8008814:	f7ff ff64 	bl	80086e0 <FLASH_WaitForLastOperation>
 8008818:	0003      	movs	r3, r0
 800881a:	7023      	strb	r3, [r4, #0]
 800881c:	e030      	b.n	8008880 <HAL_FLASHEx_Erase+0xc4>
 800881e:	683b      	ldr	r3, [r7, #0]
 8008820:	2201      	movs	r2, #1
 8008822:	4252      	negs	r2, r2
 8008824:	601a      	str	r2, [r3, #0]
 8008826:	687b      	ldr	r3, [r7, #4]
 8008828:	689b      	ldr	r3, [r3, #8]
 800882a:	60bb      	str	r3, [r7, #8]
 800882c:	e01a      	b.n	8008864 <HAL_FLASHEx_Erase+0xa8>
 800882e:	687b      	ldr	r3, [r7, #4]
 8008830:	685b      	ldr	r3, [r3, #4]
 8008832:	68ba      	ldr	r2, [r7, #8]
 8008834:	0011      	movs	r1, r2
 8008836:	0018      	movs	r0, r3
 8008838:	f000 f844 	bl	80088c4 <FLASH_PageErase>
 800883c:	250f      	movs	r5, #15
 800883e:	197c      	adds	r4, r7, r5
 8008840:	23fa      	movs	r3, #250	; 0xfa
 8008842:	009b      	lsls	r3, r3, #2
 8008844:	0018      	movs	r0, r3
 8008846:	f7ff ff4b 	bl	80086e0 <FLASH_WaitForLastOperation>
 800884a:	0003      	movs	r3, r0
 800884c:	7023      	strb	r3, [r4, #0]
 800884e:	197b      	adds	r3, r7, r5
 8008850:	781b      	ldrb	r3, [r3, #0]
 8008852:	2b00      	cmp	r3, #0
 8008854:	d003      	beq.n	800885e <HAL_FLASHEx_Erase+0xa2>
 8008856:	683b      	ldr	r3, [r7, #0]
 8008858:	68ba      	ldr	r2, [r7, #8]
 800885a:	601a      	str	r2, [r3, #0]
 800885c:	e00a      	b.n	8008874 <HAL_FLASHEx_Erase+0xb8>
 800885e:	68bb      	ldr	r3, [r7, #8]
 8008860:	3301      	adds	r3, #1
 8008862:	60bb      	str	r3, [r7, #8]
 8008864:	687b      	ldr	r3, [r7, #4]
 8008866:	689a      	ldr	r2, [r3, #8]
 8008868:	687b      	ldr	r3, [r7, #4]
 800886a:	68db      	ldr	r3, [r3, #12]
 800886c:	18d3      	adds	r3, r2, r3
 800886e:	68ba      	ldr	r2, [r7, #8]
 8008870:	429a      	cmp	r2, r3
 8008872:	d3dc      	bcc.n	800882e <HAL_FLASHEx_Erase+0x72>
 8008874:	4b08      	ldr	r3, [pc, #32]	; (8008898 <HAL_FLASHEx_Erase+0xdc>)
 8008876:	695a      	ldr	r2, [r3, #20]
 8008878:	4b07      	ldr	r3, [pc, #28]	; (8008898 <HAL_FLASHEx_Erase+0xdc>)
 800887a:	2102      	movs	r1, #2
 800887c:	438a      	bics	r2, r1
 800887e:	615a      	str	r2, [r3, #20]
 8008880:	4b04      	ldr	r3, [pc, #16]	; (8008894 <HAL_FLASHEx_Erase+0xd8>)
 8008882:	2200      	movs	r2, #0
 8008884:	701a      	strb	r2, [r3, #0]
 8008886:	230f      	movs	r3, #15
 8008888:	18fb      	adds	r3, r7, r3
 800888a:	781b      	ldrb	r3, [r3, #0]
 800888c:	0018      	movs	r0, r3
 800888e:	46bd      	mov	sp, r7
 8008890:	b004      	add	sp, #16
 8008892:	bdb0      	pop	{r4, r5, r7, pc}
 8008894:	20000290 	.word	0x20000290
 8008898:	40022000 	.word	0x40022000

0800889c <FLASH_MassErase>:
 800889c:	b580      	push	{r7, lr}
 800889e:	b082      	sub	sp, #8
 80088a0:	af00      	add	r7, sp, #0
 80088a2:	6078      	str	r0, [r7, #4]
 80088a4:	4b06      	ldr	r3, [pc, #24]	; (80088c0 <FLASH_MassErase+0x24>)
 80088a6:	695a      	ldr	r2, [r3, #20]
 80088a8:	687b      	ldr	r3, [r7, #4]
 80088aa:	431a      	orrs	r2, r3
 80088ac:	4b04      	ldr	r3, [pc, #16]	; (80088c0 <FLASH_MassErase+0x24>)
 80088ae:	2180      	movs	r1, #128	; 0x80
 80088b0:	0249      	lsls	r1, r1, #9
 80088b2:	430a      	orrs	r2, r1
 80088b4:	615a      	str	r2, [r3, #20]
 80088b6:	46c0      	nop			; (mov r8, r8)
 80088b8:	46bd      	mov	sp, r7
 80088ba:	b002      	add	sp, #8
 80088bc:	bd80      	pop	{r7, pc}
 80088be:	46c0      	nop			; (mov r8, r8)
 80088c0:	40022000 	.word	0x40022000

080088c4 <FLASH_PageErase>:
 80088c4:	b580      	push	{r7, lr}
 80088c6:	b084      	sub	sp, #16
 80088c8:	af00      	add	r7, sp, #0
 80088ca:	6078      	str	r0, [r7, #4]
 80088cc:	6039      	str	r1, [r7, #0]
 80088ce:	4b0f      	ldr	r3, [pc, #60]	; (800890c <FLASH_PageErase+0x48>)
 80088d0:	695b      	ldr	r3, [r3, #20]
 80088d2:	4a0f      	ldr	r2, [pc, #60]	; (8008910 <FLASH_PageErase+0x4c>)
 80088d4:	4013      	ands	r3, r2
 80088d6:	60fb      	str	r3, [r7, #12]
 80088d8:	687b      	ldr	r3, [r7, #4]
 80088da:	2b04      	cmp	r3, #4
 80088dc:	d005      	beq.n	80088ea <FLASH_PageErase+0x26>
 80088de:	68fb      	ldr	r3, [r7, #12]
 80088e0:	2280      	movs	r2, #128	; 0x80
 80088e2:	0192      	lsls	r2, r2, #6
 80088e4:	4313      	orrs	r3, r2
 80088e6:	60fb      	str	r3, [r7, #12]
 80088e8:	e003      	b.n	80088f2 <FLASH_PageErase+0x2e>
 80088ea:	68fb      	ldr	r3, [r7, #12]
 80088ec:	4a09      	ldr	r2, [pc, #36]	; (8008914 <FLASH_PageErase+0x50>)
 80088ee:	4013      	ands	r3, r2
 80088f0:	60fb      	str	r3, [r7, #12]
 80088f2:	683b      	ldr	r3, [r7, #0]
 80088f4:	00da      	lsls	r2, r3, #3
 80088f6:	68fb      	ldr	r3, [r7, #12]
 80088f8:	431a      	orrs	r2, r3
 80088fa:	4b04      	ldr	r3, [pc, #16]	; (800890c <FLASH_PageErase+0x48>)
 80088fc:	4906      	ldr	r1, [pc, #24]	; (8008918 <FLASH_PageErase+0x54>)
 80088fe:	430a      	orrs	r2, r1
 8008900:	615a      	str	r2, [r3, #20]
 8008902:	46c0      	nop			; (mov r8, r8)
 8008904:	46bd      	mov	sp, r7
 8008906:	b004      	add	sp, #16
 8008908:	bd80      	pop	{r7, pc}
 800890a:	46c0      	nop			; (mov r8, r8)
 800890c:	40022000 	.word	0x40022000
 8008910:	ffffe007 	.word	0xffffe007
 8008914:	ffffdfff 	.word	0xffffdfff
 8008918:	00010002 	.word	0x00010002

0800891c <HAL_GPIO_Init>:
 800891c:	b580      	push	{r7, lr}
 800891e:	b086      	sub	sp, #24
 8008920:	af00      	add	r7, sp, #0
 8008922:	6078      	str	r0, [r7, #4]
 8008924:	6039      	str	r1, [r7, #0]
 8008926:	2300      	movs	r3, #0
 8008928:	617b      	str	r3, [r7, #20]
 800892a:	e14d      	b.n	8008bc8 <HAL_GPIO_Init+0x2ac>
 800892c:	683b      	ldr	r3, [r7, #0]
 800892e:	681b      	ldr	r3, [r3, #0]
 8008930:	2101      	movs	r1, #1
 8008932:	697a      	ldr	r2, [r7, #20]
 8008934:	4091      	lsls	r1, r2
 8008936:	000a      	movs	r2, r1
 8008938:	4013      	ands	r3, r2
 800893a:	60fb      	str	r3, [r7, #12]
 800893c:	68fb      	ldr	r3, [r7, #12]
 800893e:	2b00      	cmp	r3, #0
 8008940:	d100      	bne.n	8008944 <HAL_GPIO_Init+0x28>
 8008942:	e13e      	b.n	8008bc2 <HAL_GPIO_Init+0x2a6>
 8008944:	683b      	ldr	r3, [r7, #0]
 8008946:	685b      	ldr	r3, [r3, #4]
 8008948:	2203      	movs	r2, #3
 800894a:	4013      	ands	r3, r2
 800894c:	2b01      	cmp	r3, #1
 800894e:	d005      	beq.n	800895c <HAL_GPIO_Init+0x40>
 8008950:	683b      	ldr	r3, [r7, #0]
 8008952:	685b      	ldr	r3, [r3, #4]
 8008954:	2203      	movs	r2, #3
 8008956:	4013      	ands	r3, r2
 8008958:	2b02      	cmp	r3, #2
 800895a:	d130      	bne.n	80089be <HAL_GPIO_Init+0xa2>
 800895c:	687b      	ldr	r3, [r7, #4]
 800895e:	689b      	ldr	r3, [r3, #8]
 8008960:	613b      	str	r3, [r7, #16]
 8008962:	697b      	ldr	r3, [r7, #20]
 8008964:	005b      	lsls	r3, r3, #1
 8008966:	2203      	movs	r2, #3
 8008968:	409a      	lsls	r2, r3
 800896a:	0013      	movs	r3, r2
 800896c:	43da      	mvns	r2, r3
 800896e:	693b      	ldr	r3, [r7, #16]
 8008970:	4013      	ands	r3, r2
 8008972:	613b      	str	r3, [r7, #16]
 8008974:	683b      	ldr	r3, [r7, #0]
 8008976:	68da      	ldr	r2, [r3, #12]
 8008978:	697b      	ldr	r3, [r7, #20]
 800897a:	005b      	lsls	r3, r3, #1
 800897c:	409a      	lsls	r2, r3
 800897e:	0013      	movs	r3, r2
 8008980:	693a      	ldr	r2, [r7, #16]
 8008982:	4313      	orrs	r3, r2
 8008984:	613b      	str	r3, [r7, #16]
 8008986:	687b      	ldr	r3, [r7, #4]
 8008988:	693a      	ldr	r2, [r7, #16]
 800898a:	609a      	str	r2, [r3, #8]
 800898c:	687b      	ldr	r3, [r7, #4]
 800898e:	685b      	ldr	r3, [r3, #4]
 8008990:	613b      	str	r3, [r7, #16]
 8008992:	2201      	movs	r2, #1
 8008994:	697b      	ldr	r3, [r7, #20]
 8008996:	409a      	lsls	r2, r3
 8008998:	0013      	movs	r3, r2
 800899a:	43da      	mvns	r2, r3
 800899c:	693b      	ldr	r3, [r7, #16]
 800899e:	4013      	ands	r3, r2
 80089a0:	613b      	str	r3, [r7, #16]
 80089a2:	683b      	ldr	r3, [r7, #0]
 80089a4:	685b      	ldr	r3, [r3, #4]
 80089a6:	091b      	lsrs	r3, r3, #4
 80089a8:	2201      	movs	r2, #1
 80089aa:	401a      	ands	r2, r3
 80089ac:	697b      	ldr	r3, [r7, #20]
 80089ae:	409a      	lsls	r2, r3
 80089b0:	0013      	movs	r3, r2
 80089b2:	693a      	ldr	r2, [r7, #16]
 80089b4:	4313      	orrs	r3, r2
 80089b6:	613b      	str	r3, [r7, #16]
 80089b8:	687b      	ldr	r3, [r7, #4]
 80089ba:	693a      	ldr	r2, [r7, #16]
 80089bc:	605a      	str	r2, [r3, #4]
 80089be:	683b      	ldr	r3, [r7, #0]
 80089c0:	685b      	ldr	r3, [r3, #4]
 80089c2:	2203      	movs	r2, #3
 80089c4:	4013      	ands	r3, r2
 80089c6:	2b03      	cmp	r3, #3
 80089c8:	d017      	beq.n	80089fa <HAL_GPIO_Init+0xde>
 80089ca:	687b      	ldr	r3, [r7, #4]
 80089cc:	68db      	ldr	r3, [r3, #12]
 80089ce:	613b      	str	r3, [r7, #16]
 80089d0:	697b      	ldr	r3, [r7, #20]
 80089d2:	005b      	lsls	r3, r3, #1
 80089d4:	2203      	movs	r2, #3
 80089d6:	409a      	lsls	r2, r3
 80089d8:	0013      	movs	r3, r2
 80089da:	43da      	mvns	r2, r3
 80089dc:	693b      	ldr	r3, [r7, #16]
 80089de:	4013      	ands	r3, r2
 80089e0:	613b      	str	r3, [r7, #16]
 80089e2:	683b      	ldr	r3, [r7, #0]
 80089e4:	689a      	ldr	r2, [r3, #8]
 80089e6:	697b      	ldr	r3, [r7, #20]
 80089e8:	005b      	lsls	r3, r3, #1
 80089ea:	409a      	lsls	r2, r3
 80089ec:	0013      	movs	r3, r2
 80089ee:	693a      	ldr	r2, [r7, #16]
 80089f0:	4313      	orrs	r3, r2
 80089f2:	613b      	str	r3, [r7, #16]
 80089f4:	687b      	ldr	r3, [r7, #4]
 80089f6:	693a      	ldr	r2, [r7, #16]
 80089f8:	60da      	str	r2, [r3, #12]
 80089fa:	683b      	ldr	r3, [r7, #0]
 80089fc:	685b      	ldr	r3, [r3, #4]
 80089fe:	2203      	movs	r2, #3
 8008a00:	4013      	ands	r3, r2
 8008a02:	2b02      	cmp	r3, #2
 8008a04:	d123      	bne.n	8008a4e <HAL_GPIO_Init+0x132>
 8008a06:	697b      	ldr	r3, [r7, #20]
 8008a08:	08da      	lsrs	r2, r3, #3
 8008a0a:	687b      	ldr	r3, [r7, #4]
 8008a0c:	3208      	adds	r2, #8
 8008a0e:	0092      	lsls	r2, r2, #2
 8008a10:	58d3      	ldr	r3, [r2, r3]
 8008a12:	613b      	str	r3, [r7, #16]
 8008a14:	697b      	ldr	r3, [r7, #20]
 8008a16:	2207      	movs	r2, #7
 8008a18:	4013      	ands	r3, r2
 8008a1a:	009b      	lsls	r3, r3, #2
 8008a1c:	220f      	movs	r2, #15
 8008a1e:	409a      	lsls	r2, r3
 8008a20:	0013      	movs	r3, r2
 8008a22:	43da      	mvns	r2, r3
 8008a24:	693b      	ldr	r3, [r7, #16]
 8008a26:	4013      	ands	r3, r2
 8008a28:	613b      	str	r3, [r7, #16]
 8008a2a:	683b      	ldr	r3, [r7, #0]
 8008a2c:	691a      	ldr	r2, [r3, #16]
 8008a2e:	697b      	ldr	r3, [r7, #20]
 8008a30:	2107      	movs	r1, #7
 8008a32:	400b      	ands	r3, r1
 8008a34:	009b      	lsls	r3, r3, #2
 8008a36:	409a      	lsls	r2, r3
 8008a38:	0013      	movs	r3, r2
 8008a3a:	693a      	ldr	r2, [r7, #16]
 8008a3c:	4313      	orrs	r3, r2
 8008a3e:	613b      	str	r3, [r7, #16]
 8008a40:	697b      	ldr	r3, [r7, #20]
 8008a42:	08da      	lsrs	r2, r3, #3
 8008a44:	687b      	ldr	r3, [r7, #4]
 8008a46:	3208      	adds	r2, #8
 8008a48:	0092      	lsls	r2, r2, #2
 8008a4a:	6939      	ldr	r1, [r7, #16]
 8008a4c:	50d1      	str	r1, [r2, r3]
 8008a4e:	687b      	ldr	r3, [r7, #4]
 8008a50:	681b      	ldr	r3, [r3, #0]
 8008a52:	613b      	str	r3, [r7, #16]
 8008a54:	697b      	ldr	r3, [r7, #20]
 8008a56:	005b      	lsls	r3, r3, #1
 8008a58:	2203      	movs	r2, #3
 8008a5a:	409a      	lsls	r2, r3
 8008a5c:	0013      	movs	r3, r2
 8008a5e:	43da      	mvns	r2, r3
 8008a60:	693b      	ldr	r3, [r7, #16]
 8008a62:	4013      	ands	r3, r2
 8008a64:	613b      	str	r3, [r7, #16]
 8008a66:	683b      	ldr	r3, [r7, #0]
 8008a68:	685b      	ldr	r3, [r3, #4]
 8008a6a:	2203      	movs	r2, #3
 8008a6c:	401a      	ands	r2, r3
 8008a6e:	697b      	ldr	r3, [r7, #20]
 8008a70:	005b      	lsls	r3, r3, #1
 8008a72:	409a      	lsls	r2, r3
 8008a74:	0013      	movs	r3, r2
 8008a76:	693a      	ldr	r2, [r7, #16]
 8008a78:	4313      	orrs	r3, r2
 8008a7a:	613b      	str	r3, [r7, #16]
 8008a7c:	687b      	ldr	r3, [r7, #4]
 8008a7e:	693a      	ldr	r2, [r7, #16]
 8008a80:	601a      	str	r2, [r3, #0]
 8008a82:	683b      	ldr	r3, [r7, #0]
 8008a84:	685a      	ldr	r2, [r3, #4]
 8008a86:	23c0      	movs	r3, #192	; 0xc0
 8008a88:	029b      	lsls	r3, r3, #10
 8008a8a:	4013      	ands	r3, r2
 8008a8c:	d100      	bne.n	8008a90 <HAL_GPIO_Init+0x174>
 8008a8e:	e098      	b.n	8008bc2 <HAL_GPIO_Init+0x2a6>
 8008a90:	4a53      	ldr	r2, [pc, #332]	; (8008be0 <HAL_GPIO_Init+0x2c4>)
 8008a92:	697b      	ldr	r3, [r7, #20]
 8008a94:	089b      	lsrs	r3, r3, #2
 8008a96:	3318      	adds	r3, #24
 8008a98:	009b      	lsls	r3, r3, #2
 8008a9a:	589b      	ldr	r3, [r3, r2]
 8008a9c:	613b      	str	r3, [r7, #16]
 8008a9e:	697b      	ldr	r3, [r7, #20]
 8008aa0:	2203      	movs	r2, #3
 8008aa2:	4013      	ands	r3, r2
 8008aa4:	00db      	lsls	r3, r3, #3
 8008aa6:	220f      	movs	r2, #15
 8008aa8:	409a      	lsls	r2, r3
 8008aaa:	0013      	movs	r3, r2
 8008aac:	43da      	mvns	r2, r3
 8008aae:	693b      	ldr	r3, [r7, #16]
 8008ab0:	4013      	ands	r3, r2
 8008ab2:	613b      	str	r3, [r7, #16]
 8008ab4:	687a      	ldr	r2, [r7, #4]
 8008ab6:	23a0      	movs	r3, #160	; 0xa0
 8008ab8:	05db      	lsls	r3, r3, #23
 8008aba:	429a      	cmp	r2, r3
 8008abc:	d019      	beq.n	8008af2 <HAL_GPIO_Init+0x1d6>
 8008abe:	687b      	ldr	r3, [r7, #4]
 8008ac0:	4a48      	ldr	r2, [pc, #288]	; (8008be4 <HAL_GPIO_Init+0x2c8>)
 8008ac2:	4293      	cmp	r3, r2
 8008ac4:	d013      	beq.n	8008aee <HAL_GPIO_Init+0x1d2>
 8008ac6:	687b      	ldr	r3, [r7, #4]
 8008ac8:	4a47      	ldr	r2, [pc, #284]	; (8008be8 <HAL_GPIO_Init+0x2cc>)
 8008aca:	4293      	cmp	r3, r2
 8008acc:	d00d      	beq.n	8008aea <HAL_GPIO_Init+0x1ce>
 8008ace:	687b      	ldr	r3, [r7, #4]
 8008ad0:	4a46      	ldr	r2, [pc, #280]	; (8008bec <HAL_GPIO_Init+0x2d0>)
 8008ad2:	4293      	cmp	r3, r2
 8008ad4:	d007      	beq.n	8008ae6 <HAL_GPIO_Init+0x1ca>
 8008ad6:	687b      	ldr	r3, [r7, #4]
 8008ad8:	4a45      	ldr	r2, [pc, #276]	; (8008bf0 <HAL_GPIO_Init+0x2d4>)
 8008ada:	4293      	cmp	r3, r2
 8008adc:	d101      	bne.n	8008ae2 <HAL_GPIO_Init+0x1c6>
 8008ade:	2304      	movs	r3, #4
 8008ae0:	e008      	b.n	8008af4 <HAL_GPIO_Init+0x1d8>
 8008ae2:	2305      	movs	r3, #5
 8008ae4:	e006      	b.n	8008af4 <HAL_GPIO_Init+0x1d8>
 8008ae6:	2303      	movs	r3, #3
 8008ae8:	e004      	b.n	8008af4 <HAL_GPIO_Init+0x1d8>
 8008aea:	2302      	movs	r3, #2
 8008aec:	e002      	b.n	8008af4 <HAL_GPIO_Init+0x1d8>
 8008aee:	2301      	movs	r3, #1
 8008af0:	e000      	b.n	8008af4 <HAL_GPIO_Init+0x1d8>
 8008af2:	2300      	movs	r3, #0
 8008af4:	697a      	ldr	r2, [r7, #20]
 8008af6:	2103      	movs	r1, #3
 8008af8:	400a      	ands	r2, r1
 8008afa:	00d2      	lsls	r2, r2, #3
 8008afc:	4093      	lsls	r3, r2
 8008afe:	693a      	ldr	r2, [r7, #16]
 8008b00:	4313      	orrs	r3, r2
 8008b02:	613b      	str	r3, [r7, #16]
 8008b04:	4936      	ldr	r1, [pc, #216]	; (8008be0 <HAL_GPIO_Init+0x2c4>)
 8008b06:	697b      	ldr	r3, [r7, #20]
 8008b08:	089b      	lsrs	r3, r3, #2
 8008b0a:	3318      	adds	r3, #24
 8008b0c:	009b      	lsls	r3, r3, #2
 8008b0e:	693a      	ldr	r2, [r7, #16]
 8008b10:	505a      	str	r2, [r3, r1]
 8008b12:	4b33      	ldr	r3, [pc, #204]	; (8008be0 <HAL_GPIO_Init+0x2c4>)
 8008b14:	681b      	ldr	r3, [r3, #0]
 8008b16:	613b      	str	r3, [r7, #16]
 8008b18:	68fb      	ldr	r3, [r7, #12]
 8008b1a:	43da      	mvns	r2, r3
 8008b1c:	693b      	ldr	r3, [r7, #16]
 8008b1e:	4013      	ands	r3, r2
 8008b20:	613b      	str	r3, [r7, #16]
 8008b22:	683b      	ldr	r3, [r7, #0]
 8008b24:	685a      	ldr	r2, [r3, #4]
 8008b26:	2380      	movs	r3, #128	; 0x80
 8008b28:	035b      	lsls	r3, r3, #13
 8008b2a:	4013      	ands	r3, r2
 8008b2c:	d003      	beq.n	8008b36 <HAL_GPIO_Init+0x21a>
 8008b2e:	693a      	ldr	r2, [r7, #16]
 8008b30:	68fb      	ldr	r3, [r7, #12]
 8008b32:	4313      	orrs	r3, r2
 8008b34:	613b      	str	r3, [r7, #16]
 8008b36:	4b2a      	ldr	r3, [pc, #168]	; (8008be0 <HAL_GPIO_Init+0x2c4>)
 8008b38:	693a      	ldr	r2, [r7, #16]
 8008b3a:	601a      	str	r2, [r3, #0]
 8008b3c:	4b28      	ldr	r3, [pc, #160]	; (8008be0 <HAL_GPIO_Init+0x2c4>)
 8008b3e:	685b      	ldr	r3, [r3, #4]
 8008b40:	613b      	str	r3, [r7, #16]
 8008b42:	68fb      	ldr	r3, [r7, #12]
 8008b44:	43da      	mvns	r2, r3
 8008b46:	693b      	ldr	r3, [r7, #16]
 8008b48:	4013      	ands	r3, r2
 8008b4a:	613b      	str	r3, [r7, #16]
 8008b4c:	683b      	ldr	r3, [r7, #0]
 8008b4e:	685a      	ldr	r2, [r3, #4]
 8008b50:	2380      	movs	r3, #128	; 0x80
 8008b52:	039b      	lsls	r3, r3, #14
 8008b54:	4013      	ands	r3, r2
 8008b56:	d003      	beq.n	8008b60 <HAL_GPIO_Init+0x244>
 8008b58:	693a      	ldr	r2, [r7, #16]
 8008b5a:	68fb      	ldr	r3, [r7, #12]
 8008b5c:	4313      	orrs	r3, r2
 8008b5e:	613b      	str	r3, [r7, #16]
 8008b60:	4b1f      	ldr	r3, [pc, #124]	; (8008be0 <HAL_GPIO_Init+0x2c4>)
 8008b62:	693a      	ldr	r2, [r7, #16]
 8008b64:	605a      	str	r2, [r3, #4]
 8008b66:	4a1e      	ldr	r2, [pc, #120]	; (8008be0 <HAL_GPIO_Init+0x2c4>)
 8008b68:	2384      	movs	r3, #132	; 0x84
 8008b6a:	58d3      	ldr	r3, [r2, r3]
 8008b6c:	613b      	str	r3, [r7, #16]
 8008b6e:	68fb      	ldr	r3, [r7, #12]
 8008b70:	43da      	mvns	r2, r3
 8008b72:	693b      	ldr	r3, [r7, #16]
 8008b74:	4013      	ands	r3, r2
 8008b76:	613b      	str	r3, [r7, #16]
 8008b78:	683b      	ldr	r3, [r7, #0]
 8008b7a:	685a      	ldr	r2, [r3, #4]
 8008b7c:	2380      	movs	r3, #128	; 0x80
 8008b7e:	029b      	lsls	r3, r3, #10
 8008b80:	4013      	ands	r3, r2
 8008b82:	d003      	beq.n	8008b8c <HAL_GPIO_Init+0x270>
 8008b84:	693a      	ldr	r2, [r7, #16]
 8008b86:	68fb      	ldr	r3, [r7, #12]
 8008b88:	4313      	orrs	r3, r2
 8008b8a:	613b      	str	r3, [r7, #16]
 8008b8c:	4914      	ldr	r1, [pc, #80]	; (8008be0 <HAL_GPIO_Init+0x2c4>)
 8008b8e:	2284      	movs	r2, #132	; 0x84
 8008b90:	693b      	ldr	r3, [r7, #16]
 8008b92:	508b      	str	r3, [r1, r2]
 8008b94:	4a12      	ldr	r2, [pc, #72]	; (8008be0 <HAL_GPIO_Init+0x2c4>)
 8008b96:	2380      	movs	r3, #128	; 0x80
 8008b98:	58d3      	ldr	r3, [r2, r3]
 8008b9a:	613b      	str	r3, [r7, #16]
 8008b9c:	68fb      	ldr	r3, [r7, #12]
 8008b9e:	43da      	mvns	r2, r3
 8008ba0:	693b      	ldr	r3, [r7, #16]
 8008ba2:	4013      	ands	r3, r2
 8008ba4:	613b      	str	r3, [r7, #16]
 8008ba6:	683b      	ldr	r3, [r7, #0]
 8008ba8:	685a      	ldr	r2, [r3, #4]
 8008baa:	2380      	movs	r3, #128	; 0x80
 8008bac:	025b      	lsls	r3, r3, #9
 8008bae:	4013      	ands	r3, r2
 8008bb0:	d003      	beq.n	8008bba <HAL_GPIO_Init+0x29e>
 8008bb2:	693a      	ldr	r2, [r7, #16]
 8008bb4:	68fb      	ldr	r3, [r7, #12]
 8008bb6:	4313      	orrs	r3, r2
 8008bb8:	613b      	str	r3, [r7, #16]
 8008bba:	4909      	ldr	r1, [pc, #36]	; (8008be0 <HAL_GPIO_Init+0x2c4>)
 8008bbc:	2280      	movs	r2, #128	; 0x80
 8008bbe:	693b      	ldr	r3, [r7, #16]
 8008bc0:	508b      	str	r3, [r1, r2]
 8008bc2:	697b      	ldr	r3, [r7, #20]
 8008bc4:	3301      	adds	r3, #1
 8008bc6:	617b      	str	r3, [r7, #20]
 8008bc8:	683b      	ldr	r3, [r7, #0]
 8008bca:	681a      	ldr	r2, [r3, #0]
 8008bcc:	697b      	ldr	r3, [r7, #20]
 8008bce:	40da      	lsrs	r2, r3
 8008bd0:	1e13      	subs	r3, r2, #0
 8008bd2:	d000      	beq.n	8008bd6 <HAL_GPIO_Init+0x2ba>
 8008bd4:	e6aa      	b.n	800892c <HAL_GPIO_Init+0x10>
 8008bd6:	46c0      	nop			; (mov r8, r8)
 8008bd8:	46c0      	nop			; (mov r8, r8)
 8008bda:	46bd      	mov	sp, r7
 8008bdc:	b006      	add	sp, #24
 8008bde:	bd80      	pop	{r7, pc}
 8008be0:	40021800 	.word	0x40021800
 8008be4:	50000400 	.word	0x50000400
 8008be8:	50000800 	.word	0x50000800
 8008bec:	50000c00 	.word	0x50000c00
 8008bf0:	50001000 	.word	0x50001000

08008bf4 <HAL_GPIO_WritePin>:
 8008bf4:	b580      	push	{r7, lr}
 8008bf6:	b082      	sub	sp, #8
 8008bf8:	af00      	add	r7, sp, #0
 8008bfa:	6078      	str	r0, [r7, #4]
 8008bfc:	0008      	movs	r0, r1
 8008bfe:	0011      	movs	r1, r2
 8008c00:	1cbb      	adds	r3, r7, #2
 8008c02:	1c02      	adds	r2, r0, #0
 8008c04:	801a      	strh	r2, [r3, #0]
 8008c06:	1c7b      	adds	r3, r7, #1
 8008c08:	1c0a      	adds	r2, r1, #0
 8008c0a:	701a      	strb	r2, [r3, #0]
 8008c0c:	1c7b      	adds	r3, r7, #1
 8008c0e:	781b      	ldrb	r3, [r3, #0]
 8008c10:	2b00      	cmp	r3, #0
 8008c12:	d004      	beq.n	8008c1e <HAL_GPIO_WritePin+0x2a>
 8008c14:	1cbb      	adds	r3, r7, #2
 8008c16:	881a      	ldrh	r2, [r3, #0]
 8008c18:	687b      	ldr	r3, [r7, #4]
 8008c1a:	619a      	str	r2, [r3, #24]
 8008c1c:	e003      	b.n	8008c26 <HAL_GPIO_WritePin+0x32>
 8008c1e:	1cbb      	adds	r3, r7, #2
 8008c20:	881a      	ldrh	r2, [r3, #0]
 8008c22:	687b      	ldr	r3, [r7, #4]
 8008c24:	629a      	str	r2, [r3, #40]	; 0x28
 8008c26:	46c0      	nop			; (mov r8, r8)
 8008c28:	46bd      	mov	sp, r7
 8008c2a:	b002      	add	sp, #8
 8008c2c:	bd80      	pop	{r7, pc}
	...

08008c30 <HAL_GPIO_EXTI_IRQHandler>:
 8008c30:	b580      	push	{r7, lr}
 8008c32:	b082      	sub	sp, #8
 8008c34:	af00      	add	r7, sp, #0
 8008c36:	0002      	movs	r2, r0
 8008c38:	1dbb      	adds	r3, r7, #6
 8008c3a:	801a      	strh	r2, [r3, #0]
 8008c3c:	4b10      	ldr	r3, [pc, #64]	; (8008c80 <HAL_GPIO_EXTI_IRQHandler+0x50>)
 8008c3e:	68db      	ldr	r3, [r3, #12]
 8008c40:	1dba      	adds	r2, r7, #6
 8008c42:	8812      	ldrh	r2, [r2, #0]
 8008c44:	4013      	ands	r3, r2
 8008c46:	d008      	beq.n	8008c5a <HAL_GPIO_EXTI_IRQHandler+0x2a>
 8008c48:	4b0d      	ldr	r3, [pc, #52]	; (8008c80 <HAL_GPIO_EXTI_IRQHandler+0x50>)
 8008c4a:	1dba      	adds	r2, r7, #6
 8008c4c:	8812      	ldrh	r2, [r2, #0]
 8008c4e:	60da      	str	r2, [r3, #12]
 8008c50:	1dbb      	adds	r3, r7, #6
 8008c52:	881b      	ldrh	r3, [r3, #0]
 8008c54:	0018      	movs	r0, r3
 8008c56:	f000 f815 	bl	8008c84 <HAL_GPIO_EXTI_Rising_Callback>
 8008c5a:	4b09      	ldr	r3, [pc, #36]	; (8008c80 <HAL_GPIO_EXTI_IRQHandler+0x50>)
 8008c5c:	691b      	ldr	r3, [r3, #16]
 8008c5e:	1dba      	adds	r2, r7, #6
 8008c60:	8812      	ldrh	r2, [r2, #0]
 8008c62:	4013      	ands	r3, r2
 8008c64:	d008      	beq.n	8008c78 <HAL_GPIO_EXTI_IRQHandler+0x48>
 8008c66:	4b06      	ldr	r3, [pc, #24]	; (8008c80 <HAL_GPIO_EXTI_IRQHandler+0x50>)
 8008c68:	1dba      	adds	r2, r7, #6
 8008c6a:	8812      	ldrh	r2, [r2, #0]
 8008c6c:	611a      	str	r2, [r3, #16]
 8008c6e:	1dbb      	adds	r3, r7, #6
 8008c70:	881b      	ldrh	r3, [r3, #0]
 8008c72:	0018      	movs	r0, r3
 8008c74:	f7fe f9fa 	bl	800706c <HAL_GPIO_EXTI_Falling_Callback>
 8008c78:	46c0      	nop			; (mov r8, r8)
 8008c7a:	46bd      	mov	sp, r7
 8008c7c:	b002      	add	sp, #8
 8008c7e:	bd80      	pop	{r7, pc}
 8008c80:	40021800 	.word	0x40021800

08008c84 <HAL_GPIO_EXTI_Rising_Callback>:
 8008c84:	b580      	push	{r7, lr}
 8008c86:	b082      	sub	sp, #8
 8008c88:	af00      	add	r7, sp, #0
 8008c8a:	0002      	movs	r2, r0
 8008c8c:	1dbb      	adds	r3, r7, #6
 8008c8e:	801a      	strh	r2, [r3, #0]
 8008c90:	46c0      	nop			; (mov r8, r8)
 8008c92:	46bd      	mov	sp, r7
 8008c94:	b002      	add	sp, #8
 8008c96:	bd80      	pop	{r7, pc}

08008c98 <HAL_PWREx_ControlVoltageScaling>:
 8008c98:	b580      	push	{r7, lr}
 8008c9a:	b084      	sub	sp, #16
 8008c9c:	af00      	add	r7, sp, #0
 8008c9e:	6078      	str	r0, [r7, #4]
 8008ca0:	4b19      	ldr	r3, [pc, #100]	; (8008d08 <HAL_PWREx_ControlVoltageScaling+0x70>)
 8008ca2:	681b      	ldr	r3, [r3, #0]
 8008ca4:	4a19      	ldr	r2, [pc, #100]	; (8008d0c <HAL_PWREx_ControlVoltageScaling+0x74>)
 8008ca6:	4013      	ands	r3, r2
 8008ca8:	0019      	movs	r1, r3
 8008caa:	4b17      	ldr	r3, [pc, #92]	; (8008d08 <HAL_PWREx_ControlVoltageScaling+0x70>)
 8008cac:	687a      	ldr	r2, [r7, #4]
 8008cae:	430a      	orrs	r2, r1
 8008cb0:	601a      	str	r2, [r3, #0]
 8008cb2:	687a      	ldr	r2, [r7, #4]
 8008cb4:	2380      	movs	r3, #128	; 0x80
 8008cb6:	009b      	lsls	r3, r3, #2
 8008cb8:	429a      	cmp	r2, r3
 8008cba:	d11f      	bne.n	8008cfc <HAL_PWREx_ControlVoltageScaling+0x64>
 8008cbc:	4b14      	ldr	r3, [pc, #80]	; (8008d10 <HAL_PWREx_ControlVoltageScaling+0x78>)
 8008cbe:	681a      	ldr	r2, [r3, #0]
 8008cc0:	0013      	movs	r3, r2
 8008cc2:	005b      	lsls	r3, r3, #1
 8008cc4:	189b      	adds	r3, r3, r2
 8008cc6:	005b      	lsls	r3, r3, #1
 8008cc8:	4912      	ldr	r1, [pc, #72]	; (8008d14 <HAL_PWREx_ControlVoltageScaling+0x7c>)
 8008cca:	0018      	movs	r0, r3
 8008ccc:	f7fd fa90 	bl	80061f0 <__udivsi3>
 8008cd0:	0003      	movs	r3, r0
 8008cd2:	3301      	adds	r3, #1
 8008cd4:	60fb      	str	r3, [r7, #12]
 8008cd6:	e008      	b.n	8008cea <HAL_PWREx_ControlVoltageScaling+0x52>
 8008cd8:	68fb      	ldr	r3, [r7, #12]
 8008cda:	2b00      	cmp	r3, #0
 8008cdc:	d003      	beq.n	8008ce6 <HAL_PWREx_ControlVoltageScaling+0x4e>
 8008cde:	68fb      	ldr	r3, [r7, #12]
 8008ce0:	3b01      	subs	r3, #1
 8008ce2:	60fb      	str	r3, [r7, #12]
 8008ce4:	e001      	b.n	8008cea <HAL_PWREx_ControlVoltageScaling+0x52>
 8008ce6:	2303      	movs	r3, #3
 8008ce8:	e009      	b.n	8008cfe <HAL_PWREx_ControlVoltageScaling+0x66>
 8008cea:	4b07      	ldr	r3, [pc, #28]	; (8008d08 <HAL_PWREx_ControlVoltageScaling+0x70>)
 8008cec:	695a      	ldr	r2, [r3, #20]
 8008cee:	2380      	movs	r3, #128	; 0x80
 8008cf0:	00db      	lsls	r3, r3, #3
 8008cf2:	401a      	ands	r2, r3
 8008cf4:	2380      	movs	r3, #128	; 0x80
 8008cf6:	00db      	lsls	r3, r3, #3
 8008cf8:	429a      	cmp	r2, r3
 8008cfa:	d0ed      	beq.n	8008cd8 <HAL_PWREx_ControlVoltageScaling+0x40>
 8008cfc:	2300      	movs	r3, #0
 8008cfe:	0018      	movs	r0, r3
 8008d00:	46bd      	mov	sp, r7
 8008d02:	b004      	add	sp, #16
 8008d04:	bd80      	pop	{r7, pc}
 8008d06:	46c0      	nop			; (mov r8, r8)
 8008d08:	40007000 	.word	0x40007000
 8008d0c:	fffff9ff 	.word	0xfffff9ff
 8008d10:	20000004 	.word	0x20000004
 8008d14:	000f4240 	.word	0x000f4240

08008d18 <LL_RCC_GetAPB1Prescaler>:
 8008d18:	b580      	push	{r7, lr}
 8008d1a:	af00      	add	r7, sp, #0
 8008d1c:	4b03      	ldr	r3, [pc, #12]	; (8008d2c <LL_RCC_GetAPB1Prescaler+0x14>)
 8008d1e:	689a      	ldr	r2, [r3, #8]
 8008d20:	23e0      	movs	r3, #224	; 0xe0
 8008d22:	01db      	lsls	r3, r3, #7
 8008d24:	4013      	ands	r3, r2
 8008d26:	0018      	movs	r0, r3
 8008d28:	46bd      	mov	sp, r7
 8008d2a:	bd80      	pop	{r7, pc}
 8008d2c:	40021000 	.word	0x40021000

08008d30 <HAL_RCC_OscConfig>:
 8008d30:	b580      	push	{r7, lr}
 8008d32:	b088      	sub	sp, #32
 8008d34:	af00      	add	r7, sp, #0
 8008d36:	6078      	str	r0, [r7, #4]
 8008d38:	687b      	ldr	r3, [r7, #4]
 8008d3a:	2b00      	cmp	r3, #0
 8008d3c:	d102      	bne.n	8008d44 <HAL_RCC_OscConfig+0x14>
 8008d3e:	2301      	movs	r3, #1
 8008d40:	f000 fb50 	bl	80093e4 <HAL_RCC_OscConfig+0x6b4>
 8008d44:	687b      	ldr	r3, [r7, #4]
 8008d46:	681b      	ldr	r3, [r3, #0]
 8008d48:	2201      	movs	r2, #1
 8008d4a:	4013      	ands	r3, r2
 8008d4c:	d100      	bne.n	8008d50 <HAL_RCC_OscConfig+0x20>
 8008d4e:	e07c      	b.n	8008e4a <HAL_RCC_OscConfig+0x11a>
 8008d50:	4bc3      	ldr	r3, [pc, #780]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008d52:	689b      	ldr	r3, [r3, #8]
 8008d54:	2238      	movs	r2, #56	; 0x38
 8008d56:	4013      	ands	r3, r2
 8008d58:	61bb      	str	r3, [r7, #24]
 8008d5a:	4bc1      	ldr	r3, [pc, #772]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008d5c:	68db      	ldr	r3, [r3, #12]
 8008d5e:	2203      	movs	r2, #3
 8008d60:	4013      	ands	r3, r2
 8008d62:	617b      	str	r3, [r7, #20]
 8008d64:	69bb      	ldr	r3, [r7, #24]
 8008d66:	2b10      	cmp	r3, #16
 8008d68:	d102      	bne.n	8008d70 <HAL_RCC_OscConfig+0x40>
 8008d6a:	697b      	ldr	r3, [r7, #20]
 8008d6c:	2b03      	cmp	r3, #3
 8008d6e:	d002      	beq.n	8008d76 <HAL_RCC_OscConfig+0x46>
 8008d70:	69bb      	ldr	r3, [r7, #24]
 8008d72:	2b08      	cmp	r3, #8
 8008d74:	d10b      	bne.n	8008d8e <HAL_RCC_OscConfig+0x5e>
 8008d76:	4bba      	ldr	r3, [pc, #744]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008d78:	681a      	ldr	r2, [r3, #0]
 8008d7a:	2380      	movs	r3, #128	; 0x80
 8008d7c:	029b      	lsls	r3, r3, #10
 8008d7e:	4013      	ands	r3, r2
 8008d80:	d062      	beq.n	8008e48 <HAL_RCC_OscConfig+0x118>
 8008d82:	687b      	ldr	r3, [r7, #4]
 8008d84:	685b      	ldr	r3, [r3, #4]
 8008d86:	2b00      	cmp	r3, #0
 8008d88:	d15e      	bne.n	8008e48 <HAL_RCC_OscConfig+0x118>
 8008d8a:	2301      	movs	r3, #1
 8008d8c:	e32a      	b.n	80093e4 <HAL_RCC_OscConfig+0x6b4>
 8008d8e:	687b      	ldr	r3, [r7, #4]
 8008d90:	685a      	ldr	r2, [r3, #4]
 8008d92:	2380      	movs	r3, #128	; 0x80
 8008d94:	025b      	lsls	r3, r3, #9
 8008d96:	429a      	cmp	r2, r3
 8008d98:	d107      	bne.n	8008daa <HAL_RCC_OscConfig+0x7a>
 8008d9a:	4bb1      	ldr	r3, [pc, #708]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008d9c:	681a      	ldr	r2, [r3, #0]
 8008d9e:	4bb0      	ldr	r3, [pc, #704]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008da0:	2180      	movs	r1, #128	; 0x80
 8008da2:	0249      	lsls	r1, r1, #9
 8008da4:	430a      	orrs	r2, r1
 8008da6:	601a      	str	r2, [r3, #0]
 8008da8:	e020      	b.n	8008dec <HAL_RCC_OscConfig+0xbc>
 8008daa:	687b      	ldr	r3, [r7, #4]
 8008dac:	685a      	ldr	r2, [r3, #4]
 8008dae:	23a0      	movs	r3, #160	; 0xa0
 8008db0:	02db      	lsls	r3, r3, #11
 8008db2:	429a      	cmp	r2, r3
 8008db4:	d10e      	bne.n	8008dd4 <HAL_RCC_OscConfig+0xa4>
 8008db6:	4baa      	ldr	r3, [pc, #680]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008db8:	681a      	ldr	r2, [r3, #0]
 8008dba:	4ba9      	ldr	r3, [pc, #676]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008dbc:	2180      	movs	r1, #128	; 0x80
 8008dbe:	02c9      	lsls	r1, r1, #11
 8008dc0:	430a      	orrs	r2, r1
 8008dc2:	601a      	str	r2, [r3, #0]
 8008dc4:	4ba6      	ldr	r3, [pc, #664]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008dc6:	681a      	ldr	r2, [r3, #0]
 8008dc8:	4ba5      	ldr	r3, [pc, #660]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008dca:	2180      	movs	r1, #128	; 0x80
 8008dcc:	0249      	lsls	r1, r1, #9
 8008dce:	430a      	orrs	r2, r1
 8008dd0:	601a      	str	r2, [r3, #0]
 8008dd2:	e00b      	b.n	8008dec <HAL_RCC_OscConfig+0xbc>
 8008dd4:	4ba2      	ldr	r3, [pc, #648]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008dd6:	681a      	ldr	r2, [r3, #0]
 8008dd8:	4ba1      	ldr	r3, [pc, #644]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008dda:	49a2      	ldr	r1, [pc, #648]	; (8009064 <HAL_RCC_OscConfig+0x334>)
 8008ddc:	400a      	ands	r2, r1
 8008dde:	601a      	str	r2, [r3, #0]
 8008de0:	4b9f      	ldr	r3, [pc, #636]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008de2:	681a      	ldr	r2, [r3, #0]
 8008de4:	4b9e      	ldr	r3, [pc, #632]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008de6:	49a0      	ldr	r1, [pc, #640]	; (8009068 <HAL_RCC_OscConfig+0x338>)
 8008de8:	400a      	ands	r2, r1
 8008dea:	601a      	str	r2, [r3, #0]
 8008dec:	687b      	ldr	r3, [r7, #4]
 8008dee:	685b      	ldr	r3, [r3, #4]
 8008df0:	2b00      	cmp	r3, #0
 8008df2:	d014      	beq.n	8008e1e <HAL_RCC_OscConfig+0xee>
 8008df4:	f7fe fb4c 	bl	8007490 <HAL_GetTick>
 8008df8:	0003      	movs	r3, r0
 8008dfa:	613b      	str	r3, [r7, #16]
 8008dfc:	e008      	b.n	8008e10 <HAL_RCC_OscConfig+0xe0>
 8008dfe:	f7fe fb47 	bl	8007490 <HAL_GetTick>
 8008e02:	0002      	movs	r2, r0
 8008e04:	693b      	ldr	r3, [r7, #16]
 8008e06:	1ad3      	subs	r3, r2, r3
 8008e08:	2b64      	cmp	r3, #100	; 0x64
 8008e0a:	d901      	bls.n	8008e10 <HAL_RCC_OscConfig+0xe0>
 8008e0c:	2303      	movs	r3, #3
 8008e0e:	e2e9      	b.n	80093e4 <HAL_RCC_OscConfig+0x6b4>
 8008e10:	4b93      	ldr	r3, [pc, #588]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008e12:	681a      	ldr	r2, [r3, #0]
 8008e14:	2380      	movs	r3, #128	; 0x80
 8008e16:	029b      	lsls	r3, r3, #10
 8008e18:	4013      	ands	r3, r2
 8008e1a:	d0f0      	beq.n	8008dfe <HAL_RCC_OscConfig+0xce>
 8008e1c:	e015      	b.n	8008e4a <HAL_RCC_OscConfig+0x11a>
 8008e1e:	f7fe fb37 	bl	8007490 <HAL_GetTick>
 8008e22:	0003      	movs	r3, r0
 8008e24:	613b      	str	r3, [r7, #16]
 8008e26:	e008      	b.n	8008e3a <HAL_RCC_OscConfig+0x10a>
 8008e28:	f7fe fb32 	bl	8007490 <HAL_GetTick>
 8008e2c:	0002      	movs	r2, r0
 8008e2e:	693b      	ldr	r3, [r7, #16]
 8008e30:	1ad3      	subs	r3, r2, r3
 8008e32:	2b64      	cmp	r3, #100	; 0x64
 8008e34:	d901      	bls.n	8008e3a <HAL_RCC_OscConfig+0x10a>
 8008e36:	2303      	movs	r3, #3
 8008e38:	e2d4      	b.n	80093e4 <HAL_RCC_OscConfig+0x6b4>
 8008e3a:	4b89      	ldr	r3, [pc, #548]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008e3c:	681a      	ldr	r2, [r3, #0]
 8008e3e:	2380      	movs	r3, #128	; 0x80
 8008e40:	029b      	lsls	r3, r3, #10
 8008e42:	4013      	ands	r3, r2
 8008e44:	d1f0      	bne.n	8008e28 <HAL_RCC_OscConfig+0xf8>
 8008e46:	e000      	b.n	8008e4a <HAL_RCC_OscConfig+0x11a>
 8008e48:	46c0      	nop			; (mov r8, r8)
 8008e4a:	687b      	ldr	r3, [r7, #4]
 8008e4c:	681b      	ldr	r3, [r3, #0]
 8008e4e:	2202      	movs	r2, #2
 8008e50:	4013      	ands	r3, r2
 8008e52:	d100      	bne.n	8008e56 <HAL_RCC_OscConfig+0x126>
 8008e54:	e099      	b.n	8008f8a <HAL_RCC_OscConfig+0x25a>
 8008e56:	4b82      	ldr	r3, [pc, #520]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008e58:	689b      	ldr	r3, [r3, #8]
 8008e5a:	2238      	movs	r2, #56	; 0x38
 8008e5c:	4013      	ands	r3, r2
 8008e5e:	61bb      	str	r3, [r7, #24]
 8008e60:	4b7f      	ldr	r3, [pc, #508]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008e62:	68db      	ldr	r3, [r3, #12]
 8008e64:	2203      	movs	r2, #3
 8008e66:	4013      	ands	r3, r2
 8008e68:	617b      	str	r3, [r7, #20]
 8008e6a:	69bb      	ldr	r3, [r7, #24]
 8008e6c:	2b10      	cmp	r3, #16
 8008e6e:	d102      	bne.n	8008e76 <HAL_RCC_OscConfig+0x146>
 8008e70:	697b      	ldr	r3, [r7, #20]
 8008e72:	2b02      	cmp	r3, #2
 8008e74:	d002      	beq.n	8008e7c <HAL_RCC_OscConfig+0x14c>
 8008e76:	69bb      	ldr	r3, [r7, #24]
 8008e78:	2b00      	cmp	r3, #0
 8008e7a:	d135      	bne.n	8008ee8 <HAL_RCC_OscConfig+0x1b8>
 8008e7c:	4b78      	ldr	r3, [pc, #480]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008e7e:	681a      	ldr	r2, [r3, #0]
 8008e80:	2380      	movs	r3, #128	; 0x80
 8008e82:	00db      	lsls	r3, r3, #3
 8008e84:	4013      	ands	r3, r2
 8008e86:	d005      	beq.n	8008e94 <HAL_RCC_OscConfig+0x164>
 8008e88:	687b      	ldr	r3, [r7, #4]
 8008e8a:	68db      	ldr	r3, [r3, #12]
 8008e8c:	2b00      	cmp	r3, #0
 8008e8e:	d101      	bne.n	8008e94 <HAL_RCC_OscConfig+0x164>
 8008e90:	2301      	movs	r3, #1
 8008e92:	e2a7      	b.n	80093e4 <HAL_RCC_OscConfig+0x6b4>
 8008e94:	4b72      	ldr	r3, [pc, #456]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008e96:	685b      	ldr	r3, [r3, #4]
 8008e98:	4a74      	ldr	r2, [pc, #464]	; (800906c <HAL_RCC_OscConfig+0x33c>)
 8008e9a:	4013      	ands	r3, r2
 8008e9c:	0019      	movs	r1, r3
 8008e9e:	687b      	ldr	r3, [r7, #4]
 8008ea0:	695b      	ldr	r3, [r3, #20]
 8008ea2:	021a      	lsls	r2, r3, #8
 8008ea4:	4b6e      	ldr	r3, [pc, #440]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008ea6:	430a      	orrs	r2, r1
 8008ea8:	605a      	str	r2, [r3, #4]
 8008eaa:	69bb      	ldr	r3, [r7, #24]
 8008eac:	2b00      	cmp	r3, #0
 8008eae:	d112      	bne.n	8008ed6 <HAL_RCC_OscConfig+0x1a6>
 8008eb0:	4b6b      	ldr	r3, [pc, #428]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008eb2:	681b      	ldr	r3, [r3, #0]
 8008eb4:	4a6e      	ldr	r2, [pc, #440]	; (8009070 <HAL_RCC_OscConfig+0x340>)
 8008eb6:	4013      	ands	r3, r2
 8008eb8:	0019      	movs	r1, r3
 8008eba:	687b      	ldr	r3, [r7, #4]
 8008ebc:	691a      	ldr	r2, [r3, #16]
 8008ebe:	4b68      	ldr	r3, [pc, #416]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008ec0:	430a      	orrs	r2, r1
 8008ec2:	601a      	str	r2, [r3, #0]
 8008ec4:	4b66      	ldr	r3, [pc, #408]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008ec6:	681b      	ldr	r3, [r3, #0]
 8008ec8:	0adb      	lsrs	r3, r3, #11
 8008eca:	2207      	movs	r2, #7
 8008ecc:	4013      	ands	r3, r2
 8008ece:	4a69      	ldr	r2, [pc, #420]	; (8009074 <HAL_RCC_OscConfig+0x344>)
 8008ed0:	40da      	lsrs	r2, r3
 8008ed2:	4b69      	ldr	r3, [pc, #420]	; (8009078 <HAL_RCC_OscConfig+0x348>)
 8008ed4:	601a      	str	r2, [r3, #0]
 8008ed6:	4b69      	ldr	r3, [pc, #420]	; (800907c <HAL_RCC_OscConfig+0x34c>)
 8008ed8:	681b      	ldr	r3, [r3, #0]
 8008eda:	0018      	movs	r0, r3
 8008edc:	f7fe f984 	bl	80071e8 <HAL_InitTick>
 8008ee0:	1e03      	subs	r3, r0, #0
 8008ee2:	d051      	beq.n	8008f88 <HAL_RCC_OscConfig+0x258>
 8008ee4:	2301      	movs	r3, #1
 8008ee6:	e27d      	b.n	80093e4 <HAL_RCC_OscConfig+0x6b4>
 8008ee8:	687b      	ldr	r3, [r7, #4]
 8008eea:	68db      	ldr	r3, [r3, #12]
 8008eec:	2b00      	cmp	r3, #0
 8008eee:	d030      	beq.n	8008f52 <HAL_RCC_OscConfig+0x222>
 8008ef0:	4b5b      	ldr	r3, [pc, #364]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008ef2:	681b      	ldr	r3, [r3, #0]
 8008ef4:	4a5e      	ldr	r2, [pc, #376]	; (8009070 <HAL_RCC_OscConfig+0x340>)
 8008ef6:	4013      	ands	r3, r2
 8008ef8:	0019      	movs	r1, r3
 8008efa:	687b      	ldr	r3, [r7, #4]
 8008efc:	691a      	ldr	r2, [r3, #16]
 8008efe:	4b58      	ldr	r3, [pc, #352]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008f00:	430a      	orrs	r2, r1
 8008f02:	601a      	str	r2, [r3, #0]
 8008f04:	4b56      	ldr	r3, [pc, #344]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008f06:	681a      	ldr	r2, [r3, #0]
 8008f08:	4b55      	ldr	r3, [pc, #340]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008f0a:	2180      	movs	r1, #128	; 0x80
 8008f0c:	0049      	lsls	r1, r1, #1
 8008f0e:	430a      	orrs	r2, r1
 8008f10:	601a      	str	r2, [r3, #0]
 8008f12:	f7fe fabd 	bl	8007490 <HAL_GetTick>
 8008f16:	0003      	movs	r3, r0
 8008f18:	613b      	str	r3, [r7, #16]
 8008f1a:	e008      	b.n	8008f2e <HAL_RCC_OscConfig+0x1fe>
 8008f1c:	f7fe fab8 	bl	8007490 <HAL_GetTick>
 8008f20:	0002      	movs	r2, r0
 8008f22:	693b      	ldr	r3, [r7, #16]
 8008f24:	1ad3      	subs	r3, r2, r3
 8008f26:	2b02      	cmp	r3, #2
 8008f28:	d901      	bls.n	8008f2e <HAL_RCC_OscConfig+0x1fe>
 8008f2a:	2303      	movs	r3, #3
 8008f2c:	e25a      	b.n	80093e4 <HAL_RCC_OscConfig+0x6b4>
 8008f2e:	4b4c      	ldr	r3, [pc, #304]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008f30:	681a      	ldr	r2, [r3, #0]
 8008f32:	2380      	movs	r3, #128	; 0x80
 8008f34:	00db      	lsls	r3, r3, #3
 8008f36:	4013      	ands	r3, r2
 8008f38:	d0f0      	beq.n	8008f1c <HAL_RCC_OscConfig+0x1ec>
 8008f3a:	4b49      	ldr	r3, [pc, #292]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008f3c:	685b      	ldr	r3, [r3, #4]
 8008f3e:	4a4b      	ldr	r2, [pc, #300]	; (800906c <HAL_RCC_OscConfig+0x33c>)
 8008f40:	4013      	ands	r3, r2
 8008f42:	0019      	movs	r1, r3
 8008f44:	687b      	ldr	r3, [r7, #4]
 8008f46:	695b      	ldr	r3, [r3, #20]
 8008f48:	021a      	lsls	r2, r3, #8
 8008f4a:	4b45      	ldr	r3, [pc, #276]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008f4c:	430a      	orrs	r2, r1
 8008f4e:	605a      	str	r2, [r3, #4]
 8008f50:	e01b      	b.n	8008f8a <HAL_RCC_OscConfig+0x25a>
 8008f52:	4b43      	ldr	r3, [pc, #268]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008f54:	681a      	ldr	r2, [r3, #0]
 8008f56:	4b42      	ldr	r3, [pc, #264]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008f58:	4949      	ldr	r1, [pc, #292]	; (8009080 <HAL_RCC_OscConfig+0x350>)
 8008f5a:	400a      	ands	r2, r1
 8008f5c:	601a      	str	r2, [r3, #0]
 8008f5e:	f7fe fa97 	bl	8007490 <HAL_GetTick>
 8008f62:	0003      	movs	r3, r0
 8008f64:	613b      	str	r3, [r7, #16]
 8008f66:	e008      	b.n	8008f7a <HAL_RCC_OscConfig+0x24a>
 8008f68:	f7fe fa92 	bl	8007490 <HAL_GetTick>
 8008f6c:	0002      	movs	r2, r0
 8008f6e:	693b      	ldr	r3, [r7, #16]
 8008f70:	1ad3      	subs	r3, r2, r3
 8008f72:	2b02      	cmp	r3, #2
 8008f74:	d901      	bls.n	8008f7a <HAL_RCC_OscConfig+0x24a>
 8008f76:	2303      	movs	r3, #3
 8008f78:	e234      	b.n	80093e4 <HAL_RCC_OscConfig+0x6b4>
 8008f7a:	4b39      	ldr	r3, [pc, #228]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008f7c:	681a      	ldr	r2, [r3, #0]
 8008f7e:	2380      	movs	r3, #128	; 0x80
 8008f80:	00db      	lsls	r3, r3, #3
 8008f82:	4013      	ands	r3, r2
 8008f84:	d1f0      	bne.n	8008f68 <HAL_RCC_OscConfig+0x238>
 8008f86:	e000      	b.n	8008f8a <HAL_RCC_OscConfig+0x25a>
 8008f88:	46c0      	nop			; (mov r8, r8)
 8008f8a:	687b      	ldr	r3, [r7, #4]
 8008f8c:	681b      	ldr	r3, [r3, #0]
 8008f8e:	2208      	movs	r2, #8
 8008f90:	4013      	ands	r3, r2
 8008f92:	d047      	beq.n	8009024 <HAL_RCC_OscConfig+0x2f4>
 8008f94:	4b32      	ldr	r3, [pc, #200]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008f96:	689b      	ldr	r3, [r3, #8]
 8008f98:	2238      	movs	r2, #56	; 0x38
 8008f9a:	4013      	ands	r3, r2
 8008f9c:	2b18      	cmp	r3, #24
 8008f9e:	d10a      	bne.n	8008fb6 <HAL_RCC_OscConfig+0x286>
 8008fa0:	4b2f      	ldr	r3, [pc, #188]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008fa2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8008fa4:	2202      	movs	r2, #2
 8008fa6:	4013      	ands	r3, r2
 8008fa8:	d03c      	beq.n	8009024 <HAL_RCC_OscConfig+0x2f4>
 8008faa:	687b      	ldr	r3, [r7, #4]
 8008fac:	699b      	ldr	r3, [r3, #24]
 8008fae:	2b00      	cmp	r3, #0
 8008fb0:	d138      	bne.n	8009024 <HAL_RCC_OscConfig+0x2f4>
 8008fb2:	2301      	movs	r3, #1
 8008fb4:	e216      	b.n	80093e4 <HAL_RCC_OscConfig+0x6b4>
 8008fb6:	687b      	ldr	r3, [r7, #4]
 8008fb8:	699b      	ldr	r3, [r3, #24]
 8008fba:	2b00      	cmp	r3, #0
 8008fbc:	d019      	beq.n	8008ff2 <HAL_RCC_OscConfig+0x2c2>
 8008fbe:	4b28      	ldr	r3, [pc, #160]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008fc0:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8008fc2:	4b27      	ldr	r3, [pc, #156]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008fc4:	2101      	movs	r1, #1
 8008fc6:	430a      	orrs	r2, r1
 8008fc8:	661a      	str	r2, [r3, #96]	; 0x60
 8008fca:	f7fe fa61 	bl	8007490 <HAL_GetTick>
 8008fce:	0003      	movs	r3, r0
 8008fd0:	613b      	str	r3, [r7, #16]
 8008fd2:	e008      	b.n	8008fe6 <HAL_RCC_OscConfig+0x2b6>
 8008fd4:	f7fe fa5c 	bl	8007490 <HAL_GetTick>
 8008fd8:	0002      	movs	r2, r0
 8008fda:	693b      	ldr	r3, [r7, #16]
 8008fdc:	1ad3      	subs	r3, r2, r3
 8008fde:	2b02      	cmp	r3, #2
 8008fe0:	d901      	bls.n	8008fe6 <HAL_RCC_OscConfig+0x2b6>
 8008fe2:	2303      	movs	r3, #3
 8008fe4:	e1fe      	b.n	80093e4 <HAL_RCC_OscConfig+0x6b4>
 8008fe6:	4b1e      	ldr	r3, [pc, #120]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008fe8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8008fea:	2202      	movs	r2, #2
 8008fec:	4013      	ands	r3, r2
 8008fee:	d0f1      	beq.n	8008fd4 <HAL_RCC_OscConfig+0x2a4>
 8008ff0:	e018      	b.n	8009024 <HAL_RCC_OscConfig+0x2f4>
 8008ff2:	4b1b      	ldr	r3, [pc, #108]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008ff4:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8008ff6:	4b1a      	ldr	r3, [pc, #104]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8008ff8:	2101      	movs	r1, #1
 8008ffa:	438a      	bics	r2, r1
 8008ffc:	661a      	str	r2, [r3, #96]	; 0x60
 8008ffe:	f7fe fa47 	bl	8007490 <HAL_GetTick>
 8009002:	0003      	movs	r3, r0
 8009004:	613b      	str	r3, [r7, #16]
 8009006:	e008      	b.n	800901a <HAL_RCC_OscConfig+0x2ea>
 8009008:	f7fe fa42 	bl	8007490 <HAL_GetTick>
 800900c:	0002      	movs	r2, r0
 800900e:	693b      	ldr	r3, [r7, #16]
 8009010:	1ad3      	subs	r3, r2, r3
 8009012:	2b02      	cmp	r3, #2
 8009014:	d901      	bls.n	800901a <HAL_RCC_OscConfig+0x2ea>
 8009016:	2303      	movs	r3, #3
 8009018:	e1e4      	b.n	80093e4 <HAL_RCC_OscConfig+0x6b4>
 800901a:	4b11      	ldr	r3, [pc, #68]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 800901c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800901e:	2202      	movs	r2, #2
 8009020:	4013      	ands	r3, r2
 8009022:	d1f1      	bne.n	8009008 <HAL_RCC_OscConfig+0x2d8>
 8009024:	687b      	ldr	r3, [r7, #4]
 8009026:	681b      	ldr	r3, [r3, #0]
 8009028:	2204      	movs	r2, #4
 800902a:	4013      	ands	r3, r2
 800902c:	d100      	bne.n	8009030 <HAL_RCC_OscConfig+0x300>
 800902e:	e0c7      	b.n	80091c0 <HAL_RCC_OscConfig+0x490>
 8009030:	231f      	movs	r3, #31
 8009032:	18fb      	adds	r3, r7, r3
 8009034:	2200      	movs	r2, #0
 8009036:	701a      	strb	r2, [r3, #0]
 8009038:	4b09      	ldr	r3, [pc, #36]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 800903a:	689b      	ldr	r3, [r3, #8]
 800903c:	2238      	movs	r2, #56	; 0x38
 800903e:	4013      	ands	r3, r2
 8009040:	2b20      	cmp	r3, #32
 8009042:	d11f      	bne.n	8009084 <HAL_RCC_OscConfig+0x354>
 8009044:	4b06      	ldr	r3, [pc, #24]	; (8009060 <HAL_RCC_OscConfig+0x330>)
 8009046:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009048:	2202      	movs	r2, #2
 800904a:	4013      	ands	r3, r2
 800904c:	d100      	bne.n	8009050 <HAL_RCC_OscConfig+0x320>
 800904e:	e0b7      	b.n	80091c0 <HAL_RCC_OscConfig+0x490>
 8009050:	687b      	ldr	r3, [r7, #4]
 8009052:	689b      	ldr	r3, [r3, #8]
 8009054:	2b00      	cmp	r3, #0
 8009056:	d000      	beq.n	800905a <HAL_RCC_OscConfig+0x32a>
 8009058:	e0b2      	b.n	80091c0 <HAL_RCC_OscConfig+0x490>
 800905a:	2301      	movs	r3, #1
 800905c:	e1c2      	b.n	80093e4 <HAL_RCC_OscConfig+0x6b4>
 800905e:	46c0      	nop			; (mov r8, r8)
 8009060:	40021000 	.word	0x40021000
 8009064:	fffeffff 	.word	0xfffeffff
 8009068:	fffbffff 	.word	0xfffbffff
 800906c:	ffff80ff 	.word	0xffff80ff
 8009070:	ffffc7ff 	.word	0xffffc7ff
 8009074:	00f42400 	.word	0x00f42400
 8009078:	20000004 	.word	0x20000004
 800907c:	20000008 	.word	0x20000008
 8009080:	fffffeff 	.word	0xfffffeff
 8009084:	4bb5      	ldr	r3, [pc, #724]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 8009086:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8009088:	2380      	movs	r3, #128	; 0x80
 800908a:	055b      	lsls	r3, r3, #21
 800908c:	4013      	ands	r3, r2
 800908e:	d101      	bne.n	8009094 <HAL_RCC_OscConfig+0x364>
 8009090:	2301      	movs	r3, #1
 8009092:	e000      	b.n	8009096 <HAL_RCC_OscConfig+0x366>
 8009094:	2300      	movs	r3, #0
 8009096:	2b00      	cmp	r3, #0
 8009098:	d011      	beq.n	80090be <HAL_RCC_OscConfig+0x38e>
 800909a:	4bb0      	ldr	r3, [pc, #704]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 800909c:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800909e:	4baf      	ldr	r3, [pc, #700]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 80090a0:	2180      	movs	r1, #128	; 0x80
 80090a2:	0549      	lsls	r1, r1, #21
 80090a4:	430a      	orrs	r2, r1
 80090a6:	63da      	str	r2, [r3, #60]	; 0x3c
 80090a8:	4bac      	ldr	r3, [pc, #688]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 80090aa:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80090ac:	2380      	movs	r3, #128	; 0x80
 80090ae:	055b      	lsls	r3, r3, #21
 80090b0:	4013      	ands	r3, r2
 80090b2:	60fb      	str	r3, [r7, #12]
 80090b4:	68fb      	ldr	r3, [r7, #12]
 80090b6:	231f      	movs	r3, #31
 80090b8:	18fb      	adds	r3, r7, r3
 80090ba:	2201      	movs	r2, #1
 80090bc:	701a      	strb	r2, [r3, #0]
 80090be:	4ba8      	ldr	r3, [pc, #672]	; (8009360 <HAL_RCC_OscConfig+0x630>)
 80090c0:	681a      	ldr	r2, [r3, #0]
 80090c2:	2380      	movs	r3, #128	; 0x80
 80090c4:	005b      	lsls	r3, r3, #1
 80090c6:	4013      	ands	r3, r2
 80090c8:	d11a      	bne.n	8009100 <HAL_RCC_OscConfig+0x3d0>
 80090ca:	4ba5      	ldr	r3, [pc, #660]	; (8009360 <HAL_RCC_OscConfig+0x630>)
 80090cc:	681a      	ldr	r2, [r3, #0]
 80090ce:	4ba4      	ldr	r3, [pc, #656]	; (8009360 <HAL_RCC_OscConfig+0x630>)
 80090d0:	2180      	movs	r1, #128	; 0x80
 80090d2:	0049      	lsls	r1, r1, #1
 80090d4:	430a      	orrs	r2, r1
 80090d6:	601a      	str	r2, [r3, #0]
 80090d8:	f7fe f9da 	bl	8007490 <HAL_GetTick>
 80090dc:	0003      	movs	r3, r0
 80090de:	613b      	str	r3, [r7, #16]
 80090e0:	e008      	b.n	80090f4 <HAL_RCC_OscConfig+0x3c4>
 80090e2:	f7fe f9d5 	bl	8007490 <HAL_GetTick>
 80090e6:	0002      	movs	r2, r0
 80090e8:	693b      	ldr	r3, [r7, #16]
 80090ea:	1ad3      	subs	r3, r2, r3
 80090ec:	2b02      	cmp	r3, #2
 80090ee:	d901      	bls.n	80090f4 <HAL_RCC_OscConfig+0x3c4>
 80090f0:	2303      	movs	r3, #3
 80090f2:	e177      	b.n	80093e4 <HAL_RCC_OscConfig+0x6b4>
 80090f4:	4b9a      	ldr	r3, [pc, #616]	; (8009360 <HAL_RCC_OscConfig+0x630>)
 80090f6:	681a      	ldr	r2, [r3, #0]
 80090f8:	2380      	movs	r3, #128	; 0x80
 80090fa:	005b      	lsls	r3, r3, #1
 80090fc:	4013      	ands	r3, r2
 80090fe:	d0f0      	beq.n	80090e2 <HAL_RCC_OscConfig+0x3b2>
 8009100:	687b      	ldr	r3, [r7, #4]
 8009102:	689b      	ldr	r3, [r3, #8]
 8009104:	2b01      	cmp	r3, #1
 8009106:	d106      	bne.n	8009116 <HAL_RCC_OscConfig+0x3e6>
 8009108:	4b94      	ldr	r3, [pc, #592]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 800910a:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800910c:	4b93      	ldr	r3, [pc, #588]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 800910e:	2101      	movs	r1, #1
 8009110:	430a      	orrs	r2, r1
 8009112:	65da      	str	r2, [r3, #92]	; 0x5c
 8009114:	e01c      	b.n	8009150 <HAL_RCC_OscConfig+0x420>
 8009116:	687b      	ldr	r3, [r7, #4]
 8009118:	689b      	ldr	r3, [r3, #8]
 800911a:	2b05      	cmp	r3, #5
 800911c:	d10c      	bne.n	8009138 <HAL_RCC_OscConfig+0x408>
 800911e:	4b8f      	ldr	r3, [pc, #572]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 8009120:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8009122:	4b8e      	ldr	r3, [pc, #568]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 8009124:	2104      	movs	r1, #4
 8009126:	430a      	orrs	r2, r1
 8009128:	65da      	str	r2, [r3, #92]	; 0x5c
 800912a:	4b8c      	ldr	r3, [pc, #560]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 800912c:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800912e:	4b8b      	ldr	r3, [pc, #556]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 8009130:	2101      	movs	r1, #1
 8009132:	430a      	orrs	r2, r1
 8009134:	65da      	str	r2, [r3, #92]	; 0x5c
 8009136:	e00b      	b.n	8009150 <HAL_RCC_OscConfig+0x420>
 8009138:	4b88      	ldr	r3, [pc, #544]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 800913a:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800913c:	4b87      	ldr	r3, [pc, #540]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 800913e:	2101      	movs	r1, #1
 8009140:	438a      	bics	r2, r1
 8009142:	65da      	str	r2, [r3, #92]	; 0x5c
 8009144:	4b85      	ldr	r3, [pc, #532]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 8009146:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8009148:	4b84      	ldr	r3, [pc, #528]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 800914a:	2104      	movs	r1, #4
 800914c:	438a      	bics	r2, r1
 800914e:	65da      	str	r2, [r3, #92]	; 0x5c
 8009150:	687b      	ldr	r3, [r7, #4]
 8009152:	689b      	ldr	r3, [r3, #8]
 8009154:	2b00      	cmp	r3, #0
 8009156:	d014      	beq.n	8009182 <HAL_RCC_OscConfig+0x452>
 8009158:	f7fe f99a 	bl	8007490 <HAL_GetTick>
 800915c:	0003      	movs	r3, r0
 800915e:	613b      	str	r3, [r7, #16]
 8009160:	e009      	b.n	8009176 <HAL_RCC_OscConfig+0x446>
 8009162:	f7fe f995 	bl	8007490 <HAL_GetTick>
 8009166:	0002      	movs	r2, r0
 8009168:	693b      	ldr	r3, [r7, #16]
 800916a:	1ad3      	subs	r3, r2, r3
 800916c:	4a7d      	ldr	r2, [pc, #500]	; (8009364 <HAL_RCC_OscConfig+0x634>)
 800916e:	4293      	cmp	r3, r2
 8009170:	d901      	bls.n	8009176 <HAL_RCC_OscConfig+0x446>
 8009172:	2303      	movs	r3, #3
 8009174:	e136      	b.n	80093e4 <HAL_RCC_OscConfig+0x6b4>
 8009176:	4b79      	ldr	r3, [pc, #484]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 8009178:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800917a:	2202      	movs	r2, #2
 800917c:	4013      	ands	r3, r2
 800917e:	d0f0      	beq.n	8009162 <HAL_RCC_OscConfig+0x432>
 8009180:	e013      	b.n	80091aa <HAL_RCC_OscConfig+0x47a>
 8009182:	f7fe f985 	bl	8007490 <HAL_GetTick>
 8009186:	0003      	movs	r3, r0
 8009188:	613b      	str	r3, [r7, #16]
 800918a:	e009      	b.n	80091a0 <HAL_RCC_OscConfig+0x470>
 800918c:	f7fe f980 	bl	8007490 <HAL_GetTick>
 8009190:	0002      	movs	r2, r0
 8009192:	693b      	ldr	r3, [r7, #16]
 8009194:	1ad3      	subs	r3, r2, r3
 8009196:	4a73      	ldr	r2, [pc, #460]	; (8009364 <HAL_RCC_OscConfig+0x634>)
 8009198:	4293      	cmp	r3, r2
 800919a:	d901      	bls.n	80091a0 <HAL_RCC_OscConfig+0x470>
 800919c:	2303      	movs	r3, #3
 800919e:	e121      	b.n	80093e4 <HAL_RCC_OscConfig+0x6b4>
 80091a0:	4b6e      	ldr	r3, [pc, #440]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 80091a2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80091a4:	2202      	movs	r2, #2
 80091a6:	4013      	ands	r3, r2
 80091a8:	d1f0      	bne.n	800918c <HAL_RCC_OscConfig+0x45c>
 80091aa:	231f      	movs	r3, #31
 80091ac:	18fb      	adds	r3, r7, r3
 80091ae:	781b      	ldrb	r3, [r3, #0]
 80091b0:	2b01      	cmp	r3, #1
 80091b2:	d105      	bne.n	80091c0 <HAL_RCC_OscConfig+0x490>
 80091b4:	4b69      	ldr	r3, [pc, #420]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 80091b6:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80091b8:	4b68      	ldr	r3, [pc, #416]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 80091ba:	496b      	ldr	r1, [pc, #428]	; (8009368 <HAL_RCC_OscConfig+0x638>)
 80091bc:	400a      	ands	r2, r1
 80091be:	63da      	str	r2, [r3, #60]	; 0x3c
 80091c0:	687b      	ldr	r3, [r7, #4]
 80091c2:	681b      	ldr	r3, [r3, #0]
 80091c4:	2220      	movs	r2, #32
 80091c6:	4013      	ands	r3, r2
 80091c8:	d039      	beq.n	800923e <HAL_RCC_OscConfig+0x50e>
 80091ca:	687b      	ldr	r3, [r7, #4]
 80091cc:	69db      	ldr	r3, [r3, #28]
 80091ce:	2b00      	cmp	r3, #0
 80091d0:	d01b      	beq.n	800920a <HAL_RCC_OscConfig+0x4da>
 80091d2:	4b62      	ldr	r3, [pc, #392]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 80091d4:	681a      	ldr	r2, [r3, #0]
 80091d6:	4b61      	ldr	r3, [pc, #388]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 80091d8:	2180      	movs	r1, #128	; 0x80
 80091da:	03c9      	lsls	r1, r1, #15
 80091dc:	430a      	orrs	r2, r1
 80091de:	601a      	str	r2, [r3, #0]
 80091e0:	f7fe f956 	bl	8007490 <HAL_GetTick>
 80091e4:	0003      	movs	r3, r0
 80091e6:	613b      	str	r3, [r7, #16]
 80091e8:	e008      	b.n	80091fc <HAL_RCC_OscConfig+0x4cc>
 80091ea:	f7fe f951 	bl	8007490 <HAL_GetTick>
 80091ee:	0002      	movs	r2, r0
 80091f0:	693b      	ldr	r3, [r7, #16]
 80091f2:	1ad3      	subs	r3, r2, r3
 80091f4:	2b02      	cmp	r3, #2
 80091f6:	d901      	bls.n	80091fc <HAL_RCC_OscConfig+0x4cc>
 80091f8:	2303      	movs	r3, #3
 80091fa:	e0f3      	b.n	80093e4 <HAL_RCC_OscConfig+0x6b4>
 80091fc:	4b57      	ldr	r3, [pc, #348]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 80091fe:	681a      	ldr	r2, [r3, #0]
 8009200:	2380      	movs	r3, #128	; 0x80
 8009202:	041b      	lsls	r3, r3, #16
 8009204:	4013      	ands	r3, r2
 8009206:	d0f0      	beq.n	80091ea <HAL_RCC_OscConfig+0x4ba>
 8009208:	e019      	b.n	800923e <HAL_RCC_OscConfig+0x50e>
 800920a:	4b54      	ldr	r3, [pc, #336]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 800920c:	681a      	ldr	r2, [r3, #0]
 800920e:	4b53      	ldr	r3, [pc, #332]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 8009210:	4956      	ldr	r1, [pc, #344]	; (800936c <HAL_RCC_OscConfig+0x63c>)
 8009212:	400a      	ands	r2, r1
 8009214:	601a      	str	r2, [r3, #0]
 8009216:	f7fe f93b 	bl	8007490 <HAL_GetTick>
 800921a:	0003      	movs	r3, r0
 800921c:	613b      	str	r3, [r7, #16]
 800921e:	e008      	b.n	8009232 <HAL_RCC_OscConfig+0x502>
 8009220:	f7fe f936 	bl	8007490 <HAL_GetTick>
 8009224:	0002      	movs	r2, r0
 8009226:	693b      	ldr	r3, [r7, #16]
 8009228:	1ad3      	subs	r3, r2, r3
 800922a:	2b02      	cmp	r3, #2
 800922c:	d901      	bls.n	8009232 <HAL_RCC_OscConfig+0x502>
 800922e:	2303      	movs	r3, #3
 8009230:	e0d8      	b.n	80093e4 <HAL_RCC_OscConfig+0x6b4>
 8009232:	4b4a      	ldr	r3, [pc, #296]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 8009234:	681a      	ldr	r2, [r3, #0]
 8009236:	2380      	movs	r3, #128	; 0x80
 8009238:	041b      	lsls	r3, r3, #16
 800923a:	4013      	ands	r3, r2
 800923c:	d1f0      	bne.n	8009220 <HAL_RCC_OscConfig+0x4f0>
 800923e:	687b      	ldr	r3, [r7, #4]
 8009240:	6a1b      	ldr	r3, [r3, #32]
 8009242:	2b00      	cmp	r3, #0
 8009244:	d100      	bne.n	8009248 <HAL_RCC_OscConfig+0x518>
 8009246:	e0cc      	b.n	80093e2 <HAL_RCC_OscConfig+0x6b2>
 8009248:	4b44      	ldr	r3, [pc, #272]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 800924a:	689b      	ldr	r3, [r3, #8]
 800924c:	2238      	movs	r2, #56	; 0x38
 800924e:	4013      	ands	r3, r2
 8009250:	2b10      	cmp	r3, #16
 8009252:	d100      	bne.n	8009256 <HAL_RCC_OscConfig+0x526>
 8009254:	e07b      	b.n	800934e <HAL_RCC_OscConfig+0x61e>
 8009256:	687b      	ldr	r3, [r7, #4]
 8009258:	6a1b      	ldr	r3, [r3, #32]
 800925a:	2b02      	cmp	r3, #2
 800925c:	d156      	bne.n	800930c <HAL_RCC_OscConfig+0x5dc>
 800925e:	4b3f      	ldr	r3, [pc, #252]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 8009260:	681a      	ldr	r2, [r3, #0]
 8009262:	4b3e      	ldr	r3, [pc, #248]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 8009264:	4942      	ldr	r1, [pc, #264]	; (8009370 <HAL_RCC_OscConfig+0x640>)
 8009266:	400a      	ands	r2, r1
 8009268:	601a      	str	r2, [r3, #0]
 800926a:	f7fe f911 	bl	8007490 <HAL_GetTick>
 800926e:	0003      	movs	r3, r0
 8009270:	613b      	str	r3, [r7, #16]
 8009272:	e008      	b.n	8009286 <HAL_RCC_OscConfig+0x556>
 8009274:	f7fe f90c 	bl	8007490 <HAL_GetTick>
 8009278:	0002      	movs	r2, r0
 800927a:	693b      	ldr	r3, [r7, #16]
 800927c:	1ad3      	subs	r3, r2, r3
 800927e:	2b02      	cmp	r3, #2
 8009280:	d901      	bls.n	8009286 <HAL_RCC_OscConfig+0x556>
 8009282:	2303      	movs	r3, #3
 8009284:	e0ae      	b.n	80093e4 <HAL_RCC_OscConfig+0x6b4>
 8009286:	4b35      	ldr	r3, [pc, #212]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 8009288:	681a      	ldr	r2, [r3, #0]
 800928a:	2380      	movs	r3, #128	; 0x80
 800928c:	049b      	lsls	r3, r3, #18
 800928e:	4013      	ands	r3, r2
 8009290:	d1f0      	bne.n	8009274 <HAL_RCC_OscConfig+0x544>
 8009292:	4b32      	ldr	r3, [pc, #200]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 8009294:	68db      	ldr	r3, [r3, #12]
 8009296:	4a37      	ldr	r2, [pc, #220]	; (8009374 <HAL_RCC_OscConfig+0x644>)
 8009298:	4013      	ands	r3, r2
 800929a:	0019      	movs	r1, r3
 800929c:	687b      	ldr	r3, [r7, #4]
 800929e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80092a0:	687b      	ldr	r3, [r7, #4]
 80092a2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80092a4:	431a      	orrs	r2, r3
 80092a6:	687b      	ldr	r3, [r7, #4]
 80092a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80092aa:	021b      	lsls	r3, r3, #8
 80092ac:	431a      	orrs	r2, r3
 80092ae:	687b      	ldr	r3, [r7, #4]
 80092b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80092b2:	431a      	orrs	r2, r3
 80092b4:	687b      	ldr	r3, [r7, #4]
 80092b6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80092b8:	431a      	orrs	r2, r3
 80092ba:	687b      	ldr	r3, [r7, #4]
 80092bc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80092be:	431a      	orrs	r2, r3
 80092c0:	4b26      	ldr	r3, [pc, #152]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 80092c2:	430a      	orrs	r2, r1
 80092c4:	60da      	str	r2, [r3, #12]
 80092c6:	4b25      	ldr	r3, [pc, #148]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 80092c8:	681a      	ldr	r2, [r3, #0]
 80092ca:	4b24      	ldr	r3, [pc, #144]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 80092cc:	2180      	movs	r1, #128	; 0x80
 80092ce:	0449      	lsls	r1, r1, #17
 80092d0:	430a      	orrs	r2, r1
 80092d2:	601a      	str	r2, [r3, #0]
 80092d4:	4b21      	ldr	r3, [pc, #132]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 80092d6:	68da      	ldr	r2, [r3, #12]
 80092d8:	4b20      	ldr	r3, [pc, #128]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 80092da:	2180      	movs	r1, #128	; 0x80
 80092dc:	0549      	lsls	r1, r1, #21
 80092de:	430a      	orrs	r2, r1
 80092e0:	60da      	str	r2, [r3, #12]
 80092e2:	f7fe f8d5 	bl	8007490 <HAL_GetTick>
 80092e6:	0003      	movs	r3, r0
 80092e8:	613b      	str	r3, [r7, #16]
 80092ea:	e008      	b.n	80092fe <HAL_RCC_OscConfig+0x5ce>
 80092ec:	f7fe f8d0 	bl	8007490 <HAL_GetTick>
 80092f0:	0002      	movs	r2, r0
 80092f2:	693b      	ldr	r3, [r7, #16]
 80092f4:	1ad3      	subs	r3, r2, r3
 80092f6:	2b02      	cmp	r3, #2
 80092f8:	d901      	bls.n	80092fe <HAL_RCC_OscConfig+0x5ce>
 80092fa:	2303      	movs	r3, #3
 80092fc:	e072      	b.n	80093e4 <HAL_RCC_OscConfig+0x6b4>
 80092fe:	4b17      	ldr	r3, [pc, #92]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 8009300:	681a      	ldr	r2, [r3, #0]
 8009302:	2380      	movs	r3, #128	; 0x80
 8009304:	049b      	lsls	r3, r3, #18
 8009306:	4013      	ands	r3, r2
 8009308:	d0f0      	beq.n	80092ec <HAL_RCC_OscConfig+0x5bc>
 800930a:	e06a      	b.n	80093e2 <HAL_RCC_OscConfig+0x6b2>
 800930c:	4b13      	ldr	r3, [pc, #76]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 800930e:	681a      	ldr	r2, [r3, #0]
 8009310:	4b12      	ldr	r3, [pc, #72]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 8009312:	4917      	ldr	r1, [pc, #92]	; (8009370 <HAL_RCC_OscConfig+0x640>)
 8009314:	400a      	ands	r2, r1
 8009316:	601a      	str	r2, [r3, #0]
 8009318:	f7fe f8ba 	bl	8007490 <HAL_GetTick>
 800931c:	0003      	movs	r3, r0
 800931e:	613b      	str	r3, [r7, #16]
 8009320:	e008      	b.n	8009334 <HAL_RCC_OscConfig+0x604>
 8009322:	f7fe f8b5 	bl	8007490 <HAL_GetTick>
 8009326:	0002      	movs	r2, r0
 8009328:	693b      	ldr	r3, [r7, #16]
 800932a:	1ad3      	subs	r3, r2, r3
 800932c:	2b02      	cmp	r3, #2
 800932e:	d901      	bls.n	8009334 <HAL_RCC_OscConfig+0x604>
 8009330:	2303      	movs	r3, #3
 8009332:	e057      	b.n	80093e4 <HAL_RCC_OscConfig+0x6b4>
 8009334:	4b09      	ldr	r3, [pc, #36]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 8009336:	681a      	ldr	r2, [r3, #0]
 8009338:	2380      	movs	r3, #128	; 0x80
 800933a:	049b      	lsls	r3, r3, #18
 800933c:	4013      	ands	r3, r2
 800933e:	d1f0      	bne.n	8009322 <HAL_RCC_OscConfig+0x5f2>
 8009340:	4b06      	ldr	r3, [pc, #24]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 8009342:	68da      	ldr	r2, [r3, #12]
 8009344:	4b05      	ldr	r3, [pc, #20]	; (800935c <HAL_RCC_OscConfig+0x62c>)
 8009346:	490c      	ldr	r1, [pc, #48]	; (8009378 <HAL_RCC_OscConfig+0x648>)
 8009348:	400a      	ands	r2, r1
 800934a:	60da      	str	r2, [r3, #12]
 800934c:	e049      	b.n	80093e2 <HAL_RCC_OscConfig+0x6b2>
 800934e:	687b      	ldr	r3, [r7, #4]
 8009350:	6a1b      	ldr	r3, [r3, #32]
 8009352:	2b01      	cmp	r3, #1
 8009354:	d112      	bne.n	800937c <HAL_RCC_OscConfig+0x64c>
 8009356:	2301      	movs	r3, #1
 8009358:	e044      	b.n	80093e4 <HAL_RCC_OscConfig+0x6b4>
 800935a:	46c0      	nop			; (mov r8, r8)
 800935c:	40021000 	.word	0x40021000
 8009360:	40007000 	.word	0x40007000
 8009364:	00001388 	.word	0x00001388
 8009368:	efffffff 	.word	0xefffffff
 800936c:	ffbfffff 	.word	0xffbfffff
 8009370:	feffffff 	.word	0xfeffffff
 8009374:	11c1808c 	.word	0x11c1808c
 8009378:	eefefffc 	.word	0xeefefffc
 800937c:	4b1b      	ldr	r3, [pc, #108]	; (80093ec <HAL_RCC_OscConfig+0x6bc>)
 800937e:	68db      	ldr	r3, [r3, #12]
 8009380:	617b      	str	r3, [r7, #20]
 8009382:	697b      	ldr	r3, [r7, #20]
 8009384:	2203      	movs	r2, #3
 8009386:	401a      	ands	r2, r3
 8009388:	687b      	ldr	r3, [r7, #4]
 800938a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800938c:	429a      	cmp	r2, r3
 800938e:	d126      	bne.n	80093de <HAL_RCC_OscConfig+0x6ae>
 8009390:	697b      	ldr	r3, [r7, #20]
 8009392:	2270      	movs	r2, #112	; 0x70
 8009394:	401a      	ands	r2, r3
 8009396:	687b      	ldr	r3, [r7, #4]
 8009398:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800939a:	429a      	cmp	r2, r3
 800939c:	d11f      	bne.n	80093de <HAL_RCC_OscConfig+0x6ae>
 800939e:	697a      	ldr	r2, [r7, #20]
 80093a0:	23fe      	movs	r3, #254	; 0xfe
 80093a2:	01db      	lsls	r3, r3, #7
 80093a4:	401a      	ands	r2, r3
 80093a6:	687b      	ldr	r3, [r7, #4]
 80093a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80093aa:	021b      	lsls	r3, r3, #8
 80093ac:	429a      	cmp	r2, r3
 80093ae:	d116      	bne.n	80093de <HAL_RCC_OscConfig+0x6ae>
 80093b0:	697a      	ldr	r2, [r7, #20]
 80093b2:	23f8      	movs	r3, #248	; 0xf8
 80093b4:	039b      	lsls	r3, r3, #14
 80093b6:	401a      	ands	r2, r3
 80093b8:	687b      	ldr	r3, [r7, #4]
 80093ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80093bc:	429a      	cmp	r2, r3
 80093be:	d10e      	bne.n	80093de <HAL_RCC_OscConfig+0x6ae>
 80093c0:	697a      	ldr	r2, [r7, #20]
 80093c2:	23e0      	movs	r3, #224	; 0xe0
 80093c4:	051b      	lsls	r3, r3, #20
 80093c6:	401a      	ands	r2, r3
 80093c8:	687b      	ldr	r3, [r7, #4]
 80093ca:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80093cc:	429a      	cmp	r2, r3
 80093ce:	d106      	bne.n	80093de <HAL_RCC_OscConfig+0x6ae>
 80093d0:	697b      	ldr	r3, [r7, #20]
 80093d2:	0f5b      	lsrs	r3, r3, #29
 80093d4:	075a      	lsls	r2, r3, #29
 80093d6:	687b      	ldr	r3, [r7, #4]
 80093d8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80093da:	429a      	cmp	r2, r3
 80093dc:	d001      	beq.n	80093e2 <HAL_RCC_OscConfig+0x6b2>
 80093de:	2301      	movs	r3, #1
 80093e0:	e000      	b.n	80093e4 <HAL_RCC_OscConfig+0x6b4>
 80093e2:	2300      	movs	r3, #0
 80093e4:	0018      	movs	r0, r3
 80093e6:	46bd      	mov	sp, r7
 80093e8:	b008      	add	sp, #32
 80093ea:	bd80      	pop	{r7, pc}
 80093ec:	40021000 	.word	0x40021000

080093f0 <HAL_RCC_ClockConfig>:
 80093f0:	b580      	push	{r7, lr}
 80093f2:	b084      	sub	sp, #16
 80093f4:	af00      	add	r7, sp, #0
 80093f6:	6078      	str	r0, [r7, #4]
 80093f8:	6039      	str	r1, [r7, #0]
 80093fa:	687b      	ldr	r3, [r7, #4]
 80093fc:	2b00      	cmp	r3, #0
 80093fe:	d101      	bne.n	8009404 <HAL_RCC_ClockConfig+0x14>
 8009400:	2301      	movs	r3, #1
 8009402:	e0e9      	b.n	80095d8 <HAL_RCC_ClockConfig+0x1e8>
 8009404:	4b76      	ldr	r3, [pc, #472]	; (80095e0 <HAL_RCC_ClockConfig+0x1f0>)
 8009406:	681b      	ldr	r3, [r3, #0]
 8009408:	2207      	movs	r2, #7
 800940a:	4013      	ands	r3, r2
 800940c:	683a      	ldr	r2, [r7, #0]
 800940e:	429a      	cmp	r2, r3
 8009410:	d91e      	bls.n	8009450 <HAL_RCC_ClockConfig+0x60>
 8009412:	4b73      	ldr	r3, [pc, #460]	; (80095e0 <HAL_RCC_ClockConfig+0x1f0>)
 8009414:	681b      	ldr	r3, [r3, #0]
 8009416:	2207      	movs	r2, #7
 8009418:	4393      	bics	r3, r2
 800941a:	0019      	movs	r1, r3
 800941c:	4b70      	ldr	r3, [pc, #448]	; (80095e0 <HAL_RCC_ClockConfig+0x1f0>)
 800941e:	683a      	ldr	r2, [r7, #0]
 8009420:	430a      	orrs	r2, r1
 8009422:	601a      	str	r2, [r3, #0]
 8009424:	f7fe f834 	bl	8007490 <HAL_GetTick>
 8009428:	0003      	movs	r3, r0
 800942a:	60fb      	str	r3, [r7, #12]
 800942c:	e009      	b.n	8009442 <HAL_RCC_ClockConfig+0x52>
 800942e:	f7fe f82f 	bl	8007490 <HAL_GetTick>
 8009432:	0002      	movs	r2, r0
 8009434:	68fb      	ldr	r3, [r7, #12]
 8009436:	1ad3      	subs	r3, r2, r3
 8009438:	4a6a      	ldr	r2, [pc, #424]	; (80095e4 <HAL_RCC_ClockConfig+0x1f4>)
 800943a:	4293      	cmp	r3, r2
 800943c:	d901      	bls.n	8009442 <HAL_RCC_ClockConfig+0x52>
 800943e:	2303      	movs	r3, #3
 8009440:	e0ca      	b.n	80095d8 <HAL_RCC_ClockConfig+0x1e8>
 8009442:	4b67      	ldr	r3, [pc, #412]	; (80095e0 <HAL_RCC_ClockConfig+0x1f0>)
 8009444:	681b      	ldr	r3, [r3, #0]
 8009446:	2207      	movs	r2, #7
 8009448:	4013      	ands	r3, r2
 800944a:	683a      	ldr	r2, [r7, #0]
 800944c:	429a      	cmp	r2, r3
 800944e:	d1ee      	bne.n	800942e <HAL_RCC_ClockConfig+0x3e>
 8009450:	687b      	ldr	r3, [r7, #4]
 8009452:	681b      	ldr	r3, [r3, #0]
 8009454:	2202      	movs	r2, #2
 8009456:	4013      	ands	r3, r2
 8009458:	d015      	beq.n	8009486 <HAL_RCC_ClockConfig+0x96>
 800945a:	687b      	ldr	r3, [r7, #4]
 800945c:	681b      	ldr	r3, [r3, #0]
 800945e:	2204      	movs	r2, #4
 8009460:	4013      	ands	r3, r2
 8009462:	d006      	beq.n	8009472 <HAL_RCC_ClockConfig+0x82>
 8009464:	4b60      	ldr	r3, [pc, #384]	; (80095e8 <HAL_RCC_ClockConfig+0x1f8>)
 8009466:	689a      	ldr	r2, [r3, #8]
 8009468:	4b5f      	ldr	r3, [pc, #380]	; (80095e8 <HAL_RCC_ClockConfig+0x1f8>)
 800946a:	21e0      	movs	r1, #224	; 0xe0
 800946c:	01c9      	lsls	r1, r1, #7
 800946e:	430a      	orrs	r2, r1
 8009470:	609a      	str	r2, [r3, #8]
 8009472:	4b5d      	ldr	r3, [pc, #372]	; (80095e8 <HAL_RCC_ClockConfig+0x1f8>)
 8009474:	689b      	ldr	r3, [r3, #8]
 8009476:	4a5d      	ldr	r2, [pc, #372]	; (80095ec <HAL_RCC_ClockConfig+0x1fc>)
 8009478:	4013      	ands	r3, r2
 800947a:	0019      	movs	r1, r3
 800947c:	687b      	ldr	r3, [r7, #4]
 800947e:	689a      	ldr	r2, [r3, #8]
 8009480:	4b59      	ldr	r3, [pc, #356]	; (80095e8 <HAL_RCC_ClockConfig+0x1f8>)
 8009482:	430a      	orrs	r2, r1
 8009484:	609a      	str	r2, [r3, #8]
 8009486:	687b      	ldr	r3, [r7, #4]
 8009488:	681b      	ldr	r3, [r3, #0]
 800948a:	2201      	movs	r2, #1
 800948c:	4013      	ands	r3, r2
 800948e:	d057      	beq.n	8009540 <HAL_RCC_ClockConfig+0x150>
 8009490:	687b      	ldr	r3, [r7, #4]
 8009492:	685b      	ldr	r3, [r3, #4]
 8009494:	2b01      	cmp	r3, #1
 8009496:	d107      	bne.n	80094a8 <HAL_RCC_ClockConfig+0xb8>
 8009498:	4b53      	ldr	r3, [pc, #332]	; (80095e8 <HAL_RCC_ClockConfig+0x1f8>)
 800949a:	681a      	ldr	r2, [r3, #0]
 800949c:	2380      	movs	r3, #128	; 0x80
 800949e:	029b      	lsls	r3, r3, #10
 80094a0:	4013      	ands	r3, r2
 80094a2:	d12b      	bne.n	80094fc <HAL_RCC_ClockConfig+0x10c>
 80094a4:	2301      	movs	r3, #1
 80094a6:	e097      	b.n	80095d8 <HAL_RCC_ClockConfig+0x1e8>
 80094a8:	687b      	ldr	r3, [r7, #4]
 80094aa:	685b      	ldr	r3, [r3, #4]
 80094ac:	2b02      	cmp	r3, #2
 80094ae:	d107      	bne.n	80094c0 <HAL_RCC_ClockConfig+0xd0>
 80094b0:	4b4d      	ldr	r3, [pc, #308]	; (80095e8 <HAL_RCC_ClockConfig+0x1f8>)
 80094b2:	681a      	ldr	r2, [r3, #0]
 80094b4:	2380      	movs	r3, #128	; 0x80
 80094b6:	049b      	lsls	r3, r3, #18
 80094b8:	4013      	ands	r3, r2
 80094ba:	d11f      	bne.n	80094fc <HAL_RCC_ClockConfig+0x10c>
 80094bc:	2301      	movs	r3, #1
 80094be:	e08b      	b.n	80095d8 <HAL_RCC_ClockConfig+0x1e8>
 80094c0:	687b      	ldr	r3, [r7, #4]
 80094c2:	685b      	ldr	r3, [r3, #4]
 80094c4:	2b00      	cmp	r3, #0
 80094c6:	d107      	bne.n	80094d8 <HAL_RCC_ClockConfig+0xe8>
 80094c8:	4b47      	ldr	r3, [pc, #284]	; (80095e8 <HAL_RCC_ClockConfig+0x1f8>)
 80094ca:	681a      	ldr	r2, [r3, #0]
 80094cc:	2380      	movs	r3, #128	; 0x80
 80094ce:	00db      	lsls	r3, r3, #3
 80094d0:	4013      	ands	r3, r2
 80094d2:	d113      	bne.n	80094fc <HAL_RCC_ClockConfig+0x10c>
 80094d4:	2301      	movs	r3, #1
 80094d6:	e07f      	b.n	80095d8 <HAL_RCC_ClockConfig+0x1e8>
 80094d8:	687b      	ldr	r3, [r7, #4]
 80094da:	685b      	ldr	r3, [r3, #4]
 80094dc:	2b03      	cmp	r3, #3
 80094de:	d106      	bne.n	80094ee <HAL_RCC_ClockConfig+0xfe>
 80094e0:	4b41      	ldr	r3, [pc, #260]	; (80095e8 <HAL_RCC_ClockConfig+0x1f8>)
 80094e2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80094e4:	2202      	movs	r2, #2
 80094e6:	4013      	ands	r3, r2
 80094e8:	d108      	bne.n	80094fc <HAL_RCC_ClockConfig+0x10c>
 80094ea:	2301      	movs	r3, #1
 80094ec:	e074      	b.n	80095d8 <HAL_RCC_ClockConfig+0x1e8>
 80094ee:	4b3e      	ldr	r3, [pc, #248]	; (80095e8 <HAL_RCC_ClockConfig+0x1f8>)
 80094f0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80094f2:	2202      	movs	r2, #2
 80094f4:	4013      	ands	r3, r2
 80094f6:	d101      	bne.n	80094fc <HAL_RCC_ClockConfig+0x10c>
 80094f8:	2301      	movs	r3, #1
 80094fa:	e06d      	b.n	80095d8 <HAL_RCC_ClockConfig+0x1e8>
 80094fc:	4b3a      	ldr	r3, [pc, #232]	; (80095e8 <HAL_RCC_ClockConfig+0x1f8>)
 80094fe:	689b      	ldr	r3, [r3, #8]
 8009500:	2207      	movs	r2, #7
 8009502:	4393      	bics	r3, r2
 8009504:	0019      	movs	r1, r3
 8009506:	687b      	ldr	r3, [r7, #4]
 8009508:	685a      	ldr	r2, [r3, #4]
 800950a:	4b37      	ldr	r3, [pc, #220]	; (80095e8 <HAL_RCC_ClockConfig+0x1f8>)
 800950c:	430a      	orrs	r2, r1
 800950e:	609a      	str	r2, [r3, #8]
 8009510:	f7fd ffbe 	bl	8007490 <HAL_GetTick>
 8009514:	0003      	movs	r3, r0
 8009516:	60fb      	str	r3, [r7, #12]
 8009518:	e009      	b.n	800952e <HAL_RCC_ClockConfig+0x13e>
 800951a:	f7fd ffb9 	bl	8007490 <HAL_GetTick>
 800951e:	0002      	movs	r2, r0
 8009520:	68fb      	ldr	r3, [r7, #12]
 8009522:	1ad3      	subs	r3, r2, r3
 8009524:	4a2f      	ldr	r2, [pc, #188]	; (80095e4 <HAL_RCC_ClockConfig+0x1f4>)
 8009526:	4293      	cmp	r3, r2
 8009528:	d901      	bls.n	800952e <HAL_RCC_ClockConfig+0x13e>
 800952a:	2303      	movs	r3, #3
 800952c:	e054      	b.n	80095d8 <HAL_RCC_ClockConfig+0x1e8>
 800952e:	4b2e      	ldr	r3, [pc, #184]	; (80095e8 <HAL_RCC_ClockConfig+0x1f8>)
 8009530:	689b      	ldr	r3, [r3, #8]
 8009532:	2238      	movs	r2, #56	; 0x38
 8009534:	401a      	ands	r2, r3
 8009536:	687b      	ldr	r3, [r7, #4]
 8009538:	685b      	ldr	r3, [r3, #4]
 800953a:	00db      	lsls	r3, r3, #3
 800953c:	429a      	cmp	r2, r3
 800953e:	d1ec      	bne.n	800951a <HAL_RCC_ClockConfig+0x12a>
 8009540:	4b27      	ldr	r3, [pc, #156]	; (80095e0 <HAL_RCC_ClockConfig+0x1f0>)
 8009542:	681b      	ldr	r3, [r3, #0]
 8009544:	2207      	movs	r2, #7
 8009546:	4013      	ands	r3, r2
 8009548:	683a      	ldr	r2, [r7, #0]
 800954a:	429a      	cmp	r2, r3
 800954c:	d21e      	bcs.n	800958c <HAL_RCC_ClockConfig+0x19c>
 800954e:	4b24      	ldr	r3, [pc, #144]	; (80095e0 <HAL_RCC_ClockConfig+0x1f0>)
 8009550:	681b      	ldr	r3, [r3, #0]
 8009552:	2207      	movs	r2, #7
 8009554:	4393      	bics	r3, r2
 8009556:	0019      	movs	r1, r3
 8009558:	4b21      	ldr	r3, [pc, #132]	; (80095e0 <HAL_RCC_ClockConfig+0x1f0>)
 800955a:	683a      	ldr	r2, [r7, #0]
 800955c:	430a      	orrs	r2, r1
 800955e:	601a      	str	r2, [r3, #0]
 8009560:	f7fd ff96 	bl	8007490 <HAL_GetTick>
 8009564:	0003      	movs	r3, r0
 8009566:	60fb      	str	r3, [r7, #12]
 8009568:	e009      	b.n	800957e <HAL_RCC_ClockConfig+0x18e>
 800956a:	f7fd ff91 	bl	8007490 <HAL_GetTick>
 800956e:	0002      	movs	r2, r0
 8009570:	68fb      	ldr	r3, [r7, #12]
 8009572:	1ad3      	subs	r3, r2, r3
 8009574:	4a1b      	ldr	r2, [pc, #108]	; (80095e4 <HAL_RCC_ClockConfig+0x1f4>)
 8009576:	4293      	cmp	r3, r2
 8009578:	d901      	bls.n	800957e <HAL_RCC_ClockConfig+0x18e>
 800957a:	2303      	movs	r3, #3
 800957c:	e02c      	b.n	80095d8 <HAL_RCC_ClockConfig+0x1e8>
 800957e:	4b18      	ldr	r3, [pc, #96]	; (80095e0 <HAL_RCC_ClockConfig+0x1f0>)
 8009580:	681b      	ldr	r3, [r3, #0]
 8009582:	2207      	movs	r2, #7
 8009584:	4013      	ands	r3, r2
 8009586:	683a      	ldr	r2, [r7, #0]
 8009588:	429a      	cmp	r2, r3
 800958a:	d1ee      	bne.n	800956a <HAL_RCC_ClockConfig+0x17a>
 800958c:	687b      	ldr	r3, [r7, #4]
 800958e:	681b      	ldr	r3, [r3, #0]
 8009590:	2204      	movs	r2, #4
 8009592:	4013      	ands	r3, r2
 8009594:	d009      	beq.n	80095aa <HAL_RCC_ClockConfig+0x1ba>
 8009596:	4b14      	ldr	r3, [pc, #80]	; (80095e8 <HAL_RCC_ClockConfig+0x1f8>)
 8009598:	689b      	ldr	r3, [r3, #8]
 800959a:	4a15      	ldr	r2, [pc, #84]	; (80095f0 <HAL_RCC_ClockConfig+0x200>)
 800959c:	4013      	ands	r3, r2
 800959e:	0019      	movs	r1, r3
 80095a0:	687b      	ldr	r3, [r7, #4]
 80095a2:	68da      	ldr	r2, [r3, #12]
 80095a4:	4b10      	ldr	r3, [pc, #64]	; (80095e8 <HAL_RCC_ClockConfig+0x1f8>)
 80095a6:	430a      	orrs	r2, r1
 80095a8:	609a      	str	r2, [r3, #8]
 80095aa:	f000 f829 	bl	8009600 <HAL_RCC_GetSysClockFreq>
 80095ae:	0001      	movs	r1, r0
 80095b0:	4b0d      	ldr	r3, [pc, #52]	; (80095e8 <HAL_RCC_ClockConfig+0x1f8>)
 80095b2:	689b      	ldr	r3, [r3, #8]
 80095b4:	0a1b      	lsrs	r3, r3, #8
 80095b6:	220f      	movs	r2, #15
 80095b8:	401a      	ands	r2, r3
 80095ba:	4b0e      	ldr	r3, [pc, #56]	; (80095f4 <HAL_RCC_ClockConfig+0x204>)
 80095bc:	0092      	lsls	r2, r2, #2
 80095be:	58d3      	ldr	r3, [r2, r3]
 80095c0:	221f      	movs	r2, #31
 80095c2:	4013      	ands	r3, r2
 80095c4:	000a      	movs	r2, r1
 80095c6:	40da      	lsrs	r2, r3
 80095c8:	4b0b      	ldr	r3, [pc, #44]	; (80095f8 <HAL_RCC_ClockConfig+0x208>)
 80095ca:	601a      	str	r2, [r3, #0]
 80095cc:	4b0b      	ldr	r3, [pc, #44]	; (80095fc <HAL_RCC_ClockConfig+0x20c>)
 80095ce:	681b      	ldr	r3, [r3, #0]
 80095d0:	0018      	movs	r0, r3
 80095d2:	f7fd fe09 	bl	80071e8 <HAL_InitTick>
 80095d6:	0003      	movs	r3, r0
 80095d8:	0018      	movs	r0, r3
 80095da:	46bd      	mov	sp, r7
 80095dc:	b004      	add	sp, #16
 80095de:	bd80      	pop	{r7, pc}
 80095e0:	40022000 	.word	0x40022000
 80095e4:	00001388 	.word	0x00001388
 80095e8:	40021000 	.word	0x40021000
 80095ec:	fffff0ff 	.word	0xfffff0ff
 80095f0:	ffff8fff 	.word	0xffff8fff
 80095f4:	08019908 	.word	0x08019908
 80095f8:	20000004 	.word	0x20000004
 80095fc:	20000008 	.word	0x20000008

08009600 <HAL_RCC_GetSysClockFreq>:
 8009600:	b580      	push	{r7, lr}
 8009602:	b086      	sub	sp, #24
 8009604:	af00      	add	r7, sp, #0
 8009606:	4b3c      	ldr	r3, [pc, #240]	; (80096f8 <HAL_RCC_GetSysClockFreq+0xf8>)
 8009608:	689b      	ldr	r3, [r3, #8]
 800960a:	2238      	movs	r2, #56	; 0x38
 800960c:	4013      	ands	r3, r2
 800960e:	d10f      	bne.n	8009630 <HAL_RCC_GetSysClockFreq+0x30>
 8009610:	4b39      	ldr	r3, [pc, #228]	; (80096f8 <HAL_RCC_GetSysClockFreq+0xf8>)
 8009612:	681b      	ldr	r3, [r3, #0]
 8009614:	0adb      	lsrs	r3, r3, #11
 8009616:	2207      	movs	r2, #7
 8009618:	4013      	ands	r3, r2
 800961a:	2201      	movs	r2, #1
 800961c:	409a      	lsls	r2, r3
 800961e:	0013      	movs	r3, r2
 8009620:	603b      	str	r3, [r7, #0]
 8009622:	6839      	ldr	r1, [r7, #0]
 8009624:	4835      	ldr	r0, [pc, #212]	; (80096fc <HAL_RCC_GetSysClockFreq+0xfc>)
 8009626:	f7fc fde3 	bl	80061f0 <__udivsi3>
 800962a:	0003      	movs	r3, r0
 800962c:	613b      	str	r3, [r7, #16]
 800962e:	e05d      	b.n	80096ec <HAL_RCC_GetSysClockFreq+0xec>
 8009630:	4b31      	ldr	r3, [pc, #196]	; (80096f8 <HAL_RCC_GetSysClockFreq+0xf8>)
 8009632:	689b      	ldr	r3, [r3, #8]
 8009634:	2238      	movs	r2, #56	; 0x38
 8009636:	4013      	ands	r3, r2
 8009638:	2b08      	cmp	r3, #8
 800963a:	d102      	bne.n	8009642 <HAL_RCC_GetSysClockFreq+0x42>
 800963c:	4b30      	ldr	r3, [pc, #192]	; (8009700 <HAL_RCC_GetSysClockFreq+0x100>)
 800963e:	613b      	str	r3, [r7, #16]
 8009640:	e054      	b.n	80096ec <HAL_RCC_GetSysClockFreq+0xec>
 8009642:	4b2d      	ldr	r3, [pc, #180]	; (80096f8 <HAL_RCC_GetSysClockFreq+0xf8>)
 8009644:	689b      	ldr	r3, [r3, #8]
 8009646:	2238      	movs	r2, #56	; 0x38
 8009648:	4013      	ands	r3, r2
 800964a:	2b10      	cmp	r3, #16
 800964c:	d138      	bne.n	80096c0 <HAL_RCC_GetSysClockFreq+0xc0>
 800964e:	4b2a      	ldr	r3, [pc, #168]	; (80096f8 <HAL_RCC_GetSysClockFreq+0xf8>)
 8009650:	68db      	ldr	r3, [r3, #12]
 8009652:	2203      	movs	r2, #3
 8009654:	4013      	ands	r3, r2
 8009656:	60fb      	str	r3, [r7, #12]
 8009658:	4b27      	ldr	r3, [pc, #156]	; (80096f8 <HAL_RCC_GetSysClockFreq+0xf8>)
 800965a:	68db      	ldr	r3, [r3, #12]
 800965c:	091b      	lsrs	r3, r3, #4
 800965e:	2207      	movs	r2, #7
 8009660:	4013      	ands	r3, r2
 8009662:	3301      	adds	r3, #1
 8009664:	60bb      	str	r3, [r7, #8]
 8009666:	68fb      	ldr	r3, [r7, #12]
 8009668:	2b03      	cmp	r3, #3
 800966a:	d10d      	bne.n	8009688 <HAL_RCC_GetSysClockFreq+0x88>
 800966c:	68b9      	ldr	r1, [r7, #8]
 800966e:	4824      	ldr	r0, [pc, #144]	; (8009700 <HAL_RCC_GetSysClockFreq+0x100>)
 8009670:	f7fc fdbe 	bl	80061f0 <__udivsi3>
 8009674:	0003      	movs	r3, r0
 8009676:	0019      	movs	r1, r3
 8009678:	4b1f      	ldr	r3, [pc, #124]	; (80096f8 <HAL_RCC_GetSysClockFreq+0xf8>)
 800967a:	68db      	ldr	r3, [r3, #12]
 800967c:	0a1b      	lsrs	r3, r3, #8
 800967e:	227f      	movs	r2, #127	; 0x7f
 8009680:	4013      	ands	r3, r2
 8009682:	434b      	muls	r3, r1
 8009684:	617b      	str	r3, [r7, #20]
 8009686:	e00d      	b.n	80096a4 <HAL_RCC_GetSysClockFreq+0xa4>
 8009688:	68b9      	ldr	r1, [r7, #8]
 800968a:	481c      	ldr	r0, [pc, #112]	; (80096fc <HAL_RCC_GetSysClockFreq+0xfc>)
 800968c:	f7fc fdb0 	bl	80061f0 <__udivsi3>
 8009690:	0003      	movs	r3, r0
 8009692:	0019      	movs	r1, r3
 8009694:	4b18      	ldr	r3, [pc, #96]	; (80096f8 <HAL_RCC_GetSysClockFreq+0xf8>)
 8009696:	68db      	ldr	r3, [r3, #12]
 8009698:	0a1b      	lsrs	r3, r3, #8
 800969a:	227f      	movs	r2, #127	; 0x7f
 800969c:	4013      	ands	r3, r2
 800969e:	434b      	muls	r3, r1
 80096a0:	617b      	str	r3, [r7, #20]
 80096a2:	46c0      	nop			; (mov r8, r8)
 80096a4:	4b14      	ldr	r3, [pc, #80]	; (80096f8 <HAL_RCC_GetSysClockFreq+0xf8>)
 80096a6:	68db      	ldr	r3, [r3, #12]
 80096a8:	0f5b      	lsrs	r3, r3, #29
 80096aa:	2207      	movs	r2, #7
 80096ac:	4013      	ands	r3, r2
 80096ae:	3301      	adds	r3, #1
 80096b0:	607b      	str	r3, [r7, #4]
 80096b2:	6879      	ldr	r1, [r7, #4]
 80096b4:	6978      	ldr	r0, [r7, #20]
 80096b6:	f7fc fd9b 	bl	80061f0 <__udivsi3>
 80096ba:	0003      	movs	r3, r0
 80096bc:	613b      	str	r3, [r7, #16]
 80096be:	e015      	b.n	80096ec <HAL_RCC_GetSysClockFreq+0xec>
 80096c0:	4b0d      	ldr	r3, [pc, #52]	; (80096f8 <HAL_RCC_GetSysClockFreq+0xf8>)
 80096c2:	689b      	ldr	r3, [r3, #8]
 80096c4:	2238      	movs	r2, #56	; 0x38
 80096c6:	4013      	ands	r3, r2
 80096c8:	2b20      	cmp	r3, #32
 80096ca:	d103      	bne.n	80096d4 <HAL_RCC_GetSysClockFreq+0xd4>
 80096cc:	2380      	movs	r3, #128	; 0x80
 80096ce:	021b      	lsls	r3, r3, #8
 80096d0:	613b      	str	r3, [r7, #16]
 80096d2:	e00b      	b.n	80096ec <HAL_RCC_GetSysClockFreq+0xec>
 80096d4:	4b08      	ldr	r3, [pc, #32]	; (80096f8 <HAL_RCC_GetSysClockFreq+0xf8>)
 80096d6:	689b      	ldr	r3, [r3, #8]
 80096d8:	2238      	movs	r2, #56	; 0x38
 80096da:	4013      	ands	r3, r2
 80096dc:	2b18      	cmp	r3, #24
 80096de:	d103      	bne.n	80096e8 <HAL_RCC_GetSysClockFreq+0xe8>
 80096e0:	23fa      	movs	r3, #250	; 0xfa
 80096e2:	01db      	lsls	r3, r3, #7
 80096e4:	613b      	str	r3, [r7, #16]
 80096e6:	e001      	b.n	80096ec <HAL_RCC_GetSysClockFreq+0xec>
 80096e8:	2300      	movs	r3, #0
 80096ea:	613b      	str	r3, [r7, #16]
 80096ec:	693b      	ldr	r3, [r7, #16]
 80096ee:	0018      	movs	r0, r3
 80096f0:	46bd      	mov	sp, r7
 80096f2:	b006      	add	sp, #24
 80096f4:	bd80      	pop	{r7, pc}
 80096f6:	46c0      	nop			; (mov r8, r8)
 80096f8:	40021000 	.word	0x40021000
 80096fc:	00f42400 	.word	0x00f42400
 8009700:	007a1200 	.word	0x007a1200

08009704 <HAL_RCC_GetHCLKFreq>:
 8009704:	b580      	push	{r7, lr}
 8009706:	af00      	add	r7, sp, #0
 8009708:	4b02      	ldr	r3, [pc, #8]	; (8009714 <HAL_RCC_GetHCLKFreq+0x10>)
 800970a:	681b      	ldr	r3, [r3, #0]
 800970c:	0018      	movs	r0, r3
 800970e:	46bd      	mov	sp, r7
 8009710:	bd80      	pop	{r7, pc}
 8009712:	46c0      	nop			; (mov r8, r8)
 8009714:	20000004 	.word	0x20000004

08009718 <HAL_RCC_GetPCLK1Freq>:
 8009718:	b5b0      	push	{r4, r5, r7, lr}
 800971a:	af00      	add	r7, sp, #0
 800971c:	f7ff fff2 	bl	8009704 <HAL_RCC_GetHCLKFreq>
 8009720:	0004      	movs	r4, r0
 8009722:	f7ff faf9 	bl	8008d18 <LL_RCC_GetAPB1Prescaler>
 8009726:	0003      	movs	r3, r0
 8009728:	0b1a      	lsrs	r2, r3, #12
 800972a:	4b05      	ldr	r3, [pc, #20]	; (8009740 <HAL_RCC_GetPCLK1Freq+0x28>)
 800972c:	0092      	lsls	r2, r2, #2
 800972e:	58d3      	ldr	r3, [r2, r3]
 8009730:	221f      	movs	r2, #31
 8009732:	4013      	ands	r3, r2
 8009734:	40dc      	lsrs	r4, r3
 8009736:	0023      	movs	r3, r4
 8009738:	0018      	movs	r0, r3
 800973a:	46bd      	mov	sp, r7
 800973c:	bdb0      	pop	{r4, r5, r7, pc}
 800973e:	46c0      	nop			; (mov r8, r8)
 8009740:	08019948 	.word	0x08019948

08009744 <HAL_RCC_GetClockConfig>:
 8009744:	b580      	push	{r7, lr}
 8009746:	b082      	sub	sp, #8
 8009748:	af00      	add	r7, sp, #0
 800974a:	6078      	str	r0, [r7, #4]
 800974c:	6039      	str	r1, [r7, #0]
 800974e:	687b      	ldr	r3, [r7, #4]
 8009750:	2207      	movs	r2, #7
 8009752:	601a      	str	r2, [r3, #0]
 8009754:	4b0e      	ldr	r3, [pc, #56]	; (8009790 <HAL_RCC_GetClockConfig+0x4c>)
 8009756:	689b      	ldr	r3, [r3, #8]
 8009758:	2207      	movs	r2, #7
 800975a:	401a      	ands	r2, r3
 800975c:	687b      	ldr	r3, [r7, #4]
 800975e:	605a      	str	r2, [r3, #4]
 8009760:	4b0b      	ldr	r3, [pc, #44]	; (8009790 <HAL_RCC_GetClockConfig+0x4c>)
 8009762:	689a      	ldr	r2, [r3, #8]
 8009764:	23f0      	movs	r3, #240	; 0xf0
 8009766:	011b      	lsls	r3, r3, #4
 8009768:	401a      	ands	r2, r3
 800976a:	687b      	ldr	r3, [r7, #4]
 800976c:	609a      	str	r2, [r3, #8]
 800976e:	4b08      	ldr	r3, [pc, #32]	; (8009790 <HAL_RCC_GetClockConfig+0x4c>)
 8009770:	689a      	ldr	r2, [r3, #8]
 8009772:	23e0      	movs	r3, #224	; 0xe0
 8009774:	01db      	lsls	r3, r3, #7
 8009776:	401a      	ands	r2, r3
 8009778:	687b      	ldr	r3, [r7, #4]
 800977a:	60da      	str	r2, [r3, #12]
 800977c:	4b05      	ldr	r3, [pc, #20]	; (8009794 <HAL_RCC_GetClockConfig+0x50>)
 800977e:	681b      	ldr	r3, [r3, #0]
 8009780:	2207      	movs	r2, #7
 8009782:	401a      	ands	r2, r3
 8009784:	683b      	ldr	r3, [r7, #0]
 8009786:	601a      	str	r2, [r3, #0]
 8009788:	46c0      	nop			; (mov r8, r8)
 800978a:	46bd      	mov	sp, r7
 800978c:	b002      	add	sp, #8
 800978e:	bd80      	pop	{r7, pc}
 8009790:	40021000 	.word	0x40021000
 8009794:	40022000 	.word	0x40022000

08009798 <HAL_RCCEx_PeriphCLKConfig>:
 8009798:	b580      	push	{r7, lr}
 800979a:	b086      	sub	sp, #24
 800979c:	af00      	add	r7, sp, #0
 800979e:	6078      	str	r0, [r7, #4]
 80097a0:	2313      	movs	r3, #19
 80097a2:	18fb      	adds	r3, r7, r3
 80097a4:	2200      	movs	r2, #0
 80097a6:	701a      	strb	r2, [r3, #0]
 80097a8:	2312      	movs	r3, #18
 80097aa:	18fb      	adds	r3, r7, r3
 80097ac:	2200      	movs	r2, #0
 80097ae:	701a      	strb	r2, [r3, #0]
 80097b0:	687b      	ldr	r3, [r7, #4]
 80097b2:	681a      	ldr	r2, [r3, #0]
 80097b4:	2380      	movs	r3, #128	; 0x80
 80097b6:	029b      	lsls	r3, r3, #10
 80097b8:	4013      	ands	r3, r2
 80097ba:	d100      	bne.n	80097be <HAL_RCCEx_PeriphCLKConfig+0x26>
 80097bc:	e0ad      	b.n	800991a <HAL_RCCEx_PeriphCLKConfig+0x182>
 80097be:	2011      	movs	r0, #17
 80097c0:	183b      	adds	r3, r7, r0
 80097c2:	2200      	movs	r2, #0
 80097c4:	701a      	strb	r2, [r3, #0]
 80097c6:	4b47      	ldr	r3, [pc, #284]	; (80098e4 <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 80097c8:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80097ca:	2380      	movs	r3, #128	; 0x80
 80097cc:	055b      	lsls	r3, r3, #21
 80097ce:	4013      	ands	r3, r2
 80097d0:	d110      	bne.n	80097f4 <HAL_RCCEx_PeriphCLKConfig+0x5c>
 80097d2:	4b44      	ldr	r3, [pc, #272]	; (80098e4 <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 80097d4:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80097d6:	4b43      	ldr	r3, [pc, #268]	; (80098e4 <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 80097d8:	2180      	movs	r1, #128	; 0x80
 80097da:	0549      	lsls	r1, r1, #21
 80097dc:	430a      	orrs	r2, r1
 80097de:	63da      	str	r2, [r3, #60]	; 0x3c
 80097e0:	4b40      	ldr	r3, [pc, #256]	; (80098e4 <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 80097e2:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80097e4:	2380      	movs	r3, #128	; 0x80
 80097e6:	055b      	lsls	r3, r3, #21
 80097e8:	4013      	ands	r3, r2
 80097ea:	60bb      	str	r3, [r7, #8]
 80097ec:	68bb      	ldr	r3, [r7, #8]
 80097ee:	183b      	adds	r3, r7, r0
 80097f0:	2201      	movs	r2, #1
 80097f2:	701a      	strb	r2, [r3, #0]
 80097f4:	4b3c      	ldr	r3, [pc, #240]	; (80098e8 <HAL_RCCEx_PeriphCLKConfig+0x150>)
 80097f6:	681a      	ldr	r2, [r3, #0]
 80097f8:	4b3b      	ldr	r3, [pc, #236]	; (80098e8 <HAL_RCCEx_PeriphCLKConfig+0x150>)
 80097fa:	2180      	movs	r1, #128	; 0x80
 80097fc:	0049      	lsls	r1, r1, #1
 80097fe:	430a      	orrs	r2, r1
 8009800:	601a      	str	r2, [r3, #0]
 8009802:	f7fd fe45 	bl	8007490 <HAL_GetTick>
 8009806:	0003      	movs	r3, r0
 8009808:	60fb      	str	r3, [r7, #12]
 800980a:	e00b      	b.n	8009824 <HAL_RCCEx_PeriphCLKConfig+0x8c>
 800980c:	f7fd fe40 	bl	8007490 <HAL_GetTick>
 8009810:	0002      	movs	r2, r0
 8009812:	68fb      	ldr	r3, [r7, #12]
 8009814:	1ad3      	subs	r3, r2, r3
 8009816:	2b02      	cmp	r3, #2
 8009818:	d904      	bls.n	8009824 <HAL_RCCEx_PeriphCLKConfig+0x8c>
 800981a:	2313      	movs	r3, #19
 800981c:	18fb      	adds	r3, r7, r3
 800981e:	2203      	movs	r2, #3
 8009820:	701a      	strb	r2, [r3, #0]
 8009822:	e005      	b.n	8009830 <HAL_RCCEx_PeriphCLKConfig+0x98>
 8009824:	4b30      	ldr	r3, [pc, #192]	; (80098e8 <HAL_RCCEx_PeriphCLKConfig+0x150>)
 8009826:	681a      	ldr	r2, [r3, #0]
 8009828:	2380      	movs	r3, #128	; 0x80
 800982a:	005b      	lsls	r3, r3, #1
 800982c:	4013      	ands	r3, r2
 800982e:	d0ed      	beq.n	800980c <HAL_RCCEx_PeriphCLKConfig+0x74>
 8009830:	2313      	movs	r3, #19
 8009832:	18fb      	adds	r3, r7, r3
 8009834:	781b      	ldrb	r3, [r3, #0]
 8009836:	2b00      	cmp	r3, #0
 8009838:	d15e      	bne.n	80098f8 <HAL_RCCEx_PeriphCLKConfig+0x160>
 800983a:	4b2a      	ldr	r3, [pc, #168]	; (80098e4 <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 800983c:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800983e:	23c0      	movs	r3, #192	; 0xc0
 8009840:	009b      	lsls	r3, r3, #2
 8009842:	4013      	ands	r3, r2
 8009844:	617b      	str	r3, [r7, #20]
 8009846:	697b      	ldr	r3, [r7, #20]
 8009848:	2b00      	cmp	r3, #0
 800984a:	d019      	beq.n	8009880 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 800984c:	687b      	ldr	r3, [r7, #4]
 800984e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009850:	697a      	ldr	r2, [r7, #20]
 8009852:	429a      	cmp	r2, r3
 8009854:	d014      	beq.n	8009880 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 8009856:	4b23      	ldr	r3, [pc, #140]	; (80098e4 <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 8009858:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800985a:	4a24      	ldr	r2, [pc, #144]	; (80098ec <HAL_RCCEx_PeriphCLKConfig+0x154>)
 800985c:	4013      	ands	r3, r2
 800985e:	617b      	str	r3, [r7, #20]
 8009860:	4b20      	ldr	r3, [pc, #128]	; (80098e4 <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 8009862:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8009864:	4b1f      	ldr	r3, [pc, #124]	; (80098e4 <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 8009866:	2180      	movs	r1, #128	; 0x80
 8009868:	0249      	lsls	r1, r1, #9
 800986a:	430a      	orrs	r2, r1
 800986c:	65da      	str	r2, [r3, #92]	; 0x5c
 800986e:	4b1d      	ldr	r3, [pc, #116]	; (80098e4 <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 8009870:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8009872:	4b1c      	ldr	r3, [pc, #112]	; (80098e4 <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 8009874:	491e      	ldr	r1, [pc, #120]	; (80098f0 <HAL_RCCEx_PeriphCLKConfig+0x158>)
 8009876:	400a      	ands	r2, r1
 8009878:	65da      	str	r2, [r3, #92]	; 0x5c
 800987a:	4b1a      	ldr	r3, [pc, #104]	; (80098e4 <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 800987c:	697a      	ldr	r2, [r7, #20]
 800987e:	65da      	str	r2, [r3, #92]	; 0x5c
 8009880:	697b      	ldr	r3, [r7, #20]
 8009882:	2201      	movs	r2, #1
 8009884:	4013      	ands	r3, r2
 8009886:	d016      	beq.n	80098b6 <HAL_RCCEx_PeriphCLKConfig+0x11e>
 8009888:	f7fd fe02 	bl	8007490 <HAL_GetTick>
 800988c:	0003      	movs	r3, r0
 800988e:	60fb      	str	r3, [r7, #12]
 8009890:	e00c      	b.n	80098ac <HAL_RCCEx_PeriphCLKConfig+0x114>
 8009892:	f7fd fdfd 	bl	8007490 <HAL_GetTick>
 8009896:	0002      	movs	r2, r0
 8009898:	68fb      	ldr	r3, [r7, #12]
 800989a:	1ad3      	subs	r3, r2, r3
 800989c:	4a15      	ldr	r2, [pc, #84]	; (80098f4 <HAL_RCCEx_PeriphCLKConfig+0x15c>)
 800989e:	4293      	cmp	r3, r2
 80098a0:	d904      	bls.n	80098ac <HAL_RCCEx_PeriphCLKConfig+0x114>
 80098a2:	2313      	movs	r3, #19
 80098a4:	18fb      	adds	r3, r7, r3
 80098a6:	2203      	movs	r2, #3
 80098a8:	701a      	strb	r2, [r3, #0]
 80098aa:	e004      	b.n	80098b6 <HAL_RCCEx_PeriphCLKConfig+0x11e>
 80098ac:	4b0d      	ldr	r3, [pc, #52]	; (80098e4 <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 80098ae:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80098b0:	2202      	movs	r2, #2
 80098b2:	4013      	ands	r3, r2
 80098b4:	d0ed      	beq.n	8009892 <HAL_RCCEx_PeriphCLKConfig+0xfa>
 80098b6:	2313      	movs	r3, #19
 80098b8:	18fb      	adds	r3, r7, r3
 80098ba:	781b      	ldrb	r3, [r3, #0]
 80098bc:	2b00      	cmp	r3, #0
 80098be:	d10a      	bne.n	80098d6 <HAL_RCCEx_PeriphCLKConfig+0x13e>
 80098c0:	4b08      	ldr	r3, [pc, #32]	; (80098e4 <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 80098c2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80098c4:	4a09      	ldr	r2, [pc, #36]	; (80098ec <HAL_RCCEx_PeriphCLKConfig+0x154>)
 80098c6:	4013      	ands	r3, r2
 80098c8:	0019      	movs	r1, r3
 80098ca:	687b      	ldr	r3, [r7, #4]
 80098cc:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80098ce:	4b05      	ldr	r3, [pc, #20]	; (80098e4 <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 80098d0:	430a      	orrs	r2, r1
 80098d2:	65da      	str	r2, [r3, #92]	; 0x5c
 80098d4:	e016      	b.n	8009904 <HAL_RCCEx_PeriphCLKConfig+0x16c>
 80098d6:	2312      	movs	r3, #18
 80098d8:	18fb      	adds	r3, r7, r3
 80098da:	2213      	movs	r2, #19
 80098dc:	18ba      	adds	r2, r7, r2
 80098de:	7812      	ldrb	r2, [r2, #0]
 80098e0:	701a      	strb	r2, [r3, #0]
 80098e2:	e00f      	b.n	8009904 <HAL_RCCEx_PeriphCLKConfig+0x16c>
 80098e4:	40021000 	.word	0x40021000
 80098e8:	40007000 	.word	0x40007000
 80098ec:	fffffcff 	.word	0xfffffcff
 80098f0:	fffeffff 	.word	0xfffeffff
 80098f4:	00001388 	.word	0x00001388
 80098f8:	2312      	movs	r3, #18
 80098fa:	18fb      	adds	r3, r7, r3
 80098fc:	2213      	movs	r2, #19
 80098fe:	18ba      	adds	r2, r7, r2
 8009900:	7812      	ldrb	r2, [r2, #0]
 8009902:	701a      	strb	r2, [r3, #0]
 8009904:	2311      	movs	r3, #17
 8009906:	18fb      	adds	r3, r7, r3
 8009908:	781b      	ldrb	r3, [r3, #0]
 800990a:	2b01      	cmp	r3, #1
 800990c:	d105      	bne.n	800991a <HAL_RCCEx_PeriphCLKConfig+0x182>
 800990e:	4bb6      	ldr	r3, [pc, #728]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009910:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8009912:	4bb5      	ldr	r3, [pc, #724]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009914:	49b5      	ldr	r1, [pc, #724]	; (8009bec <HAL_RCCEx_PeriphCLKConfig+0x454>)
 8009916:	400a      	ands	r2, r1
 8009918:	63da      	str	r2, [r3, #60]	; 0x3c
 800991a:	687b      	ldr	r3, [r7, #4]
 800991c:	681b      	ldr	r3, [r3, #0]
 800991e:	2201      	movs	r2, #1
 8009920:	4013      	ands	r3, r2
 8009922:	d009      	beq.n	8009938 <HAL_RCCEx_PeriphCLKConfig+0x1a0>
 8009924:	4bb0      	ldr	r3, [pc, #704]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009926:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009928:	2203      	movs	r2, #3
 800992a:	4393      	bics	r3, r2
 800992c:	0019      	movs	r1, r3
 800992e:	687b      	ldr	r3, [r7, #4]
 8009930:	685a      	ldr	r2, [r3, #4]
 8009932:	4bad      	ldr	r3, [pc, #692]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009934:	430a      	orrs	r2, r1
 8009936:	655a      	str	r2, [r3, #84]	; 0x54
 8009938:	687b      	ldr	r3, [r7, #4]
 800993a:	681b      	ldr	r3, [r3, #0]
 800993c:	2202      	movs	r2, #2
 800993e:	4013      	ands	r3, r2
 8009940:	d009      	beq.n	8009956 <HAL_RCCEx_PeriphCLKConfig+0x1be>
 8009942:	4ba9      	ldr	r3, [pc, #676]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009944:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009946:	220c      	movs	r2, #12
 8009948:	4393      	bics	r3, r2
 800994a:	0019      	movs	r1, r3
 800994c:	687b      	ldr	r3, [r7, #4]
 800994e:	689a      	ldr	r2, [r3, #8]
 8009950:	4ba5      	ldr	r3, [pc, #660]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009952:	430a      	orrs	r2, r1
 8009954:	655a      	str	r2, [r3, #84]	; 0x54
 8009956:	687b      	ldr	r3, [r7, #4]
 8009958:	681b      	ldr	r3, [r3, #0]
 800995a:	2204      	movs	r2, #4
 800995c:	4013      	ands	r3, r2
 800995e:	d009      	beq.n	8009974 <HAL_RCCEx_PeriphCLKConfig+0x1dc>
 8009960:	4ba1      	ldr	r3, [pc, #644]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009962:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009964:	2230      	movs	r2, #48	; 0x30
 8009966:	4393      	bics	r3, r2
 8009968:	0019      	movs	r1, r3
 800996a:	687b      	ldr	r3, [r7, #4]
 800996c:	68da      	ldr	r2, [r3, #12]
 800996e:	4b9e      	ldr	r3, [pc, #632]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009970:	430a      	orrs	r2, r1
 8009972:	655a      	str	r2, [r3, #84]	; 0x54
 8009974:	687b      	ldr	r3, [r7, #4]
 8009976:	681b      	ldr	r3, [r3, #0]
 8009978:	2210      	movs	r2, #16
 800997a:	4013      	ands	r3, r2
 800997c:	d009      	beq.n	8009992 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 800997e:	4b9a      	ldr	r3, [pc, #616]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009980:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009982:	4a9b      	ldr	r2, [pc, #620]	; (8009bf0 <HAL_RCCEx_PeriphCLKConfig+0x458>)
 8009984:	4013      	ands	r3, r2
 8009986:	0019      	movs	r1, r3
 8009988:	687b      	ldr	r3, [r7, #4]
 800998a:	691a      	ldr	r2, [r3, #16]
 800998c:	4b96      	ldr	r3, [pc, #600]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800998e:	430a      	orrs	r2, r1
 8009990:	655a      	str	r2, [r3, #84]	; 0x54
 8009992:	687b      	ldr	r3, [r7, #4]
 8009994:	681a      	ldr	r2, [r3, #0]
 8009996:	2380      	movs	r3, #128	; 0x80
 8009998:	015b      	lsls	r3, r3, #5
 800999a:	4013      	ands	r3, r2
 800999c:	d009      	beq.n	80099b2 <HAL_RCCEx_PeriphCLKConfig+0x21a>
 800999e:	4b92      	ldr	r3, [pc, #584]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 80099a0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80099a2:	4a94      	ldr	r2, [pc, #592]	; (8009bf4 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 80099a4:	4013      	ands	r3, r2
 80099a6:	0019      	movs	r1, r3
 80099a8:	687b      	ldr	r3, [r7, #4]
 80099aa:	695a      	ldr	r2, [r3, #20]
 80099ac:	4b8e      	ldr	r3, [pc, #568]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 80099ae:	430a      	orrs	r2, r1
 80099b0:	655a      	str	r2, [r3, #84]	; 0x54
 80099b2:	687b      	ldr	r3, [r7, #4]
 80099b4:	681a      	ldr	r2, [r3, #0]
 80099b6:	2380      	movs	r3, #128	; 0x80
 80099b8:	009b      	lsls	r3, r3, #2
 80099ba:	4013      	ands	r3, r2
 80099bc:	d009      	beq.n	80099d2 <HAL_RCCEx_PeriphCLKConfig+0x23a>
 80099be:	4b8a      	ldr	r3, [pc, #552]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 80099c0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80099c2:	4a8d      	ldr	r2, [pc, #564]	; (8009bf8 <HAL_RCCEx_PeriphCLKConfig+0x460>)
 80099c4:	4013      	ands	r3, r2
 80099c6:	0019      	movs	r1, r3
 80099c8:	687b      	ldr	r3, [r7, #4]
 80099ca:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80099cc:	4b86      	ldr	r3, [pc, #536]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 80099ce:	430a      	orrs	r2, r1
 80099d0:	655a      	str	r2, [r3, #84]	; 0x54
 80099d2:	687b      	ldr	r3, [r7, #4]
 80099d4:	681a      	ldr	r2, [r3, #0]
 80099d6:	2380      	movs	r3, #128	; 0x80
 80099d8:	00db      	lsls	r3, r3, #3
 80099da:	4013      	ands	r3, r2
 80099dc:	d009      	beq.n	80099f2 <HAL_RCCEx_PeriphCLKConfig+0x25a>
 80099de:	4b82      	ldr	r3, [pc, #520]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 80099e0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80099e2:	4a86      	ldr	r2, [pc, #536]	; (8009bfc <HAL_RCCEx_PeriphCLKConfig+0x464>)
 80099e4:	4013      	ands	r3, r2
 80099e6:	0019      	movs	r1, r3
 80099e8:	687b      	ldr	r3, [r7, #4]
 80099ea:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80099ec:	4b7e      	ldr	r3, [pc, #504]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 80099ee:	430a      	orrs	r2, r1
 80099f0:	655a      	str	r2, [r3, #84]	; 0x54
 80099f2:	687b      	ldr	r3, [r7, #4]
 80099f4:	681b      	ldr	r3, [r3, #0]
 80099f6:	2220      	movs	r2, #32
 80099f8:	4013      	ands	r3, r2
 80099fa:	d009      	beq.n	8009a10 <HAL_RCCEx_PeriphCLKConfig+0x278>
 80099fc:	4b7a      	ldr	r3, [pc, #488]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 80099fe:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009a00:	4a7f      	ldr	r2, [pc, #508]	; (8009c00 <HAL_RCCEx_PeriphCLKConfig+0x468>)
 8009a02:	4013      	ands	r3, r2
 8009a04:	0019      	movs	r1, r3
 8009a06:	687b      	ldr	r3, [r7, #4]
 8009a08:	699a      	ldr	r2, [r3, #24]
 8009a0a:	4b77      	ldr	r3, [pc, #476]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009a0c:	430a      	orrs	r2, r1
 8009a0e:	655a      	str	r2, [r3, #84]	; 0x54
 8009a10:	687b      	ldr	r3, [r7, #4]
 8009a12:	681b      	ldr	r3, [r3, #0]
 8009a14:	2240      	movs	r2, #64	; 0x40
 8009a16:	4013      	ands	r3, r2
 8009a18:	d009      	beq.n	8009a2e <HAL_RCCEx_PeriphCLKConfig+0x296>
 8009a1a:	4b73      	ldr	r3, [pc, #460]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009a1c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009a1e:	4a79      	ldr	r2, [pc, #484]	; (8009c04 <HAL_RCCEx_PeriphCLKConfig+0x46c>)
 8009a20:	4013      	ands	r3, r2
 8009a22:	0019      	movs	r1, r3
 8009a24:	687b      	ldr	r3, [r7, #4]
 8009a26:	69da      	ldr	r2, [r3, #28]
 8009a28:	4b6f      	ldr	r3, [pc, #444]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009a2a:	430a      	orrs	r2, r1
 8009a2c:	655a      	str	r2, [r3, #84]	; 0x54
 8009a2e:	687b      	ldr	r3, [r7, #4]
 8009a30:	681a      	ldr	r2, [r3, #0]
 8009a32:	2380      	movs	r3, #128	; 0x80
 8009a34:	01db      	lsls	r3, r3, #7
 8009a36:	4013      	ands	r3, r2
 8009a38:	d015      	beq.n	8009a66 <HAL_RCCEx_PeriphCLKConfig+0x2ce>
 8009a3a:	4b6b      	ldr	r3, [pc, #428]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009a3c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009a3e:	009b      	lsls	r3, r3, #2
 8009a40:	0899      	lsrs	r1, r3, #2
 8009a42:	687b      	ldr	r3, [r7, #4]
 8009a44:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009a46:	4b68      	ldr	r3, [pc, #416]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009a48:	430a      	orrs	r2, r1
 8009a4a:	655a      	str	r2, [r3, #84]	; 0x54
 8009a4c:	687b      	ldr	r3, [r7, #4]
 8009a4e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009a50:	2380      	movs	r3, #128	; 0x80
 8009a52:	05db      	lsls	r3, r3, #23
 8009a54:	429a      	cmp	r2, r3
 8009a56:	d106      	bne.n	8009a66 <HAL_RCCEx_PeriphCLKConfig+0x2ce>
 8009a58:	4b63      	ldr	r3, [pc, #396]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009a5a:	68da      	ldr	r2, [r3, #12]
 8009a5c:	4b62      	ldr	r3, [pc, #392]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009a5e:	2180      	movs	r1, #128	; 0x80
 8009a60:	0249      	lsls	r1, r1, #9
 8009a62:	430a      	orrs	r2, r1
 8009a64:	60da      	str	r2, [r3, #12]
 8009a66:	687b      	ldr	r3, [r7, #4]
 8009a68:	681a      	ldr	r2, [r3, #0]
 8009a6a:	2380      	movs	r3, #128	; 0x80
 8009a6c:	031b      	lsls	r3, r3, #12
 8009a6e:	4013      	ands	r3, r2
 8009a70:	d009      	beq.n	8009a86 <HAL_RCCEx_PeriphCLKConfig+0x2ee>
 8009a72:	4b5d      	ldr	r3, [pc, #372]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009a74:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009a76:	2240      	movs	r2, #64	; 0x40
 8009a78:	4393      	bics	r3, r2
 8009a7a:	0019      	movs	r1, r3
 8009a7c:	687b      	ldr	r3, [r7, #4]
 8009a7e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8009a80:	4b59      	ldr	r3, [pc, #356]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009a82:	430a      	orrs	r2, r1
 8009a84:	655a      	str	r2, [r3, #84]	; 0x54
 8009a86:	687b      	ldr	r3, [r7, #4]
 8009a88:	681a      	ldr	r2, [r3, #0]
 8009a8a:	2380      	movs	r3, #128	; 0x80
 8009a8c:	039b      	lsls	r3, r3, #14
 8009a8e:	4013      	ands	r3, r2
 8009a90:	d016      	beq.n	8009ac0 <HAL_RCCEx_PeriphCLKConfig+0x328>
 8009a92:	4b55      	ldr	r3, [pc, #340]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009a94:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009a96:	4a5c      	ldr	r2, [pc, #368]	; (8009c08 <HAL_RCCEx_PeriphCLKConfig+0x470>)
 8009a98:	4013      	ands	r3, r2
 8009a9a:	0019      	movs	r1, r3
 8009a9c:	687b      	ldr	r3, [r7, #4]
 8009a9e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8009aa0:	4b51      	ldr	r3, [pc, #324]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009aa2:	430a      	orrs	r2, r1
 8009aa4:	655a      	str	r2, [r3, #84]	; 0x54
 8009aa6:	687b      	ldr	r3, [r7, #4]
 8009aa8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8009aaa:	2380      	movs	r3, #128	; 0x80
 8009aac:	03db      	lsls	r3, r3, #15
 8009aae:	429a      	cmp	r2, r3
 8009ab0:	d106      	bne.n	8009ac0 <HAL_RCCEx_PeriphCLKConfig+0x328>
 8009ab2:	4b4d      	ldr	r3, [pc, #308]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009ab4:	68da      	ldr	r2, [r3, #12]
 8009ab6:	4b4c      	ldr	r3, [pc, #304]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009ab8:	2180      	movs	r1, #128	; 0x80
 8009aba:	0449      	lsls	r1, r1, #17
 8009abc:	430a      	orrs	r2, r1
 8009abe:	60da      	str	r2, [r3, #12]
 8009ac0:	687b      	ldr	r3, [r7, #4]
 8009ac2:	681a      	ldr	r2, [r3, #0]
 8009ac4:	2380      	movs	r3, #128	; 0x80
 8009ac6:	03db      	lsls	r3, r3, #15
 8009ac8:	4013      	ands	r3, r2
 8009aca:	d016      	beq.n	8009afa <HAL_RCCEx_PeriphCLKConfig+0x362>
 8009acc:	4b46      	ldr	r3, [pc, #280]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009ace:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009ad0:	4a4e      	ldr	r2, [pc, #312]	; (8009c0c <HAL_RCCEx_PeriphCLKConfig+0x474>)
 8009ad2:	4013      	ands	r3, r2
 8009ad4:	0019      	movs	r1, r3
 8009ad6:	687b      	ldr	r3, [r7, #4]
 8009ad8:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8009ada:	4b43      	ldr	r3, [pc, #268]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009adc:	430a      	orrs	r2, r1
 8009ade:	655a      	str	r2, [r3, #84]	; 0x54
 8009ae0:	687b      	ldr	r3, [r7, #4]
 8009ae2:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8009ae4:	2380      	movs	r3, #128	; 0x80
 8009ae6:	045b      	lsls	r3, r3, #17
 8009ae8:	429a      	cmp	r2, r3
 8009aea:	d106      	bne.n	8009afa <HAL_RCCEx_PeriphCLKConfig+0x362>
 8009aec:	4b3e      	ldr	r3, [pc, #248]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009aee:	68da      	ldr	r2, [r3, #12]
 8009af0:	4b3d      	ldr	r3, [pc, #244]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009af2:	2180      	movs	r1, #128	; 0x80
 8009af4:	0449      	lsls	r1, r1, #17
 8009af6:	430a      	orrs	r2, r1
 8009af8:	60da      	str	r2, [r3, #12]
 8009afa:	687b      	ldr	r3, [r7, #4]
 8009afc:	681a      	ldr	r2, [r3, #0]
 8009afe:	2380      	movs	r3, #128	; 0x80
 8009b00:	011b      	lsls	r3, r3, #4
 8009b02:	4013      	ands	r3, r2
 8009b04:	d014      	beq.n	8009b30 <HAL_RCCEx_PeriphCLKConfig+0x398>
 8009b06:	4b38      	ldr	r3, [pc, #224]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009b08:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009b0a:	2203      	movs	r2, #3
 8009b0c:	4393      	bics	r3, r2
 8009b0e:	0019      	movs	r1, r3
 8009b10:	687b      	ldr	r3, [r7, #4]
 8009b12:	6a1a      	ldr	r2, [r3, #32]
 8009b14:	4b34      	ldr	r3, [pc, #208]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009b16:	430a      	orrs	r2, r1
 8009b18:	659a      	str	r2, [r3, #88]	; 0x58
 8009b1a:	687b      	ldr	r3, [r7, #4]
 8009b1c:	6a1b      	ldr	r3, [r3, #32]
 8009b1e:	2b01      	cmp	r3, #1
 8009b20:	d106      	bne.n	8009b30 <HAL_RCCEx_PeriphCLKConfig+0x398>
 8009b22:	4b31      	ldr	r3, [pc, #196]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009b24:	68da      	ldr	r2, [r3, #12]
 8009b26:	4b30      	ldr	r3, [pc, #192]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009b28:	2180      	movs	r1, #128	; 0x80
 8009b2a:	0249      	lsls	r1, r1, #9
 8009b2c:	430a      	orrs	r2, r1
 8009b2e:	60da      	str	r2, [r3, #12]
 8009b30:	687b      	ldr	r3, [r7, #4]
 8009b32:	681a      	ldr	r2, [r3, #0]
 8009b34:	2380      	movs	r3, #128	; 0x80
 8009b36:	019b      	lsls	r3, r3, #6
 8009b38:	4013      	ands	r3, r2
 8009b3a:	d014      	beq.n	8009b66 <HAL_RCCEx_PeriphCLKConfig+0x3ce>
 8009b3c:	4b2a      	ldr	r3, [pc, #168]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009b3e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009b40:	220c      	movs	r2, #12
 8009b42:	4393      	bics	r3, r2
 8009b44:	0019      	movs	r1, r3
 8009b46:	687b      	ldr	r3, [r7, #4]
 8009b48:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8009b4a:	4b27      	ldr	r3, [pc, #156]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009b4c:	430a      	orrs	r2, r1
 8009b4e:	659a      	str	r2, [r3, #88]	; 0x58
 8009b50:	687b      	ldr	r3, [r7, #4]
 8009b52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009b54:	2b04      	cmp	r3, #4
 8009b56:	d106      	bne.n	8009b66 <HAL_RCCEx_PeriphCLKConfig+0x3ce>
 8009b58:	4b23      	ldr	r3, [pc, #140]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009b5a:	68da      	ldr	r2, [r3, #12]
 8009b5c:	4b22      	ldr	r3, [pc, #136]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009b5e:	2180      	movs	r1, #128	; 0x80
 8009b60:	0249      	lsls	r1, r1, #9
 8009b62:	430a      	orrs	r2, r1
 8009b64:	60da      	str	r2, [r3, #12]
 8009b66:	687b      	ldr	r3, [r7, #4]
 8009b68:	681a      	ldr	r2, [r3, #0]
 8009b6a:	2380      	movs	r3, #128	; 0x80
 8009b6c:	045b      	lsls	r3, r3, #17
 8009b6e:	4013      	ands	r3, r2
 8009b70:	d016      	beq.n	8009ba0 <HAL_RCCEx_PeriphCLKConfig+0x408>
 8009b72:	4b1d      	ldr	r3, [pc, #116]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009b74:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009b76:	4a22      	ldr	r2, [pc, #136]	; (8009c00 <HAL_RCCEx_PeriphCLKConfig+0x468>)
 8009b78:	4013      	ands	r3, r2
 8009b7a:	0019      	movs	r1, r3
 8009b7c:	687b      	ldr	r3, [r7, #4]
 8009b7e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8009b80:	4b19      	ldr	r3, [pc, #100]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009b82:	430a      	orrs	r2, r1
 8009b84:	659a      	str	r2, [r3, #88]	; 0x58
 8009b86:	687b      	ldr	r3, [r7, #4]
 8009b88:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8009b8a:	2380      	movs	r3, #128	; 0x80
 8009b8c:	019b      	lsls	r3, r3, #6
 8009b8e:	429a      	cmp	r2, r3
 8009b90:	d106      	bne.n	8009ba0 <HAL_RCCEx_PeriphCLKConfig+0x408>
 8009b92:	4b15      	ldr	r3, [pc, #84]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009b94:	68da      	ldr	r2, [r3, #12]
 8009b96:	4b14      	ldr	r3, [pc, #80]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009b98:	2180      	movs	r1, #128	; 0x80
 8009b9a:	0449      	lsls	r1, r1, #17
 8009b9c:	430a      	orrs	r2, r1
 8009b9e:	60da      	str	r2, [r3, #12]
 8009ba0:	687b      	ldr	r3, [r7, #4]
 8009ba2:	681a      	ldr	r2, [r3, #0]
 8009ba4:	2380      	movs	r3, #128	; 0x80
 8009ba6:	049b      	lsls	r3, r3, #18
 8009ba8:	4013      	ands	r3, r2
 8009baa:	d016      	beq.n	8009bda <HAL_RCCEx_PeriphCLKConfig+0x442>
 8009bac:	4b0e      	ldr	r3, [pc, #56]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009bae:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009bb0:	4a10      	ldr	r2, [pc, #64]	; (8009bf4 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8009bb2:	4013      	ands	r3, r2
 8009bb4:	0019      	movs	r1, r3
 8009bb6:	687b      	ldr	r3, [r7, #4]
 8009bb8:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8009bba:	4b0b      	ldr	r3, [pc, #44]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009bbc:	430a      	orrs	r2, r1
 8009bbe:	659a      	str	r2, [r3, #88]	; 0x58
 8009bc0:	687b      	ldr	r3, [r7, #4]
 8009bc2:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8009bc4:	2380      	movs	r3, #128	; 0x80
 8009bc6:	005b      	lsls	r3, r3, #1
 8009bc8:	429a      	cmp	r2, r3
 8009bca:	d106      	bne.n	8009bda <HAL_RCCEx_PeriphCLKConfig+0x442>
 8009bcc:	4b06      	ldr	r3, [pc, #24]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009bce:	68da      	ldr	r2, [r3, #12]
 8009bd0:	4b05      	ldr	r3, [pc, #20]	; (8009be8 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8009bd2:	2180      	movs	r1, #128	; 0x80
 8009bd4:	0449      	lsls	r1, r1, #17
 8009bd6:	430a      	orrs	r2, r1
 8009bd8:	60da      	str	r2, [r3, #12]
 8009bda:	2312      	movs	r3, #18
 8009bdc:	18fb      	adds	r3, r7, r3
 8009bde:	781b      	ldrb	r3, [r3, #0]
 8009be0:	0018      	movs	r0, r3
 8009be2:	46bd      	mov	sp, r7
 8009be4:	b006      	add	sp, #24
 8009be6:	bd80      	pop	{r7, pc}
 8009be8:	40021000 	.word	0x40021000
 8009bec:	efffffff 	.word	0xefffffff
 8009bf0:	fffff3ff 	.word	0xfffff3ff
 8009bf4:	fffffcff 	.word	0xfffffcff
 8009bf8:	fff3ffff 	.word	0xfff3ffff
 8009bfc:	ffcfffff 	.word	0xffcfffff
 8009c00:	ffffcfff 	.word	0xffffcfff
 8009c04:	ffff3fff 	.word	0xffff3fff
 8009c08:	ffbfffff 	.word	0xffbfffff
 8009c0c:	feffffff 	.word	0xfeffffff

08009c10 <HAL_TIM_Base_Init>:
 8009c10:	b580      	push	{r7, lr}
 8009c12:	b082      	sub	sp, #8
 8009c14:	af00      	add	r7, sp, #0
 8009c16:	6078      	str	r0, [r7, #4]
 8009c18:	687b      	ldr	r3, [r7, #4]
 8009c1a:	2b00      	cmp	r3, #0
 8009c1c:	d101      	bne.n	8009c22 <HAL_TIM_Base_Init+0x12>
 8009c1e:	2301      	movs	r3, #1
 8009c20:	e04a      	b.n	8009cb8 <HAL_TIM_Base_Init+0xa8>
 8009c22:	687b      	ldr	r3, [r7, #4]
 8009c24:	223d      	movs	r2, #61	; 0x3d
 8009c26:	5c9b      	ldrb	r3, [r3, r2]
 8009c28:	b2db      	uxtb	r3, r3
 8009c2a:	2b00      	cmp	r3, #0
 8009c2c:	d107      	bne.n	8009c3e <HAL_TIM_Base_Init+0x2e>
 8009c2e:	687b      	ldr	r3, [r7, #4]
 8009c30:	223c      	movs	r2, #60	; 0x3c
 8009c32:	2100      	movs	r1, #0
 8009c34:	5499      	strb	r1, [r3, r2]
 8009c36:	687b      	ldr	r3, [r7, #4]
 8009c38:	0018      	movs	r0, r3
 8009c3a:	f000 f841 	bl	8009cc0 <HAL_TIM_Base_MspInit>
 8009c3e:	687b      	ldr	r3, [r7, #4]
 8009c40:	223d      	movs	r2, #61	; 0x3d
 8009c42:	2102      	movs	r1, #2
 8009c44:	5499      	strb	r1, [r3, r2]
 8009c46:	687b      	ldr	r3, [r7, #4]
 8009c48:	681a      	ldr	r2, [r3, #0]
 8009c4a:	687b      	ldr	r3, [r7, #4]
 8009c4c:	3304      	adds	r3, #4
 8009c4e:	0019      	movs	r1, r3
 8009c50:	0010      	movs	r0, r2
 8009c52:	f000 f9c7 	bl	8009fe4 <TIM_Base_SetConfig>
 8009c56:	687b      	ldr	r3, [r7, #4]
 8009c58:	2248      	movs	r2, #72	; 0x48
 8009c5a:	2101      	movs	r1, #1
 8009c5c:	5499      	strb	r1, [r3, r2]
 8009c5e:	687b      	ldr	r3, [r7, #4]
 8009c60:	223e      	movs	r2, #62	; 0x3e
 8009c62:	2101      	movs	r1, #1
 8009c64:	5499      	strb	r1, [r3, r2]
 8009c66:	687b      	ldr	r3, [r7, #4]
 8009c68:	223f      	movs	r2, #63	; 0x3f
 8009c6a:	2101      	movs	r1, #1
 8009c6c:	5499      	strb	r1, [r3, r2]
 8009c6e:	687b      	ldr	r3, [r7, #4]
 8009c70:	2240      	movs	r2, #64	; 0x40
 8009c72:	2101      	movs	r1, #1
 8009c74:	5499      	strb	r1, [r3, r2]
 8009c76:	687b      	ldr	r3, [r7, #4]
 8009c78:	2241      	movs	r2, #65	; 0x41
 8009c7a:	2101      	movs	r1, #1
 8009c7c:	5499      	strb	r1, [r3, r2]
 8009c7e:	687b      	ldr	r3, [r7, #4]
 8009c80:	2242      	movs	r2, #66	; 0x42
 8009c82:	2101      	movs	r1, #1
 8009c84:	5499      	strb	r1, [r3, r2]
 8009c86:	687b      	ldr	r3, [r7, #4]
 8009c88:	2243      	movs	r2, #67	; 0x43
 8009c8a:	2101      	movs	r1, #1
 8009c8c:	5499      	strb	r1, [r3, r2]
 8009c8e:	687b      	ldr	r3, [r7, #4]
 8009c90:	2244      	movs	r2, #68	; 0x44
 8009c92:	2101      	movs	r1, #1
 8009c94:	5499      	strb	r1, [r3, r2]
 8009c96:	687b      	ldr	r3, [r7, #4]
 8009c98:	2245      	movs	r2, #69	; 0x45
 8009c9a:	2101      	movs	r1, #1
 8009c9c:	5499      	strb	r1, [r3, r2]
 8009c9e:	687b      	ldr	r3, [r7, #4]
 8009ca0:	2246      	movs	r2, #70	; 0x46
 8009ca2:	2101      	movs	r1, #1
 8009ca4:	5499      	strb	r1, [r3, r2]
 8009ca6:	687b      	ldr	r3, [r7, #4]
 8009ca8:	2247      	movs	r2, #71	; 0x47
 8009caa:	2101      	movs	r1, #1
 8009cac:	5499      	strb	r1, [r3, r2]
 8009cae:	687b      	ldr	r3, [r7, #4]
 8009cb0:	223d      	movs	r2, #61	; 0x3d
 8009cb2:	2101      	movs	r1, #1
 8009cb4:	5499      	strb	r1, [r3, r2]
 8009cb6:	2300      	movs	r3, #0
 8009cb8:	0018      	movs	r0, r3
 8009cba:	46bd      	mov	sp, r7
 8009cbc:	b002      	add	sp, #8
 8009cbe:	bd80      	pop	{r7, pc}

08009cc0 <HAL_TIM_Base_MspInit>:
 8009cc0:	b580      	push	{r7, lr}
 8009cc2:	b082      	sub	sp, #8
 8009cc4:	af00      	add	r7, sp, #0
 8009cc6:	6078      	str	r0, [r7, #4]
 8009cc8:	46c0      	nop			; (mov r8, r8)
 8009cca:	46bd      	mov	sp, r7
 8009ccc:	b002      	add	sp, #8
 8009cce:	bd80      	pop	{r7, pc}

08009cd0 <HAL_TIM_Base_Start_IT>:
 8009cd0:	b580      	push	{r7, lr}
 8009cd2:	b084      	sub	sp, #16
 8009cd4:	af00      	add	r7, sp, #0
 8009cd6:	6078      	str	r0, [r7, #4]
 8009cd8:	687b      	ldr	r3, [r7, #4]
 8009cda:	223d      	movs	r2, #61	; 0x3d
 8009cdc:	5c9b      	ldrb	r3, [r3, r2]
 8009cde:	b2db      	uxtb	r3, r3
 8009ce0:	2b01      	cmp	r3, #1
 8009ce2:	d001      	beq.n	8009ce8 <HAL_TIM_Base_Start_IT+0x18>
 8009ce4:	2301      	movs	r3, #1
 8009ce6:	e047      	b.n	8009d78 <HAL_TIM_Base_Start_IT+0xa8>
 8009ce8:	687b      	ldr	r3, [r7, #4]
 8009cea:	223d      	movs	r2, #61	; 0x3d
 8009cec:	2102      	movs	r1, #2
 8009cee:	5499      	strb	r1, [r3, r2]
 8009cf0:	687b      	ldr	r3, [r7, #4]
 8009cf2:	681b      	ldr	r3, [r3, #0]
 8009cf4:	68da      	ldr	r2, [r3, #12]
 8009cf6:	687b      	ldr	r3, [r7, #4]
 8009cf8:	681b      	ldr	r3, [r3, #0]
 8009cfa:	2101      	movs	r1, #1
 8009cfc:	430a      	orrs	r2, r1
 8009cfe:	60da      	str	r2, [r3, #12]
 8009d00:	687b      	ldr	r3, [r7, #4]
 8009d02:	681b      	ldr	r3, [r3, #0]
 8009d04:	4a1e      	ldr	r2, [pc, #120]	; (8009d80 <HAL_TIM_Base_Start_IT+0xb0>)
 8009d06:	4293      	cmp	r3, r2
 8009d08:	d014      	beq.n	8009d34 <HAL_TIM_Base_Start_IT+0x64>
 8009d0a:	687b      	ldr	r3, [r7, #4]
 8009d0c:	681a      	ldr	r2, [r3, #0]
 8009d0e:	2380      	movs	r3, #128	; 0x80
 8009d10:	05db      	lsls	r3, r3, #23
 8009d12:	429a      	cmp	r2, r3
 8009d14:	d00e      	beq.n	8009d34 <HAL_TIM_Base_Start_IT+0x64>
 8009d16:	687b      	ldr	r3, [r7, #4]
 8009d18:	681b      	ldr	r3, [r3, #0]
 8009d1a:	4a1a      	ldr	r2, [pc, #104]	; (8009d84 <HAL_TIM_Base_Start_IT+0xb4>)
 8009d1c:	4293      	cmp	r3, r2
 8009d1e:	d009      	beq.n	8009d34 <HAL_TIM_Base_Start_IT+0x64>
 8009d20:	687b      	ldr	r3, [r7, #4]
 8009d22:	681b      	ldr	r3, [r3, #0]
 8009d24:	4a18      	ldr	r2, [pc, #96]	; (8009d88 <HAL_TIM_Base_Start_IT+0xb8>)
 8009d26:	4293      	cmp	r3, r2
 8009d28:	d004      	beq.n	8009d34 <HAL_TIM_Base_Start_IT+0x64>
 8009d2a:	687b      	ldr	r3, [r7, #4]
 8009d2c:	681b      	ldr	r3, [r3, #0]
 8009d2e:	4a17      	ldr	r2, [pc, #92]	; (8009d8c <HAL_TIM_Base_Start_IT+0xbc>)
 8009d30:	4293      	cmp	r3, r2
 8009d32:	d116      	bne.n	8009d62 <HAL_TIM_Base_Start_IT+0x92>
 8009d34:	687b      	ldr	r3, [r7, #4]
 8009d36:	681b      	ldr	r3, [r3, #0]
 8009d38:	689b      	ldr	r3, [r3, #8]
 8009d3a:	4a15      	ldr	r2, [pc, #84]	; (8009d90 <HAL_TIM_Base_Start_IT+0xc0>)
 8009d3c:	4013      	ands	r3, r2
 8009d3e:	60fb      	str	r3, [r7, #12]
 8009d40:	68fb      	ldr	r3, [r7, #12]
 8009d42:	2b06      	cmp	r3, #6
 8009d44:	d016      	beq.n	8009d74 <HAL_TIM_Base_Start_IT+0xa4>
 8009d46:	68fa      	ldr	r2, [r7, #12]
 8009d48:	2380      	movs	r3, #128	; 0x80
 8009d4a:	025b      	lsls	r3, r3, #9
 8009d4c:	429a      	cmp	r2, r3
 8009d4e:	d011      	beq.n	8009d74 <HAL_TIM_Base_Start_IT+0xa4>
 8009d50:	687b      	ldr	r3, [r7, #4]
 8009d52:	681b      	ldr	r3, [r3, #0]
 8009d54:	681a      	ldr	r2, [r3, #0]
 8009d56:	687b      	ldr	r3, [r7, #4]
 8009d58:	681b      	ldr	r3, [r3, #0]
 8009d5a:	2101      	movs	r1, #1
 8009d5c:	430a      	orrs	r2, r1
 8009d5e:	601a      	str	r2, [r3, #0]
 8009d60:	e008      	b.n	8009d74 <HAL_TIM_Base_Start_IT+0xa4>
 8009d62:	687b      	ldr	r3, [r7, #4]
 8009d64:	681b      	ldr	r3, [r3, #0]
 8009d66:	681a      	ldr	r2, [r3, #0]
 8009d68:	687b      	ldr	r3, [r7, #4]
 8009d6a:	681b      	ldr	r3, [r3, #0]
 8009d6c:	2101      	movs	r1, #1
 8009d6e:	430a      	orrs	r2, r1
 8009d70:	601a      	str	r2, [r3, #0]
 8009d72:	e000      	b.n	8009d76 <HAL_TIM_Base_Start_IT+0xa6>
 8009d74:	46c0      	nop			; (mov r8, r8)
 8009d76:	2300      	movs	r3, #0
 8009d78:	0018      	movs	r0, r3
 8009d7a:	46bd      	mov	sp, r7
 8009d7c:	b004      	add	sp, #16
 8009d7e:	bd80      	pop	{r7, pc}
 8009d80:	40012c00 	.word	0x40012c00
 8009d84:	40000400 	.word	0x40000400
 8009d88:	40000800 	.word	0x40000800
 8009d8c:	40014000 	.word	0x40014000
 8009d90:	00010007 	.word	0x00010007

08009d94 <HAL_TIM_IRQHandler>:
 8009d94:	b580      	push	{r7, lr}
 8009d96:	b084      	sub	sp, #16
 8009d98:	af00      	add	r7, sp, #0
 8009d9a:	6078      	str	r0, [r7, #4]
 8009d9c:	687b      	ldr	r3, [r7, #4]
 8009d9e:	681b      	ldr	r3, [r3, #0]
 8009da0:	68db      	ldr	r3, [r3, #12]
 8009da2:	60fb      	str	r3, [r7, #12]
 8009da4:	687b      	ldr	r3, [r7, #4]
 8009da6:	681b      	ldr	r3, [r3, #0]
 8009da8:	691b      	ldr	r3, [r3, #16]
 8009daa:	60bb      	str	r3, [r7, #8]
 8009dac:	68bb      	ldr	r3, [r7, #8]
 8009dae:	2202      	movs	r2, #2
 8009db0:	4013      	ands	r3, r2
 8009db2:	d021      	beq.n	8009df8 <HAL_TIM_IRQHandler+0x64>
 8009db4:	68fb      	ldr	r3, [r7, #12]
 8009db6:	2202      	movs	r2, #2
 8009db8:	4013      	ands	r3, r2
 8009dba:	d01d      	beq.n	8009df8 <HAL_TIM_IRQHandler+0x64>
 8009dbc:	687b      	ldr	r3, [r7, #4]
 8009dbe:	681b      	ldr	r3, [r3, #0]
 8009dc0:	2203      	movs	r2, #3
 8009dc2:	4252      	negs	r2, r2
 8009dc4:	611a      	str	r2, [r3, #16]
 8009dc6:	687b      	ldr	r3, [r7, #4]
 8009dc8:	2201      	movs	r2, #1
 8009dca:	771a      	strb	r2, [r3, #28]
 8009dcc:	687b      	ldr	r3, [r7, #4]
 8009dce:	681b      	ldr	r3, [r3, #0]
 8009dd0:	699b      	ldr	r3, [r3, #24]
 8009dd2:	2203      	movs	r2, #3
 8009dd4:	4013      	ands	r3, r2
 8009dd6:	d004      	beq.n	8009de2 <HAL_TIM_IRQHandler+0x4e>
 8009dd8:	687b      	ldr	r3, [r7, #4]
 8009dda:	0018      	movs	r0, r3
 8009ddc:	f000 f8ea 	bl	8009fb4 <HAL_TIM_IC_CaptureCallback>
 8009de0:	e007      	b.n	8009df2 <HAL_TIM_IRQHandler+0x5e>
 8009de2:	687b      	ldr	r3, [r7, #4]
 8009de4:	0018      	movs	r0, r3
 8009de6:	f000 f8dd 	bl	8009fa4 <HAL_TIM_OC_DelayElapsedCallback>
 8009dea:	687b      	ldr	r3, [r7, #4]
 8009dec:	0018      	movs	r0, r3
 8009dee:	f000 f8e9 	bl	8009fc4 <HAL_TIM_PWM_PulseFinishedCallback>
 8009df2:	687b      	ldr	r3, [r7, #4]
 8009df4:	2200      	movs	r2, #0
 8009df6:	771a      	strb	r2, [r3, #28]
 8009df8:	68bb      	ldr	r3, [r7, #8]
 8009dfa:	2204      	movs	r2, #4
 8009dfc:	4013      	ands	r3, r2
 8009dfe:	d022      	beq.n	8009e46 <HAL_TIM_IRQHandler+0xb2>
 8009e00:	68fb      	ldr	r3, [r7, #12]
 8009e02:	2204      	movs	r2, #4
 8009e04:	4013      	ands	r3, r2
 8009e06:	d01e      	beq.n	8009e46 <HAL_TIM_IRQHandler+0xb2>
 8009e08:	687b      	ldr	r3, [r7, #4]
 8009e0a:	681b      	ldr	r3, [r3, #0]
 8009e0c:	2205      	movs	r2, #5
 8009e0e:	4252      	negs	r2, r2
 8009e10:	611a      	str	r2, [r3, #16]
 8009e12:	687b      	ldr	r3, [r7, #4]
 8009e14:	2202      	movs	r2, #2
 8009e16:	771a      	strb	r2, [r3, #28]
 8009e18:	687b      	ldr	r3, [r7, #4]
 8009e1a:	681b      	ldr	r3, [r3, #0]
 8009e1c:	699a      	ldr	r2, [r3, #24]
 8009e1e:	23c0      	movs	r3, #192	; 0xc0
 8009e20:	009b      	lsls	r3, r3, #2
 8009e22:	4013      	ands	r3, r2
 8009e24:	d004      	beq.n	8009e30 <HAL_TIM_IRQHandler+0x9c>
 8009e26:	687b      	ldr	r3, [r7, #4]
 8009e28:	0018      	movs	r0, r3
 8009e2a:	f000 f8c3 	bl	8009fb4 <HAL_TIM_IC_CaptureCallback>
 8009e2e:	e007      	b.n	8009e40 <HAL_TIM_IRQHandler+0xac>
 8009e30:	687b      	ldr	r3, [r7, #4]
 8009e32:	0018      	movs	r0, r3
 8009e34:	f000 f8b6 	bl	8009fa4 <HAL_TIM_OC_DelayElapsedCallback>
 8009e38:	687b      	ldr	r3, [r7, #4]
 8009e3a:	0018      	movs	r0, r3
 8009e3c:	f000 f8c2 	bl	8009fc4 <HAL_TIM_PWM_PulseFinishedCallback>
 8009e40:	687b      	ldr	r3, [r7, #4]
 8009e42:	2200      	movs	r2, #0
 8009e44:	771a      	strb	r2, [r3, #28]
 8009e46:	68bb      	ldr	r3, [r7, #8]
 8009e48:	2208      	movs	r2, #8
 8009e4a:	4013      	ands	r3, r2
 8009e4c:	d021      	beq.n	8009e92 <HAL_TIM_IRQHandler+0xfe>
 8009e4e:	68fb      	ldr	r3, [r7, #12]
 8009e50:	2208      	movs	r2, #8
 8009e52:	4013      	ands	r3, r2
 8009e54:	d01d      	beq.n	8009e92 <HAL_TIM_IRQHandler+0xfe>
 8009e56:	687b      	ldr	r3, [r7, #4]
 8009e58:	681b      	ldr	r3, [r3, #0]
 8009e5a:	2209      	movs	r2, #9
 8009e5c:	4252      	negs	r2, r2
 8009e5e:	611a      	str	r2, [r3, #16]
 8009e60:	687b      	ldr	r3, [r7, #4]
 8009e62:	2204      	movs	r2, #4
 8009e64:	771a      	strb	r2, [r3, #28]
 8009e66:	687b      	ldr	r3, [r7, #4]
 8009e68:	681b      	ldr	r3, [r3, #0]
 8009e6a:	69db      	ldr	r3, [r3, #28]
 8009e6c:	2203      	movs	r2, #3
 8009e6e:	4013      	ands	r3, r2
 8009e70:	d004      	beq.n	8009e7c <HAL_TIM_IRQHandler+0xe8>
 8009e72:	687b      	ldr	r3, [r7, #4]
 8009e74:	0018      	movs	r0, r3
 8009e76:	f000 f89d 	bl	8009fb4 <HAL_TIM_IC_CaptureCallback>
 8009e7a:	e007      	b.n	8009e8c <HAL_TIM_IRQHandler+0xf8>
 8009e7c:	687b      	ldr	r3, [r7, #4]
 8009e7e:	0018      	movs	r0, r3
 8009e80:	f000 f890 	bl	8009fa4 <HAL_TIM_OC_DelayElapsedCallback>
 8009e84:	687b      	ldr	r3, [r7, #4]
 8009e86:	0018      	movs	r0, r3
 8009e88:	f000 f89c 	bl	8009fc4 <HAL_TIM_PWM_PulseFinishedCallback>
 8009e8c:	687b      	ldr	r3, [r7, #4]
 8009e8e:	2200      	movs	r2, #0
 8009e90:	771a      	strb	r2, [r3, #28]
 8009e92:	68bb      	ldr	r3, [r7, #8]
 8009e94:	2210      	movs	r2, #16
 8009e96:	4013      	ands	r3, r2
 8009e98:	d022      	beq.n	8009ee0 <HAL_TIM_IRQHandler+0x14c>
 8009e9a:	68fb      	ldr	r3, [r7, #12]
 8009e9c:	2210      	movs	r2, #16
 8009e9e:	4013      	ands	r3, r2
 8009ea0:	d01e      	beq.n	8009ee0 <HAL_TIM_IRQHandler+0x14c>
 8009ea2:	687b      	ldr	r3, [r7, #4]
 8009ea4:	681b      	ldr	r3, [r3, #0]
 8009ea6:	2211      	movs	r2, #17
 8009ea8:	4252      	negs	r2, r2
 8009eaa:	611a      	str	r2, [r3, #16]
 8009eac:	687b      	ldr	r3, [r7, #4]
 8009eae:	2208      	movs	r2, #8
 8009eb0:	771a      	strb	r2, [r3, #28]
 8009eb2:	687b      	ldr	r3, [r7, #4]
 8009eb4:	681b      	ldr	r3, [r3, #0]
 8009eb6:	69da      	ldr	r2, [r3, #28]
 8009eb8:	23c0      	movs	r3, #192	; 0xc0
 8009eba:	009b      	lsls	r3, r3, #2
 8009ebc:	4013      	ands	r3, r2
 8009ebe:	d004      	beq.n	8009eca <HAL_TIM_IRQHandler+0x136>
 8009ec0:	687b      	ldr	r3, [r7, #4]
 8009ec2:	0018      	movs	r0, r3
 8009ec4:	f000 f876 	bl	8009fb4 <HAL_TIM_IC_CaptureCallback>
 8009ec8:	e007      	b.n	8009eda <HAL_TIM_IRQHandler+0x146>
 8009eca:	687b      	ldr	r3, [r7, #4]
 8009ecc:	0018      	movs	r0, r3
 8009ece:	f000 f869 	bl	8009fa4 <HAL_TIM_OC_DelayElapsedCallback>
 8009ed2:	687b      	ldr	r3, [r7, #4]
 8009ed4:	0018      	movs	r0, r3
 8009ed6:	f000 f875 	bl	8009fc4 <HAL_TIM_PWM_PulseFinishedCallback>
 8009eda:	687b      	ldr	r3, [r7, #4]
 8009edc:	2200      	movs	r2, #0
 8009ede:	771a      	strb	r2, [r3, #28]
 8009ee0:	68bb      	ldr	r3, [r7, #8]
 8009ee2:	2201      	movs	r2, #1
 8009ee4:	4013      	ands	r3, r2
 8009ee6:	d00c      	beq.n	8009f02 <HAL_TIM_IRQHandler+0x16e>
 8009ee8:	68fb      	ldr	r3, [r7, #12]
 8009eea:	2201      	movs	r2, #1
 8009eec:	4013      	ands	r3, r2
 8009eee:	d008      	beq.n	8009f02 <HAL_TIM_IRQHandler+0x16e>
 8009ef0:	687b      	ldr	r3, [r7, #4]
 8009ef2:	681b      	ldr	r3, [r3, #0]
 8009ef4:	2202      	movs	r2, #2
 8009ef6:	4252      	negs	r2, r2
 8009ef8:	611a      	str	r2, [r3, #16]
 8009efa:	687b      	ldr	r3, [r7, #4]
 8009efc:	0018      	movs	r0, r3
 8009efe:	f7fd f8e9 	bl	80070d4 <HAL_TIM_PeriodElapsedCallback>
 8009f02:	68bb      	ldr	r3, [r7, #8]
 8009f04:	2280      	movs	r2, #128	; 0x80
 8009f06:	4013      	ands	r3, r2
 8009f08:	d104      	bne.n	8009f14 <HAL_TIM_IRQHandler+0x180>
 8009f0a:	68ba      	ldr	r2, [r7, #8]
 8009f0c:	2380      	movs	r3, #128	; 0x80
 8009f0e:	019b      	lsls	r3, r3, #6
 8009f10:	4013      	ands	r3, r2
 8009f12:	d00b      	beq.n	8009f2c <HAL_TIM_IRQHandler+0x198>
 8009f14:	68fb      	ldr	r3, [r7, #12]
 8009f16:	2280      	movs	r2, #128	; 0x80
 8009f18:	4013      	ands	r3, r2
 8009f1a:	d007      	beq.n	8009f2c <HAL_TIM_IRQHandler+0x198>
 8009f1c:	687b      	ldr	r3, [r7, #4]
 8009f1e:	681b      	ldr	r3, [r3, #0]
 8009f20:	4a1e      	ldr	r2, [pc, #120]	; (8009f9c <HAL_TIM_IRQHandler+0x208>)
 8009f22:	611a      	str	r2, [r3, #16]
 8009f24:	687b      	ldr	r3, [r7, #4]
 8009f26:	0018      	movs	r0, r3
 8009f28:	f000 f8fc 	bl	800a124 <HAL_TIMEx_BreakCallback>
 8009f2c:	68ba      	ldr	r2, [r7, #8]
 8009f2e:	2380      	movs	r3, #128	; 0x80
 8009f30:	005b      	lsls	r3, r3, #1
 8009f32:	4013      	ands	r3, r2
 8009f34:	d00b      	beq.n	8009f4e <HAL_TIM_IRQHandler+0x1ba>
 8009f36:	68fb      	ldr	r3, [r7, #12]
 8009f38:	2280      	movs	r2, #128	; 0x80
 8009f3a:	4013      	ands	r3, r2
 8009f3c:	d007      	beq.n	8009f4e <HAL_TIM_IRQHandler+0x1ba>
 8009f3e:	687b      	ldr	r3, [r7, #4]
 8009f40:	681b      	ldr	r3, [r3, #0]
 8009f42:	4a17      	ldr	r2, [pc, #92]	; (8009fa0 <HAL_TIM_IRQHandler+0x20c>)
 8009f44:	611a      	str	r2, [r3, #16]
 8009f46:	687b      	ldr	r3, [r7, #4]
 8009f48:	0018      	movs	r0, r3
 8009f4a:	f000 f8f3 	bl	800a134 <HAL_TIMEx_Break2Callback>
 8009f4e:	68bb      	ldr	r3, [r7, #8]
 8009f50:	2240      	movs	r2, #64	; 0x40
 8009f52:	4013      	ands	r3, r2
 8009f54:	d00c      	beq.n	8009f70 <HAL_TIM_IRQHandler+0x1dc>
 8009f56:	68fb      	ldr	r3, [r7, #12]
 8009f58:	2240      	movs	r2, #64	; 0x40
 8009f5a:	4013      	ands	r3, r2
 8009f5c:	d008      	beq.n	8009f70 <HAL_TIM_IRQHandler+0x1dc>
 8009f5e:	687b      	ldr	r3, [r7, #4]
 8009f60:	681b      	ldr	r3, [r3, #0]
 8009f62:	2241      	movs	r2, #65	; 0x41
 8009f64:	4252      	negs	r2, r2
 8009f66:	611a      	str	r2, [r3, #16]
 8009f68:	687b      	ldr	r3, [r7, #4]
 8009f6a:	0018      	movs	r0, r3
 8009f6c:	f000 f832 	bl	8009fd4 <HAL_TIM_TriggerCallback>
 8009f70:	68bb      	ldr	r3, [r7, #8]
 8009f72:	2220      	movs	r2, #32
 8009f74:	4013      	ands	r3, r2
 8009f76:	d00c      	beq.n	8009f92 <HAL_TIM_IRQHandler+0x1fe>
 8009f78:	68fb      	ldr	r3, [r7, #12]
 8009f7a:	2220      	movs	r2, #32
 8009f7c:	4013      	ands	r3, r2
 8009f7e:	d008      	beq.n	8009f92 <HAL_TIM_IRQHandler+0x1fe>
 8009f80:	687b      	ldr	r3, [r7, #4]
 8009f82:	681b      	ldr	r3, [r3, #0]
 8009f84:	2221      	movs	r2, #33	; 0x21
 8009f86:	4252      	negs	r2, r2
 8009f88:	611a      	str	r2, [r3, #16]
 8009f8a:	687b      	ldr	r3, [r7, #4]
 8009f8c:	0018      	movs	r0, r3
 8009f8e:	f000 f8c1 	bl	800a114 <HAL_TIMEx_CommutCallback>
 8009f92:	46c0      	nop			; (mov r8, r8)
 8009f94:	46bd      	mov	sp, r7
 8009f96:	b004      	add	sp, #16
 8009f98:	bd80      	pop	{r7, pc}
 8009f9a:	46c0      	nop			; (mov r8, r8)
 8009f9c:	ffffdf7f 	.word	0xffffdf7f
 8009fa0:	fffffeff 	.word	0xfffffeff

08009fa4 <HAL_TIM_OC_DelayElapsedCallback>:
 8009fa4:	b580      	push	{r7, lr}
 8009fa6:	b082      	sub	sp, #8
 8009fa8:	af00      	add	r7, sp, #0
 8009faa:	6078      	str	r0, [r7, #4]
 8009fac:	46c0      	nop			; (mov r8, r8)
 8009fae:	46bd      	mov	sp, r7
 8009fb0:	b002      	add	sp, #8
 8009fb2:	bd80      	pop	{r7, pc}

08009fb4 <HAL_TIM_IC_CaptureCallback>:
 8009fb4:	b580      	push	{r7, lr}
 8009fb6:	b082      	sub	sp, #8
 8009fb8:	af00      	add	r7, sp, #0
 8009fba:	6078      	str	r0, [r7, #4]
 8009fbc:	46c0      	nop			; (mov r8, r8)
 8009fbe:	46bd      	mov	sp, r7
 8009fc0:	b002      	add	sp, #8
 8009fc2:	bd80      	pop	{r7, pc}

08009fc4 <HAL_TIM_PWM_PulseFinishedCallback>:
 8009fc4:	b580      	push	{r7, lr}
 8009fc6:	b082      	sub	sp, #8
 8009fc8:	af00      	add	r7, sp, #0
 8009fca:	6078      	str	r0, [r7, #4]
 8009fcc:	46c0      	nop			; (mov r8, r8)
 8009fce:	46bd      	mov	sp, r7
 8009fd0:	b002      	add	sp, #8
 8009fd2:	bd80      	pop	{r7, pc}

08009fd4 <HAL_TIM_TriggerCallback>:
 8009fd4:	b580      	push	{r7, lr}
 8009fd6:	b082      	sub	sp, #8
 8009fd8:	af00      	add	r7, sp, #0
 8009fda:	6078      	str	r0, [r7, #4]
 8009fdc:	46c0      	nop			; (mov r8, r8)
 8009fde:	46bd      	mov	sp, r7
 8009fe0:	b002      	add	sp, #8
 8009fe2:	bd80      	pop	{r7, pc}

08009fe4 <TIM_Base_SetConfig>:
 8009fe4:	b580      	push	{r7, lr}
 8009fe6:	b084      	sub	sp, #16
 8009fe8:	af00      	add	r7, sp, #0
 8009fea:	6078      	str	r0, [r7, #4]
 8009fec:	6039      	str	r1, [r7, #0]
 8009fee:	687b      	ldr	r3, [r7, #4]
 8009ff0:	681b      	ldr	r3, [r3, #0]
 8009ff2:	60fb      	str	r3, [r7, #12]
 8009ff4:	687b      	ldr	r3, [r7, #4]
 8009ff6:	4a3f      	ldr	r2, [pc, #252]	; (800a0f4 <TIM_Base_SetConfig+0x110>)
 8009ff8:	4293      	cmp	r3, r2
 8009ffa:	d00c      	beq.n	800a016 <TIM_Base_SetConfig+0x32>
 8009ffc:	687a      	ldr	r2, [r7, #4]
 8009ffe:	2380      	movs	r3, #128	; 0x80
 800a000:	05db      	lsls	r3, r3, #23
 800a002:	429a      	cmp	r2, r3
 800a004:	d007      	beq.n	800a016 <TIM_Base_SetConfig+0x32>
 800a006:	687b      	ldr	r3, [r7, #4]
 800a008:	4a3b      	ldr	r2, [pc, #236]	; (800a0f8 <TIM_Base_SetConfig+0x114>)
 800a00a:	4293      	cmp	r3, r2
 800a00c:	d003      	beq.n	800a016 <TIM_Base_SetConfig+0x32>
 800a00e:	687b      	ldr	r3, [r7, #4]
 800a010:	4a3a      	ldr	r2, [pc, #232]	; (800a0fc <TIM_Base_SetConfig+0x118>)
 800a012:	4293      	cmp	r3, r2
 800a014:	d108      	bne.n	800a028 <TIM_Base_SetConfig+0x44>
 800a016:	68fb      	ldr	r3, [r7, #12]
 800a018:	2270      	movs	r2, #112	; 0x70
 800a01a:	4393      	bics	r3, r2
 800a01c:	60fb      	str	r3, [r7, #12]
 800a01e:	683b      	ldr	r3, [r7, #0]
 800a020:	685b      	ldr	r3, [r3, #4]
 800a022:	68fa      	ldr	r2, [r7, #12]
 800a024:	4313      	orrs	r3, r2
 800a026:	60fb      	str	r3, [r7, #12]
 800a028:	687b      	ldr	r3, [r7, #4]
 800a02a:	4a32      	ldr	r2, [pc, #200]	; (800a0f4 <TIM_Base_SetConfig+0x110>)
 800a02c:	4293      	cmp	r3, r2
 800a02e:	d01c      	beq.n	800a06a <TIM_Base_SetConfig+0x86>
 800a030:	687a      	ldr	r2, [r7, #4]
 800a032:	2380      	movs	r3, #128	; 0x80
 800a034:	05db      	lsls	r3, r3, #23
 800a036:	429a      	cmp	r2, r3
 800a038:	d017      	beq.n	800a06a <TIM_Base_SetConfig+0x86>
 800a03a:	687b      	ldr	r3, [r7, #4]
 800a03c:	4a2e      	ldr	r2, [pc, #184]	; (800a0f8 <TIM_Base_SetConfig+0x114>)
 800a03e:	4293      	cmp	r3, r2
 800a040:	d013      	beq.n	800a06a <TIM_Base_SetConfig+0x86>
 800a042:	687b      	ldr	r3, [r7, #4]
 800a044:	4a2d      	ldr	r2, [pc, #180]	; (800a0fc <TIM_Base_SetConfig+0x118>)
 800a046:	4293      	cmp	r3, r2
 800a048:	d00f      	beq.n	800a06a <TIM_Base_SetConfig+0x86>
 800a04a:	687b      	ldr	r3, [r7, #4]
 800a04c:	4a2c      	ldr	r2, [pc, #176]	; (800a100 <TIM_Base_SetConfig+0x11c>)
 800a04e:	4293      	cmp	r3, r2
 800a050:	d00b      	beq.n	800a06a <TIM_Base_SetConfig+0x86>
 800a052:	687b      	ldr	r3, [r7, #4]
 800a054:	4a2b      	ldr	r2, [pc, #172]	; (800a104 <TIM_Base_SetConfig+0x120>)
 800a056:	4293      	cmp	r3, r2
 800a058:	d007      	beq.n	800a06a <TIM_Base_SetConfig+0x86>
 800a05a:	687b      	ldr	r3, [r7, #4]
 800a05c:	4a2a      	ldr	r2, [pc, #168]	; (800a108 <TIM_Base_SetConfig+0x124>)
 800a05e:	4293      	cmp	r3, r2
 800a060:	d003      	beq.n	800a06a <TIM_Base_SetConfig+0x86>
 800a062:	687b      	ldr	r3, [r7, #4]
 800a064:	4a29      	ldr	r2, [pc, #164]	; (800a10c <TIM_Base_SetConfig+0x128>)
 800a066:	4293      	cmp	r3, r2
 800a068:	d108      	bne.n	800a07c <TIM_Base_SetConfig+0x98>
 800a06a:	68fb      	ldr	r3, [r7, #12]
 800a06c:	4a28      	ldr	r2, [pc, #160]	; (800a110 <TIM_Base_SetConfig+0x12c>)
 800a06e:	4013      	ands	r3, r2
 800a070:	60fb      	str	r3, [r7, #12]
 800a072:	683b      	ldr	r3, [r7, #0]
 800a074:	68db      	ldr	r3, [r3, #12]
 800a076:	68fa      	ldr	r2, [r7, #12]
 800a078:	4313      	orrs	r3, r2
 800a07a:	60fb      	str	r3, [r7, #12]
 800a07c:	68fb      	ldr	r3, [r7, #12]
 800a07e:	2280      	movs	r2, #128	; 0x80
 800a080:	4393      	bics	r3, r2
 800a082:	001a      	movs	r2, r3
 800a084:	683b      	ldr	r3, [r7, #0]
 800a086:	695b      	ldr	r3, [r3, #20]
 800a088:	4313      	orrs	r3, r2
 800a08a:	60fb      	str	r3, [r7, #12]
 800a08c:	687b      	ldr	r3, [r7, #4]
 800a08e:	68fa      	ldr	r2, [r7, #12]
 800a090:	601a      	str	r2, [r3, #0]
 800a092:	683b      	ldr	r3, [r7, #0]
 800a094:	689a      	ldr	r2, [r3, #8]
 800a096:	687b      	ldr	r3, [r7, #4]
 800a098:	62da      	str	r2, [r3, #44]	; 0x2c
 800a09a:	683b      	ldr	r3, [r7, #0]
 800a09c:	681a      	ldr	r2, [r3, #0]
 800a09e:	687b      	ldr	r3, [r7, #4]
 800a0a0:	629a      	str	r2, [r3, #40]	; 0x28
 800a0a2:	687b      	ldr	r3, [r7, #4]
 800a0a4:	4a13      	ldr	r2, [pc, #76]	; (800a0f4 <TIM_Base_SetConfig+0x110>)
 800a0a6:	4293      	cmp	r3, r2
 800a0a8:	d00b      	beq.n	800a0c2 <TIM_Base_SetConfig+0xde>
 800a0aa:	687b      	ldr	r3, [r7, #4]
 800a0ac:	4a15      	ldr	r2, [pc, #84]	; (800a104 <TIM_Base_SetConfig+0x120>)
 800a0ae:	4293      	cmp	r3, r2
 800a0b0:	d007      	beq.n	800a0c2 <TIM_Base_SetConfig+0xde>
 800a0b2:	687b      	ldr	r3, [r7, #4]
 800a0b4:	4a14      	ldr	r2, [pc, #80]	; (800a108 <TIM_Base_SetConfig+0x124>)
 800a0b6:	4293      	cmp	r3, r2
 800a0b8:	d003      	beq.n	800a0c2 <TIM_Base_SetConfig+0xde>
 800a0ba:	687b      	ldr	r3, [r7, #4]
 800a0bc:	4a13      	ldr	r2, [pc, #76]	; (800a10c <TIM_Base_SetConfig+0x128>)
 800a0be:	4293      	cmp	r3, r2
 800a0c0:	d103      	bne.n	800a0ca <TIM_Base_SetConfig+0xe6>
 800a0c2:	683b      	ldr	r3, [r7, #0]
 800a0c4:	691a      	ldr	r2, [r3, #16]
 800a0c6:	687b      	ldr	r3, [r7, #4]
 800a0c8:	631a      	str	r2, [r3, #48]	; 0x30
 800a0ca:	687b      	ldr	r3, [r7, #4]
 800a0cc:	2201      	movs	r2, #1
 800a0ce:	615a      	str	r2, [r3, #20]
 800a0d0:	687b      	ldr	r3, [r7, #4]
 800a0d2:	691b      	ldr	r3, [r3, #16]
 800a0d4:	2201      	movs	r2, #1
 800a0d6:	4013      	ands	r3, r2
 800a0d8:	2b01      	cmp	r3, #1
 800a0da:	d106      	bne.n	800a0ea <TIM_Base_SetConfig+0x106>
 800a0dc:	687b      	ldr	r3, [r7, #4]
 800a0de:	691b      	ldr	r3, [r3, #16]
 800a0e0:	2201      	movs	r2, #1
 800a0e2:	4393      	bics	r3, r2
 800a0e4:	001a      	movs	r2, r3
 800a0e6:	687b      	ldr	r3, [r7, #4]
 800a0e8:	611a      	str	r2, [r3, #16]
 800a0ea:	46c0      	nop			; (mov r8, r8)
 800a0ec:	46bd      	mov	sp, r7
 800a0ee:	b004      	add	sp, #16
 800a0f0:	bd80      	pop	{r7, pc}
 800a0f2:	46c0      	nop			; (mov r8, r8)
 800a0f4:	40012c00 	.word	0x40012c00
 800a0f8:	40000400 	.word	0x40000400
 800a0fc:	40000800 	.word	0x40000800
 800a100:	40002000 	.word	0x40002000
 800a104:	40014000 	.word	0x40014000
 800a108:	40014400 	.word	0x40014400
 800a10c:	40014800 	.word	0x40014800
 800a110:	fffffcff 	.word	0xfffffcff

0800a114 <HAL_TIMEx_CommutCallback>:
 800a114:	b580      	push	{r7, lr}
 800a116:	b082      	sub	sp, #8
 800a118:	af00      	add	r7, sp, #0
 800a11a:	6078      	str	r0, [r7, #4]
 800a11c:	46c0      	nop			; (mov r8, r8)
 800a11e:	46bd      	mov	sp, r7
 800a120:	b002      	add	sp, #8
 800a122:	bd80      	pop	{r7, pc}

0800a124 <HAL_TIMEx_BreakCallback>:
 800a124:	b580      	push	{r7, lr}
 800a126:	b082      	sub	sp, #8
 800a128:	af00      	add	r7, sp, #0
 800a12a:	6078      	str	r0, [r7, #4]
 800a12c:	46c0      	nop			; (mov r8, r8)
 800a12e:	46bd      	mov	sp, r7
 800a130:	b002      	add	sp, #8
 800a132:	bd80      	pop	{r7, pc}

0800a134 <HAL_TIMEx_Break2Callback>:
 800a134:	b580      	push	{r7, lr}
 800a136:	b082      	sub	sp, #8
 800a138:	af00      	add	r7, sp, #0
 800a13a:	6078      	str	r0, [r7, #4]
 800a13c:	46c0      	nop			; (mov r8, r8)
 800a13e:	46bd      	mov	sp, r7
 800a140:	b002      	add	sp, #8
 800a142:	bd80      	pop	{r7, pc}

0800a144 <LL_DMA_ConfigTransfer>:
 800a144:	b580      	push	{r7, lr}
 800a146:	b086      	sub	sp, #24
 800a148:	af00      	add	r7, sp, #0
 800a14a:	60f8      	str	r0, [r7, #12]
 800a14c:	60b9      	str	r1, [r7, #8]
 800a14e:	607a      	str	r2, [r7, #4]
 800a150:	68fb      	ldr	r3, [r7, #12]
 800a152:	617b      	str	r3, [r7, #20]
 800a154:	4a0c      	ldr	r2, [pc, #48]	; (800a188 <LL_DMA_ConfigTransfer+0x44>)
 800a156:	68bb      	ldr	r3, [r7, #8]
 800a158:	18d3      	adds	r3, r2, r3
 800a15a:	781b      	ldrb	r3, [r3, #0]
 800a15c:	001a      	movs	r2, r3
 800a15e:	697b      	ldr	r3, [r7, #20]
 800a160:	18d3      	adds	r3, r2, r3
 800a162:	681b      	ldr	r3, [r3, #0]
 800a164:	4a09      	ldr	r2, [pc, #36]	; (800a18c <LL_DMA_ConfigTransfer+0x48>)
 800a166:	4013      	ands	r3, r2
 800a168:	0019      	movs	r1, r3
 800a16a:	4a07      	ldr	r2, [pc, #28]	; (800a188 <LL_DMA_ConfigTransfer+0x44>)
 800a16c:	68bb      	ldr	r3, [r7, #8]
 800a16e:	18d3      	adds	r3, r2, r3
 800a170:	781b      	ldrb	r3, [r3, #0]
 800a172:	001a      	movs	r2, r3
 800a174:	697b      	ldr	r3, [r7, #20]
 800a176:	18d3      	adds	r3, r2, r3
 800a178:	687a      	ldr	r2, [r7, #4]
 800a17a:	430a      	orrs	r2, r1
 800a17c:	601a      	str	r2, [r3, #0]
 800a17e:	46c0      	nop			; (mov r8, r8)
 800a180:	46bd      	mov	sp, r7
 800a182:	b006      	add	sp, #24
 800a184:	bd80      	pop	{r7, pc}
 800a186:	46c0      	nop			; (mov r8, r8)
 800a188:	08019968 	.word	0x08019968
 800a18c:	ffff800f 	.word	0xffff800f

0800a190 <LL_DMA_SetDataLength>:
 800a190:	b580      	push	{r7, lr}
 800a192:	b086      	sub	sp, #24
 800a194:	af00      	add	r7, sp, #0
 800a196:	60f8      	str	r0, [r7, #12]
 800a198:	60b9      	str	r1, [r7, #8]
 800a19a:	607a      	str	r2, [r7, #4]
 800a19c:	68fb      	ldr	r3, [r7, #12]
 800a19e:	617b      	str	r3, [r7, #20]
 800a1a0:	4a0b      	ldr	r2, [pc, #44]	; (800a1d0 <LL_DMA_SetDataLength+0x40>)
 800a1a2:	68bb      	ldr	r3, [r7, #8]
 800a1a4:	18d3      	adds	r3, r2, r3
 800a1a6:	781b      	ldrb	r3, [r3, #0]
 800a1a8:	001a      	movs	r2, r3
 800a1aa:	697b      	ldr	r3, [r7, #20]
 800a1ac:	18d3      	adds	r3, r2, r3
 800a1ae:	685b      	ldr	r3, [r3, #4]
 800a1b0:	0c1b      	lsrs	r3, r3, #16
 800a1b2:	0419      	lsls	r1, r3, #16
 800a1b4:	4a06      	ldr	r2, [pc, #24]	; (800a1d0 <LL_DMA_SetDataLength+0x40>)
 800a1b6:	68bb      	ldr	r3, [r7, #8]
 800a1b8:	18d3      	adds	r3, r2, r3
 800a1ba:	781b      	ldrb	r3, [r3, #0]
 800a1bc:	001a      	movs	r2, r3
 800a1be:	697b      	ldr	r3, [r7, #20]
 800a1c0:	18d3      	adds	r3, r2, r3
 800a1c2:	687a      	ldr	r2, [r7, #4]
 800a1c4:	430a      	orrs	r2, r1
 800a1c6:	605a      	str	r2, [r3, #4]
 800a1c8:	46c0      	nop			; (mov r8, r8)
 800a1ca:	46bd      	mov	sp, r7
 800a1cc:	b006      	add	sp, #24
 800a1ce:	bd80      	pop	{r7, pc}
 800a1d0:	08019968 	.word	0x08019968

0800a1d4 <LL_DMA_SetMemoryAddress>:
 800a1d4:	b580      	push	{r7, lr}
 800a1d6:	b086      	sub	sp, #24
 800a1d8:	af00      	add	r7, sp, #0
 800a1da:	60f8      	str	r0, [r7, #12]
 800a1dc:	60b9      	str	r1, [r7, #8]
 800a1de:	607a      	str	r2, [r7, #4]
 800a1e0:	68fb      	ldr	r3, [r7, #12]
 800a1e2:	617b      	str	r3, [r7, #20]
 800a1e4:	4a06      	ldr	r2, [pc, #24]	; (800a200 <LL_DMA_SetMemoryAddress+0x2c>)
 800a1e6:	68bb      	ldr	r3, [r7, #8]
 800a1e8:	18d3      	adds	r3, r2, r3
 800a1ea:	781b      	ldrb	r3, [r3, #0]
 800a1ec:	001a      	movs	r2, r3
 800a1ee:	697b      	ldr	r3, [r7, #20]
 800a1f0:	18d3      	adds	r3, r2, r3
 800a1f2:	687a      	ldr	r2, [r7, #4]
 800a1f4:	60da      	str	r2, [r3, #12]
 800a1f6:	46c0      	nop			; (mov r8, r8)
 800a1f8:	46bd      	mov	sp, r7
 800a1fa:	b006      	add	sp, #24
 800a1fc:	bd80      	pop	{r7, pc}
 800a1fe:	46c0      	nop			; (mov r8, r8)
 800a200:	08019968 	.word	0x08019968

0800a204 <LL_DMA_SetPeriphAddress>:
 800a204:	b580      	push	{r7, lr}
 800a206:	b086      	sub	sp, #24
 800a208:	af00      	add	r7, sp, #0
 800a20a:	60f8      	str	r0, [r7, #12]
 800a20c:	60b9      	str	r1, [r7, #8]
 800a20e:	607a      	str	r2, [r7, #4]
 800a210:	68fb      	ldr	r3, [r7, #12]
 800a212:	617b      	str	r3, [r7, #20]
 800a214:	4a06      	ldr	r2, [pc, #24]	; (800a230 <LL_DMA_SetPeriphAddress+0x2c>)
 800a216:	68bb      	ldr	r3, [r7, #8]
 800a218:	18d3      	adds	r3, r2, r3
 800a21a:	781b      	ldrb	r3, [r3, #0]
 800a21c:	001a      	movs	r2, r3
 800a21e:	697b      	ldr	r3, [r7, #20]
 800a220:	18d3      	adds	r3, r2, r3
 800a222:	687a      	ldr	r2, [r7, #4]
 800a224:	609a      	str	r2, [r3, #8]
 800a226:	46c0      	nop			; (mov r8, r8)
 800a228:	46bd      	mov	sp, r7
 800a22a:	b006      	add	sp, #24
 800a22c:	bd80      	pop	{r7, pc}
 800a22e:	46c0      	nop			; (mov r8, r8)
 800a230:	08019968 	.word	0x08019968

0800a234 <LL_DMA_SetPeriphRequest>:
 800a234:	b580      	push	{r7, lr}
 800a236:	b086      	sub	sp, #24
 800a238:	af00      	add	r7, sp, #0
 800a23a:	60f8      	str	r0, [r7, #12]
 800a23c:	60b9      	str	r1, [r7, #8]
 800a23e:	607a      	str	r2, [r7, #4]
 800a240:	68fb      	ldr	r3, [r7, #12]
 800a242:	0a9b      	lsrs	r3, r3, #10
 800a244:	4a0f      	ldr	r2, [pc, #60]	; (800a284 <LL_DMA_SetPeriphRequest+0x50>)
 800a246:	405a      	eors	r2, r3
 800a248:	0013      	movs	r3, r2
 800a24a:	00db      	lsls	r3, r3, #3
 800a24c:	1a9b      	subs	r3, r3, r2
 800a24e:	617b      	str	r3, [r7, #20]
 800a250:	68ba      	ldr	r2, [r7, #8]
 800a252:	697b      	ldr	r3, [r7, #20]
 800a254:	18d3      	adds	r3, r2, r3
 800a256:	009b      	lsls	r3, r3, #2
 800a258:	4a0b      	ldr	r2, [pc, #44]	; (800a288 <LL_DMA_SetPeriphRequest+0x54>)
 800a25a:	4694      	mov	ip, r2
 800a25c:	4463      	add	r3, ip
 800a25e:	681b      	ldr	r3, [r3, #0]
 800a260:	227f      	movs	r2, #127	; 0x7f
 800a262:	4393      	bics	r3, r2
 800a264:	0019      	movs	r1, r3
 800a266:	68ba      	ldr	r2, [r7, #8]
 800a268:	697b      	ldr	r3, [r7, #20]
 800a26a:	18d3      	adds	r3, r2, r3
 800a26c:	009b      	lsls	r3, r3, #2
 800a26e:	4a06      	ldr	r2, [pc, #24]	; (800a288 <LL_DMA_SetPeriphRequest+0x54>)
 800a270:	4694      	mov	ip, r2
 800a272:	4463      	add	r3, ip
 800a274:	687a      	ldr	r2, [r7, #4]
 800a276:	430a      	orrs	r2, r1
 800a278:	601a      	str	r2, [r3, #0]
 800a27a:	46c0      	nop			; (mov r8, r8)
 800a27c:	46bd      	mov	sp, r7
 800a27e:	b006      	add	sp, #24
 800a280:	bd80      	pop	{r7, pc}
 800a282:	46c0      	nop			; (mov r8, r8)
 800a284:	00100080 	.word	0x00100080
 800a288:	40020800 	.word	0x40020800

0800a28c <LL_DMA_Init>:
 800a28c:	b580      	push	{r7, lr}
 800a28e:	b084      	sub	sp, #16
 800a290:	af00      	add	r7, sp, #0
 800a292:	60f8      	str	r0, [r7, #12]
 800a294:	60b9      	str	r1, [r7, #8]
 800a296:	607a      	str	r2, [r7, #4]
 800a298:	687b      	ldr	r3, [r7, #4]
 800a29a:	689a      	ldr	r2, [r3, #8]
 800a29c:	687b      	ldr	r3, [r7, #4]
 800a29e:	68db      	ldr	r3, [r3, #12]
 800a2a0:	431a      	orrs	r2, r3
 800a2a2:	687b      	ldr	r3, [r7, #4]
 800a2a4:	691b      	ldr	r3, [r3, #16]
 800a2a6:	431a      	orrs	r2, r3
 800a2a8:	687b      	ldr	r3, [r7, #4]
 800a2aa:	695b      	ldr	r3, [r3, #20]
 800a2ac:	431a      	orrs	r2, r3
 800a2ae:	687b      	ldr	r3, [r7, #4]
 800a2b0:	699b      	ldr	r3, [r3, #24]
 800a2b2:	431a      	orrs	r2, r3
 800a2b4:	687b      	ldr	r3, [r7, #4]
 800a2b6:	69db      	ldr	r3, [r3, #28]
 800a2b8:	431a      	orrs	r2, r3
 800a2ba:	687b      	ldr	r3, [r7, #4]
 800a2bc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a2be:	431a      	orrs	r2, r3
 800a2c0:	68b9      	ldr	r1, [r7, #8]
 800a2c2:	68fb      	ldr	r3, [r7, #12]
 800a2c4:	0018      	movs	r0, r3
 800a2c6:	f7ff ff3d 	bl	800a144 <LL_DMA_ConfigTransfer>
 800a2ca:	687b      	ldr	r3, [r7, #4]
 800a2cc:	685a      	ldr	r2, [r3, #4]
 800a2ce:	68b9      	ldr	r1, [r7, #8]
 800a2d0:	68fb      	ldr	r3, [r7, #12]
 800a2d2:	0018      	movs	r0, r3
 800a2d4:	f7ff ff7e 	bl	800a1d4 <LL_DMA_SetMemoryAddress>
 800a2d8:	687b      	ldr	r3, [r7, #4]
 800a2da:	681a      	ldr	r2, [r3, #0]
 800a2dc:	68b9      	ldr	r1, [r7, #8]
 800a2de:	68fb      	ldr	r3, [r7, #12]
 800a2e0:	0018      	movs	r0, r3
 800a2e2:	f7ff ff8f 	bl	800a204 <LL_DMA_SetPeriphAddress>
 800a2e6:	687b      	ldr	r3, [r7, #4]
 800a2e8:	6a1a      	ldr	r2, [r3, #32]
 800a2ea:	68b9      	ldr	r1, [r7, #8]
 800a2ec:	68fb      	ldr	r3, [r7, #12]
 800a2ee:	0018      	movs	r0, r3
 800a2f0:	f7ff ff4e 	bl	800a190 <LL_DMA_SetDataLength>
 800a2f4:	687b      	ldr	r3, [r7, #4]
 800a2f6:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800a2f8:	68b9      	ldr	r1, [r7, #8]
 800a2fa:	68fb      	ldr	r3, [r7, #12]
 800a2fc:	0018      	movs	r0, r3
 800a2fe:	f7ff ff99 	bl	800a234 <LL_DMA_SetPeriphRequest>
 800a302:	2300      	movs	r3, #0
 800a304:	0018      	movs	r0, r3
 800a306:	46bd      	mov	sp, r7
 800a308:	b004      	add	sp, #16
 800a30a:	bd80      	pop	{r7, pc}

0800a30c <LL_DMA_StructInit>:
 800a30c:	b580      	push	{r7, lr}
 800a30e:	b082      	sub	sp, #8
 800a310:	af00      	add	r7, sp, #0
 800a312:	6078      	str	r0, [r7, #4]
 800a314:	687b      	ldr	r3, [r7, #4]
 800a316:	2200      	movs	r2, #0
 800a318:	601a      	str	r2, [r3, #0]
 800a31a:	687b      	ldr	r3, [r7, #4]
 800a31c:	2200      	movs	r2, #0
 800a31e:	605a      	str	r2, [r3, #4]
 800a320:	687b      	ldr	r3, [r7, #4]
 800a322:	2200      	movs	r2, #0
 800a324:	609a      	str	r2, [r3, #8]
 800a326:	687b      	ldr	r3, [r7, #4]
 800a328:	2200      	movs	r2, #0
 800a32a:	60da      	str	r2, [r3, #12]
 800a32c:	687b      	ldr	r3, [r7, #4]
 800a32e:	2200      	movs	r2, #0
 800a330:	611a      	str	r2, [r3, #16]
 800a332:	687b      	ldr	r3, [r7, #4]
 800a334:	2200      	movs	r2, #0
 800a336:	615a      	str	r2, [r3, #20]
 800a338:	687b      	ldr	r3, [r7, #4]
 800a33a:	2200      	movs	r2, #0
 800a33c:	619a      	str	r2, [r3, #24]
 800a33e:	687b      	ldr	r3, [r7, #4]
 800a340:	2200      	movs	r2, #0
 800a342:	61da      	str	r2, [r3, #28]
 800a344:	687b      	ldr	r3, [r7, #4]
 800a346:	2200      	movs	r2, #0
 800a348:	621a      	str	r2, [r3, #32]
 800a34a:	687b      	ldr	r3, [r7, #4]
 800a34c:	2200      	movs	r2, #0
 800a34e:	625a      	str	r2, [r3, #36]	; 0x24
 800a350:	687b      	ldr	r3, [r7, #4]
 800a352:	2200      	movs	r2, #0
 800a354:	629a      	str	r2, [r3, #40]	; 0x28
 800a356:	46c0      	nop			; (mov r8, r8)
 800a358:	46bd      	mov	sp, r7
 800a35a:	b002      	add	sp, #8
 800a35c:	bd80      	pop	{r7, pc}

0800a35e <LL_GPIO_SetPinMode>:
 800a35e:	b580      	push	{r7, lr}
 800a360:	b084      	sub	sp, #16
 800a362:	af00      	add	r7, sp, #0
 800a364:	60f8      	str	r0, [r7, #12]
 800a366:	60b9      	str	r1, [r7, #8]
 800a368:	607a      	str	r2, [r7, #4]
 800a36a:	68fb      	ldr	r3, [r7, #12]
 800a36c:	6819      	ldr	r1, [r3, #0]
 800a36e:	68bb      	ldr	r3, [r7, #8]
 800a370:	435b      	muls	r3, r3
 800a372:	001a      	movs	r2, r3
 800a374:	0013      	movs	r3, r2
 800a376:	005b      	lsls	r3, r3, #1
 800a378:	189b      	adds	r3, r3, r2
 800a37a:	43db      	mvns	r3, r3
 800a37c:	400b      	ands	r3, r1
 800a37e:	001a      	movs	r2, r3
 800a380:	68bb      	ldr	r3, [r7, #8]
 800a382:	435b      	muls	r3, r3
 800a384:	6879      	ldr	r1, [r7, #4]
 800a386:	434b      	muls	r3, r1
 800a388:	431a      	orrs	r2, r3
 800a38a:	68fb      	ldr	r3, [r7, #12]
 800a38c:	601a      	str	r2, [r3, #0]
 800a38e:	46c0      	nop			; (mov r8, r8)
 800a390:	46bd      	mov	sp, r7
 800a392:	b004      	add	sp, #16
 800a394:	bd80      	pop	{r7, pc}

0800a396 <LL_GPIO_SetPinOutputType>:
 800a396:	b580      	push	{r7, lr}
 800a398:	b084      	sub	sp, #16
 800a39a:	af00      	add	r7, sp, #0
 800a39c:	60f8      	str	r0, [r7, #12]
 800a39e:	60b9      	str	r1, [r7, #8]
 800a3a0:	607a      	str	r2, [r7, #4]
 800a3a2:	68fb      	ldr	r3, [r7, #12]
 800a3a4:	685b      	ldr	r3, [r3, #4]
 800a3a6:	68ba      	ldr	r2, [r7, #8]
 800a3a8:	43d2      	mvns	r2, r2
 800a3aa:	401a      	ands	r2, r3
 800a3ac:	68bb      	ldr	r3, [r7, #8]
 800a3ae:	6879      	ldr	r1, [r7, #4]
 800a3b0:	434b      	muls	r3, r1
 800a3b2:	431a      	orrs	r2, r3
 800a3b4:	68fb      	ldr	r3, [r7, #12]
 800a3b6:	605a      	str	r2, [r3, #4]
 800a3b8:	46c0      	nop			; (mov r8, r8)
 800a3ba:	46bd      	mov	sp, r7
 800a3bc:	b004      	add	sp, #16
 800a3be:	bd80      	pop	{r7, pc}

0800a3c0 <LL_GPIO_SetPinSpeed>:
 800a3c0:	b580      	push	{r7, lr}
 800a3c2:	b084      	sub	sp, #16
 800a3c4:	af00      	add	r7, sp, #0
 800a3c6:	60f8      	str	r0, [r7, #12]
 800a3c8:	60b9      	str	r1, [r7, #8]
 800a3ca:	607a      	str	r2, [r7, #4]
 800a3cc:	68fb      	ldr	r3, [r7, #12]
 800a3ce:	6899      	ldr	r1, [r3, #8]
 800a3d0:	68bb      	ldr	r3, [r7, #8]
 800a3d2:	435b      	muls	r3, r3
 800a3d4:	001a      	movs	r2, r3
 800a3d6:	0013      	movs	r3, r2
 800a3d8:	005b      	lsls	r3, r3, #1
 800a3da:	189b      	adds	r3, r3, r2
 800a3dc:	43db      	mvns	r3, r3
 800a3de:	400b      	ands	r3, r1
 800a3e0:	001a      	movs	r2, r3
 800a3e2:	68bb      	ldr	r3, [r7, #8]
 800a3e4:	435b      	muls	r3, r3
 800a3e6:	6879      	ldr	r1, [r7, #4]
 800a3e8:	434b      	muls	r3, r1
 800a3ea:	431a      	orrs	r2, r3
 800a3ec:	68fb      	ldr	r3, [r7, #12]
 800a3ee:	609a      	str	r2, [r3, #8]
 800a3f0:	46c0      	nop			; (mov r8, r8)
 800a3f2:	46bd      	mov	sp, r7
 800a3f4:	b004      	add	sp, #16
 800a3f6:	bd80      	pop	{r7, pc}

0800a3f8 <LL_GPIO_SetPinPull>:
 800a3f8:	b580      	push	{r7, lr}
 800a3fa:	b084      	sub	sp, #16
 800a3fc:	af00      	add	r7, sp, #0
 800a3fe:	60f8      	str	r0, [r7, #12]
 800a400:	60b9      	str	r1, [r7, #8]
 800a402:	607a      	str	r2, [r7, #4]
 800a404:	68fb      	ldr	r3, [r7, #12]
 800a406:	68d9      	ldr	r1, [r3, #12]
 800a408:	68bb      	ldr	r3, [r7, #8]
 800a40a:	435b      	muls	r3, r3
 800a40c:	001a      	movs	r2, r3
 800a40e:	0013      	movs	r3, r2
 800a410:	005b      	lsls	r3, r3, #1
 800a412:	189b      	adds	r3, r3, r2
 800a414:	43db      	mvns	r3, r3
 800a416:	400b      	ands	r3, r1
 800a418:	001a      	movs	r2, r3
 800a41a:	68bb      	ldr	r3, [r7, #8]
 800a41c:	435b      	muls	r3, r3
 800a41e:	6879      	ldr	r1, [r7, #4]
 800a420:	434b      	muls	r3, r1
 800a422:	431a      	orrs	r2, r3
 800a424:	68fb      	ldr	r3, [r7, #12]
 800a426:	60da      	str	r2, [r3, #12]
 800a428:	46c0      	nop			; (mov r8, r8)
 800a42a:	46bd      	mov	sp, r7
 800a42c:	b004      	add	sp, #16
 800a42e:	bd80      	pop	{r7, pc}

0800a430 <LL_GPIO_SetAFPin_0_7>:
 800a430:	b580      	push	{r7, lr}
 800a432:	b084      	sub	sp, #16
 800a434:	af00      	add	r7, sp, #0
 800a436:	60f8      	str	r0, [r7, #12]
 800a438:	60b9      	str	r1, [r7, #8]
 800a43a:	607a      	str	r2, [r7, #4]
 800a43c:	68fb      	ldr	r3, [r7, #12]
 800a43e:	6a19      	ldr	r1, [r3, #32]
 800a440:	68bb      	ldr	r3, [r7, #8]
 800a442:	435b      	muls	r3, r3
 800a444:	68ba      	ldr	r2, [r7, #8]
 800a446:	4353      	muls	r3, r2
 800a448:	68ba      	ldr	r2, [r7, #8]
 800a44a:	435a      	muls	r2, r3
 800a44c:	0013      	movs	r3, r2
 800a44e:	011b      	lsls	r3, r3, #4
 800a450:	1a9b      	subs	r3, r3, r2
 800a452:	43db      	mvns	r3, r3
 800a454:	400b      	ands	r3, r1
 800a456:	001a      	movs	r2, r3
 800a458:	68bb      	ldr	r3, [r7, #8]
 800a45a:	435b      	muls	r3, r3
 800a45c:	68b9      	ldr	r1, [r7, #8]
 800a45e:	434b      	muls	r3, r1
 800a460:	68b9      	ldr	r1, [r7, #8]
 800a462:	434b      	muls	r3, r1
 800a464:	6879      	ldr	r1, [r7, #4]
 800a466:	434b      	muls	r3, r1
 800a468:	431a      	orrs	r2, r3
 800a46a:	68fb      	ldr	r3, [r7, #12]
 800a46c:	621a      	str	r2, [r3, #32]
 800a46e:	46c0      	nop			; (mov r8, r8)
 800a470:	46bd      	mov	sp, r7
 800a472:	b004      	add	sp, #16
 800a474:	bd80      	pop	{r7, pc}

0800a476 <LL_GPIO_SetAFPin_8_15>:
 800a476:	b580      	push	{r7, lr}
 800a478:	b084      	sub	sp, #16
 800a47a:	af00      	add	r7, sp, #0
 800a47c:	60f8      	str	r0, [r7, #12]
 800a47e:	60b9      	str	r1, [r7, #8]
 800a480:	607a      	str	r2, [r7, #4]
 800a482:	68fb      	ldr	r3, [r7, #12]
 800a484:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800a486:	68bb      	ldr	r3, [r7, #8]
 800a488:	0a1b      	lsrs	r3, r3, #8
 800a48a:	68ba      	ldr	r2, [r7, #8]
 800a48c:	0a12      	lsrs	r2, r2, #8
 800a48e:	4353      	muls	r3, r2
 800a490:	68ba      	ldr	r2, [r7, #8]
 800a492:	0a12      	lsrs	r2, r2, #8
 800a494:	4353      	muls	r3, r2
 800a496:	68ba      	ldr	r2, [r7, #8]
 800a498:	0a12      	lsrs	r2, r2, #8
 800a49a:	435a      	muls	r2, r3
 800a49c:	0013      	movs	r3, r2
 800a49e:	011b      	lsls	r3, r3, #4
 800a4a0:	1a9b      	subs	r3, r3, r2
 800a4a2:	43db      	mvns	r3, r3
 800a4a4:	400b      	ands	r3, r1
 800a4a6:	001a      	movs	r2, r3
 800a4a8:	68bb      	ldr	r3, [r7, #8]
 800a4aa:	0a1b      	lsrs	r3, r3, #8
 800a4ac:	68b9      	ldr	r1, [r7, #8]
 800a4ae:	0a09      	lsrs	r1, r1, #8
 800a4b0:	434b      	muls	r3, r1
 800a4b2:	68b9      	ldr	r1, [r7, #8]
 800a4b4:	0a09      	lsrs	r1, r1, #8
 800a4b6:	434b      	muls	r3, r1
 800a4b8:	68b9      	ldr	r1, [r7, #8]
 800a4ba:	0a09      	lsrs	r1, r1, #8
 800a4bc:	434b      	muls	r3, r1
 800a4be:	6879      	ldr	r1, [r7, #4]
 800a4c0:	434b      	muls	r3, r1
 800a4c2:	431a      	orrs	r2, r3
 800a4c4:	68fb      	ldr	r3, [r7, #12]
 800a4c6:	625a      	str	r2, [r3, #36]	; 0x24
 800a4c8:	46c0      	nop			; (mov r8, r8)
 800a4ca:	46bd      	mov	sp, r7
 800a4cc:	b004      	add	sp, #16
 800a4ce:	bd80      	pop	{r7, pc}

0800a4d0 <LL_GPIO_Init>:
 800a4d0:	b580      	push	{r7, lr}
 800a4d2:	b084      	sub	sp, #16
 800a4d4:	af00      	add	r7, sp, #0
 800a4d6:	6078      	str	r0, [r7, #4]
 800a4d8:	6039      	str	r1, [r7, #0]
 800a4da:	2300      	movs	r3, #0
 800a4dc:	60fb      	str	r3, [r7, #12]
 800a4de:	e047      	b.n	800a570 <LL_GPIO_Init+0xa0>
 800a4e0:	683b      	ldr	r3, [r7, #0]
 800a4e2:	681b      	ldr	r3, [r3, #0]
 800a4e4:	2101      	movs	r1, #1
 800a4e6:	68fa      	ldr	r2, [r7, #12]
 800a4e8:	4091      	lsls	r1, r2
 800a4ea:	000a      	movs	r2, r1
 800a4ec:	4013      	ands	r3, r2
 800a4ee:	60bb      	str	r3, [r7, #8]
 800a4f0:	68bb      	ldr	r3, [r7, #8]
 800a4f2:	2b00      	cmp	r3, #0
 800a4f4:	d039      	beq.n	800a56a <LL_GPIO_Init+0x9a>
 800a4f6:	683b      	ldr	r3, [r7, #0]
 800a4f8:	685b      	ldr	r3, [r3, #4]
 800a4fa:	2b01      	cmp	r3, #1
 800a4fc:	d003      	beq.n	800a506 <LL_GPIO_Init+0x36>
 800a4fe:	683b      	ldr	r3, [r7, #0]
 800a500:	685b      	ldr	r3, [r3, #4]
 800a502:	2b02      	cmp	r3, #2
 800a504:	d10d      	bne.n	800a522 <LL_GPIO_Init+0x52>
 800a506:	683b      	ldr	r3, [r7, #0]
 800a508:	689a      	ldr	r2, [r3, #8]
 800a50a:	68b9      	ldr	r1, [r7, #8]
 800a50c:	687b      	ldr	r3, [r7, #4]
 800a50e:	0018      	movs	r0, r3
 800a510:	f7ff ff56 	bl	800a3c0 <LL_GPIO_SetPinSpeed>
 800a514:	683b      	ldr	r3, [r7, #0]
 800a516:	68da      	ldr	r2, [r3, #12]
 800a518:	68b9      	ldr	r1, [r7, #8]
 800a51a:	687b      	ldr	r3, [r7, #4]
 800a51c:	0018      	movs	r0, r3
 800a51e:	f7ff ff3a 	bl	800a396 <LL_GPIO_SetPinOutputType>
 800a522:	683b      	ldr	r3, [r7, #0]
 800a524:	691a      	ldr	r2, [r3, #16]
 800a526:	68b9      	ldr	r1, [r7, #8]
 800a528:	687b      	ldr	r3, [r7, #4]
 800a52a:	0018      	movs	r0, r3
 800a52c:	f7ff ff64 	bl	800a3f8 <LL_GPIO_SetPinPull>
 800a530:	683b      	ldr	r3, [r7, #0]
 800a532:	685b      	ldr	r3, [r3, #4]
 800a534:	2b02      	cmp	r3, #2
 800a536:	d111      	bne.n	800a55c <LL_GPIO_Init+0x8c>
 800a538:	68bb      	ldr	r3, [r7, #8]
 800a53a:	2bff      	cmp	r3, #255	; 0xff
 800a53c:	d807      	bhi.n	800a54e <LL_GPIO_Init+0x7e>
 800a53e:	683b      	ldr	r3, [r7, #0]
 800a540:	695a      	ldr	r2, [r3, #20]
 800a542:	68b9      	ldr	r1, [r7, #8]
 800a544:	687b      	ldr	r3, [r7, #4]
 800a546:	0018      	movs	r0, r3
 800a548:	f7ff ff72 	bl	800a430 <LL_GPIO_SetAFPin_0_7>
 800a54c:	e006      	b.n	800a55c <LL_GPIO_Init+0x8c>
 800a54e:	683b      	ldr	r3, [r7, #0]
 800a550:	695a      	ldr	r2, [r3, #20]
 800a552:	68b9      	ldr	r1, [r7, #8]
 800a554:	687b      	ldr	r3, [r7, #4]
 800a556:	0018      	movs	r0, r3
 800a558:	f7ff ff8d 	bl	800a476 <LL_GPIO_SetAFPin_8_15>
 800a55c:	683b      	ldr	r3, [r7, #0]
 800a55e:	685a      	ldr	r2, [r3, #4]
 800a560:	68b9      	ldr	r1, [r7, #8]
 800a562:	687b      	ldr	r3, [r7, #4]
 800a564:	0018      	movs	r0, r3
 800a566:	f7ff fefa 	bl	800a35e <LL_GPIO_SetPinMode>
 800a56a:	68fb      	ldr	r3, [r7, #12]
 800a56c:	3301      	adds	r3, #1
 800a56e:	60fb      	str	r3, [r7, #12]
 800a570:	683b      	ldr	r3, [r7, #0]
 800a572:	681a      	ldr	r2, [r3, #0]
 800a574:	68fb      	ldr	r3, [r7, #12]
 800a576:	40da      	lsrs	r2, r3
 800a578:	1e13      	subs	r3, r2, #0
 800a57a:	d1b1      	bne.n	800a4e0 <LL_GPIO_Init+0x10>
 800a57c:	2300      	movs	r3, #0
 800a57e:	0018      	movs	r0, r3
 800a580:	46bd      	mov	sp, r7
 800a582:	b004      	add	sp, #16
 800a584:	bd80      	pop	{r7, pc}

0800a586 <LL_LPUART_IsEnabled>:
 800a586:	b580      	push	{r7, lr}
 800a588:	b082      	sub	sp, #8
 800a58a:	af00      	add	r7, sp, #0
 800a58c:	6078      	str	r0, [r7, #4]
 800a58e:	687b      	ldr	r3, [r7, #4]
 800a590:	681b      	ldr	r3, [r3, #0]
 800a592:	2201      	movs	r2, #1
 800a594:	4013      	ands	r3, r2
 800a596:	2b01      	cmp	r3, #1
 800a598:	d101      	bne.n	800a59e <LL_LPUART_IsEnabled+0x18>
 800a59a:	2301      	movs	r3, #1
 800a59c:	e000      	b.n	800a5a0 <LL_LPUART_IsEnabled+0x1a>
 800a59e:	2300      	movs	r3, #0
 800a5a0:	0018      	movs	r0, r3
 800a5a2:	46bd      	mov	sp, r7
 800a5a4:	b002      	add	sp, #8
 800a5a6:	bd80      	pop	{r7, pc}

0800a5a8 <LL_LPUART_SetPrescaler>:
 800a5a8:	b580      	push	{r7, lr}
 800a5aa:	b082      	sub	sp, #8
 800a5ac:	af00      	add	r7, sp, #0
 800a5ae:	6078      	str	r0, [r7, #4]
 800a5b0:	6039      	str	r1, [r7, #0]
 800a5b2:	687b      	ldr	r3, [r7, #4]
 800a5b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a5b6:	220f      	movs	r2, #15
 800a5b8:	4393      	bics	r3, r2
 800a5ba:	683a      	ldr	r2, [r7, #0]
 800a5bc:	b292      	uxth	r2, r2
 800a5be:	431a      	orrs	r2, r3
 800a5c0:	687b      	ldr	r3, [r7, #4]
 800a5c2:	62da      	str	r2, [r3, #44]	; 0x2c
 800a5c4:	46c0      	nop			; (mov r8, r8)
 800a5c6:	46bd      	mov	sp, r7
 800a5c8:	b002      	add	sp, #8
 800a5ca:	bd80      	pop	{r7, pc}

0800a5cc <LL_LPUART_SetStopBitsLength>:
 800a5cc:	b580      	push	{r7, lr}
 800a5ce:	b082      	sub	sp, #8
 800a5d0:	af00      	add	r7, sp, #0
 800a5d2:	6078      	str	r0, [r7, #4]
 800a5d4:	6039      	str	r1, [r7, #0]
 800a5d6:	687b      	ldr	r3, [r7, #4]
 800a5d8:	685b      	ldr	r3, [r3, #4]
 800a5da:	4a05      	ldr	r2, [pc, #20]	; (800a5f0 <LL_LPUART_SetStopBitsLength+0x24>)
 800a5dc:	401a      	ands	r2, r3
 800a5de:	683b      	ldr	r3, [r7, #0]
 800a5e0:	431a      	orrs	r2, r3
 800a5e2:	687b      	ldr	r3, [r7, #4]
 800a5e4:	605a      	str	r2, [r3, #4]
 800a5e6:	46c0      	nop			; (mov r8, r8)
 800a5e8:	46bd      	mov	sp, r7
 800a5ea:	b002      	add	sp, #8
 800a5ec:	bd80      	pop	{r7, pc}
 800a5ee:	46c0      	nop			; (mov r8, r8)
 800a5f0:	ffffcfff 	.word	0xffffcfff

0800a5f4 <LL_LPUART_SetHWFlowCtrl>:
 800a5f4:	b580      	push	{r7, lr}
 800a5f6:	b082      	sub	sp, #8
 800a5f8:	af00      	add	r7, sp, #0
 800a5fa:	6078      	str	r0, [r7, #4]
 800a5fc:	6039      	str	r1, [r7, #0]
 800a5fe:	687b      	ldr	r3, [r7, #4]
 800a600:	689b      	ldr	r3, [r3, #8]
 800a602:	4a05      	ldr	r2, [pc, #20]	; (800a618 <LL_LPUART_SetHWFlowCtrl+0x24>)
 800a604:	401a      	ands	r2, r3
 800a606:	683b      	ldr	r3, [r7, #0]
 800a608:	431a      	orrs	r2, r3
 800a60a:	687b      	ldr	r3, [r7, #4]
 800a60c:	609a      	str	r2, [r3, #8]
 800a60e:	46c0      	nop			; (mov r8, r8)
 800a610:	46bd      	mov	sp, r7
 800a612:	b002      	add	sp, #8
 800a614:	bd80      	pop	{r7, pc}
 800a616:	46c0      	nop			; (mov r8, r8)
 800a618:	fffffcff 	.word	0xfffffcff

0800a61c <LL_LPUART_SetBaudRate>:
 800a61c:	b5b0      	push	{r4, r5, r7, lr}
 800a61e:	b08c      	sub	sp, #48	; 0x30
 800a620:	af00      	add	r7, sp, #0
 800a622:	62f8      	str	r0, [r7, #44]	; 0x2c
 800a624:	62b9      	str	r1, [r7, #40]	; 0x28
 800a626:	627a      	str	r2, [r7, #36]	; 0x24
 800a628:	623b      	str	r3, [r7, #32]
 800a62a:	6a3b      	ldr	r3, [r7, #32]
 800a62c:	2b00      	cmp	r3, #0
 800a62e:	d030      	beq.n	800a692 <LL_LPUART_SetBaudRate+0x76>
 800a630:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800a632:	61bb      	str	r3, [r7, #24]
 800a634:	2300      	movs	r3, #0
 800a636:	61fb      	str	r3, [r7, #28]
 800a638:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a63a:	b29b      	uxth	r3, r3
 800a63c:	001a      	movs	r2, r3
 800a63e:	4b17      	ldr	r3, [pc, #92]	; (800a69c <LL_LPUART_SetBaudRate+0x80>)
 800a640:	0052      	lsls	r2, r2, #1
 800a642:	5ad3      	ldrh	r3, [r2, r3]
 800a644:	613b      	str	r3, [r7, #16]
 800a646:	2300      	movs	r3, #0
 800a648:	617b      	str	r3, [r7, #20]
 800a64a:	693a      	ldr	r2, [r7, #16]
 800a64c:	697b      	ldr	r3, [r7, #20]
 800a64e:	69b8      	ldr	r0, [r7, #24]
 800a650:	69f9      	ldr	r1, [r7, #28]
 800a652:	f7fb fe59 	bl	8006308 <__aeabi_uldivmod>
 800a656:	0002      	movs	r2, r0
 800a658:	000b      	movs	r3, r1
 800a65a:	0e11      	lsrs	r1, r2, #24
 800a65c:	021d      	lsls	r5, r3, #8
 800a65e:	430d      	orrs	r5, r1
 800a660:	0214      	lsls	r4, r2, #8
 800a662:	6a3b      	ldr	r3, [r7, #32]
 800a664:	085b      	lsrs	r3, r3, #1
 800a666:	60bb      	str	r3, [r7, #8]
 800a668:	2300      	movs	r3, #0
 800a66a:	60fb      	str	r3, [r7, #12]
 800a66c:	68b8      	ldr	r0, [r7, #8]
 800a66e:	68f9      	ldr	r1, [r7, #12]
 800a670:	1900      	adds	r0, r0, r4
 800a672:	4169      	adcs	r1, r5
 800a674:	6a3b      	ldr	r3, [r7, #32]
 800a676:	603b      	str	r3, [r7, #0]
 800a678:	2300      	movs	r3, #0
 800a67a:	607b      	str	r3, [r7, #4]
 800a67c:	683a      	ldr	r2, [r7, #0]
 800a67e:	687b      	ldr	r3, [r7, #4]
 800a680:	f7fb fe42 	bl	8006308 <__aeabi_uldivmod>
 800a684:	0002      	movs	r2, r0
 800a686:	000b      	movs	r3, r1
 800a688:	0013      	movs	r3, r2
 800a68a:	031b      	lsls	r3, r3, #12
 800a68c:	0b1a      	lsrs	r2, r3, #12
 800a68e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800a690:	60da      	str	r2, [r3, #12]
 800a692:	46c0      	nop			; (mov r8, r8)
 800a694:	46bd      	mov	sp, r7
 800a696:	b00c      	add	sp, #48	; 0x30
 800a698:	bdb0      	pop	{r4, r5, r7, pc}
 800a69a:	46c0      	nop			; (mov r8, r8)
 800a69c:	08019970 	.word	0x08019970

0800a6a0 <LL_LPUART_Init>:
 800a6a0:	b580      	push	{r7, lr}
 800a6a2:	b084      	sub	sp, #16
 800a6a4:	af00      	add	r7, sp, #0
 800a6a6:	6078      	str	r0, [r7, #4]
 800a6a8:	6039      	str	r1, [r7, #0]
 800a6aa:	230f      	movs	r3, #15
 800a6ac:	18fb      	adds	r3, r7, r3
 800a6ae:	2201      	movs	r2, #1
 800a6b0:	701a      	strb	r2, [r3, #0]
 800a6b2:	2300      	movs	r3, #0
 800a6b4:	60bb      	str	r3, [r7, #8]
 800a6b6:	687b      	ldr	r3, [r7, #4]
 800a6b8:	0018      	movs	r0, r3
 800a6ba:	f7ff ff64 	bl	800a586 <LL_LPUART_IsEnabled>
 800a6be:	1e03      	subs	r3, r0, #0
 800a6c0:	d14d      	bne.n	800a75e <LL_LPUART_Init+0xbe>
 800a6c2:	687b      	ldr	r3, [r7, #4]
 800a6c4:	681b      	ldr	r3, [r3, #0]
 800a6c6:	4a29      	ldr	r2, [pc, #164]	; (800a76c <LL_LPUART_Init+0xcc>)
 800a6c8:	401a      	ands	r2, r3
 800a6ca:	683b      	ldr	r3, [r7, #0]
 800a6cc:	6899      	ldr	r1, [r3, #8]
 800a6ce:	683b      	ldr	r3, [r7, #0]
 800a6d0:	691b      	ldr	r3, [r3, #16]
 800a6d2:	4319      	orrs	r1, r3
 800a6d4:	683b      	ldr	r3, [r7, #0]
 800a6d6:	695b      	ldr	r3, [r3, #20]
 800a6d8:	430b      	orrs	r3, r1
 800a6da:	431a      	orrs	r2, r3
 800a6dc:	687b      	ldr	r3, [r7, #4]
 800a6de:	601a      	str	r2, [r3, #0]
 800a6e0:	683b      	ldr	r3, [r7, #0]
 800a6e2:	68da      	ldr	r2, [r3, #12]
 800a6e4:	687b      	ldr	r3, [r7, #4]
 800a6e6:	0011      	movs	r1, r2
 800a6e8:	0018      	movs	r0, r3
 800a6ea:	f7ff ff6f 	bl	800a5cc <LL_LPUART_SetStopBitsLength>
 800a6ee:	683b      	ldr	r3, [r7, #0]
 800a6f0:	699a      	ldr	r2, [r3, #24]
 800a6f2:	687b      	ldr	r3, [r7, #4]
 800a6f4:	0011      	movs	r1, r2
 800a6f6:	0018      	movs	r0, r3
 800a6f8:	f7ff ff7c 	bl	800a5f4 <LL_LPUART_SetHWFlowCtrl>
 800a6fc:	687b      	ldr	r3, [r7, #4]
 800a6fe:	4a1c      	ldr	r2, [pc, #112]	; (800a770 <LL_LPUART_Init+0xd0>)
 800a700:	4293      	cmp	r3, r2
 800a702:	d107      	bne.n	800a714 <LL_LPUART_Init+0x74>
 800a704:	23c0      	movs	r3, #192	; 0xc0
 800a706:	011b      	lsls	r3, r3, #4
 800a708:	0018      	movs	r0, r3
 800a70a:	f000 f8bf 	bl	800a88c <LL_RCC_GetLPUARTClockFreq>
 800a70e:	0003      	movs	r3, r0
 800a710:	60bb      	str	r3, [r7, #8]
 800a712:	e00a      	b.n	800a72a <LL_LPUART_Init+0x8a>
 800a714:	687b      	ldr	r3, [r7, #4]
 800a716:	4a17      	ldr	r2, [pc, #92]	; (800a774 <LL_LPUART_Init+0xd4>)
 800a718:	4293      	cmp	r3, r2
 800a71a:	d106      	bne.n	800a72a <LL_LPUART_Init+0x8a>
 800a71c:	23c0      	movs	r3, #192	; 0xc0
 800a71e:	009b      	lsls	r3, r3, #2
 800a720:	0018      	movs	r0, r3
 800a722:	f000 f8b3 	bl	800a88c <LL_RCC_GetLPUARTClockFreq>
 800a726:	0003      	movs	r3, r0
 800a728:	60bb      	str	r3, [r7, #8]
 800a72a:	68bb      	ldr	r3, [r7, #8]
 800a72c:	2b00      	cmp	r3, #0
 800a72e:	d00f      	beq.n	800a750 <LL_LPUART_Init+0xb0>
 800a730:	683b      	ldr	r3, [r7, #0]
 800a732:	685b      	ldr	r3, [r3, #4]
 800a734:	2b00      	cmp	r3, #0
 800a736:	d00b      	beq.n	800a750 <LL_LPUART_Init+0xb0>
 800a738:	230f      	movs	r3, #15
 800a73a:	18fb      	adds	r3, r7, r3
 800a73c:	2200      	movs	r2, #0
 800a73e:	701a      	strb	r2, [r3, #0]
 800a740:	683b      	ldr	r3, [r7, #0]
 800a742:	681a      	ldr	r2, [r3, #0]
 800a744:	683b      	ldr	r3, [r7, #0]
 800a746:	685b      	ldr	r3, [r3, #4]
 800a748:	68b9      	ldr	r1, [r7, #8]
 800a74a:	6878      	ldr	r0, [r7, #4]
 800a74c:	f7ff ff66 	bl	800a61c <LL_LPUART_SetBaudRate>
 800a750:	683b      	ldr	r3, [r7, #0]
 800a752:	681a      	ldr	r2, [r3, #0]
 800a754:	687b      	ldr	r3, [r7, #4]
 800a756:	0011      	movs	r1, r2
 800a758:	0018      	movs	r0, r3
 800a75a:	f7ff ff25 	bl	800a5a8 <LL_LPUART_SetPrescaler>
 800a75e:	230f      	movs	r3, #15
 800a760:	18fb      	adds	r3, r7, r3
 800a762:	781b      	ldrb	r3, [r3, #0]
 800a764:	0018      	movs	r0, r3
 800a766:	46bd      	mov	sp, r7
 800a768:	b004      	add	sp, #16
 800a76a:	bd80      	pop	{r7, pc}
 800a76c:	efffe9f3 	.word	0xefffe9f3
 800a770:	40008000 	.word	0x40008000
 800a774:	40008400 	.word	0x40008400

0800a778 <LL_RCC_HSI_IsReady>:
 800a778:	b580      	push	{r7, lr}
 800a77a:	af00      	add	r7, sp, #0
 800a77c:	4b07      	ldr	r3, [pc, #28]	; (800a79c <LL_RCC_HSI_IsReady+0x24>)
 800a77e:	681a      	ldr	r2, [r3, #0]
 800a780:	2380      	movs	r3, #128	; 0x80
 800a782:	00db      	lsls	r3, r3, #3
 800a784:	401a      	ands	r2, r3
 800a786:	2380      	movs	r3, #128	; 0x80
 800a788:	00db      	lsls	r3, r3, #3
 800a78a:	429a      	cmp	r2, r3
 800a78c:	d101      	bne.n	800a792 <LL_RCC_HSI_IsReady+0x1a>
 800a78e:	2301      	movs	r3, #1
 800a790:	e000      	b.n	800a794 <LL_RCC_HSI_IsReady+0x1c>
 800a792:	2300      	movs	r3, #0
 800a794:	0018      	movs	r0, r3
 800a796:	46bd      	mov	sp, r7
 800a798:	bd80      	pop	{r7, pc}
 800a79a:	46c0      	nop			; (mov r8, r8)
 800a79c:	40021000 	.word	0x40021000

0800a7a0 <LL_RCC_LSE_IsReady>:
 800a7a0:	b580      	push	{r7, lr}
 800a7a2:	af00      	add	r7, sp, #0
 800a7a4:	4b05      	ldr	r3, [pc, #20]	; (800a7bc <LL_RCC_LSE_IsReady+0x1c>)
 800a7a6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a7a8:	2202      	movs	r2, #2
 800a7aa:	4013      	ands	r3, r2
 800a7ac:	2b02      	cmp	r3, #2
 800a7ae:	d101      	bne.n	800a7b4 <LL_RCC_LSE_IsReady+0x14>
 800a7b0:	2301      	movs	r3, #1
 800a7b2:	e000      	b.n	800a7b6 <LL_RCC_LSE_IsReady+0x16>
 800a7b4:	2300      	movs	r3, #0
 800a7b6:	0018      	movs	r0, r3
 800a7b8:	46bd      	mov	sp, r7
 800a7ba:	bd80      	pop	{r7, pc}
 800a7bc:	40021000 	.word	0x40021000

0800a7c0 <LL_RCC_GetSysClkSource>:
 800a7c0:	b580      	push	{r7, lr}
 800a7c2:	af00      	add	r7, sp, #0
 800a7c4:	4b03      	ldr	r3, [pc, #12]	; (800a7d4 <LL_RCC_GetSysClkSource+0x14>)
 800a7c6:	689b      	ldr	r3, [r3, #8]
 800a7c8:	2238      	movs	r2, #56	; 0x38
 800a7ca:	4013      	ands	r3, r2
 800a7cc:	0018      	movs	r0, r3
 800a7ce:	46bd      	mov	sp, r7
 800a7d0:	bd80      	pop	{r7, pc}
 800a7d2:	46c0      	nop			; (mov r8, r8)
 800a7d4:	40021000 	.word	0x40021000

0800a7d8 <LL_RCC_GetAHBPrescaler>:
 800a7d8:	b580      	push	{r7, lr}
 800a7da:	af00      	add	r7, sp, #0
 800a7dc:	4b03      	ldr	r3, [pc, #12]	; (800a7ec <LL_RCC_GetAHBPrescaler+0x14>)
 800a7de:	689a      	ldr	r2, [r3, #8]
 800a7e0:	23f0      	movs	r3, #240	; 0xf0
 800a7e2:	011b      	lsls	r3, r3, #4
 800a7e4:	4013      	ands	r3, r2
 800a7e6:	0018      	movs	r0, r3
 800a7e8:	46bd      	mov	sp, r7
 800a7ea:	bd80      	pop	{r7, pc}
 800a7ec:	40021000 	.word	0x40021000

0800a7f0 <LL_RCC_GetAPB1Prescaler>:
 800a7f0:	b580      	push	{r7, lr}
 800a7f2:	af00      	add	r7, sp, #0
 800a7f4:	4b03      	ldr	r3, [pc, #12]	; (800a804 <LL_RCC_GetAPB1Prescaler+0x14>)
 800a7f6:	689a      	ldr	r2, [r3, #8]
 800a7f8:	23e0      	movs	r3, #224	; 0xe0
 800a7fa:	01db      	lsls	r3, r3, #7
 800a7fc:	4013      	ands	r3, r2
 800a7fe:	0018      	movs	r0, r3
 800a800:	46bd      	mov	sp, r7
 800a802:	bd80      	pop	{r7, pc}
 800a804:	40021000 	.word	0x40021000

0800a808 <LL_RCC_GetLPUARTClockSource>:
 800a808:	b580      	push	{r7, lr}
 800a80a:	b082      	sub	sp, #8
 800a80c:	af00      	add	r7, sp, #0
 800a80e:	6078      	str	r0, [r7, #4]
 800a810:	4b05      	ldr	r3, [pc, #20]	; (800a828 <LL_RCC_GetLPUARTClockSource+0x20>)
 800a812:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800a814:	687a      	ldr	r2, [r7, #4]
 800a816:	401a      	ands	r2, r3
 800a818:	687b      	ldr	r3, [r7, #4]
 800a81a:	041b      	lsls	r3, r3, #16
 800a81c:	4313      	orrs	r3, r2
 800a81e:	0018      	movs	r0, r3
 800a820:	46bd      	mov	sp, r7
 800a822:	b002      	add	sp, #8
 800a824:	bd80      	pop	{r7, pc}
 800a826:	46c0      	nop			; (mov r8, r8)
 800a828:	40021000 	.word	0x40021000

0800a82c <LL_RCC_PLL_GetN>:
 800a82c:	b580      	push	{r7, lr}
 800a82e:	af00      	add	r7, sp, #0
 800a830:	4b03      	ldr	r3, [pc, #12]	; (800a840 <LL_RCC_PLL_GetN+0x14>)
 800a832:	68db      	ldr	r3, [r3, #12]
 800a834:	0a1b      	lsrs	r3, r3, #8
 800a836:	227f      	movs	r2, #127	; 0x7f
 800a838:	4013      	ands	r3, r2
 800a83a:	0018      	movs	r0, r3
 800a83c:	46bd      	mov	sp, r7
 800a83e:	bd80      	pop	{r7, pc}
 800a840:	40021000 	.word	0x40021000

0800a844 <LL_RCC_PLL_GetR>:
 800a844:	b580      	push	{r7, lr}
 800a846:	af00      	add	r7, sp, #0
 800a848:	4b03      	ldr	r3, [pc, #12]	; (800a858 <LL_RCC_PLL_GetR+0x14>)
 800a84a:	68db      	ldr	r3, [r3, #12]
 800a84c:	0f5b      	lsrs	r3, r3, #29
 800a84e:	075b      	lsls	r3, r3, #29
 800a850:	0018      	movs	r0, r3
 800a852:	46bd      	mov	sp, r7
 800a854:	bd80      	pop	{r7, pc}
 800a856:	46c0      	nop			; (mov r8, r8)
 800a858:	40021000 	.word	0x40021000

0800a85c <LL_RCC_PLL_GetMainSource>:
 800a85c:	b580      	push	{r7, lr}
 800a85e:	af00      	add	r7, sp, #0
 800a860:	4b03      	ldr	r3, [pc, #12]	; (800a870 <LL_RCC_PLL_GetMainSource+0x14>)
 800a862:	68db      	ldr	r3, [r3, #12]
 800a864:	2203      	movs	r2, #3
 800a866:	4013      	ands	r3, r2
 800a868:	0018      	movs	r0, r3
 800a86a:	46bd      	mov	sp, r7
 800a86c:	bd80      	pop	{r7, pc}
 800a86e:	46c0      	nop			; (mov r8, r8)
 800a870:	40021000 	.word	0x40021000

0800a874 <LL_RCC_PLL_GetDivider>:
 800a874:	b580      	push	{r7, lr}
 800a876:	af00      	add	r7, sp, #0
 800a878:	4b03      	ldr	r3, [pc, #12]	; (800a888 <LL_RCC_PLL_GetDivider+0x14>)
 800a87a:	68db      	ldr	r3, [r3, #12]
 800a87c:	2270      	movs	r2, #112	; 0x70
 800a87e:	4013      	ands	r3, r2
 800a880:	0018      	movs	r0, r3
 800a882:	46bd      	mov	sp, r7
 800a884:	bd80      	pop	{r7, pc}
 800a886:	46c0      	nop			; (mov r8, r8)
 800a888:	40021000 	.word	0x40021000

0800a88c <LL_RCC_GetLPUARTClockFreq>:
 800a88c:	b580      	push	{r7, lr}
 800a88e:	b084      	sub	sp, #16
 800a890:	af00      	add	r7, sp, #0
 800a892:	6078      	str	r0, [r7, #4]
 800a894:	2300      	movs	r3, #0
 800a896:	60fb      	str	r3, [r7, #12]
 800a898:	687a      	ldr	r2, [r7, #4]
 800a89a:	23c0      	movs	r3, #192	; 0xc0
 800a89c:	011b      	lsls	r3, r3, #4
 800a89e:	429a      	cmp	r2, r3
 800a8a0:	d134      	bne.n	800a90c <LL_RCC_GetLPUARTClockFreq+0x80>
 800a8a2:	687b      	ldr	r3, [r7, #4]
 800a8a4:	0018      	movs	r0, r3
 800a8a6:	f7ff ffaf 	bl	800a808 <LL_RCC_GetLPUARTClockSource>
 800a8aa:	0003      	movs	r3, r0
 800a8ac:	4a3a      	ldr	r2, [pc, #232]	; (800a998 <LL_RCC_GetLPUARTClockFreq+0x10c>)
 800a8ae:	4293      	cmp	r3, r2
 800a8b0:	d016      	beq.n	800a8e0 <LL_RCC_GetLPUARTClockFreq+0x54>
 800a8b2:	4a39      	ldr	r2, [pc, #228]	; (800a998 <LL_RCC_GetLPUARTClockFreq+0x10c>)
 800a8b4:	4293      	cmp	r3, r2
 800a8b6:	d81c      	bhi.n	800a8f2 <LL_RCC_GetLPUARTClockFreq+0x66>
 800a8b8:	4a38      	ldr	r2, [pc, #224]	; (800a99c <LL_RCC_GetLPUARTClockFreq+0x110>)
 800a8ba:	4293      	cmp	r3, r2
 800a8bc:	d003      	beq.n	800a8c6 <LL_RCC_GetLPUARTClockFreq+0x3a>
 800a8be:	4a38      	ldr	r2, [pc, #224]	; (800a9a0 <LL_RCC_GetLPUARTClockFreq+0x114>)
 800a8c0:	4293      	cmp	r3, r2
 800a8c2:	d005      	beq.n	800a8d0 <LL_RCC_GetLPUARTClockFreq+0x44>
 800a8c4:	e015      	b.n	800a8f2 <LL_RCC_GetLPUARTClockFreq+0x66>
 800a8c6:	f000 f875 	bl	800a9b4 <RCC_GetSystemClockFreq>
 800a8ca:	0003      	movs	r3, r0
 800a8cc:	60fb      	str	r3, [r7, #12]
 800a8ce:	e05e      	b.n	800a98e <LL_RCC_GetLPUARTClockFreq+0x102>
 800a8d0:	f7ff ff52 	bl	800a778 <LL_RCC_HSI_IsReady>
 800a8d4:	0003      	movs	r3, r0
 800a8d6:	2b01      	cmp	r3, #1
 800a8d8:	d152      	bne.n	800a980 <LL_RCC_GetLPUARTClockFreq+0xf4>
 800a8da:	4b32      	ldr	r3, [pc, #200]	; (800a9a4 <LL_RCC_GetLPUARTClockFreq+0x118>)
 800a8dc:	60fb      	str	r3, [r7, #12]
 800a8de:	e04f      	b.n	800a980 <LL_RCC_GetLPUARTClockFreq+0xf4>
 800a8e0:	f7ff ff5e 	bl	800a7a0 <LL_RCC_LSE_IsReady>
 800a8e4:	0003      	movs	r3, r0
 800a8e6:	2b01      	cmp	r3, #1
 800a8e8:	d14c      	bne.n	800a984 <LL_RCC_GetLPUARTClockFreq+0xf8>
 800a8ea:	2380      	movs	r3, #128	; 0x80
 800a8ec:	021b      	lsls	r3, r3, #8
 800a8ee:	60fb      	str	r3, [r7, #12]
 800a8f0:	e048      	b.n	800a984 <LL_RCC_GetLPUARTClockFreq+0xf8>
 800a8f2:	f000 f85f 	bl	800a9b4 <RCC_GetSystemClockFreq>
 800a8f6:	0003      	movs	r3, r0
 800a8f8:	0018      	movs	r0, r3
 800a8fa:	f000 f889 	bl	800aa10 <RCC_GetHCLKClockFreq>
 800a8fe:	0003      	movs	r3, r0
 800a900:	0018      	movs	r0, r3
 800a902:	f000 f89d 	bl	800aa40 <RCC_GetPCLK1ClockFreq>
 800a906:	0003      	movs	r3, r0
 800a908:	60fb      	str	r3, [r7, #12]
 800a90a:	e040      	b.n	800a98e <LL_RCC_GetLPUARTClockFreq+0x102>
 800a90c:	687a      	ldr	r2, [r7, #4]
 800a90e:	23c0      	movs	r3, #192	; 0xc0
 800a910:	009b      	lsls	r3, r3, #2
 800a912:	429a      	cmp	r2, r3
 800a914:	d13b      	bne.n	800a98e <LL_RCC_GetLPUARTClockFreq+0x102>
 800a916:	687b      	ldr	r3, [r7, #4]
 800a918:	0018      	movs	r0, r3
 800a91a:	f7ff ff75 	bl	800a808 <LL_RCC_GetLPUARTClockSource>
 800a91e:	0003      	movs	r3, r0
 800a920:	4a21      	ldr	r2, [pc, #132]	; (800a9a8 <LL_RCC_GetLPUARTClockFreq+0x11c>)
 800a922:	4293      	cmp	r3, r2
 800a924:	d016      	beq.n	800a954 <LL_RCC_GetLPUARTClockFreq+0xc8>
 800a926:	4a20      	ldr	r2, [pc, #128]	; (800a9a8 <LL_RCC_GetLPUARTClockFreq+0x11c>)
 800a928:	4293      	cmp	r3, r2
 800a92a:	d81c      	bhi.n	800a966 <LL_RCC_GetLPUARTClockFreq+0xda>
 800a92c:	4a1f      	ldr	r2, [pc, #124]	; (800a9ac <LL_RCC_GetLPUARTClockFreq+0x120>)
 800a92e:	4293      	cmp	r3, r2
 800a930:	d003      	beq.n	800a93a <LL_RCC_GetLPUARTClockFreq+0xae>
 800a932:	4a1f      	ldr	r2, [pc, #124]	; (800a9b0 <LL_RCC_GetLPUARTClockFreq+0x124>)
 800a934:	4293      	cmp	r3, r2
 800a936:	d005      	beq.n	800a944 <LL_RCC_GetLPUARTClockFreq+0xb8>
 800a938:	e015      	b.n	800a966 <LL_RCC_GetLPUARTClockFreq+0xda>
 800a93a:	f000 f83b 	bl	800a9b4 <RCC_GetSystemClockFreq>
 800a93e:	0003      	movs	r3, r0
 800a940:	60fb      	str	r3, [r7, #12]
 800a942:	e024      	b.n	800a98e <LL_RCC_GetLPUARTClockFreq+0x102>
 800a944:	f7ff ff18 	bl	800a778 <LL_RCC_HSI_IsReady>
 800a948:	0003      	movs	r3, r0
 800a94a:	2b01      	cmp	r3, #1
 800a94c:	d11c      	bne.n	800a988 <LL_RCC_GetLPUARTClockFreq+0xfc>
 800a94e:	4b15      	ldr	r3, [pc, #84]	; (800a9a4 <LL_RCC_GetLPUARTClockFreq+0x118>)
 800a950:	60fb      	str	r3, [r7, #12]
 800a952:	e019      	b.n	800a988 <LL_RCC_GetLPUARTClockFreq+0xfc>
 800a954:	f7ff ff24 	bl	800a7a0 <LL_RCC_LSE_IsReady>
 800a958:	0003      	movs	r3, r0
 800a95a:	2b01      	cmp	r3, #1
 800a95c:	d116      	bne.n	800a98c <LL_RCC_GetLPUARTClockFreq+0x100>
 800a95e:	2380      	movs	r3, #128	; 0x80
 800a960:	021b      	lsls	r3, r3, #8
 800a962:	60fb      	str	r3, [r7, #12]
 800a964:	e012      	b.n	800a98c <LL_RCC_GetLPUARTClockFreq+0x100>
 800a966:	f000 f825 	bl	800a9b4 <RCC_GetSystemClockFreq>
 800a96a:	0003      	movs	r3, r0
 800a96c:	0018      	movs	r0, r3
 800a96e:	f000 f84f 	bl	800aa10 <RCC_GetHCLKClockFreq>
 800a972:	0003      	movs	r3, r0
 800a974:	0018      	movs	r0, r3
 800a976:	f000 f863 	bl	800aa40 <RCC_GetPCLK1ClockFreq>
 800a97a:	0003      	movs	r3, r0
 800a97c:	60fb      	str	r3, [r7, #12]
 800a97e:	e006      	b.n	800a98e <LL_RCC_GetLPUARTClockFreq+0x102>
 800a980:	46c0      	nop			; (mov r8, r8)
 800a982:	e004      	b.n	800a98e <LL_RCC_GetLPUARTClockFreq+0x102>
 800a984:	46c0      	nop			; (mov r8, r8)
 800a986:	e002      	b.n	800a98e <LL_RCC_GetLPUARTClockFreq+0x102>
 800a988:	46c0      	nop			; (mov r8, r8)
 800a98a:	e000      	b.n	800a98e <LL_RCC_GetLPUARTClockFreq+0x102>
 800a98c:	46c0      	nop			; (mov r8, r8)
 800a98e:	68fb      	ldr	r3, [r7, #12]
 800a990:	0018      	movs	r0, r3
 800a992:	46bd      	mov	sp, r7
 800a994:	b004      	add	sp, #16
 800a996:	bd80      	pop	{r7, pc}
 800a998:	0c000c00 	.word	0x0c000c00
 800a99c:	0c000400 	.word	0x0c000400
 800a9a0:	0c000800 	.word	0x0c000800
 800a9a4:	00f42400 	.word	0x00f42400
 800a9a8:	03000300 	.word	0x03000300
 800a9ac:	03000100 	.word	0x03000100
 800a9b0:	03000200 	.word	0x03000200

0800a9b4 <RCC_GetSystemClockFreq>:
 800a9b4:	b580      	push	{r7, lr}
 800a9b6:	b082      	sub	sp, #8
 800a9b8:	af00      	add	r7, sp, #0
 800a9ba:	f7ff ff01 	bl	800a7c0 <LL_RCC_GetSysClkSource>
 800a9be:	0003      	movs	r3, r0
 800a9c0:	2b08      	cmp	r3, #8
 800a9c2:	d002      	beq.n	800a9ca <RCC_GetSystemClockFreq+0x16>
 800a9c4:	2b10      	cmp	r3, #16
 800a9c6:	d003      	beq.n	800a9d0 <RCC_GetSystemClockFreq+0x1c>
 800a9c8:	e007      	b.n	800a9da <RCC_GetSystemClockFreq+0x26>
 800a9ca:	4b0e      	ldr	r3, [pc, #56]	; (800aa04 <RCC_GetSystemClockFreq+0x50>)
 800a9cc:	607b      	str	r3, [r7, #4]
 800a9ce:	e014      	b.n	800a9fa <RCC_GetSystemClockFreq+0x46>
 800a9d0:	f000 f84c 	bl	800aa6c <RCC_PLL_GetFreqDomain_SYS>
 800a9d4:	0003      	movs	r3, r0
 800a9d6:	607b      	str	r3, [r7, #4]
 800a9d8:	e00f      	b.n	800a9fa <RCC_GetSystemClockFreq+0x46>
 800a9da:	4b0b      	ldr	r3, [pc, #44]	; (800aa08 <RCC_GetSystemClockFreq+0x54>)
 800a9dc:	681b      	ldr	r3, [r3, #0]
 800a9de:	0adb      	lsrs	r3, r3, #11
 800a9e0:	2207      	movs	r2, #7
 800a9e2:	4013      	ands	r3, r2
 800a9e4:	2201      	movs	r2, #1
 800a9e6:	409a      	lsls	r2, r3
 800a9e8:	0013      	movs	r3, r2
 800a9ea:	603b      	str	r3, [r7, #0]
 800a9ec:	6839      	ldr	r1, [r7, #0]
 800a9ee:	4807      	ldr	r0, [pc, #28]	; (800aa0c <RCC_GetSystemClockFreq+0x58>)
 800a9f0:	f7fb fbfe 	bl	80061f0 <__udivsi3>
 800a9f4:	0003      	movs	r3, r0
 800a9f6:	607b      	str	r3, [r7, #4]
 800a9f8:	46c0      	nop			; (mov r8, r8)
 800a9fa:	687b      	ldr	r3, [r7, #4]
 800a9fc:	0018      	movs	r0, r3
 800a9fe:	46bd      	mov	sp, r7
 800aa00:	b002      	add	sp, #8
 800aa02:	bd80      	pop	{r7, pc}
 800aa04:	007a1200 	.word	0x007a1200
 800aa08:	40021000 	.word	0x40021000
 800aa0c:	00f42400 	.word	0x00f42400

0800aa10 <RCC_GetHCLKClockFreq>:
 800aa10:	b580      	push	{r7, lr}
 800aa12:	b082      	sub	sp, #8
 800aa14:	af00      	add	r7, sp, #0
 800aa16:	6078      	str	r0, [r7, #4]
 800aa18:	f7ff fede 	bl	800a7d8 <LL_RCC_GetAHBPrescaler>
 800aa1c:	0003      	movs	r3, r0
 800aa1e:	0a1b      	lsrs	r3, r3, #8
 800aa20:	220f      	movs	r2, #15
 800aa22:	401a      	ands	r2, r3
 800aa24:	4b05      	ldr	r3, [pc, #20]	; (800aa3c <RCC_GetHCLKClockFreq+0x2c>)
 800aa26:	0092      	lsls	r2, r2, #2
 800aa28:	58d3      	ldr	r3, [r2, r3]
 800aa2a:	221f      	movs	r2, #31
 800aa2c:	4013      	ands	r3, r2
 800aa2e:	687a      	ldr	r2, [r7, #4]
 800aa30:	40da      	lsrs	r2, r3
 800aa32:	0013      	movs	r3, r2
 800aa34:	0018      	movs	r0, r3
 800aa36:	46bd      	mov	sp, r7
 800aa38:	b002      	add	sp, #8
 800aa3a:	bd80      	pop	{r7, pc}
 800aa3c:	08019908 	.word	0x08019908

0800aa40 <RCC_GetPCLK1ClockFreq>:
 800aa40:	b580      	push	{r7, lr}
 800aa42:	b082      	sub	sp, #8
 800aa44:	af00      	add	r7, sp, #0
 800aa46:	6078      	str	r0, [r7, #4]
 800aa48:	f7ff fed2 	bl	800a7f0 <LL_RCC_GetAPB1Prescaler>
 800aa4c:	0003      	movs	r3, r0
 800aa4e:	0b1a      	lsrs	r2, r3, #12
 800aa50:	4b05      	ldr	r3, [pc, #20]	; (800aa68 <RCC_GetPCLK1ClockFreq+0x28>)
 800aa52:	0092      	lsls	r2, r2, #2
 800aa54:	58d3      	ldr	r3, [r2, r3]
 800aa56:	221f      	movs	r2, #31
 800aa58:	4013      	ands	r3, r2
 800aa5a:	687a      	ldr	r2, [r7, #4]
 800aa5c:	40da      	lsrs	r2, r3
 800aa5e:	0013      	movs	r3, r2
 800aa60:	0018      	movs	r0, r3
 800aa62:	46bd      	mov	sp, r7
 800aa64:	b002      	add	sp, #8
 800aa66:	bd80      	pop	{r7, pc}
 800aa68:	08019948 	.word	0x08019948

0800aa6c <RCC_PLL_GetFreqDomain_SYS>:
 800aa6c:	b590      	push	{r4, r7, lr}
 800aa6e:	b083      	sub	sp, #12
 800aa70:	af00      	add	r7, sp, #0
 800aa72:	f7ff fef3 	bl	800a85c <LL_RCC_PLL_GetMainSource>
 800aa76:	0003      	movs	r3, r0
 800aa78:	603b      	str	r3, [r7, #0]
 800aa7a:	683b      	ldr	r3, [r7, #0]
 800aa7c:	2b02      	cmp	r3, #2
 800aa7e:	d003      	beq.n	800aa88 <RCC_PLL_GetFreqDomain_SYS+0x1c>
 800aa80:	683b      	ldr	r3, [r7, #0]
 800aa82:	2b03      	cmp	r3, #3
 800aa84:	d003      	beq.n	800aa8e <RCC_PLL_GetFreqDomain_SYS+0x22>
 800aa86:	e005      	b.n	800aa94 <RCC_PLL_GetFreqDomain_SYS+0x28>
 800aa88:	4b13      	ldr	r3, [pc, #76]	; (800aad8 <RCC_PLL_GetFreqDomain_SYS+0x6c>)
 800aa8a:	607b      	str	r3, [r7, #4]
 800aa8c:	e005      	b.n	800aa9a <RCC_PLL_GetFreqDomain_SYS+0x2e>
 800aa8e:	4b13      	ldr	r3, [pc, #76]	; (800aadc <RCC_PLL_GetFreqDomain_SYS+0x70>)
 800aa90:	607b      	str	r3, [r7, #4]
 800aa92:	e002      	b.n	800aa9a <RCC_PLL_GetFreqDomain_SYS+0x2e>
 800aa94:	4b10      	ldr	r3, [pc, #64]	; (800aad8 <RCC_PLL_GetFreqDomain_SYS+0x6c>)
 800aa96:	607b      	str	r3, [r7, #4]
 800aa98:	46c0      	nop			; (mov r8, r8)
 800aa9a:	f7ff fec7 	bl	800a82c <LL_RCC_PLL_GetN>
 800aa9e:	0002      	movs	r2, r0
 800aaa0:	687b      	ldr	r3, [r7, #4]
 800aaa2:	4353      	muls	r3, r2
 800aaa4:	001c      	movs	r4, r3
 800aaa6:	f7ff fee5 	bl	800a874 <LL_RCC_PLL_GetDivider>
 800aaaa:	0003      	movs	r3, r0
 800aaac:	091b      	lsrs	r3, r3, #4
 800aaae:	3301      	adds	r3, #1
 800aab0:	0019      	movs	r1, r3
 800aab2:	0020      	movs	r0, r4
 800aab4:	f7fb fb9c 	bl	80061f0 <__udivsi3>
 800aab8:	0003      	movs	r3, r0
 800aaba:	001c      	movs	r4, r3
 800aabc:	f7ff fec2 	bl	800a844 <LL_RCC_PLL_GetR>
 800aac0:	0003      	movs	r3, r0
 800aac2:	0f5b      	lsrs	r3, r3, #29
 800aac4:	3301      	adds	r3, #1
 800aac6:	0019      	movs	r1, r3
 800aac8:	0020      	movs	r0, r4
 800aaca:	f7fb fb91 	bl	80061f0 <__udivsi3>
 800aace:	0003      	movs	r3, r0
 800aad0:	0018      	movs	r0, r3
 800aad2:	46bd      	mov	sp, r7
 800aad4:	b003      	add	sp, #12
 800aad6:	bd90      	pop	{r4, r7, pc}
 800aad8:	00f42400 	.word	0x00f42400
 800aadc:	007a1200 	.word	0x007a1200

0800aae0 <LL_UCPD_Disable>:
 800aae0:	b580      	push	{r7, lr}
 800aae2:	b082      	sub	sp, #8
 800aae4:	af00      	add	r7, sp, #0
 800aae6:	6078      	str	r0, [r7, #4]
 800aae8:	687b      	ldr	r3, [r7, #4]
 800aaea:	681b      	ldr	r3, [r3, #0]
 800aaec:	005b      	lsls	r3, r3, #1
 800aaee:	085a      	lsrs	r2, r3, #1
 800aaf0:	687b      	ldr	r3, [r7, #4]
 800aaf2:	601a      	str	r2, [r3, #0]
 800aaf4:	46c0      	nop			; (mov r8, r8)
 800aaf6:	46bd      	mov	sp, r7
 800aaf8:	b002      	add	sp, #8
 800aafa:	bd80      	pop	{r7, pc}

0800aafc <LL_APB1_GRP1_EnableClock>:
 800aafc:	b580      	push	{r7, lr}
 800aafe:	b084      	sub	sp, #16
 800ab00:	af00      	add	r7, sp, #0
 800ab02:	6078      	str	r0, [r7, #4]
 800ab04:	4b07      	ldr	r3, [pc, #28]	; (800ab24 <LL_APB1_GRP1_EnableClock+0x28>)
 800ab06:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 800ab08:	4b06      	ldr	r3, [pc, #24]	; (800ab24 <LL_APB1_GRP1_EnableClock+0x28>)
 800ab0a:	687a      	ldr	r2, [r7, #4]
 800ab0c:	430a      	orrs	r2, r1
 800ab0e:	63da      	str	r2, [r3, #60]	; 0x3c
 800ab10:	4b04      	ldr	r3, [pc, #16]	; (800ab24 <LL_APB1_GRP1_EnableClock+0x28>)
 800ab12:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ab14:	687a      	ldr	r2, [r7, #4]
 800ab16:	4013      	ands	r3, r2
 800ab18:	60fb      	str	r3, [r7, #12]
 800ab1a:	68fb      	ldr	r3, [r7, #12]
 800ab1c:	46c0      	nop			; (mov r8, r8)
 800ab1e:	46bd      	mov	sp, r7
 800ab20:	b004      	add	sp, #16
 800ab22:	bd80      	pop	{r7, pc}
 800ab24:	40021000 	.word	0x40021000

0800ab28 <LL_UCPD_Init>:
 800ab28:	b580      	push	{r7, lr}
 800ab2a:	b082      	sub	sp, #8
 800ab2c:	af00      	add	r7, sp, #0
 800ab2e:	6078      	str	r0, [r7, #4]
 800ab30:	6039      	str	r1, [r7, #0]
 800ab32:	687b      	ldr	r3, [r7, #4]
 800ab34:	4a16      	ldr	r2, [pc, #88]	; (800ab90 <LL_UCPD_Init+0x68>)
 800ab36:	4293      	cmp	r3, r2
 800ab38:	d104      	bne.n	800ab44 <LL_UCPD_Init+0x1c>
 800ab3a:	2380      	movs	r3, #128	; 0x80
 800ab3c:	049b      	lsls	r3, r3, #18
 800ab3e:	0018      	movs	r0, r3
 800ab40:	f7ff ffdc 	bl	800aafc <LL_APB1_GRP1_EnableClock>
 800ab44:	687b      	ldr	r3, [r7, #4]
 800ab46:	4a13      	ldr	r2, [pc, #76]	; (800ab94 <LL_UCPD_Init+0x6c>)
 800ab48:	4293      	cmp	r3, r2
 800ab4a:	d104      	bne.n	800ab56 <LL_UCPD_Init+0x2e>
 800ab4c:	2380      	movs	r3, #128	; 0x80
 800ab4e:	04db      	lsls	r3, r3, #19
 800ab50:	0018      	movs	r0, r3
 800ab52:	f7ff ffd3 	bl	800aafc <LL_APB1_GRP1_EnableClock>
 800ab56:	687b      	ldr	r3, [r7, #4]
 800ab58:	0018      	movs	r0, r3
 800ab5a:	f7ff ffc1 	bl	800aae0 <LL_UCPD_Disable>
 800ab5e:	687b      	ldr	r3, [r7, #4]
 800ab60:	681b      	ldr	r3, [r3, #0]
 800ab62:	4a0d      	ldr	r2, [pc, #52]	; (800ab98 <LL_UCPD_Init+0x70>)
 800ab64:	401a      	ands	r2, r3
 800ab66:	683b      	ldr	r3, [r7, #0]
 800ab68:	6819      	ldr	r1, [r3, #0]
 800ab6a:	683b      	ldr	r3, [r7, #0]
 800ab6c:	685b      	ldr	r3, [r3, #4]
 800ab6e:	02db      	lsls	r3, r3, #11
 800ab70:	4319      	orrs	r1, r3
 800ab72:	683b      	ldr	r3, [r7, #0]
 800ab74:	689b      	ldr	r3, [r3, #8]
 800ab76:	019b      	lsls	r3, r3, #6
 800ab78:	4319      	orrs	r1, r3
 800ab7a:	683b      	ldr	r3, [r7, #0]
 800ab7c:	68db      	ldr	r3, [r3, #12]
 800ab7e:	430b      	orrs	r3, r1
 800ab80:	431a      	orrs	r2, r3
 800ab82:	687b      	ldr	r3, [r7, #4]
 800ab84:	601a      	str	r2, [r3, #0]
 800ab86:	2300      	movs	r3, #0
 800ab88:	0018      	movs	r0, r3
 800ab8a:	46bd      	mov	sp, r7
 800ab8c:	b002      	add	sp, #8
 800ab8e:	bd80      	pop	{r7, pc}
 800ab90:	4000a000 	.word	0x4000a000
 800ab94:	4000a400 	.word	0x4000a400
 800ab98:	fff10000 	.word	0xfff10000

0800ab9c <LL_UCPD_StructInit>:
 800ab9c:	b580      	push	{r7, lr}
 800ab9e:	b082      	sub	sp, #8
 800aba0:	af00      	add	r7, sp, #0
 800aba2:	6078      	str	r0, [r7, #4]
 800aba4:	687b      	ldr	r3, [r7, #4]
 800aba6:	2280      	movs	r2, #128	; 0x80
 800aba8:	0292      	lsls	r2, r2, #10
 800abaa:	601a      	str	r2, [r3, #0]
 800abac:	687b      	ldr	r3, [r7, #4]
 800abae:	2207      	movs	r2, #7
 800abb0:	605a      	str	r2, [r3, #4]
 800abb2:	687b      	ldr	r3, [r7, #4]
 800abb4:	2210      	movs	r2, #16
 800abb6:	609a      	str	r2, [r3, #8]
 800abb8:	687b      	ldr	r3, [r7, #4]
 800abba:	220d      	movs	r2, #13
 800abbc:	60da      	str	r2, [r3, #12]
 800abbe:	46c0      	nop			; (mov r8, r8)
 800abc0:	46bd      	mov	sp, r7
 800abc2:	b002      	add	sp, #8
 800abc4:	bd80      	pop	{r7, pc}
	...

0800abc8 <USBPD_TRACE_Init>:
 800abc8:	b580      	push	{r7, lr}
 800abca:	af00      	add	r7, sp, #0
 800abcc:	f00c f9b4 	bl	8016f38 <TRACER_EMB_Init>
 800abd0:	4b06      	ldr	r3, [pc, #24]	; (800abec <USBPD_TRACE_Init+0x24>)
 800abd2:	2103      	movs	r1, #3
 800abd4:	0018      	movs	r0, r3
 800abd6:	f7f6 fc7b 	bl	80014d0 <USBPD_PE_SetTrace>
 800abda:	4b05      	ldr	r3, [pc, #20]	; (800abf0 <USBPD_TRACE_Init+0x28>)
 800abdc:	2123      	movs	r1, #35	; 0x23
 800abde:	0018      	movs	r0, r3
 800abe0:	f00c fa36 	bl	8017050 <TRACER_EMB_EnableOverFlow>
 800abe4:	46c0      	nop			; (mov r8, r8)
 800abe6:	46bd      	mov	sp, r7
 800abe8:	bd80      	pop	{r7, pc}
 800abea:	46c0      	nop			; (mov r8, r8)
 800abec:	0800abf5 	.word	0x0800abf5
 800abf0:	08019988 	.word	0x08019988

0800abf4 <USBPD_TRACE_Add>:
 800abf4:	b5b0      	push	{r4, r5, r7, lr}
 800abf6:	b086      	sub	sp, #24
 800abf8:	af00      	add	r7, sp, #0
 800abfa:	0004      	movs	r4, r0
 800abfc:	0008      	movs	r0, r1
 800abfe:	0011      	movs	r1, r2
 800ac00:	603b      	str	r3, [r7, #0]
 800ac02:	1dfb      	adds	r3, r7, #7
 800ac04:	1c22      	adds	r2, r4, #0
 800ac06:	701a      	strb	r2, [r3, #0]
 800ac08:	1dbb      	adds	r3, r7, #6
 800ac0a:	1c02      	adds	r2, r0, #0
 800ac0c:	701a      	strb	r2, [r3, #0]
 800ac0e:	1d7b      	adds	r3, r7, #5
 800ac10:	1c0a      	adds	r2, r1, #0
 800ac12:	701a      	strb	r2, [r3, #0]
 800ac14:	f7fc fc3c 	bl	8007490 <HAL_GetTick>
 800ac18:	0003      	movs	r3, r0
 800ac1a:	613b      	str	r3, [r7, #16]
 800ac1c:	f00c fa7c 	bl	8017118 <TRACER_EMB_Lock>
 800ac20:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ac22:	3314      	adds	r3, #20
 800ac24:	0018      	movs	r0, r3
 800ac26:	f00c fb11 	bl	801724c <TRACER_EMB_AllocateBufer>
 800ac2a:	0003      	movs	r3, r0
 800ac2c:	60fb      	str	r3, [r7, #12]
 800ac2e:	68fb      	ldr	r3, [r7, #12]
 800ac30:	3301      	adds	r3, #1
 800ac32:	d100      	bne.n	800ac36 <USBPD_TRACE_Add+0x42>
 800ac34:	e11d      	b.n	800ae72 <USBPD_TRACE_Add+0x27e>
 800ac36:	2314      	movs	r3, #20
 800ac38:	18fb      	adds	r3, r7, r3
 800ac3a:	68fa      	ldr	r2, [r7, #12]
 800ac3c:	801a      	strh	r2, [r3, #0]
 800ac3e:	2316      	movs	r3, #22
 800ac40:	18fb      	adds	r3, r7, r3
 800ac42:	2200      	movs	r2, #0
 800ac44:	801a      	strh	r2, [r3, #0]
 800ac46:	e011      	b.n	800ac6c <USBPD_TRACE_Add+0x78>
 800ac48:	2414      	movs	r4, #20
 800ac4a:	193b      	adds	r3, r7, r4
 800ac4c:	881b      	ldrh	r3, [r3, #0]
 800ac4e:	21fd      	movs	r1, #253	; 0xfd
 800ac50:	0018      	movs	r0, r3
 800ac52:	f00c f9d7 	bl	8017004 <TRACER_EMB_WriteData>
 800ac56:	193b      	adds	r3, r7, r4
 800ac58:	193a      	adds	r2, r7, r4
 800ac5a:	8812      	ldrh	r2, [r2, #0]
 800ac5c:	3201      	adds	r2, #1
 800ac5e:	801a      	strh	r2, [r3, #0]
 800ac60:	2116      	movs	r1, #22
 800ac62:	187b      	adds	r3, r7, r1
 800ac64:	881a      	ldrh	r2, [r3, #0]
 800ac66:	187b      	adds	r3, r7, r1
 800ac68:	3201      	adds	r2, #1
 800ac6a:	801a      	strh	r2, [r3, #0]
 800ac6c:	2516      	movs	r5, #22
 800ac6e:	197b      	adds	r3, r7, r5
 800ac70:	881b      	ldrh	r3, [r3, #0]
 800ac72:	2b03      	cmp	r3, #3
 800ac74:	d9e8      	bls.n	800ac48 <USBPD_TRACE_Add+0x54>
 800ac76:	1dbb      	adds	r3, r7, #6
 800ac78:	781b      	ldrb	r3, [r3, #0]
 800ac7a:	3301      	adds	r3, #1
 800ac7c:	b2db      	uxtb	r3, r3
 800ac7e:	015b      	lsls	r3, r3, #5
 800ac80:	b2db      	uxtb	r3, r3
 800ac82:	2212      	movs	r2, #18
 800ac84:	4313      	orrs	r3, r2
 800ac86:	b2da      	uxtb	r2, r3
 800ac88:	2414      	movs	r4, #20
 800ac8a:	193b      	adds	r3, r7, r4
 800ac8c:	881b      	ldrh	r3, [r3, #0]
 800ac8e:	0011      	movs	r1, r2
 800ac90:	0018      	movs	r0, r3
 800ac92:	f00c f9b7 	bl	8017004 <TRACER_EMB_WriteData>
 800ac96:	0021      	movs	r1, r4
 800ac98:	187b      	adds	r3, r7, r1
 800ac9a:	187a      	adds	r2, r7, r1
 800ac9c:	8812      	ldrh	r2, [r2, #0]
 800ac9e:	3201      	adds	r2, #1
 800aca0:	801a      	strh	r2, [r3, #0]
 800aca2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800aca4:	3309      	adds	r3, #9
 800aca6:	0a1b      	lsrs	r3, r3, #8
 800aca8:	b2da      	uxtb	r2, r3
 800acaa:	000c      	movs	r4, r1
 800acac:	187b      	adds	r3, r7, r1
 800acae:	881b      	ldrh	r3, [r3, #0]
 800acb0:	0011      	movs	r1, r2
 800acb2:	0018      	movs	r0, r3
 800acb4:	f00c f9a6 	bl	8017004 <TRACER_EMB_WriteData>
 800acb8:	0021      	movs	r1, r4
 800acba:	187b      	adds	r3, r7, r1
 800acbc:	187a      	adds	r2, r7, r1
 800acbe:	8812      	ldrh	r2, [r2, #0]
 800acc0:	3201      	adds	r2, #1
 800acc2:	801a      	strh	r2, [r3, #0]
 800acc4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800acc6:	b2db      	uxtb	r3, r3
 800acc8:	3309      	adds	r3, #9
 800acca:	b2da      	uxtb	r2, r3
 800accc:	000c      	movs	r4, r1
 800acce:	187b      	adds	r3, r7, r1
 800acd0:	881b      	ldrh	r3, [r3, #0]
 800acd2:	0011      	movs	r1, r2
 800acd4:	0018      	movs	r0, r3
 800acd6:	f00c f995 	bl	8017004 <TRACER_EMB_WriteData>
 800acda:	0021      	movs	r1, r4
 800acdc:	187b      	adds	r3, r7, r1
 800acde:	187a      	adds	r2, r7, r1
 800ace0:	8812      	ldrh	r2, [r2, #0]
 800ace2:	3201      	adds	r2, #1
 800ace4:	801a      	strh	r2, [r3, #0]
 800ace6:	1dfb      	adds	r3, r7, #7
 800ace8:	781a      	ldrb	r2, [r3, #0]
 800acea:	000c      	movs	r4, r1
 800acec:	187b      	adds	r3, r7, r1
 800acee:	881b      	ldrh	r3, [r3, #0]
 800acf0:	0011      	movs	r1, r2
 800acf2:	0018      	movs	r0, r3
 800acf4:	f00c f986 	bl	8017004 <TRACER_EMB_WriteData>
 800acf8:	0021      	movs	r1, r4
 800acfa:	187b      	adds	r3, r7, r1
 800acfc:	187a      	adds	r2, r7, r1
 800acfe:	8812      	ldrh	r2, [r2, #0]
 800ad00:	3201      	adds	r2, #1
 800ad02:	801a      	strh	r2, [r3, #0]
 800ad04:	693b      	ldr	r3, [r7, #16]
 800ad06:	b2da      	uxtb	r2, r3
 800ad08:	000c      	movs	r4, r1
 800ad0a:	187b      	adds	r3, r7, r1
 800ad0c:	881b      	ldrh	r3, [r3, #0]
 800ad0e:	0011      	movs	r1, r2
 800ad10:	0018      	movs	r0, r3
 800ad12:	f00c f977 	bl	8017004 <TRACER_EMB_WriteData>
 800ad16:	0021      	movs	r1, r4
 800ad18:	187b      	adds	r3, r7, r1
 800ad1a:	187a      	adds	r2, r7, r1
 800ad1c:	8812      	ldrh	r2, [r2, #0]
 800ad1e:	3201      	adds	r2, #1
 800ad20:	801a      	strh	r2, [r3, #0]
 800ad22:	693b      	ldr	r3, [r7, #16]
 800ad24:	0a1b      	lsrs	r3, r3, #8
 800ad26:	b2da      	uxtb	r2, r3
 800ad28:	000c      	movs	r4, r1
 800ad2a:	187b      	adds	r3, r7, r1
 800ad2c:	881b      	ldrh	r3, [r3, #0]
 800ad2e:	0011      	movs	r1, r2
 800ad30:	0018      	movs	r0, r3
 800ad32:	f00c f967 	bl	8017004 <TRACER_EMB_WriteData>
 800ad36:	0021      	movs	r1, r4
 800ad38:	187b      	adds	r3, r7, r1
 800ad3a:	187a      	adds	r2, r7, r1
 800ad3c:	8812      	ldrh	r2, [r2, #0]
 800ad3e:	3201      	adds	r2, #1
 800ad40:	801a      	strh	r2, [r3, #0]
 800ad42:	693b      	ldr	r3, [r7, #16]
 800ad44:	0c1b      	lsrs	r3, r3, #16
 800ad46:	b2da      	uxtb	r2, r3
 800ad48:	000c      	movs	r4, r1
 800ad4a:	187b      	adds	r3, r7, r1
 800ad4c:	881b      	ldrh	r3, [r3, #0]
 800ad4e:	0011      	movs	r1, r2
 800ad50:	0018      	movs	r0, r3
 800ad52:	f00c f957 	bl	8017004 <TRACER_EMB_WriteData>
 800ad56:	0021      	movs	r1, r4
 800ad58:	187b      	adds	r3, r7, r1
 800ad5a:	187a      	adds	r2, r7, r1
 800ad5c:	8812      	ldrh	r2, [r2, #0]
 800ad5e:	3201      	adds	r2, #1
 800ad60:	801a      	strh	r2, [r3, #0]
 800ad62:	693b      	ldr	r3, [r7, #16]
 800ad64:	0e1b      	lsrs	r3, r3, #24
 800ad66:	b2da      	uxtb	r2, r3
 800ad68:	000c      	movs	r4, r1
 800ad6a:	187b      	adds	r3, r7, r1
 800ad6c:	881b      	ldrh	r3, [r3, #0]
 800ad6e:	0011      	movs	r1, r2
 800ad70:	0018      	movs	r0, r3
 800ad72:	f00c f947 	bl	8017004 <TRACER_EMB_WriteData>
 800ad76:	0021      	movs	r1, r4
 800ad78:	187b      	adds	r3, r7, r1
 800ad7a:	187a      	adds	r2, r7, r1
 800ad7c:	8812      	ldrh	r2, [r2, #0]
 800ad7e:	3201      	adds	r2, #1
 800ad80:	801a      	strh	r2, [r3, #0]
 800ad82:	1dbb      	adds	r3, r7, #6
 800ad84:	781a      	ldrb	r2, [r3, #0]
 800ad86:	000c      	movs	r4, r1
 800ad88:	187b      	adds	r3, r7, r1
 800ad8a:	881b      	ldrh	r3, [r3, #0]
 800ad8c:	0011      	movs	r1, r2
 800ad8e:	0018      	movs	r0, r3
 800ad90:	f00c f938 	bl	8017004 <TRACER_EMB_WriteData>
 800ad94:	0021      	movs	r1, r4
 800ad96:	187b      	adds	r3, r7, r1
 800ad98:	187a      	adds	r2, r7, r1
 800ad9a:	8812      	ldrh	r2, [r2, #0]
 800ad9c:	3201      	adds	r2, #1
 800ad9e:	801a      	strh	r2, [r3, #0]
 800ada0:	1d7b      	adds	r3, r7, #5
 800ada2:	781a      	ldrb	r2, [r3, #0]
 800ada4:	000c      	movs	r4, r1
 800ada6:	187b      	adds	r3, r7, r1
 800ada8:	881b      	ldrh	r3, [r3, #0]
 800adaa:	0011      	movs	r1, r2
 800adac:	0018      	movs	r0, r3
 800adae:	f00c f929 	bl	8017004 <TRACER_EMB_WriteData>
 800adb2:	0021      	movs	r1, r4
 800adb4:	187b      	adds	r3, r7, r1
 800adb6:	187a      	adds	r2, r7, r1
 800adb8:	8812      	ldrh	r2, [r2, #0]
 800adba:	3201      	adds	r2, #1
 800adbc:	801a      	strh	r2, [r3, #0]
 800adbe:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800adc0:	0a1b      	lsrs	r3, r3, #8
 800adc2:	b2da      	uxtb	r2, r3
 800adc4:	000c      	movs	r4, r1
 800adc6:	187b      	adds	r3, r7, r1
 800adc8:	881b      	ldrh	r3, [r3, #0]
 800adca:	0011      	movs	r1, r2
 800adcc:	0018      	movs	r0, r3
 800adce:	f00c f919 	bl	8017004 <TRACER_EMB_WriteData>
 800add2:	0021      	movs	r1, r4
 800add4:	187b      	adds	r3, r7, r1
 800add6:	187a      	adds	r2, r7, r1
 800add8:	8812      	ldrh	r2, [r2, #0]
 800adda:	3201      	adds	r2, #1
 800addc:	801a      	strh	r2, [r3, #0]
 800adde:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ade0:	b2da      	uxtb	r2, r3
 800ade2:	000c      	movs	r4, r1
 800ade4:	187b      	adds	r3, r7, r1
 800ade6:	881b      	ldrh	r3, [r3, #0]
 800ade8:	0011      	movs	r1, r2
 800adea:	0018      	movs	r0, r3
 800adec:	f00c f90a 	bl	8017004 <TRACER_EMB_WriteData>
 800adf0:	193b      	adds	r3, r7, r4
 800adf2:	193a      	adds	r2, r7, r4
 800adf4:	8812      	ldrh	r2, [r2, #0]
 800adf6:	3201      	adds	r2, #1
 800adf8:	801a      	strh	r2, [r3, #0]
 800adfa:	197b      	adds	r3, r7, r5
 800adfc:	2200      	movs	r2, #0
 800adfe:	801a      	strh	r2, [r3, #0]
 800ae00:	e016      	b.n	800ae30 <USBPD_TRACE_Add+0x23c>
 800ae02:	2416      	movs	r4, #22
 800ae04:	193b      	adds	r3, r7, r4
 800ae06:	881b      	ldrh	r3, [r3, #0]
 800ae08:	683a      	ldr	r2, [r7, #0]
 800ae0a:	18d3      	adds	r3, r2, r3
 800ae0c:	781a      	ldrb	r2, [r3, #0]
 800ae0e:	2514      	movs	r5, #20
 800ae10:	197b      	adds	r3, r7, r5
 800ae12:	881b      	ldrh	r3, [r3, #0]
 800ae14:	0011      	movs	r1, r2
 800ae16:	0018      	movs	r0, r3
 800ae18:	f00c f8f4 	bl	8017004 <TRACER_EMB_WriteData>
 800ae1c:	197b      	adds	r3, r7, r5
 800ae1e:	197a      	adds	r2, r7, r5
 800ae20:	8812      	ldrh	r2, [r2, #0]
 800ae22:	3201      	adds	r2, #1
 800ae24:	801a      	strh	r2, [r3, #0]
 800ae26:	193b      	adds	r3, r7, r4
 800ae28:	881a      	ldrh	r2, [r3, #0]
 800ae2a:	193b      	adds	r3, r7, r4
 800ae2c:	3201      	adds	r2, #1
 800ae2e:	801a      	strh	r2, [r3, #0]
 800ae30:	2116      	movs	r1, #22
 800ae32:	187b      	adds	r3, r7, r1
 800ae34:	881b      	ldrh	r3, [r3, #0]
 800ae36:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800ae38:	429a      	cmp	r2, r3
 800ae3a:	d8e2      	bhi.n	800ae02 <USBPD_TRACE_Add+0x20e>
 800ae3c:	187b      	adds	r3, r7, r1
 800ae3e:	2200      	movs	r2, #0
 800ae40:	801a      	strh	r2, [r3, #0]
 800ae42:	e011      	b.n	800ae68 <USBPD_TRACE_Add+0x274>
 800ae44:	2414      	movs	r4, #20
 800ae46:	193b      	adds	r3, r7, r4
 800ae48:	881b      	ldrh	r3, [r3, #0]
 800ae4a:	21a5      	movs	r1, #165	; 0xa5
 800ae4c:	0018      	movs	r0, r3
 800ae4e:	f00c f8d9 	bl	8017004 <TRACER_EMB_WriteData>
 800ae52:	193b      	adds	r3, r7, r4
 800ae54:	193a      	adds	r2, r7, r4
 800ae56:	8812      	ldrh	r2, [r2, #0]
 800ae58:	3201      	adds	r2, #1
 800ae5a:	801a      	strh	r2, [r3, #0]
 800ae5c:	2116      	movs	r1, #22
 800ae5e:	187b      	adds	r3, r7, r1
 800ae60:	881a      	ldrh	r2, [r3, #0]
 800ae62:	187b      	adds	r3, r7, r1
 800ae64:	3201      	adds	r2, #1
 800ae66:	801a      	strh	r2, [r3, #0]
 800ae68:	2316      	movs	r3, #22
 800ae6a:	18fb      	adds	r3, r7, r3
 800ae6c:	881b      	ldrh	r3, [r3, #0]
 800ae6e:	2b03      	cmp	r3, #3
 800ae70:	d9e8      	bls.n	800ae44 <USBPD_TRACE_Add+0x250>
 800ae72:	f00c f96f 	bl	8017154 <TRACER_EMB_UnLock>
 800ae76:	f00c f98b 	bl	8017190 <TRACER_EMB_SendData>
 800ae7a:	46c0      	nop			; (mov r8, r8)
 800ae7c:	46bd      	mov	sp, r7
 800ae7e:	b006      	add	sp, #24
 800ae80:	bdb0      	pop	{r4, r5, r7, pc}
	...

0800ae84 <__NVIC_EnableIRQ>:
 800ae84:	b580      	push	{r7, lr}
 800ae86:	b082      	sub	sp, #8
 800ae88:	af00      	add	r7, sp, #0
 800ae8a:	0002      	movs	r2, r0
 800ae8c:	1dfb      	adds	r3, r7, #7
 800ae8e:	701a      	strb	r2, [r3, #0]
 800ae90:	1dfb      	adds	r3, r7, #7
 800ae92:	781b      	ldrb	r3, [r3, #0]
 800ae94:	2b7f      	cmp	r3, #127	; 0x7f
 800ae96:	d809      	bhi.n	800aeac <__NVIC_EnableIRQ+0x28>
 800ae98:	1dfb      	adds	r3, r7, #7
 800ae9a:	781b      	ldrb	r3, [r3, #0]
 800ae9c:	001a      	movs	r2, r3
 800ae9e:	231f      	movs	r3, #31
 800aea0:	401a      	ands	r2, r3
 800aea2:	4b04      	ldr	r3, [pc, #16]	; (800aeb4 <__NVIC_EnableIRQ+0x30>)
 800aea4:	2101      	movs	r1, #1
 800aea6:	4091      	lsls	r1, r2
 800aea8:	000a      	movs	r2, r1
 800aeaa:	601a      	str	r2, [r3, #0]
 800aeac:	46c0      	nop			; (mov r8, r8)
 800aeae:	46bd      	mov	sp, r7
 800aeb0:	b002      	add	sp, #8
 800aeb2:	bd80      	pop	{r7, pc}
 800aeb4:	e000e100 	.word	0xe000e100

0800aeb8 <__NVIC_SetPriority>:
 800aeb8:	b590      	push	{r4, r7, lr}
 800aeba:	b083      	sub	sp, #12
 800aebc:	af00      	add	r7, sp, #0
 800aebe:	0002      	movs	r2, r0
 800aec0:	6039      	str	r1, [r7, #0]
 800aec2:	1dfb      	adds	r3, r7, #7
 800aec4:	701a      	strb	r2, [r3, #0]
 800aec6:	1dfb      	adds	r3, r7, #7
 800aec8:	781b      	ldrb	r3, [r3, #0]
 800aeca:	2b7f      	cmp	r3, #127	; 0x7f
 800aecc:	d828      	bhi.n	800af20 <__NVIC_SetPriority+0x68>
 800aece:	4a2f      	ldr	r2, [pc, #188]	; (800af8c <__NVIC_SetPriority+0xd4>)
 800aed0:	1dfb      	adds	r3, r7, #7
 800aed2:	781b      	ldrb	r3, [r3, #0]
 800aed4:	b25b      	sxtb	r3, r3
 800aed6:	089b      	lsrs	r3, r3, #2
 800aed8:	33c0      	adds	r3, #192	; 0xc0
 800aeda:	009b      	lsls	r3, r3, #2
 800aedc:	589b      	ldr	r3, [r3, r2]
 800aede:	1dfa      	adds	r2, r7, #7
 800aee0:	7812      	ldrb	r2, [r2, #0]
 800aee2:	0011      	movs	r1, r2
 800aee4:	2203      	movs	r2, #3
 800aee6:	400a      	ands	r2, r1
 800aee8:	00d2      	lsls	r2, r2, #3
 800aeea:	21ff      	movs	r1, #255	; 0xff
 800aeec:	4091      	lsls	r1, r2
 800aeee:	000a      	movs	r2, r1
 800aef0:	43d2      	mvns	r2, r2
 800aef2:	401a      	ands	r2, r3
 800aef4:	0011      	movs	r1, r2
 800aef6:	683b      	ldr	r3, [r7, #0]
 800aef8:	019b      	lsls	r3, r3, #6
 800aefa:	22ff      	movs	r2, #255	; 0xff
 800aefc:	401a      	ands	r2, r3
 800aefe:	1dfb      	adds	r3, r7, #7
 800af00:	781b      	ldrb	r3, [r3, #0]
 800af02:	0018      	movs	r0, r3
 800af04:	2303      	movs	r3, #3
 800af06:	4003      	ands	r3, r0
 800af08:	00db      	lsls	r3, r3, #3
 800af0a:	409a      	lsls	r2, r3
 800af0c:	481f      	ldr	r0, [pc, #124]	; (800af8c <__NVIC_SetPriority+0xd4>)
 800af0e:	1dfb      	adds	r3, r7, #7
 800af10:	781b      	ldrb	r3, [r3, #0]
 800af12:	b25b      	sxtb	r3, r3
 800af14:	089b      	lsrs	r3, r3, #2
 800af16:	430a      	orrs	r2, r1
 800af18:	33c0      	adds	r3, #192	; 0xc0
 800af1a:	009b      	lsls	r3, r3, #2
 800af1c:	501a      	str	r2, [r3, r0]
 800af1e:	e031      	b.n	800af84 <__NVIC_SetPriority+0xcc>
 800af20:	4a1b      	ldr	r2, [pc, #108]	; (800af90 <__NVIC_SetPriority+0xd8>)
 800af22:	1dfb      	adds	r3, r7, #7
 800af24:	781b      	ldrb	r3, [r3, #0]
 800af26:	0019      	movs	r1, r3
 800af28:	230f      	movs	r3, #15
 800af2a:	400b      	ands	r3, r1
 800af2c:	3b08      	subs	r3, #8
 800af2e:	089b      	lsrs	r3, r3, #2
 800af30:	3306      	adds	r3, #6
 800af32:	009b      	lsls	r3, r3, #2
 800af34:	18d3      	adds	r3, r2, r3
 800af36:	3304      	adds	r3, #4
 800af38:	681b      	ldr	r3, [r3, #0]
 800af3a:	1dfa      	adds	r2, r7, #7
 800af3c:	7812      	ldrb	r2, [r2, #0]
 800af3e:	0011      	movs	r1, r2
 800af40:	2203      	movs	r2, #3
 800af42:	400a      	ands	r2, r1
 800af44:	00d2      	lsls	r2, r2, #3
 800af46:	21ff      	movs	r1, #255	; 0xff
 800af48:	4091      	lsls	r1, r2
 800af4a:	000a      	movs	r2, r1
 800af4c:	43d2      	mvns	r2, r2
 800af4e:	401a      	ands	r2, r3
 800af50:	0011      	movs	r1, r2
 800af52:	683b      	ldr	r3, [r7, #0]
 800af54:	019b      	lsls	r3, r3, #6
 800af56:	22ff      	movs	r2, #255	; 0xff
 800af58:	401a      	ands	r2, r3
 800af5a:	1dfb      	adds	r3, r7, #7
 800af5c:	781b      	ldrb	r3, [r3, #0]
 800af5e:	0018      	movs	r0, r3
 800af60:	2303      	movs	r3, #3
 800af62:	4003      	ands	r3, r0
 800af64:	00db      	lsls	r3, r3, #3
 800af66:	409a      	lsls	r2, r3
 800af68:	4809      	ldr	r0, [pc, #36]	; (800af90 <__NVIC_SetPriority+0xd8>)
 800af6a:	1dfb      	adds	r3, r7, #7
 800af6c:	781b      	ldrb	r3, [r3, #0]
 800af6e:	001c      	movs	r4, r3
 800af70:	230f      	movs	r3, #15
 800af72:	4023      	ands	r3, r4
 800af74:	3b08      	subs	r3, #8
 800af76:	089b      	lsrs	r3, r3, #2
 800af78:	430a      	orrs	r2, r1
 800af7a:	3306      	adds	r3, #6
 800af7c:	009b      	lsls	r3, r3, #2
 800af7e:	18c3      	adds	r3, r0, r3
 800af80:	3304      	adds	r3, #4
 800af82:	601a      	str	r2, [r3, #0]
 800af84:	46c0      	nop			; (mov r8, r8)
 800af86:	46bd      	mov	sp, r7
 800af88:	b003      	add	sp, #12
 800af8a:	bd90      	pop	{r4, r7, pc}
 800af8c:	e000e100 	.word	0xe000e100
 800af90:	e000ed00 	.word	0xe000ed00

0800af94 <LL_UCPD_Enable>:
 800af94:	b580      	push	{r7, lr}
 800af96:	b082      	sub	sp, #8
 800af98:	af00      	add	r7, sp, #0
 800af9a:	6078      	str	r0, [r7, #4]
 800af9c:	687b      	ldr	r3, [r7, #4]
 800af9e:	681b      	ldr	r3, [r3, #0]
 800afa0:	2280      	movs	r2, #128	; 0x80
 800afa2:	0612      	lsls	r2, r2, #24
 800afa4:	431a      	orrs	r2, r3
 800afa6:	687b      	ldr	r3, [r7, #4]
 800afa8:	601a      	str	r2, [r3, #0]
 800afaa:	46c0      	nop			; (mov r8, r8)
 800afac:	46bd      	mov	sp, r7
 800afae:	b002      	add	sp, #8
 800afb0:	bd80      	pop	{r7, pc}
	...

0800afb4 <LL_UCPD_SetRxOrderSet>:
 800afb4:	b580      	push	{r7, lr}
 800afb6:	b082      	sub	sp, #8
 800afb8:	af00      	add	r7, sp, #0
 800afba:	6078      	str	r0, [r7, #4]
 800afbc:	6039      	str	r1, [r7, #0]
 800afbe:	687b      	ldr	r3, [r7, #4]
 800afc0:	681b      	ldr	r3, [r3, #0]
 800afc2:	4a05      	ldr	r2, [pc, #20]	; (800afd8 <LL_UCPD_SetRxOrderSet+0x24>)
 800afc4:	401a      	ands	r2, r3
 800afc6:	683b      	ldr	r3, [r7, #0]
 800afc8:	431a      	orrs	r2, r3
 800afca:	687b      	ldr	r3, [r7, #4]
 800afcc:	601a      	str	r2, [r3, #0]
 800afce:	46c0      	nop			; (mov r8, r8)
 800afd0:	46bd      	mov	sp, r7
 800afd2:	b002      	add	sp, #8
 800afd4:	bd80      	pop	{r7, pc}
 800afd6:	46c0      	nop			; (mov r8, r8)
 800afd8:	e00fffff 	.word	0xe00fffff

0800afdc <LL_UCPD_SetccEnable>:
 800afdc:	b580      	push	{r7, lr}
 800afde:	b082      	sub	sp, #8
 800afe0:	af00      	add	r7, sp, #0
 800afe2:	6078      	str	r0, [r7, #4]
 800afe4:	6039      	str	r1, [r7, #0]
 800afe6:	687b      	ldr	r3, [r7, #4]
 800afe8:	68db      	ldr	r3, [r3, #12]
 800afea:	4a05      	ldr	r2, [pc, #20]	; (800b000 <LL_UCPD_SetccEnable+0x24>)
 800afec:	401a      	ands	r2, r3
 800afee:	683b      	ldr	r3, [r7, #0]
 800aff0:	431a      	orrs	r2, r3
 800aff2:	687b      	ldr	r3, [r7, #4]
 800aff4:	60da      	str	r2, [r3, #12]
 800aff6:	46c0      	nop			; (mov r8, r8)
 800aff8:	46bd      	mov	sp, r7
 800affa:	b002      	add	sp, #8
 800affc:	bd80      	pop	{r7, pc}
 800affe:	46c0      	nop			; (mov r8, r8)
 800b000:	fffff3ff 	.word	0xfffff3ff

0800b004 <LL_UCPD_EnableIT_TypeCEventCC2>:
 800b004:	b580      	push	{r7, lr}
 800b006:	b082      	sub	sp, #8
 800b008:	af00      	add	r7, sp, #0
 800b00a:	6078      	str	r0, [r7, #4]
 800b00c:	687b      	ldr	r3, [r7, #4]
 800b00e:	691b      	ldr	r3, [r3, #16]
 800b010:	2280      	movs	r2, #128	; 0x80
 800b012:	0212      	lsls	r2, r2, #8
 800b014:	431a      	orrs	r2, r3
 800b016:	687b      	ldr	r3, [r7, #4]
 800b018:	611a      	str	r2, [r3, #16]
 800b01a:	46c0      	nop			; (mov r8, r8)
 800b01c:	46bd      	mov	sp, r7
 800b01e:	b002      	add	sp, #8
 800b020:	bd80      	pop	{r7, pc}

0800b022 <LL_UCPD_EnableIT_TypeCEventCC1>:
 800b022:	b580      	push	{r7, lr}
 800b024:	b082      	sub	sp, #8
 800b026:	af00      	add	r7, sp, #0
 800b028:	6078      	str	r0, [r7, #4]
 800b02a:	687b      	ldr	r3, [r7, #4]
 800b02c:	691b      	ldr	r3, [r3, #16]
 800b02e:	2280      	movs	r2, #128	; 0x80
 800b030:	01d2      	lsls	r2, r2, #7
 800b032:	431a      	orrs	r2, r3
 800b034:	687b      	ldr	r3, [r7, #4]
 800b036:	611a      	str	r2, [r3, #16]
 800b038:	46c0      	nop			; (mov r8, r8)
 800b03a:	46bd      	mov	sp, r7
 800b03c:	b002      	add	sp, #8
 800b03e:	bd80      	pop	{r7, pc}

0800b040 <CAD_Init>:
 800b040:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b042:	b08b      	sub	sp, #44	; 0x2c
 800b044:	af00      	add	r7, sp, #0
 800b046:	60b9      	str	r1, [r7, #8]
 800b048:	607a      	str	r2, [r7, #4]
 800b04a:	603b      	str	r3, [r7, #0]
 800b04c:	240f      	movs	r4, #15
 800b04e:	193b      	adds	r3, r7, r4
 800b050:	1c02      	adds	r2, r0, #0
 800b052:	701a      	strb	r2, [r3, #0]
 800b054:	193b      	adds	r3, r7, r4
 800b056:	781a      	ldrb	r2, [r3, #0]
 800b058:	0013      	movs	r3, r2
 800b05a:	005b      	lsls	r3, r3, #1
 800b05c:	189b      	adds	r3, r3, r2
 800b05e:	009b      	lsls	r3, r3, #2
 800b060:	4a65      	ldr	r2, [pc, #404]	; (800b1f8 <CAD_Init+0x1b8>)
 800b062:	189b      	adds	r3, r3, r2
 800b064:	627b      	str	r3, [r7, #36]	; 0x24
 800b066:	193b      	adds	r3, r7, r4
 800b068:	781a      	ldrb	r2, [r3, #0]
 800b06a:	4964      	ldr	r1, [pc, #400]	; (800b1fc <CAD_Init+0x1bc>)
 800b06c:	0013      	movs	r3, r2
 800b06e:	011b      	lsls	r3, r3, #4
 800b070:	1a9b      	subs	r3, r3, r2
 800b072:	009b      	lsls	r3, r3, #2
 800b074:	18cb      	adds	r3, r1, r3
 800b076:	3310      	adds	r3, #16
 800b078:	687a      	ldr	r2, [r7, #4]
 800b07a:	601a      	str	r2, [r3, #0]
 800b07c:	193b      	adds	r3, r7, r4
 800b07e:	781a      	ldrb	r2, [r3, #0]
 800b080:	495e      	ldr	r1, [pc, #376]	; (800b1fc <CAD_Init+0x1bc>)
 800b082:	0013      	movs	r3, r2
 800b084:	011b      	lsls	r3, r3, #4
 800b086:	1a9b      	subs	r3, r3, r2
 800b088:	009b      	lsls	r3, r3, #2
 800b08a:	18cb      	adds	r3, r1, r3
 800b08c:	330c      	adds	r3, #12
 800b08e:	68ba      	ldr	r2, [r7, #8]
 800b090:	601a      	str	r2, [r3, #0]
 800b092:	193b      	adds	r3, r7, r4
 800b094:	781a      	ldrb	r2, [r3, #0]
 800b096:	4959      	ldr	r1, [pc, #356]	; (800b1fc <CAD_Init+0x1bc>)
 800b098:	0013      	movs	r3, r2
 800b09a:	011b      	lsls	r3, r3, #4
 800b09c:	1a9b      	subs	r3, r3, r2
 800b09e:	009b      	lsls	r3, r3, #2
 800b0a0:	18cb      	adds	r3, r1, r3
 800b0a2:	330c      	adds	r3, #12
 800b0a4:	6819      	ldr	r1, [r3, #0]
 800b0a6:	193b      	adds	r3, r7, r4
 800b0a8:	781a      	ldrb	r2, [r3, #0]
 800b0aa:	4854      	ldr	r0, [pc, #336]	; (800b1fc <CAD_Init+0x1bc>)
 800b0ac:	0013      	movs	r3, r2
 800b0ae:	011b      	lsls	r3, r3, #4
 800b0b0:	1a9b      	subs	r3, r3, r2
 800b0b2:	009b      	lsls	r3, r3, #2
 800b0b4:	18c3      	adds	r3, r0, r3
 800b0b6:	3310      	adds	r3, #16
 800b0b8:	681b      	ldr	r3, [r3, #0]
 800b0ba:	794a      	ldrb	r2, [r1, #5]
 800b0bc:	0612      	lsls	r2, r2, #24
 800b0be:	0f92      	lsrs	r2, r2, #30
 800b0c0:	b2d2      	uxtb	r2, r2
 800b0c2:	2103      	movs	r1, #3
 800b0c4:	400a      	ands	r2, r1
 800b0c6:	0010      	movs	r0, r2
 800b0c8:	789a      	ldrb	r2, [r3, #2]
 800b0ca:	2103      	movs	r1, #3
 800b0cc:	438a      	bics	r2, r1
 800b0ce:	1c11      	adds	r1, r2, #0
 800b0d0:	1c02      	adds	r2, r0, #0
 800b0d2:	430a      	orrs	r2, r1
 800b0d4:	709a      	strb	r2, [r3, #2]
 800b0d6:	193b      	adds	r3, r7, r4
 800b0d8:	781a      	ldrb	r2, [r3, #0]
 800b0da:	4948      	ldr	r1, [pc, #288]	; (800b1fc <CAD_Init+0x1bc>)
 800b0dc:	0013      	movs	r3, r2
 800b0de:	011b      	lsls	r3, r3, #4
 800b0e0:	1a9b      	subs	r3, r3, r2
 800b0e2:	009b      	lsls	r3, r3, #2
 800b0e4:	18cb      	adds	r3, r1, r3
 800b0e6:	3310      	adds	r3, #16
 800b0e8:	681b      	ldr	r3, [r3, #0]
 800b0ea:	789a      	ldrb	r2, [r3, #2]
 800b0ec:	210c      	movs	r1, #12
 800b0ee:	438a      	bics	r2, r1
 800b0f0:	709a      	strb	r2, [r3, #2]
 800b0f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b0f4:	220c      	movs	r2, #12
 800b0f6:	2100      	movs	r1, #0
 800b0f8:	0018      	movs	r0, r3
 800b0fa:	f00d f863 	bl	80181c4 <memset>
 800b0fe:	193b      	adds	r3, r7, r4
 800b100:	781a      	ldrb	r2, [r3, #0]
 800b102:	493e      	ldr	r1, [pc, #248]	; (800b1fc <CAD_Init+0x1bc>)
 800b104:	0013      	movs	r3, r2
 800b106:	011b      	lsls	r3, r3, #4
 800b108:	1a9b      	subs	r3, r3, r2
 800b10a:	009b      	lsls	r3, r3, #2
 800b10c:	18cb      	adds	r3, r1, r3
 800b10e:	332c      	adds	r3, #44	; 0x2c
 800b110:	683a      	ldr	r2, [r7, #0]
 800b112:	601a      	str	r2, [r3, #0]
 800b114:	0025      	movs	r5, r4
 800b116:	193b      	adds	r3, r7, r4
 800b118:	781c      	ldrb	r4, [r3, #0]
 800b11a:	197b      	adds	r3, r7, r5
 800b11c:	781b      	ldrb	r3, [r3, #0]
 800b11e:	0018      	movs	r0, r3
 800b120:	f000 fc42 	bl	800b9a8 <USBPD_HW_GetUSPDInstance>
 800b124:	0001      	movs	r1, r0
 800b126:	4a35      	ldr	r2, [pc, #212]	; (800b1fc <CAD_Init+0x1bc>)
 800b128:	0023      	movs	r3, r4
 800b12a:	011b      	lsls	r3, r3, #4
 800b12c:	1b1b      	subs	r3, r3, r4
 800b12e:	009b      	lsls	r3, r3, #2
 800b130:	5099      	str	r1, [r3, r2]
 800b132:	2614      	movs	r6, #20
 800b134:	19bb      	adds	r3, r7, r6
 800b136:	0018      	movs	r0, r3
 800b138:	f7ff fd30 	bl	800ab9c <LL_UCPD_StructInit>
 800b13c:	002c      	movs	r4, r5
 800b13e:	193b      	adds	r3, r7, r4
 800b140:	781a      	ldrb	r2, [r3, #0]
 800b142:	492e      	ldr	r1, [pc, #184]	; (800b1fc <CAD_Init+0x1bc>)
 800b144:	0013      	movs	r3, r2
 800b146:	011b      	lsls	r3, r3, #4
 800b148:	1a9b      	subs	r3, r3, r2
 800b14a:	009b      	lsls	r3, r3, #2
 800b14c:	585b      	ldr	r3, [r3, r1]
 800b14e:	19ba      	adds	r2, r7, r6
 800b150:	0011      	movs	r1, r2
 800b152:	0018      	movs	r0, r3
 800b154:	f7ff fce8 	bl	800ab28 <LL_UCPD_Init>
 800b158:	193b      	adds	r3, r7, r4
 800b15a:	781a      	ldrb	r2, [r3, #0]
 800b15c:	4927      	ldr	r1, [pc, #156]	; (800b1fc <CAD_Init+0x1bc>)
 800b15e:	0013      	movs	r3, r2
 800b160:	011b      	lsls	r3, r3, #4
 800b162:	1a9b      	subs	r3, r3, r2
 800b164:	009b      	lsls	r3, r3, #2
 800b166:	585b      	ldr	r3, [r3, r1]
 800b168:	22f8      	movs	r2, #248	; 0xf8
 800b16a:	0452      	lsls	r2, r2, #17
 800b16c:	0011      	movs	r1, r2
 800b16e:	0018      	movs	r0, r3
 800b170:	f7ff ff20 	bl	800afb4 <LL_UCPD_SetRxOrderSet>
 800b174:	193b      	adds	r3, r7, r4
 800b176:	781a      	ldrb	r2, [r3, #0]
 800b178:	4920      	ldr	r1, [pc, #128]	; (800b1fc <CAD_Init+0x1bc>)
 800b17a:	0013      	movs	r3, r2
 800b17c:	011b      	lsls	r3, r3, #4
 800b17e:	1a9b      	subs	r3, r3, r2
 800b180:	009b      	lsls	r3, r3, #2
 800b182:	585b      	ldr	r3, [r3, r1]
 800b184:	22c0      	movs	r2, #192	; 0xc0
 800b186:	0112      	lsls	r2, r2, #4
 800b188:	0011      	movs	r1, r2
 800b18a:	0018      	movs	r0, r3
 800b18c:	f7ff ff26 	bl	800afdc <LL_UCPD_SetccEnable>
 800b190:	193b      	adds	r3, r7, r4
 800b192:	781b      	ldrb	r3, [r3, #0]
 800b194:	0018      	movs	r0, r3
 800b196:	f007 fd99 	bl	8012ccc <BSP_USBPD_PWR_Init>
 800b19a:	193b      	adds	r3, r7, r4
 800b19c:	781a      	ldrb	r2, [r3, #0]
 800b19e:	4917      	ldr	r1, [pc, #92]	; (800b1fc <CAD_Init+0x1bc>)
 800b1a0:	0013      	movs	r3, r2
 800b1a2:	011b      	lsls	r3, r3, #4
 800b1a4:	1a9b      	subs	r3, r3, r2
 800b1a6:	009b      	lsls	r3, r3, #2
 800b1a8:	585b      	ldr	r3, [r3, r1]
 800b1aa:	0018      	movs	r0, r3
 800b1ac:	f7ff fef2 	bl	800af94 <LL_UCPD_Enable>
 800b1b0:	193b      	adds	r3, r7, r4
 800b1b2:	781b      	ldrb	r3, [r3, #0]
 800b1b4:	0018      	movs	r0, r3
 800b1b6:	f001 fdc1 	bl	800cd3c <USBPDM1_AssertRd>
 800b1ba:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b1bc:	4a10      	ldr	r2, [pc, #64]	; (800b200 <CAD_Init+0x1c0>)
 800b1be:	609a      	str	r2, [r3, #8]
 800b1c0:	193b      	adds	r3, r7, r4
 800b1c2:	781a      	ldrb	r2, [r3, #0]
 800b1c4:	490d      	ldr	r1, [pc, #52]	; (800b1fc <CAD_Init+0x1bc>)
 800b1c6:	0013      	movs	r3, r2
 800b1c8:	011b      	lsls	r3, r3, #4
 800b1ca:	1a9b      	subs	r3, r3, r2
 800b1cc:	009b      	lsls	r3, r3, #2
 800b1ce:	18cb      	adds	r3, r1, r3
 800b1d0:	330c      	adds	r3, #12
 800b1d2:	681b      	ldr	r3, [r3, #0]
 800b1d4:	795b      	ldrb	r3, [r3, #5]
 800b1d6:	06db      	lsls	r3, r3, #27
 800b1d8:	0fdb      	lsrs	r3, r3, #31
 800b1da:	b2da      	uxtb	r2, r3
 800b1dc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b1de:	01d0      	lsls	r0, r2, #7
 800b1e0:	785a      	ldrb	r2, [r3, #1]
 800b1e2:	217f      	movs	r1, #127	; 0x7f
 800b1e4:	400a      	ands	r2, r1
 800b1e6:	1c11      	adds	r1, r2, #0
 800b1e8:	1c02      	adds	r2, r0, #0
 800b1ea:	430a      	orrs	r2, r1
 800b1ec:	705a      	strb	r2, [r3, #1]
 800b1ee:	46c0      	nop			; (mov r8, r8)
 800b1f0:	46bd      	mov	sp, r7
 800b1f2:	b00b      	add	sp, #44	; 0x2c
 800b1f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b1f6:	46c0      	nop			; (mov r8, r8)
 800b1f8:	200002ac 	.word	0x200002ac
 800b1fc:	200002c4 	.word	0x200002c4
 800b200:	0800b301 	.word	0x0800b301

0800b204 <CAD_Enter_ErrorRecovery>:
 800b204:	b580      	push	{r7, lr}
 800b206:	b082      	sub	sp, #8
 800b208:	af00      	add	r7, sp, #0
 800b20a:	0002      	movs	r2, r0
 800b20c:	1dfb      	adds	r3, r7, #7
 800b20e:	701a      	strb	r2, [r3, #0]
 800b210:	1dfb      	adds	r3, r7, #7
 800b212:	781b      	ldrb	r3, [r3, #0]
 800b214:	0018      	movs	r0, r3
 800b216:	f001 fe41 	bl	800ce9c <USBPDM1_EnterErrorRecovery>
 800b21a:	1dfb      	adds	r3, r7, #7
 800b21c:	7819      	ldrb	r1, [r3, #0]
 800b21e:	4a0c      	ldr	r2, [pc, #48]	; (800b250 <CAD_Enter_ErrorRecovery+0x4c>)
 800b220:	000b      	movs	r3, r1
 800b222:	005b      	lsls	r3, r3, #1
 800b224:	185b      	adds	r3, r3, r1
 800b226:	009b      	lsls	r3, r3, #2
 800b228:	5c99      	ldrb	r1, [r3, r2]
 800b22a:	2080      	movs	r0, #128	; 0x80
 800b22c:	4240      	negs	r0, r0
 800b22e:	4301      	orrs	r1, r0
 800b230:	5499      	strb	r1, [r3, r2]
 800b232:	1dfb      	adds	r3, r7, #7
 800b234:	781a      	ldrb	r2, [r3, #0]
 800b236:	4907      	ldr	r1, [pc, #28]	; (800b254 <CAD_Enter_ErrorRecovery+0x50>)
 800b238:	0013      	movs	r3, r2
 800b23a:	011b      	lsls	r3, r3, #4
 800b23c:	1a9b      	subs	r3, r3, r2
 800b23e:	009b      	lsls	r3, r3, #2
 800b240:	18cb      	adds	r3, r1, r3
 800b242:	332c      	adds	r3, #44	; 0x2c
 800b244:	681b      	ldr	r3, [r3, #0]
 800b246:	4798      	blx	r3
 800b248:	46c0      	nop			; (mov r8, r8)
 800b24a:	46bd      	mov	sp, r7
 800b24c:	b002      	add	sp, #8
 800b24e:	bd80      	pop	{r7, pc}
 800b250:	200002ac 	.word	0x200002ac
 800b254:	200002c4 	.word	0x200002c4

0800b258 <CAD_SRC_Set_ResistorRp>:
 800b258:	b580      	push	{r7, lr}
 800b25a:	b082      	sub	sp, #8
 800b25c:	af00      	add	r7, sp, #0
 800b25e:	0002      	movs	r2, r0
 800b260:	6039      	str	r1, [r7, #0]
 800b262:	1dfb      	adds	r3, r7, #7
 800b264:	701a      	strb	r2, [r3, #0]
 800b266:	1dfb      	adds	r3, r7, #7
 800b268:	781a      	ldrb	r2, [r3, #0]
 800b26a:	4919      	ldr	r1, [pc, #100]	; (800b2d0 <CAD_SRC_Set_ResistorRp+0x78>)
 800b26c:	0013      	movs	r3, r2
 800b26e:	011b      	lsls	r3, r3, #4
 800b270:	1a9b      	subs	r3, r3, r2
 800b272:	009b      	lsls	r3, r3, #2
 800b274:	18cb      	adds	r3, r1, r3
 800b276:	3310      	adds	r3, #16
 800b278:	681b      	ldr	r3, [r3, #0]
 800b27a:	683a      	ldr	r2, [r7, #0]
 800b27c:	1c11      	adds	r1, r2, #0
 800b27e:	2203      	movs	r2, #3
 800b280:	400a      	ands	r2, r1
 800b282:	b2d2      	uxtb	r2, r2
 800b284:	2103      	movs	r1, #3
 800b286:	400a      	ands	r2, r1
 800b288:	0010      	movs	r0, r2
 800b28a:	789a      	ldrb	r2, [r3, #2]
 800b28c:	2103      	movs	r1, #3
 800b28e:	438a      	bics	r2, r1
 800b290:	1c11      	adds	r1, r2, #0
 800b292:	1c02      	adds	r2, r0, #0
 800b294:	430a      	orrs	r2, r1
 800b296:	709a      	strb	r2, [r3, #2]
 800b298:	1dfb      	adds	r3, r7, #7
 800b29a:	781a      	ldrb	r2, [r3, #0]
 800b29c:	490d      	ldr	r1, [pc, #52]	; (800b2d4 <CAD_SRC_Set_ResistorRp+0x7c>)
 800b29e:	0013      	movs	r3, r2
 800b2a0:	005b      	lsls	r3, r3, #1
 800b2a2:	189b      	adds	r3, r3, r2
 800b2a4:	009b      	lsls	r3, r3, #2
 800b2a6:	18cb      	adds	r3, r1, r3
 800b2a8:	785a      	ldrb	r2, [r3, #1]
 800b2aa:	2101      	movs	r1, #1
 800b2ac:	430a      	orrs	r2, r1
 800b2ae:	705a      	strb	r2, [r3, #1]
 800b2b0:	1dfb      	adds	r3, r7, #7
 800b2b2:	781a      	ldrb	r2, [r3, #0]
 800b2b4:	4906      	ldr	r1, [pc, #24]	; (800b2d0 <CAD_SRC_Set_ResistorRp+0x78>)
 800b2b6:	0013      	movs	r3, r2
 800b2b8:	011b      	lsls	r3, r3, #4
 800b2ba:	1a9b      	subs	r3, r3, r2
 800b2bc:	009b      	lsls	r3, r3, #2
 800b2be:	18cb      	adds	r3, r1, r3
 800b2c0:	332c      	adds	r3, #44	; 0x2c
 800b2c2:	681b      	ldr	r3, [r3, #0]
 800b2c4:	4798      	blx	r3
 800b2c6:	2300      	movs	r3, #0
 800b2c8:	0018      	movs	r0, r3
 800b2ca:	46bd      	mov	sp, r7
 800b2cc:	b002      	add	sp, #8
 800b2ce:	bd80      	pop	{r7, pc}
 800b2d0:	200002c4 	.word	0x200002c4
 800b2d4:	200002ac 	.word	0x200002ac

0800b2d8 <CAD_Set_ResistorRp>:
 800b2d8:	b580      	push	{r7, lr}
 800b2da:	b082      	sub	sp, #8
 800b2dc:	af00      	add	r7, sp, #0
 800b2de:	0002      	movs	r2, r0
 800b2e0:	6039      	str	r1, [r7, #0]
 800b2e2:	1dfb      	adds	r3, r7, #7
 800b2e4:	701a      	strb	r2, [r3, #0]
 800b2e6:	683a      	ldr	r2, [r7, #0]
 800b2e8:	1dfb      	adds	r3, r7, #7
 800b2ea:	781b      	ldrb	r3, [r3, #0]
 800b2ec:	0011      	movs	r1, r2
 800b2ee:	0018      	movs	r0, r3
 800b2f0:	f7ff ffb2 	bl	800b258 <CAD_SRC_Set_ResistorRp>
 800b2f4:	0003      	movs	r3, r0
 800b2f6:	0018      	movs	r0, r3
 800b2f8:	46bd      	mov	sp, r7
 800b2fa:	b002      	add	sp, #8
 800b2fc:	bd80      	pop	{r7, pc}
	...

0800b300 <CAD_StateMachine_SNK>:
 800b300:	b580      	push	{r7, lr}
 800b302:	b086      	sub	sp, #24
 800b304:	af00      	add	r7, sp, #0
 800b306:	60b9      	str	r1, [r7, #8]
 800b308:	607a      	str	r2, [r7, #4]
 800b30a:	210f      	movs	r1, #15
 800b30c:	187b      	adds	r3, r7, r1
 800b30e:	1c02      	adds	r2, r0, #0
 800b310:	701a      	strb	r2, [r3, #0]
 800b312:	187b      	adds	r3, r7, r1
 800b314:	781a      	ldrb	r2, [r3, #0]
 800b316:	0013      	movs	r3, r2
 800b318:	005b      	lsls	r3, r3, #1
 800b31a:	189b      	adds	r3, r3, r2
 800b31c:	009b      	lsls	r3, r3, #2
 800b31e:	4a1b      	ldr	r2, [pc, #108]	; (800b38c <CAD_StateMachine_SNK+0x8c>)
 800b320:	189b      	adds	r3, r3, r2
 800b322:	613b      	str	r3, [r7, #16]
 800b324:	2302      	movs	r3, #2
 800b326:	617b      	str	r3, [r7, #20]
 800b328:	693b      	ldr	r3, [r7, #16]
 800b32a:	785b      	ldrb	r3, [r3, #1]
 800b32c:	069b      	lsls	r3, r3, #26
 800b32e:	0edb      	lsrs	r3, r3, #27
 800b330:	b2db      	uxtb	r3, r3
 800b332:	2b03      	cmp	r3, #3
 800b334:	d019      	beq.n	800b36a <CAD_StateMachine_SNK+0x6a>
 800b336:	dc23      	bgt.n	800b380 <CAD_StateMachine_SNK+0x80>
 800b338:	2b01      	cmp	r3, #1
 800b33a:	d002      	beq.n	800b342 <CAD_StateMachine_SNK+0x42>
 800b33c:	2b02      	cmp	r3, #2
 800b33e:	d009      	beq.n	800b354 <CAD_StateMachine_SNK+0x54>
 800b340:	e01e      	b.n	800b380 <CAD_StateMachine_SNK+0x80>
 800b342:	230f      	movs	r3, #15
 800b344:	18fb      	adds	r3, r7, r3
 800b346:	781b      	ldrb	r3, [r3, #0]
 800b348:	0018      	movs	r0, r3
 800b34a:	f000 f9c5 	bl	800b6d8 <ManageStateDetached_SNK>
 800b34e:	0003      	movs	r3, r0
 800b350:	617b      	str	r3, [r7, #20]
 800b352:	e016      	b.n	800b382 <CAD_StateMachine_SNK+0x82>
 800b354:	687a      	ldr	r2, [r7, #4]
 800b356:	68b9      	ldr	r1, [r7, #8]
 800b358:	230f      	movs	r3, #15
 800b35a:	18fb      	adds	r3, r7, r3
 800b35c:	781b      	ldrb	r3, [r3, #0]
 800b35e:	0018      	movs	r0, r3
 800b360:	f000 fa0c 	bl	800b77c <ManageStateAttachedWait_SNK>
 800b364:	0003      	movs	r3, r0
 800b366:	617b      	str	r3, [r7, #20]
 800b368:	e00b      	b.n	800b382 <CAD_StateMachine_SNK+0x82>
 800b36a:	687a      	ldr	r2, [r7, #4]
 800b36c:	68b9      	ldr	r1, [r7, #8]
 800b36e:	230f      	movs	r3, #15
 800b370:	18fb      	adds	r3, r7, r3
 800b372:	781b      	ldrb	r3, [r3, #0]
 800b374:	0018      	movs	r0, r3
 800b376:	f000 fa8f 	bl	800b898 <ManageStateAttached_SNK>
 800b37a:	0003      	movs	r3, r0
 800b37c:	617b      	str	r3, [r7, #20]
 800b37e:	e000      	b.n	800b382 <CAD_StateMachine_SNK+0x82>
 800b380:	46c0      	nop			; (mov r8, r8)
 800b382:	697b      	ldr	r3, [r7, #20]
 800b384:	0018      	movs	r0, r3
 800b386:	46bd      	mov	sp, r7
 800b388:	b006      	add	sp, #24
 800b38a:	bd80      	pop	{r7, pc}
 800b38c:	200002ac 	.word	0x200002ac

0800b390 <CAD_StateMachine>:
 800b390:	b590      	push	{r4, r7, lr}
 800b392:	b089      	sub	sp, #36	; 0x24
 800b394:	af02      	add	r7, sp, #8
 800b396:	60b9      	str	r1, [r7, #8]
 800b398:	607a      	str	r2, [r7, #4]
 800b39a:	210f      	movs	r1, #15
 800b39c:	187b      	adds	r3, r7, r1
 800b39e:	1c02      	adds	r2, r0, #0
 800b3a0:	701a      	strb	r2, [r3, #0]
 800b3a2:	187b      	adds	r3, r7, r1
 800b3a4:	781a      	ldrb	r2, [r3, #0]
 800b3a6:	0013      	movs	r3, r2
 800b3a8:	005b      	lsls	r3, r3, #1
 800b3aa:	189b      	adds	r3, r3, r2
 800b3ac:	009b      	lsls	r3, r3, #2
 800b3ae:	4a7a      	ldr	r2, [pc, #488]	; (800b598 <CAD_StateMachine+0x208>)
 800b3b0:	189b      	adds	r3, r3, r2
 800b3b2:	613b      	str	r3, [r7, #16]
 800b3b4:	2302      	movs	r3, #2
 800b3b6:	617b      	str	r3, [r7, #20]
 800b3b8:	68bb      	ldr	r3, [r7, #8]
 800b3ba:	2200      	movs	r2, #0
 800b3bc:	701a      	strb	r2, [r3, #0]
 800b3be:	187b      	adds	r3, r7, r1
 800b3c0:	781a      	ldrb	r2, [r3, #0]
 800b3c2:	4976      	ldr	r1, [pc, #472]	; (800b59c <CAD_StateMachine+0x20c>)
 800b3c4:	0013      	movs	r3, r2
 800b3c6:	011b      	lsls	r3, r3, #4
 800b3c8:	1a9b      	subs	r3, r3, r2
 800b3ca:	009b      	lsls	r3, r3, #2
 800b3cc:	18cb      	adds	r3, r1, r3
 800b3ce:	3310      	adds	r3, #16
 800b3d0:	681b      	ldr	r3, [r3, #0]
 800b3d2:	781b      	ldrb	r3, [r3, #0]
 800b3d4:	2210      	movs	r2, #16
 800b3d6:	4013      	ands	r3, r2
 800b3d8:	b2db      	uxtb	r3, r3
 800b3da:	2b00      	cmp	r3, #0
 800b3dc:	d001      	beq.n	800b3e2 <CAD_StateMachine+0x52>
 800b3de:	697b      	ldr	r3, [r7, #20]
 800b3e0:	e0d6      	b.n	800b590 <CAD_StateMachine+0x200>
 800b3e2:	693b      	ldr	r3, [r7, #16]
 800b3e4:	781b      	ldrb	r3, [r3, #0]
 800b3e6:	227f      	movs	r2, #127	; 0x7f
 800b3e8:	4393      	bics	r3, r2
 800b3ea:	b2db      	uxtb	r3, r3
 800b3ec:	2b00      	cmp	r3, #0
 800b3ee:	d01b      	beq.n	800b428 <CAD_StateMachine+0x98>
 800b3f0:	693b      	ldr	r3, [r7, #16]
 800b3f2:	781a      	ldrb	r2, [r3, #0]
 800b3f4:	217f      	movs	r1, #127	; 0x7f
 800b3f6:	400a      	ands	r2, r1
 800b3f8:	701a      	strb	r2, [r3, #0]
 800b3fa:	693b      	ldr	r3, [r7, #16]
 800b3fc:	785a      	ldrb	r2, [r3, #1]
 800b3fe:	213e      	movs	r1, #62	; 0x3e
 800b400:	438a      	bics	r2, r1
 800b402:	1c11      	adds	r1, r2, #0
 800b404:	2218      	movs	r2, #24
 800b406:	430a      	orrs	r2, r1
 800b408:	705a      	strb	r2, [r3, #1]
 800b40a:	693b      	ldr	r3, [r7, #16]
 800b40c:	785b      	ldrb	r3, [r3, #1]
 800b40e:	069b      	lsls	r3, r3, #26
 800b410:	0edb      	lsrs	r3, r3, #27
 800b412:	b2db      	uxtb	r3, r3
 800b414:	001a      	movs	r2, r3
 800b416:	230f      	movs	r3, #15
 800b418:	18fb      	adds	r3, r7, r3
 800b41a:	7819      	ldrb	r1, [r3, #0]
 800b41c:	2300      	movs	r3, #0
 800b41e:	9300      	str	r3, [sp, #0]
 800b420:	2300      	movs	r3, #0
 800b422:	2005      	movs	r0, #5
 800b424:	f7ff fbe6 	bl	800abf4 <USBPD_TRACE_Add>
 800b428:	693b      	ldr	r3, [r7, #16]
 800b42a:	785b      	ldrb	r3, [r3, #1]
 800b42c:	069b      	lsls	r3, r3, #26
 800b42e:	0edb      	lsrs	r3, r3, #27
 800b430:	b2db      	uxtb	r3, r3
 800b432:	2b0d      	cmp	r3, #13
 800b434:	d05c      	beq.n	800b4f0 <CAD_StateMachine+0x160>
 800b436:	dc72      	bgt.n	800b51e <CAD_StateMachine+0x18e>
 800b438:	2b00      	cmp	r3, #0
 800b43a:	d002      	beq.n	800b442 <CAD_StateMachine+0xb2>
 800b43c:	2b0c      	cmp	r3, #12
 800b43e:	d02b      	beq.n	800b498 <CAD_StateMachine+0x108>
 800b440:	e06d      	b.n	800b51e <CAD_StateMachine+0x18e>
 800b442:	240f      	movs	r4, #15
 800b444:	193b      	adds	r3, r7, r4
 800b446:	781a      	ldrb	r2, [r3, #0]
 800b448:	4954      	ldr	r1, [pc, #336]	; (800b59c <CAD_StateMachine+0x20c>)
 800b44a:	0013      	movs	r3, r2
 800b44c:	011b      	lsls	r3, r3, #4
 800b44e:	1a9b      	subs	r3, r3, r2
 800b450:	009b      	lsls	r3, r3, #2
 800b452:	585b      	ldr	r3, [r3, r1]
 800b454:	0018      	movs	r0, r3
 800b456:	f7ff fdd5 	bl	800b004 <LL_UCPD_EnableIT_TypeCEventCC2>
 800b45a:	193b      	adds	r3, r7, r4
 800b45c:	781a      	ldrb	r2, [r3, #0]
 800b45e:	494f      	ldr	r1, [pc, #316]	; (800b59c <CAD_StateMachine+0x20c>)
 800b460:	0013      	movs	r3, r2
 800b462:	011b      	lsls	r3, r3, #4
 800b464:	1a9b      	subs	r3, r3, r2
 800b466:	009b      	lsls	r3, r3, #2
 800b468:	585b      	ldr	r3, [r3, r1]
 800b46a:	0018      	movs	r0, r3
 800b46c:	f7ff fdd9 	bl	800b022 <LL_UCPD_EnableIT_TypeCEventCC1>
 800b470:	193b      	adds	r3, r7, r4
 800b472:	781b      	ldrb	r3, [r3, #0]
 800b474:	2b00      	cmp	r3, #0
 800b476:	d106      	bne.n	800b486 <CAD_StateMachine+0xf6>
 800b478:	2102      	movs	r1, #2
 800b47a:	2008      	movs	r0, #8
 800b47c:	f7ff fd1c 	bl	800aeb8 <__NVIC_SetPriority>
 800b480:	2008      	movs	r0, #8
 800b482:	f7ff fcff 	bl	800ae84 <__NVIC_EnableIRQ>
 800b486:	693b      	ldr	r3, [r7, #16]
 800b488:	785a      	ldrb	r2, [r3, #1]
 800b48a:	213e      	movs	r1, #62	; 0x3e
 800b48c:	438a      	bics	r2, r1
 800b48e:	1c11      	adds	r1, r2, #0
 800b490:	2202      	movs	r2, #2
 800b492:	430a      	orrs	r2, r1
 800b494:	705a      	strb	r2, [r3, #1]
 800b496:	e04f      	b.n	800b538 <CAD_StateMachine+0x1a8>
 800b498:	240f      	movs	r4, #15
 800b49a:	193b      	adds	r3, r7, r4
 800b49c:	781b      	ldrb	r3, [r3, #0]
 800b49e:	0018      	movs	r0, r3
 800b4a0:	f001 fcfc 	bl	800ce9c <USBPDM1_EnterErrorRecovery>
 800b4a4:	193b      	adds	r3, r7, r4
 800b4a6:	781a      	ldrb	r2, [r3, #0]
 800b4a8:	493c      	ldr	r1, [pc, #240]	; (800b59c <CAD_StateMachine+0x20c>)
 800b4aa:	0013      	movs	r3, r2
 800b4ac:	011b      	lsls	r3, r3, #4
 800b4ae:	1a9b      	subs	r3, r3, r2
 800b4b0:	009b      	lsls	r3, r3, #2
 800b4b2:	18cb      	adds	r3, r1, r3
 800b4b4:	3334      	adds	r3, #52	; 0x34
 800b4b6:	2200      	movs	r2, #0
 800b4b8:	601a      	str	r2, [r3, #0]
 800b4ba:	687b      	ldr	r3, [r7, #4]
 800b4bc:	2200      	movs	r2, #0
 800b4be:	601a      	str	r2, [r3, #0]
 800b4c0:	693b      	ldr	r3, [r7, #16]
 800b4c2:	781a      	ldrb	r2, [r3, #0]
 800b4c4:	2103      	movs	r1, #3
 800b4c6:	438a      	bics	r2, r1
 800b4c8:	701a      	strb	r2, [r3, #0]
 800b4ca:	68bb      	ldr	r3, [r7, #8]
 800b4cc:	2201      	movs	r2, #1
 800b4ce:	701a      	strb	r2, [r3, #0]
 800b4d0:	f7fb ffde 	bl	8007490 <HAL_GetTick>
 800b4d4:	0002      	movs	r2, r0
 800b4d6:	693b      	ldr	r3, [r7, #16]
 800b4d8:	605a      	str	r2, [r3, #4]
 800b4da:	231a      	movs	r3, #26
 800b4dc:	617b      	str	r3, [r7, #20]
 800b4de:	693b      	ldr	r3, [r7, #16]
 800b4e0:	785a      	ldrb	r2, [r3, #1]
 800b4e2:	213e      	movs	r1, #62	; 0x3e
 800b4e4:	438a      	bics	r2, r1
 800b4e6:	1c11      	adds	r1, r2, #0
 800b4e8:	221a      	movs	r2, #26
 800b4ea:	430a      	orrs	r2, r1
 800b4ec:	705a      	strb	r2, [r3, #1]
 800b4ee:	e023      	b.n	800b538 <CAD_StateMachine+0x1a8>
 800b4f0:	f7fb ffce 	bl	8007490 <HAL_GetTick>
 800b4f4:	0002      	movs	r2, r0
 800b4f6:	693b      	ldr	r3, [r7, #16]
 800b4f8:	685b      	ldr	r3, [r3, #4]
 800b4fa:	1ad3      	subs	r3, r2, r3
 800b4fc:	2b1a      	cmp	r3, #26
 800b4fe:	d91a      	bls.n	800b536 <CAD_StateMachine+0x1a6>
 800b500:	230f      	movs	r3, #15
 800b502:	18fb      	adds	r3, r7, r3
 800b504:	781b      	ldrb	r3, [r3, #0]
 800b506:	0018      	movs	r0, r3
 800b508:	f001 fc18 	bl	800cd3c <USBPDM1_AssertRd>
 800b50c:	693b      	ldr	r3, [r7, #16]
 800b50e:	785a      	ldrb	r2, [r3, #1]
 800b510:	213e      	movs	r1, #62	; 0x3e
 800b512:	438a      	bics	r2, r1
 800b514:	1c11      	adds	r1, r2, #0
 800b516:	2202      	movs	r2, #2
 800b518:	430a      	orrs	r2, r1
 800b51a:	705a      	strb	r2, [r3, #1]
 800b51c:	e00b      	b.n	800b536 <CAD_StateMachine+0x1a6>
 800b51e:	693b      	ldr	r3, [r7, #16]
 800b520:	689b      	ldr	r3, [r3, #8]
 800b522:	687c      	ldr	r4, [r7, #4]
 800b524:	68b9      	ldr	r1, [r7, #8]
 800b526:	220f      	movs	r2, #15
 800b528:	18ba      	adds	r2, r7, r2
 800b52a:	7810      	ldrb	r0, [r2, #0]
 800b52c:	0022      	movs	r2, r4
 800b52e:	4798      	blx	r3
 800b530:	0003      	movs	r3, r0
 800b532:	617b      	str	r3, [r7, #20]
 800b534:	e000      	b.n	800b538 <CAD_StateMachine+0x1a8>
 800b536:	46c0      	nop			; (mov r8, r8)
 800b538:	693b      	ldr	r3, [r7, #16]
 800b53a:	785b      	ldrb	r3, [r3, #1]
 800b53c:	069b      	lsls	r3, r3, #26
 800b53e:	0edb      	lsrs	r3, r3, #27
 800b540:	b2da      	uxtb	r2, r3
 800b542:	693b      	ldr	r3, [r7, #16]
 800b544:	789b      	ldrb	r3, [r3, #2]
 800b546:	069b      	lsls	r3, r3, #26
 800b548:	0edb      	lsrs	r3, r3, #27
 800b54a:	b2db      	uxtb	r3, r3
 800b54c:	429a      	cmp	r2, r3
 800b54e:	d01e      	beq.n	800b58e <CAD_StateMachine+0x1fe>
 800b550:	693b      	ldr	r3, [r7, #16]
 800b552:	785b      	ldrb	r3, [r3, #1]
 800b554:	069b      	lsls	r3, r3, #26
 800b556:	0edb      	lsrs	r3, r3, #27
 800b558:	b2da      	uxtb	r2, r3
 800b55a:	693b      	ldr	r3, [r7, #16]
 800b55c:	211f      	movs	r1, #31
 800b55e:	400a      	ands	r2, r1
 800b560:	1890      	adds	r0, r2, r2
 800b562:	789a      	ldrb	r2, [r3, #2]
 800b564:	213e      	movs	r1, #62	; 0x3e
 800b566:	438a      	bics	r2, r1
 800b568:	1c11      	adds	r1, r2, #0
 800b56a:	1c02      	adds	r2, r0, #0
 800b56c:	430a      	orrs	r2, r1
 800b56e:	709a      	strb	r2, [r3, #2]
 800b570:	693b      	ldr	r3, [r7, #16]
 800b572:	785b      	ldrb	r3, [r3, #1]
 800b574:	069b      	lsls	r3, r3, #26
 800b576:	0edb      	lsrs	r3, r3, #27
 800b578:	b2db      	uxtb	r3, r3
 800b57a:	001a      	movs	r2, r3
 800b57c:	230f      	movs	r3, #15
 800b57e:	18fb      	adds	r3, r7, r3
 800b580:	7819      	ldrb	r1, [r3, #0]
 800b582:	2300      	movs	r3, #0
 800b584:	9300      	str	r3, [sp, #0]
 800b586:	2300      	movs	r3, #0
 800b588:	2005      	movs	r0, #5
 800b58a:	f7ff fb33 	bl	800abf4 <USBPD_TRACE_Add>
 800b58e:	697b      	ldr	r3, [r7, #20]
 800b590:	0018      	movs	r0, r3
 800b592:	46bd      	mov	sp, r7
 800b594:	b007      	add	sp, #28
 800b596:	bd90      	pop	{r4, r7, pc}
 800b598:	200002ac 	.word	0x200002ac
 800b59c:	200002c4 	.word	0x200002c4

0800b5a0 <CAD_Check_HW_SNK>:
 800b5a0:	b580      	push	{r7, lr}
 800b5a2:	b086      	sub	sp, #24
 800b5a4:	af00      	add	r7, sp, #0
 800b5a6:	0002      	movs	r2, r0
 800b5a8:	1dfb      	adds	r3, r7, #7
 800b5aa:	701a      	strb	r2, [r3, #0]
 800b5ac:	1dfb      	adds	r3, r7, #7
 800b5ae:	781a      	ldrb	r2, [r3, #0]
 800b5b0:	0013      	movs	r3, r2
 800b5b2:	005b      	lsls	r3, r3, #1
 800b5b4:	189b      	adds	r3, r3, r2
 800b5b6:	009b      	lsls	r3, r3, #2
 800b5b8:	4a45      	ldr	r2, [pc, #276]	; (800b6d0 <CAD_Check_HW_SNK+0x130>)
 800b5ba:	189b      	adds	r3, r3, r2
 800b5bc:	617b      	str	r3, [r7, #20]
 800b5be:	1dfb      	adds	r3, r7, #7
 800b5c0:	781a      	ldrb	r2, [r3, #0]
 800b5c2:	4944      	ldr	r1, [pc, #272]	; (800b6d4 <CAD_Check_HW_SNK+0x134>)
 800b5c4:	0013      	movs	r3, r2
 800b5c6:	011b      	lsls	r3, r3, #4
 800b5c8:	1a9b      	subs	r3, r3, r2
 800b5ca:	009b      	lsls	r3, r3, #2
 800b5cc:	585b      	ldr	r3, [r3, r1]
 800b5ce:	695a      	ldr	r2, [r3, #20]
 800b5d0:	23c0      	movs	r3, #192	; 0xc0
 800b5d2:	029b      	lsls	r3, r3, #10
 800b5d4:	4013      	ands	r3, r2
 800b5d6:	613b      	str	r3, [r7, #16]
 800b5d8:	1dfb      	adds	r3, r7, #7
 800b5da:	781a      	ldrb	r2, [r3, #0]
 800b5dc:	493d      	ldr	r1, [pc, #244]	; (800b6d4 <CAD_Check_HW_SNK+0x134>)
 800b5de:	0013      	movs	r3, r2
 800b5e0:	011b      	lsls	r3, r3, #4
 800b5e2:	1a9b      	subs	r3, r3, r2
 800b5e4:	009b      	lsls	r3, r3, #2
 800b5e6:	585b      	ldr	r3, [r3, r1]
 800b5e8:	695a      	ldr	r2, [r3, #20]
 800b5ea:	23c0      	movs	r3, #192	; 0xc0
 800b5ec:	031b      	lsls	r3, r3, #12
 800b5ee:	4013      	ands	r3, r2
 800b5f0:	60fb      	str	r3, [r7, #12]
 800b5f2:	697b      	ldr	r3, [r7, #20]
 800b5f4:	781a      	ldrb	r2, [r3, #0]
 800b5f6:	2103      	movs	r1, #3
 800b5f8:	438a      	bics	r2, r1
 800b5fa:	701a      	strb	r2, [r3, #0]
 800b5fc:	697b      	ldr	r3, [r7, #20]
 800b5fe:	781a      	ldrb	r2, [r3, #0]
 800b600:	211c      	movs	r1, #28
 800b602:	438a      	bics	r2, r1
 800b604:	701a      	strb	r2, [r3, #0]
 800b606:	693b      	ldr	r3, [r7, #16]
 800b608:	2b00      	cmp	r3, #0
 800b60a:	d02c      	beq.n	800b666 <CAD_Check_HW_SNK+0xc6>
 800b60c:	68fb      	ldr	r3, [r7, #12]
 800b60e:	2b00      	cmp	r3, #0
 800b610:	d129      	bne.n	800b666 <CAD_Check_HW_SNK+0xc6>
 800b612:	697b      	ldr	r3, [r7, #20]
 800b614:	781a      	ldrb	r2, [r3, #0]
 800b616:	211c      	movs	r1, #28
 800b618:	438a      	bics	r2, r1
 800b61a:	1c11      	adds	r1, r2, #0
 800b61c:	2204      	movs	r2, #4
 800b61e:	430a      	orrs	r2, r1
 800b620:	701a      	strb	r2, [r3, #0]
 800b622:	697b      	ldr	r3, [r7, #20]
 800b624:	781a      	ldrb	r2, [r3, #0]
 800b626:	2103      	movs	r1, #3
 800b628:	438a      	bics	r2, r1
 800b62a:	1c11      	adds	r1, r2, #0
 800b62c:	2201      	movs	r2, #1
 800b62e:	430a      	orrs	r2, r1
 800b630:	701a      	strb	r2, [r3, #0]
 800b632:	693b      	ldr	r3, [r7, #16]
 800b634:	0c18      	lsrs	r0, r3, #16
 800b636:	1dfb      	adds	r3, r7, #7
 800b638:	781a      	ldrb	r2, [r3, #0]
 800b63a:	4926      	ldr	r1, [pc, #152]	; (800b6d4 <CAD_Check_HW_SNK+0x134>)
 800b63c:	0013      	movs	r3, r2
 800b63e:	011b      	lsls	r3, r3, #4
 800b640:	1a9b      	subs	r3, r3, r2
 800b642:	009b      	lsls	r3, r3, #2
 800b644:	18cb      	adds	r3, r1, r3
 800b646:	3310      	adds	r3, #16
 800b648:	681b      	ldr	r3, [r3, #0]
 800b64a:	1c01      	adds	r1, r0, #0
 800b64c:	2203      	movs	r2, #3
 800b64e:	400a      	ands	r2, r1
 800b650:	b2d2      	uxtb	r2, r2
 800b652:	2103      	movs	r1, #3
 800b654:	400a      	ands	r2, r1
 800b656:	0090      	lsls	r0, r2, #2
 800b658:	789a      	ldrb	r2, [r3, #2]
 800b65a:	210c      	movs	r1, #12
 800b65c:	438a      	bics	r2, r1
 800b65e:	1c11      	adds	r1, r2, #0
 800b660:	1c02      	adds	r2, r0, #0
 800b662:	430a      	orrs	r2, r1
 800b664:	709a      	strb	r2, [r3, #2]
 800b666:	693b      	ldr	r3, [r7, #16]
 800b668:	2b00      	cmp	r3, #0
 800b66a:	d12c      	bne.n	800b6c6 <CAD_Check_HW_SNK+0x126>
 800b66c:	68fb      	ldr	r3, [r7, #12]
 800b66e:	2b00      	cmp	r3, #0
 800b670:	d029      	beq.n	800b6c6 <CAD_Check_HW_SNK+0x126>
 800b672:	697b      	ldr	r3, [r7, #20]
 800b674:	781a      	ldrb	r2, [r3, #0]
 800b676:	211c      	movs	r1, #28
 800b678:	438a      	bics	r2, r1
 800b67a:	1c11      	adds	r1, r2, #0
 800b67c:	2204      	movs	r2, #4
 800b67e:	430a      	orrs	r2, r1
 800b680:	701a      	strb	r2, [r3, #0]
 800b682:	697b      	ldr	r3, [r7, #20]
 800b684:	781a      	ldrb	r2, [r3, #0]
 800b686:	2103      	movs	r1, #3
 800b688:	438a      	bics	r2, r1
 800b68a:	1c11      	adds	r1, r2, #0
 800b68c:	2202      	movs	r2, #2
 800b68e:	430a      	orrs	r2, r1
 800b690:	701a      	strb	r2, [r3, #0]
 800b692:	68fb      	ldr	r3, [r7, #12]
 800b694:	0c98      	lsrs	r0, r3, #18
 800b696:	1dfb      	adds	r3, r7, #7
 800b698:	781a      	ldrb	r2, [r3, #0]
 800b69a:	490e      	ldr	r1, [pc, #56]	; (800b6d4 <CAD_Check_HW_SNK+0x134>)
 800b69c:	0013      	movs	r3, r2
 800b69e:	011b      	lsls	r3, r3, #4
 800b6a0:	1a9b      	subs	r3, r3, r2
 800b6a2:	009b      	lsls	r3, r3, #2
 800b6a4:	18cb      	adds	r3, r1, r3
 800b6a6:	3310      	adds	r3, #16
 800b6a8:	681b      	ldr	r3, [r3, #0]
 800b6aa:	1c01      	adds	r1, r0, #0
 800b6ac:	2203      	movs	r2, #3
 800b6ae:	400a      	ands	r2, r1
 800b6b0:	b2d2      	uxtb	r2, r2
 800b6b2:	2103      	movs	r1, #3
 800b6b4:	400a      	ands	r2, r1
 800b6b6:	0090      	lsls	r0, r2, #2
 800b6b8:	789a      	ldrb	r2, [r3, #2]
 800b6ba:	210c      	movs	r1, #12
 800b6bc:	438a      	bics	r2, r1
 800b6be:	1c11      	adds	r1, r2, #0
 800b6c0:	1c02      	adds	r2, r0, #0
 800b6c2:	430a      	orrs	r2, r1
 800b6c4:	709a      	strb	r2, [r3, #2]
 800b6c6:	46c0      	nop			; (mov r8, r8)
 800b6c8:	46bd      	mov	sp, r7
 800b6ca:	b006      	add	sp, #24
 800b6cc:	bd80      	pop	{r7, pc}
 800b6ce:	46c0      	nop			; (mov r8, r8)
 800b6d0:	200002ac 	.word	0x200002ac
 800b6d4:	200002c4 	.word	0x200002c4

0800b6d8 <ManageStateDetached_SNK>:
 800b6d8:	b580      	push	{r7, lr}
 800b6da:	b084      	sub	sp, #16
 800b6dc:	af00      	add	r7, sp, #0
 800b6de:	0002      	movs	r2, r0
 800b6e0:	1dfb      	adds	r3, r7, #7
 800b6e2:	701a      	strb	r2, [r3, #0]
 800b6e4:	1dfb      	adds	r3, r7, #7
 800b6e6:	781a      	ldrb	r2, [r3, #0]
 800b6e8:	0013      	movs	r3, r2
 800b6ea:	005b      	lsls	r3, r3, #1
 800b6ec:	189b      	adds	r3, r3, r2
 800b6ee:	009b      	lsls	r3, r3, #2
 800b6f0:	4a21      	ldr	r2, [pc, #132]	; (800b778 <ManageStateDetached_SNK+0xa0>)
 800b6f2:	189b      	adds	r3, r3, r2
 800b6f4:	60bb      	str	r3, [r7, #8]
 800b6f6:	2302      	movs	r3, #2
 800b6f8:	60fb      	str	r3, [r7, #12]
 800b6fa:	1dfb      	adds	r3, r7, #7
 800b6fc:	781b      	ldrb	r3, [r3, #0]
 800b6fe:	0018      	movs	r0, r3
 800b700:	f7ff ff4e 	bl	800b5a0 <CAD_Check_HW_SNK>
 800b704:	68bb      	ldr	r3, [r7, #8]
 800b706:	781b      	ldrb	r3, [r3, #0]
 800b708:	221c      	movs	r2, #28
 800b70a:	4013      	ands	r3, r2
 800b70c:	b2db      	uxtb	r3, r3
 800b70e:	2b00      	cmp	r3, #0
 800b710:	d103      	bne.n	800b71a <ManageStateDetached_SNK+0x42>
 800b712:	2301      	movs	r3, #1
 800b714:	425b      	negs	r3, r3
 800b716:	60fb      	str	r3, [r7, #12]
 800b718:	e029      	b.n	800b76e <ManageStateDetached_SNK+0x96>
 800b71a:	f7fb feb9 	bl	8007490 <HAL_GetTick>
 800b71e:	0002      	movs	r2, r0
 800b720:	68bb      	ldr	r3, [r7, #8]
 800b722:	605a      	str	r2, [r3, #4]
 800b724:	68bb      	ldr	r3, [r7, #8]
 800b726:	785a      	ldrb	r2, [r3, #1]
 800b728:	213e      	movs	r1, #62	; 0x3e
 800b72a:	438a      	bics	r2, r1
 800b72c:	1c11      	adds	r1, r2, #0
 800b72e:	2204      	movs	r2, #4
 800b730:	430a      	orrs	r2, r1
 800b732:	705a      	strb	r2, [r3, #1]
 800b734:	2001      	movs	r0, #1
 800b736:	f7fb feb5 	bl	80074a4 <HAL_Delay>
 800b73a:	1dfb      	adds	r3, r7, #7
 800b73c:	781b      	ldrb	r3, [r3, #0]
 800b73e:	0018      	movs	r0, r3
 800b740:	f7ff ff2e 	bl	800b5a0 <CAD_Check_HW_SNK>
 800b744:	68bb      	ldr	r3, [r7, #8]
 800b746:	781b      	ldrb	r3, [r3, #0]
 800b748:	221c      	movs	r2, #28
 800b74a:	4013      	ands	r3, r2
 800b74c:	b2db      	uxtb	r3, r3
 800b74e:	2b00      	cmp	r3, #0
 800b750:	d108      	bne.n	800b764 <ManageStateDetached_SNK+0x8c>
 800b752:	68bb      	ldr	r3, [r7, #8]
 800b754:	785a      	ldrb	r2, [r3, #1]
 800b756:	213e      	movs	r1, #62	; 0x3e
 800b758:	438a      	bics	r2, r1
 800b75a:	1c11      	adds	r1, r2, #0
 800b75c:	2202      	movs	r2, #2
 800b75e:	430a      	orrs	r2, r1
 800b760:	705a      	strb	r2, [r3, #1]
 800b762:	e004      	b.n	800b76e <ManageStateDetached_SNK+0x96>
 800b764:	1dfb      	adds	r3, r7, #7
 800b766:	781b      	ldrb	r3, [r3, #0]
 800b768:	0018      	movs	r0, r3
 800b76a:	f007 fac1 	bl	8012cf0 <BSP_USBPD_PWR_VBUSInit>
 800b76e:	68fb      	ldr	r3, [r7, #12]
 800b770:	0018      	movs	r0, r3
 800b772:	46bd      	mov	sp, r7
 800b774:	b004      	add	sp, #16
 800b776:	bd80      	pop	{r7, pc}
 800b778:	200002ac 	.word	0x200002ac

0800b77c <ManageStateAttachedWait_SNK>:
 800b77c:	b590      	push	{r4, r7, lr}
 800b77e:	b089      	sub	sp, #36	; 0x24
 800b780:	af00      	add	r7, sp, #0
 800b782:	60b9      	str	r1, [r7, #8]
 800b784:	607a      	str	r2, [r7, #4]
 800b786:	240f      	movs	r4, #15
 800b788:	193b      	adds	r3, r7, r4
 800b78a:	1c02      	adds	r2, r0, #0
 800b78c:	701a      	strb	r2, [r3, #0]
 800b78e:	193b      	adds	r3, r7, r4
 800b790:	781a      	ldrb	r2, [r3, #0]
 800b792:	0013      	movs	r3, r2
 800b794:	005b      	lsls	r3, r3, #1
 800b796:	189b      	adds	r3, r3, r2
 800b798:	009b      	lsls	r3, r3, #2
 800b79a:	4a3e      	ldr	r2, [pc, #248]	; (800b894 <ManageStateAttachedWait_SNK+0x118>)
 800b79c:	189b      	adds	r3, r3, r2
 800b79e:	61bb      	str	r3, [r7, #24]
 800b7a0:	2302      	movs	r3, #2
 800b7a2:	61fb      	str	r3, [r7, #28]
 800b7a4:	f7fb fe74 	bl	8007490 <HAL_GetTick>
 800b7a8:	0002      	movs	r2, r0
 800b7aa:	69bb      	ldr	r3, [r7, #24]
 800b7ac:	685b      	ldr	r3, [r3, #4]
 800b7ae:	1ad3      	subs	r3, r2, r3
 800b7b0:	617b      	str	r3, [r7, #20]
 800b7b2:	193b      	adds	r3, r7, r4
 800b7b4:	781b      	ldrb	r3, [r3, #0]
 800b7b6:	0018      	movs	r0, r3
 800b7b8:	f7ff fef2 	bl	800b5a0 <CAD_Check_HW_SNK>
 800b7bc:	69bb      	ldr	r3, [r7, #24]
 800b7be:	781b      	ldrb	r3, [r3, #0]
 800b7c0:	221c      	movs	r2, #28
 800b7c2:	4013      	ands	r3, r2
 800b7c4:	b2db      	uxtb	r3, r3
 800b7c6:	2b04      	cmp	r3, #4
 800b7c8:	d130      	bne.n	800b82c <ManageStateAttachedWait_SNK+0xb0>
 800b7ca:	697b      	ldr	r3, [r7, #20]
 800b7cc:	2b78      	cmp	r3, #120	; 0x78
 800b7ce:	d927      	bls.n	800b820 <ManageStateAttachedWait_SNK+0xa4>
 800b7d0:	193b      	adds	r3, r7, r4
 800b7d2:	781b      	ldrb	r3, [r3, #0]
 800b7d4:	2101      	movs	r1, #1
 800b7d6:	0018      	movs	r0, r3
 800b7d8:	f005 fb5a 	bl	8010e90 <USBPD_PWR_IF_GetVBUSStatus>
 800b7dc:	0003      	movs	r3, r0
 800b7de:	2b01      	cmp	r3, #1
 800b7e0:	d11e      	bne.n	800b820 <ManageStateAttachedWait_SNK+0xa4>
 800b7e2:	69bb      	ldr	r3, [r7, #24]
 800b7e4:	781b      	ldrb	r3, [r3, #0]
 800b7e6:	079b      	lsls	r3, r3, #30
 800b7e8:	0f9b      	lsrs	r3, r3, #30
 800b7ea:	b2db      	uxtb	r3, r3
 800b7ec:	001a      	movs	r2, r3
 800b7ee:	193b      	adds	r3, r7, r4
 800b7f0:	781b      	ldrb	r3, [r3, #0]
 800b7f2:	0011      	movs	r1, r2
 800b7f4:	0018      	movs	r0, r3
 800b7f6:	f001 fbf3 	bl	800cfe0 <HW_SignalAttachement>
 800b7fa:	69bb      	ldr	r3, [r7, #24]
 800b7fc:	785a      	ldrb	r2, [r3, #1]
 800b7fe:	213e      	movs	r1, #62	; 0x3e
 800b800:	438a      	bics	r2, r1
 800b802:	1c11      	adds	r1, r2, #0
 800b804:	2206      	movs	r2, #6
 800b806:	430a      	orrs	r2, r1
 800b808:	705a      	strb	r2, [r3, #1]
 800b80a:	68bb      	ldr	r3, [r7, #8]
 800b80c:	2202      	movs	r2, #2
 800b80e:	701a      	strb	r2, [r3, #0]
 800b810:	69bb      	ldr	r3, [r7, #24]
 800b812:	781b      	ldrb	r3, [r3, #0]
 800b814:	079b      	lsls	r3, r3, #30
 800b816:	0f9b      	lsrs	r3, r3, #30
 800b818:	b2db      	uxtb	r3, r3
 800b81a:	001a      	movs	r2, r3
 800b81c:	687b      	ldr	r3, [r7, #4]
 800b81e:	601a      	str	r2, [r3, #0]
 800b820:	69bb      	ldr	r3, [r7, #24]
 800b822:	781a      	ldrb	r2, [r3, #0]
 800b824:	2120      	movs	r1, #32
 800b826:	438a      	bics	r2, r1
 800b828:	701a      	strb	r2, [r3, #0]
 800b82a:	e02e      	b.n	800b88a <ManageStateAttachedWait_SNK+0x10e>
 800b82c:	69bb      	ldr	r3, [r7, #24]
 800b82e:	781b      	ldrb	r3, [r3, #0]
 800b830:	2220      	movs	r2, #32
 800b832:	4013      	ands	r3, r2
 800b834:	b2db      	uxtb	r3, r3
 800b836:	2b00      	cmp	r3, #0
 800b838:	d10c      	bne.n	800b854 <ManageStateAttachedWait_SNK+0xd8>
 800b83a:	f7fb fe29 	bl	8007490 <HAL_GetTick>
 800b83e:	0002      	movs	r2, r0
 800b840:	69bb      	ldr	r3, [r7, #24]
 800b842:	605a      	str	r2, [r3, #4]
 800b844:	69bb      	ldr	r3, [r7, #24]
 800b846:	781a      	ldrb	r2, [r3, #0]
 800b848:	2120      	movs	r1, #32
 800b84a:	430a      	orrs	r2, r1
 800b84c:	701a      	strb	r2, [r3, #0]
 800b84e:	230c      	movs	r3, #12
 800b850:	61fb      	str	r3, [r7, #28]
 800b852:	e01a      	b.n	800b88a <ManageStateAttachedWait_SNK+0x10e>
 800b854:	f7fb fe1c 	bl	8007490 <HAL_GetTick>
 800b858:	0002      	movs	r2, r0
 800b85a:	69bb      	ldr	r3, [r7, #24]
 800b85c:	685b      	ldr	r3, [r3, #4]
 800b85e:	1ad3      	subs	r3, r2, r3
 800b860:	2b0c      	cmp	r3, #12
 800b862:	d912      	bls.n	800b88a <ManageStateAttachedWait_SNK+0x10e>
 800b864:	69bb      	ldr	r3, [r7, #24]
 800b866:	781a      	ldrb	r2, [r3, #0]
 800b868:	2120      	movs	r1, #32
 800b86a:	438a      	bics	r2, r1
 800b86c:	701a      	strb	r2, [r3, #0]
 800b86e:	69bb      	ldr	r3, [r7, #24]
 800b870:	785a      	ldrb	r2, [r3, #1]
 800b872:	213e      	movs	r1, #62	; 0x3e
 800b874:	438a      	bics	r2, r1
 800b876:	1c11      	adds	r1, r2, #0
 800b878:	2202      	movs	r2, #2
 800b87a:	430a      	orrs	r2, r1
 800b87c:	705a      	strb	r2, [r3, #1]
 800b87e:	230f      	movs	r3, #15
 800b880:	18fb      	adds	r3, r7, r3
 800b882:	781b      	ldrb	r3, [r3, #0]
 800b884:	0018      	movs	r0, r3
 800b886:	f007 fa51 	bl	8012d2c <BSP_USBPD_PWR_VBUSDeInit>
 800b88a:	69fb      	ldr	r3, [r7, #28]
 800b88c:	0018      	movs	r0, r3
 800b88e:	46bd      	mov	sp, r7
 800b890:	b009      	add	sp, #36	; 0x24
 800b892:	bd90      	pop	{r4, r7, pc}
 800b894:	200002ac 	.word	0x200002ac

0800b898 <ManageStateAttached_SNK>:
 800b898:	b590      	push	{r4, r7, lr}
 800b89a:	b089      	sub	sp, #36	; 0x24
 800b89c:	af00      	add	r7, sp, #0
 800b89e:	60b9      	str	r1, [r7, #8]
 800b8a0:	607a      	str	r2, [r7, #4]
 800b8a2:	210f      	movs	r1, #15
 800b8a4:	187b      	adds	r3, r7, r1
 800b8a6:	1c02      	adds	r2, r0, #0
 800b8a8:	701a      	strb	r2, [r3, #0]
 800b8aa:	0008      	movs	r0, r1
 800b8ac:	183b      	adds	r3, r7, r0
 800b8ae:	781a      	ldrb	r2, [r3, #0]
 800b8b0:	0013      	movs	r3, r2
 800b8b2:	005b      	lsls	r3, r3, #1
 800b8b4:	189b      	adds	r3, r3, r2
 800b8b6:	009b      	lsls	r3, r3, #2
 800b8b8:	4a2e      	ldr	r2, [pc, #184]	; (800b974 <ManageStateAttached_SNK+0xdc>)
 800b8ba:	189b      	adds	r3, r3, r2
 800b8bc:	61bb      	str	r3, [r7, #24]
 800b8be:	2302      	movs	r3, #2
 800b8c0:	61fb      	str	r3, [r7, #28]
 800b8c2:	2300      	movs	r3, #0
 800b8c4:	617b      	str	r3, [r7, #20]
 800b8c6:	183b      	adds	r3, r7, r0
 800b8c8:	781a      	ldrb	r2, [r3, #0]
 800b8ca:	492b      	ldr	r1, [pc, #172]	; (800b978 <ManageStateAttached_SNK+0xe0>)
 800b8cc:	0013      	movs	r3, r2
 800b8ce:	011b      	lsls	r3, r3, #4
 800b8d0:	1a9b      	subs	r3, r3, r2
 800b8d2:	009b      	lsls	r3, r3, #2
 800b8d4:	18cb      	adds	r3, r1, r3
 800b8d6:	3334      	adds	r3, #52	; 0x34
 800b8d8:	681b      	ldr	r3, [r3, #0]
 800b8da:	2b01      	cmp	r3, #1
 800b8dc:	d10c      	bne.n	800b8f8 <ManageStateAttached_SNK+0x60>
 800b8de:	183b      	adds	r3, r7, r0
 800b8e0:	781a      	ldrb	r2, [r3, #0]
 800b8e2:	4925      	ldr	r1, [pc, #148]	; (800b978 <ManageStateAttached_SNK+0xe0>)
 800b8e4:	0013      	movs	r3, r2
 800b8e6:	011b      	lsls	r3, r3, #4
 800b8e8:	1a9b      	subs	r3, r3, r2
 800b8ea:	009b      	lsls	r3, r3, #2
 800b8ec:	585b      	ldr	r3, [r3, r1]
 800b8ee:	695a      	ldr	r2, [r3, #20]
 800b8f0:	23c0      	movs	r3, #192	; 0xc0
 800b8f2:	029b      	lsls	r3, r3, #10
 800b8f4:	4013      	ands	r3, r2
 800b8f6:	e00c      	b.n	800b912 <ManageStateAttached_SNK+0x7a>
 800b8f8:	230f      	movs	r3, #15
 800b8fa:	18fb      	adds	r3, r7, r3
 800b8fc:	781a      	ldrb	r2, [r3, #0]
 800b8fe:	491e      	ldr	r1, [pc, #120]	; (800b978 <ManageStateAttached_SNK+0xe0>)
 800b900:	0013      	movs	r3, r2
 800b902:	011b      	lsls	r3, r3, #4
 800b904:	1a9b      	subs	r3, r3, r2
 800b906:	009b      	lsls	r3, r3, #2
 800b908:	585b      	ldr	r3, [r3, r1]
 800b90a:	695a      	ldr	r2, [r3, #20]
 800b90c:	23c0      	movs	r3, #192	; 0xc0
 800b90e:	031b      	lsls	r3, r3, #12
 800b910:	4013      	ands	r3, r2
 800b912:	613b      	str	r3, [r7, #16]
 800b914:	240f      	movs	r4, #15
 800b916:	193b      	adds	r3, r7, r4
 800b918:	781b      	ldrb	r3, [r3, #0]
 800b91a:	2102      	movs	r1, #2
 800b91c:	0018      	movs	r0, r3
 800b91e:	f005 fab7 	bl	8010e90 <USBPD_PWR_IF_GetVBUSStatus>
 800b922:	0003      	movs	r3, r0
 800b924:	2b01      	cmp	r3, #1
 800b926:	d11e      	bne.n	800b966 <ManageStateAttached_SNK+0xce>
 800b928:	697a      	ldr	r2, [r7, #20]
 800b92a:	693b      	ldr	r3, [r7, #16]
 800b92c:	429a      	cmp	r2, r3
 800b92e:	d11a      	bne.n	800b966 <ManageStateAttached_SNK+0xce>
 800b930:	193b      	adds	r3, r7, r4
 800b932:	781b      	ldrb	r3, [r3, #0]
 800b934:	0018      	movs	r0, r3
 800b936:	f001 fcb5 	bl	800d2a4 <HW_SignalDetachment>
 800b93a:	69bb      	ldr	r3, [r7, #24]
 800b93c:	781a      	ldrb	r2, [r3, #0]
 800b93e:	211c      	movs	r1, #28
 800b940:	438a      	bics	r2, r1
 800b942:	701a      	strb	r2, [r3, #0]
 800b944:	69bb      	ldr	r3, [r7, #24]
 800b946:	785a      	ldrb	r2, [r3, #1]
 800b948:	213e      	movs	r1, #62	; 0x3e
 800b94a:	438a      	bics	r2, r1
 800b94c:	1c11      	adds	r1, r2, #0
 800b94e:	2202      	movs	r2, #2
 800b950:	430a      	orrs	r2, r1
 800b952:	705a      	strb	r2, [r3, #1]
 800b954:	68bb      	ldr	r3, [r7, #8]
 800b956:	2201      	movs	r2, #1
 800b958:	701a      	strb	r2, [r3, #0]
 800b95a:	687b      	ldr	r3, [r7, #4]
 800b95c:	2200      	movs	r2, #0
 800b95e:	601a      	str	r2, [r3, #0]
 800b960:	2300      	movs	r3, #0
 800b962:	61fb      	str	r3, [r7, #28]
 800b964:	e001      	b.n	800b96a <ManageStateAttached_SNK+0xd2>
 800b966:	230a      	movs	r3, #10
 800b968:	61fb      	str	r3, [r7, #28]
 800b96a:	69fb      	ldr	r3, [r7, #28]
 800b96c:	0018      	movs	r0, r3
 800b96e:	46bd      	mov	sp, r7
 800b970:	b009      	add	sp, #36	; 0x24
 800b972:	bd90      	pop	{r4, r7, pc}
 800b974:	200002ac 	.word	0x200002ac
 800b978:	200002c4 	.word	0x200002c4

0800b97c <LL_AHB1_GRP1_EnableClock>:
 800b97c:	b580      	push	{r7, lr}
 800b97e:	b084      	sub	sp, #16
 800b980:	af00      	add	r7, sp, #0
 800b982:	6078      	str	r0, [r7, #4]
 800b984:	4b07      	ldr	r3, [pc, #28]	; (800b9a4 <LL_AHB1_GRP1_EnableClock+0x28>)
 800b986:	6b99      	ldr	r1, [r3, #56]	; 0x38
 800b988:	4b06      	ldr	r3, [pc, #24]	; (800b9a4 <LL_AHB1_GRP1_EnableClock+0x28>)
 800b98a:	687a      	ldr	r2, [r7, #4]
 800b98c:	430a      	orrs	r2, r1
 800b98e:	639a      	str	r2, [r3, #56]	; 0x38
 800b990:	4b04      	ldr	r3, [pc, #16]	; (800b9a4 <LL_AHB1_GRP1_EnableClock+0x28>)
 800b992:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b994:	687a      	ldr	r2, [r7, #4]
 800b996:	4013      	ands	r3, r2
 800b998:	60fb      	str	r3, [r7, #12]
 800b99a:	68fb      	ldr	r3, [r7, #12]
 800b99c:	46c0      	nop			; (mov r8, r8)
 800b99e:	46bd      	mov	sp, r7
 800b9a0:	b004      	add	sp, #16
 800b9a2:	bd80      	pop	{r7, pc}
 800b9a4:	40021000 	.word	0x40021000

0800b9a8 <USBPD_HW_GetUSPDInstance>:
 800b9a8:	b580      	push	{r7, lr}
 800b9aa:	b082      	sub	sp, #8
 800b9ac:	af00      	add	r7, sp, #0
 800b9ae:	0002      	movs	r2, r0
 800b9b0:	1dfb      	adds	r3, r7, #7
 800b9b2:	701a      	strb	r2, [r3, #0]
 800b9b4:	4b02      	ldr	r3, [pc, #8]	; (800b9c0 <USBPD_HW_GetUSPDInstance+0x18>)
 800b9b6:	0018      	movs	r0, r3
 800b9b8:	46bd      	mov	sp, r7
 800b9ba:	b002      	add	sp, #8
 800b9bc:	bd80      	pop	{r7, pc}
 800b9be:	46c0      	nop			; (mov r8, r8)
 800b9c0:	4000a000 	.word	0x4000a000

0800b9c4 <USBPD_HW_Init_DMARxInstance>:
 800b9c4:	b590      	push	{r4, r7, lr}
 800b9c6:	b08f      	sub	sp, #60	; 0x3c
 800b9c8:	af00      	add	r7, sp, #0
 800b9ca:	0002      	movs	r2, r0
 800b9cc:	1dfb      	adds	r3, r7, #7
 800b9ce:	701a      	strb	r2, [r3, #0]
 800b9d0:	240c      	movs	r4, #12
 800b9d2:	193b      	adds	r3, r7, r4
 800b9d4:	0018      	movs	r0, r3
 800b9d6:	f7fe fc99 	bl	800a30c <LL_DMA_StructInit>
 800b9da:	193b      	adds	r3, r7, r4
 800b9dc:	2200      	movs	r2, #0
 800b9de:	609a      	str	r2, [r3, #8]
 800b9e0:	193b      	adds	r3, r7, r4
 800b9e2:	2200      	movs	r2, #0
 800b9e4:	60da      	str	r2, [r3, #12]
 800b9e6:	193b      	adds	r3, r7, r4
 800b9e8:	2200      	movs	r2, #0
 800b9ea:	611a      	str	r2, [r3, #16]
 800b9ec:	193b      	adds	r3, r7, r4
 800b9ee:	2280      	movs	r2, #128	; 0x80
 800b9f0:	615a      	str	r2, [r3, #20]
 800b9f2:	193b      	adds	r3, r7, r4
 800b9f4:	2200      	movs	r2, #0
 800b9f6:	619a      	str	r2, [r3, #24]
 800b9f8:	193b      	adds	r3, r7, r4
 800b9fa:	2200      	movs	r2, #0
 800b9fc:	61da      	str	r2, [r3, #28]
 800b9fe:	193b      	adds	r3, r7, r4
 800ba00:	2200      	movs	r2, #0
 800ba02:	621a      	str	r2, [r3, #32]
 800ba04:	193b      	adds	r3, r7, r4
 800ba06:	2200      	movs	r2, #0
 800ba08:	605a      	str	r2, [r3, #4]
 800ba0a:	193b      	adds	r3, r7, r4
 800ba0c:	2200      	movs	r2, #0
 800ba0e:	601a      	str	r2, [r3, #0]
 800ba10:	193b      	adds	r3, r7, r4
 800ba12:	2280      	movs	r2, #128	; 0x80
 800ba14:	0192      	lsls	r2, r2, #6
 800ba16:	629a      	str	r2, [r3, #40]	; 0x28
 800ba18:	1dfb      	adds	r3, r7, #7
 800ba1a:	781b      	ldrb	r3, [r3, #0]
 800ba1c:	2b00      	cmp	r3, #0
 800ba1e:	d10c      	bne.n	800ba3a <USBPD_HW_Init_DMARxInstance+0x76>
 800ba20:	2001      	movs	r0, #1
 800ba22:	f7ff ffab 	bl	800b97c <LL_AHB1_GRP1_EnableClock>
 800ba26:	193b      	adds	r3, r7, r4
 800ba28:	223a      	movs	r2, #58	; 0x3a
 800ba2a:	625a      	str	r2, [r3, #36]	; 0x24
 800ba2c:	193b      	adds	r3, r7, r4
 800ba2e:	4806      	ldr	r0, [pc, #24]	; (800ba48 <USBPD_HW_Init_DMARxInstance+0x84>)
 800ba30:	001a      	movs	r2, r3
 800ba32:	2100      	movs	r1, #0
 800ba34:	f7fe fc2a 	bl	800a28c <LL_DMA_Init>
 800ba38:	e000      	b.n	800ba3c <USBPD_HW_Init_DMARxInstance+0x78>
 800ba3a:	46c0      	nop			; (mov r8, r8)
 800ba3c:	4b03      	ldr	r3, [pc, #12]	; (800ba4c <USBPD_HW_Init_DMARxInstance+0x88>)
 800ba3e:	0018      	movs	r0, r3
 800ba40:	46bd      	mov	sp, r7
 800ba42:	b00f      	add	sp, #60	; 0x3c
 800ba44:	bd90      	pop	{r4, r7, pc}
 800ba46:	46c0      	nop			; (mov r8, r8)
 800ba48:	40020000 	.word	0x40020000
 800ba4c:	40020008 	.word	0x40020008

0800ba50 <USBPD_HW_DeInit_DMARxInstance>:
 800ba50:	b580      	push	{r7, lr}
 800ba52:	b082      	sub	sp, #8
 800ba54:	af00      	add	r7, sp, #0
 800ba56:	0002      	movs	r2, r0
 800ba58:	1dfb      	adds	r3, r7, #7
 800ba5a:	701a      	strb	r2, [r3, #0]
 800ba5c:	46c0      	nop			; (mov r8, r8)
 800ba5e:	46bd      	mov	sp, r7
 800ba60:	b002      	add	sp, #8
 800ba62:	bd80      	pop	{r7, pc}

0800ba64 <USBPD_HW_Init_DMATxInstance>:
 800ba64:	b590      	push	{r4, r7, lr}
 800ba66:	b08f      	sub	sp, #60	; 0x3c
 800ba68:	af00      	add	r7, sp, #0
 800ba6a:	0002      	movs	r2, r0
 800ba6c:	1dfb      	adds	r3, r7, #7
 800ba6e:	701a      	strb	r2, [r3, #0]
 800ba70:	240c      	movs	r4, #12
 800ba72:	193b      	adds	r3, r7, r4
 800ba74:	0018      	movs	r0, r3
 800ba76:	f7fe fc49 	bl	800a30c <LL_DMA_StructInit>
 800ba7a:	193b      	adds	r3, r7, r4
 800ba7c:	2210      	movs	r2, #16
 800ba7e:	609a      	str	r2, [r3, #8]
 800ba80:	193b      	adds	r3, r7, r4
 800ba82:	2200      	movs	r2, #0
 800ba84:	60da      	str	r2, [r3, #12]
 800ba86:	193b      	adds	r3, r7, r4
 800ba88:	2200      	movs	r2, #0
 800ba8a:	611a      	str	r2, [r3, #16]
 800ba8c:	193b      	adds	r3, r7, r4
 800ba8e:	2280      	movs	r2, #128	; 0x80
 800ba90:	615a      	str	r2, [r3, #20]
 800ba92:	193b      	adds	r3, r7, r4
 800ba94:	2200      	movs	r2, #0
 800ba96:	619a      	str	r2, [r3, #24]
 800ba98:	193b      	adds	r3, r7, r4
 800ba9a:	2200      	movs	r2, #0
 800ba9c:	61da      	str	r2, [r3, #28]
 800ba9e:	193b      	adds	r3, r7, r4
 800baa0:	2200      	movs	r2, #0
 800baa2:	621a      	str	r2, [r3, #32]
 800baa4:	193b      	adds	r3, r7, r4
 800baa6:	2200      	movs	r2, #0
 800baa8:	605a      	str	r2, [r3, #4]
 800baaa:	193b      	adds	r3, r7, r4
 800baac:	2200      	movs	r2, #0
 800baae:	601a      	str	r2, [r3, #0]
 800bab0:	1dfb      	adds	r3, r7, #7
 800bab2:	781b      	ldrb	r3, [r3, #0]
 800bab4:	2b00      	cmp	r3, #0
 800bab6:	d110      	bne.n	800bada <USBPD_HW_Init_DMATxInstance+0x76>
 800bab8:	2001      	movs	r0, #1
 800baba:	f7ff ff5f 	bl	800b97c <LL_AHB1_GRP1_EnableClock>
 800babe:	193b      	adds	r3, r7, r4
 800bac0:	223b      	movs	r2, #59	; 0x3b
 800bac2:	625a      	str	r2, [r3, #36]	; 0x24
 800bac4:	193b      	adds	r3, r7, r4
 800bac6:	2280      	movs	r2, #128	; 0x80
 800bac8:	0152      	lsls	r2, r2, #5
 800baca:	629a      	str	r2, [r3, #40]	; 0x28
 800bacc:	193b      	adds	r3, r7, r4
 800bace:	4806      	ldr	r0, [pc, #24]	; (800bae8 <USBPD_HW_Init_DMATxInstance+0x84>)
 800bad0:	001a      	movs	r2, r3
 800bad2:	2101      	movs	r1, #1
 800bad4:	f7fe fbda 	bl	800a28c <LL_DMA_Init>
 800bad8:	e000      	b.n	800badc <USBPD_HW_Init_DMATxInstance+0x78>
 800bada:	46c0      	nop			; (mov r8, r8)
 800badc:	4b03      	ldr	r3, [pc, #12]	; (800baec <USBPD_HW_Init_DMATxInstance+0x88>)
 800bade:	0018      	movs	r0, r3
 800bae0:	46bd      	mov	sp, r7
 800bae2:	b00f      	add	sp, #60	; 0x3c
 800bae4:	bd90      	pop	{r4, r7, pc}
 800bae6:	46c0      	nop			; (mov r8, r8)
 800bae8:	40020000 	.word	0x40020000
 800baec:	4002001c 	.word	0x4002001c

0800baf0 <USBPD_HW_DeInit_DMATxInstance>:
 800baf0:	b580      	push	{r7, lr}
 800baf2:	b082      	sub	sp, #8
 800baf4:	af00      	add	r7, sp, #0
 800baf6:	0002      	movs	r2, r0
 800baf8:	1dfb      	adds	r3, r7, #7
 800bafa:	701a      	strb	r2, [r3, #0]
 800bafc:	46c0      	nop			; (mov r8, r8)
 800bafe:	46bd      	mov	sp, r7
 800bb00:	b002      	add	sp, #8
 800bb02:	bd80      	pop	{r7, pc}

0800bb04 <USBPD_HW_SetFRSSignalling>:
 800bb04:	b580      	push	{r7, lr}
 800bb06:	b082      	sub	sp, #8
 800bb08:	af00      	add	r7, sp, #0
 800bb0a:	0002      	movs	r2, r0
 800bb0c:	1dfb      	adds	r3, r7, #7
 800bb0e:	701a      	strb	r2, [r3, #0]
 800bb10:	1dbb      	adds	r3, r7, #6
 800bb12:	1c0a      	adds	r2, r1, #0
 800bb14:	701a      	strb	r2, [r3, #0]
 800bb16:	46c0      	nop			; (mov r8, r8)
 800bb18:	46c0      	nop			; (mov r8, r8)
 800bb1a:	46bd      	mov	sp, r7
 800bb1c:	b002      	add	sp, #8
 800bb1e:	bd80      	pop	{r7, pc}

0800bb20 <LL_UCPD_ClearFlag_TypeCEventCC2>:
 800bb20:	b580      	push	{r7, lr}
 800bb22:	b082      	sub	sp, #8
 800bb24:	af00      	add	r7, sp, #0
 800bb26:	6078      	str	r0, [r7, #4]
 800bb28:	687b      	ldr	r3, [r7, #4]
 800bb2a:	699b      	ldr	r3, [r3, #24]
 800bb2c:	2280      	movs	r2, #128	; 0x80
 800bb2e:	0212      	lsls	r2, r2, #8
 800bb30:	431a      	orrs	r2, r3
 800bb32:	687b      	ldr	r3, [r7, #4]
 800bb34:	619a      	str	r2, [r3, #24]
 800bb36:	46c0      	nop			; (mov r8, r8)
 800bb38:	46bd      	mov	sp, r7
 800bb3a:	b002      	add	sp, #8
 800bb3c:	bd80      	pop	{r7, pc}

0800bb3e <LL_UCPD_ClearFlag_TypeCEventCC1>:
 800bb3e:	b580      	push	{r7, lr}
 800bb40:	b082      	sub	sp, #8
 800bb42:	af00      	add	r7, sp, #0
 800bb44:	6078      	str	r0, [r7, #4]
 800bb46:	687b      	ldr	r3, [r7, #4]
 800bb48:	699b      	ldr	r3, [r3, #24]
 800bb4a:	2280      	movs	r2, #128	; 0x80
 800bb4c:	01d2      	lsls	r2, r2, #7
 800bb4e:	431a      	orrs	r2, r3
 800bb50:	687b      	ldr	r3, [r7, #4]
 800bb52:	619a      	str	r2, [r3, #24]
 800bb54:	46c0      	nop			; (mov r8, r8)
 800bb56:	46bd      	mov	sp, r7
 800bb58:	b002      	add	sp, #8
 800bb5a:	bd80      	pop	{r7, pc}

0800bb5c <LL_UCPD_ClearFlag_RxMsgEnd>:
 800bb5c:	b580      	push	{r7, lr}
 800bb5e:	b082      	sub	sp, #8
 800bb60:	af00      	add	r7, sp, #0
 800bb62:	6078      	str	r0, [r7, #4]
 800bb64:	687b      	ldr	r3, [r7, #4]
 800bb66:	699b      	ldr	r3, [r3, #24]
 800bb68:	2280      	movs	r2, #128	; 0x80
 800bb6a:	0152      	lsls	r2, r2, #5
 800bb6c:	431a      	orrs	r2, r3
 800bb6e:	687b      	ldr	r3, [r7, #4]
 800bb70:	619a      	str	r2, [r3, #24]
 800bb72:	46c0      	nop			; (mov r8, r8)
 800bb74:	46bd      	mov	sp, r7
 800bb76:	b002      	add	sp, #8
 800bb78:	bd80      	pop	{r7, pc}

0800bb7a <LL_UCPD_ClearFlag_RxOvr>:
 800bb7a:	b580      	push	{r7, lr}
 800bb7c:	b082      	sub	sp, #8
 800bb7e:	af00      	add	r7, sp, #0
 800bb80:	6078      	str	r0, [r7, #4]
 800bb82:	687b      	ldr	r3, [r7, #4]
 800bb84:	699b      	ldr	r3, [r3, #24]
 800bb86:	2280      	movs	r2, #128	; 0x80
 800bb88:	0112      	lsls	r2, r2, #4
 800bb8a:	431a      	orrs	r2, r3
 800bb8c:	687b      	ldr	r3, [r7, #4]
 800bb8e:	619a      	str	r2, [r3, #24]
 800bb90:	46c0      	nop			; (mov r8, r8)
 800bb92:	46bd      	mov	sp, r7
 800bb94:	b002      	add	sp, #8
 800bb96:	bd80      	pop	{r7, pc}

0800bb98 <LL_UCPD_ClearFlag_RxHRST>:
 800bb98:	b580      	push	{r7, lr}
 800bb9a:	b082      	sub	sp, #8
 800bb9c:	af00      	add	r7, sp, #0
 800bb9e:	6078      	str	r0, [r7, #4]
 800bba0:	687b      	ldr	r3, [r7, #4]
 800bba2:	699b      	ldr	r3, [r3, #24]
 800bba4:	2280      	movs	r2, #128	; 0x80
 800bba6:	00d2      	lsls	r2, r2, #3
 800bba8:	431a      	orrs	r2, r3
 800bbaa:	687b      	ldr	r3, [r7, #4]
 800bbac:	619a      	str	r2, [r3, #24]
 800bbae:	46c0      	nop			; (mov r8, r8)
 800bbb0:	46bd      	mov	sp, r7
 800bbb2:	b002      	add	sp, #8
 800bbb4:	bd80      	pop	{r7, pc}

0800bbb6 <LL_UCPD_ClearFlag_RxOrderSet>:
 800bbb6:	b580      	push	{r7, lr}
 800bbb8:	b082      	sub	sp, #8
 800bbba:	af00      	add	r7, sp, #0
 800bbbc:	6078      	str	r0, [r7, #4]
 800bbbe:	687b      	ldr	r3, [r7, #4]
 800bbc0:	699b      	ldr	r3, [r3, #24]
 800bbc2:	2280      	movs	r2, #128	; 0x80
 800bbc4:	0092      	lsls	r2, r2, #2
 800bbc6:	431a      	orrs	r2, r3
 800bbc8:	687b      	ldr	r3, [r7, #4]
 800bbca:	619a      	str	r2, [r3, #24]
 800bbcc:	46c0      	nop			; (mov r8, r8)
 800bbce:	46bd      	mov	sp, r7
 800bbd0:	b002      	add	sp, #8
 800bbd2:	bd80      	pop	{r7, pc}

0800bbd4 <LL_UCPD_ClearFlag_TxUND>:
 800bbd4:	b580      	push	{r7, lr}
 800bbd6:	b082      	sub	sp, #8
 800bbd8:	af00      	add	r7, sp, #0
 800bbda:	6078      	str	r0, [r7, #4]
 800bbdc:	687b      	ldr	r3, [r7, #4]
 800bbde:	699b      	ldr	r3, [r3, #24]
 800bbe0:	2240      	movs	r2, #64	; 0x40
 800bbe2:	431a      	orrs	r2, r3
 800bbe4:	687b      	ldr	r3, [r7, #4]
 800bbe6:	619a      	str	r2, [r3, #24]
 800bbe8:	46c0      	nop			; (mov r8, r8)
 800bbea:	46bd      	mov	sp, r7
 800bbec:	b002      	add	sp, #8
 800bbee:	bd80      	pop	{r7, pc}

0800bbf0 <LL_UCPD_ClearFlag_TxHRSTSENT>:
 800bbf0:	b580      	push	{r7, lr}
 800bbf2:	b082      	sub	sp, #8
 800bbf4:	af00      	add	r7, sp, #0
 800bbf6:	6078      	str	r0, [r7, #4]
 800bbf8:	687b      	ldr	r3, [r7, #4]
 800bbfa:	699b      	ldr	r3, [r3, #24]
 800bbfc:	2220      	movs	r2, #32
 800bbfe:	431a      	orrs	r2, r3
 800bc00:	687b      	ldr	r3, [r7, #4]
 800bc02:	619a      	str	r2, [r3, #24]
 800bc04:	46c0      	nop			; (mov r8, r8)
 800bc06:	46bd      	mov	sp, r7
 800bc08:	b002      	add	sp, #8
 800bc0a:	bd80      	pop	{r7, pc}

0800bc0c <LL_UCPD_ClearFlag_TxHRSTDISC>:
 800bc0c:	b580      	push	{r7, lr}
 800bc0e:	b082      	sub	sp, #8
 800bc10:	af00      	add	r7, sp, #0
 800bc12:	6078      	str	r0, [r7, #4]
 800bc14:	687b      	ldr	r3, [r7, #4]
 800bc16:	699b      	ldr	r3, [r3, #24]
 800bc18:	2210      	movs	r2, #16
 800bc1a:	431a      	orrs	r2, r3
 800bc1c:	687b      	ldr	r3, [r7, #4]
 800bc1e:	619a      	str	r2, [r3, #24]
 800bc20:	46c0      	nop			; (mov r8, r8)
 800bc22:	46bd      	mov	sp, r7
 800bc24:	b002      	add	sp, #8
 800bc26:	bd80      	pop	{r7, pc}

0800bc28 <LL_UCPD_ClearFlag_TxMSGABT>:
 800bc28:	b580      	push	{r7, lr}
 800bc2a:	b082      	sub	sp, #8
 800bc2c:	af00      	add	r7, sp, #0
 800bc2e:	6078      	str	r0, [r7, #4]
 800bc30:	687b      	ldr	r3, [r7, #4]
 800bc32:	699b      	ldr	r3, [r3, #24]
 800bc34:	2208      	movs	r2, #8
 800bc36:	431a      	orrs	r2, r3
 800bc38:	687b      	ldr	r3, [r7, #4]
 800bc3a:	619a      	str	r2, [r3, #24]
 800bc3c:	46c0      	nop			; (mov r8, r8)
 800bc3e:	46bd      	mov	sp, r7
 800bc40:	b002      	add	sp, #8
 800bc42:	bd80      	pop	{r7, pc}

0800bc44 <LL_UCPD_ClearFlag_TxMSGSENT>:
 800bc44:	b580      	push	{r7, lr}
 800bc46:	b082      	sub	sp, #8
 800bc48:	af00      	add	r7, sp, #0
 800bc4a:	6078      	str	r0, [r7, #4]
 800bc4c:	687b      	ldr	r3, [r7, #4]
 800bc4e:	699b      	ldr	r3, [r3, #24]
 800bc50:	2204      	movs	r2, #4
 800bc52:	431a      	orrs	r2, r3
 800bc54:	687b      	ldr	r3, [r7, #4]
 800bc56:	619a      	str	r2, [r3, #24]
 800bc58:	46c0      	nop			; (mov r8, r8)
 800bc5a:	46bd      	mov	sp, r7
 800bc5c:	b002      	add	sp, #8
 800bc5e:	bd80      	pop	{r7, pc}

0800bc60 <LL_UCPD_ClearFlag_TxMSGDISC>:
 800bc60:	b580      	push	{r7, lr}
 800bc62:	b082      	sub	sp, #8
 800bc64:	af00      	add	r7, sp, #0
 800bc66:	6078      	str	r0, [r7, #4]
 800bc68:	687b      	ldr	r3, [r7, #4]
 800bc6a:	699b      	ldr	r3, [r3, #24]
 800bc6c:	2202      	movs	r2, #2
 800bc6e:	431a      	orrs	r2, r3
 800bc70:	687b      	ldr	r3, [r7, #4]
 800bc72:	619a      	str	r2, [r3, #24]
 800bc74:	46c0      	nop			; (mov r8, r8)
 800bc76:	46bd      	mov	sp, r7
 800bc78:	b002      	add	sp, #8
 800bc7a:	bd80      	pop	{r7, pc}

0800bc7c <USBPD_PORT0_IRQHandler>:
 800bc7c:	b580      	push	{r7, lr}
 800bc7e:	af00      	add	r7, sp, #0
 800bc80:	2000      	movs	r0, #0
 800bc82:	f000 f803 	bl	800bc8c <PORTx_IRQHandler>
 800bc86:	46c0      	nop			; (mov r8, r8)
 800bc88:	46bd      	mov	sp, r7
 800bc8a:	bd80      	pop	{r7, pc}

0800bc8c <PORTx_IRQHandler>:
 800bc8c:	b580      	push	{r7, lr}
 800bc8e:	b084      	sub	sp, #16
 800bc90:	af00      	add	r7, sp, #0
 800bc92:	0002      	movs	r2, r0
 800bc94:	1dfb      	adds	r3, r7, #7
 800bc96:	701a      	strb	r2, [r3, #0]
 800bc98:	1dfb      	adds	r3, r7, #7
 800bc9a:	781a      	ldrb	r2, [r3, #0]
 800bc9c:	49a6      	ldr	r1, [pc, #664]	; (800bf38 <PORTx_IRQHandler+0x2ac>)
 800bc9e:	0013      	movs	r3, r2
 800bca0:	011b      	lsls	r3, r3, #4
 800bca2:	1a9b      	subs	r3, r3, r2
 800bca4:	009b      	lsls	r3, r3, #2
 800bca6:	585b      	ldr	r3, [r3, r1]
 800bca8:	60fb      	str	r3, [r7, #12]
 800bcaa:	68fb      	ldr	r3, [r7, #12]
 800bcac:	695b      	ldr	r3, [r3, #20]
 800bcae:	60bb      	str	r3, [r7, #8]
 800bcb0:	68fb      	ldr	r3, [r7, #12]
 800bcb2:	691b      	ldr	r3, [r3, #16]
 800bcb4:	68ba      	ldr	r2, [r7, #8]
 800bcb6:	4013      	ands	r3, r2
 800bcb8:	d100      	bne.n	800bcbc <PORTx_IRQHandler+0x30>
 800bcba:	e1fc      	b.n	800c0b6 <PORTx_IRQHandler+0x42a>
 800bcbc:	68bb      	ldr	r3, [r7, #8]
 800bcbe:	2202      	movs	r2, #2
 800bcc0:	4013      	ands	r3, r2
 800bcc2:	d03c      	beq.n	800bd3e <PORTx_IRQHandler+0xb2>
 800bcc4:	68fb      	ldr	r3, [r7, #12]
 800bcc6:	0018      	movs	r0, r3
 800bcc8:	f7ff ffca 	bl	800bc60 <LL_UCPD_ClearFlag_TxMSGDISC>
 800bccc:	1dfb      	adds	r3, r7, #7
 800bcce:	781a      	ldrb	r2, [r3, #0]
 800bcd0:	4999      	ldr	r1, [pc, #612]	; (800bf38 <PORTx_IRQHandler+0x2ac>)
 800bcd2:	0013      	movs	r3, r2
 800bcd4:	011b      	lsls	r3, r3, #4
 800bcd6:	1a9b      	subs	r3, r3, r2
 800bcd8:	009b      	lsls	r3, r3, #2
 800bcda:	18cb      	adds	r3, r1, r3
 800bcdc:	3304      	adds	r3, #4
 800bcde:	681b      	ldr	r3, [r3, #0]
 800bce0:	6819      	ldr	r1, [r3, #0]
 800bce2:	1dfb      	adds	r3, r7, #7
 800bce4:	781a      	ldrb	r2, [r3, #0]
 800bce6:	4894      	ldr	r0, [pc, #592]	; (800bf38 <PORTx_IRQHandler+0x2ac>)
 800bce8:	0013      	movs	r3, r2
 800bcea:	011b      	lsls	r3, r3, #4
 800bcec:	1a9b      	subs	r3, r3, r2
 800bcee:	009b      	lsls	r3, r3, #2
 800bcf0:	18c3      	adds	r3, r0, r3
 800bcf2:	3304      	adds	r3, #4
 800bcf4:	681b      	ldr	r3, [r3, #0]
 800bcf6:	2201      	movs	r2, #1
 800bcf8:	4391      	bics	r1, r2
 800bcfa:	000a      	movs	r2, r1
 800bcfc:	601a      	str	r2, [r3, #0]
 800bcfe:	46c0      	nop			; (mov r8, r8)
 800bd00:	1dfb      	adds	r3, r7, #7
 800bd02:	781a      	ldrb	r2, [r3, #0]
 800bd04:	498c      	ldr	r1, [pc, #560]	; (800bf38 <PORTx_IRQHandler+0x2ac>)
 800bd06:	0013      	movs	r3, r2
 800bd08:	011b      	lsls	r3, r3, #4
 800bd0a:	1a9b      	subs	r3, r3, r2
 800bd0c:	009b      	lsls	r3, r3, #2
 800bd0e:	18cb      	adds	r3, r1, r3
 800bd10:	3304      	adds	r3, #4
 800bd12:	681b      	ldr	r3, [r3, #0]
 800bd14:	681b      	ldr	r3, [r3, #0]
 800bd16:	2201      	movs	r2, #1
 800bd18:	4013      	ands	r3, r2
 800bd1a:	2b01      	cmp	r3, #1
 800bd1c:	d0f0      	beq.n	800bd00 <PORTx_IRQHandler+0x74>
 800bd1e:	1dfb      	adds	r3, r7, #7
 800bd20:	781a      	ldrb	r2, [r3, #0]
 800bd22:	4985      	ldr	r1, [pc, #532]	; (800bf38 <PORTx_IRQHandler+0x2ac>)
 800bd24:	0013      	movs	r3, r2
 800bd26:	011b      	lsls	r3, r3, #4
 800bd28:	1a9b      	subs	r3, r3, r2
 800bd2a:	009b      	lsls	r3, r3, #2
 800bd2c:	18cb      	adds	r3, r1, r3
 800bd2e:	3314      	adds	r3, #20
 800bd30:	681b      	ldr	r3, [r3, #0]
 800bd32:	1dfa      	adds	r2, r7, #7
 800bd34:	7812      	ldrb	r2, [r2, #0]
 800bd36:	2101      	movs	r1, #1
 800bd38:	0010      	movs	r0, r2
 800bd3a:	4798      	blx	r3
 800bd3c:	e1bb      	b.n	800c0b6 <PORTx_IRQHandler+0x42a>
 800bd3e:	68bb      	ldr	r3, [r7, #8]
 800bd40:	2204      	movs	r2, #4
 800bd42:	4013      	ands	r3, r2
 800bd44:	d03c      	beq.n	800bdc0 <PORTx_IRQHandler+0x134>
 800bd46:	68fb      	ldr	r3, [r7, #12]
 800bd48:	0018      	movs	r0, r3
 800bd4a:	f7ff ff7b 	bl	800bc44 <LL_UCPD_ClearFlag_TxMSGSENT>
 800bd4e:	1dfb      	adds	r3, r7, #7
 800bd50:	781a      	ldrb	r2, [r3, #0]
 800bd52:	4979      	ldr	r1, [pc, #484]	; (800bf38 <PORTx_IRQHandler+0x2ac>)
 800bd54:	0013      	movs	r3, r2
 800bd56:	011b      	lsls	r3, r3, #4
 800bd58:	1a9b      	subs	r3, r3, r2
 800bd5a:	009b      	lsls	r3, r3, #2
 800bd5c:	18cb      	adds	r3, r1, r3
 800bd5e:	3304      	adds	r3, #4
 800bd60:	681b      	ldr	r3, [r3, #0]
 800bd62:	6819      	ldr	r1, [r3, #0]
 800bd64:	1dfb      	adds	r3, r7, #7
 800bd66:	781a      	ldrb	r2, [r3, #0]
 800bd68:	4873      	ldr	r0, [pc, #460]	; (800bf38 <PORTx_IRQHandler+0x2ac>)
 800bd6a:	0013      	movs	r3, r2
 800bd6c:	011b      	lsls	r3, r3, #4
 800bd6e:	1a9b      	subs	r3, r3, r2
 800bd70:	009b      	lsls	r3, r3, #2
 800bd72:	18c3      	adds	r3, r0, r3
 800bd74:	3304      	adds	r3, #4
 800bd76:	681b      	ldr	r3, [r3, #0]
 800bd78:	2201      	movs	r2, #1
 800bd7a:	4391      	bics	r1, r2
 800bd7c:	000a      	movs	r2, r1
 800bd7e:	601a      	str	r2, [r3, #0]
 800bd80:	46c0      	nop			; (mov r8, r8)
 800bd82:	1dfb      	adds	r3, r7, #7
 800bd84:	781a      	ldrb	r2, [r3, #0]
 800bd86:	496c      	ldr	r1, [pc, #432]	; (800bf38 <PORTx_IRQHandler+0x2ac>)
 800bd88:	0013      	movs	r3, r2
 800bd8a:	011b      	lsls	r3, r3, #4
 800bd8c:	1a9b      	subs	r3, r3, r2
 800bd8e:	009b      	lsls	r3, r3, #2
 800bd90:	18cb      	adds	r3, r1, r3
 800bd92:	3304      	adds	r3, #4
 800bd94:	681b      	ldr	r3, [r3, #0]
 800bd96:	681b      	ldr	r3, [r3, #0]
 800bd98:	2201      	movs	r2, #1
 800bd9a:	4013      	ands	r3, r2
 800bd9c:	2b01      	cmp	r3, #1
 800bd9e:	d0f0      	beq.n	800bd82 <PORTx_IRQHandler+0xf6>
 800bda0:	1dfb      	adds	r3, r7, #7
 800bda2:	781a      	ldrb	r2, [r3, #0]
 800bda4:	4964      	ldr	r1, [pc, #400]	; (800bf38 <PORTx_IRQHandler+0x2ac>)
 800bda6:	0013      	movs	r3, r2
 800bda8:	011b      	lsls	r3, r3, #4
 800bdaa:	1a9b      	subs	r3, r3, r2
 800bdac:	009b      	lsls	r3, r3, #2
 800bdae:	18cb      	adds	r3, r1, r3
 800bdb0:	3314      	adds	r3, #20
 800bdb2:	681b      	ldr	r3, [r3, #0]
 800bdb4:	1dfa      	adds	r2, r7, #7
 800bdb6:	7812      	ldrb	r2, [r2, #0]
 800bdb8:	2100      	movs	r1, #0
 800bdba:	0010      	movs	r0, r2
 800bdbc:	4798      	blx	r3
 800bdbe:	e17a      	b.n	800c0b6 <PORTx_IRQHandler+0x42a>
 800bdc0:	68bb      	ldr	r3, [r7, #8]
 800bdc2:	2208      	movs	r2, #8
 800bdc4:	4013      	ands	r3, r2
 800bdc6:	d03c      	beq.n	800be42 <PORTx_IRQHandler+0x1b6>
 800bdc8:	68fb      	ldr	r3, [r7, #12]
 800bdca:	0018      	movs	r0, r3
 800bdcc:	f7ff ff2c 	bl	800bc28 <LL_UCPD_ClearFlag_TxMSGABT>
 800bdd0:	1dfb      	adds	r3, r7, #7
 800bdd2:	781a      	ldrb	r2, [r3, #0]
 800bdd4:	4958      	ldr	r1, [pc, #352]	; (800bf38 <PORTx_IRQHandler+0x2ac>)
 800bdd6:	0013      	movs	r3, r2
 800bdd8:	011b      	lsls	r3, r3, #4
 800bdda:	1a9b      	subs	r3, r3, r2
 800bddc:	009b      	lsls	r3, r3, #2
 800bdde:	18cb      	adds	r3, r1, r3
 800bde0:	3304      	adds	r3, #4
 800bde2:	681b      	ldr	r3, [r3, #0]
 800bde4:	6819      	ldr	r1, [r3, #0]
 800bde6:	1dfb      	adds	r3, r7, #7
 800bde8:	781a      	ldrb	r2, [r3, #0]
 800bdea:	4853      	ldr	r0, [pc, #332]	; (800bf38 <PORTx_IRQHandler+0x2ac>)
 800bdec:	0013      	movs	r3, r2
 800bdee:	011b      	lsls	r3, r3, #4
 800bdf0:	1a9b      	subs	r3, r3, r2
 800bdf2:	009b      	lsls	r3, r3, #2
 800bdf4:	18c3      	adds	r3, r0, r3
 800bdf6:	3304      	adds	r3, #4
 800bdf8:	681b      	ldr	r3, [r3, #0]
 800bdfa:	2201      	movs	r2, #1
 800bdfc:	4391      	bics	r1, r2
 800bdfe:	000a      	movs	r2, r1
 800be00:	601a      	str	r2, [r3, #0]
 800be02:	46c0      	nop			; (mov r8, r8)
 800be04:	1dfb      	adds	r3, r7, #7
 800be06:	781a      	ldrb	r2, [r3, #0]
 800be08:	494b      	ldr	r1, [pc, #300]	; (800bf38 <PORTx_IRQHandler+0x2ac>)
 800be0a:	0013      	movs	r3, r2
 800be0c:	011b      	lsls	r3, r3, #4
 800be0e:	1a9b      	subs	r3, r3, r2
 800be10:	009b      	lsls	r3, r3, #2
 800be12:	18cb      	adds	r3, r1, r3
 800be14:	3304      	adds	r3, #4
 800be16:	681b      	ldr	r3, [r3, #0]
 800be18:	681b      	ldr	r3, [r3, #0]
 800be1a:	2201      	movs	r2, #1
 800be1c:	4013      	ands	r3, r2
 800be1e:	2b01      	cmp	r3, #1
 800be20:	d0f0      	beq.n	800be04 <PORTx_IRQHandler+0x178>
 800be22:	1dfb      	adds	r3, r7, #7
 800be24:	781a      	ldrb	r2, [r3, #0]
 800be26:	4944      	ldr	r1, [pc, #272]	; (800bf38 <PORTx_IRQHandler+0x2ac>)
 800be28:	0013      	movs	r3, r2
 800be2a:	011b      	lsls	r3, r3, #4
 800be2c:	1a9b      	subs	r3, r3, r2
 800be2e:	009b      	lsls	r3, r3, #2
 800be30:	18cb      	adds	r3, r1, r3
 800be32:	3314      	adds	r3, #20
 800be34:	681b      	ldr	r3, [r3, #0]
 800be36:	1dfa      	adds	r2, r7, #7
 800be38:	7812      	ldrb	r2, [r2, #0]
 800be3a:	2102      	movs	r1, #2
 800be3c:	0010      	movs	r0, r2
 800be3e:	4798      	blx	r3
 800be40:	e139      	b.n	800c0b6 <PORTx_IRQHandler+0x42a>
 800be42:	68bb      	ldr	r3, [r7, #8]
 800be44:	2210      	movs	r2, #16
 800be46:	4013      	ands	r3, r2
 800be48:	d004      	beq.n	800be54 <PORTx_IRQHandler+0x1c8>
 800be4a:	68fb      	ldr	r3, [r7, #12]
 800be4c:	0018      	movs	r0, r3
 800be4e:	f7ff fedd 	bl	800bc0c <LL_UCPD_ClearFlag_TxHRSTDISC>
 800be52:	e130      	b.n	800c0b6 <PORTx_IRQHandler+0x42a>
 800be54:	68bb      	ldr	r3, [r7, #8]
 800be56:	2220      	movs	r2, #32
 800be58:	4013      	ands	r3, r2
 800be5a:	d013      	beq.n	800be84 <PORTx_IRQHandler+0x1f8>
 800be5c:	68fb      	ldr	r3, [r7, #12]
 800be5e:	0018      	movs	r0, r3
 800be60:	f7ff fec6 	bl	800bbf0 <LL_UCPD_ClearFlag_TxHRSTSENT>
 800be64:	1dfb      	adds	r3, r7, #7
 800be66:	781a      	ldrb	r2, [r3, #0]
 800be68:	4933      	ldr	r1, [pc, #204]	; (800bf38 <PORTx_IRQHandler+0x2ac>)
 800be6a:	0013      	movs	r3, r2
 800be6c:	011b      	lsls	r3, r3, #4
 800be6e:	1a9b      	subs	r3, r3, r2
 800be70:	009b      	lsls	r3, r3, #2
 800be72:	18cb      	adds	r3, r1, r3
 800be74:	3324      	adds	r3, #36	; 0x24
 800be76:	681b      	ldr	r3, [r3, #0]
 800be78:	1dfa      	adds	r2, r7, #7
 800be7a:	7812      	ldrb	r2, [r2, #0]
 800be7c:	2105      	movs	r1, #5
 800be7e:	0010      	movs	r0, r2
 800be80:	4798      	blx	r3
 800be82:	e118      	b.n	800c0b6 <PORTx_IRQHandler+0x42a>
 800be84:	68bb      	ldr	r3, [r7, #8]
 800be86:	2240      	movs	r2, #64	; 0x40
 800be88:	4013      	ands	r3, r2
 800be8a:	d004      	beq.n	800be96 <PORTx_IRQHandler+0x20a>
 800be8c:	68fb      	ldr	r3, [r7, #12]
 800be8e:	0018      	movs	r0, r3
 800be90:	f7ff fea0 	bl	800bbd4 <LL_UCPD_ClearFlag_TxUND>
 800be94:	e10f      	b.n	800c0b6 <PORTx_IRQHandler+0x42a>
 800be96:	68ba      	ldr	r2, [r7, #8]
 800be98:	2380      	movs	r3, #128	; 0x80
 800be9a:	009b      	lsls	r3, r3, #2
 800be9c:	4013      	ands	r3, r2
 800be9e:	d023      	beq.n	800bee8 <PORTx_IRQHandler+0x25c>
 800bea0:	68fb      	ldr	r3, [r7, #12]
 800bea2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bea4:	2b05      	cmp	r3, #5
 800bea6:	d10e      	bne.n	800bec6 <PORTx_IRQHandler+0x23a>
 800bea8:	1dfb      	adds	r3, r7, #7
 800beaa:	781a      	ldrb	r2, [r3, #0]
 800beac:	4922      	ldr	r1, [pc, #136]	; (800bf38 <PORTx_IRQHandler+0x2ac>)
 800beae:	0013      	movs	r3, r2
 800beb0:	011b      	lsls	r3, r3, #4
 800beb2:	1a9b      	subs	r3, r3, r2
 800beb4:	009b      	lsls	r3, r3, #2
 800beb6:	18cb      	adds	r3, r1, r3
 800beb8:	331c      	adds	r3, #28
 800beba:	681b      	ldr	r3, [r3, #0]
 800bebc:	1dfa      	adds	r2, r7, #7
 800bebe:	7812      	ldrb	r2, [r2, #0]
 800bec0:	2106      	movs	r1, #6
 800bec2:	0010      	movs	r0, r2
 800bec4:	4798      	blx	r3
 800bec6:	68fb      	ldr	r3, [r7, #12]
 800bec8:	0018      	movs	r0, r3
 800beca:	f7ff fe74 	bl	800bbb6 <LL_UCPD_ClearFlag_RxOrderSet>
 800bece:	1dfb      	adds	r3, r7, #7
 800bed0:	781a      	ldrb	r2, [r3, #0]
 800bed2:	4919      	ldr	r1, [pc, #100]	; (800bf38 <PORTx_IRQHandler+0x2ac>)
 800bed4:	2038      	movs	r0, #56	; 0x38
 800bed6:	0013      	movs	r3, r2
 800bed8:	011b      	lsls	r3, r3, #4
 800beda:	1a9b      	subs	r3, r3, r2
 800bedc:	009b      	lsls	r3, r3, #2
 800bede:	18cb      	adds	r3, r1, r3
 800bee0:	181b      	adds	r3, r3, r0
 800bee2:	2201      	movs	r2, #1
 800bee4:	701a      	strb	r2, [r3, #0]
 800bee6:	e0e6      	b.n	800c0b6 <PORTx_IRQHandler+0x42a>
 800bee8:	68ba      	ldr	r2, [r7, #8]
 800beea:	2380      	movs	r3, #128	; 0x80
 800beec:	00db      	lsls	r3, r3, #3
 800beee:	4013      	ands	r3, r2
 800bef0:	d013      	beq.n	800bf1a <PORTx_IRQHandler+0x28e>
 800bef2:	1dfb      	adds	r3, r7, #7
 800bef4:	781a      	ldrb	r2, [r3, #0]
 800bef6:	4910      	ldr	r1, [pc, #64]	; (800bf38 <PORTx_IRQHandler+0x2ac>)
 800bef8:	0013      	movs	r3, r2
 800befa:	011b      	lsls	r3, r3, #4
 800befc:	1a9b      	subs	r3, r3, r2
 800befe:	009b      	lsls	r3, r3, #2
 800bf00:	18cb      	adds	r3, r1, r3
 800bf02:	331c      	adds	r3, #28
 800bf04:	681b      	ldr	r3, [r3, #0]
 800bf06:	1dfa      	adds	r2, r7, #7
 800bf08:	7812      	ldrb	r2, [r2, #0]
 800bf0a:	2105      	movs	r1, #5
 800bf0c:	0010      	movs	r0, r2
 800bf0e:	4798      	blx	r3
 800bf10:	68fb      	ldr	r3, [r7, #12]
 800bf12:	0018      	movs	r0, r3
 800bf14:	f7ff fe40 	bl	800bb98 <LL_UCPD_ClearFlag_RxHRST>
 800bf18:	e0cd      	b.n	800c0b6 <PORTx_IRQHandler+0x42a>
 800bf1a:	68ba      	ldr	r2, [r7, #8]
 800bf1c:	2380      	movs	r3, #128	; 0x80
 800bf1e:	011b      	lsls	r3, r3, #4
 800bf20:	4013      	ands	r3, r2
 800bf22:	d00d      	beq.n	800bf40 <PORTx_IRQHandler+0x2b4>
 800bf24:	1dfb      	adds	r3, r7, #7
 800bf26:	781b      	ldrb	r3, [r3, #0]
 800bf28:	4a04      	ldr	r2, [pc, #16]	; (800bf3c <PORTx_IRQHandler+0x2b0>)
 800bf2a:	2101      	movs	r1, #1
 800bf2c:	54d1      	strb	r1, [r2, r3]
 800bf2e:	68fb      	ldr	r3, [r7, #12]
 800bf30:	0018      	movs	r0, r3
 800bf32:	f7ff fe22 	bl	800bb7a <LL_UCPD_ClearFlag_RxOvr>
 800bf36:	e0be      	b.n	800c0b6 <PORTx_IRQHandler+0x42a>
 800bf38:	200002c4 	.word	0x200002c4
 800bf3c:	200002b8 	.word	0x200002b8
 800bf40:	68ba      	ldr	r2, [r7, #8]
 800bf42:	2380      	movs	r3, #128	; 0x80
 800bf44:	015b      	lsls	r3, r3, #5
 800bf46:	4013      	ands	r3, r2
 800bf48:	d100      	bne.n	800bf4c <PORTx_IRQHandler+0x2c0>
 800bf4a:	e096      	b.n	800c07a <PORTx_IRQHandler+0x3ee>
 800bf4c:	1dfb      	adds	r3, r7, #7
 800bf4e:	781a      	ldrb	r2, [r3, #0]
 800bf50:	495a      	ldr	r1, [pc, #360]	; (800c0bc <PORTx_IRQHandler+0x430>)
 800bf52:	2038      	movs	r0, #56	; 0x38
 800bf54:	0013      	movs	r3, r2
 800bf56:	011b      	lsls	r3, r3, #4
 800bf58:	1a9b      	subs	r3, r3, r2
 800bf5a:	009b      	lsls	r3, r3, #2
 800bf5c:	18cb      	adds	r3, r1, r3
 800bf5e:	181b      	adds	r3, r3, r0
 800bf60:	2200      	movs	r2, #0
 800bf62:	701a      	strb	r2, [r3, #0]
 800bf64:	68fb      	ldr	r3, [r7, #12]
 800bf66:	0018      	movs	r0, r3
 800bf68:	f7ff fdf8 	bl	800bb5c <LL_UCPD_ClearFlag_RxMsgEnd>
 800bf6c:	1dfb      	adds	r3, r7, #7
 800bf6e:	781a      	ldrb	r2, [r3, #0]
 800bf70:	4952      	ldr	r1, [pc, #328]	; (800c0bc <PORTx_IRQHandler+0x430>)
 800bf72:	0013      	movs	r3, r2
 800bf74:	011b      	lsls	r3, r3, #4
 800bf76:	1a9b      	subs	r3, r3, r2
 800bf78:	009b      	lsls	r3, r3, #2
 800bf7a:	18cb      	adds	r3, r1, r3
 800bf7c:	3308      	adds	r3, #8
 800bf7e:	681b      	ldr	r3, [r3, #0]
 800bf80:	6819      	ldr	r1, [r3, #0]
 800bf82:	1dfb      	adds	r3, r7, #7
 800bf84:	781a      	ldrb	r2, [r3, #0]
 800bf86:	484d      	ldr	r0, [pc, #308]	; (800c0bc <PORTx_IRQHandler+0x430>)
 800bf88:	0013      	movs	r3, r2
 800bf8a:	011b      	lsls	r3, r3, #4
 800bf8c:	1a9b      	subs	r3, r3, r2
 800bf8e:	009b      	lsls	r3, r3, #2
 800bf90:	18c3      	adds	r3, r0, r3
 800bf92:	3308      	adds	r3, #8
 800bf94:	681b      	ldr	r3, [r3, #0]
 800bf96:	2201      	movs	r2, #1
 800bf98:	4391      	bics	r1, r2
 800bf9a:	000a      	movs	r2, r1
 800bf9c:	601a      	str	r2, [r3, #0]
 800bf9e:	46c0      	nop			; (mov r8, r8)
 800bfa0:	1dfb      	adds	r3, r7, #7
 800bfa2:	781a      	ldrb	r2, [r3, #0]
 800bfa4:	4945      	ldr	r1, [pc, #276]	; (800c0bc <PORTx_IRQHandler+0x430>)
 800bfa6:	0013      	movs	r3, r2
 800bfa8:	011b      	lsls	r3, r3, #4
 800bfaa:	1a9b      	subs	r3, r3, r2
 800bfac:	009b      	lsls	r3, r3, #2
 800bfae:	18cb      	adds	r3, r1, r3
 800bfb0:	3308      	adds	r3, #8
 800bfb2:	681b      	ldr	r3, [r3, #0]
 800bfb4:	681b      	ldr	r3, [r3, #0]
 800bfb6:	2201      	movs	r2, #1
 800bfb8:	4013      	ands	r3, r2
 800bfba:	2b01      	cmp	r3, #1
 800bfbc:	d0f0      	beq.n	800bfa0 <PORTx_IRQHandler+0x314>
 800bfbe:	1dfb      	adds	r3, r7, #7
 800bfc0:	781a      	ldrb	r2, [r3, #0]
 800bfc2:	493e      	ldr	r1, [pc, #248]	; (800c0bc <PORTx_IRQHandler+0x430>)
 800bfc4:	0013      	movs	r3, r2
 800bfc6:	011b      	lsls	r3, r3, #4
 800bfc8:	1a9b      	subs	r3, r3, r2
 800bfca:	009b      	lsls	r3, r3, #2
 800bfcc:	18cb      	adds	r3, r1, r3
 800bfce:	3330      	adds	r3, #48	; 0x30
 800bfd0:	6818      	ldr	r0, [r3, #0]
 800bfd2:	1dfb      	adds	r3, r7, #7
 800bfd4:	781a      	ldrb	r2, [r3, #0]
 800bfd6:	4939      	ldr	r1, [pc, #228]	; (800c0bc <PORTx_IRQHandler+0x430>)
 800bfd8:	0013      	movs	r3, r2
 800bfda:	011b      	lsls	r3, r3, #4
 800bfdc:	1a9b      	subs	r3, r3, r2
 800bfde:	009b      	lsls	r3, r3, #2
 800bfe0:	18cb      	adds	r3, r1, r3
 800bfe2:	3308      	adds	r3, #8
 800bfe4:	681b      	ldr	r3, [r3, #0]
 800bfe6:	0002      	movs	r2, r0
 800bfe8:	60da      	str	r2, [r3, #12]
 800bfea:	1dfb      	adds	r3, r7, #7
 800bfec:	781a      	ldrb	r2, [r3, #0]
 800bfee:	4933      	ldr	r1, [pc, #204]	; (800c0bc <PORTx_IRQHandler+0x430>)
 800bff0:	0013      	movs	r3, r2
 800bff2:	011b      	lsls	r3, r3, #4
 800bff4:	1a9b      	subs	r3, r3, r2
 800bff6:	009b      	lsls	r3, r3, #2
 800bff8:	18cb      	adds	r3, r1, r3
 800bffa:	3308      	adds	r3, #8
 800bffc:	681b      	ldr	r3, [r3, #0]
 800bffe:	2284      	movs	r2, #132	; 0x84
 800c000:	0052      	lsls	r2, r2, #1
 800c002:	605a      	str	r2, [r3, #4]
 800c004:	1dfb      	adds	r3, r7, #7
 800c006:	781a      	ldrb	r2, [r3, #0]
 800c008:	492c      	ldr	r1, [pc, #176]	; (800c0bc <PORTx_IRQHandler+0x430>)
 800c00a:	0013      	movs	r3, r2
 800c00c:	011b      	lsls	r3, r3, #4
 800c00e:	1a9b      	subs	r3, r3, r2
 800c010:	009b      	lsls	r3, r3, #2
 800c012:	18cb      	adds	r3, r1, r3
 800c014:	3308      	adds	r3, #8
 800c016:	681b      	ldr	r3, [r3, #0]
 800c018:	6819      	ldr	r1, [r3, #0]
 800c01a:	1dfb      	adds	r3, r7, #7
 800c01c:	781a      	ldrb	r2, [r3, #0]
 800c01e:	4827      	ldr	r0, [pc, #156]	; (800c0bc <PORTx_IRQHandler+0x430>)
 800c020:	0013      	movs	r3, r2
 800c022:	011b      	lsls	r3, r3, #4
 800c024:	1a9b      	subs	r3, r3, r2
 800c026:	009b      	lsls	r3, r3, #2
 800c028:	18c3      	adds	r3, r0, r3
 800c02a:	3308      	adds	r3, #8
 800c02c:	681b      	ldr	r3, [r3, #0]
 800c02e:	2201      	movs	r2, #1
 800c030:	430a      	orrs	r2, r1
 800c032:	601a      	str	r2, [r3, #0]
 800c034:	68ba      	ldr	r2, [r7, #8]
 800c036:	2380      	movs	r3, #128	; 0x80
 800c038:	019b      	lsls	r3, r3, #6
 800c03a:	4013      	ands	r3, r2
 800c03c:	d117      	bne.n	800c06e <PORTx_IRQHandler+0x3e2>
 800c03e:	1dfb      	adds	r3, r7, #7
 800c040:	781b      	ldrb	r3, [r3, #0]
 800c042:	4a1f      	ldr	r2, [pc, #124]	; (800c0c0 <PORTx_IRQHandler+0x434>)
 800c044:	5cd3      	ldrb	r3, [r2, r3]
 800c046:	2b00      	cmp	r3, #0
 800c048:	d111      	bne.n	800c06e <PORTx_IRQHandler+0x3e2>
 800c04a:	1dfb      	adds	r3, r7, #7
 800c04c:	781a      	ldrb	r2, [r3, #0]
 800c04e:	491b      	ldr	r1, [pc, #108]	; (800c0bc <PORTx_IRQHandler+0x430>)
 800c050:	0013      	movs	r3, r2
 800c052:	011b      	lsls	r3, r3, #4
 800c054:	1a9b      	subs	r3, r3, r2
 800c056:	009b      	lsls	r3, r3, #2
 800c058:	18cb      	adds	r3, r1, r3
 800c05a:	3320      	adds	r3, #32
 800c05c:	681a      	ldr	r2, [r3, #0]
 800c05e:	68fb      	ldr	r3, [r7, #12]
 800c060:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c062:	2107      	movs	r1, #7
 800c064:	4019      	ands	r1, r3
 800c066:	1dfb      	adds	r3, r7, #7
 800c068:	781b      	ldrb	r3, [r3, #0]
 800c06a:	0018      	movs	r0, r3
 800c06c:	4790      	blx	r2
 800c06e:	1dfb      	adds	r3, r7, #7
 800c070:	781b      	ldrb	r3, [r3, #0]
 800c072:	4a13      	ldr	r2, [pc, #76]	; (800c0c0 <PORTx_IRQHandler+0x434>)
 800c074:	2100      	movs	r1, #0
 800c076:	54d1      	strb	r1, [r2, r3]
 800c078:	e01d      	b.n	800c0b6 <PORTx_IRQHandler+0x42a>
 800c07a:	68ba      	ldr	r2, [r7, #8]
 800c07c:	2380      	movs	r3, #128	; 0x80
 800c07e:	01db      	lsls	r3, r3, #7
 800c080:	4013      	ands	r3, r2
 800c082:	d104      	bne.n	800c08e <PORTx_IRQHandler+0x402>
 800c084:	68ba      	ldr	r2, [r7, #8]
 800c086:	2380      	movs	r3, #128	; 0x80
 800c088:	021b      	lsls	r3, r3, #8
 800c08a:	4013      	ands	r3, r2
 800c08c:	d013      	beq.n	800c0b6 <PORTx_IRQHandler+0x42a>
 800c08e:	68fb      	ldr	r3, [r7, #12]
 800c090:	0018      	movs	r0, r3
 800c092:	f7ff fd54 	bl	800bb3e <LL_UCPD_ClearFlag_TypeCEventCC1>
 800c096:	68fb      	ldr	r3, [r7, #12]
 800c098:	0018      	movs	r0, r3
 800c09a:	f7ff fd41 	bl	800bb20 <LL_UCPD_ClearFlag_TypeCEventCC2>
 800c09e:	1dfb      	adds	r3, r7, #7
 800c0a0:	781a      	ldrb	r2, [r3, #0]
 800c0a2:	4906      	ldr	r1, [pc, #24]	; (800c0bc <PORTx_IRQHandler+0x430>)
 800c0a4:	0013      	movs	r3, r2
 800c0a6:	011b      	lsls	r3, r3, #4
 800c0a8:	1a9b      	subs	r3, r3, r2
 800c0aa:	009b      	lsls	r3, r3, #2
 800c0ac:	18cb      	adds	r3, r1, r3
 800c0ae:	332c      	adds	r3, #44	; 0x2c
 800c0b0:	681b      	ldr	r3, [r3, #0]
 800c0b2:	4798      	blx	r3
 800c0b4:	46c0      	nop			; (mov r8, r8)
 800c0b6:	46bd      	mov	sp, r7
 800c0b8:	b004      	add	sp, #16
 800c0ba:	bd80      	pop	{r7, pc}
 800c0bc:	200002c4 	.word	0x200002c4
 800c0c0:	200002b8 	.word	0x200002b8

0800c0c4 <USBPD_PHY_Init>:
 800c0c4:	b590      	push	{r4, r7, lr}
 800c0c6:	b085      	sub	sp, #20
 800c0c8:	af00      	add	r7, sp, #0
 800c0ca:	60b9      	str	r1, [r7, #8]
 800c0cc:	607a      	str	r2, [r7, #4]
 800c0ce:	603b      	str	r3, [r7, #0]
 800c0d0:	240f      	movs	r4, #15
 800c0d2:	193b      	adds	r3, r7, r4
 800c0d4:	1c02      	adds	r2, r0, #0
 800c0d6:	701a      	strb	r2, [r3, #0]
 800c0d8:	193b      	adds	r3, r7, r4
 800c0da:	781a      	ldrb	r2, [r3, #0]
 800c0dc:	68bb      	ldr	r3, [r7, #8]
 800c0de:	6919      	ldr	r1, [r3, #16]
 800c0e0:	4830      	ldr	r0, [pc, #192]	; (800c1a4 <USBPD_PHY_Init+0xe0>)
 800c0e2:	0013      	movs	r3, r2
 800c0e4:	011b      	lsls	r3, r3, #4
 800c0e6:	1a9b      	subs	r3, r3, r2
 800c0e8:	009b      	lsls	r3, r3, #2
 800c0ea:	18c3      	adds	r3, r0, r3
 800c0ec:	3314      	adds	r3, #20
 800c0ee:	6019      	str	r1, [r3, #0]
 800c0f0:	193b      	adds	r3, r7, r4
 800c0f2:	781a      	ldrb	r2, [r3, #0]
 800c0f4:	68bb      	ldr	r3, [r7, #8]
 800c0f6:	68d9      	ldr	r1, [r3, #12]
 800c0f8:	482a      	ldr	r0, [pc, #168]	; (800c1a4 <USBPD_PHY_Init+0xe0>)
 800c0fa:	0013      	movs	r3, r2
 800c0fc:	011b      	lsls	r3, r3, #4
 800c0fe:	1a9b      	subs	r3, r3, r2
 800c100:	009b      	lsls	r3, r3, #2
 800c102:	18c3      	adds	r3, r0, r3
 800c104:	3318      	adds	r3, #24
 800c106:	6019      	str	r1, [r3, #0]
 800c108:	193b      	adds	r3, r7, r4
 800c10a:	781a      	ldrb	r2, [r3, #0]
 800c10c:	68bb      	ldr	r3, [r7, #8]
 800c10e:	6859      	ldr	r1, [r3, #4]
 800c110:	4824      	ldr	r0, [pc, #144]	; (800c1a4 <USBPD_PHY_Init+0xe0>)
 800c112:	0013      	movs	r3, r2
 800c114:	011b      	lsls	r3, r3, #4
 800c116:	1a9b      	subs	r3, r3, r2
 800c118:	009b      	lsls	r3, r3, #2
 800c11a:	18c3      	adds	r3, r0, r3
 800c11c:	331c      	adds	r3, #28
 800c11e:	6019      	str	r1, [r3, #0]
 800c120:	193b      	adds	r3, r7, r4
 800c122:	781a      	ldrb	r2, [r3, #0]
 800c124:	491f      	ldr	r1, [pc, #124]	; (800c1a4 <USBPD_PHY_Init+0xe0>)
 800c126:	0013      	movs	r3, r2
 800c128:	011b      	lsls	r3, r3, #4
 800c12a:	1a9b      	subs	r3, r3, r2
 800c12c:	009b      	lsls	r3, r3, #2
 800c12e:	18cb      	adds	r3, r1, r3
 800c130:	3320      	adds	r3, #32
 800c132:	4a1d      	ldr	r2, [pc, #116]	; (800c1a8 <USBPD_PHY_Init+0xe4>)
 800c134:	601a      	str	r2, [r3, #0]
 800c136:	193b      	adds	r3, r7, r4
 800c138:	781a      	ldrb	r2, [r3, #0]
 800c13a:	68bb      	ldr	r3, [r7, #8]
 800c13c:	6899      	ldr	r1, [r3, #8]
 800c13e:	4819      	ldr	r0, [pc, #100]	; (800c1a4 <USBPD_PHY_Init+0xe0>)
 800c140:	0013      	movs	r3, r2
 800c142:	011b      	lsls	r3, r3, #4
 800c144:	1a9b      	subs	r3, r3, r2
 800c146:	009b      	lsls	r3, r3, #2
 800c148:	18c3      	adds	r3, r0, r3
 800c14a:	3324      	adds	r3, #36	; 0x24
 800c14c:	6019      	str	r1, [r3, #0]
 800c14e:	193b      	adds	r3, r7, r4
 800c150:	781a      	ldrb	r2, [r3, #0]
 800c152:	68bb      	ldr	r3, [r7, #8]
 800c154:	6959      	ldr	r1, [r3, #20]
 800c156:	4813      	ldr	r0, [pc, #76]	; (800c1a4 <USBPD_PHY_Init+0xe0>)
 800c158:	0013      	movs	r3, r2
 800c15a:	011b      	lsls	r3, r3, #4
 800c15c:	1a9b      	subs	r3, r3, r2
 800c15e:	009b      	lsls	r3, r3, #2
 800c160:	18c3      	adds	r3, r0, r3
 800c162:	3328      	adds	r3, #40	; 0x28
 800c164:	6019      	str	r1, [r3, #0]
 800c166:	193b      	adds	r3, r7, r4
 800c168:	781a      	ldrb	r2, [r3, #0]
 800c16a:	490e      	ldr	r1, [pc, #56]	; (800c1a4 <USBPD_PHY_Init+0xe0>)
 800c16c:	0013      	movs	r3, r2
 800c16e:	011b      	lsls	r3, r3, #4
 800c170:	1a9b      	subs	r3, r3, r2
 800c172:	009b      	lsls	r3, r3, #2
 800c174:	18cb      	adds	r3, r1, r3
 800c176:	3330      	adds	r3, #48	; 0x30
 800c178:	687a      	ldr	r2, [r7, #4]
 800c17a:	601a      	str	r2, [r3, #0]
 800c17c:	193b      	adds	r3, r7, r4
 800c17e:	781b      	ldrb	r3, [r3, #0]
 800c180:	4a0a      	ldr	r2, [pc, #40]	; (800c1ac <USBPD_PHY_Init+0xe8>)
 800c182:	00db      	lsls	r3, r3, #3
 800c184:	18d3      	adds	r3, r2, r3
 800c186:	3304      	adds	r3, #4
 800c188:	6a3a      	ldr	r2, [r7, #32]
 800c18a:	601a      	str	r2, [r3, #0]
 800c18c:	193b      	adds	r3, r7, r4
 800c18e:	781a      	ldrb	r2, [r3, #0]
 800c190:	68bb      	ldr	r3, [r7, #8]
 800c192:	6819      	ldr	r1, [r3, #0]
 800c194:	4b05      	ldr	r3, [pc, #20]	; (800c1ac <USBPD_PHY_Init+0xe8>)
 800c196:	00d2      	lsls	r2, r2, #3
 800c198:	50d1      	str	r1, [r2, r3]
 800c19a:	2300      	movs	r3, #0
 800c19c:	0018      	movs	r0, r3
 800c19e:	46bd      	mov	sp, r7
 800c1a0:	b005      	add	sp, #20
 800c1a2:	bd90      	pop	{r4, r7, pc}
 800c1a4:	200002c4 	.word	0x200002c4
 800c1a8:	0800c395 	.word	0x0800c395
 800c1ac:	200002bc 	.word	0x200002bc

0800c1b0 <USBPD_PHY_GetRetryTimerValue>:
 800c1b0:	b580      	push	{r7, lr}
 800c1b2:	b082      	sub	sp, #8
 800c1b4:	af00      	add	r7, sp, #0
 800c1b6:	0002      	movs	r2, r0
 800c1b8:	1dfb      	adds	r3, r7, #7
 800c1ba:	701a      	strb	r2, [r3, #0]
 800c1bc:	4b02      	ldr	r3, [pc, #8]	; (800c1c8 <USBPD_PHY_GetRetryTimerValue+0x18>)
 800c1be:	0018      	movs	r0, r3
 800c1c0:	46bd      	mov	sp, r7
 800c1c2:	b002      	add	sp, #8
 800c1c4:	bd80      	pop	{r7, pc}
 800c1c6:	46c0      	nop			; (mov r8, r8)
 800c1c8:	00000389 	.word	0x00000389

0800c1cc <USBPD_PHY_GetMinGOODCRCTimerValue>:
 800c1cc:	b580      	push	{r7, lr}
 800c1ce:	b082      	sub	sp, #8
 800c1d0:	af00      	add	r7, sp, #0
 800c1d2:	0002      	movs	r2, r0
 800c1d4:	1dfb      	adds	r3, r7, #7
 800c1d6:	701a      	strb	r2, [r3, #0]
 800c1d8:	231e      	movs	r3, #30
 800c1da:	0018      	movs	r0, r3
 800c1dc:	46bd      	mov	sp, r7
 800c1de:	b002      	add	sp, #8
 800c1e0:	bd80      	pop	{r7, pc}

0800c1e2 <USBPD_PHY_Reset>:
 800c1e2:	b580      	push	{r7, lr}
 800c1e4:	b082      	sub	sp, #8
 800c1e6:	af00      	add	r7, sp, #0
 800c1e8:	0002      	movs	r2, r0
 800c1ea:	1dfb      	adds	r3, r7, #7
 800c1ec:	701a      	strb	r2, [r3, #0]
 800c1ee:	46c0      	nop			; (mov r8, r8)
 800c1f0:	46bd      	mov	sp, r7
 800c1f2:	b002      	add	sp, #8
 800c1f4:	bd80      	pop	{r7, pc}

0800c1f6 <USBPD_PHY_ResetRequest>:
 800c1f6:	b580      	push	{r7, lr}
 800c1f8:	b082      	sub	sp, #8
 800c1fa:	af00      	add	r7, sp, #0
 800c1fc:	0002      	movs	r2, r0
 800c1fe:	1dfb      	adds	r3, r7, #7
 800c200:	701a      	strb	r2, [r3, #0]
 800c202:	1dbb      	adds	r3, r7, #6
 800c204:	1c0a      	adds	r2, r1, #0
 800c206:	701a      	strb	r2, [r3, #0]
 800c208:	1dbb      	adds	r3, r7, #6
 800c20a:	7819      	ldrb	r1, [r3, #0]
 800c20c:	1dfb      	adds	r3, r7, #7
 800c20e:	7818      	ldrb	r0, [r3, #0]
 800c210:	2300      	movs	r3, #0
 800c212:	2200      	movs	r2, #0
 800c214:	f000 f805 	bl	800c222 <USBPD_PHY_SendMessage>
 800c218:	0003      	movs	r3, r0
 800c21a:	0018      	movs	r0, r3
 800c21c:	46bd      	mov	sp, r7
 800c21e:	b002      	add	sp, #8
 800c220:	bd80      	pop	{r7, pc}

0800c222 <USBPD_PHY_SendMessage>:
 800c222:	b590      	push	{r4, r7, lr}
 800c224:	b083      	sub	sp, #12
 800c226:	af00      	add	r7, sp, #0
 800c228:	0004      	movs	r4, r0
 800c22a:	0008      	movs	r0, r1
 800c22c:	603a      	str	r2, [r7, #0]
 800c22e:	0019      	movs	r1, r3
 800c230:	1dfb      	adds	r3, r7, #7
 800c232:	1c22      	adds	r2, r4, #0
 800c234:	701a      	strb	r2, [r3, #0]
 800c236:	1dbb      	adds	r3, r7, #6
 800c238:	1c02      	adds	r2, r0, #0
 800c23a:	701a      	strb	r2, [r3, #0]
 800c23c:	1d3b      	adds	r3, r7, #4
 800c23e:	1c0a      	adds	r2, r1, #0
 800c240:	801a      	strh	r2, [r3, #0]
 800c242:	1d3b      	adds	r3, r7, #4
 800c244:	881c      	ldrh	r4, [r3, #0]
 800c246:	683a      	ldr	r2, [r7, #0]
 800c248:	1dbb      	adds	r3, r7, #6
 800c24a:	7819      	ldrb	r1, [r3, #0]
 800c24c:	1dfb      	adds	r3, r7, #7
 800c24e:	7818      	ldrb	r0, [r3, #0]
 800c250:	0023      	movs	r3, r4
 800c252:	f000 fb2f 	bl	800c8b4 <USBPD_HW_IF_SendBuffer>
 800c256:	0003      	movs	r3, r0
 800c258:	0018      	movs	r0, r3
 800c25a:	46bd      	mov	sp, r7
 800c25c:	b003      	add	sp, #12
 800c25e:	bd90      	pop	{r4, r7, pc}

0800c260 <USBPD_PHY_Send_BIST_Pattern>:
 800c260:	b580      	push	{r7, lr}
 800c262:	b082      	sub	sp, #8
 800c264:	af00      	add	r7, sp, #0
 800c266:	0002      	movs	r2, r0
 800c268:	1dfb      	adds	r3, r7, #7
 800c26a:	701a      	strb	r2, [r3, #0]
 800c26c:	1dfb      	adds	r3, r7, #7
 800c26e:	781b      	ldrb	r3, [r3, #0]
 800c270:	0018      	movs	r0, r3
 800c272:	f000 fc7d 	bl	800cb70 <USBPD_HW_IF_Send_BIST_Pattern>
 800c276:	2300      	movs	r3, #0
 800c278:	0018      	movs	r0, r3
 800c27a:	46bd      	mov	sp, r7
 800c27c:	b002      	add	sp, #8
 800c27e:	bd80      	pop	{r7, pc}

0800c280 <USBPD_PHY_ExitTransmit>:
 800c280:	b580      	push	{r7, lr}
 800c282:	b082      	sub	sp, #8
 800c284:	af00      	add	r7, sp, #0
 800c286:	0002      	movs	r2, r0
 800c288:	1dfb      	adds	r3, r7, #7
 800c28a:	701a      	strb	r2, [r3, #0]
 800c28c:	1dbb      	adds	r3, r7, #6
 800c28e:	1c0a      	adds	r2, r1, #0
 800c290:	701a      	strb	r2, [r3, #0]
 800c292:	1dbb      	adds	r3, r7, #6
 800c294:	781b      	ldrb	r3, [r3, #0]
 800c296:	2b07      	cmp	r3, #7
 800c298:	d104      	bne.n	800c2a4 <USBPD_PHY_ExitTransmit+0x24>
 800c29a:	1dfb      	adds	r3, r7, #7
 800c29c:	781b      	ldrb	r3, [r3, #0]
 800c29e:	0018      	movs	r0, r3
 800c2a0:	f000 fad0 	bl	800c844 <USBPD_HW_IF_StopBISTMode2>
 800c2a4:	2300      	movs	r3, #0
 800c2a6:	0018      	movs	r0, r3
 800c2a8:	46bd      	mov	sp, r7
 800c2aa:	b002      	add	sp, #8
 800c2ac:	bd80      	pop	{r7, pc}

0800c2ae <USBPD_PHY_SetResistor_SinkTxNG>:
 800c2ae:	b580      	push	{r7, lr}
 800c2b0:	b082      	sub	sp, #8
 800c2b2:	af00      	add	r7, sp, #0
 800c2b4:	0002      	movs	r2, r0
 800c2b6:	1dfb      	adds	r3, r7, #7
 800c2b8:	701a      	strb	r2, [r3, #0]
 800c2ba:	1dfb      	adds	r3, r7, #7
 800c2bc:	781b      	ldrb	r3, [r3, #0]
 800c2be:	0018      	movs	r0, r3
 800c2c0:	f001 f87e 	bl	800d3c0 <USBPD_HW_IF_SetResistor_SinkTxNG>
 800c2c4:	46c0      	nop			; (mov r8, r8)
 800c2c6:	46bd      	mov	sp, r7
 800c2c8:	b002      	add	sp, #8
 800c2ca:	bd80      	pop	{r7, pc}

0800c2cc <USBPD_PHY_SetResistor_SinkTxOK>:
 800c2cc:	b580      	push	{r7, lr}
 800c2ce:	b082      	sub	sp, #8
 800c2d0:	af00      	add	r7, sp, #0
 800c2d2:	0002      	movs	r2, r0
 800c2d4:	1dfb      	adds	r3, r7, #7
 800c2d6:	701a      	strb	r2, [r3, #0]
 800c2d8:	1dfb      	adds	r3, r7, #7
 800c2da:	781b      	ldrb	r3, [r3, #0]
 800c2dc:	0018      	movs	r0, r3
 800c2de:	f001 f889 	bl	800d3f4 <USBPD_HW_IF_SetResistor_SinkTxOK>
 800c2e2:	46c0      	nop			; (mov r8, r8)
 800c2e4:	46bd      	mov	sp, r7
 800c2e6:	b002      	add	sp, #8
 800c2e8:	bd80      	pop	{r7, pc}
	...

0800c2ec <USBPD_PHY_SOPSupported>:
 800c2ec:	b580      	push	{r7, lr}
 800c2ee:	b082      	sub	sp, #8
 800c2f0:	af00      	add	r7, sp, #0
 800c2f2:	0002      	movs	r2, r0
 800c2f4:	6039      	str	r1, [r7, #0]
 800c2f6:	1dfb      	adds	r3, r7, #7
 800c2f8:	701a      	strb	r2, [r3, #0]
 800c2fa:	1dfb      	adds	r3, r7, #7
 800c2fc:	781b      	ldrb	r3, [r3, #0]
 800c2fe:	4a05      	ldr	r2, [pc, #20]	; (800c314 <USBPD_PHY_SOPSupported+0x28>)
 800c300:	00db      	lsls	r3, r3, #3
 800c302:	18d3      	adds	r3, r2, r3
 800c304:	3304      	adds	r3, #4
 800c306:	683a      	ldr	r2, [r7, #0]
 800c308:	601a      	str	r2, [r3, #0]
 800c30a:	46c0      	nop			; (mov r8, r8)
 800c30c:	46bd      	mov	sp, r7
 800c30e:	b002      	add	sp, #8
 800c310:	bd80      	pop	{r7, pc}
 800c312:	46c0      	nop			; (mov r8, r8)
 800c314:	200002bc 	.word	0x200002bc

0800c318 <USBPD_PHY_IsResistor_SinkTxOk>:
 800c318:	b580      	push	{r7, lr}
 800c31a:	b082      	sub	sp, #8
 800c31c:	af00      	add	r7, sp, #0
 800c31e:	0002      	movs	r2, r0
 800c320:	1dfb      	adds	r3, r7, #7
 800c322:	701a      	strb	r2, [r3, #0]
 800c324:	1dfb      	adds	r3, r7, #7
 800c326:	781b      	ldrb	r3, [r3, #0]
 800c328:	0018      	movs	r0, r3
 800c32a:	f001 f87d 	bl	800d428 <USBPD_HW_IF_IsResistor_SinkTxOk>
 800c32e:	0003      	movs	r3, r0
 800c330:	0018      	movs	r0, r3
 800c332:	46bd      	mov	sp, r7
 800c334:	b002      	add	sp, #8
 800c336:	bd80      	pop	{r7, pc}

0800c338 <USBPD_PHY_FastRoleSwapSignalling>:
 800c338:	b580      	push	{r7, lr}
 800c33a:	b082      	sub	sp, #8
 800c33c:	af00      	add	r7, sp, #0
 800c33e:	0002      	movs	r2, r0
 800c340:	1dfb      	adds	r3, r7, #7
 800c342:	701a      	strb	r2, [r3, #0]
 800c344:	1dfb      	adds	r3, r7, #7
 800c346:	781b      	ldrb	r3, [r3, #0]
 800c348:	0018      	movs	r0, r3
 800c34a:	f001 f8b1 	bl	800d4b0 <USBPD_HW_IF_FastRoleSwapSignalling>
 800c34e:	46c0      	nop			; (mov r8, r8)
 800c350:	46bd      	mov	sp, r7
 800c352:	b002      	add	sp, #8
 800c354:	bd80      	pop	{r7, pc}

0800c356 <USBPD_PHY_EnableRX>:
 800c356:	b580      	push	{r7, lr}
 800c358:	b082      	sub	sp, #8
 800c35a:	af00      	add	r7, sp, #0
 800c35c:	0002      	movs	r2, r0
 800c35e:	1dfb      	adds	r3, r7, #7
 800c360:	701a      	strb	r2, [r3, #0]
 800c362:	1dfb      	adds	r3, r7, #7
 800c364:	781b      	ldrb	r3, [r3, #0]
 800c366:	0018      	movs	r0, r3
 800c368:	f000 fe0a 	bl	800cf80 <USBPD_HW_IF_EnableRX>
 800c36c:	46c0      	nop			; (mov r8, r8)
 800c36e:	46bd      	mov	sp, r7
 800c370:	b002      	add	sp, #8
 800c372:	bd80      	pop	{r7, pc}

0800c374 <USBPD_PHY_DisableRX>:
 800c374:	b580      	push	{r7, lr}
 800c376:	b082      	sub	sp, #8
 800c378:	af00      	add	r7, sp, #0
 800c37a:	0002      	movs	r2, r0
 800c37c:	1dfb      	adds	r3, r7, #7
 800c37e:	701a      	strb	r2, [r3, #0]
 800c380:	1dfb      	adds	r3, r7, #7
 800c382:	781b      	ldrb	r3, [r3, #0]
 800c384:	0018      	movs	r0, r3
 800c386:	f000 fe13 	bl	800cfb0 <USBPD_HW_IF_DisableRX>
 800c38a:	46c0      	nop			; (mov r8, r8)
 800c38c:	46bd      	mov	sp, r7
 800c38e:	b002      	add	sp, #8
 800c390:	bd80      	pop	{r7, pc}
	...

0800c394 <PHY_Rx_Completed>:
 800c394:	b590      	push	{r4, r7, lr}
 800c396:	b085      	sub	sp, #20
 800c398:	af00      	add	r7, sp, #0
 800c39a:	0002      	movs	r2, r0
 800c39c:	6039      	str	r1, [r7, #0]
 800c39e:	1dfb      	adds	r3, r7, #7
 800c3a0:	701a      	strb	r2, [r3, #0]
 800c3a2:	2008      	movs	r0, #8
 800c3a4:	183b      	adds	r3, r7, r0
 800c3a6:	4a2e      	ldr	r2, [pc, #184]	; (800c460 <PHY_Rx_Completed+0xcc>)
 800c3a8:	6811      	ldr	r1, [r2, #0]
 800c3aa:	6019      	str	r1, [r3, #0]
 800c3ac:	8892      	ldrh	r2, [r2, #4]
 800c3ae:	809a      	strh	r2, [r3, #4]
 800c3b0:	240f      	movs	r4, #15
 800c3b2:	193b      	adds	r3, r7, r4
 800c3b4:	1839      	adds	r1, r7, r0
 800c3b6:	683a      	ldr	r2, [r7, #0]
 800c3b8:	188a      	adds	r2, r1, r2
 800c3ba:	7812      	ldrb	r2, [r2, #0]
 800c3bc:	701a      	strb	r2, [r3, #0]
 800c3be:	193b      	adds	r3, r7, r4
 800c3c0:	781b      	ldrb	r3, [r3, #0]
 800c3c2:	2b04      	cmp	r3, #4
 800c3c4:	dc02      	bgt.n	800c3cc <PHY_Rx_Completed+0x38>
 800c3c6:	2b00      	cmp	r3, #0
 800c3c8:	da1d      	bge.n	800c406 <PHY_Rx_Completed+0x72>
 800c3ca:	e040      	b.n	800c44e <PHY_Rx_Completed+0xba>
 800c3cc:	2b06      	cmp	r3, #6
 800c3ce:	d13e      	bne.n	800c44e <PHY_Rx_Completed+0xba>
 800c3d0:	1dfb      	adds	r3, r7, #7
 800c3d2:	781b      	ldrb	r3, [r3, #0]
 800c3d4:	4a23      	ldr	r2, [pc, #140]	; (800c464 <PHY_Rx_Completed+0xd0>)
 800c3d6:	00db      	lsls	r3, r3, #3
 800c3d8:	18d3      	adds	r3, r2, r3
 800c3da:	3304      	adds	r3, #4
 800c3dc:	681b      	ldr	r3, [r3, #0]
 800c3de:	221e      	movs	r2, #30
 800c3e0:	4013      	ands	r3, r2
 800c3e2:	2b1e      	cmp	r3, #30
 800c3e4:	d135      	bne.n	800c452 <PHY_Rx_Completed+0xbe>
 800c3e6:	1dfb      	adds	r3, r7, #7
 800c3e8:	781a      	ldrb	r2, [r3, #0]
 800c3ea:	491f      	ldr	r1, [pc, #124]	; (800c468 <PHY_Rx_Completed+0xd4>)
 800c3ec:	0013      	movs	r3, r2
 800c3ee:	011b      	lsls	r3, r3, #4
 800c3f0:	1a9b      	subs	r3, r3, r2
 800c3f2:	009b      	lsls	r3, r3, #2
 800c3f4:	18cb      	adds	r3, r1, r3
 800c3f6:	331c      	adds	r3, #28
 800c3f8:	681b      	ldr	r3, [r3, #0]
 800c3fa:	1dfa      	adds	r2, r7, #7
 800c3fc:	7812      	ldrb	r2, [r2, #0]
 800c3fe:	2106      	movs	r1, #6
 800c400:	0010      	movs	r0, r2
 800c402:	4798      	blx	r3
 800c404:	e025      	b.n	800c452 <PHY_Rx_Completed+0xbe>
 800c406:	240f      	movs	r4, #15
 800c408:	193b      	adds	r3, r7, r4
 800c40a:	781b      	ldrb	r3, [r3, #0]
 800c40c:	2201      	movs	r2, #1
 800c40e:	409a      	lsls	r2, r3
 800c410:	0013      	movs	r3, r2
 800c412:	b2db      	uxtb	r3, r3
 800c414:	0018      	movs	r0, r3
 800c416:	1dfb      	adds	r3, r7, #7
 800c418:	781b      	ldrb	r3, [r3, #0]
 800c41a:	4a12      	ldr	r2, [pc, #72]	; (800c464 <PHY_Rx_Completed+0xd0>)
 800c41c:	00db      	lsls	r3, r3, #3
 800c41e:	18d3      	adds	r3, r2, r3
 800c420:	3304      	adds	r3, #4
 800c422:	681b      	ldr	r3, [r3, #0]
 800c424:	193a      	adds	r2, r7, r4
 800c426:	7812      	ldrb	r2, [r2, #0]
 800c428:	2101      	movs	r1, #1
 800c42a:	4091      	lsls	r1, r2
 800c42c:	000a      	movs	r2, r1
 800c42e:	b2d2      	uxtb	r2, r2
 800c430:	4013      	ands	r3, r2
 800c432:	4298      	cmp	r0, r3
 800c434:	d10f      	bne.n	800c456 <PHY_Rx_Completed+0xc2>
 800c436:	1dfb      	adds	r3, r7, #7
 800c438:	781a      	ldrb	r2, [r3, #0]
 800c43a:	4b0a      	ldr	r3, [pc, #40]	; (800c464 <PHY_Rx_Completed+0xd0>)
 800c43c:	00d2      	lsls	r2, r2, #3
 800c43e:	58d3      	ldr	r3, [r2, r3]
 800c440:	193a      	adds	r2, r7, r4
 800c442:	7811      	ldrb	r1, [r2, #0]
 800c444:	1dfa      	adds	r2, r7, #7
 800c446:	7812      	ldrb	r2, [r2, #0]
 800c448:	0010      	movs	r0, r2
 800c44a:	4798      	blx	r3
 800c44c:	e003      	b.n	800c456 <PHY_Rx_Completed+0xc2>
 800c44e:	46c0      	nop			; (mov r8, r8)
 800c450:	e002      	b.n	800c458 <PHY_Rx_Completed+0xc4>
 800c452:	46c0      	nop			; (mov r8, r8)
 800c454:	e000      	b.n	800c458 <PHY_Rx_Completed+0xc4>
 800c456:	46c0      	nop			; (mov r8, r8)
 800c458:	46c0      	nop			; (mov r8, r8)
 800c45a:	46bd      	mov	sp, r7
 800c45c:	b005      	add	sp, #20
 800c45e:	bd90      	pop	{r4, r7, pc}
 800c460:	08018a88 	.word	0x08018a88
 800c464:	200002bc 	.word	0x200002bc
 800c468:	200002c4 	.word	0x200002c4

0800c46c <LL_AHB1_GRP1_EnableClock>:
 800c46c:	b580      	push	{r7, lr}
 800c46e:	b084      	sub	sp, #16
 800c470:	af00      	add	r7, sp, #0
 800c472:	6078      	str	r0, [r7, #4]
 800c474:	4b07      	ldr	r3, [pc, #28]	; (800c494 <LL_AHB1_GRP1_EnableClock+0x28>)
 800c476:	6b99      	ldr	r1, [r3, #56]	; 0x38
 800c478:	4b06      	ldr	r3, [pc, #24]	; (800c494 <LL_AHB1_GRP1_EnableClock+0x28>)
 800c47a:	687a      	ldr	r2, [r7, #4]
 800c47c:	430a      	orrs	r2, r1
 800c47e:	639a      	str	r2, [r3, #56]	; 0x38
 800c480:	4b04      	ldr	r3, [pc, #16]	; (800c494 <LL_AHB1_GRP1_EnableClock+0x28>)
 800c482:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c484:	687a      	ldr	r2, [r7, #4]
 800c486:	4013      	ands	r3, r2
 800c488:	60fb      	str	r3, [r7, #12]
 800c48a:	68fb      	ldr	r3, [r7, #12]
 800c48c:	46c0      	nop			; (mov r8, r8)
 800c48e:	46bd      	mov	sp, r7
 800c490:	b004      	add	sp, #16
 800c492:	bd80      	pop	{r7, pc}
 800c494:	40021000 	.word	0x40021000

0800c498 <LL_APB1_GRP1_EnableClock>:
 800c498:	b580      	push	{r7, lr}
 800c49a:	b084      	sub	sp, #16
 800c49c:	af00      	add	r7, sp, #0
 800c49e:	6078      	str	r0, [r7, #4]
 800c4a0:	4b07      	ldr	r3, [pc, #28]	; (800c4c0 <LL_APB1_GRP1_EnableClock+0x28>)
 800c4a2:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 800c4a4:	4b06      	ldr	r3, [pc, #24]	; (800c4c0 <LL_APB1_GRP1_EnableClock+0x28>)
 800c4a6:	687a      	ldr	r2, [r7, #4]
 800c4a8:	430a      	orrs	r2, r1
 800c4aa:	63da      	str	r2, [r3, #60]	; 0x3c
 800c4ac:	4b04      	ldr	r3, [pc, #16]	; (800c4c0 <LL_APB1_GRP1_EnableClock+0x28>)
 800c4ae:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c4b0:	687a      	ldr	r2, [r7, #4]
 800c4b2:	4013      	ands	r3, r2
 800c4b4:	60fb      	str	r3, [r7, #12]
 800c4b6:	68fb      	ldr	r3, [r7, #12]
 800c4b8:	46c0      	nop			; (mov r8, r8)
 800c4ba:	46bd      	mov	sp, r7
 800c4bc:	b004      	add	sp, #16
 800c4be:	bd80      	pop	{r7, pc}
 800c4c0:	40021000 	.word	0x40021000

0800c4c4 <LL_APB2_GRP1_EnableClock>:
 800c4c4:	b580      	push	{r7, lr}
 800c4c6:	b084      	sub	sp, #16
 800c4c8:	af00      	add	r7, sp, #0
 800c4ca:	6078      	str	r0, [r7, #4]
 800c4cc:	4b07      	ldr	r3, [pc, #28]	; (800c4ec <LL_APB2_GRP1_EnableClock+0x28>)
 800c4ce:	6c19      	ldr	r1, [r3, #64]	; 0x40
 800c4d0:	4b06      	ldr	r3, [pc, #24]	; (800c4ec <LL_APB2_GRP1_EnableClock+0x28>)
 800c4d2:	687a      	ldr	r2, [r7, #4]
 800c4d4:	430a      	orrs	r2, r1
 800c4d6:	641a      	str	r2, [r3, #64]	; 0x40
 800c4d8:	4b04      	ldr	r3, [pc, #16]	; (800c4ec <LL_APB2_GRP1_EnableClock+0x28>)
 800c4da:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c4dc:	687a      	ldr	r2, [r7, #4]
 800c4de:	4013      	ands	r3, r2
 800c4e0:	60fb      	str	r3, [r7, #12]
 800c4e2:	68fb      	ldr	r3, [r7, #12]
 800c4e4:	46c0      	nop			; (mov r8, r8)
 800c4e6:	46bd      	mov	sp, r7
 800c4e8:	b004      	add	sp, #16
 800c4ea:	bd80      	pop	{r7, pc}
 800c4ec:	40021000 	.word	0x40021000

0800c4f0 <LL_UCPD_Enable>:
 800c4f0:	b580      	push	{r7, lr}
 800c4f2:	b082      	sub	sp, #8
 800c4f4:	af00      	add	r7, sp, #0
 800c4f6:	6078      	str	r0, [r7, #4]
 800c4f8:	687b      	ldr	r3, [r7, #4]
 800c4fa:	681b      	ldr	r3, [r3, #0]
 800c4fc:	2280      	movs	r2, #128	; 0x80
 800c4fe:	0612      	lsls	r2, r2, #24
 800c500:	431a      	orrs	r2, r3
 800c502:	687b      	ldr	r3, [r7, #4]
 800c504:	601a      	str	r2, [r3, #0]
 800c506:	46c0      	nop			; (mov r8, r8)
 800c508:	46bd      	mov	sp, r7
 800c50a:	b002      	add	sp, #8
 800c50c:	bd80      	pop	{r7, pc}

0800c50e <LL_UCPD_Disable>:
 800c50e:	b580      	push	{r7, lr}
 800c510:	b082      	sub	sp, #8
 800c512:	af00      	add	r7, sp, #0
 800c514:	6078      	str	r0, [r7, #4]
 800c516:	687b      	ldr	r3, [r7, #4]
 800c518:	681b      	ldr	r3, [r3, #0]
 800c51a:	005b      	lsls	r3, r3, #1
 800c51c:	085a      	lsrs	r2, r3, #1
 800c51e:	687b      	ldr	r3, [r7, #4]
 800c520:	601a      	str	r2, [r3, #0]
 800c522:	46c0      	nop			; (mov r8, r8)
 800c524:	46bd      	mov	sp, r7
 800c526:	b002      	add	sp, #8
 800c528:	bd80      	pop	{r7, pc}
	...

0800c52c <LL_UCPD_TypeCDetectionCC2Enable>:
 800c52c:	b580      	push	{r7, lr}
 800c52e:	b082      	sub	sp, #8
 800c530:	af00      	add	r7, sp, #0
 800c532:	6078      	str	r0, [r7, #4]
 800c534:	687b      	ldr	r3, [r7, #4]
 800c536:	68db      	ldr	r3, [r3, #12]
 800c538:	4a03      	ldr	r2, [pc, #12]	; (800c548 <LL_UCPD_TypeCDetectionCC2Enable+0x1c>)
 800c53a:	401a      	ands	r2, r3
 800c53c:	687b      	ldr	r3, [r7, #4]
 800c53e:	60da      	str	r2, [r3, #12]
 800c540:	46c0      	nop			; (mov r8, r8)
 800c542:	46bd      	mov	sp, r7
 800c544:	b002      	add	sp, #8
 800c546:	bd80      	pop	{r7, pc}
 800c548:	ffdfffff 	.word	0xffdfffff

0800c54c <LL_UCPD_TypeCDetectionCC2Disable>:
 800c54c:	b580      	push	{r7, lr}
 800c54e:	b082      	sub	sp, #8
 800c550:	af00      	add	r7, sp, #0
 800c552:	6078      	str	r0, [r7, #4]
 800c554:	687b      	ldr	r3, [r7, #4]
 800c556:	68db      	ldr	r3, [r3, #12]
 800c558:	2280      	movs	r2, #128	; 0x80
 800c55a:	0392      	lsls	r2, r2, #14
 800c55c:	431a      	orrs	r2, r3
 800c55e:	687b      	ldr	r3, [r7, #4]
 800c560:	60da      	str	r2, [r3, #12]
 800c562:	46c0      	nop			; (mov r8, r8)
 800c564:	46bd      	mov	sp, r7
 800c566:	b002      	add	sp, #8
 800c568:	bd80      	pop	{r7, pc}
	...

0800c56c <LL_UCPD_TypeCDetectionCC1Enable>:
 800c56c:	b580      	push	{r7, lr}
 800c56e:	b082      	sub	sp, #8
 800c570:	af00      	add	r7, sp, #0
 800c572:	6078      	str	r0, [r7, #4]
 800c574:	687b      	ldr	r3, [r7, #4]
 800c576:	68db      	ldr	r3, [r3, #12]
 800c578:	4a03      	ldr	r2, [pc, #12]	; (800c588 <LL_UCPD_TypeCDetectionCC1Enable+0x1c>)
 800c57a:	401a      	ands	r2, r3
 800c57c:	687b      	ldr	r3, [r7, #4]
 800c57e:	60da      	str	r2, [r3, #12]
 800c580:	46c0      	nop			; (mov r8, r8)
 800c582:	46bd      	mov	sp, r7
 800c584:	b002      	add	sp, #8
 800c586:	bd80      	pop	{r7, pc}
 800c588:	ffefffff 	.word	0xffefffff

0800c58c <LL_UCPD_TypeCDetectionCC1Disable>:
 800c58c:	b580      	push	{r7, lr}
 800c58e:	b082      	sub	sp, #8
 800c590:	af00      	add	r7, sp, #0
 800c592:	6078      	str	r0, [r7, #4]
 800c594:	687b      	ldr	r3, [r7, #4]
 800c596:	68db      	ldr	r3, [r3, #12]
 800c598:	2280      	movs	r2, #128	; 0x80
 800c59a:	0352      	lsls	r2, r2, #13
 800c59c:	431a      	orrs	r2, r3
 800c59e:	687b      	ldr	r3, [r7, #4]
 800c5a0:	60da      	str	r2, [r3, #12]
 800c5a2:	46c0      	nop			; (mov r8, r8)
 800c5a4:	46bd      	mov	sp, r7
 800c5a6:	b002      	add	sp, #8
 800c5a8:	bd80      	pop	{r7, pc}

0800c5aa <LL_UCPD_SignalFRSTX>:
 800c5aa:	b580      	push	{r7, lr}
 800c5ac:	b082      	sub	sp, #8
 800c5ae:	af00      	add	r7, sp, #0
 800c5b0:	6078      	str	r0, [r7, #4]
 800c5b2:	687b      	ldr	r3, [r7, #4]
 800c5b4:	68db      	ldr	r3, [r3, #12]
 800c5b6:	2280      	movs	r2, #128	; 0x80
 800c5b8:	0292      	lsls	r2, r2, #10
 800c5ba:	431a      	orrs	r2, r3
 800c5bc:	687b      	ldr	r3, [r7, #4]
 800c5be:	60da      	str	r2, [r3, #12]
 800c5c0:	46c0      	nop			; (mov r8, r8)
 800c5c2:	46bd      	mov	sp, r7
 800c5c4:	b002      	add	sp, #8
 800c5c6:	bd80      	pop	{r7, pc}

0800c5c8 <LL_UCPD_FRSDetectionEnable>:
 800c5c8:	b580      	push	{r7, lr}
 800c5ca:	b082      	sub	sp, #8
 800c5cc:	af00      	add	r7, sp, #0
 800c5ce:	6078      	str	r0, [r7, #4]
 800c5d0:	687b      	ldr	r3, [r7, #4]
 800c5d2:	68db      	ldr	r3, [r3, #12]
 800c5d4:	2280      	movs	r2, #128	; 0x80
 800c5d6:	0252      	lsls	r2, r2, #9
 800c5d8:	431a      	orrs	r2, r3
 800c5da:	687b      	ldr	r3, [r7, #4]
 800c5dc:	60da      	str	r2, [r3, #12]
 800c5de:	46c0      	nop			; (mov r8, r8)
 800c5e0:	46bd      	mov	sp, r7
 800c5e2:	b002      	add	sp, #8
 800c5e4:	bd80      	pop	{r7, pc}
	...

0800c5e8 <LL_UCPD_FRSDetectionDisable>:
 800c5e8:	b580      	push	{r7, lr}
 800c5ea:	b082      	sub	sp, #8
 800c5ec:	af00      	add	r7, sp, #0
 800c5ee:	6078      	str	r0, [r7, #4]
 800c5f0:	687b      	ldr	r3, [r7, #4]
 800c5f2:	68db      	ldr	r3, [r3, #12]
 800c5f4:	4a03      	ldr	r2, [pc, #12]	; (800c604 <LL_UCPD_FRSDetectionDisable+0x1c>)
 800c5f6:	401a      	ands	r2, r3
 800c5f8:	687b      	ldr	r3, [r7, #4]
 800c5fa:	60da      	str	r2, [r3, #12]
 800c5fc:	46c0      	nop			; (mov r8, r8)
 800c5fe:	46bd      	mov	sp, r7
 800c600:	b002      	add	sp, #8
 800c602:	bd80      	pop	{r7, pc}
 800c604:	fffeffff 	.word	0xfffeffff

0800c608 <LL_UCPD_SetccEnable>:
 800c608:	b580      	push	{r7, lr}
 800c60a:	b082      	sub	sp, #8
 800c60c:	af00      	add	r7, sp, #0
 800c60e:	6078      	str	r0, [r7, #4]
 800c610:	6039      	str	r1, [r7, #0]
 800c612:	687b      	ldr	r3, [r7, #4]
 800c614:	68db      	ldr	r3, [r3, #12]
 800c616:	4a05      	ldr	r2, [pc, #20]	; (800c62c <LL_UCPD_SetccEnable+0x24>)
 800c618:	401a      	ands	r2, r3
 800c61a:	683b      	ldr	r3, [r7, #0]
 800c61c:	431a      	orrs	r2, r3
 800c61e:	687b      	ldr	r3, [r7, #4]
 800c620:	60da      	str	r2, [r3, #12]
 800c622:	46c0      	nop			; (mov r8, r8)
 800c624:	46bd      	mov	sp, r7
 800c626:	b002      	add	sp, #8
 800c628:	bd80      	pop	{r7, pc}
 800c62a:	46c0      	nop			; (mov r8, r8)
 800c62c:	fffff3ff 	.word	0xfffff3ff

0800c630 <LL_UCPD_SetSNKRole>:
 800c630:	b580      	push	{r7, lr}
 800c632:	b082      	sub	sp, #8
 800c634:	af00      	add	r7, sp, #0
 800c636:	6078      	str	r0, [r7, #4]
 800c638:	687b      	ldr	r3, [r7, #4]
 800c63a:	68db      	ldr	r3, [r3, #12]
 800c63c:	2280      	movs	r2, #128	; 0x80
 800c63e:	0092      	lsls	r2, r2, #2
 800c640:	431a      	orrs	r2, r3
 800c642:	687b      	ldr	r3, [r7, #4]
 800c644:	60da      	str	r2, [r3, #12]
 800c646:	46c0      	nop			; (mov r8, r8)
 800c648:	46bd      	mov	sp, r7
 800c64a:	b002      	add	sp, #8
 800c64c:	bd80      	pop	{r7, pc}
	...

0800c650 <LL_UCPD_SetSRCRole>:
 800c650:	b580      	push	{r7, lr}
 800c652:	b082      	sub	sp, #8
 800c654:	af00      	add	r7, sp, #0
 800c656:	6078      	str	r0, [r7, #4]
 800c658:	687b      	ldr	r3, [r7, #4]
 800c65a:	68db      	ldr	r3, [r3, #12]
 800c65c:	4a03      	ldr	r2, [pc, #12]	; (800c66c <LL_UCPD_SetSRCRole+0x1c>)
 800c65e:	401a      	ands	r2, r3
 800c660:	687b      	ldr	r3, [r7, #4]
 800c662:	60da      	str	r2, [r3, #12]
 800c664:	46c0      	nop			; (mov r8, r8)
 800c666:	46bd      	mov	sp, r7
 800c668:	b002      	add	sp, #8
 800c66a:	bd80      	pop	{r7, pc}
 800c66c:	fffffdff 	.word	0xfffffdff

0800c670 <LL_UCPD_SetRpResistor>:
 800c670:	b580      	push	{r7, lr}
 800c672:	b082      	sub	sp, #8
 800c674:	af00      	add	r7, sp, #0
 800c676:	6078      	str	r0, [r7, #4]
 800c678:	6039      	str	r1, [r7, #0]
 800c67a:	687b      	ldr	r3, [r7, #4]
 800c67c:	68db      	ldr	r3, [r3, #12]
 800c67e:	4a05      	ldr	r2, [pc, #20]	; (800c694 <LL_UCPD_SetRpResistor+0x24>)
 800c680:	401a      	ands	r2, r3
 800c682:	683b      	ldr	r3, [r7, #0]
 800c684:	431a      	orrs	r2, r3
 800c686:	687b      	ldr	r3, [r7, #4]
 800c688:	60da      	str	r2, [r3, #12]
 800c68a:	46c0      	nop			; (mov r8, r8)
 800c68c:	46bd      	mov	sp, r7
 800c68e:	b002      	add	sp, #8
 800c690:	bd80      	pop	{r7, pc}
 800c692:	46c0      	nop			; (mov r8, r8)
 800c694:	fffffe7f 	.word	0xfffffe7f

0800c698 <LL_UCPD_SetCCPin>:
 800c698:	b580      	push	{r7, lr}
 800c69a:	b082      	sub	sp, #8
 800c69c:	af00      	add	r7, sp, #0
 800c69e:	6078      	str	r0, [r7, #4]
 800c6a0:	6039      	str	r1, [r7, #0]
 800c6a2:	687b      	ldr	r3, [r7, #4]
 800c6a4:	68db      	ldr	r3, [r3, #12]
 800c6a6:	2240      	movs	r2, #64	; 0x40
 800c6a8:	4393      	bics	r3, r2
 800c6aa:	001a      	movs	r2, r3
 800c6ac:	683b      	ldr	r3, [r7, #0]
 800c6ae:	431a      	orrs	r2, r3
 800c6b0:	687b      	ldr	r3, [r7, #4]
 800c6b2:	60da      	str	r2, [r3, #12]
 800c6b4:	46c0      	nop			; (mov r8, r8)
 800c6b6:	46bd      	mov	sp, r7
 800c6b8:	b002      	add	sp, #8
 800c6ba:	bd80      	pop	{r7, pc}

0800c6bc <LL_UCPD_RxEnable>:
 800c6bc:	b580      	push	{r7, lr}
 800c6be:	b082      	sub	sp, #8
 800c6c0:	af00      	add	r7, sp, #0
 800c6c2:	6078      	str	r0, [r7, #4]
 800c6c4:	687b      	ldr	r3, [r7, #4]
 800c6c6:	68db      	ldr	r3, [r3, #12]
 800c6c8:	2220      	movs	r2, #32
 800c6ca:	431a      	orrs	r2, r3
 800c6cc:	687b      	ldr	r3, [r7, #4]
 800c6ce:	60da      	str	r2, [r3, #12]
 800c6d0:	46c0      	nop			; (mov r8, r8)
 800c6d2:	46bd      	mov	sp, r7
 800c6d4:	b002      	add	sp, #8
 800c6d6:	bd80      	pop	{r7, pc}

0800c6d8 <LL_UCPD_RxDisable>:
 800c6d8:	b580      	push	{r7, lr}
 800c6da:	b082      	sub	sp, #8
 800c6dc:	af00      	add	r7, sp, #0
 800c6de:	6078      	str	r0, [r7, #4]
 800c6e0:	687b      	ldr	r3, [r7, #4]
 800c6e2:	68db      	ldr	r3, [r3, #12]
 800c6e4:	2220      	movs	r2, #32
 800c6e6:	4393      	bics	r3, r2
 800c6e8:	001a      	movs	r2, r3
 800c6ea:	687b      	ldr	r3, [r7, #4]
 800c6ec:	60da      	str	r2, [r3, #12]
 800c6ee:	46c0      	nop			; (mov r8, r8)
 800c6f0:	46bd      	mov	sp, r7
 800c6f2:	b002      	add	sp, #8
 800c6f4:	bd80      	pop	{r7, pc}

0800c6f6 <LL_UCPD_SetRxMode>:
 800c6f6:	b580      	push	{r7, lr}
 800c6f8:	b082      	sub	sp, #8
 800c6fa:	af00      	add	r7, sp, #0
 800c6fc:	6078      	str	r0, [r7, #4]
 800c6fe:	6039      	str	r1, [r7, #0]
 800c700:	687b      	ldr	r3, [r7, #4]
 800c702:	68db      	ldr	r3, [r3, #12]
 800c704:	2210      	movs	r2, #16
 800c706:	4393      	bics	r3, r2
 800c708:	001a      	movs	r2, r3
 800c70a:	683b      	ldr	r3, [r7, #0]
 800c70c:	431a      	orrs	r2, r3
 800c70e:	687b      	ldr	r3, [r7, #4]
 800c710:	60da      	str	r2, [r3, #12]
 800c712:	46c0      	nop			; (mov r8, r8)
 800c714:	46bd      	mov	sp, r7
 800c716:	b002      	add	sp, #8
 800c718:	bd80      	pop	{r7, pc}

0800c71a <LL_UCPD_SendHardReset>:
 800c71a:	b580      	push	{r7, lr}
 800c71c:	b082      	sub	sp, #8
 800c71e:	af00      	add	r7, sp, #0
 800c720:	6078      	str	r0, [r7, #4]
 800c722:	687b      	ldr	r3, [r7, #4]
 800c724:	68db      	ldr	r3, [r3, #12]
 800c726:	2208      	movs	r2, #8
 800c728:	431a      	orrs	r2, r3
 800c72a:	687b      	ldr	r3, [r7, #4]
 800c72c:	60da      	str	r2, [r3, #12]
 800c72e:	46c0      	nop			; (mov r8, r8)
 800c730:	46bd      	mov	sp, r7
 800c732:	b002      	add	sp, #8
 800c734:	bd80      	pop	{r7, pc}

0800c736 <LL_UCPD_SendMessage>:
 800c736:	b580      	push	{r7, lr}
 800c738:	b082      	sub	sp, #8
 800c73a:	af00      	add	r7, sp, #0
 800c73c:	6078      	str	r0, [r7, #4]
 800c73e:	687b      	ldr	r3, [r7, #4]
 800c740:	68db      	ldr	r3, [r3, #12]
 800c742:	2204      	movs	r2, #4
 800c744:	431a      	orrs	r2, r3
 800c746:	687b      	ldr	r3, [r7, #4]
 800c748:	60da      	str	r2, [r3, #12]
 800c74a:	46c0      	nop			; (mov r8, r8)
 800c74c:	46bd      	mov	sp, r7
 800c74e:	b002      	add	sp, #8
 800c750:	bd80      	pop	{r7, pc}

0800c752 <LL_UCPD_SetTxMode>:
 800c752:	b580      	push	{r7, lr}
 800c754:	b082      	sub	sp, #8
 800c756:	af00      	add	r7, sp, #0
 800c758:	6078      	str	r0, [r7, #4]
 800c75a:	6039      	str	r1, [r7, #0]
 800c75c:	687b      	ldr	r3, [r7, #4]
 800c75e:	68db      	ldr	r3, [r3, #12]
 800c760:	2203      	movs	r2, #3
 800c762:	4393      	bics	r3, r2
 800c764:	001a      	movs	r2, r3
 800c766:	683b      	ldr	r3, [r7, #0]
 800c768:	431a      	orrs	r2, r3
 800c76a:	687b      	ldr	r3, [r7, #4]
 800c76c:	60da      	str	r2, [r3, #12]
 800c76e:	46c0      	nop			; (mov r8, r8)
 800c770:	46bd      	mov	sp, r7
 800c772:	b002      	add	sp, #8
 800c774:	bd80      	pop	{r7, pc}

0800c776 <LL_UCPD_RxDMAEnable>:
 800c776:	b580      	push	{r7, lr}
 800c778:	b082      	sub	sp, #8
 800c77a:	af00      	add	r7, sp, #0
 800c77c:	6078      	str	r0, [r7, #4]
 800c77e:	687b      	ldr	r3, [r7, #4]
 800c780:	681b      	ldr	r3, [r3, #0]
 800c782:	2280      	movs	r2, #128	; 0x80
 800c784:	05d2      	lsls	r2, r2, #23
 800c786:	431a      	orrs	r2, r3
 800c788:	687b      	ldr	r3, [r7, #4]
 800c78a:	601a      	str	r2, [r3, #0]
 800c78c:	46c0      	nop			; (mov r8, r8)
 800c78e:	46bd      	mov	sp, r7
 800c790:	b002      	add	sp, #8
 800c792:	bd80      	pop	{r7, pc}

0800c794 <LL_UCPD_RxDMADisable>:
 800c794:	b580      	push	{r7, lr}
 800c796:	b082      	sub	sp, #8
 800c798:	af00      	add	r7, sp, #0
 800c79a:	6078      	str	r0, [r7, #4]
 800c79c:	687b      	ldr	r3, [r7, #4]
 800c79e:	681b      	ldr	r3, [r3, #0]
 800c7a0:	4a03      	ldr	r2, [pc, #12]	; (800c7b0 <LL_UCPD_RxDMADisable+0x1c>)
 800c7a2:	401a      	ands	r2, r3
 800c7a4:	687b      	ldr	r3, [r7, #4]
 800c7a6:	601a      	str	r2, [r3, #0]
 800c7a8:	46c0      	nop			; (mov r8, r8)
 800c7aa:	46bd      	mov	sp, r7
 800c7ac:	b002      	add	sp, #8
 800c7ae:	bd80      	pop	{r7, pc}
 800c7b0:	bfffffff 	.word	0xbfffffff

0800c7b4 <LL_UCPD_TxDMAEnable>:
 800c7b4:	b580      	push	{r7, lr}
 800c7b6:	b082      	sub	sp, #8
 800c7b8:	af00      	add	r7, sp, #0
 800c7ba:	6078      	str	r0, [r7, #4]
 800c7bc:	687b      	ldr	r3, [r7, #4]
 800c7be:	681b      	ldr	r3, [r3, #0]
 800c7c0:	2280      	movs	r2, #128	; 0x80
 800c7c2:	0592      	lsls	r2, r2, #22
 800c7c4:	431a      	orrs	r2, r3
 800c7c6:	687b      	ldr	r3, [r7, #4]
 800c7c8:	601a      	str	r2, [r3, #0]
 800c7ca:	46c0      	nop			; (mov r8, r8)
 800c7cc:	46bd      	mov	sp, r7
 800c7ce:	b002      	add	sp, #8
 800c7d0:	bd80      	pop	{r7, pc}
	...

0800c7d4 <LL_UCPD_TxDMADisable>:
 800c7d4:	b580      	push	{r7, lr}
 800c7d6:	b082      	sub	sp, #8
 800c7d8:	af00      	add	r7, sp, #0
 800c7da:	6078      	str	r0, [r7, #4]
 800c7dc:	687b      	ldr	r3, [r7, #4]
 800c7de:	681b      	ldr	r3, [r3, #0]
 800c7e0:	4a03      	ldr	r2, [pc, #12]	; (800c7f0 <LL_UCPD_TxDMADisable+0x1c>)
 800c7e2:	401a      	ands	r2, r3
 800c7e4:	687b      	ldr	r3, [r7, #4]
 800c7e6:	601a      	str	r2, [r3, #0]
 800c7e8:	46c0      	nop			; (mov r8, r8)
 800c7ea:	46bd      	mov	sp, r7
 800c7ec:	b002      	add	sp, #8
 800c7ee:	bd80      	pop	{r7, pc}
 800c7f0:	dfffffff 	.word	0xdfffffff

0800c7f4 <LL_UCPD_WriteTxOrderSet>:
 800c7f4:	b580      	push	{r7, lr}
 800c7f6:	b082      	sub	sp, #8
 800c7f8:	af00      	add	r7, sp, #0
 800c7fa:	6078      	str	r0, [r7, #4]
 800c7fc:	6039      	str	r1, [r7, #0]
 800c7fe:	687b      	ldr	r3, [r7, #4]
 800c800:	683a      	ldr	r2, [r7, #0]
 800c802:	61da      	str	r2, [r3, #28]
 800c804:	46c0      	nop			; (mov r8, r8)
 800c806:	46bd      	mov	sp, r7
 800c808:	b002      	add	sp, #8
 800c80a:	bd80      	pop	{r7, pc}

0800c80c <LL_UCPD_WriteTxPaySize>:
 800c80c:	b580      	push	{r7, lr}
 800c80e:	b082      	sub	sp, #8
 800c810:	af00      	add	r7, sp, #0
 800c812:	6078      	str	r0, [r7, #4]
 800c814:	6039      	str	r1, [r7, #0]
 800c816:	687b      	ldr	r3, [r7, #4]
 800c818:	683a      	ldr	r2, [r7, #0]
 800c81a:	621a      	str	r2, [r3, #32]
 800c81c:	46c0      	nop			; (mov r8, r8)
 800c81e:	46bd      	mov	sp, r7
 800c820:	b002      	add	sp, #8
 800c822:	bd80      	pop	{r7, pc}

0800c824 <USBPD_HW_IF_GlobalHwInit>:
 800c824:	b580      	push	{r7, lr}
 800c826:	af00      	add	r7, sp, #0
 800c828:	2380      	movs	r3, #128	; 0x80
 800c82a:	055b      	lsls	r3, r3, #21
 800c82c:	0018      	movs	r0, r3
 800c82e:	f7ff fe33 	bl	800c498 <LL_APB1_GRP1_EnableClock>
 800c832:	2380      	movs	r3, #128	; 0x80
 800c834:	015b      	lsls	r3, r3, #5
 800c836:	0018      	movs	r0, r3
 800c838:	f7ff fe18 	bl	800c46c <LL_AHB1_GRP1_EnableClock>
 800c83c:	46c0      	nop			; (mov r8, r8)
 800c83e:	46bd      	mov	sp, r7
 800c840:	bd80      	pop	{r7, pc}
	...

0800c844 <USBPD_HW_IF_StopBISTMode2>:
 800c844:	b580      	push	{r7, lr}
 800c846:	b084      	sub	sp, #16
 800c848:	af00      	add	r7, sp, #0
 800c84a:	0002      	movs	r2, r0
 800c84c:	1dfb      	adds	r3, r7, #7
 800c84e:	701a      	strb	r2, [r3, #0]
 800c850:	1dfb      	adds	r3, r7, #7
 800c852:	781a      	ldrb	r2, [r3, #0]
 800c854:	4916      	ldr	r1, [pc, #88]	; (800c8b0 <USBPD_HW_IF_StopBISTMode2+0x6c>)
 800c856:	0013      	movs	r3, r2
 800c858:	011b      	lsls	r3, r3, #4
 800c85a:	1a9b      	subs	r3, r3, r2
 800c85c:	009b      	lsls	r3, r3, #2
 800c85e:	585b      	ldr	r3, [r3, r1]
 800c860:	68db      	ldr	r3, [r3, #12]
 800c862:	2207      	movs	r2, #7
 800c864:	4393      	bics	r3, r2
 800c866:	60fb      	str	r3, [r7, #12]
 800c868:	1dfb      	adds	r3, r7, #7
 800c86a:	781a      	ldrb	r2, [r3, #0]
 800c86c:	4910      	ldr	r1, [pc, #64]	; (800c8b0 <USBPD_HW_IF_StopBISTMode2+0x6c>)
 800c86e:	0013      	movs	r3, r2
 800c870:	011b      	lsls	r3, r3, #4
 800c872:	1a9b      	subs	r3, r3, r2
 800c874:	009b      	lsls	r3, r3, #2
 800c876:	585b      	ldr	r3, [r3, r1]
 800c878:	0018      	movs	r0, r3
 800c87a:	f7ff fe48 	bl	800c50e <LL_UCPD_Disable>
 800c87e:	1dfb      	adds	r3, r7, #7
 800c880:	781a      	ldrb	r2, [r3, #0]
 800c882:	490b      	ldr	r1, [pc, #44]	; (800c8b0 <USBPD_HW_IF_StopBISTMode2+0x6c>)
 800c884:	0013      	movs	r3, r2
 800c886:	011b      	lsls	r3, r3, #4
 800c888:	1a9b      	subs	r3, r3, r2
 800c88a:	009b      	lsls	r3, r3, #2
 800c88c:	585b      	ldr	r3, [r3, r1]
 800c88e:	0018      	movs	r0, r3
 800c890:	f7ff fe2e 	bl	800c4f0 <LL_UCPD_Enable>
 800c894:	1dfb      	adds	r3, r7, #7
 800c896:	781a      	ldrb	r2, [r3, #0]
 800c898:	4905      	ldr	r1, [pc, #20]	; (800c8b0 <USBPD_HW_IF_StopBISTMode2+0x6c>)
 800c89a:	0013      	movs	r3, r2
 800c89c:	011b      	lsls	r3, r3, #4
 800c89e:	1a9b      	subs	r3, r3, r2
 800c8a0:	009b      	lsls	r3, r3, #2
 800c8a2:	585b      	ldr	r3, [r3, r1]
 800c8a4:	68fa      	ldr	r2, [r7, #12]
 800c8a6:	60da      	str	r2, [r3, #12]
 800c8a8:	46c0      	nop			; (mov r8, r8)
 800c8aa:	46bd      	mov	sp, r7
 800c8ac:	b004      	add	sp, #16
 800c8ae:	bd80      	pop	{r7, pc}
 800c8b0:	200002c4 	.word	0x200002c4

0800c8b4 <USBPD_HW_IF_SendBuffer>:
 800c8b4:	b590      	push	{r4, r7, lr}
 800c8b6:	b08b      	sub	sp, #44	; 0x2c
 800c8b8:	af00      	add	r7, sp, #0
 800c8ba:	60ba      	str	r2, [r7, #8]
 800c8bc:	607b      	str	r3, [r7, #4]
 800c8be:	240f      	movs	r4, #15
 800c8c0:	193b      	adds	r3, r7, r4
 800c8c2:	1c02      	adds	r2, r0, #0
 800c8c4:	701a      	strb	r2, [r3, #0]
 800c8c6:	200e      	movs	r0, #14
 800c8c8:	183b      	adds	r3, r7, r0
 800c8ca:	1c0a      	adds	r2, r1, #0
 800c8cc:	701a      	strb	r2, [r3, #0]
 800c8ce:	2327      	movs	r3, #39	; 0x27
 800c8d0:	18fb      	adds	r3, r7, r3
 800c8d2:	2200      	movs	r2, #0
 800c8d4:	701a      	strb	r2, [r3, #0]
 800c8d6:	183b      	adds	r3, r7, r0
 800c8d8:	781b      	ldrb	r3, [r3, #0]
 800c8da:	2b05      	cmp	r3, #5
 800c8dc:	d10b      	bne.n	800c8f6 <USBPD_HW_IF_SendBuffer+0x42>
 800c8de:	193b      	adds	r3, r7, r4
 800c8e0:	781a      	ldrb	r2, [r3, #0]
 800c8e2:	499e      	ldr	r1, [pc, #632]	; (800cb5c <USBPD_HW_IF_SendBuffer+0x2a8>)
 800c8e4:	0013      	movs	r3, r2
 800c8e6:	011b      	lsls	r3, r3, #4
 800c8e8:	1a9b      	subs	r3, r3, r2
 800c8ea:	009b      	lsls	r3, r3, #2
 800c8ec:	585b      	ldr	r3, [r3, r1]
 800c8ee:	0018      	movs	r0, r3
 800c8f0:	f7ff ff13 	bl	800c71a <LL_UCPD_SendHardReset>
 800c8f4:	e12a      	b.n	800cb4c <USBPD_HW_IF_SendBuffer+0x298>
 800c8f6:	f3ef 8310 	mrs	r3, PRIMASK
 800c8fa:	61fb      	str	r3, [r7, #28]
 800c8fc:	69fb      	ldr	r3, [r7, #28]
 800c8fe:	623b      	str	r3, [r7, #32]
 800c900:	b672      	cpsid	i
 800c902:	46c0      	nop			; (mov r8, r8)
 800c904:	240f      	movs	r4, #15
 800c906:	193b      	adds	r3, r7, r4
 800c908:	781a      	ldrb	r2, [r3, #0]
 800c90a:	4994      	ldr	r1, [pc, #592]	; (800cb5c <USBPD_HW_IF_SendBuffer+0x2a8>)
 800c90c:	2038      	movs	r0, #56	; 0x38
 800c90e:	0013      	movs	r3, r2
 800c910:	011b      	lsls	r3, r3, #4
 800c912:	1a9b      	subs	r3, r3, r2
 800c914:	009b      	lsls	r3, r3, #2
 800c916:	18cb      	adds	r3, r1, r3
 800c918:	181b      	adds	r3, r3, r0
 800c91a:	781b      	ldrb	r3, [r3, #0]
 800c91c:	b2db      	uxtb	r3, r3
 800c91e:	2b01      	cmp	r3, #1
 800c920:	d00e      	beq.n	800c940 <USBPD_HW_IF_SendBuffer+0x8c>
 800c922:	193b      	adds	r3, r7, r4
 800c924:	781a      	ldrb	r2, [r3, #0]
 800c926:	498d      	ldr	r1, [pc, #564]	; (800cb5c <USBPD_HW_IF_SendBuffer+0x2a8>)
 800c928:	0013      	movs	r3, r2
 800c92a:	011b      	lsls	r3, r3, #4
 800c92c:	1a9b      	subs	r3, r3, r2
 800c92e:	009b      	lsls	r3, r3, #2
 800c930:	18cb      	adds	r3, r1, r3
 800c932:	3304      	adds	r3, #4
 800c934:	681b      	ldr	r3, [r3, #0]
 800c936:	681b      	ldr	r3, [r3, #0]
 800c938:	2201      	movs	r2, #1
 800c93a:	4013      	ands	r3, r2
 800c93c:	2b01      	cmp	r3, #1
 800c93e:	d10a      	bne.n	800c956 <USBPD_HW_IF_SendBuffer+0xa2>
 800c940:	6a3b      	ldr	r3, [r7, #32]
 800c942:	61bb      	str	r3, [r7, #24]
 800c944:	69bb      	ldr	r3, [r7, #24]
 800c946:	f383 8810 	msr	PRIMASK, r3
 800c94a:	46c0      	nop			; (mov r8, r8)
 800c94c:	2327      	movs	r3, #39	; 0x27
 800c94e:	18fb      	adds	r3, r7, r3
 800c950:	2202      	movs	r2, #2
 800c952:	701a      	strb	r2, [r3, #0]
 800c954:	e0fa      	b.n	800cb4c <USBPD_HW_IF_SendBuffer+0x298>
 800c956:	6a3b      	ldr	r3, [r7, #32]
 800c958:	617b      	str	r3, [r7, #20]
 800c95a:	697b      	ldr	r3, [r7, #20]
 800c95c:	f383 8810 	msr	PRIMASK, r3
 800c960:	46c0      	nop			; (mov r8, r8)
 800c962:	230e      	movs	r3, #14
 800c964:	18fb      	adds	r3, r7, r3
 800c966:	781b      	ldrb	r3, [r3, #0]
 800c968:	2b07      	cmp	r3, #7
 800c96a:	d871      	bhi.n	800ca50 <USBPD_HW_IF_SendBuffer+0x19c>
 800c96c:	009a      	lsls	r2, r3, #2
 800c96e:	4b7c      	ldr	r3, [pc, #496]	; (800cb60 <USBPD_HW_IF_SendBuffer+0x2ac>)
 800c970:	18d3      	adds	r3, r2, r3
 800c972:	681b      	ldr	r3, [r3, #0]
 800c974:	469f      	mov	pc, r3
 800c976:	240f      	movs	r4, #15
 800c978:	193b      	adds	r3, r7, r4
 800c97a:	781a      	ldrb	r2, [r3, #0]
 800c97c:	4977      	ldr	r1, [pc, #476]	; (800cb5c <USBPD_HW_IF_SendBuffer+0x2a8>)
 800c97e:	0013      	movs	r3, r2
 800c980:	011b      	lsls	r3, r3, #4
 800c982:	1a9b      	subs	r3, r3, r2
 800c984:	009b      	lsls	r3, r3, #2
 800c986:	585b      	ldr	r3, [r3, r1]
 800c988:	4a76      	ldr	r2, [pc, #472]	; (800cb64 <USBPD_HW_IF_SendBuffer+0x2b0>)
 800c98a:	0011      	movs	r1, r2
 800c98c:	0018      	movs	r0, r3
 800c98e:	f7ff ff31 	bl	800c7f4 <LL_UCPD_WriteTxOrderSet>
 800c992:	193b      	adds	r3, r7, r4
 800c994:	781a      	ldrb	r2, [r3, #0]
 800c996:	4971      	ldr	r1, [pc, #452]	; (800cb5c <USBPD_HW_IF_SendBuffer+0x2a8>)
 800c998:	0013      	movs	r3, r2
 800c99a:	011b      	lsls	r3, r3, #4
 800c99c:	1a9b      	subs	r3, r3, r2
 800c99e:	009b      	lsls	r3, r3, #2
 800c9a0:	585b      	ldr	r3, [r3, r1]
 800c9a2:	2100      	movs	r1, #0
 800c9a4:	0018      	movs	r0, r3
 800c9a6:	f7ff fed4 	bl	800c752 <LL_UCPD_SetTxMode>
 800c9aa:	e056      	b.n	800ca5a <USBPD_HW_IF_SendBuffer+0x1a6>
 800c9ac:	240f      	movs	r4, #15
 800c9ae:	193b      	adds	r3, r7, r4
 800c9b0:	781a      	ldrb	r2, [r3, #0]
 800c9b2:	496a      	ldr	r1, [pc, #424]	; (800cb5c <USBPD_HW_IF_SendBuffer+0x2a8>)
 800c9b4:	0013      	movs	r3, r2
 800c9b6:	011b      	lsls	r3, r3, #4
 800c9b8:	1a9b      	subs	r3, r3, r2
 800c9ba:	009b      	lsls	r3, r3, #2
 800c9bc:	585b      	ldr	r3, [r3, r1]
 800c9be:	4a6a      	ldr	r2, [pc, #424]	; (800cb68 <USBPD_HW_IF_SendBuffer+0x2b4>)
 800c9c0:	0011      	movs	r1, r2
 800c9c2:	0018      	movs	r0, r3
 800c9c4:	f7ff ff16 	bl	800c7f4 <LL_UCPD_WriteTxOrderSet>
 800c9c8:	193b      	adds	r3, r7, r4
 800c9ca:	781a      	ldrb	r2, [r3, #0]
 800c9cc:	4963      	ldr	r1, [pc, #396]	; (800cb5c <USBPD_HW_IF_SendBuffer+0x2a8>)
 800c9ce:	0013      	movs	r3, r2
 800c9d0:	011b      	lsls	r3, r3, #4
 800c9d2:	1a9b      	subs	r3, r3, r2
 800c9d4:	009b      	lsls	r3, r3, #2
 800c9d6:	585b      	ldr	r3, [r3, r1]
 800c9d8:	2100      	movs	r1, #0
 800c9da:	0018      	movs	r0, r3
 800c9dc:	f7ff feb9 	bl	800c752 <LL_UCPD_SetTxMode>
 800c9e0:	e03b      	b.n	800ca5a <USBPD_HW_IF_SendBuffer+0x1a6>
 800c9e2:	240f      	movs	r4, #15
 800c9e4:	193b      	adds	r3, r7, r4
 800c9e6:	781a      	ldrb	r2, [r3, #0]
 800c9e8:	495c      	ldr	r1, [pc, #368]	; (800cb5c <USBPD_HW_IF_SendBuffer+0x2a8>)
 800c9ea:	0013      	movs	r3, r2
 800c9ec:	011b      	lsls	r3, r3, #4
 800c9ee:	1a9b      	subs	r3, r3, r2
 800c9f0:	009b      	lsls	r3, r3, #2
 800c9f2:	585b      	ldr	r3, [r3, r1]
 800c9f4:	4a5d      	ldr	r2, [pc, #372]	; (800cb6c <USBPD_HW_IF_SendBuffer+0x2b8>)
 800c9f6:	0011      	movs	r1, r2
 800c9f8:	0018      	movs	r0, r3
 800c9fa:	f7ff fefb 	bl	800c7f4 <LL_UCPD_WriteTxOrderSet>
 800c9fe:	193b      	adds	r3, r7, r4
 800ca00:	781a      	ldrb	r2, [r3, #0]
 800ca02:	4956      	ldr	r1, [pc, #344]	; (800cb5c <USBPD_HW_IF_SendBuffer+0x2a8>)
 800ca04:	0013      	movs	r3, r2
 800ca06:	011b      	lsls	r3, r3, #4
 800ca08:	1a9b      	subs	r3, r3, r2
 800ca0a:	009b      	lsls	r3, r3, #2
 800ca0c:	585b      	ldr	r3, [r3, r1]
 800ca0e:	2100      	movs	r1, #0
 800ca10:	0018      	movs	r0, r3
 800ca12:	f7ff fe9e 	bl	800c752 <LL_UCPD_SetTxMode>
 800ca16:	e020      	b.n	800ca5a <USBPD_HW_IF_SendBuffer+0x1a6>
 800ca18:	230f      	movs	r3, #15
 800ca1a:	18fb      	adds	r3, r7, r3
 800ca1c:	781a      	ldrb	r2, [r3, #0]
 800ca1e:	494f      	ldr	r1, [pc, #316]	; (800cb5c <USBPD_HW_IF_SendBuffer+0x2a8>)
 800ca20:	0013      	movs	r3, r2
 800ca22:	011b      	lsls	r3, r3, #4
 800ca24:	1a9b      	subs	r3, r3, r2
 800ca26:	009b      	lsls	r3, r3, #2
 800ca28:	585b      	ldr	r3, [r3, r1]
 800ca2a:	2101      	movs	r1, #1
 800ca2c:	0018      	movs	r0, r3
 800ca2e:	f7ff fe90 	bl	800c752 <LL_UCPD_SetTxMode>
 800ca32:	e012      	b.n	800ca5a <USBPD_HW_IF_SendBuffer+0x1a6>
 800ca34:	230f      	movs	r3, #15
 800ca36:	18fb      	adds	r3, r7, r3
 800ca38:	781a      	ldrb	r2, [r3, #0]
 800ca3a:	4948      	ldr	r1, [pc, #288]	; (800cb5c <USBPD_HW_IF_SendBuffer+0x2a8>)
 800ca3c:	0013      	movs	r3, r2
 800ca3e:	011b      	lsls	r3, r3, #4
 800ca40:	1a9b      	subs	r3, r3, r2
 800ca42:	009b      	lsls	r3, r3, #2
 800ca44:	585b      	ldr	r3, [r3, r1]
 800ca46:	2102      	movs	r1, #2
 800ca48:	0018      	movs	r0, r3
 800ca4a:	f7ff fe82 	bl	800c752 <LL_UCPD_SetTxMode>
 800ca4e:	e004      	b.n	800ca5a <USBPD_HW_IF_SendBuffer+0x1a6>
 800ca50:	2327      	movs	r3, #39	; 0x27
 800ca52:	18fb      	adds	r3, r7, r3
 800ca54:	2202      	movs	r2, #2
 800ca56:	701a      	strb	r2, [r3, #0]
 800ca58:	46c0      	nop			; (mov r8, r8)
 800ca5a:	2327      	movs	r3, #39	; 0x27
 800ca5c:	18fb      	adds	r3, r7, r3
 800ca5e:	781b      	ldrb	r3, [r3, #0]
 800ca60:	2b00      	cmp	r3, #0
 800ca62:	d173      	bne.n	800cb4c <USBPD_HW_IF_SendBuffer+0x298>
 800ca64:	200f      	movs	r0, #15
 800ca66:	183b      	adds	r3, r7, r0
 800ca68:	781a      	ldrb	r2, [r3, #0]
 800ca6a:	493c      	ldr	r1, [pc, #240]	; (800cb5c <USBPD_HW_IF_SendBuffer+0x2a8>)
 800ca6c:	0013      	movs	r3, r2
 800ca6e:	011b      	lsls	r3, r3, #4
 800ca70:	1a9b      	subs	r3, r3, r2
 800ca72:	009b      	lsls	r3, r3, #2
 800ca74:	18cb      	adds	r3, r1, r3
 800ca76:	3304      	adds	r3, #4
 800ca78:	681b      	ldr	r3, [r3, #0]
 800ca7a:	6819      	ldr	r1, [r3, #0]
 800ca7c:	183b      	adds	r3, r7, r0
 800ca7e:	781a      	ldrb	r2, [r3, #0]
 800ca80:	4836      	ldr	r0, [pc, #216]	; (800cb5c <USBPD_HW_IF_SendBuffer+0x2a8>)
 800ca82:	0013      	movs	r3, r2
 800ca84:	011b      	lsls	r3, r3, #4
 800ca86:	1a9b      	subs	r3, r3, r2
 800ca88:	009b      	lsls	r3, r3, #2
 800ca8a:	18c3      	adds	r3, r0, r3
 800ca8c:	3304      	adds	r3, #4
 800ca8e:	681b      	ldr	r3, [r3, #0]
 800ca90:	2201      	movs	r2, #1
 800ca92:	4391      	bics	r1, r2
 800ca94:	000a      	movs	r2, r1
 800ca96:	601a      	str	r2, [r3, #0]
 800ca98:	46c0      	nop			; (mov r8, r8)
 800ca9a:	200f      	movs	r0, #15
 800ca9c:	183b      	adds	r3, r7, r0
 800ca9e:	781a      	ldrb	r2, [r3, #0]
 800caa0:	492e      	ldr	r1, [pc, #184]	; (800cb5c <USBPD_HW_IF_SendBuffer+0x2a8>)
 800caa2:	0013      	movs	r3, r2
 800caa4:	011b      	lsls	r3, r3, #4
 800caa6:	1a9b      	subs	r3, r3, r2
 800caa8:	009b      	lsls	r3, r3, #2
 800caaa:	18cb      	adds	r3, r1, r3
 800caac:	3304      	adds	r3, #4
 800caae:	681b      	ldr	r3, [r3, #0]
 800cab0:	681b      	ldr	r3, [r3, #0]
 800cab2:	2201      	movs	r2, #1
 800cab4:	4013      	ands	r3, r2
 800cab6:	2b01      	cmp	r3, #1
 800cab8:	d0ef      	beq.n	800ca9a <USBPD_HW_IF_SendBuffer+0x1e6>
 800caba:	0004      	movs	r4, r0
 800cabc:	193b      	adds	r3, r7, r4
 800cabe:	781a      	ldrb	r2, [r3, #0]
 800cac0:	4926      	ldr	r1, [pc, #152]	; (800cb5c <USBPD_HW_IF_SendBuffer+0x2a8>)
 800cac2:	0013      	movs	r3, r2
 800cac4:	011b      	lsls	r3, r3, #4
 800cac6:	1a9b      	subs	r3, r3, r2
 800cac8:	009b      	lsls	r3, r3, #2
 800caca:	18cb      	adds	r3, r1, r3
 800cacc:	3304      	adds	r3, #4
 800cace:	681b      	ldr	r3, [r3, #0]
 800cad0:	68ba      	ldr	r2, [r7, #8]
 800cad2:	60da      	str	r2, [r3, #12]
 800cad4:	193b      	adds	r3, r7, r4
 800cad6:	781a      	ldrb	r2, [r3, #0]
 800cad8:	4920      	ldr	r1, [pc, #128]	; (800cb5c <USBPD_HW_IF_SendBuffer+0x2a8>)
 800cada:	0013      	movs	r3, r2
 800cadc:	011b      	lsls	r3, r3, #4
 800cade:	1a9b      	subs	r3, r3, r2
 800cae0:	009b      	lsls	r3, r3, #2
 800cae2:	18cb      	adds	r3, r1, r3
 800cae4:	3304      	adds	r3, #4
 800cae6:	681b      	ldr	r3, [r3, #0]
 800cae8:	687a      	ldr	r2, [r7, #4]
 800caea:	605a      	str	r2, [r3, #4]
 800caec:	193b      	adds	r3, r7, r4
 800caee:	781a      	ldrb	r2, [r3, #0]
 800caf0:	491a      	ldr	r1, [pc, #104]	; (800cb5c <USBPD_HW_IF_SendBuffer+0x2a8>)
 800caf2:	0013      	movs	r3, r2
 800caf4:	011b      	lsls	r3, r3, #4
 800caf6:	1a9b      	subs	r3, r3, r2
 800caf8:	009b      	lsls	r3, r3, #2
 800cafa:	18cb      	adds	r3, r1, r3
 800cafc:	3304      	adds	r3, #4
 800cafe:	681b      	ldr	r3, [r3, #0]
 800cb00:	6819      	ldr	r1, [r3, #0]
 800cb02:	193b      	adds	r3, r7, r4
 800cb04:	781a      	ldrb	r2, [r3, #0]
 800cb06:	4815      	ldr	r0, [pc, #84]	; (800cb5c <USBPD_HW_IF_SendBuffer+0x2a8>)
 800cb08:	0013      	movs	r3, r2
 800cb0a:	011b      	lsls	r3, r3, #4
 800cb0c:	1a9b      	subs	r3, r3, r2
 800cb0e:	009b      	lsls	r3, r3, #2
 800cb10:	18c3      	adds	r3, r0, r3
 800cb12:	3304      	adds	r3, #4
 800cb14:	681b      	ldr	r3, [r3, #0]
 800cb16:	2201      	movs	r2, #1
 800cb18:	430a      	orrs	r2, r1
 800cb1a:	601a      	str	r2, [r3, #0]
 800cb1c:	193b      	adds	r3, r7, r4
 800cb1e:	781a      	ldrb	r2, [r3, #0]
 800cb20:	490e      	ldr	r1, [pc, #56]	; (800cb5c <USBPD_HW_IF_SendBuffer+0x2a8>)
 800cb22:	0013      	movs	r3, r2
 800cb24:	011b      	lsls	r3, r3, #4
 800cb26:	1a9b      	subs	r3, r3, r2
 800cb28:	009b      	lsls	r3, r3, #2
 800cb2a:	585b      	ldr	r3, [r3, r1]
 800cb2c:	687a      	ldr	r2, [r7, #4]
 800cb2e:	0011      	movs	r1, r2
 800cb30:	0018      	movs	r0, r3
 800cb32:	f7ff fe6b 	bl	800c80c <LL_UCPD_WriteTxPaySize>
 800cb36:	193b      	adds	r3, r7, r4
 800cb38:	781a      	ldrb	r2, [r3, #0]
 800cb3a:	4908      	ldr	r1, [pc, #32]	; (800cb5c <USBPD_HW_IF_SendBuffer+0x2a8>)
 800cb3c:	0013      	movs	r3, r2
 800cb3e:	011b      	lsls	r3, r3, #4
 800cb40:	1a9b      	subs	r3, r3, r2
 800cb42:	009b      	lsls	r3, r3, #2
 800cb44:	585b      	ldr	r3, [r3, r1]
 800cb46:	0018      	movs	r0, r3
 800cb48:	f7ff fdf5 	bl	800c736 <LL_UCPD_SendMessage>
 800cb4c:	2327      	movs	r3, #39	; 0x27
 800cb4e:	18fb      	adds	r3, r7, r3
 800cb50:	781b      	ldrb	r3, [r3, #0]
 800cb52:	0018      	movs	r0, r3
 800cb54:	46bd      	mov	sp, r7
 800cb56:	b00b      	add	sp, #44	; 0x2c
 800cb58:	bd90      	pop	{r4, r7, pc}
 800cb5a:	46c0      	nop			; (mov r8, r8)
 800cb5c:	200002c4 	.word	0x200002c4
 800cb60:	080199ac 	.word	0x080199ac
 800cb64:	0008e318 	.word	0x0008e318
 800cb68:	00031b18 	.word	0x00031b18
 800cb6c:	000360d8 	.word	0x000360d8

0800cb70 <USBPD_HW_IF_Send_BIST_Pattern>:
 800cb70:	b580      	push	{r7, lr}
 800cb72:	b082      	sub	sp, #8
 800cb74:	af00      	add	r7, sp, #0
 800cb76:	0002      	movs	r2, r0
 800cb78:	1dfb      	adds	r3, r7, #7
 800cb7a:	701a      	strb	r2, [r3, #0]
 800cb7c:	1dfb      	adds	r3, r7, #7
 800cb7e:	781a      	ldrb	r2, [r3, #0]
 800cb80:	490c      	ldr	r1, [pc, #48]	; (800cbb4 <USBPD_HW_IF_Send_BIST_Pattern+0x44>)
 800cb82:	0013      	movs	r3, r2
 800cb84:	011b      	lsls	r3, r3, #4
 800cb86:	1a9b      	subs	r3, r3, r2
 800cb88:	009b      	lsls	r3, r3, #2
 800cb8a:	585b      	ldr	r3, [r3, r1]
 800cb8c:	2102      	movs	r1, #2
 800cb8e:	0018      	movs	r0, r3
 800cb90:	f7ff fddf 	bl	800c752 <LL_UCPD_SetTxMode>
 800cb94:	1dfb      	adds	r3, r7, #7
 800cb96:	781a      	ldrb	r2, [r3, #0]
 800cb98:	4906      	ldr	r1, [pc, #24]	; (800cbb4 <USBPD_HW_IF_Send_BIST_Pattern+0x44>)
 800cb9a:	0013      	movs	r3, r2
 800cb9c:	011b      	lsls	r3, r3, #4
 800cb9e:	1a9b      	subs	r3, r3, r2
 800cba0:	009b      	lsls	r3, r3, #2
 800cba2:	585b      	ldr	r3, [r3, r1]
 800cba4:	0018      	movs	r0, r3
 800cba6:	f7ff fdc6 	bl	800c736 <LL_UCPD_SendMessage>
 800cbaa:	46c0      	nop			; (mov r8, r8)
 800cbac:	46bd      	mov	sp, r7
 800cbae:	b002      	add	sp, #8
 800cbb0:	bd80      	pop	{r7, pc}
 800cbb2:	46c0      	nop			; (mov r8, r8)
 800cbb4:	200002c4 	.word	0x200002c4

0800cbb8 <USBPDM1_AssertRp>:
 800cbb8:	b580      	push	{r7, lr}
 800cbba:	b082      	sub	sp, #8
 800cbbc:	af00      	add	r7, sp, #0
 800cbbe:	0002      	movs	r2, r0
 800cbc0:	1dfb      	adds	r3, r7, #7
 800cbc2:	701a      	strb	r2, [r3, #0]
 800cbc4:	2001      	movs	r0, #1
 800cbc6:	f7ff fc7d 	bl	800c4c4 <LL_APB2_GRP1_EnableClock>
 800cbca:	1dfb      	adds	r3, r7, #7
 800cbcc:	781a      	ldrb	r2, [r3, #0]
 800cbce:	4953      	ldr	r1, [pc, #332]	; (800cd1c <USBPDM1_AssertRp+0x164>)
 800cbd0:	0013      	movs	r3, r2
 800cbd2:	011b      	lsls	r3, r3, #4
 800cbd4:	1a9b      	subs	r3, r3, r2
 800cbd6:	009b      	lsls	r3, r3, #2
 800cbd8:	18cb      	adds	r3, r1, r3
 800cbda:	3310      	adds	r3, #16
 800cbdc:	681b      	ldr	r3, [r3, #0]
 800cbde:	789b      	ldrb	r3, [r3, #2]
 800cbe0:	079b      	lsls	r3, r3, #30
 800cbe2:	0f9b      	lsrs	r3, r3, #30
 800cbe4:	b2db      	uxtb	r3, r3
 800cbe6:	2b02      	cmp	r3, #2
 800cbe8:	d021      	beq.n	800cc2e <USBPDM1_AssertRp+0x76>
 800cbea:	dc2f      	bgt.n	800cc4c <USBPDM1_AssertRp+0x94>
 800cbec:	2b00      	cmp	r3, #0
 800cbee:	d002      	beq.n	800cbf6 <USBPDM1_AssertRp+0x3e>
 800cbf0:	2b01      	cmp	r3, #1
 800cbf2:	d00d      	beq.n	800cc10 <USBPDM1_AssertRp+0x58>
 800cbf4:	e02a      	b.n	800cc4c <USBPDM1_AssertRp+0x94>
 800cbf6:	1dfb      	adds	r3, r7, #7
 800cbf8:	781a      	ldrb	r2, [r3, #0]
 800cbfa:	4948      	ldr	r1, [pc, #288]	; (800cd1c <USBPDM1_AssertRp+0x164>)
 800cbfc:	0013      	movs	r3, r2
 800cbfe:	011b      	lsls	r3, r3, #4
 800cc00:	1a9b      	subs	r3, r3, r2
 800cc02:	009b      	lsls	r3, r3, #2
 800cc04:	585b      	ldr	r3, [r3, r1]
 800cc06:	2180      	movs	r1, #128	; 0x80
 800cc08:	0018      	movs	r0, r3
 800cc0a:	f7ff fd31 	bl	800c670 <LL_UCPD_SetRpResistor>
 800cc0e:	e01e      	b.n	800cc4e <USBPDM1_AssertRp+0x96>
 800cc10:	1dfb      	adds	r3, r7, #7
 800cc12:	781a      	ldrb	r2, [r3, #0]
 800cc14:	4941      	ldr	r1, [pc, #260]	; (800cd1c <USBPDM1_AssertRp+0x164>)
 800cc16:	0013      	movs	r3, r2
 800cc18:	011b      	lsls	r3, r3, #4
 800cc1a:	1a9b      	subs	r3, r3, r2
 800cc1c:	009b      	lsls	r3, r3, #2
 800cc1e:	585b      	ldr	r3, [r3, r1]
 800cc20:	2280      	movs	r2, #128	; 0x80
 800cc22:	0052      	lsls	r2, r2, #1
 800cc24:	0011      	movs	r1, r2
 800cc26:	0018      	movs	r0, r3
 800cc28:	f7ff fd22 	bl	800c670 <LL_UCPD_SetRpResistor>
 800cc2c:	e00f      	b.n	800cc4e <USBPDM1_AssertRp+0x96>
 800cc2e:	1dfb      	adds	r3, r7, #7
 800cc30:	781a      	ldrb	r2, [r3, #0]
 800cc32:	493a      	ldr	r1, [pc, #232]	; (800cd1c <USBPDM1_AssertRp+0x164>)
 800cc34:	0013      	movs	r3, r2
 800cc36:	011b      	lsls	r3, r3, #4
 800cc38:	1a9b      	subs	r3, r3, r2
 800cc3a:	009b      	lsls	r3, r3, #2
 800cc3c:	585b      	ldr	r3, [r3, r1]
 800cc3e:	22c0      	movs	r2, #192	; 0xc0
 800cc40:	0052      	lsls	r2, r2, #1
 800cc42:	0011      	movs	r1, r2
 800cc44:	0018      	movs	r0, r3
 800cc46:	f7ff fd13 	bl	800c670 <LL_UCPD_SetRpResistor>
 800cc4a:	e000      	b.n	800cc4e <USBPDM1_AssertRp+0x96>
 800cc4c:	46c0      	nop			; (mov r8, r8)
 800cc4e:	1dfb      	adds	r3, r7, #7
 800cc50:	781a      	ldrb	r2, [r3, #0]
 800cc52:	4932      	ldr	r1, [pc, #200]	; (800cd1c <USBPDM1_AssertRp+0x164>)
 800cc54:	0013      	movs	r3, r2
 800cc56:	011b      	lsls	r3, r3, #4
 800cc58:	1a9b      	subs	r3, r3, r2
 800cc5a:	009b      	lsls	r3, r3, #2
 800cc5c:	585b      	ldr	r3, [r3, r1]
 800cc5e:	2100      	movs	r1, #0
 800cc60:	0018      	movs	r0, r3
 800cc62:	f7ff fcd1 	bl	800c608 <LL_UCPD_SetccEnable>
 800cc66:	1dfb      	adds	r3, r7, #7
 800cc68:	781a      	ldrb	r2, [r3, #0]
 800cc6a:	492c      	ldr	r1, [pc, #176]	; (800cd1c <USBPDM1_AssertRp+0x164>)
 800cc6c:	0013      	movs	r3, r2
 800cc6e:	011b      	lsls	r3, r3, #4
 800cc70:	1a9b      	subs	r3, r3, r2
 800cc72:	009b      	lsls	r3, r3, #2
 800cc74:	585b      	ldr	r3, [r3, r1]
 800cc76:	0018      	movs	r0, r3
 800cc78:	f7ff fcea 	bl	800c650 <LL_UCPD_SetSRCRole>
 800cc7c:	1dfb      	adds	r3, r7, #7
 800cc7e:	781a      	ldrb	r2, [r3, #0]
 800cc80:	4926      	ldr	r1, [pc, #152]	; (800cd1c <USBPDM1_AssertRp+0x164>)
 800cc82:	0013      	movs	r3, r2
 800cc84:	011b      	lsls	r3, r3, #4
 800cc86:	1a9b      	subs	r3, r3, r2
 800cc88:	009b      	lsls	r3, r3, #2
 800cc8a:	18cb      	adds	r3, r1, r3
 800cc8c:	3334      	adds	r3, #52	; 0x34
 800cc8e:	681b      	ldr	r3, [r3, #0]
 800cc90:	2b00      	cmp	r3, #0
 800cc92:	d10e      	bne.n	800ccb2 <USBPDM1_AssertRp+0xfa>
 800cc94:	1dfb      	adds	r3, r7, #7
 800cc96:	781a      	ldrb	r2, [r3, #0]
 800cc98:	4920      	ldr	r1, [pc, #128]	; (800cd1c <USBPDM1_AssertRp+0x164>)
 800cc9a:	0013      	movs	r3, r2
 800cc9c:	011b      	lsls	r3, r3, #4
 800cc9e:	1a9b      	subs	r3, r3, r2
 800cca0:	009b      	lsls	r3, r3, #2
 800cca2:	585b      	ldr	r3, [r3, r1]
 800cca4:	22c0      	movs	r2, #192	; 0xc0
 800cca6:	0112      	lsls	r2, r2, #4
 800cca8:	0011      	movs	r1, r2
 800ccaa:	0018      	movs	r0, r3
 800ccac:	f7ff fcac 	bl	800c608 <LL_UCPD_SetccEnable>
 800ccb0:	e01b      	b.n	800ccea <USBPDM1_AssertRp+0x132>
 800ccb2:	1dfb      	adds	r3, r7, #7
 800ccb4:	781a      	ldrb	r2, [r3, #0]
 800ccb6:	4919      	ldr	r1, [pc, #100]	; (800cd1c <USBPDM1_AssertRp+0x164>)
 800ccb8:	0013      	movs	r3, r2
 800ccba:	011b      	lsls	r3, r3, #4
 800ccbc:	1a9b      	subs	r3, r3, r2
 800ccbe:	009b      	lsls	r3, r3, #2
 800ccc0:	5858      	ldr	r0, [r3, r1]
 800ccc2:	1dfb      	adds	r3, r7, #7
 800ccc4:	781a      	ldrb	r2, [r3, #0]
 800ccc6:	4915      	ldr	r1, [pc, #84]	; (800cd1c <USBPDM1_AssertRp+0x164>)
 800ccc8:	0013      	movs	r3, r2
 800ccca:	011b      	lsls	r3, r3, #4
 800cccc:	1a9b      	subs	r3, r3, r2
 800ccce:	009b      	lsls	r3, r3, #2
 800ccd0:	18cb      	adds	r3, r1, r3
 800ccd2:	3334      	adds	r3, #52	; 0x34
 800ccd4:	681b      	ldr	r3, [r3, #0]
 800ccd6:	2b01      	cmp	r3, #1
 800ccd8:	d102      	bne.n	800cce0 <USBPDM1_AssertRp+0x128>
 800ccda:	2380      	movs	r3, #128	; 0x80
 800ccdc:	00db      	lsls	r3, r3, #3
 800ccde:	e001      	b.n	800cce4 <USBPDM1_AssertRp+0x12c>
 800cce0:	2380      	movs	r3, #128	; 0x80
 800cce2:	011b      	lsls	r3, r3, #4
 800cce4:	0019      	movs	r1, r3
 800cce6:	f7ff fc8f 	bl	800c608 <LL_UCPD_SetccEnable>
 800ccea:	4b0d      	ldr	r3, [pc, #52]	; (800cd20 <USBPDM1_AssertRp+0x168>)
 800ccec:	6819      	ldr	r1, [r3, #0]
 800ccee:	1dfb      	adds	r3, r7, #7
 800ccf0:	781a      	ldrb	r2, [r3, #0]
 800ccf2:	480a      	ldr	r0, [pc, #40]	; (800cd1c <USBPDM1_AssertRp+0x164>)
 800ccf4:	0013      	movs	r3, r2
 800ccf6:	011b      	lsls	r3, r3, #4
 800ccf8:	1a9b      	subs	r3, r3, r2
 800ccfa:	009b      	lsls	r3, r3, #2
 800ccfc:	581b      	ldr	r3, [r3, r0]
 800ccfe:	4a09      	ldr	r2, [pc, #36]	; (800cd24 <USBPDM1_AssertRp+0x16c>)
 800cd00:	4293      	cmp	r3, r2
 800cd02:	d102      	bne.n	800cd0a <USBPDM1_AssertRp+0x152>
 800cd04:	2380      	movs	r3, #128	; 0x80
 800cd06:	009b      	lsls	r3, r3, #2
 800cd08:	e001      	b.n	800cd0e <USBPDM1_AssertRp+0x156>
 800cd0a:	2380      	movs	r3, #128	; 0x80
 800cd0c:	00db      	lsls	r3, r3, #3
 800cd0e:	4a04      	ldr	r2, [pc, #16]	; (800cd20 <USBPDM1_AssertRp+0x168>)
 800cd10:	430b      	orrs	r3, r1
 800cd12:	6013      	str	r3, [r2, #0]
 800cd14:	46c0      	nop			; (mov r8, r8)
 800cd16:	46bd      	mov	sp, r7
 800cd18:	b002      	add	sp, #8
 800cd1a:	bd80      	pop	{r7, pc}
 800cd1c:	200002c4 	.word	0x200002c4
 800cd20:	40010000 	.word	0x40010000
 800cd24:	4000a000 	.word	0x4000a000

0800cd28 <USBPDM1_DeAssertRp>:
 800cd28:	b580      	push	{r7, lr}
 800cd2a:	b082      	sub	sp, #8
 800cd2c:	af00      	add	r7, sp, #0
 800cd2e:	0002      	movs	r2, r0
 800cd30:	1dfb      	adds	r3, r7, #7
 800cd32:	701a      	strb	r2, [r3, #0]
 800cd34:	46c0      	nop			; (mov r8, r8)
 800cd36:	46bd      	mov	sp, r7
 800cd38:	b002      	add	sp, #8
 800cd3a:	bd80      	pop	{r7, pc}

0800cd3c <USBPDM1_AssertRd>:
 800cd3c:	b580      	push	{r7, lr}
 800cd3e:	b082      	sub	sp, #8
 800cd40:	af00      	add	r7, sp, #0
 800cd42:	0002      	movs	r2, r0
 800cd44:	1dfb      	adds	r3, r7, #7
 800cd46:	701a      	strb	r2, [r3, #0]
 800cd48:	1dfb      	adds	r3, r7, #7
 800cd4a:	781a      	ldrb	r2, [r3, #0]
 800cd4c:	494b      	ldr	r1, [pc, #300]	; (800ce7c <USBPDM1_AssertRd+0x140>)
 800cd4e:	0013      	movs	r3, r2
 800cd50:	011b      	lsls	r3, r3, #4
 800cd52:	1a9b      	subs	r3, r3, r2
 800cd54:	009b      	lsls	r3, r3, #2
 800cd56:	585b      	ldr	r3, [r3, r1]
 800cd58:	0018      	movs	r0, r3
 800cd5a:	f7ff fbf7 	bl	800c54c <LL_UCPD_TypeCDetectionCC2Disable>
 800cd5e:	1dfb      	adds	r3, r7, #7
 800cd60:	781a      	ldrb	r2, [r3, #0]
 800cd62:	4946      	ldr	r1, [pc, #280]	; (800ce7c <USBPDM1_AssertRd+0x140>)
 800cd64:	0013      	movs	r3, r2
 800cd66:	011b      	lsls	r3, r3, #4
 800cd68:	1a9b      	subs	r3, r3, r2
 800cd6a:	009b      	lsls	r3, r3, #2
 800cd6c:	585b      	ldr	r3, [r3, r1]
 800cd6e:	0018      	movs	r0, r3
 800cd70:	f7ff fc0c 	bl	800c58c <LL_UCPD_TypeCDetectionCC1Disable>
 800cd74:	2001      	movs	r0, #1
 800cd76:	f7ff fba5 	bl	800c4c4 <LL_APB2_GRP1_EnableClock>
 800cd7a:	1dfb      	adds	r3, r7, #7
 800cd7c:	781a      	ldrb	r2, [r3, #0]
 800cd7e:	493f      	ldr	r1, [pc, #252]	; (800ce7c <USBPDM1_AssertRd+0x140>)
 800cd80:	0013      	movs	r3, r2
 800cd82:	011b      	lsls	r3, r3, #4
 800cd84:	1a9b      	subs	r3, r3, r2
 800cd86:	009b      	lsls	r3, r3, #2
 800cd88:	585b      	ldr	r3, [r3, r1]
 800cd8a:	2100      	movs	r1, #0
 800cd8c:	0018      	movs	r0, r3
 800cd8e:	f7ff fc3b 	bl	800c608 <LL_UCPD_SetccEnable>
 800cd92:	1dfb      	adds	r3, r7, #7
 800cd94:	781a      	ldrb	r2, [r3, #0]
 800cd96:	4939      	ldr	r1, [pc, #228]	; (800ce7c <USBPDM1_AssertRd+0x140>)
 800cd98:	0013      	movs	r3, r2
 800cd9a:	011b      	lsls	r3, r3, #4
 800cd9c:	1a9b      	subs	r3, r3, r2
 800cd9e:	009b      	lsls	r3, r3, #2
 800cda0:	585b      	ldr	r3, [r3, r1]
 800cda2:	0018      	movs	r0, r3
 800cda4:	f7ff fc44 	bl	800c630 <LL_UCPD_SetSNKRole>
 800cda8:	1dfb      	adds	r3, r7, #7
 800cdaa:	781a      	ldrb	r2, [r3, #0]
 800cdac:	4933      	ldr	r1, [pc, #204]	; (800ce7c <USBPDM1_AssertRd+0x140>)
 800cdae:	0013      	movs	r3, r2
 800cdb0:	011b      	lsls	r3, r3, #4
 800cdb2:	1a9b      	subs	r3, r3, r2
 800cdb4:	009b      	lsls	r3, r3, #2
 800cdb6:	18cb      	adds	r3, r1, r3
 800cdb8:	3334      	adds	r3, #52	; 0x34
 800cdba:	681b      	ldr	r3, [r3, #0]
 800cdbc:	2b00      	cmp	r3, #0
 800cdbe:	d10e      	bne.n	800cdde <USBPDM1_AssertRd+0xa2>
 800cdc0:	1dfb      	adds	r3, r7, #7
 800cdc2:	781a      	ldrb	r2, [r3, #0]
 800cdc4:	492d      	ldr	r1, [pc, #180]	; (800ce7c <USBPDM1_AssertRd+0x140>)
 800cdc6:	0013      	movs	r3, r2
 800cdc8:	011b      	lsls	r3, r3, #4
 800cdca:	1a9b      	subs	r3, r3, r2
 800cdcc:	009b      	lsls	r3, r3, #2
 800cdce:	585b      	ldr	r3, [r3, r1]
 800cdd0:	22c0      	movs	r2, #192	; 0xc0
 800cdd2:	0112      	lsls	r2, r2, #4
 800cdd4:	0011      	movs	r1, r2
 800cdd6:	0018      	movs	r0, r3
 800cdd8:	f7ff fc16 	bl	800c608 <LL_UCPD_SetccEnable>
 800cddc:	e01b      	b.n	800ce16 <USBPDM1_AssertRd+0xda>
 800cdde:	1dfb      	adds	r3, r7, #7
 800cde0:	781a      	ldrb	r2, [r3, #0]
 800cde2:	4926      	ldr	r1, [pc, #152]	; (800ce7c <USBPDM1_AssertRd+0x140>)
 800cde4:	0013      	movs	r3, r2
 800cde6:	011b      	lsls	r3, r3, #4
 800cde8:	1a9b      	subs	r3, r3, r2
 800cdea:	009b      	lsls	r3, r3, #2
 800cdec:	5858      	ldr	r0, [r3, r1]
 800cdee:	1dfb      	adds	r3, r7, #7
 800cdf0:	781a      	ldrb	r2, [r3, #0]
 800cdf2:	4922      	ldr	r1, [pc, #136]	; (800ce7c <USBPDM1_AssertRd+0x140>)
 800cdf4:	0013      	movs	r3, r2
 800cdf6:	011b      	lsls	r3, r3, #4
 800cdf8:	1a9b      	subs	r3, r3, r2
 800cdfa:	009b      	lsls	r3, r3, #2
 800cdfc:	18cb      	adds	r3, r1, r3
 800cdfe:	3334      	adds	r3, #52	; 0x34
 800ce00:	681b      	ldr	r3, [r3, #0]
 800ce02:	2b01      	cmp	r3, #1
 800ce04:	d102      	bne.n	800ce0c <USBPDM1_AssertRd+0xd0>
 800ce06:	2380      	movs	r3, #128	; 0x80
 800ce08:	00db      	lsls	r3, r3, #3
 800ce0a:	e001      	b.n	800ce10 <USBPDM1_AssertRd+0xd4>
 800ce0c:	2380      	movs	r3, #128	; 0x80
 800ce0e:	011b      	lsls	r3, r3, #4
 800ce10:	0019      	movs	r1, r3
 800ce12:	f7ff fbf9 	bl	800c608 <LL_UCPD_SetccEnable>
 800ce16:	4b1a      	ldr	r3, [pc, #104]	; (800ce80 <USBPDM1_AssertRd+0x144>)
 800ce18:	6819      	ldr	r1, [r3, #0]
 800ce1a:	1dfb      	adds	r3, r7, #7
 800ce1c:	781a      	ldrb	r2, [r3, #0]
 800ce1e:	4817      	ldr	r0, [pc, #92]	; (800ce7c <USBPDM1_AssertRd+0x140>)
 800ce20:	0013      	movs	r3, r2
 800ce22:	011b      	lsls	r3, r3, #4
 800ce24:	1a9b      	subs	r3, r3, r2
 800ce26:	009b      	lsls	r3, r3, #2
 800ce28:	581b      	ldr	r3, [r3, r0]
 800ce2a:	4a16      	ldr	r2, [pc, #88]	; (800ce84 <USBPDM1_AssertRd+0x148>)
 800ce2c:	4293      	cmp	r3, r2
 800ce2e:	d102      	bne.n	800ce36 <USBPDM1_AssertRd+0xfa>
 800ce30:	2380      	movs	r3, #128	; 0x80
 800ce32:	009b      	lsls	r3, r3, #2
 800ce34:	e001      	b.n	800ce3a <USBPDM1_AssertRd+0xfe>
 800ce36:	2380      	movs	r3, #128	; 0x80
 800ce38:	00db      	lsls	r3, r3, #3
 800ce3a:	4a11      	ldr	r2, [pc, #68]	; (800ce80 <USBPDM1_AssertRd+0x144>)
 800ce3c:	430b      	orrs	r3, r1
 800ce3e:	6013      	str	r3, [r2, #0]
 800ce40:	2001      	movs	r0, #1
 800ce42:	f7fa fb2f 	bl	80074a4 <HAL_Delay>
 800ce46:	1dfb      	adds	r3, r7, #7
 800ce48:	781a      	ldrb	r2, [r3, #0]
 800ce4a:	490c      	ldr	r1, [pc, #48]	; (800ce7c <USBPDM1_AssertRd+0x140>)
 800ce4c:	0013      	movs	r3, r2
 800ce4e:	011b      	lsls	r3, r3, #4
 800ce50:	1a9b      	subs	r3, r3, r2
 800ce52:	009b      	lsls	r3, r3, #2
 800ce54:	585b      	ldr	r3, [r3, r1]
 800ce56:	0018      	movs	r0, r3
 800ce58:	f7ff fb68 	bl	800c52c <LL_UCPD_TypeCDetectionCC2Enable>
 800ce5c:	1dfb      	adds	r3, r7, #7
 800ce5e:	781a      	ldrb	r2, [r3, #0]
 800ce60:	4906      	ldr	r1, [pc, #24]	; (800ce7c <USBPDM1_AssertRd+0x140>)
 800ce62:	0013      	movs	r3, r2
 800ce64:	011b      	lsls	r3, r3, #4
 800ce66:	1a9b      	subs	r3, r3, r2
 800ce68:	009b      	lsls	r3, r3, #2
 800ce6a:	585b      	ldr	r3, [r3, r1]
 800ce6c:	0018      	movs	r0, r3
 800ce6e:	f7ff fb7d 	bl	800c56c <LL_UCPD_TypeCDetectionCC1Enable>
 800ce72:	46c0      	nop			; (mov r8, r8)
 800ce74:	46bd      	mov	sp, r7
 800ce76:	b002      	add	sp, #8
 800ce78:	bd80      	pop	{r7, pc}
 800ce7a:	46c0      	nop			; (mov r8, r8)
 800ce7c:	200002c4 	.word	0x200002c4
 800ce80:	40010000 	.word	0x40010000
 800ce84:	4000a000 	.word	0x4000a000

0800ce88 <USBPDM1_DeAssertRd>:
 800ce88:	b580      	push	{r7, lr}
 800ce8a:	b082      	sub	sp, #8
 800ce8c:	af00      	add	r7, sp, #0
 800ce8e:	0002      	movs	r2, r0
 800ce90:	1dfb      	adds	r3, r7, #7
 800ce92:	701a      	strb	r2, [r3, #0]
 800ce94:	46c0      	nop			; (mov r8, r8)
 800ce96:	46bd      	mov	sp, r7
 800ce98:	b002      	add	sp, #8
 800ce9a:	bd80      	pop	{r7, pc}

0800ce9c <USBPDM1_EnterErrorRecovery>:
 800ce9c:	b580      	push	{r7, lr}
 800ce9e:	b082      	sub	sp, #8
 800cea0:	af00      	add	r7, sp, #0
 800cea2:	0002      	movs	r2, r0
 800cea4:	1dfb      	adds	r3, r7, #7
 800cea6:	701a      	strb	r2, [r3, #0]
 800cea8:	2001      	movs	r0, #1
 800ceaa:	f7ff fb0b 	bl	800c4c4 <LL_APB2_GRP1_EnableClock>
 800ceae:	1dfb      	adds	r3, r7, #7
 800ceb0:	781a      	ldrb	r2, [r3, #0]
 800ceb2:	4930      	ldr	r1, [pc, #192]	; (800cf74 <USBPDM1_EnterErrorRecovery+0xd8>)
 800ceb4:	0013      	movs	r3, r2
 800ceb6:	011b      	lsls	r3, r3, #4
 800ceb8:	1a9b      	subs	r3, r3, r2
 800ceba:	009b      	lsls	r3, r3, #2
 800cebc:	585b      	ldr	r3, [r3, r1]
 800cebe:	0018      	movs	r0, r3
 800cec0:	f7ff fbc6 	bl	800c650 <LL_UCPD_SetSRCRole>
 800cec4:	1dfb      	adds	r3, r7, #7
 800cec6:	781a      	ldrb	r2, [r3, #0]
 800cec8:	492a      	ldr	r1, [pc, #168]	; (800cf74 <USBPDM1_EnterErrorRecovery+0xd8>)
 800ceca:	0013      	movs	r3, r2
 800cecc:	011b      	lsls	r3, r3, #4
 800cece:	1a9b      	subs	r3, r3, r2
 800ced0:	009b      	lsls	r3, r3, #2
 800ced2:	585b      	ldr	r3, [r3, r1]
 800ced4:	2100      	movs	r1, #0
 800ced6:	0018      	movs	r0, r3
 800ced8:	f7ff fbca 	bl	800c670 <LL_UCPD_SetRpResistor>
 800cedc:	1dfb      	adds	r3, r7, #7
 800cede:	781a      	ldrb	r2, [r3, #0]
 800cee0:	4924      	ldr	r1, [pc, #144]	; (800cf74 <USBPDM1_EnterErrorRecovery+0xd8>)
 800cee2:	0013      	movs	r3, r2
 800cee4:	011b      	lsls	r3, r3, #4
 800cee6:	1a9b      	subs	r3, r3, r2
 800cee8:	009b      	lsls	r3, r3, #2
 800ceea:	585b      	ldr	r3, [r3, r1]
 800ceec:	2100      	movs	r1, #0
 800ceee:	0018      	movs	r0, r3
 800cef0:	f7ff fb8a 	bl	800c608 <LL_UCPD_SetccEnable>
 800cef4:	4b20      	ldr	r3, [pc, #128]	; (800cf78 <USBPDM1_EnterErrorRecovery+0xdc>)
 800cef6:	6819      	ldr	r1, [r3, #0]
 800cef8:	1dfb      	adds	r3, r7, #7
 800cefa:	781a      	ldrb	r2, [r3, #0]
 800cefc:	481d      	ldr	r0, [pc, #116]	; (800cf74 <USBPDM1_EnterErrorRecovery+0xd8>)
 800cefe:	0013      	movs	r3, r2
 800cf00:	011b      	lsls	r3, r3, #4
 800cf02:	1a9b      	subs	r3, r3, r2
 800cf04:	009b      	lsls	r3, r3, #2
 800cf06:	581b      	ldr	r3, [r3, r0]
 800cf08:	4a1c      	ldr	r2, [pc, #112]	; (800cf7c <USBPDM1_EnterErrorRecovery+0xe0>)
 800cf0a:	4293      	cmp	r3, r2
 800cf0c:	d102      	bne.n	800cf14 <USBPDM1_EnterErrorRecovery+0x78>
 800cf0e:	2380      	movs	r3, #128	; 0x80
 800cf10:	009b      	lsls	r3, r3, #2
 800cf12:	e001      	b.n	800cf18 <USBPDM1_EnterErrorRecovery+0x7c>
 800cf14:	2380      	movs	r3, #128	; 0x80
 800cf16:	00db      	lsls	r3, r3, #3
 800cf18:	4a17      	ldr	r2, [pc, #92]	; (800cf78 <USBPDM1_EnterErrorRecovery+0xdc>)
 800cf1a:	430b      	orrs	r3, r1
 800cf1c:	6013      	str	r3, [r2, #0]
 800cf1e:	1dfb      	adds	r3, r7, #7
 800cf20:	781a      	ldrb	r2, [r3, #0]
 800cf22:	4914      	ldr	r1, [pc, #80]	; (800cf74 <USBPDM1_EnterErrorRecovery+0xd8>)
 800cf24:	0013      	movs	r3, r2
 800cf26:	011b      	lsls	r3, r3, #4
 800cf28:	1a9b      	subs	r3, r3, r2
 800cf2a:	009b      	lsls	r3, r3, #2
 800cf2c:	585b      	ldr	r3, [r3, r1]
 800cf2e:	0018      	movs	r0, r3
 800cf30:	f7ff fbd2 	bl	800c6d8 <LL_UCPD_RxDisable>
 800cf34:	1dfb      	adds	r3, r7, #7
 800cf36:	781a      	ldrb	r2, [r3, #0]
 800cf38:	490e      	ldr	r1, [pc, #56]	; (800cf74 <USBPDM1_EnterErrorRecovery+0xd8>)
 800cf3a:	0013      	movs	r3, r2
 800cf3c:	011b      	lsls	r3, r3, #4
 800cf3e:	1a9b      	subs	r3, r3, r2
 800cf40:	009b      	lsls	r3, r3, #2
 800cf42:	18cb      	adds	r3, r1, r3
 800cf44:	330c      	adds	r3, #12
 800cf46:	681b      	ldr	r3, [r3, #0]
 800cf48:	7a1b      	ldrb	r3, [r3, #8]
 800cf4a:	2202      	movs	r2, #2
 800cf4c:	4013      	ands	r3, r2
 800cf4e:	b2db      	uxtb	r3, r3
 800cf50:	2b00      	cmp	r3, #0
 800cf52:	d00a      	beq.n	800cf6a <USBPDM1_EnterErrorRecovery+0xce>
 800cf54:	1dfb      	adds	r3, r7, #7
 800cf56:	781a      	ldrb	r2, [r3, #0]
 800cf58:	4906      	ldr	r1, [pc, #24]	; (800cf74 <USBPDM1_EnterErrorRecovery+0xd8>)
 800cf5a:	0013      	movs	r3, r2
 800cf5c:	011b      	lsls	r3, r3, #4
 800cf5e:	1a9b      	subs	r3, r3, r2
 800cf60:	009b      	lsls	r3, r3, #2
 800cf62:	585b      	ldr	r3, [r3, r1]
 800cf64:	0018      	movs	r0, r3
 800cf66:	f7ff fb3f 	bl	800c5e8 <LL_UCPD_FRSDetectionDisable>
 800cf6a:	46c0      	nop			; (mov r8, r8)
 800cf6c:	46bd      	mov	sp, r7
 800cf6e:	b002      	add	sp, #8
 800cf70:	bd80      	pop	{r7, pc}
 800cf72:	46c0      	nop			; (mov r8, r8)
 800cf74:	200002c4 	.word	0x200002c4
 800cf78:	40010000 	.word	0x40010000
 800cf7c:	4000a000 	.word	0x4000a000

0800cf80 <USBPD_HW_IF_EnableRX>:
 800cf80:	b580      	push	{r7, lr}
 800cf82:	b082      	sub	sp, #8
 800cf84:	af00      	add	r7, sp, #0
 800cf86:	0002      	movs	r2, r0
 800cf88:	1dfb      	adds	r3, r7, #7
 800cf8a:	701a      	strb	r2, [r3, #0]
 800cf8c:	1dfb      	adds	r3, r7, #7
 800cf8e:	781a      	ldrb	r2, [r3, #0]
 800cf90:	4906      	ldr	r1, [pc, #24]	; (800cfac <USBPD_HW_IF_EnableRX+0x2c>)
 800cf92:	0013      	movs	r3, r2
 800cf94:	011b      	lsls	r3, r3, #4
 800cf96:	1a9b      	subs	r3, r3, r2
 800cf98:	009b      	lsls	r3, r3, #2
 800cf9a:	585b      	ldr	r3, [r3, r1]
 800cf9c:	0018      	movs	r0, r3
 800cf9e:	f7ff fb8d 	bl	800c6bc <LL_UCPD_RxEnable>
 800cfa2:	46c0      	nop			; (mov r8, r8)
 800cfa4:	46bd      	mov	sp, r7
 800cfa6:	b002      	add	sp, #8
 800cfa8:	bd80      	pop	{r7, pc}
 800cfaa:	46c0      	nop			; (mov r8, r8)
 800cfac:	200002c4 	.word	0x200002c4

0800cfb0 <USBPD_HW_IF_DisableRX>:
 800cfb0:	b580      	push	{r7, lr}
 800cfb2:	b082      	sub	sp, #8
 800cfb4:	af00      	add	r7, sp, #0
 800cfb6:	0002      	movs	r2, r0
 800cfb8:	1dfb      	adds	r3, r7, #7
 800cfba:	701a      	strb	r2, [r3, #0]
 800cfbc:	1dfb      	adds	r3, r7, #7
 800cfbe:	781a      	ldrb	r2, [r3, #0]
 800cfc0:	4906      	ldr	r1, [pc, #24]	; (800cfdc <USBPD_HW_IF_DisableRX+0x2c>)
 800cfc2:	0013      	movs	r3, r2
 800cfc4:	011b      	lsls	r3, r3, #4
 800cfc6:	1a9b      	subs	r3, r3, r2
 800cfc8:	009b      	lsls	r3, r3, #2
 800cfca:	585b      	ldr	r3, [r3, r1]
 800cfcc:	0018      	movs	r0, r3
 800cfce:	f7ff fb83 	bl	800c6d8 <LL_UCPD_RxDisable>
 800cfd2:	46c0      	nop			; (mov r8, r8)
 800cfd4:	46bd      	mov	sp, r7
 800cfd6:	b002      	add	sp, #8
 800cfd8:	bd80      	pop	{r7, pc}
 800cfda:	46c0      	nop			; (mov r8, r8)
 800cfdc:	200002c4 	.word	0x200002c4

0800cfe0 <HW_SignalAttachement>:
 800cfe0:	b590      	push	{r4, r7, lr}
 800cfe2:	b085      	sub	sp, #20
 800cfe4:	af00      	add	r7, sp, #0
 800cfe6:	0002      	movs	r2, r0
 800cfe8:	6039      	str	r1, [r7, #0]
 800cfea:	1dfb      	adds	r3, r7, #7
 800cfec:	701a      	strb	r2, [r3, #0]
 800cfee:	f000 fc65 	bl	800d8bc <USBPD_TIM_Init>
 800cff2:	1dfb      	adds	r3, r7, #7
 800cff4:	781c      	ldrb	r4, [r3, #0]
 800cff6:	1dfb      	adds	r3, r7, #7
 800cff8:	781b      	ldrb	r3, [r3, #0]
 800cffa:	0018      	movs	r0, r3
 800cffc:	f7fe fd32 	bl	800ba64 <USBPD_HW_Init_DMATxInstance>
 800d000:	0001      	movs	r1, r0
 800d002:	4aa6      	ldr	r2, [pc, #664]	; (800d29c <HW_SignalAttachement+0x2bc>)
 800d004:	0023      	movs	r3, r4
 800d006:	011b      	lsls	r3, r3, #4
 800d008:	1b1b      	subs	r3, r3, r4
 800d00a:	009b      	lsls	r3, r3, #2
 800d00c:	18d3      	adds	r3, r2, r3
 800d00e:	3304      	adds	r3, #4
 800d010:	6019      	str	r1, [r3, #0]
 800d012:	1dfb      	adds	r3, r7, #7
 800d014:	781c      	ldrb	r4, [r3, #0]
 800d016:	1dfb      	adds	r3, r7, #7
 800d018:	781b      	ldrb	r3, [r3, #0]
 800d01a:	0018      	movs	r0, r3
 800d01c:	f7fe fcd2 	bl	800b9c4 <USBPD_HW_Init_DMARxInstance>
 800d020:	0001      	movs	r1, r0
 800d022:	4a9e      	ldr	r2, [pc, #632]	; (800d29c <HW_SignalAttachement+0x2bc>)
 800d024:	0023      	movs	r3, r4
 800d026:	011b      	lsls	r3, r3, #4
 800d028:	1b1b      	subs	r3, r3, r4
 800d02a:	009b      	lsls	r3, r3, #2
 800d02c:	18d3      	adds	r3, r2, r3
 800d02e:	3308      	adds	r3, #8
 800d030:	6019      	str	r1, [r3, #0]
 800d032:	1dfb      	adds	r3, r7, #7
 800d034:	781a      	ldrb	r2, [r3, #0]
 800d036:	4999      	ldr	r1, [pc, #612]	; (800d29c <HW_SignalAttachement+0x2bc>)
 800d038:	0013      	movs	r3, r2
 800d03a:	011b      	lsls	r3, r3, #4
 800d03c:	1a9b      	subs	r3, r3, r2
 800d03e:	009b      	lsls	r3, r3, #2
 800d040:	585b      	ldr	r3, [r3, r1]
 800d042:	3330      	adds	r3, #48	; 0x30
 800d044:	60fb      	str	r3, [r7, #12]
 800d046:	1dfb      	adds	r3, r7, #7
 800d048:	781a      	ldrb	r2, [r3, #0]
 800d04a:	4994      	ldr	r1, [pc, #592]	; (800d29c <HW_SignalAttachement+0x2bc>)
 800d04c:	0013      	movs	r3, r2
 800d04e:	011b      	lsls	r3, r3, #4
 800d050:	1a9b      	subs	r3, r3, r2
 800d052:	009b      	lsls	r3, r3, #2
 800d054:	18cb      	adds	r3, r1, r3
 800d056:	3308      	adds	r3, #8
 800d058:	681b      	ldr	r3, [r3, #0]
 800d05a:	68fa      	ldr	r2, [r7, #12]
 800d05c:	609a      	str	r2, [r3, #8]
 800d05e:	1dfb      	adds	r3, r7, #7
 800d060:	781a      	ldrb	r2, [r3, #0]
 800d062:	498e      	ldr	r1, [pc, #568]	; (800d29c <HW_SignalAttachement+0x2bc>)
 800d064:	0013      	movs	r3, r2
 800d066:	011b      	lsls	r3, r3, #4
 800d068:	1a9b      	subs	r3, r3, r2
 800d06a:	009b      	lsls	r3, r3, #2
 800d06c:	18cb      	adds	r3, r1, r3
 800d06e:	3330      	adds	r3, #48	; 0x30
 800d070:	6818      	ldr	r0, [r3, #0]
 800d072:	1dfb      	adds	r3, r7, #7
 800d074:	781a      	ldrb	r2, [r3, #0]
 800d076:	4989      	ldr	r1, [pc, #548]	; (800d29c <HW_SignalAttachement+0x2bc>)
 800d078:	0013      	movs	r3, r2
 800d07a:	011b      	lsls	r3, r3, #4
 800d07c:	1a9b      	subs	r3, r3, r2
 800d07e:	009b      	lsls	r3, r3, #2
 800d080:	18cb      	adds	r3, r1, r3
 800d082:	3308      	adds	r3, #8
 800d084:	681b      	ldr	r3, [r3, #0]
 800d086:	0002      	movs	r2, r0
 800d088:	60da      	str	r2, [r3, #12]
 800d08a:	1dfb      	adds	r3, r7, #7
 800d08c:	781a      	ldrb	r2, [r3, #0]
 800d08e:	4983      	ldr	r1, [pc, #524]	; (800d29c <HW_SignalAttachement+0x2bc>)
 800d090:	0013      	movs	r3, r2
 800d092:	011b      	lsls	r3, r3, #4
 800d094:	1a9b      	subs	r3, r3, r2
 800d096:	009b      	lsls	r3, r3, #2
 800d098:	18cb      	adds	r3, r1, r3
 800d09a:	3308      	adds	r3, #8
 800d09c:	681b      	ldr	r3, [r3, #0]
 800d09e:	2284      	movs	r2, #132	; 0x84
 800d0a0:	0052      	lsls	r2, r2, #1
 800d0a2:	605a      	str	r2, [r3, #4]
 800d0a4:	1dfb      	adds	r3, r7, #7
 800d0a6:	781a      	ldrb	r2, [r3, #0]
 800d0a8:	497c      	ldr	r1, [pc, #496]	; (800d29c <HW_SignalAttachement+0x2bc>)
 800d0aa:	0013      	movs	r3, r2
 800d0ac:	011b      	lsls	r3, r3, #4
 800d0ae:	1a9b      	subs	r3, r3, r2
 800d0b0:	009b      	lsls	r3, r3, #2
 800d0b2:	18cb      	adds	r3, r1, r3
 800d0b4:	3308      	adds	r3, #8
 800d0b6:	681b      	ldr	r3, [r3, #0]
 800d0b8:	6819      	ldr	r1, [r3, #0]
 800d0ba:	1dfb      	adds	r3, r7, #7
 800d0bc:	781a      	ldrb	r2, [r3, #0]
 800d0be:	4877      	ldr	r0, [pc, #476]	; (800d29c <HW_SignalAttachement+0x2bc>)
 800d0c0:	0013      	movs	r3, r2
 800d0c2:	011b      	lsls	r3, r3, #4
 800d0c4:	1a9b      	subs	r3, r3, r2
 800d0c6:	009b      	lsls	r3, r3, #2
 800d0c8:	18c3      	adds	r3, r0, r3
 800d0ca:	3308      	adds	r3, #8
 800d0cc:	681b      	ldr	r3, [r3, #0]
 800d0ce:	2201      	movs	r2, #1
 800d0d0:	430a      	orrs	r2, r1
 800d0d2:	601a      	str	r2, [r3, #0]
 800d0d4:	1dfb      	adds	r3, r7, #7
 800d0d6:	781a      	ldrb	r2, [r3, #0]
 800d0d8:	4970      	ldr	r1, [pc, #448]	; (800d29c <HW_SignalAttachement+0x2bc>)
 800d0da:	0013      	movs	r3, r2
 800d0dc:	011b      	lsls	r3, r3, #4
 800d0de:	1a9b      	subs	r3, r3, r2
 800d0e0:	009b      	lsls	r3, r3, #2
 800d0e2:	585b      	ldr	r3, [r3, r1]
 800d0e4:	3324      	adds	r3, #36	; 0x24
 800d0e6:	60fb      	str	r3, [r7, #12]
 800d0e8:	1dfb      	adds	r3, r7, #7
 800d0ea:	781a      	ldrb	r2, [r3, #0]
 800d0ec:	496b      	ldr	r1, [pc, #428]	; (800d29c <HW_SignalAttachement+0x2bc>)
 800d0ee:	0013      	movs	r3, r2
 800d0f0:	011b      	lsls	r3, r3, #4
 800d0f2:	1a9b      	subs	r3, r3, r2
 800d0f4:	009b      	lsls	r3, r3, #2
 800d0f6:	18cb      	adds	r3, r1, r3
 800d0f8:	3304      	adds	r3, #4
 800d0fa:	681b      	ldr	r3, [r3, #0]
 800d0fc:	68fa      	ldr	r2, [r7, #12]
 800d0fe:	609a      	str	r2, [r3, #8]
 800d100:	1dfb      	adds	r3, r7, #7
 800d102:	781a      	ldrb	r2, [r3, #0]
 800d104:	4965      	ldr	r1, [pc, #404]	; (800d29c <HW_SignalAttachement+0x2bc>)
 800d106:	0013      	movs	r3, r2
 800d108:	011b      	lsls	r3, r3, #4
 800d10a:	1a9b      	subs	r3, r3, r2
 800d10c:	009b      	lsls	r3, r3, #2
 800d10e:	585b      	ldr	r3, [r3, r1]
 800d110:	6919      	ldr	r1, [r3, #16]
 800d112:	1dfb      	adds	r3, r7, #7
 800d114:	781a      	ldrb	r2, [r3, #0]
 800d116:	4861      	ldr	r0, [pc, #388]	; (800d29c <HW_SignalAttachement+0x2bc>)
 800d118:	0013      	movs	r3, r2
 800d11a:	011b      	lsls	r3, r3, #4
 800d11c:	1a9b      	subs	r3, r3, r2
 800d11e:	009b      	lsls	r3, r3, #2
 800d120:	581b      	ldr	r3, [r3, r0]
 800d122:	4a5f      	ldr	r2, [pc, #380]	; (800d2a0 <HW_SignalAttachement+0x2c0>)
 800d124:	430a      	orrs	r2, r1
 800d126:	611a      	str	r2, [r3, #16]
 800d128:	1dfb      	adds	r3, r7, #7
 800d12a:	781a      	ldrb	r2, [r3, #0]
 800d12c:	495b      	ldr	r1, [pc, #364]	; (800d29c <HW_SignalAttachement+0x2bc>)
 800d12e:	0013      	movs	r3, r2
 800d130:	011b      	lsls	r3, r3, #4
 800d132:	1a9b      	subs	r3, r3, r2
 800d134:	009b      	lsls	r3, r3, #2
 800d136:	18cb      	adds	r3, r1, r3
 800d138:	3334      	adds	r3, #52	; 0x34
 800d13a:	683a      	ldr	r2, [r7, #0]
 800d13c:	601a      	str	r2, [r3, #0]
 800d13e:	1dfb      	adds	r3, r7, #7
 800d140:	781a      	ldrb	r2, [r3, #0]
 800d142:	4956      	ldr	r1, [pc, #344]	; (800d29c <HW_SignalAttachement+0x2bc>)
 800d144:	0013      	movs	r3, r2
 800d146:	011b      	lsls	r3, r3, #4
 800d148:	1a9b      	subs	r3, r3, r2
 800d14a:	009b      	lsls	r3, r3, #2
 800d14c:	5858      	ldr	r0, [r3, r1]
 800d14e:	1dfb      	adds	r3, r7, #7
 800d150:	781a      	ldrb	r2, [r3, #0]
 800d152:	4952      	ldr	r1, [pc, #328]	; (800d29c <HW_SignalAttachement+0x2bc>)
 800d154:	0013      	movs	r3, r2
 800d156:	011b      	lsls	r3, r3, #4
 800d158:	1a9b      	subs	r3, r3, r2
 800d15a:	009b      	lsls	r3, r3, #2
 800d15c:	18cb      	adds	r3, r1, r3
 800d15e:	3334      	adds	r3, #52	; 0x34
 800d160:	681b      	ldr	r3, [r3, #0]
 800d162:	2b01      	cmp	r3, #1
 800d164:	d101      	bne.n	800d16a <HW_SignalAttachement+0x18a>
 800d166:	2300      	movs	r3, #0
 800d168:	e000      	b.n	800d16c <HW_SignalAttachement+0x18c>
 800d16a:	2340      	movs	r3, #64	; 0x40
 800d16c:	0019      	movs	r1, r3
 800d16e:	f7ff fa93 	bl	800c698 <LL_UCPD_SetCCPin>
 800d172:	1dfb      	adds	r3, r7, #7
 800d174:	781a      	ldrb	r2, [r3, #0]
 800d176:	4949      	ldr	r1, [pc, #292]	; (800d29c <HW_SignalAttachement+0x2bc>)
 800d178:	0013      	movs	r3, r2
 800d17a:	011b      	lsls	r3, r3, #4
 800d17c:	1a9b      	subs	r3, r3, r2
 800d17e:	009b      	lsls	r3, r3, #2
 800d180:	18cb      	adds	r3, r1, r3
 800d182:	330c      	adds	r3, #12
 800d184:	681b      	ldr	r3, [r3, #0]
 800d186:	7a1b      	ldrb	r3, [r3, #8]
 800d188:	2202      	movs	r2, #2
 800d18a:	4013      	ands	r3, r2
 800d18c:	b2db      	uxtb	r3, r3
 800d18e:	2b00      	cmp	r3, #0
 800d190:	d034      	beq.n	800d1fc <HW_SignalAttachement+0x21c>
 800d192:	1dfb      	adds	r3, r7, #7
 800d194:	781a      	ldrb	r2, [r3, #0]
 800d196:	4941      	ldr	r1, [pc, #260]	; (800d29c <HW_SignalAttachement+0x2bc>)
 800d198:	0013      	movs	r3, r2
 800d19a:	011b      	lsls	r3, r3, #4
 800d19c:	1a9b      	subs	r3, r3, r2
 800d19e:	009b      	lsls	r3, r3, #2
 800d1a0:	18cb      	adds	r3, r1, r3
 800d1a2:	3334      	adds	r3, #52	; 0x34
 800d1a4:	681b      	ldr	r3, [r3, #0]
 800d1a6:	2b01      	cmp	r3, #1
 800d1a8:	d101      	bne.n	800d1ae <HW_SignalAttachement+0x1ce>
 800d1aa:	2301      	movs	r3, #1
 800d1ac:	e000      	b.n	800d1b0 <HW_SignalAttachement+0x1d0>
 800d1ae:	2302      	movs	r3, #2
 800d1b0:	1dfa      	adds	r2, r7, #7
 800d1b2:	7812      	ldrb	r2, [r2, #0]
 800d1b4:	0019      	movs	r1, r3
 800d1b6:	0010      	movs	r0, r2
 800d1b8:	f7fe fca4 	bl	800bb04 <USBPD_HW_SetFRSSignalling>
 800d1bc:	1dfb      	adds	r3, r7, #7
 800d1be:	781a      	ldrb	r2, [r3, #0]
 800d1c0:	4936      	ldr	r1, [pc, #216]	; (800d29c <HW_SignalAttachement+0x2bc>)
 800d1c2:	0013      	movs	r3, r2
 800d1c4:	011b      	lsls	r3, r3, #4
 800d1c6:	1a9b      	subs	r3, r3, r2
 800d1c8:	009b      	lsls	r3, r3, #2
 800d1ca:	585b      	ldr	r3, [r3, r1]
 800d1cc:	0018      	movs	r0, r3
 800d1ce:	f7ff f9fb 	bl	800c5c8 <LL_UCPD_FRSDetectionEnable>
 800d1d2:	1dfb      	adds	r3, r7, #7
 800d1d4:	781a      	ldrb	r2, [r3, #0]
 800d1d6:	4931      	ldr	r1, [pc, #196]	; (800d29c <HW_SignalAttachement+0x2bc>)
 800d1d8:	0013      	movs	r3, r2
 800d1da:	011b      	lsls	r3, r3, #4
 800d1dc:	1a9b      	subs	r3, r3, r2
 800d1de:	009b      	lsls	r3, r3, #2
 800d1e0:	585b      	ldr	r3, [r3, r1]
 800d1e2:	6919      	ldr	r1, [r3, #16]
 800d1e4:	1dfb      	adds	r3, r7, #7
 800d1e6:	781a      	ldrb	r2, [r3, #0]
 800d1e8:	482c      	ldr	r0, [pc, #176]	; (800d29c <HW_SignalAttachement+0x2bc>)
 800d1ea:	0013      	movs	r3, r2
 800d1ec:	011b      	lsls	r3, r3, #4
 800d1ee:	1a9b      	subs	r3, r3, r2
 800d1f0:	009b      	lsls	r3, r3, #2
 800d1f2:	581b      	ldr	r3, [r3, r0]
 800d1f4:	2280      	movs	r2, #128	; 0x80
 800d1f6:	0352      	lsls	r2, r2, #13
 800d1f8:	430a      	orrs	r2, r1
 800d1fa:	611a      	str	r2, [r3, #16]
 800d1fc:	1dfb      	adds	r3, r7, #7
 800d1fe:	781a      	ldrb	r2, [r3, #0]
 800d200:	4926      	ldr	r1, [pc, #152]	; (800d29c <HW_SignalAttachement+0x2bc>)
 800d202:	0013      	movs	r3, r2
 800d204:	011b      	lsls	r3, r3, #4
 800d206:	1a9b      	subs	r3, r3, r2
 800d208:	009b      	lsls	r3, r3, #2
 800d20a:	18cb      	adds	r3, r1, r3
 800d20c:	3334      	adds	r3, #52	; 0x34
 800d20e:	681b      	ldr	r3, [r3, #0]
 800d210:	2b01      	cmp	r3, #1
 800d212:	d10e      	bne.n	800d232 <HW_SignalAttachement+0x252>
 800d214:	1dfb      	adds	r3, r7, #7
 800d216:	781a      	ldrb	r2, [r3, #0]
 800d218:	4920      	ldr	r1, [pc, #128]	; (800d29c <HW_SignalAttachement+0x2bc>)
 800d21a:	0013      	movs	r3, r2
 800d21c:	011b      	lsls	r3, r3, #4
 800d21e:	1a9b      	subs	r3, r3, r2
 800d220:	009b      	lsls	r3, r3, #2
 800d222:	585b      	ldr	r3, [r3, r1]
 800d224:	2280      	movs	r2, #128	; 0x80
 800d226:	00d2      	lsls	r2, r2, #3
 800d228:	0011      	movs	r1, r2
 800d22a:	0018      	movs	r0, r3
 800d22c:	f7ff f9ec 	bl	800c608 <LL_UCPD_SetccEnable>
 800d230:	e00d      	b.n	800d24e <HW_SignalAttachement+0x26e>
 800d232:	1dfb      	adds	r3, r7, #7
 800d234:	781a      	ldrb	r2, [r3, #0]
 800d236:	4919      	ldr	r1, [pc, #100]	; (800d29c <HW_SignalAttachement+0x2bc>)
 800d238:	0013      	movs	r3, r2
 800d23a:	011b      	lsls	r3, r3, #4
 800d23c:	1a9b      	subs	r3, r3, r2
 800d23e:	009b      	lsls	r3, r3, #2
 800d240:	585b      	ldr	r3, [r3, r1]
 800d242:	2280      	movs	r2, #128	; 0x80
 800d244:	0112      	lsls	r2, r2, #4
 800d246:	0011      	movs	r1, r2
 800d248:	0018      	movs	r0, r3
 800d24a:	f7ff f9dd 	bl	800c608 <LL_UCPD_SetccEnable>
 800d24e:	1dfb      	adds	r3, r7, #7
 800d250:	781a      	ldrb	r2, [r3, #0]
 800d252:	4912      	ldr	r1, [pc, #72]	; (800d29c <HW_SignalAttachement+0x2bc>)
 800d254:	0013      	movs	r3, r2
 800d256:	011b      	lsls	r3, r3, #4
 800d258:	1a9b      	subs	r3, r3, r2
 800d25a:	009b      	lsls	r3, r3, #2
 800d25c:	585b      	ldr	r3, [r3, r1]
 800d25e:	2100      	movs	r1, #0
 800d260:	0018      	movs	r0, r3
 800d262:	f7ff fa48 	bl	800c6f6 <LL_UCPD_SetRxMode>
 800d266:	1dfb      	adds	r3, r7, #7
 800d268:	781a      	ldrb	r2, [r3, #0]
 800d26a:	490c      	ldr	r1, [pc, #48]	; (800d29c <HW_SignalAttachement+0x2bc>)
 800d26c:	0013      	movs	r3, r2
 800d26e:	011b      	lsls	r3, r3, #4
 800d270:	1a9b      	subs	r3, r3, r2
 800d272:	009b      	lsls	r3, r3, #2
 800d274:	585b      	ldr	r3, [r3, r1]
 800d276:	0018      	movs	r0, r3
 800d278:	f7ff fa7d 	bl	800c776 <LL_UCPD_RxDMAEnable>
 800d27c:	1dfb      	adds	r3, r7, #7
 800d27e:	781a      	ldrb	r2, [r3, #0]
 800d280:	4906      	ldr	r1, [pc, #24]	; (800d29c <HW_SignalAttachement+0x2bc>)
 800d282:	0013      	movs	r3, r2
 800d284:	011b      	lsls	r3, r3, #4
 800d286:	1a9b      	subs	r3, r3, r2
 800d288:	009b      	lsls	r3, r3, #2
 800d28a:	585b      	ldr	r3, [r3, r1]
 800d28c:	0018      	movs	r0, r3
 800d28e:	f7ff fa91 	bl	800c7b4 <LL_UCPD_TxDMAEnable>
 800d292:	46c0      	nop			; (mov r8, r8)
 800d294:	46bd      	mov	sp, r7
 800d296:	b005      	add	sp, #20
 800d298:	bd90      	pop	{r4, r7, pc}
 800d29a:	46c0      	nop			; (mov r8, r8)
 800d29c:	200002c4 	.word	0x200002c4
 800d2a0:	00001e7e 	.word	0x00001e7e

0800d2a4 <HW_SignalDetachment>:
 800d2a4:	b580      	push	{r7, lr}
 800d2a6:	b082      	sub	sp, #8
 800d2a8:	af00      	add	r7, sp, #0
 800d2aa:	0002      	movs	r2, r0
 800d2ac:	1dfb      	adds	r3, r7, #7
 800d2ae:	701a      	strb	r2, [r3, #0]
 800d2b0:	1dfb      	adds	r3, r7, #7
 800d2b2:	781a      	ldrb	r2, [r3, #0]
 800d2b4:	4941      	ldr	r1, [pc, #260]	; (800d3bc <HW_SignalDetachment+0x118>)
 800d2b6:	0013      	movs	r3, r2
 800d2b8:	011b      	lsls	r3, r3, #4
 800d2ba:	1a9b      	subs	r3, r3, r2
 800d2bc:	009b      	lsls	r3, r3, #2
 800d2be:	585b      	ldr	r3, [r3, r1]
 800d2c0:	0018      	movs	r0, r3
 800d2c2:	f7ff fa67 	bl	800c794 <LL_UCPD_RxDMADisable>
 800d2c6:	1dfb      	adds	r3, r7, #7
 800d2c8:	781a      	ldrb	r2, [r3, #0]
 800d2ca:	493c      	ldr	r1, [pc, #240]	; (800d3bc <HW_SignalDetachment+0x118>)
 800d2cc:	0013      	movs	r3, r2
 800d2ce:	011b      	lsls	r3, r3, #4
 800d2d0:	1a9b      	subs	r3, r3, r2
 800d2d2:	009b      	lsls	r3, r3, #2
 800d2d4:	585b      	ldr	r3, [r3, r1]
 800d2d6:	0018      	movs	r0, r3
 800d2d8:	f7ff fa7c 	bl	800c7d4 <LL_UCPD_TxDMADisable>
 800d2dc:	1dfb      	adds	r3, r7, #7
 800d2de:	781a      	ldrb	r2, [r3, #0]
 800d2e0:	4936      	ldr	r1, [pc, #216]	; (800d3bc <HW_SignalDetachment+0x118>)
 800d2e2:	0013      	movs	r3, r2
 800d2e4:	011b      	lsls	r3, r3, #4
 800d2e6:	1a9b      	subs	r3, r3, r2
 800d2e8:	009b      	lsls	r3, r3, #2
 800d2ea:	585b      	ldr	r3, [r3, r1]
 800d2ec:	0018      	movs	r0, r3
 800d2ee:	f7ff f9f3 	bl	800c6d8 <LL_UCPD_RxDisable>
 800d2f2:	1dfb      	adds	r3, r7, #7
 800d2f4:	781a      	ldrb	r2, [r3, #0]
 800d2f6:	4931      	ldr	r1, [pc, #196]	; (800d3bc <HW_SignalDetachment+0x118>)
 800d2f8:	0013      	movs	r3, r2
 800d2fa:	011b      	lsls	r3, r3, #4
 800d2fc:	1a9b      	subs	r3, r3, r2
 800d2fe:	009b      	lsls	r3, r3, #2
 800d300:	585b      	ldr	r3, [r3, r1]
 800d302:	22c0      	movs	r2, #192	; 0xc0
 800d304:	0212      	lsls	r2, r2, #8
 800d306:	611a      	str	r2, [r3, #16]
 800d308:	1dfb      	adds	r3, r7, #7
 800d30a:	781b      	ldrb	r3, [r3, #0]
 800d30c:	0018      	movs	r0, r3
 800d30e:	f7fe fbef 	bl	800baf0 <USBPD_HW_DeInit_DMATxInstance>
 800d312:	1dfb      	adds	r3, r7, #7
 800d314:	781b      	ldrb	r3, [r3, #0]
 800d316:	0018      	movs	r0, r3
 800d318:	f7fe fb9a 	bl	800ba50 <USBPD_HW_DeInit_DMARxInstance>
 800d31c:	1dfb      	adds	r3, r7, #7
 800d31e:	781a      	ldrb	r2, [r3, #0]
 800d320:	4926      	ldr	r1, [pc, #152]	; (800d3bc <HW_SignalDetachment+0x118>)
 800d322:	0013      	movs	r3, r2
 800d324:	011b      	lsls	r3, r3, #4
 800d326:	1a9b      	subs	r3, r3, r2
 800d328:	009b      	lsls	r3, r3, #2
 800d32a:	585b      	ldr	r3, [r3, r1]
 800d32c:	22c0      	movs	r2, #192	; 0xc0
 800d32e:	0112      	lsls	r2, r2, #4
 800d330:	0011      	movs	r1, r2
 800d332:	0018      	movs	r0, r3
 800d334:	f7ff f968 	bl	800c608 <LL_UCPD_SetccEnable>
 800d338:	1dfb      	adds	r3, r7, #7
 800d33a:	781a      	ldrb	r2, [r3, #0]
 800d33c:	491f      	ldr	r1, [pc, #124]	; (800d3bc <HW_SignalDetachment+0x118>)
 800d33e:	0013      	movs	r3, r2
 800d340:	011b      	lsls	r3, r3, #4
 800d342:	1a9b      	subs	r3, r3, r2
 800d344:	009b      	lsls	r3, r3, #2
 800d346:	18cb      	adds	r3, r1, r3
 800d348:	3310      	adds	r3, #16
 800d34a:	681b      	ldr	r3, [r3, #0]
 800d34c:	781b      	ldrb	r3, [r3, #0]
 800d34e:	2204      	movs	r2, #4
 800d350:	4013      	ands	r3, r2
 800d352:	b2db      	uxtb	r3, r3
 800d354:	2b00      	cmp	r3, #0
 800d356:	d104      	bne.n	800d362 <HW_SignalDetachment+0xbe>
 800d358:	1dfb      	adds	r3, r7, #7
 800d35a:	781b      	ldrb	r3, [r3, #0]
 800d35c:	0018      	movs	r0, r3
 800d35e:	f005 fce5 	bl	8012d2c <BSP_USBPD_PWR_VBUSDeInit>
 800d362:	1dfb      	adds	r3, r7, #7
 800d364:	781a      	ldrb	r2, [r3, #0]
 800d366:	4915      	ldr	r1, [pc, #84]	; (800d3bc <HW_SignalDetachment+0x118>)
 800d368:	0013      	movs	r3, r2
 800d36a:	011b      	lsls	r3, r3, #4
 800d36c:	1a9b      	subs	r3, r3, r2
 800d36e:	009b      	lsls	r3, r3, #2
 800d370:	18cb      	adds	r3, r1, r3
 800d372:	330c      	adds	r3, #12
 800d374:	681b      	ldr	r3, [r3, #0]
 800d376:	7a1b      	ldrb	r3, [r3, #8]
 800d378:	2202      	movs	r2, #2
 800d37a:	4013      	ands	r3, r2
 800d37c:	b2db      	uxtb	r3, r3
 800d37e:	2b00      	cmp	r3, #0
 800d380:	d00a      	beq.n	800d398 <HW_SignalDetachment+0xf4>
 800d382:	1dfb      	adds	r3, r7, #7
 800d384:	781a      	ldrb	r2, [r3, #0]
 800d386:	490d      	ldr	r1, [pc, #52]	; (800d3bc <HW_SignalDetachment+0x118>)
 800d388:	0013      	movs	r3, r2
 800d38a:	011b      	lsls	r3, r3, #4
 800d38c:	1a9b      	subs	r3, r3, r2
 800d38e:	009b      	lsls	r3, r3, #2
 800d390:	585b      	ldr	r3, [r3, r1]
 800d392:	0018      	movs	r0, r3
 800d394:	f7ff f928 	bl	800c5e8 <LL_UCPD_FRSDetectionDisable>
 800d398:	1dfb      	adds	r3, r7, #7
 800d39a:	781a      	ldrb	r2, [r3, #0]
 800d39c:	4907      	ldr	r1, [pc, #28]	; (800d3bc <HW_SignalDetachment+0x118>)
 800d39e:	0013      	movs	r3, r2
 800d3a0:	011b      	lsls	r3, r3, #4
 800d3a2:	1a9b      	subs	r3, r3, r2
 800d3a4:	009b      	lsls	r3, r3, #2
 800d3a6:	18cb      	adds	r3, r1, r3
 800d3a8:	3334      	adds	r3, #52	; 0x34
 800d3aa:	2200      	movs	r2, #0
 800d3ac:	601a      	str	r2, [r3, #0]
 800d3ae:	f000 fb25 	bl	800d9fc <USBPD_TIM_DeInit>
 800d3b2:	46c0      	nop			; (mov r8, r8)
 800d3b4:	46bd      	mov	sp, r7
 800d3b6:	b002      	add	sp, #8
 800d3b8:	bd80      	pop	{r7, pc}
 800d3ba:	46c0      	nop			; (mov r8, r8)
 800d3bc:	200002c4 	.word	0x200002c4

0800d3c0 <USBPD_HW_IF_SetResistor_SinkTxNG>:
 800d3c0:	b580      	push	{r7, lr}
 800d3c2:	b082      	sub	sp, #8
 800d3c4:	af00      	add	r7, sp, #0
 800d3c6:	0002      	movs	r2, r0
 800d3c8:	1dfb      	adds	r3, r7, #7
 800d3ca:	701a      	strb	r2, [r3, #0]
 800d3cc:	1dfb      	adds	r3, r7, #7
 800d3ce:	781a      	ldrb	r2, [r3, #0]
 800d3d0:	4907      	ldr	r1, [pc, #28]	; (800d3f0 <USBPD_HW_IF_SetResistor_SinkTxNG+0x30>)
 800d3d2:	0013      	movs	r3, r2
 800d3d4:	011b      	lsls	r3, r3, #4
 800d3d6:	1a9b      	subs	r3, r3, r2
 800d3d8:	009b      	lsls	r3, r3, #2
 800d3da:	585b      	ldr	r3, [r3, r1]
 800d3dc:	2280      	movs	r2, #128	; 0x80
 800d3de:	0052      	lsls	r2, r2, #1
 800d3e0:	0011      	movs	r1, r2
 800d3e2:	0018      	movs	r0, r3
 800d3e4:	f7ff f944 	bl	800c670 <LL_UCPD_SetRpResistor>
 800d3e8:	46c0      	nop			; (mov r8, r8)
 800d3ea:	46bd      	mov	sp, r7
 800d3ec:	b002      	add	sp, #8
 800d3ee:	bd80      	pop	{r7, pc}
 800d3f0:	200002c4 	.word	0x200002c4

0800d3f4 <USBPD_HW_IF_SetResistor_SinkTxOK>:
 800d3f4:	b580      	push	{r7, lr}
 800d3f6:	b082      	sub	sp, #8
 800d3f8:	af00      	add	r7, sp, #0
 800d3fa:	0002      	movs	r2, r0
 800d3fc:	1dfb      	adds	r3, r7, #7
 800d3fe:	701a      	strb	r2, [r3, #0]
 800d400:	1dfb      	adds	r3, r7, #7
 800d402:	781a      	ldrb	r2, [r3, #0]
 800d404:	4907      	ldr	r1, [pc, #28]	; (800d424 <USBPD_HW_IF_SetResistor_SinkTxOK+0x30>)
 800d406:	0013      	movs	r3, r2
 800d408:	011b      	lsls	r3, r3, #4
 800d40a:	1a9b      	subs	r3, r3, r2
 800d40c:	009b      	lsls	r3, r3, #2
 800d40e:	585b      	ldr	r3, [r3, r1]
 800d410:	22c0      	movs	r2, #192	; 0xc0
 800d412:	0052      	lsls	r2, r2, #1
 800d414:	0011      	movs	r1, r2
 800d416:	0018      	movs	r0, r3
 800d418:	f7ff f92a 	bl	800c670 <LL_UCPD_SetRpResistor>
 800d41c:	46c0      	nop			; (mov r8, r8)
 800d41e:	46bd      	mov	sp, r7
 800d420:	b002      	add	sp, #8
 800d422:	bd80      	pop	{r7, pc}
 800d424:	200002c4 	.word	0x200002c4

0800d428 <USBPD_HW_IF_IsResistor_SinkTxOk>:
 800d428:	b580      	push	{r7, lr}
 800d42a:	b082      	sub	sp, #8
 800d42c:	af00      	add	r7, sp, #0
 800d42e:	0002      	movs	r2, r0
 800d430:	1dfb      	adds	r3, r7, #7
 800d432:	701a      	strb	r2, [r3, #0]
 800d434:	1dfb      	adds	r3, r7, #7
 800d436:	781a      	ldrb	r2, [r3, #0]
 800d438:	491c      	ldr	r1, [pc, #112]	; (800d4ac <USBPD_HW_IF_IsResistor_SinkTxOk+0x84>)
 800d43a:	0013      	movs	r3, r2
 800d43c:	011b      	lsls	r3, r3, #4
 800d43e:	1a9b      	subs	r3, r3, r2
 800d440:	009b      	lsls	r3, r3, #2
 800d442:	18cb      	adds	r3, r1, r3
 800d444:	3334      	adds	r3, #52	; 0x34
 800d446:	681b      	ldr	r3, [r3, #0]
 800d448:	2b01      	cmp	r3, #1
 800d44a:	d002      	beq.n	800d452 <USBPD_HW_IF_IsResistor_SinkTxOk+0x2a>
 800d44c:	2b02      	cmp	r3, #2
 800d44e:	d012      	beq.n	800d476 <USBPD_HW_IF_IsResistor_SinkTxOk+0x4e>
 800d450:	e026      	b.n	800d4a0 <USBPD_HW_IF_IsResistor_SinkTxOk+0x78>
 800d452:	1dfb      	adds	r3, r7, #7
 800d454:	781a      	ldrb	r2, [r3, #0]
 800d456:	4915      	ldr	r1, [pc, #84]	; (800d4ac <USBPD_HW_IF_IsResistor_SinkTxOk+0x84>)
 800d458:	0013      	movs	r3, r2
 800d45a:	011b      	lsls	r3, r3, #4
 800d45c:	1a9b      	subs	r3, r3, r2
 800d45e:	009b      	lsls	r3, r3, #2
 800d460:	585b      	ldr	r3, [r3, r1]
 800d462:	695a      	ldr	r2, [r3, #20]
 800d464:	23c0      	movs	r3, #192	; 0xc0
 800d466:	029b      	lsls	r3, r3, #10
 800d468:	401a      	ands	r2, r3
 800d46a:	23c0      	movs	r3, #192	; 0xc0
 800d46c:	029b      	lsls	r3, r3, #10
 800d46e:	429a      	cmp	r2, r3
 800d470:	d113      	bne.n	800d49a <USBPD_HW_IF_IsResistor_SinkTxOk+0x72>
 800d472:	2301      	movs	r3, #1
 800d474:	e015      	b.n	800d4a2 <USBPD_HW_IF_IsResistor_SinkTxOk+0x7a>
 800d476:	1dfb      	adds	r3, r7, #7
 800d478:	781a      	ldrb	r2, [r3, #0]
 800d47a:	490c      	ldr	r1, [pc, #48]	; (800d4ac <USBPD_HW_IF_IsResistor_SinkTxOk+0x84>)
 800d47c:	0013      	movs	r3, r2
 800d47e:	011b      	lsls	r3, r3, #4
 800d480:	1a9b      	subs	r3, r3, r2
 800d482:	009b      	lsls	r3, r3, #2
 800d484:	585b      	ldr	r3, [r3, r1]
 800d486:	695a      	ldr	r2, [r3, #20]
 800d488:	23c0      	movs	r3, #192	; 0xc0
 800d48a:	031b      	lsls	r3, r3, #12
 800d48c:	401a      	ands	r2, r3
 800d48e:	23c0      	movs	r3, #192	; 0xc0
 800d490:	031b      	lsls	r3, r3, #12
 800d492:	429a      	cmp	r2, r3
 800d494:	d103      	bne.n	800d49e <USBPD_HW_IF_IsResistor_SinkTxOk+0x76>
 800d496:	2301      	movs	r3, #1
 800d498:	e003      	b.n	800d4a2 <USBPD_HW_IF_IsResistor_SinkTxOk+0x7a>
 800d49a:	46c0      	nop			; (mov r8, r8)
 800d49c:	e000      	b.n	800d4a0 <USBPD_HW_IF_IsResistor_SinkTxOk+0x78>
 800d49e:	46c0      	nop			; (mov r8, r8)
 800d4a0:	2300      	movs	r3, #0
 800d4a2:	0018      	movs	r0, r3
 800d4a4:	46bd      	mov	sp, r7
 800d4a6:	b002      	add	sp, #8
 800d4a8:	bd80      	pop	{r7, pc}
 800d4aa:	46c0      	nop			; (mov r8, r8)
 800d4ac:	200002c4 	.word	0x200002c4

0800d4b0 <USBPD_HW_IF_FastRoleSwapSignalling>:
 800d4b0:	b580      	push	{r7, lr}
 800d4b2:	b082      	sub	sp, #8
 800d4b4:	af00      	add	r7, sp, #0
 800d4b6:	0002      	movs	r2, r0
 800d4b8:	1dfb      	adds	r3, r7, #7
 800d4ba:	701a      	strb	r2, [r3, #0]
 800d4bc:	1dfb      	adds	r3, r7, #7
 800d4be:	781a      	ldrb	r2, [r3, #0]
 800d4c0:	4906      	ldr	r1, [pc, #24]	; (800d4dc <USBPD_HW_IF_FastRoleSwapSignalling+0x2c>)
 800d4c2:	0013      	movs	r3, r2
 800d4c4:	011b      	lsls	r3, r3, #4
 800d4c6:	1a9b      	subs	r3, r3, r2
 800d4c8:	009b      	lsls	r3, r3, #2
 800d4ca:	585b      	ldr	r3, [r3, r1]
 800d4cc:	0018      	movs	r0, r3
 800d4ce:	f7ff f86c 	bl	800c5aa <LL_UCPD_SignalFRSTX>
 800d4d2:	46c0      	nop			; (mov r8, r8)
 800d4d4:	46bd      	mov	sp, r7
 800d4d6:	b002      	add	sp, #8
 800d4d8:	bd80      	pop	{r7, pc}
 800d4da:	46c0      	nop			; (mov r8, r8)
 800d4dc:	200002c4 	.word	0x200002c4

0800d4e0 <HW_IF_PWR_GetVoltage>:
 800d4e0:	b580      	push	{r7, lr}
 800d4e2:	b084      	sub	sp, #16
 800d4e4:	af00      	add	r7, sp, #0
 800d4e6:	0002      	movs	r2, r0
 800d4e8:	1dfb      	adds	r3, r7, #7
 800d4ea:	701a      	strb	r2, [r3, #0]
 800d4ec:	1dfb      	adds	r3, r7, #7
 800d4ee:	781b      	ldrb	r3, [r3, #0]
 800d4f0:	220c      	movs	r2, #12
 800d4f2:	18ba      	adds	r2, r7, r2
 800d4f4:	0011      	movs	r1, r2
 800d4f6:	0018      	movs	r0, r3
 800d4f8:	f005 fc36 	bl	8012d68 <BSP_USBPD_PWR_VBUSGetVoltage>
 800d4fc:	68fb      	ldr	r3, [r7, #12]
 800d4fe:	b29b      	uxth	r3, r3
 800d500:	0018      	movs	r0, r3
 800d502:	46bd      	mov	sp, r7
 800d504:	b004      	add	sp, #16
 800d506:	bd80      	pop	{r7, pc}

0800d508 <HW_IF_PWR_GetCurrent>:
 800d508:	b580      	push	{r7, lr}
 800d50a:	b084      	sub	sp, #16
 800d50c:	af00      	add	r7, sp, #0
 800d50e:	0002      	movs	r2, r0
 800d510:	1dfb      	adds	r3, r7, #7
 800d512:	701a      	strb	r2, [r3, #0]
 800d514:	1dfb      	adds	r3, r7, #7
 800d516:	781b      	ldrb	r3, [r3, #0]
 800d518:	220c      	movs	r2, #12
 800d51a:	18ba      	adds	r2, r7, r2
 800d51c:	0011      	movs	r1, r2
 800d51e:	0018      	movs	r0, r3
 800d520:	f005 fc60 	bl	8012de4 <BSP_USBPD_PWR_VBUSGetCurrent>
 800d524:	68fb      	ldr	r3, [r7, #12]
 800d526:	b21b      	sxth	r3, r3
 800d528:	0018      	movs	r0, r3
 800d52a:	46bd      	mov	sp, r7
 800d52c:	b004      	add	sp, #16
 800d52e:	bd80      	pop	{r7, pc}

0800d530 <LL_APB2_GRP1_EnableClock>:
 800d530:	b580      	push	{r7, lr}
 800d532:	b084      	sub	sp, #16
 800d534:	af00      	add	r7, sp, #0
 800d536:	6078      	str	r0, [r7, #4]
 800d538:	4b07      	ldr	r3, [pc, #28]	; (800d558 <LL_APB2_GRP1_EnableClock+0x28>)
 800d53a:	6c19      	ldr	r1, [r3, #64]	; 0x40
 800d53c:	4b06      	ldr	r3, [pc, #24]	; (800d558 <LL_APB2_GRP1_EnableClock+0x28>)
 800d53e:	687a      	ldr	r2, [r7, #4]
 800d540:	430a      	orrs	r2, r1
 800d542:	641a      	str	r2, [r3, #64]	; 0x40
 800d544:	4b04      	ldr	r3, [pc, #16]	; (800d558 <LL_APB2_GRP1_EnableClock+0x28>)
 800d546:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d548:	687a      	ldr	r2, [r7, #4]
 800d54a:	4013      	ands	r3, r2
 800d54c:	60fb      	str	r3, [r7, #12]
 800d54e:	68fb      	ldr	r3, [r7, #12]
 800d550:	46c0      	nop			; (mov r8, r8)
 800d552:	46bd      	mov	sp, r7
 800d554:	b004      	add	sp, #16
 800d556:	bd80      	pop	{r7, pc}
 800d558:	40021000 	.word	0x40021000

0800d55c <LL_APB2_GRP1_DisableClock>:
 800d55c:	b580      	push	{r7, lr}
 800d55e:	b082      	sub	sp, #8
 800d560:	af00      	add	r7, sp, #0
 800d562:	6078      	str	r0, [r7, #4]
 800d564:	4b05      	ldr	r3, [pc, #20]	; (800d57c <LL_APB2_GRP1_DisableClock+0x20>)
 800d566:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800d568:	687b      	ldr	r3, [r7, #4]
 800d56a:	43d9      	mvns	r1, r3
 800d56c:	4b03      	ldr	r3, [pc, #12]	; (800d57c <LL_APB2_GRP1_DisableClock+0x20>)
 800d56e:	400a      	ands	r2, r1
 800d570:	641a      	str	r2, [r3, #64]	; 0x40
 800d572:	46c0      	nop			; (mov r8, r8)
 800d574:	46bd      	mov	sp, r7
 800d576:	b002      	add	sp, #8
 800d578:	bd80      	pop	{r7, pc}
 800d57a:	46c0      	nop			; (mov r8, r8)
 800d57c:	40021000 	.word	0x40021000

0800d580 <LL_TIM_EnableCounter>:
 800d580:	b580      	push	{r7, lr}
 800d582:	b082      	sub	sp, #8
 800d584:	af00      	add	r7, sp, #0
 800d586:	6078      	str	r0, [r7, #4]
 800d588:	687b      	ldr	r3, [r7, #4]
 800d58a:	681b      	ldr	r3, [r3, #0]
 800d58c:	2201      	movs	r2, #1
 800d58e:	431a      	orrs	r2, r3
 800d590:	687b      	ldr	r3, [r7, #4]
 800d592:	601a      	str	r2, [r3, #0]
 800d594:	46c0      	nop			; (mov r8, r8)
 800d596:	46bd      	mov	sp, r7
 800d598:	b002      	add	sp, #8
 800d59a:	bd80      	pop	{r7, pc}

0800d59c <LL_TIM_SetCounterMode>:
 800d59c:	b580      	push	{r7, lr}
 800d59e:	b082      	sub	sp, #8
 800d5a0:	af00      	add	r7, sp, #0
 800d5a2:	6078      	str	r0, [r7, #4]
 800d5a4:	6039      	str	r1, [r7, #0]
 800d5a6:	687b      	ldr	r3, [r7, #4]
 800d5a8:	681b      	ldr	r3, [r3, #0]
 800d5aa:	2270      	movs	r2, #112	; 0x70
 800d5ac:	4393      	bics	r3, r2
 800d5ae:	001a      	movs	r2, r3
 800d5b0:	683b      	ldr	r3, [r7, #0]
 800d5b2:	431a      	orrs	r2, r3
 800d5b4:	687b      	ldr	r3, [r7, #4]
 800d5b6:	601a      	str	r2, [r3, #0]
 800d5b8:	46c0      	nop			; (mov r8, r8)
 800d5ba:	46bd      	mov	sp, r7
 800d5bc:	b002      	add	sp, #8
 800d5be:	bd80      	pop	{r7, pc}

0800d5c0 <LL_TIM_SetPrescaler>:
 800d5c0:	b580      	push	{r7, lr}
 800d5c2:	b082      	sub	sp, #8
 800d5c4:	af00      	add	r7, sp, #0
 800d5c6:	6078      	str	r0, [r7, #4]
 800d5c8:	6039      	str	r1, [r7, #0]
 800d5ca:	687b      	ldr	r3, [r7, #4]
 800d5cc:	683a      	ldr	r2, [r7, #0]
 800d5ce:	629a      	str	r2, [r3, #40]	; 0x28
 800d5d0:	46c0      	nop			; (mov r8, r8)
 800d5d2:	46bd      	mov	sp, r7
 800d5d4:	b002      	add	sp, #8
 800d5d6:	bd80      	pop	{r7, pc}

0800d5d8 <LL_TIM_GetPrescaler>:
 800d5d8:	b580      	push	{r7, lr}
 800d5da:	b082      	sub	sp, #8
 800d5dc:	af00      	add	r7, sp, #0
 800d5de:	6078      	str	r0, [r7, #4]
 800d5e0:	687b      	ldr	r3, [r7, #4]
 800d5e2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d5e4:	0018      	movs	r0, r3
 800d5e6:	46bd      	mov	sp, r7
 800d5e8:	b002      	add	sp, #8
 800d5ea:	bd80      	pop	{r7, pc}

0800d5ec <LL_TIM_SetAutoReload>:
 800d5ec:	b580      	push	{r7, lr}
 800d5ee:	b082      	sub	sp, #8
 800d5f0:	af00      	add	r7, sp, #0
 800d5f2:	6078      	str	r0, [r7, #4]
 800d5f4:	6039      	str	r1, [r7, #0]
 800d5f6:	687b      	ldr	r3, [r7, #4]
 800d5f8:	683a      	ldr	r2, [r7, #0]
 800d5fa:	62da      	str	r2, [r3, #44]	; 0x2c
 800d5fc:	46c0      	nop			; (mov r8, r8)
 800d5fe:	46bd      	mov	sp, r7
 800d600:	b002      	add	sp, #8
 800d602:	bd80      	pop	{r7, pc}

0800d604 <LL_TIM_OC_SetMode>:
 800d604:	b580      	push	{r7, lr}
 800d606:	b086      	sub	sp, #24
 800d608:	af00      	add	r7, sp, #0
 800d60a:	60f8      	str	r0, [r7, #12]
 800d60c:	60b9      	str	r1, [r7, #8]
 800d60e:	607a      	str	r2, [r7, #4]
 800d610:	68bb      	ldr	r3, [r7, #8]
 800d612:	2b01      	cmp	r3, #1
 800d614:	d02c      	beq.n	800d670 <LL_TIM_OC_SetMode+0x6c>
 800d616:	68bb      	ldr	r3, [r7, #8]
 800d618:	2b04      	cmp	r3, #4
 800d61a:	d027      	beq.n	800d66c <LL_TIM_OC_SetMode+0x68>
 800d61c:	68bb      	ldr	r3, [r7, #8]
 800d61e:	2b10      	cmp	r3, #16
 800d620:	d022      	beq.n	800d668 <LL_TIM_OC_SetMode+0x64>
 800d622:	68bb      	ldr	r3, [r7, #8]
 800d624:	2b40      	cmp	r3, #64	; 0x40
 800d626:	d01d      	beq.n	800d664 <LL_TIM_OC_SetMode+0x60>
 800d628:	68ba      	ldr	r2, [r7, #8]
 800d62a:	2380      	movs	r3, #128	; 0x80
 800d62c:	005b      	lsls	r3, r3, #1
 800d62e:	429a      	cmp	r2, r3
 800d630:	d016      	beq.n	800d660 <LL_TIM_OC_SetMode+0x5c>
 800d632:	68ba      	ldr	r2, [r7, #8]
 800d634:	2380      	movs	r3, #128	; 0x80
 800d636:	00db      	lsls	r3, r3, #3
 800d638:	429a      	cmp	r2, r3
 800d63a:	d00f      	beq.n	800d65c <LL_TIM_OC_SetMode+0x58>
 800d63c:	68ba      	ldr	r2, [r7, #8]
 800d63e:	2380      	movs	r3, #128	; 0x80
 800d640:	015b      	lsls	r3, r3, #5
 800d642:	429a      	cmp	r2, r3
 800d644:	d008      	beq.n	800d658 <LL_TIM_OC_SetMode+0x54>
 800d646:	68ba      	ldr	r2, [r7, #8]
 800d648:	2380      	movs	r3, #128	; 0x80
 800d64a:	025b      	lsls	r3, r3, #9
 800d64c:	429a      	cmp	r2, r3
 800d64e:	d101      	bne.n	800d654 <LL_TIM_OC_SetMode+0x50>
 800d650:	2307      	movs	r3, #7
 800d652:	e00e      	b.n	800d672 <LL_TIM_OC_SetMode+0x6e>
 800d654:	2308      	movs	r3, #8
 800d656:	e00c      	b.n	800d672 <LL_TIM_OC_SetMode+0x6e>
 800d658:	2306      	movs	r3, #6
 800d65a:	e00a      	b.n	800d672 <LL_TIM_OC_SetMode+0x6e>
 800d65c:	2305      	movs	r3, #5
 800d65e:	e008      	b.n	800d672 <LL_TIM_OC_SetMode+0x6e>
 800d660:	2304      	movs	r3, #4
 800d662:	e006      	b.n	800d672 <LL_TIM_OC_SetMode+0x6e>
 800d664:	2303      	movs	r3, #3
 800d666:	e004      	b.n	800d672 <LL_TIM_OC_SetMode+0x6e>
 800d668:	2302      	movs	r3, #2
 800d66a:	e002      	b.n	800d672 <LL_TIM_OC_SetMode+0x6e>
 800d66c:	2301      	movs	r3, #1
 800d66e:	e000      	b.n	800d672 <LL_TIM_OC_SetMode+0x6e>
 800d670:	2300      	movs	r3, #0
 800d672:	2017      	movs	r0, #23
 800d674:	183a      	adds	r2, r7, r0
 800d676:	7013      	strb	r3, [r2, #0]
 800d678:	68fb      	ldr	r3, [r7, #12]
 800d67a:	3318      	adds	r3, #24
 800d67c:	0019      	movs	r1, r3
 800d67e:	183b      	adds	r3, r7, r0
 800d680:	781b      	ldrb	r3, [r3, #0]
 800d682:	4a0e      	ldr	r2, [pc, #56]	; (800d6bc <LL_TIM_OC_SetMode+0xb8>)
 800d684:	5cd3      	ldrb	r3, [r2, r3]
 800d686:	18cb      	adds	r3, r1, r3
 800d688:	613b      	str	r3, [r7, #16]
 800d68a:	693b      	ldr	r3, [r7, #16]
 800d68c:	681b      	ldr	r3, [r3, #0]
 800d68e:	183a      	adds	r2, r7, r0
 800d690:	7812      	ldrb	r2, [r2, #0]
 800d692:	490b      	ldr	r1, [pc, #44]	; (800d6c0 <LL_TIM_OC_SetMode+0xbc>)
 800d694:	5c8a      	ldrb	r2, [r1, r2]
 800d696:	0011      	movs	r1, r2
 800d698:	4a0a      	ldr	r2, [pc, #40]	; (800d6c4 <LL_TIM_OC_SetMode+0xc0>)
 800d69a:	408a      	lsls	r2, r1
 800d69c:	43d2      	mvns	r2, r2
 800d69e:	401a      	ands	r2, r3
 800d6a0:	183b      	adds	r3, r7, r0
 800d6a2:	781b      	ldrb	r3, [r3, #0]
 800d6a4:	4906      	ldr	r1, [pc, #24]	; (800d6c0 <LL_TIM_OC_SetMode+0xbc>)
 800d6a6:	5ccb      	ldrb	r3, [r1, r3]
 800d6a8:	0019      	movs	r1, r3
 800d6aa:	687b      	ldr	r3, [r7, #4]
 800d6ac:	408b      	lsls	r3, r1
 800d6ae:	431a      	orrs	r2, r3
 800d6b0:	693b      	ldr	r3, [r7, #16]
 800d6b2:	601a      	str	r2, [r3, #0]
 800d6b4:	46c0      	nop			; (mov r8, r8)
 800d6b6:	46bd      	mov	sp, r7
 800d6b8:	b006      	add	sp, #24
 800d6ba:	bd80      	pop	{r7, pc}
 800d6bc:	080199cc 	.word	0x080199cc
 800d6c0:	080199d8 	.word	0x080199d8
 800d6c4:	00010073 	.word	0x00010073

0800d6c8 <LL_TIM_OC_SetPolarity>:
 800d6c8:	b580      	push	{r7, lr}
 800d6ca:	b086      	sub	sp, #24
 800d6cc:	af00      	add	r7, sp, #0
 800d6ce:	60f8      	str	r0, [r7, #12]
 800d6d0:	60b9      	str	r1, [r7, #8]
 800d6d2:	607a      	str	r2, [r7, #4]
 800d6d4:	68bb      	ldr	r3, [r7, #8]
 800d6d6:	2b01      	cmp	r3, #1
 800d6d8:	d02c      	beq.n	800d734 <LL_TIM_OC_SetPolarity+0x6c>
 800d6da:	68bb      	ldr	r3, [r7, #8]
 800d6dc:	2b04      	cmp	r3, #4
 800d6de:	d027      	beq.n	800d730 <LL_TIM_OC_SetPolarity+0x68>
 800d6e0:	68bb      	ldr	r3, [r7, #8]
 800d6e2:	2b10      	cmp	r3, #16
 800d6e4:	d022      	beq.n	800d72c <LL_TIM_OC_SetPolarity+0x64>
 800d6e6:	68bb      	ldr	r3, [r7, #8]
 800d6e8:	2b40      	cmp	r3, #64	; 0x40
 800d6ea:	d01d      	beq.n	800d728 <LL_TIM_OC_SetPolarity+0x60>
 800d6ec:	68ba      	ldr	r2, [r7, #8]
 800d6ee:	2380      	movs	r3, #128	; 0x80
 800d6f0:	005b      	lsls	r3, r3, #1
 800d6f2:	429a      	cmp	r2, r3
 800d6f4:	d016      	beq.n	800d724 <LL_TIM_OC_SetPolarity+0x5c>
 800d6f6:	68ba      	ldr	r2, [r7, #8]
 800d6f8:	2380      	movs	r3, #128	; 0x80
 800d6fa:	00db      	lsls	r3, r3, #3
 800d6fc:	429a      	cmp	r2, r3
 800d6fe:	d00f      	beq.n	800d720 <LL_TIM_OC_SetPolarity+0x58>
 800d700:	68ba      	ldr	r2, [r7, #8]
 800d702:	2380      	movs	r3, #128	; 0x80
 800d704:	015b      	lsls	r3, r3, #5
 800d706:	429a      	cmp	r2, r3
 800d708:	d008      	beq.n	800d71c <LL_TIM_OC_SetPolarity+0x54>
 800d70a:	68ba      	ldr	r2, [r7, #8]
 800d70c:	2380      	movs	r3, #128	; 0x80
 800d70e:	025b      	lsls	r3, r3, #9
 800d710:	429a      	cmp	r2, r3
 800d712:	d101      	bne.n	800d718 <LL_TIM_OC_SetPolarity+0x50>
 800d714:	2307      	movs	r3, #7
 800d716:	e00e      	b.n	800d736 <LL_TIM_OC_SetPolarity+0x6e>
 800d718:	2308      	movs	r3, #8
 800d71a:	e00c      	b.n	800d736 <LL_TIM_OC_SetPolarity+0x6e>
 800d71c:	2306      	movs	r3, #6
 800d71e:	e00a      	b.n	800d736 <LL_TIM_OC_SetPolarity+0x6e>
 800d720:	2305      	movs	r3, #5
 800d722:	e008      	b.n	800d736 <LL_TIM_OC_SetPolarity+0x6e>
 800d724:	2304      	movs	r3, #4
 800d726:	e006      	b.n	800d736 <LL_TIM_OC_SetPolarity+0x6e>
 800d728:	2303      	movs	r3, #3
 800d72a:	e004      	b.n	800d736 <LL_TIM_OC_SetPolarity+0x6e>
 800d72c:	2302      	movs	r3, #2
 800d72e:	e002      	b.n	800d736 <LL_TIM_OC_SetPolarity+0x6e>
 800d730:	2301      	movs	r3, #1
 800d732:	e000      	b.n	800d736 <LL_TIM_OC_SetPolarity+0x6e>
 800d734:	2300      	movs	r3, #0
 800d736:	2017      	movs	r0, #23
 800d738:	183a      	adds	r2, r7, r0
 800d73a:	7013      	strb	r3, [r2, #0]
 800d73c:	68fb      	ldr	r3, [r7, #12]
 800d73e:	6a1b      	ldr	r3, [r3, #32]
 800d740:	183a      	adds	r2, r7, r0
 800d742:	7812      	ldrb	r2, [r2, #0]
 800d744:	490a      	ldr	r1, [pc, #40]	; (800d770 <LL_TIM_OC_SetPolarity+0xa8>)
 800d746:	5c8a      	ldrb	r2, [r1, r2]
 800d748:	0011      	movs	r1, r2
 800d74a:	2202      	movs	r2, #2
 800d74c:	408a      	lsls	r2, r1
 800d74e:	43d2      	mvns	r2, r2
 800d750:	401a      	ands	r2, r3
 800d752:	183b      	adds	r3, r7, r0
 800d754:	781b      	ldrb	r3, [r3, #0]
 800d756:	4906      	ldr	r1, [pc, #24]	; (800d770 <LL_TIM_OC_SetPolarity+0xa8>)
 800d758:	5ccb      	ldrb	r3, [r1, r3]
 800d75a:	0019      	movs	r1, r3
 800d75c:	687b      	ldr	r3, [r7, #4]
 800d75e:	408b      	lsls	r3, r1
 800d760:	431a      	orrs	r2, r3
 800d762:	68fb      	ldr	r3, [r7, #12]
 800d764:	621a      	str	r2, [r3, #32]
 800d766:	46c0      	nop			; (mov r8, r8)
 800d768:	46bd      	mov	sp, r7
 800d76a:	b006      	add	sp, #24
 800d76c:	bd80      	pop	{r7, pc}
 800d76e:	46c0      	nop			; (mov r8, r8)
 800d770:	080199e4 	.word	0x080199e4

0800d774 <LL_TIM_OC_SetCompareCH1>:
 800d774:	b580      	push	{r7, lr}
 800d776:	b082      	sub	sp, #8
 800d778:	af00      	add	r7, sp, #0
 800d77a:	6078      	str	r0, [r7, #4]
 800d77c:	6039      	str	r1, [r7, #0]
 800d77e:	687b      	ldr	r3, [r7, #4]
 800d780:	683a      	ldr	r2, [r7, #0]
 800d782:	635a      	str	r2, [r3, #52]	; 0x34
 800d784:	46c0      	nop			; (mov r8, r8)
 800d786:	46bd      	mov	sp, r7
 800d788:	b002      	add	sp, #8
 800d78a:	bd80      	pop	{r7, pc}

0800d78c <LL_TIM_OC_SetCompareCH2>:
 800d78c:	b580      	push	{r7, lr}
 800d78e:	b082      	sub	sp, #8
 800d790:	af00      	add	r7, sp, #0
 800d792:	6078      	str	r0, [r7, #4]
 800d794:	6039      	str	r1, [r7, #0]
 800d796:	687b      	ldr	r3, [r7, #4]
 800d798:	683a      	ldr	r2, [r7, #0]
 800d79a:	639a      	str	r2, [r3, #56]	; 0x38
 800d79c:	46c0      	nop			; (mov r8, r8)
 800d79e:	46bd      	mov	sp, r7
 800d7a0:	b002      	add	sp, #8
 800d7a2:	bd80      	pop	{r7, pc}

0800d7a4 <LL_TIM_OC_SetCompareCH3>:
 800d7a4:	b580      	push	{r7, lr}
 800d7a6:	b082      	sub	sp, #8
 800d7a8:	af00      	add	r7, sp, #0
 800d7aa:	6078      	str	r0, [r7, #4]
 800d7ac:	6039      	str	r1, [r7, #0]
 800d7ae:	687b      	ldr	r3, [r7, #4]
 800d7b0:	683a      	ldr	r2, [r7, #0]
 800d7b2:	63da      	str	r2, [r3, #60]	; 0x3c
 800d7b4:	46c0      	nop			; (mov r8, r8)
 800d7b6:	46bd      	mov	sp, r7
 800d7b8:	b002      	add	sp, #8
 800d7ba:	bd80      	pop	{r7, pc}

0800d7bc <LL_TIM_OC_SetCompareCH4>:
 800d7bc:	b580      	push	{r7, lr}
 800d7be:	b082      	sub	sp, #8
 800d7c0:	af00      	add	r7, sp, #0
 800d7c2:	6078      	str	r0, [r7, #4]
 800d7c4:	6039      	str	r1, [r7, #0]
 800d7c6:	687b      	ldr	r3, [r7, #4]
 800d7c8:	683a      	ldr	r2, [r7, #0]
 800d7ca:	641a      	str	r2, [r3, #64]	; 0x40
 800d7cc:	46c0      	nop			; (mov r8, r8)
 800d7ce:	46bd      	mov	sp, r7
 800d7d0:	b002      	add	sp, #8
 800d7d2:	bd80      	pop	{r7, pc}

0800d7d4 <LL_TIM_ClearFlag_CC1>:
 800d7d4:	b580      	push	{r7, lr}
 800d7d6:	b082      	sub	sp, #8
 800d7d8:	af00      	add	r7, sp, #0
 800d7da:	6078      	str	r0, [r7, #4]
 800d7dc:	687b      	ldr	r3, [r7, #4]
 800d7de:	2203      	movs	r2, #3
 800d7e0:	4252      	negs	r2, r2
 800d7e2:	611a      	str	r2, [r3, #16]
 800d7e4:	46c0      	nop			; (mov r8, r8)
 800d7e6:	46bd      	mov	sp, r7
 800d7e8:	b002      	add	sp, #8
 800d7ea:	bd80      	pop	{r7, pc}

0800d7ec <LL_TIM_IsActiveFlag_CC1>:
 800d7ec:	b580      	push	{r7, lr}
 800d7ee:	b082      	sub	sp, #8
 800d7f0:	af00      	add	r7, sp, #0
 800d7f2:	6078      	str	r0, [r7, #4]
 800d7f4:	687b      	ldr	r3, [r7, #4]
 800d7f6:	691b      	ldr	r3, [r3, #16]
 800d7f8:	2202      	movs	r2, #2
 800d7fa:	4013      	ands	r3, r2
 800d7fc:	2b02      	cmp	r3, #2
 800d7fe:	d101      	bne.n	800d804 <LL_TIM_IsActiveFlag_CC1+0x18>
 800d800:	2301      	movs	r3, #1
 800d802:	e000      	b.n	800d806 <LL_TIM_IsActiveFlag_CC1+0x1a>
 800d804:	2300      	movs	r3, #0
 800d806:	0018      	movs	r0, r3
 800d808:	46bd      	mov	sp, r7
 800d80a:	b002      	add	sp, #8
 800d80c:	bd80      	pop	{r7, pc}

0800d80e <LL_TIM_ClearFlag_CC2>:
 800d80e:	b580      	push	{r7, lr}
 800d810:	b082      	sub	sp, #8
 800d812:	af00      	add	r7, sp, #0
 800d814:	6078      	str	r0, [r7, #4]
 800d816:	687b      	ldr	r3, [r7, #4]
 800d818:	2205      	movs	r2, #5
 800d81a:	4252      	negs	r2, r2
 800d81c:	611a      	str	r2, [r3, #16]
 800d81e:	46c0      	nop			; (mov r8, r8)
 800d820:	46bd      	mov	sp, r7
 800d822:	b002      	add	sp, #8
 800d824:	bd80      	pop	{r7, pc}

0800d826 <LL_TIM_IsActiveFlag_CC2>:
 800d826:	b580      	push	{r7, lr}
 800d828:	b082      	sub	sp, #8
 800d82a:	af00      	add	r7, sp, #0
 800d82c:	6078      	str	r0, [r7, #4]
 800d82e:	687b      	ldr	r3, [r7, #4]
 800d830:	691b      	ldr	r3, [r3, #16]
 800d832:	2204      	movs	r2, #4
 800d834:	4013      	ands	r3, r2
 800d836:	2b04      	cmp	r3, #4
 800d838:	d101      	bne.n	800d83e <LL_TIM_IsActiveFlag_CC2+0x18>
 800d83a:	2301      	movs	r3, #1
 800d83c:	e000      	b.n	800d840 <LL_TIM_IsActiveFlag_CC2+0x1a>
 800d83e:	2300      	movs	r3, #0
 800d840:	0018      	movs	r0, r3
 800d842:	46bd      	mov	sp, r7
 800d844:	b002      	add	sp, #8
 800d846:	bd80      	pop	{r7, pc}

0800d848 <LL_TIM_ClearFlag_CC3>:
 800d848:	b580      	push	{r7, lr}
 800d84a:	b082      	sub	sp, #8
 800d84c:	af00      	add	r7, sp, #0
 800d84e:	6078      	str	r0, [r7, #4]
 800d850:	687b      	ldr	r3, [r7, #4]
 800d852:	2209      	movs	r2, #9
 800d854:	4252      	negs	r2, r2
 800d856:	611a      	str	r2, [r3, #16]
 800d858:	46c0      	nop			; (mov r8, r8)
 800d85a:	46bd      	mov	sp, r7
 800d85c:	b002      	add	sp, #8
 800d85e:	bd80      	pop	{r7, pc}

0800d860 <LL_TIM_IsActiveFlag_CC3>:
 800d860:	b580      	push	{r7, lr}
 800d862:	b082      	sub	sp, #8
 800d864:	af00      	add	r7, sp, #0
 800d866:	6078      	str	r0, [r7, #4]
 800d868:	687b      	ldr	r3, [r7, #4]
 800d86a:	691b      	ldr	r3, [r3, #16]
 800d86c:	2208      	movs	r2, #8
 800d86e:	4013      	ands	r3, r2
 800d870:	2b08      	cmp	r3, #8
 800d872:	d101      	bne.n	800d878 <LL_TIM_IsActiveFlag_CC3+0x18>
 800d874:	2301      	movs	r3, #1
 800d876:	e000      	b.n	800d87a <LL_TIM_IsActiveFlag_CC3+0x1a>
 800d878:	2300      	movs	r3, #0
 800d87a:	0018      	movs	r0, r3
 800d87c:	46bd      	mov	sp, r7
 800d87e:	b002      	add	sp, #8
 800d880:	bd80      	pop	{r7, pc}

0800d882 <LL_TIM_ClearFlag_CC4>:
 800d882:	b580      	push	{r7, lr}
 800d884:	b082      	sub	sp, #8
 800d886:	af00      	add	r7, sp, #0
 800d888:	6078      	str	r0, [r7, #4]
 800d88a:	687b      	ldr	r3, [r7, #4]
 800d88c:	2211      	movs	r2, #17
 800d88e:	4252      	negs	r2, r2
 800d890:	611a      	str	r2, [r3, #16]
 800d892:	46c0      	nop			; (mov r8, r8)
 800d894:	46bd      	mov	sp, r7
 800d896:	b002      	add	sp, #8
 800d898:	bd80      	pop	{r7, pc}

0800d89a <LL_TIM_IsActiveFlag_CC4>:
 800d89a:	b580      	push	{r7, lr}
 800d89c:	b082      	sub	sp, #8
 800d89e:	af00      	add	r7, sp, #0
 800d8a0:	6078      	str	r0, [r7, #4]
 800d8a2:	687b      	ldr	r3, [r7, #4]
 800d8a4:	691b      	ldr	r3, [r3, #16]
 800d8a6:	2210      	movs	r2, #16
 800d8a8:	4013      	ands	r3, r2
 800d8aa:	2b10      	cmp	r3, #16
 800d8ac:	d101      	bne.n	800d8b2 <LL_TIM_IsActiveFlag_CC4+0x18>
 800d8ae:	2301      	movs	r3, #1
 800d8b0:	e000      	b.n	800d8b4 <LL_TIM_IsActiveFlag_CC4+0x1a>
 800d8b2:	2300      	movs	r3, #0
 800d8b4:	0018      	movs	r0, r3
 800d8b6:	46bd      	mov	sp, r7
 800d8b8:	b002      	add	sp, #8
 800d8ba:	bd80      	pop	{r7, pc}

0800d8bc <USBPD_TIM_Init>:
 800d8bc:	b5b0      	push	{r4, r5, r7, lr}
 800d8be:	af00      	add	r7, sp, #0
 800d8c0:	4b48      	ldr	r3, [pc, #288]	; (800d9e4 <USBPD_TIM_Init+0x128>)
 800d8c2:	781b      	ldrb	r3, [r3, #0]
 800d8c4:	b25b      	sxtb	r3, r3
 800d8c6:	2b00      	cmp	r3, #0
 800d8c8:	d000      	beq.n	800d8cc <USBPD_TIM_Init+0x10>
 800d8ca:	e07e      	b.n	800d9ca <USBPD_TIM_Init+0x10e>
 800d8cc:	2380      	movs	r3, #128	; 0x80
 800d8ce:	011b      	lsls	r3, r3, #4
 800d8d0:	0018      	movs	r0, r3
 800d8d2:	f7ff fe2d 	bl	800d530 <LL_APB2_GRP1_EnableClock>
 800d8d6:	4b44      	ldr	r3, [pc, #272]	; (800d9e8 <USBPD_TIM_Init+0x12c>)
 800d8d8:	2100      	movs	r1, #0
 800d8da:	0018      	movs	r0, r3
 800d8dc:	f7ff fe5e 	bl	800d59c <LL_TIM_SetCounterMode>
 800d8e0:	4b42      	ldr	r3, [pc, #264]	; (800d9ec <USBPD_TIM_Init+0x130>)
 800d8e2:	681b      	ldr	r3, [r3, #0]
 800d8e4:	4a42      	ldr	r2, [pc, #264]	; (800d9f0 <USBPD_TIM_Init+0x134>)
 800d8e6:	4293      	cmp	r3, r2
 800d8e8:	d90b      	bls.n	800d902 <USBPD_TIM_Init+0x46>
 800d8ea:	4b40      	ldr	r3, [pc, #256]	; (800d9ec <USBPD_TIM_Init+0x130>)
 800d8ec:	681b      	ldr	r3, [r3, #0]
 800d8ee:	4a41      	ldr	r2, [pc, #260]	; (800d9f4 <USBPD_TIM_Init+0x138>)
 800d8f0:	4694      	mov	ip, r2
 800d8f2:	4463      	add	r3, ip
 800d8f4:	4940      	ldr	r1, [pc, #256]	; (800d9f8 <USBPD_TIM_Init+0x13c>)
 800d8f6:	0018      	movs	r0, r3
 800d8f8:	f7f8 fc7a 	bl	80061f0 <__udivsi3>
 800d8fc:	0003      	movs	r3, r0
 800d8fe:	3b01      	subs	r3, #1
 800d900:	e000      	b.n	800d904 <USBPD_TIM_Init+0x48>
 800d902:	2300      	movs	r3, #0
 800d904:	4a38      	ldr	r2, [pc, #224]	; (800d9e8 <USBPD_TIM_Init+0x12c>)
 800d906:	0019      	movs	r1, r3
 800d908:	0010      	movs	r0, r2
 800d90a:	f7ff fe59 	bl	800d5c0 <LL_TIM_SetPrescaler>
 800d90e:	4b37      	ldr	r3, [pc, #220]	; (800d9ec <USBPD_TIM_Init+0x130>)
 800d910:	681c      	ldr	r4, [r3, #0]
 800d912:	4b35      	ldr	r3, [pc, #212]	; (800d9e8 <USBPD_TIM_Init+0x12c>)
 800d914:	0018      	movs	r0, r3
 800d916:	f7ff fe5f 	bl	800d5d8 <LL_TIM_GetPrescaler>
 800d91a:	0003      	movs	r3, r0
 800d91c:	3301      	adds	r3, #1
 800d91e:	0019      	movs	r1, r3
 800d920:	0020      	movs	r0, r4
 800d922:	f7f8 fc65 	bl	80061f0 <__udivsi3>
 800d926:	0003      	movs	r3, r0
 800d928:	2b63      	cmp	r3, #99	; 0x63
 800d92a:	d910      	bls.n	800d94e <USBPD_TIM_Init+0x92>
 800d92c:	4b2f      	ldr	r3, [pc, #188]	; (800d9ec <USBPD_TIM_Init+0x130>)
 800d92e:	681c      	ldr	r4, [r3, #0]
 800d930:	4b2d      	ldr	r3, [pc, #180]	; (800d9e8 <USBPD_TIM_Init+0x12c>)
 800d932:	0018      	movs	r0, r3
 800d934:	f7ff fe50 	bl	800d5d8 <LL_TIM_GetPrescaler>
 800d938:	0003      	movs	r3, r0
 800d93a:	3301      	adds	r3, #1
 800d93c:	2264      	movs	r2, #100	; 0x64
 800d93e:	4353      	muls	r3, r2
 800d940:	0019      	movs	r1, r3
 800d942:	0020      	movs	r0, r4
 800d944:	f7f8 fc54 	bl	80061f0 <__udivsi3>
 800d948:	0003      	movs	r3, r0
 800d94a:	3b01      	subs	r3, #1
 800d94c:	e000      	b.n	800d950 <USBPD_TIM_Init+0x94>
 800d94e:	2300      	movs	r3, #0
 800d950:	4a25      	ldr	r2, [pc, #148]	; (800d9e8 <USBPD_TIM_Init+0x12c>)
 800d952:	0019      	movs	r1, r3
 800d954:	0010      	movs	r0, r2
 800d956:	f7ff fe49 	bl	800d5ec <LL_TIM_SetAutoReload>
 800d95a:	4b23      	ldr	r3, [pc, #140]	; (800d9e8 <USBPD_TIM_Init+0x12c>)
 800d95c:	2230      	movs	r2, #48	; 0x30
 800d95e:	2101      	movs	r1, #1
 800d960:	0018      	movs	r0, r3
 800d962:	f7ff fe4f 	bl	800d604 <LL_TIM_OC_SetMode>
 800d966:	4b20      	ldr	r3, [pc, #128]	; (800d9e8 <USBPD_TIM_Init+0x12c>)
 800d968:	2230      	movs	r2, #48	; 0x30
 800d96a:	2110      	movs	r1, #16
 800d96c:	0018      	movs	r0, r3
 800d96e:	f7ff fe49 	bl	800d604 <LL_TIM_OC_SetMode>
 800d972:	2380      	movs	r3, #128	; 0x80
 800d974:	005b      	lsls	r3, r3, #1
 800d976:	481c      	ldr	r0, [pc, #112]	; (800d9e8 <USBPD_TIM_Init+0x12c>)
 800d978:	2230      	movs	r2, #48	; 0x30
 800d97a:	0019      	movs	r1, r3
 800d97c:	f7ff fe42 	bl	800d604 <LL_TIM_OC_SetMode>
 800d980:	2380      	movs	r3, #128	; 0x80
 800d982:	015b      	lsls	r3, r3, #5
 800d984:	4818      	ldr	r0, [pc, #96]	; (800d9e8 <USBPD_TIM_Init+0x12c>)
 800d986:	2230      	movs	r2, #48	; 0x30
 800d988:	0019      	movs	r1, r3
 800d98a:	f7ff fe3b 	bl	800d604 <LL_TIM_OC_SetMode>
 800d98e:	4b16      	ldr	r3, [pc, #88]	; (800d9e8 <USBPD_TIM_Init+0x12c>)
 800d990:	2200      	movs	r2, #0
 800d992:	2101      	movs	r1, #1
 800d994:	0018      	movs	r0, r3
 800d996:	f7ff fe97 	bl	800d6c8 <LL_TIM_OC_SetPolarity>
 800d99a:	4b13      	ldr	r3, [pc, #76]	; (800d9e8 <USBPD_TIM_Init+0x12c>)
 800d99c:	2200      	movs	r2, #0
 800d99e:	2110      	movs	r1, #16
 800d9a0:	0018      	movs	r0, r3
 800d9a2:	f7ff fe91 	bl	800d6c8 <LL_TIM_OC_SetPolarity>
 800d9a6:	2380      	movs	r3, #128	; 0x80
 800d9a8:	005b      	lsls	r3, r3, #1
 800d9aa:	480f      	ldr	r0, [pc, #60]	; (800d9e8 <USBPD_TIM_Init+0x12c>)
 800d9ac:	2200      	movs	r2, #0
 800d9ae:	0019      	movs	r1, r3
 800d9b0:	f7ff fe8a 	bl	800d6c8 <LL_TIM_OC_SetPolarity>
 800d9b4:	2380      	movs	r3, #128	; 0x80
 800d9b6:	015b      	lsls	r3, r3, #5
 800d9b8:	480b      	ldr	r0, [pc, #44]	; (800d9e8 <USBPD_TIM_Init+0x12c>)
 800d9ba:	2200      	movs	r2, #0
 800d9bc:	0019      	movs	r1, r3
 800d9be:	f7ff fe83 	bl	800d6c8 <LL_TIM_OC_SetPolarity>
 800d9c2:	4b09      	ldr	r3, [pc, #36]	; (800d9e8 <USBPD_TIM_Init+0x12c>)
 800d9c4:	0018      	movs	r0, r3
 800d9c6:	f7ff fddb 	bl	800d580 <LL_TIM_EnableCounter>
 800d9ca:	4b06      	ldr	r3, [pc, #24]	; (800d9e4 <USBPD_TIM_Init+0x128>)
 800d9cc:	781b      	ldrb	r3, [r3, #0]
 800d9ce:	b25b      	sxtb	r3, r3
 800d9d0:	b2db      	uxtb	r3, r3
 800d9d2:	3301      	adds	r3, #1
 800d9d4:	b2db      	uxtb	r3, r3
 800d9d6:	b25a      	sxtb	r2, r3
 800d9d8:	4b02      	ldr	r3, [pc, #8]	; (800d9e4 <USBPD_TIM_Init+0x128>)
 800d9da:	701a      	strb	r2, [r3, #0]
 800d9dc:	46c0      	nop			; (mov r8, r8)
 800d9de:	46bd      	mov	sp, r7
 800d9e0:	bdb0      	pop	{r4, r5, r7, pc}
 800d9e2:	46c0      	nop			; (mov r8, r8)
 800d9e4:	20000300 	.word	0x20000300
 800d9e8:	40012c00 	.word	0x40012c00
 800d9ec:	20000004 	.word	0x20000004
 800d9f0:	000f423f 	.word	0x000f423f
 800d9f4:	0007a120 	.word	0x0007a120
 800d9f8:	000f4240 	.word	0x000f4240

0800d9fc <USBPD_TIM_DeInit>:
 800d9fc:	b580      	push	{r7, lr}
 800d9fe:	af00      	add	r7, sp, #0
 800da00:	4b0a      	ldr	r3, [pc, #40]	; (800da2c <USBPD_TIM_DeInit+0x30>)
 800da02:	781b      	ldrb	r3, [r3, #0]
 800da04:	b25b      	sxtb	r3, r3
 800da06:	b2db      	uxtb	r3, r3
 800da08:	3b01      	subs	r3, #1
 800da0a:	b2db      	uxtb	r3, r3
 800da0c:	b25a      	sxtb	r2, r3
 800da0e:	4b07      	ldr	r3, [pc, #28]	; (800da2c <USBPD_TIM_DeInit+0x30>)
 800da10:	701a      	strb	r2, [r3, #0]
 800da12:	4b06      	ldr	r3, [pc, #24]	; (800da2c <USBPD_TIM_DeInit+0x30>)
 800da14:	781b      	ldrb	r3, [r3, #0]
 800da16:	b25b      	sxtb	r3, r3
 800da18:	2b00      	cmp	r3, #0
 800da1a:	d104      	bne.n	800da26 <USBPD_TIM_DeInit+0x2a>
 800da1c:	2380      	movs	r3, #128	; 0x80
 800da1e:	011b      	lsls	r3, r3, #4
 800da20:	0018      	movs	r0, r3
 800da22:	f7ff fd9b 	bl	800d55c <LL_APB2_GRP1_DisableClock>
 800da26:	46c0      	nop			; (mov r8, r8)
 800da28:	46bd      	mov	sp, r7
 800da2a:	bd80      	pop	{r7, pc}
 800da2c:	20000300 	.word	0x20000300

0800da30 <USBPD_TIM_Start>:
 800da30:	b580      	push	{r7, lr}
 800da32:	b082      	sub	sp, #8
 800da34:	af00      	add	r7, sp, #0
 800da36:	0002      	movs	r2, r0
 800da38:	6039      	str	r1, [r7, #0]
 800da3a:	1dfb      	adds	r3, r7, #7
 800da3c:	701a      	strb	r2, [r3, #0]
 800da3e:	1dfb      	adds	r3, r7, #7
 800da40:	781b      	ldrb	r3, [r3, #0]
 800da42:	2b03      	cmp	r3, #3
 800da44:	d044      	beq.n	800dad0 <USBPD_TIM_Start+0xa0>
 800da46:	dc57      	bgt.n	800daf8 <USBPD_TIM_Start+0xc8>
 800da48:	2b02      	cmp	r3, #2
 800da4a:	d02d      	beq.n	800daa8 <USBPD_TIM_Start+0x78>
 800da4c:	dc54      	bgt.n	800daf8 <USBPD_TIM_Start+0xc8>
 800da4e:	2b00      	cmp	r3, #0
 800da50:	d002      	beq.n	800da58 <USBPD_TIM_Start+0x28>
 800da52:	2b01      	cmp	r3, #1
 800da54:	d014      	beq.n	800da80 <USBPD_TIM_Start+0x50>
 800da56:	e04f      	b.n	800daf8 <USBPD_TIM_Start+0xc8>
 800da58:	4b2a      	ldr	r3, [pc, #168]	; (800db04 <USBPD_TIM_Start+0xd4>)
 800da5a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800da5c:	683b      	ldr	r3, [r7, #0]
 800da5e:	18d3      	adds	r3, r2, r3
 800da60:	4929      	ldr	r1, [pc, #164]	; (800db08 <USBPD_TIM_Start+0xd8>)
 800da62:	0018      	movs	r0, r3
 800da64:	f7f8 fc4a 	bl	80062fc <__aeabi_uidivmod>
 800da68:	000b      	movs	r3, r1
 800da6a:	001a      	movs	r2, r3
 800da6c:	4b25      	ldr	r3, [pc, #148]	; (800db04 <USBPD_TIM_Start+0xd4>)
 800da6e:	0011      	movs	r1, r2
 800da70:	0018      	movs	r0, r3
 800da72:	f7ff fe7f 	bl	800d774 <LL_TIM_OC_SetCompareCH1>
 800da76:	4b23      	ldr	r3, [pc, #140]	; (800db04 <USBPD_TIM_Start+0xd4>)
 800da78:	0018      	movs	r0, r3
 800da7a:	f7ff feab 	bl	800d7d4 <LL_TIM_ClearFlag_CC1>
 800da7e:	e03c      	b.n	800dafa <USBPD_TIM_Start+0xca>
 800da80:	4b20      	ldr	r3, [pc, #128]	; (800db04 <USBPD_TIM_Start+0xd4>)
 800da82:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800da84:	683b      	ldr	r3, [r7, #0]
 800da86:	18d3      	adds	r3, r2, r3
 800da88:	491f      	ldr	r1, [pc, #124]	; (800db08 <USBPD_TIM_Start+0xd8>)
 800da8a:	0018      	movs	r0, r3
 800da8c:	f7f8 fc36 	bl	80062fc <__aeabi_uidivmod>
 800da90:	000b      	movs	r3, r1
 800da92:	001a      	movs	r2, r3
 800da94:	4b1b      	ldr	r3, [pc, #108]	; (800db04 <USBPD_TIM_Start+0xd4>)
 800da96:	0011      	movs	r1, r2
 800da98:	0018      	movs	r0, r3
 800da9a:	f7ff fe77 	bl	800d78c <LL_TIM_OC_SetCompareCH2>
 800da9e:	4b19      	ldr	r3, [pc, #100]	; (800db04 <USBPD_TIM_Start+0xd4>)
 800daa0:	0018      	movs	r0, r3
 800daa2:	f7ff feb4 	bl	800d80e <LL_TIM_ClearFlag_CC2>
 800daa6:	e028      	b.n	800dafa <USBPD_TIM_Start+0xca>
 800daa8:	4b16      	ldr	r3, [pc, #88]	; (800db04 <USBPD_TIM_Start+0xd4>)
 800daaa:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800daac:	683b      	ldr	r3, [r7, #0]
 800daae:	18d3      	adds	r3, r2, r3
 800dab0:	4915      	ldr	r1, [pc, #84]	; (800db08 <USBPD_TIM_Start+0xd8>)
 800dab2:	0018      	movs	r0, r3
 800dab4:	f7f8 fc22 	bl	80062fc <__aeabi_uidivmod>
 800dab8:	000b      	movs	r3, r1
 800daba:	001a      	movs	r2, r3
 800dabc:	4b11      	ldr	r3, [pc, #68]	; (800db04 <USBPD_TIM_Start+0xd4>)
 800dabe:	0011      	movs	r1, r2
 800dac0:	0018      	movs	r0, r3
 800dac2:	f7ff fe6f 	bl	800d7a4 <LL_TIM_OC_SetCompareCH3>
 800dac6:	4b0f      	ldr	r3, [pc, #60]	; (800db04 <USBPD_TIM_Start+0xd4>)
 800dac8:	0018      	movs	r0, r3
 800daca:	f7ff febd 	bl	800d848 <LL_TIM_ClearFlag_CC3>
 800dace:	e014      	b.n	800dafa <USBPD_TIM_Start+0xca>
 800dad0:	4b0c      	ldr	r3, [pc, #48]	; (800db04 <USBPD_TIM_Start+0xd4>)
 800dad2:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800dad4:	683b      	ldr	r3, [r7, #0]
 800dad6:	18d3      	adds	r3, r2, r3
 800dad8:	490b      	ldr	r1, [pc, #44]	; (800db08 <USBPD_TIM_Start+0xd8>)
 800dada:	0018      	movs	r0, r3
 800dadc:	f7f8 fc0e 	bl	80062fc <__aeabi_uidivmod>
 800dae0:	000b      	movs	r3, r1
 800dae2:	001a      	movs	r2, r3
 800dae4:	4b07      	ldr	r3, [pc, #28]	; (800db04 <USBPD_TIM_Start+0xd4>)
 800dae6:	0011      	movs	r1, r2
 800dae8:	0018      	movs	r0, r3
 800daea:	f7ff fe67 	bl	800d7bc <LL_TIM_OC_SetCompareCH4>
 800daee:	4b05      	ldr	r3, [pc, #20]	; (800db04 <USBPD_TIM_Start+0xd4>)
 800daf0:	0018      	movs	r0, r3
 800daf2:	f7ff fec6 	bl	800d882 <LL_TIM_ClearFlag_CC4>
 800daf6:	e000      	b.n	800dafa <USBPD_TIM_Start+0xca>
 800daf8:	46c0      	nop			; (mov r8, r8)
 800dafa:	46c0      	nop			; (mov r8, r8)
 800dafc:	46bd      	mov	sp, r7
 800dafe:	b002      	add	sp, #8
 800db00:	bd80      	pop	{r7, pc}
 800db02:	46c0      	nop			; (mov r8, r8)
 800db04:	40012c00 	.word	0x40012c00
 800db08:	00002710 	.word	0x00002710

0800db0c <USBPD_TIM_IsExpired>:
 800db0c:	b580      	push	{r7, lr}
 800db0e:	b084      	sub	sp, #16
 800db10:	af00      	add	r7, sp, #0
 800db12:	0002      	movs	r2, r0
 800db14:	1dfb      	adds	r3, r7, #7
 800db16:	701a      	strb	r2, [r3, #0]
 800db18:	2301      	movs	r3, #1
 800db1a:	60fb      	str	r3, [r7, #12]
 800db1c:	1dfb      	adds	r3, r7, #7
 800db1e:	781b      	ldrb	r3, [r3, #0]
 800db20:	2b03      	cmp	r3, #3
 800db22:	d01d      	beq.n	800db60 <USBPD_TIM_IsExpired+0x54>
 800db24:	dc23      	bgt.n	800db6e <USBPD_TIM_IsExpired+0x62>
 800db26:	2b02      	cmp	r3, #2
 800db28:	d013      	beq.n	800db52 <USBPD_TIM_IsExpired+0x46>
 800db2a:	dc20      	bgt.n	800db6e <USBPD_TIM_IsExpired+0x62>
 800db2c:	2b00      	cmp	r3, #0
 800db2e:	d002      	beq.n	800db36 <USBPD_TIM_IsExpired+0x2a>
 800db30:	2b01      	cmp	r3, #1
 800db32:	d007      	beq.n	800db44 <USBPD_TIM_IsExpired+0x38>
 800db34:	e01b      	b.n	800db6e <USBPD_TIM_IsExpired+0x62>
 800db36:	4b11      	ldr	r3, [pc, #68]	; (800db7c <USBPD_TIM_IsExpired+0x70>)
 800db38:	0018      	movs	r0, r3
 800db3a:	f7ff fe57 	bl	800d7ec <LL_TIM_IsActiveFlag_CC1>
 800db3e:	0003      	movs	r3, r0
 800db40:	60fb      	str	r3, [r7, #12]
 800db42:	e015      	b.n	800db70 <USBPD_TIM_IsExpired+0x64>
 800db44:	4b0d      	ldr	r3, [pc, #52]	; (800db7c <USBPD_TIM_IsExpired+0x70>)
 800db46:	0018      	movs	r0, r3
 800db48:	f7ff fe6d 	bl	800d826 <LL_TIM_IsActiveFlag_CC2>
 800db4c:	0003      	movs	r3, r0
 800db4e:	60fb      	str	r3, [r7, #12]
 800db50:	e00e      	b.n	800db70 <USBPD_TIM_IsExpired+0x64>
 800db52:	4b0a      	ldr	r3, [pc, #40]	; (800db7c <USBPD_TIM_IsExpired+0x70>)
 800db54:	0018      	movs	r0, r3
 800db56:	f7ff fe83 	bl	800d860 <LL_TIM_IsActiveFlag_CC3>
 800db5a:	0003      	movs	r3, r0
 800db5c:	60fb      	str	r3, [r7, #12]
 800db5e:	e007      	b.n	800db70 <USBPD_TIM_IsExpired+0x64>
 800db60:	4b06      	ldr	r3, [pc, #24]	; (800db7c <USBPD_TIM_IsExpired+0x70>)
 800db62:	0018      	movs	r0, r3
 800db64:	f7ff fe99 	bl	800d89a <LL_TIM_IsActiveFlag_CC4>
 800db68:	0003      	movs	r3, r0
 800db6a:	60fb      	str	r3, [r7, #12]
 800db6c:	e000      	b.n	800db70 <USBPD_TIM_IsExpired+0x64>
 800db6e:	46c0      	nop			; (mov r8, r8)
 800db70:	68fb      	ldr	r3, [r7, #12]
 800db72:	0018      	movs	r0, r3
 800db74:	46bd      	mov	sp, r7
 800db76:	b004      	add	sp, #16
 800db78:	bd80      	pop	{r7, pc}
 800db7a:	46c0      	nop			; (mov r8, r8)
 800db7c:	40012c00 	.word	0x40012c00

0800db80 <__NVIC_SetPriority>:
 800db80:	b590      	push	{r4, r7, lr}
 800db82:	b083      	sub	sp, #12
 800db84:	af00      	add	r7, sp, #0
 800db86:	0002      	movs	r2, r0
 800db88:	6039      	str	r1, [r7, #0]
 800db8a:	1dfb      	adds	r3, r7, #7
 800db8c:	701a      	strb	r2, [r3, #0]
 800db8e:	1dfb      	adds	r3, r7, #7
 800db90:	781b      	ldrb	r3, [r3, #0]
 800db92:	2b7f      	cmp	r3, #127	; 0x7f
 800db94:	d828      	bhi.n	800dbe8 <__NVIC_SetPriority+0x68>
 800db96:	4a2f      	ldr	r2, [pc, #188]	; (800dc54 <__NVIC_SetPriority+0xd4>)
 800db98:	1dfb      	adds	r3, r7, #7
 800db9a:	781b      	ldrb	r3, [r3, #0]
 800db9c:	b25b      	sxtb	r3, r3
 800db9e:	089b      	lsrs	r3, r3, #2
 800dba0:	33c0      	adds	r3, #192	; 0xc0
 800dba2:	009b      	lsls	r3, r3, #2
 800dba4:	589b      	ldr	r3, [r3, r2]
 800dba6:	1dfa      	adds	r2, r7, #7
 800dba8:	7812      	ldrb	r2, [r2, #0]
 800dbaa:	0011      	movs	r1, r2
 800dbac:	2203      	movs	r2, #3
 800dbae:	400a      	ands	r2, r1
 800dbb0:	00d2      	lsls	r2, r2, #3
 800dbb2:	21ff      	movs	r1, #255	; 0xff
 800dbb4:	4091      	lsls	r1, r2
 800dbb6:	000a      	movs	r2, r1
 800dbb8:	43d2      	mvns	r2, r2
 800dbba:	401a      	ands	r2, r3
 800dbbc:	0011      	movs	r1, r2
 800dbbe:	683b      	ldr	r3, [r7, #0]
 800dbc0:	019b      	lsls	r3, r3, #6
 800dbc2:	22ff      	movs	r2, #255	; 0xff
 800dbc4:	401a      	ands	r2, r3
 800dbc6:	1dfb      	adds	r3, r7, #7
 800dbc8:	781b      	ldrb	r3, [r3, #0]
 800dbca:	0018      	movs	r0, r3
 800dbcc:	2303      	movs	r3, #3
 800dbce:	4003      	ands	r3, r0
 800dbd0:	00db      	lsls	r3, r3, #3
 800dbd2:	409a      	lsls	r2, r3
 800dbd4:	481f      	ldr	r0, [pc, #124]	; (800dc54 <__NVIC_SetPriority+0xd4>)
 800dbd6:	1dfb      	adds	r3, r7, #7
 800dbd8:	781b      	ldrb	r3, [r3, #0]
 800dbda:	b25b      	sxtb	r3, r3
 800dbdc:	089b      	lsrs	r3, r3, #2
 800dbde:	430a      	orrs	r2, r1
 800dbe0:	33c0      	adds	r3, #192	; 0xc0
 800dbe2:	009b      	lsls	r3, r3, #2
 800dbe4:	501a      	str	r2, [r3, r0]
 800dbe6:	e031      	b.n	800dc4c <__NVIC_SetPriority+0xcc>
 800dbe8:	4a1b      	ldr	r2, [pc, #108]	; (800dc58 <__NVIC_SetPriority+0xd8>)
 800dbea:	1dfb      	adds	r3, r7, #7
 800dbec:	781b      	ldrb	r3, [r3, #0]
 800dbee:	0019      	movs	r1, r3
 800dbf0:	230f      	movs	r3, #15
 800dbf2:	400b      	ands	r3, r1
 800dbf4:	3b08      	subs	r3, #8
 800dbf6:	089b      	lsrs	r3, r3, #2
 800dbf8:	3306      	adds	r3, #6
 800dbfa:	009b      	lsls	r3, r3, #2
 800dbfc:	18d3      	adds	r3, r2, r3
 800dbfe:	3304      	adds	r3, #4
 800dc00:	681b      	ldr	r3, [r3, #0]
 800dc02:	1dfa      	adds	r2, r7, #7
 800dc04:	7812      	ldrb	r2, [r2, #0]
 800dc06:	0011      	movs	r1, r2
 800dc08:	2203      	movs	r2, #3
 800dc0a:	400a      	ands	r2, r1
 800dc0c:	00d2      	lsls	r2, r2, #3
 800dc0e:	21ff      	movs	r1, #255	; 0xff
 800dc10:	4091      	lsls	r1, r2
 800dc12:	000a      	movs	r2, r1
 800dc14:	43d2      	mvns	r2, r2
 800dc16:	401a      	ands	r2, r3
 800dc18:	0011      	movs	r1, r2
 800dc1a:	683b      	ldr	r3, [r7, #0]
 800dc1c:	019b      	lsls	r3, r3, #6
 800dc1e:	22ff      	movs	r2, #255	; 0xff
 800dc20:	401a      	ands	r2, r3
 800dc22:	1dfb      	adds	r3, r7, #7
 800dc24:	781b      	ldrb	r3, [r3, #0]
 800dc26:	0018      	movs	r0, r3
 800dc28:	2303      	movs	r3, #3
 800dc2a:	4003      	ands	r3, r0
 800dc2c:	00db      	lsls	r3, r3, #3
 800dc2e:	409a      	lsls	r2, r3
 800dc30:	4809      	ldr	r0, [pc, #36]	; (800dc58 <__NVIC_SetPriority+0xd8>)
 800dc32:	1dfb      	adds	r3, r7, #7
 800dc34:	781b      	ldrb	r3, [r3, #0]
 800dc36:	001c      	movs	r4, r3
 800dc38:	230f      	movs	r3, #15
 800dc3a:	4023      	ands	r3, r4
 800dc3c:	3b08      	subs	r3, #8
 800dc3e:	089b      	lsrs	r3, r3, #2
 800dc40:	430a      	orrs	r2, r1
 800dc42:	3306      	adds	r3, #6
 800dc44:	009b      	lsls	r3, r3, #2
 800dc46:	18c3      	adds	r3, r0, r3
 800dc48:	3304      	adds	r3, #4
 800dc4a:	601a      	str	r2, [r3, #0]
 800dc4c:	46c0      	nop			; (mov r8, r8)
 800dc4e:	46bd      	mov	sp, r7
 800dc50:	b003      	add	sp, #12
 800dc52:	bd90      	pop	{r4, r7, pc}
 800dc54:	e000e100 	.word	0xe000e100
 800dc58:	e000ed00 	.word	0xe000ed00

0800dc5c <SysTick_Handler>:
 800dc5c:	b580      	push	{r7, lr}
 800dc5e:	af00      	add	r7, sp, #0
 800dc60:	4b05      	ldr	r3, [pc, #20]	; (800dc78 <SysTick_Handler+0x1c>)
 800dc62:	681b      	ldr	r3, [r3, #0]
 800dc64:	f001 ff2a 	bl	800fabc <xTaskGetSchedulerState>
 800dc68:	0003      	movs	r3, r0
 800dc6a:	2b01      	cmp	r3, #1
 800dc6c:	d001      	beq.n	800dc72 <SysTick_Handler+0x16>
 800dc6e:	f002 fbfb 	bl	8010468 <xPortSysTickHandler>
 800dc72:	46c0      	nop			; (mov r8, r8)
 800dc74:	46bd      	mov	sp, r7
 800dc76:	bd80      	pop	{r7, pc}
 800dc78:	e000e010 	.word	0xe000e010

0800dc7c <SVC_Setup>:
 800dc7c:	b580      	push	{r7, lr}
 800dc7e:	af00      	add	r7, sp, #0
 800dc80:	2305      	movs	r3, #5
 800dc82:	425b      	negs	r3, r3
 800dc84:	2100      	movs	r1, #0
 800dc86:	0018      	movs	r0, r3
 800dc88:	f7ff ff7a 	bl	800db80 <__NVIC_SetPriority>
 800dc8c:	46c0      	nop			; (mov r8, r8)
 800dc8e:	46bd      	mov	sp, r7
 800dc90:	bd80      	pop	{r7, pc}
	...

0800dc94 <osKernelInitialize>:
 800dc94:	b580      	push	{r7, lr}
 800dc96:	b082      	sub	sp, #8
 800dc98:	af00      	add	r7, sp, #0
 800dc9a:	f3ef 8305 	mrs	r3, IPSR
 800dc9e:	603b      	str	r3, [r7, #0]
 800dca0:	683b      	ldr	r3, [r7, #0]
 800dca2:	2b00      	cmp	r3, #0
 800dca4:	d003      	beq.n	800dcae <osKernelInitialize+0x1a>
 800dca6:	2306      	movs	r3, #6
 800dca8:	425b      	negs	r3, r3
 800dcaa:	607b      	str	r3, [r7, #4]
 800dcac:	e00c      	b.n	800dcc8 <osKernelInitialize+0x34>
 800dcae:	4b09      	ldr	r3, [pc, #36]	; (800dcd4 <osKernelInitialize+0x40>)
 800dcb0:	681b      	ldr	r3, [r3, #0]
 800dcb2:	2b00      	cmp	r3, #0
 800dcb4:	d105      	bne.n	800dcc2 <osKernelInitialize+0x2e>
 800dcb6:	4b07      	ldr	r3, [pc, #28]	; (800dcd4 <osKernelInitialize+0x40>)
 800dcb8:	2201      	movs	r2, #1
 800dcba:	601a      	str	r2, [r3, #0]
 800dcbc:	2300      	movs	r3, #0
 800dcbe:	607b      	str	r3, [r7, #4]
 800dcc0:	e002      	b.n	800dcc8 <osKernelInitialize+0x34>
 800dcc2:	2301      	movs	r3, #1
 800dcc4:	425b      	negs	r3, r3
 800dcc6:	607b      	str	r3, [r7, #4]
 800dcc8:	687b      	ldr	r3, [r7, #4]
 800dcca:	0018      	movs	r0, r3
 800dccc:	46bd      	mov	sp, r7
 800dcce:	b002      	add	sp, #8
 800dcd0:	bd80      	pop	{r7, pc}
 800dcd2:	46c0      	nop			; (mov r8, r8)
 800dcd4:	20000304 	.word	0x20000304

0800dcd8 <osKernelStart>:
 800dcd8:	b580      	push	{r7, lr}
 800dcda:	b082      	sub	sp, #8
 800dcdc:	af00      	add	r7, sp, #0
 800dcde:	f3ef 8305 	mrs	r3, IPSR
 800dce2:	603b      	str	r3, [r7, #0]
 800dce4:	683b      	ldr	r3, [r7, #0]
 800dce6:	2b00      	cmp	r3, #0
 800dce8:	d003      	beq.n	800dcf2 <osKernelStart+0x1a>
 800dcea:	2306      	movs	r3, #6
 800dcec:	425b      	negs	r3, r3
 800dcee:	607b      	str	r3, [r7, #4]
 800dcf0:	e010      	b.n	800dd14 <osKernelStart+0x3c>
 800dcf2:	4b0b      	ldr	r3, [pc, #44]	; (800dd20 <osKernelStart+0x48>)
 800dcf4:	681b      	ldr	r3, [r3, #0]
 800dcf6:	2b01      	cmp	r3, #1
 800dcf8:	d109      	bne.n	800dd0e <osKernelStart+0x36>
 800dcfa:	f7ff ffbf 	bl	800dc7c <SVC_Setup>
 800dcfe:	4b08      	ldr	r3, [pc, #32]	; (800dd20 <osKernelStart+0x48>)
 800dd00:	2202      	movs	r2, #2
 800dd02:	601a      	str	r2, [r3, #0]
 800dd04:	f001 fae2 	bl	800f2cc <vTaskStartScheduler>
 800dd08:	2300      	movs	r3, #0
 800dd0a:	607b      	str	r3, [r7, #4]
 800dd0c:	e002      	b.n	800dd14 <osKernelStart+0x3c>
 800dd0e:	2301      	movs	r3, #1
 800dd10:	425b      	negs	r3, r3
 800dd12:	607b      	str	r3, [r7, #4]
 800dd14:	687b      	ldr	r3, [r7, #4]
 800dd16:	0018      	movs	r0, r3
 800dd18:	46bd      	mov	sp, r7
 800dd1a:	b002      	add	sp, #8
 800dd1c:	bd80      	pop	{r7, pc}
 800dd1e:	46c0      	nop			; (mov r8, r8)
 800dd20:	20000304 	.word	0x20000304

0800dd24 <osThreadNew>:
 800dd24:	b5b0      	push	{r4, r5, r7, lr}
 800dd26:	b08e      	sub	sp, #56	; 0x38
 800dd28:	af04      	add	r7, sp, #16
 800dd2a:	60f8      	str	r0, [r7, #12]
 800dd2c:	60b9      	str	r1, [r7, #8]
 800dd2e:	607a      	str	r2, [r7, #4]
 800dd30:	2300      	movs	r3, #0
 800dd32:	613b      	str	r3, [r7, #16]
 800dd34:	f3ef 8305 	mrs	r3, IPSR
 800dd38:	617b      	str	r3, [r7, #20]
 800dd3a:	697b      	ldr	r3, [r7, #20]
 800dd3c:	2b00      	cmp	r3, #0
 800dd3e:	d000      	beq.n	800dd42 <osThreadNew+0x1e>
 800dd40:	e081      	b.n	800de46 <osThreadNew+0x122>
 800dd42:	68fb      	ldr	r3, [r7, #12]
 800dd44:	2b00      	cmp	r3, #0
 800dd46:	d100      	bne.n	800dd4a <osThreadNew+0x26>
 800dd48:	e07d      	b.n	800de46 <osThreadNew+0x122>
 800dd4a:	2380      	movs	r3, #128	; 0x80
 800dd4c:	623b      	str	r3, [r7, #32]
 800dd4e:	2318      	movs	r3, #24
 800dd50:	61fb      	str	r3, [r7, #28]
 800dd52:	2300      	movs	r3, #0
 800dd54:	627b      	str	r3, [r7, #36]	; 0x24
 800dd56:	2301      	movs	r3, #1
 800dd58:	425b      	negs	r3, r3
 800dd5a:	61bb      	str	r3, [r7, #24]
 800dd5c:	687b      	ldr	r3, [r7, #4]
 800dd5e:	2b00      	cmp	r3, #0
 800dd60:	d044      	beq.n	800ddec <osThreadNew+0xc8>
 800dd62:	687b      	ldr	r3, [r7, #4]
 800dd64:	681b      	ldr	r3, [r3, #0]
 800dd66:	2b00      	cmp	r3, #0
 800dd68:	d002      	beq.n	800dd70 <osThreadNew+0x4c>
 800dd6a:	687b      	ldr	r3, [r7, #4]
 800dd6c:	681b      	ldr	r3, [r3, #0]
 800dd6e:	627b      	str	r3, [r7, #36]	; 0x24
 800dd70:	687b      	ldr	r3, [r7, #4]
 800dd72:	699b      	ldr	r3, [r3, #24]
 800dd74:	2b00      	cmp	r3, #0
 800dd76:	d002      	beq.n	800dd7e <osThreadNew+0x5a>
 800dd78:	687b      	ldr	r3, [r7, #4]
 800dd7a:	699b      	ldr	r3, [r3, #24]
 800dd7c:	61fb      	str	r3, [r7, #28]
 800dd7e:	69fb      	ldr	r3, [r7, #28]
 800dd80:	2b00      	cmp	r3, #0
 800dd82:	d007      	beq.n	800dd94 <osThreadNew+0x70>
 800dd84:	69fb      	ldr	r3, [r7, #28]
 800dd86:	2b38      	cmp	r3, #56	; 0x38
 800dd88:	d804      	bhi.n	800dd94 <osThreadNew+0x70>
 800dd8a:	687b      	ldr	r3, [r7, #4]
 800dd8c:	685b      	ldr	r3, [r3, #4]
 800dd8e:	2201      	movs	r2, #1
 800dd90:	4013      	ands	r3, r2
 800dd92:	d001      	beq.n	800dd98 <osThreadNew+0x74>
 800dd94:	2300      	movs	r3, #0
 800dd96:	e057      	b.n	800de48 <osThreadNew+0x124>
 800dd98:	687b      	ldr	r3, [r7, #4]
 800dd9a:	695b      	ldr	r3, [r3, #20]
 800dd9c:	2b00      	cmp	r3, #0
 800dd9e:	d003      	beq.n	800dda8 <osThreadNew+0x84>
 800dda0:	687b      	ldr	r3, [r7, #4]
 800dda2:	695b      	ldr	r3, [r3, #20]
 800dda4:	089b      	lsrs	r3, r3, #2
 800dda6:	623b      	str	r3, [r7, #32]
 800dda8:	687b      	ldr	r3, [r7, #4]
 800ddaa:	689b      	ldr	r3, [r3, #8]
 800ddac:	2b00      	cmp	r3, #0
 800ddae:	d00e      	beq.n	800ddce <osThreadNew+0xaa>
 800ddb0:	687b      	ldr	r3, [r7, #4]
 800ddb2:	68db      	ldr	r3, [r3, #12]
 800ddb4:	2ba7      	cmp	r3, #167	; 0xa7
 800ddb6:	d90a      	bls.n	800ddce <osThreadNew+0xaa>
 800ddb8:	687b      	ldr	r3, [r7, #4]
 800ddba:	691b      	ldr	r3, [r3, #16]
 800ddbc:	2b00      	cmp	r3, #0
 800ddbe:	d006      	beq.n	800ddce <osThreadNew+0xaa>
 800ddc0:	687b      	ldr	r3, [r7, #4]
 800ddc2:	695b      	ldr	r3, [r3, #20]
 800ddc4:	2b00      	cmp	r3, #0
 800ddc6:	d002      	beq.n	800ddce <osThreadNew+0xaa>
 800ddc8:	2301      	movs	r3, #1
 800ddca:	61bb      	str	r3, [r7, #24]
 800ddcc:	e010      	b.n	800ddf0 <osThreadNew+0xcc>
 800ddce:	687b      	ldr	r3, [r7, #4]
 800ddd0:	689b      	ldr	r3, [r3, #8]
 800ddd2:	2b00      	cmp	r3, #0
 800ddd4:	d10c      	bne.n	800ddf0 <osThreadNew+0xcc>
 800ddd6:	687b      	ldr	r3, [r7, #4]
 800ddd8:	68db      	ldr	r3, [r3, #12]
 800ddda:	2b00      	cmp	r3, #0
 800dddc:	d108      	bne.n	800ddf0 <osThreadNew+0xcc>
 800ddde:	687b      	ldr	r3, [r7, #4]
 800dde0:	691b      	ldr	r3, [r3, #16]
 800dde2:	2b00      	cmp	r3, #0
 800dde4:	d104      	bne.n	800ddf0 <osThreadNew+0xcc>
 800dde6:	2300      	movs	r3, #0
 800dde8:	61bb      	str	r3, [r7, #24]
 800ddea:	e001      	b.n	800ddf0 <osThreadNew+0xcc>
 800ddec:	2300      	movs	r3, #0
 800ddee:	61bb      	str	r3, [r7, #24]
 800ddf0:	69bb      	ldr	r3, [r7, #24]
 800ddf2:	2b01      	cmp	r3, #1
 800ddf4:	d112      	bne.n	800de1c <osThreadNew+0xf8>
 800ddf6:	687b      	ldr	r3, [r7, #4]
 800ddf8:	691a      	ldr	r2, [r3, #16]
 800ddfa:	687b      	ldr	r3, [r7, #4]
 800ddfc:	689b      	ldr	r3, [r3, #8]
 800ddfe:	68bd      	ldr	r5, [r7, #8]
 800de00:	6a3c      	ldr	r4, [r7, #32]
 800de02:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800de04:	68f8      	ldr	r0, [r7, #12]
 800de06:	9302      	str	r3, [sp, #8]
 800de08:	9201      	str	r2, [sp, #4]
 800de0a:	69fb      	ldr	r3, [r7, #28]
 800de0c:	9300      	str	r3, [sp, #0]
 800de0e:	002b      	movs	r3, r5
 800de10:	0022      	movs	r2, r4
 800de12:	f000 ff54 	bl	800ecbe <xTaskCreateStatic>
 800de16:	0003      	movs	r3, r0
 800de18:	613b      	str	r3, [r7, #16]
 800de1a:	e014      	b.n	800de46 <osThreadNew+0x122>
 800de1c:	69bb      	ldr	r3, [r7, #24]
 800de1e:	2b00      	cmp	r3, #0
 800de20:	d111      	bne.n	800de46 <osThreadNew+0x122>
 800de22:	6a3b      	ldr	r3, [r7, #32]
 800de24:	b29a      	uxth	r2, r3
 800de26:	68bc      	ldr	r4, [r7, #8]
 800de28:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800de2a:	68f8      	ldr	r0, [r7, #12]
 800de2c:	2310      	movs	r3, #16
 800de2e:	18fb      	adds	r3, r7, r3
 800de30:	9301      	str	r3, [sp, #4]
 800de32:	69fb      	ldr	r3, [r7, #28]
 800de34:	9300      	str	r3, [sp, #0]
 800de36:	0023      	movs	r3, r4
 800de38:	f000 ff85 	bl	800ed46 <xTaskCreate>
 800de3c:	0003      	movs	r3, r0
 800de3e:	2b01      	cmp	r3, #1
 800de40:	d001      	beq.n	800de46 <osThreadNew+0x122>
 800de42:	2300      	movs	r3, #0
 800de44:	613b      	str	r3, [r7, #16]
 800de46:	693b      	ldr	r3, [r7, #16]
 800de48:	0018      	movs	r0, r3
 800de4a:	46bd      	mov	sp, r7
 800de4c:	b00a      	add	sp, #40	; 0x28
 800de4e:	bdb0      	pop	{r4, r5, r7, pc}

0800de50 <osThreadGetId>:
 800de50:	b580      	push	{r7, lr}
 800de52:	b082      	sub	sp, #8
 800de54:	af00      	add	r7, sp, #0
 800de56:	f001 fe23 	bl	800faa0 <xTaskGetCurrentTaskHandle>
 800de5a:	0003      	movs	r3, r0
 800de5c:	607b      	str	r3, [r7, #4]
 800de5e:	687b      	ldr	r3, [r7, #4]
 800de60:	0018      	movs	r0, r3
 800de62:	46bd      	mov	sp, r7
 800de64:	b002      	add	sp, #8
 800de66:	bd80      	pop	{r7, pc}

0800de68 <osThreadSuspend>:
 800de68:	b580      	push	{r7, lr}
 800de6a:	b086      	sub	sp, #24
 800de6c:	af00      	add	r7, sp, #0
 800de6e:	6078      	str	r0, [r7, #4]
 800de70:	687b      	ldr	r3, [r7, #4]
 800de72:	613b      	str	r3, [r7, #16]
 800de74:	f3ef 8305 	mrs	r3, IPSR
 800de78:	60fb      	str	r3, [r7, #12]
 800de7a:	68fb      	ldr	r3, [r7, #12]
 800de7c:	2b00      	cmp	r3, #0
 800de7e:	d003      	beq.n	800de88 <osThreadSuspend+0x20>
 800de80:	2306      	movs	r3, #6
 800de82:	425b      	negs	r3, r3
 800de84:	617b      	str	r3, [r7, #20]
 800de86:	e00c      	b.n	800dea2 <osThreadSuspend+0x3a>
 800de88:	693b      	ldr	r3, [r7, #16]
 800de8a:	2b00      	cmp	r3, #0
 800de8c:	d103      	bne.n	800de96 <osThreadSuspend+0x2e>
 800de8e:	2304      	movs	r3, #4
 800de90:	425b      	negs	r3, r3
 800de92:	617b      	str	r3, [r7, #20]
 800de94:	e005      	b.n	800dea2 <osThreadSuspend+0x3a>
 800de96:	2300      	movs	r3, #0
 800de98:	617b      	str	r3, [r7, #20]
 800de9a:	693b      	ldr	r3, [r7, #16]
 800de9c:	0018      	movs	r0, r3
 800de9e:	f001 f93b 	bl	800f118 <vTaskSuspend>
 800dea2:	697b      	ldr	r3, [r7, #20]
 800dea4:	0018      	movs	r0, r3
 800dea6:	46bd      	mov	sp, r7
 800dea8:	b006      	add	sp, #24
 800deaa:	bd80      	pop	{r7, pc}

0800deac <osThreadResume>:
 800deac:	b580      	push	{r7, lr}
 800deae:	b086      	sub	sp, #24
 800deb0:	af00      	add	r7, sp, #0
 800deb2:	6078      	str	r0, [r7, #4]
 800deb4:	687b      	ldr	r3, [r7, #4]
 800deb6:	613b      	str	r3, [r7, #16]
 800deb8:	f3ef 8305 	mrs	r3, IPSR
 800debc:	60fb      	str	r3, [r7, #12]
 800debe:	68fb      	ldr	r3, [r7, #12]
 800dec0:	2b00      	cmp	r3, #0
 800dec2:	d003      	beq.n	800decc <osThreadResume+0x20>
 800dec4:	2306      	movs	r3, #6
 800dec6:	425b      	negs	r3, r3
 800dec8:	617b      	str	r3, [r7, #20]
 800deca:	e00c      	b.n	800dee6 <osThreadResume+0x3a>
 800decc:	693b      	ldr	r3, [r7, #16]
 800dece:	2b00      	cmp	r3, #0
 800ded0:	d103      	bne.n	800deda <osThreadResume+0x2e>
 800ded2:	2304      	movs	r3, #4
 800ded4:	425b      	negs	r3, r3
 800ded6:	617b      	str	r3, [r7, #20]
 800ded8:	e005      	b.n	800dee6 <osThreadResume+0x3a>
 800deda:	2300      	movs	r3, #0
 800dedc:	617b      	str	r3, [r7, #20]
 800dede:	693b      	ldr	r3, [r7, #16]
 800dee0:	0018      	movs	r0, r3
 800dee2:	f001 f9a5 	bl	800f230 <vTaskResume>
 800dee6:	697b      	ldr	r3, [r7, #20]
 800dee8:	0018      	movs	r0, r3
 800deea:	46bd      	mov	sp, r7
 800deec:	b006      	add	sp, #24
 800deee:	bd80      	pop	{r7, pc}

0800def0 <osDelay>:
 800def0:	b580      	push	{r7, lr}
 800def2:	b084      	sub	sp, #16
 800def4:	af00      	add	r7, sp, #0
 800def6:	6078      	str	r0, [r7, #4]
 800def8:	f3ef 8305 	mrs	r3, IPSR
 800defc:	60bb      	str	r3, [r7, #8]
 800defe:	68bb      	ldr	r3, [r7, #8]
 800df00:	2b00      	cmp	r3, #0
 800df02:	d003      	beq.n	800df0c <osDelay+0x1c>
 800df04:	2306      	movs	r3, #6
 800df06:	425b      	negs	r3, r3
 800df08:	60fb      	str	r3, [r7, #12]
 800df0a:	e008      	b.n	800df1e <osDelay+0x2e>
 800df0c:	2300      	movs	r3, #0
 800df0e:	60fb      	str	r3, [r7, #12]
 800df10:	687b      	ldr	r3, [r7, #4]
 800df12:	2b00      	cmp	r3, #0
 800df14:	d003      	beq.n	800df1e <osDelay+0x2e>
 800df16:	687b      	ldr	r3, [r7, #4]
 800df18:	0018      	movs	r0, r3
 800df1a:	f001 f869 	bl	800eff0 <vTaskDelay>
 800df1e:	68fb      	ldr	r3, [r7, #12]
 800df20:	0018      	movs	r0, r3
 800df22:	46bd      	mov	sp, r7
 800df24:	b004      	add	sp, #16
 800df26:	bd80      	pop	{r7, pc}

0800df28 <osMessageQueueNew>:
 800df28:	b590      	push	{r4, r7, lr}
 800df2a:	b08b      	sub	sp, #44	; 0x2c
 800df2c:	af02      	add	r7, sp, #8
 800df2e:	60f8      	str	r0, [r7, #12]
 800df30:	60b9      	str	r1, [r7, #8]
 800df32:	607a      	str	r2, [r7, #4]
 800df34:	2300      	movs	r3, #0
 800df36:	61fb      	str	r3, [r7, #28]
 800df38:	f3ef 8305 	mrs	r3, IPSR
 800df3c:	613b      	str	r3, [r7, #16]
 800df3e:	693b      	ldr	r3, [r7, #16]
 800df40:	2b00      	cmp	r3, #0
 800df42:	d000      	beq.n	800df46 <osMessageQueueNew+0x1e>
 800df44:	e064      	b.n	800e010 <osMessageQueueNew+0xe8>
 800df46:	68fb      	ldr	r3, [r7, #12]
 800df48:	2b00      	cmp	r3, #0
 800df4a:	d100      	bne.n	800df4e <osMessageQueueNew+0x26>
 800df4c:	e060      	b.n	800e010 <osMessageQueueNew+0xe8>
 800df4e:	68bb      	ldr	r3, [r7, #8]
 800df50:	2b00      	cmp	r3, #0
 800df52:	d05d      	beq.n	800e010 <osMessageQueueNew+0xe8>
 800df54:	2301      	movs	r3, #1
 800df56:	425b      	negs	r3, r3
 800df58:	61bb      	str	r3, [r7, #24]
 800df5a:	687b      	ldr	r3, [r7, #4]
 800df5c:	2b00      	cmp	r3, #0
 800df5e:	d028      	beq.n	800dfb2 <osMessageQueueNew+0x8a>
 800df60:	687b      	ldr	r3, [r7, #4]
 800df62:	689b      	ldr	r3, [r3, #8]
 800df64:	2b00      	cmp	r3, #0
 800df66:	d011      	beq.n	800df8c <osMessageQueueNew+0x64>
 800df68:	687b      	ldr	r3, [r7, #4]
 800df6a:	68db      	ldr	r3, [r3, #12]
 800df6c:	2b4f      	cmp	r3, #79	; 0x4f
 800df6e:	d90d      	bls.n	800df8c <osMessageQueueNew+0x64>
 800df70:	687b      	ldr	r3, [r7, #4]
 800df72:	691b      	ldr	r3, [r3, #16]
 800df74:	2b00      	cmp	r3, #0
 800df76:	d009      	beq.n	800df8c <osMessageQueueNew+0x64>
 800df78:	687b      	ldr	r3, [r7, #4]
 800df7a:	695a      	ldr	r2, [r3, #20]
 800df7c:	68fb      	ldr	r3, [r7, #12]
 800df7e:	68b9      	ldr	r1, [r7, #8]
 800df80:	434b      	muls	r3, r1
 800df82:	429a      	cmp	r2, r3
 800df84:	d302      	bcc.n	800df8c <osMessageQueueNew+0x64>
 800df86:	2301      	movs	r3, #1
 800df88:	61bb      	str	r3, [r7, #24]
 800df8a:	e014      	b.n	800dfb6 <osMessageQueueNew+0x8e>
 800df8c:	687b      	ldr	r3, [r7, #4]
 800df8e:	689b      	ldr	r3, [r3, #8]
 800df90:	2b00      	cmp	r3, #0
 800df92:	d110      	bne.n	800dfb6 <osMessageQueueNew+0x8e>
 800df94:	687b      	ldr	r3, [r7, #4]
 800df96:	68db      	ldr	r3, [r3, #12]
 800df98:	2b00      	cmp	r3, #0
 800df9a:	d10c      	bne.n	800dfb6 <osMessageQueueNew+0x8e>
 800df9c:	687b      	ldr	r3, [r7, #4]
 800df9e:	691b      	ldr	r3, [r3, #16]
 800dfa0:	2b00      	cmp	r3, #0
 800dfa2:	d108      	bne.n	800dfb6 <osMessageQueueNew+0x8e>
 800dfa4:	687b      	ldr	r3, [r7, #4]
 800dfa6:	695b      	ldr	r3, [r3, #20]
 800dfa8:	2b00      	cmp	r3, #0
 800dfaa:	d104      	bne.n	800dfb6 <osMessageQueueNew+0x8e>
 800dfac:	2300      	movs	r3, #0
 800dfae:	61bb      	str	r3, [r7, #24]
 800dfb0:	e001      	b.n	800dfb6 <osMessageQueueNew+0x8e>
 800dfb2:	2300      	movs	r3, #0
 800dfb4:	61bb      	str	r3, [r7, #24]
 800dfb6:	69bb      	ldr	r3, [r7, #24]
 800dfb8:	2b01      	cmp	r3, #1
 800dfba:	d10c      	bne.n	800dfd6 <osMessageQueueNew+0xae>
 800dfbc:	687b      	ldr	r3, [r7, #4]
 800dfbe:	691a      	ldr	r2, [r3, #16]
 800dfc0:	687b      	ldr	r3, [r7, #4]
 800dfc2:	689b      	ldr	r3, [r3, #8]
 800dfc4:	68b9      	ldr	r1, [r7, #8]
 800dfc6:	68f8      	ldr	r0, [r7, #12]
 800dfc8:	2400      	movs	r4, #0
 800dfca:	9400      	str	r4, [sp, #0]
 800dfcc:	f000 fa09 	bl	800e3e2 <xQueueGenericCreateStatic>
 800dfd0:	0003      	movs	r3, r0
 800dfd2:	61fb      	str	r3, [r7, #28]
 800dfd4:	e00a      	b.n	800dfec <osMessageQueueNew+0xc4>
 800dfd6:	69bb      	ldr	r3, [r7, #24]
 800dfd8:	2b00      	cmp	r3, #0
 800dfda:	d107      	bne.n	800dfec <osMessageQueueNew+0xc4>
 800dfdc:	68b9      	ldr	r1, [r7, #8]
 800dfde:	68fb      	ldr	r3, [r7, #12]
 800dfe0:	2200      	movs	r2, #0
 800dfe2:	0018      	movs	r0, r3
 800dfe4:	f000 fa49 	bl	800e47a <xQueueGenericCreate>
 800dfe8:	0003      	movs	r3, r0
 800dfea:	61fb      	str	r3, [r7, #28]
 800dfec:	69fb      	ldr	r3, [r7, #28]
 800dfee:	2b00      	cmp	r3, #0
 800dff0:	d00e      	beq.n	800e010 <osMessageQueueNew+0xe8>
 800dff2:	687b      	ldr	r3, [r7, #4]
 800dff4:	2b00      	cmp	r3, #0
 800dff6:	d003      	beq.n	800e000 <osMessageQueueNew+0xd8>
 800dff8:	687b      	ldr	r3, [r7, #4]
 800dffa:	681b      	ldr	r3, [r3, #0]
 800dffc:	617b      	str	r3, [r7, #20]
 800dffe:	e001      	b.n	800e004 <osMessageQueueNew+0xdc>
 800e000:	2300      	movs	r3, #0
 800e002:	617b      	str	r3, [r7, #20]
 800e004:	697a      	ldr	r2, [r7, #20]
 800e006:	69fb      	ldr	r3, [r7, #28]
 800e008:	0011      	movs	r1, r2
 800e00a:	0018      	movs	r0, r3
 800e00c:	f000 fdfc 	bl	800ec08 <vQueueAddToRegistry>
 800e010:	69fb      	ldr	r3, [r7, #28]
 800e012:	0018      	movs	r0, r3
 800e014:	46bd      	mov	sp, r7
 800e016:	b009      	add	sp, #36	; 0x24
 800e018:	bd90      	pop	{r4, r7, pc}
	...

0800e01c <osMessageQueuePut>:
 800e01c:	b580      	push	{r7, lr}
 800e01e:	b088      	sub	sp, #32
 800e020:	af00      	add	r7, sp, #0
 800e022:	60f8      	str	r0, [r7, #12]
 800e024:	60b9      	str	r1, [r7, #8]
 800e026:	603b      	str	r3, [r7, #0]
 800e028:	1dfb      	adds	r3, r7, #7
 800e02a:	701a      	strb	r2, [r3, #0]
 800e02c:	68fb      	ldr	r3, [r7, #12]
 800e02e:	61bb      	str	r3, [r7, #24]
 800e030:	2300      	movs	r3, #0
 800e032:	61fb      	str	r3, [r7, #28]
 800e034:	f3ef 8305 	mrs	r3, IPSR
 800e038:	617b      	str	r3, [r7, #20]
 800e03a:	697b      	ldr	r3, [r7, #20]
 800e03c:	2b00      	cmp	r3, #0
 800e03e:	d024      	beq.n	800e08a <osMessageQueuePut+0x6e>
 800e040:	69bb      	ldr	r3, [r7, #24]
 800e042:	2b00      	cmp	r3, #0
 800e044:	d005      	beq.n	800e052 <osMessageQueuePut+0x36>
 800e046:	68bb      	ldr	r3, [r7, #8]
 800e048:	2b00      	cmp	r3, #0
 800e04a:	d002      	beq.n	800e052 <osMessageQueuePut+0x36>
 800e04c:	683b      	ldr	r3, [r7, #0]
 800e04e:	2b00      	cmp	r3, #0
 800e050:	d003      	beq.n	800e05a <osMessageQueuePut+0x3e>
 800e052:	2304      	movs	r3, #4
 800e054:	425b      	negs	r3, r3
 800e056:	61fb      	str	r3, [r7, #28]
 800e058:	e034      	b.n	800e0c4 <osMessageQueuePut+0xa8>
 800e05a:	2300      	movs	r3, #0
 800e05c:	613b      	str	r3, [r7, #16]
 800e05e:	2310      	movs	r3, #16
 800e060:	18fa      	adds	r2, r7, r3
 800e062:	68b9      	ldr	r1, [r7, #8]
 800e064:	69b8      	ldr	r0, [r7, #24]
 800e066:	2300      	movs	r3, #0
 800e068:	f000 fb24 	bl	800e6b4 <xQueueGenericSendFromISR>
 800e06c:	0003      	movs	r3, r0
 800e06e:	2b01      	cmp	r3, #1
 800e070:	d003      	beq.n	800e07a <osMessageQueuePut+0x5e>
 800e072:	2303      	movs	r3, #3
 800e074:	425b      	negs	r3, r3
 800e076:	61fb      	str	r3, [r7, #28]
 800e078:	e024      	b.n	800e0c4 <osMessageQueuePut+0xa8>
 800e07a:	693b      	ldr	r3, [r7, #16]
 800e07c:	2b00      	cmp	r3, #0
 800e07e:	d021      	beq.n	800e0c4 <osMessageQueuePut+0xa8>
 800e080:	4b13      	ldr	r3, [pc, #76]	; (800e0d0 <osMessageQueuePut+0xb4>)
 800e082:	2280      	movs	r2, #128	; 0x80
 800e084:	0552      	lsls	r2, r2, #21
 800e086:	601a      	str	r2, [r3, #0]
 800e088:	e01c      	b.n	800e0c4 <osMessageQueuePut+0xa8>
 800e08a:	69bb      	ldr	r3, [r7, #24]
 800e08c:	2b00      	cmp	r3, #0
 800e08e:	d002      	beq.n	800e096 <osMessageQueuePut+0x7a>
 800e090:	68bb      	ldr	r3, [r7, #8]
 800e092:	2b00      	cmp	r3, #0
 800e094:	d103      	bne.n	800e09e <osMessageQueuePut+0x82>
 800e096:	2304      	movs	r3, #4
 800e098:	425b      	negs	r3, r3
 800e09a:	61fb      	str	r3, [r7, #28]
 800e09c:	e012      	b.n	800e0c4 <osMessageQueuePut+0xa8>
 800e09e:	683a      	ldr	r2, [r7, #0]
 800e0a0:	68b9      	ldr	r1, [r7, #8]
 800e0a2:	69b8      	ldr	r0, [r7, #24]
 800e0a4:	2300      	movs	r3, #0
 800e0a6:	f000 fa41 	bl	800e52c <xQueueGenericSend>
 800e0aa:	0003      	movs	r3, r0
 800e0ac:	2b01      	cmp	r3, #1
 800e0ae:	d009      	beq.n	800e0c4 <osMessageQueuePut+0xa8>
 800e0b0:	683b      	ldr	r3, [r7, #0]
 800e0b2:	2b00      	cmp	r3, #0
 800e0b4:	d003      	beq.n	800e0be <osMessageQueuePut+0xa2>
 800e0b6:	2302      	movs	r3, #2
 800e0b8:	425b      	negs	r3, r3
 800e0ba:	61fb      	str	r3, [r7, #28]
 800e0bc:	e002      	b.n	800e0c4 <osMessageQueuePut+0xa8>
 800e0be:	2303      	movs	r3, #3
 800e0c0:	425b      	negs	r3, r3
 800e0c2:	61fb      	str	r3, [r7, #28]
 800e0c4:	69fb      	ldr	r3, [r7, #28]
 800e0c6:	0018      	movs	r0, r3
 800e0c8:	46bd      	mov	sp, r7
 800e0ca:	b008      	add	sp, #32
 800e0cc:	bd80      	pop	{r7, pc}
 800e0ce:	46c0      	nop			; (mov r8, r8)
 800e0d0:	e000ed04 	.word	0xe000ed04

0800e0d4 <osMessageQueueGet>:
 800e0d4:	b580      	push	{r7, lr}
 800e0d6:	b088      	sub	sp, #32
 800e0d8:	af00      	add	r7, sp, #0
 800e0da:	60f8      	str	r0, [r7, #12]
 800e0dc:	60b9      	str	r1, [r7, #8]
 800e0de:	607a      	str	r2, [r7, #4]
 800e0e0:	603b      	str	r3, [r7, #0]
 800e0e2:	68fb      	ldr	r3, [r7, #12]
 800e0e4:	61bb      	str	r3, [r7, #24]
 800e0e6:	2300      	movs	r3, #0
 800e0e8:	61fb      	str	r3, [r7, #28]
 800e0ea:	f3ef 8305 	mrs	r3, IPSR
 800e0ee:	617b      	str	r3, [r7, #20]
 800e0f0:	697b      	ldr	r3, [r7, #20]
 800e0f2:	2b00      	cmp	r3, #0
 800e0f4:	d024      	beq.n	800e140 <osMessageQueueGet+0x6c>
 800e0f6:	69bb      	ldr	r3, [r7, #24]
 800e0f8:	2b00      	cmp	r3, #0
 800e0fa:	d005      	beq.n	800e108 <osMessageQueueGet+0x34>
 800e0fc:	68bb      	ldr	r3, [r7, #8]
 800e0fe:	2b00      	cmp	r3, #0
 800e100:	d002      	beq.n	800e108 <osMessageQueueGet+0x34>
 800e102:	683b      	ldr	r3, [r7, #0]
 800e104:	2b00      	cmp	r3, #0
 800e106:	d003      	beq.n	800e110 <osMessageQueueGet+0x3c>
 800e108:	2304      	movs	r3, #4
 800e10a:	425b      	negs	r3, r3
 800e10c:	61fb      	str	r3, [r7, #28]
 800e10e:	e034      	b.n	800e17a <osMessageQueueGet+0xa6>
 800e110:	2300      	movs	r3, #0
 800e112:	613b      	str	r3, [r7, #16]
 800e114:	2310      	movs	r3, #16
 800e116:	18fa      	adds	r2, r7, r3
 800e118:	68b9      	ldr	r1, [r7, #8]
 800e11a:	69bb      	ldr	r3, [r7, #24]
 800e11c:	0018      	movs	r0, r3
 800e11e:	f000 fbf2 	bl	800e906 <xQueueReceiveFromISR>
 800e122:	0003      	movs	r3, r0
 800e124:	2b01      	cmp	r3, #1
 800e126:	d003      	beq.n	800e130 <osMessageQueueGet+0x5c>
 800e128:	2303      	movs	r3, #3
 800e12a:	425b      	negs	r3, r3
 800e12c:	61fb      	str	r3, [r7, #28]
 800e12e:	e024      	b.n	800e17a <osMessageQueueGet+0xa6>
 800e130:	693b      	ldr	r3, [r7, #16]
 800e132:	2b00      	cmp	r3, #0
 800e134:	d021      	beq.n	800e17a <osMessageQueueGet+0xa6>
 800e136:	4b13      	ldr	r3, [pc, #76]	; (800e184 <osMessageQueueGet+0xb0>)
 800e138:	2280      	movs	r2, #128	; 0x80
 800e13a:	0552      	lsls	r2, r2, #21
 800e13c:	601a      	str	r2, [r3, #0]
 800e13e:	e01c      	b.n	800e17a <osMessageQueueGet+0xa6>
 800e140:	69bb      	ldr	r3, [r7, #24]
 800e142:	2b00      	cmp	r3, #0
 800e144:	d002      	beq.n	800e14c <osMessageQueueGet+0x78>
 800e146:	68bb      	ldr	r3, [r7, #8]
 800e148:	2b00      	cmp	r3, #0
 800e14a:	d103      	bne.n	800e154 <osMessageQueueGet+0x80>
 800e14c:	2304      	movs	r3, #4
 800e14e:	425b      	negs	r3, r3
 800e150:	61fb      	str	r3, [r7, #28]
 800e152:	e012      	b.n	800e17a <osMessageQueueGet+0xa6>
 800e154:	683a      	ldr	r2, [r7, #0]
 800e156:	68b9      	ldr	r1, [r7, #8]
 800e158:	69bb      	ldr	r3, [r7, #24]
 800e15a:	0018      	movs	r0, r3
 800e15c:	f000 fb1e 	bl	800e79c <xQueueReceive>
 800e160:	0003      	movs	r3, r0
 800e162:	2b01      	cmp	r3, #1
 800e164:	d009      	beq.n	800e17a <osMessageQueueGet+0xa6>
 800e166:	683b      	ldr	r3, [r7, #0]
 800e168:	2b00      	cmp	r3, #0
 800e16a:	d003      	beq.n	800e174 <osMessageQueueGet+0xa0>
 800e16c:	2302      	movs	r3, #2
 800e16e:	425b      	negs	r3, r3
 800e170:	61fb      	str	r3, [r7, #28]
 800e172:	e002      	b.n	800e17a <osMessageQueueGet+0xa6>
 800e174:	2303      	movs	r3, #3
 800e176:	425b      	negs	r3, r3
 800e178:	61fb      	str	r3, [r7, #28]
 800e17a:	69fb      	ldr	r3, [r7, #28]
 800e17c:	0018      	movs	r0, r3
 800e17e:	46bd      	mov	sp, r7
 800e180:	b008      	add	sp, #32
 800e182:	bd80      	pop	{r7, pc}
 800e184:	e000ed04 	.word	0xe000ed04

0800e188 <vApplicationGetIdleTaskMemory>:
 800e188:	b580      	push	{r7, lr}
 800e18a:	b084      	sub	sp, #16
 800e18c:	af00      	add	r7, sp, #0
 800e18e:	60f8      	str	r0, [r7, #12]
 800e190:	60b9      	str	r1, [r7, #8]
 800e192:	607a      	str	r2, [r7, #4]
 800e194:	68fb      	ldr	r3, [r7, #12]
 800e196:	4a06      	ldr	r2, [pc, #24]	; (800e1b0 <vApplicationGetIdleTaskMemory+0x28>)
 800e198:	601a      	str	r2, [r3, #0]
 800e19a:	68bb      	ldr	r3, [r7, #8]
 800e19c:	4a05      	ldr	r2, [pc, #20]	; (800e1b4 <vApplicationGetIdleTaskMemory+0x2c>)
 800e19e:	601a      	str	r2, [r3, #0]
 800e1a0:	687b      	ldr	r3, [r7, #4]
 800e1a2:	2280      	movs	r2, #128	; 0x80
 800e1a4:	601a      	str	r2, [r3, #0]
 800e1a6:	46c0      	nop			; (mov r8, r8)
 800e1a8:	46bd      	mov	sp, r7
 800e1aa:	b004      	add	sp, #16
 800e1ac:	bd80      	pop	{r7, pc}
 800e1ae:	46c0      	nop			; (mov r8, r8)
 800e1b0:	20000308 	.word	0x20000308
 800e1b4:	200003b0 	.word	0x200003b0

0800e1b8 <vApplicationGetTimerTaskMemory>:
 800e1b8:	b580      	push	{r7, lr}
 800e1ba:	b084      	sub	sp, #16
 800e1bc:	af00      	add	r7, sp, #0
 800e1be:	60f8      	str	r0, [r7, #12]
 800e1c0:	60b9      	str	r1, [r7, #8]
 800e1c2:	607a      	str	r2, [r7, #4]
 800e1c4:	68fb      	ldr	r3, [r7, #12]
 800e1c6:	4a06      	ldr	r2, [pc, #24]	; (800e1e0 <vApplicationGetTimerTaskMemory+0x28>)
 800e1c8:	601a      	str	r2, [r3, #0]
 800e1ca:	68bb      	ldr	r3, [r7, #8]
 800e1cc:	4a05      	ldr	r2, [pc, #20]	; (800e1e4 <vApplicationGetTimerTaskMemory+0x2c>)
 800e1ce:	601a      	str	r2, [r3, #0]
 800e1d0:	687b      	ldr	r3, [r7, #4]
 800e1d2:	2280      	movs	r2, #128	; 0x80
 800e1d4:	0052      	lsls	r2, r2, #1
 800e1d6:	601a      	str	r2, [r3, #0]
 800e1d8:	46c0      	nop			; (mov r8, r8)
 800e1da:	46bd      	mov	sp, r7
 800e1dc:	b004      	add	sp, #16
 800e1de:	bd80      	pop	{r7, pc}
 800e1e0:	200005b0 	.word	0x200005b0
 800e1e4:	20000658 	.word	0x20000658

0800e1e8 <vListInitialise>:
 800e1e8:	b580      	push	{r7, lr}
 800e1ea:	b082      	sub	sp, #8
 800e1ec:	af00      	add	r7, sp, #0
 800e1ee:	6078      	str	r0, [r7, #4]
 800e1f0:	687b      	ldr	r3, [r7, #4]
 800e1f2:	3308      	adds	r3, #8
 800e1f4:	001a      	movs	r2, r3
 800e1f6:	687b      	ldr	r3, [r7, #4]
 800e1f8:	605a      	str	r2, [r3, #4]
 800e1fa:	687b      	ldr	r3, [r7, #4]
 800e1fc:	2201      	movs	r2, #1
 800e1fe:	4252      	negs	r2, r2
 800e200:	609a      	str	r2, [r3, #8]
 800e202:	687b      	ldr	r3, [r7, #4]
 800e204:	3308      	adds	r3, #8
 800e206:	001a      	movs	r2, r3
 800e208:	687b      	ldr	r3, [r7, #4]
 800e20a:	60da      	str	r2, [r3, #12]
 800e20c:	687b      	ldr	r3, [r7, #4]
 800e20e:	3308      	adds	r3, #8
 800e210:	001a      	movs	r2, r3
 800e212:	687b      	ldr	r3, [r7, #4]
 800e214:	611a      	str	r2, [r3, #16]
 800e216:	687b      	ldr	r3, [r7, #4]
 800e218:	2200      	movs	r2, #0
 800e21a:	601a      	str	r2, [r3, #0]
 800e21c:	46c0      	nop			; (mov r8, r8)
 800e21e:	46bd      	mov	sp, r7
 800e220:	b002      	add	sp, #8
 800e222:	bd80      	pop	{r7, pc}

0800e224 <vListInitialiseItem>:
 800e224:	b580      	push	{r7, lr}
 800e226:	b082      	sub	sp, #8
 800e228:	af00      	add	r7, sp, #0
 800e22a:	6078      	str	r0, [r7, #4]
 800e22c:	687b      	ldr	r3, [r7, #4]
 800e22e:	2200      	movs	r2, #0
 800e230:	611a      	str	r2, [r3, #16]
 800e232:	46c0      	nop			; (mov r8, r8)
 800e234:	46bd      	mov	sp, r7
 800e236:	b002      	add	sp, #8
 800e238:	bd80      	pop	{r7, pc}

0800e23a <vListInsertEnd>:
 800e23a:	b580      	push	{r7, lr}
 800e23c:	b084      	sub	sp, #16
 800e23e:	af00      	add	r7, sp, #0
 800e240:	6078      	str	r0, [r7, #4]
 800e242:	6039      	str	r1, [r7, #0]
 800e244:	687b      	ldr	r3, [r7, #4]
 800e246:	685b      	ldr	r3, [r3, #4]
 800e248:	60fb      	str	r3, [r7, #12]
 800e24a:	683b      	ldr	r3, [r7, #0]
 800e24c:	68fa      	ldr	r2, [r7, #12]
 800e24e:	605a      	str	r2, [r3, #4]
 800e250:	68fb      	ldr	r3, [r7, #12]
 800e252:	689a      	ldr	r2, [r3, #8]
 800e254:	683b      	ldr	r3, [r7, #0]
 800e256:	609a      	str	r2, [r3, #8]
 800e258:	68fb      	ldr	r3, [r7, #12]
 800e25a:	689b      	ldr	r3, [r3, #8]
 800e25c:	683a      	ldr	r2, [r7, #0]
 800e25e:	605a      	str	r2, [r3, #4]
 800e260:	68fb      	ldr	r3, [r7, #12]
 800e262:	683a      	ldr	r2, [r7, #0]
 800e264:	609a      	str	r2, [r3, #8]
 800e266:	683b      	ldr	r3, [r7, #0]
 800e268:	687a      	ldr	r2, [r7, #4]
 800e26a:	611a      	str	r2, [r3, #16]
 800e26c:	687b      	ldr	r3, [r7, #4]
 800e26e:	681b      	ldr	r3, [r3, #0]
 800e270:	1c5a      	adds	r2, r3, #1
 800e272:	687b      	ldr	r3, [r7, #4]
 800e274:	601a      	str	r2, [r3, #0]
 800e276:	46c0      	nop			; (mov r8, r8)
 800e278:	46bd      	mov	sp, r7
 800e27a:	b004      	add	sp, #16
 800e27c:	bd80      	pop	{r7, pc}

0800e27e <vListInsert>:
 800e27e:	b580      	push	{r7, lr}
 800e280:	b084      	sub	sp, #16
 800e282:	af00      	add	r7, sp, #0
 800e284:	6078      	str	r0, [r7, #4]
 800e286:	6039      	str	r1, [r7, #0]
 800e288:	683b      	ldr	r3, [r7, #0]
 800e28a:	681b      	ldr	r3, [r3, #0]
 800e28c:	60bb      	str	r3, [r7, #8]
 800e28e:	68bb      	ldr	r3, [r7, #8]
 800e290:	3301      	adds	r3, #1
 800e292:	d103      	bne.n	800e29c <vListInsert+0x1e>
 800e294:	687b      	ldr	r3, [r7, #4]
 800e296:	691b      	ldr	r3, [r3, #16]
 800e298:	60fb      	str	r3, [r7, #12]
 800e29a:	e00c      	b.n	800e2b6 <vListInsert+0x38>
 800e29c:	687b      	ldr	r3, [r7, #4]
 800e29e:	3308      	adds	r3, #8
 800e2a0:	60fb      	str	r3, [r7, #12]
 800e2a2:	e002      	b.n	800e2aa <vListInsert+0x2c>
 800e2a4:	68fb      	ldr	r3, [r7, #12]
 800e2a6:	685b      	ldr	r3, [r3, #4]
 800e2a8:	60fb      	str	r3, [r7, #12]
 800e2aa:	68fb      	ldr	r3, [r7, #12]
 800e2ac:	685b      	ldr	r3, [r3, #4]
 800e2ae:	681b      	ldr	r3, [r3, #0]
 800e2b0:	68ba      	ldr	r2, [r7, #8]
 800e2b2:	429a      	cmp	r2, r3
 800e2b4:	d2f6      	bcs.n	800e2a4 <vListInsert+0x26>
 800e2b6:	68fb      	ldr	r3, [r7, #12]
 800e2b8:	685a      	ldr	r2, [r3, #4]
 800e2ba:	683b      	ldr	r3, [r7, #0]
 800e2bc:	605a      	str	r2, [r3, #4]
 800e2be:	683b      	ldr	r3, [r7, #0]
 800e2c0:	685b      	ldr	r3, [r3, #4]
 800e2c2:	683a      	ldr	r2, [r7, #0]
 800e2c4:	609a      	str	r2, [r3, #8]
 800e2c6:	683b      	ldr	r3, [r7, #0]
 800e2c8:	68fa      	ldr	r2, [r7, #12]
 800e2ca:	609a      	str	r2, [r3, #8]
 800e2cc:	68fb      	ldr	r3, [r7, #12]
 800e2ce:	683a      	ldr	r2, [r7, #0]
 800e2d0:	605a      	str	r2, [r3, #4]
 800e2d2:	683b      	ldr	r3, [r7, #0]
 800e2d4:	687a      	ldr	r2, [r7, #4]
 800e2d6:	611a      	str	r2, [r3, #16]
 800e2d8:	687b      	ldr	r3, [r7, #4]
 800e2da:	681b      	ldr	r3, [r3, #0]
 800e2dc:	1c5a      	adds	r2, r3, #1
 800e2de:	687b      	ldr	r3, [r7, #4]
 800e2e0:	601a      	str	r2, [r3, #0]
 800e2e2:	46c0      	nop			; (mov r8, r8)
 800e2e4:	46bd      	mov	sp, r7
 800e2e6:	b004      	add	sp, #16
 800e2e8:	bd80      	pop	{r7, pc}

0800e2ea <uxListRemove>:
 800e2ea:	b580      	push	{r7, lr}
 800e2ec:	b084      	sub	sp, #16
 800e2ee:	af00      	add	r7, sp, #0
 800e2f0:	6078      	str	r0, [r7, #4]
 800e2f2:	687b      	ldr	r3, [r7, #4]
 800e2f4:	691b      	ldr	r3, [r3, #16]
 800e2f6:	60fb      	str	r3, [r7, #12]
 800e2f8:	687b      	ldr	r3, [r7, #4]
 800e2fa:	685b      	ldr	r3, [r3, #4]
 800e2fc:	687a      	ldr	r2, [r7, #4]
 800e2fe:	6892      	ldr	r2, [r2, #8]
 800e300:	609a      	str	r2, [r3, #8]
 800e302:	687b      	ldr	r3, [r7, #4]
 800e304:	689b      	ldr	r3, [r3, #8]
 800e306:	687a      	ldr	r2, [r7, #4]
 800e308:	6852      	ldr	r2, [r2, #4]
 800e30a:	605a      	str	r2, [r3, #4]
 800e30c:	68fb      	ldr	r3, [r7, #12]
 800e30e:	685b      	ldr	r3, [r3, #4]
 800e310:	687a      	ldr	r2, [r7, #4]
 800e312:	429a      	cmp	r2, r3
 800e314:	d103      	bne.n	800e31e <uxListRemove+0x34>
 800e316:	687b      	ldr	r3, [r7, #4]
 800e318:	689a      	ldr	r2, [r3, #8]
 800e31a:	68fb      	ldr	r3, [r7, #12]
 800e31c:	605a      	str	r2, [r3, #4]
 800e31e:	687b      	ldr	r3, [r7, #4]
 800e320:	2200      	movs	r2, #0
 800e322:	611a      	str	r2, [r3, #16]
 800e324:	68fb      	ldr	r3, [r7, #12]
 800e326:	681b      	ldr	r3, [r3, #0]
 800e328:	1e5a      	subs	r2, r3, #1
 800e32a:	68fb      	ldr	r3, [r7, #12]
 800e32c:	601a      	str	r2, [r3, #0]
 800e32e:	68fb      	ldr	r3, [r7, #12]
 800e330:	681b      	ldr	r3, [r3, #0]
 800e332:	0018      	movs	r0, r3
 800e334:	46bd      	mov	sp, r7
 800e336:	b004      	add	sp, #16
 800e338:	bd80      	pop	{r7, pc}

0800e33a <xQueueGenericReset>:
 800e33a:	b580      	push	{r7, lr}
 800e33c:	b084      	sub	sp, #16
 800e33e:	af00      	add	r7, sp, #0
 800e340:	6078      	str	r0, [r7, #4]
 800e342:	6039      	str	r1, [r7, #0]
 800e344:	687b      	ldr	r3, [r7, #4]
 800e346:	60fb      	str	r3, [r7, #12]
 800e348:	68fb      	ldr	r3, [r7, #12]
 800e34a:	2b00      	cmp	r3, #0
 800e34c:	d101      	bne.n	800e352 <xQueueGenericReset+0x18>
 800e34e:	b672      	cpsid	i
 800e350:	e7fe      	b.n	800e350 <xQueueGenericReset+0x16>
 800e352:	f002 f82d 	bl	80103b0 <vPortEnterCritical>
 800e356:	68fb      	ldr	r3, [r7, #12]
 800e358:	681a      	ldr	r2, [r3, #0]
 800e35a:	68fb      	ldr	r3, [r7, #12]
 800e35c:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 800e35e:	68fb      	ldr	r3, [r7, #12]
 800e360:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e362:	434b      	muls	r3, r1
 800e364:	18d2      	adds	r2, r2, r3
 800e366:	68fb      	ldr	r3, [r7, #12]
 800e368:	609a      	str	r2, [r3, #8]
 800e36a:	68fb      	ldr	r3, [r7, #12]
 800e36c:	2200      	movs	r2, #0
 800e36e:	639a      	str	r2, [r3, #56]	; 0x38
 800e370:	68fb      	ldr	r3, [r7, #12]
 800e372:	681a      	ldr	r2, [r3, #0]
 800e374:	68fb      	ldr	r3, [r7, #12]
 800e376:	605a      	str	r2, [r3, #4]
 800e378:	68fb      	ldr	r3, [r7, #12]
 800e37a:	681a      	ldr	r2, [r3, #0]
 800e37c:	68fb      	ldr	r3, [r7, #12]
 800e37e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e380:	1e59      	subs	r1, r3, #1
 800e382:	68fb      	ldr	r3, [r7, #12]
 800e384:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e386:	434b      	muls	r3, r1
 800e388:	18d2      	adds	r2, r2, r3
 800e38a:	68fb      	ldr	r3, [r7, #12]
 800e38c:	60da      	str	r2, [r3, #12]
 800e38e:	68fb      	ldr	r3, [r7, #12]
 800e390:	2244      	movs	r2, #68	; 0x44
 800e392:	21ff      	movs	r1, #255	; 0xff
 800e394:	5499      	strb	r1, [r3, r2]
 800e396:	68fb      	ldr	r3, [r7, #12]
 800e398:	2245      	movs	r2, #69	; 0x45
 800e39a:	21ff      	movs	r1, #255	; 0xff
 800e39c:	5499      	strb	r1, [r3, r2]
 800e39e:	683b      	ldr	r3, [r7, #0]
 800e3a0:	2b00      	cmp	r3, #0
 800e3a2:	d10d      	bne.n	800e3c0 <xQueueGenericReset+0x86>
 800e3a4:	68fb      	ldr	r3, [r7, #12]
 800e3a6:	691b      	ldr	r3, [r3, #16]
 800e3a8:	2b00      	cmp	r3, #0
 800e3aa:	d013      	beq.n	800e3d4 <xQueueGenericReset+0x9a>
 800e3ac:	68fb      	ldr	r3, [r7, #12]
 800e3ae:	3310      	adds	r3, #16
 800e3b0:	0018      	movs	r0, r3
 800e3b2:	f001 f9dd 	bl	800f770 <xTaskRemoveFromEventList>
 800e3b6:	1e03      	subs	r3, r0, #0
 800e3b8:	d00c      	beq.n	800e3d4 <xQueueGenericReset+0x9a>
 800e3ba:	f001 ffe9 	bl	8010390 <vPortYield>
 800e3be:	e009      	b.n	800e3d4 <xQueueGenericReset+0x9a>
 800e3c0:	68fb      	ldr	r3, [r7, #12]
 800e3c2:	3310      	adds	r3, #16
 800e3c4:	0018      	movs	r0, r3
 800e3c6:	f7ff ff0f 	bl	800e1e8 <vListInitialise>
 800e3ca:	68fb      	ldr	r3, [r7, #12]
 800e3cc:	3324      	adds	r3, #36	; 0x24
 800e3ce:	0018      	movs	r0, r3
 800e3d0:	f7ff ff0a 	bl	800e1e8 <vListInitialise>
 800e3d4:	f001 fffe 	bl	80103d4 <vPortExitCritical>
 800e3d8:	2301      	movs	r3, #1
 800e3da:	0018      	movs	r0, r3
 800e3dc:	46bd      	mov	sp, r7
 800e3de:	b004      	add	sp, #16
 800e3e0:	bd80      	pop	{r7, pc}

0800e3e2 <xQueueGenericCreateStatic>:
 800e3e2:	b590      	push	{r4, r7, lr}
 800e3e4:	b089      	sub	sp, #36	; 0x24
 800e3e6:	af02      	add	r7, sp, #8
 800e3e8:	60f8      	str	r0, [r7, #12]
 800e3ea:	60b9      	str	r1, [r7, #8]
 800e3ec:	607a      	str	r2, [r7, #4]
 800e3ee:	603b      	str	r3, [r7, #0]
 800e3f0:	68fb      	ldr	r3, [r7, #12]
 800e3f2:	2b00      	cmp	r3, #0
 800e3f4:	d101      	bne.n	800e3fa <xQueueGenericCreateStatic+0x18>
 800e3f6:	b672      	cpsid	i
 800e3f8:	e7fe      	b.n	800e3f8 <xQueueGenericCreateStatic+0x16>
 800e3fa:	683b      	ldr	r3, [r7, #0]
 800e3fc:	2b00      	cmp	r3, #0
 800e3fe:	d101      	bne.n	800e404 <xQueueGenericCreateStatic+0x22>
 800e400:	b672      	cpsid	i
 800e402:	e7fe      	b.n	800e402 <xQueueGenericCreateStatic+0x20>
 800e404:	687b      	ldr	r3, [r7, #4]
 800e406:	2b00      	cmp	r3, #0
 800e408:	d002      	beq.n	800e410 <xQueueGenericCreateStatic+0x2e>
 800e40a:	68bb      	ldr	r3, [r7, #8]
 800e40c:	2b00      	cmp	r3, #0
 800e40e:	d001      	beq.n	800e414 <xQueueGenericCreateStatic+0x32>
 800e410:	2301      	movs	r3, #1
 800e412:	e000      	b.n	800e416 <xQueueGenericCreateStatic+0x34>
 800e414:	2300      	movs	r3, #0
 800e416:	2b00      	cmp	r3, #0
 800e418:	d101      	bne.n	800e41e <xQueueGenericCreateStatic+0x3c>
 800e41a:	b672      	cpsid	i
 800e41c:	e7fe      	b.n	800e41c <xQueueGenericCreateStatic+0x3a>
 800e41e:	687b      	ldr	r3, [r7, #4]
 800e420:	2b00      	cmp	r3, #0
 800e422:	d102      	bne.n	800e42a <xQueueGenericCreateStatic+0x48>
 800e424:	68bb      	ldr	r3, [r7, #8]
 800e426:	2b00      	cmp	r3, #0
 800e428:	d101      	bne.n	800e42e <xQueueGenericCreateStatic+0x4c>
 800e42a:	2301      	movs	r3, #1
 800e42c:	e000      	b.n	800e430 <xQueueGenericCreateStatic+0x4e>
 800e42e:	2300      	movs	r3, #0
 800e430:	2b00      	cmp	r3, #0
 800e432:	d101      	bne.n	800e438 <xQueueGenericCreateStatic+0x56>
 800e434:	b672      	cpsid	i
 800e436:	e7fe      	b.n	800e436 <xQueueGenericCreateStatic+0x54>
 800e438:	2350      	movs	r3, #80	; 0x50
 800e43a:	613b      	str	r3, [r7, #16]
 800e43c:	693b      	ldr	r3, [r7, #16]
 800e43e:	2b50      	cmp	r3, #80	; 0x50
 800e440:	d001      	beq.n	800e446 <xQueueGenericCreateStatic+0x64>
 800e442:	b672      	cpsid	i
 800e444:	e7fe      	b.n	800e444 <xQueueGenericCreateStatic+0x62>
 800e446:	693b      	ldr	r3, [r7, #16]
 800e448:	683b      	ldr	r3, [r7, #0]
 800e44a:	617b      	str	r3, [r7, #20]
 800e44c:	697b      	ldr	r3, [r7, #20]
 800e44e:	2b00      	cmp	r3, #0
 800e450:	d00e      	beq.n	800e470 <xQueueGenericCreateStatic+0x8e>
 800e452:	697b      	ldr	r3, [r7, #20]
 800e454:	2246      	movs	r2, #70	; 0x46
 800e456:	2101      	movs	r1, #1
 800e458:	5499      	strb	r1, [r3, r2]
 800e45a:	2328      	movs	r3, #40	; 0x28
 800e45c:	18fb      	adds	r3, r7, r3
 800e45e:	781c      	ldrb	r4, [r3, #0]
 800e460:	687a      	ldr	r2, [r7, #4]
 800e462:	68b9      	ldr	r1, [r7, #8]
 800e464:	68f8      	ldr	r0, [r7, #12]
 800e466:	697b      	ldr	r3, [r7, #20]
 800e468:	9300      	str	r3, [sp, #0]
 800e46a:	0023      	movs	r3, r4
 800e46c:	f000 f837 	bl	800e4de <prvInitialiseNewQueue>
 800e470:	697b      	ldr	r3, [r7, #20]
 800e472:	0018      	movs	r0, r3
 800e474:	46bd      	mov	sp, r7
 800e476:	b007      	add	sp, #28
 800e478:	bd90      	pop	{r4, r7, pc}

0800e47a <xQueueGenericCreate>:
 800e47a:	b590      	push	{r4, r7, lr}
 800e47c:	b08b      	sub	sp, #44	; 0x2c
 800e47e:	af02      	add	r7, sp, #8
 800e480:	60f8      	str	r0, [r7, #12]
 800e482:	60b9      	str	r1, [r7, #8]
 800e484:	1dfb      	adds	r3, r7, #7
 800e486:	701a      	strb	r2, [r3, #0]
 800e488:	68fb      	ldr	r3, [r7, #12]
 800e48a:	2b00      	cmp	r3, #0
 800e48c:	d101      	bne.n	800e492 <xQueueGenericCreate+0x18>
 800e48e:	b672      	cpsid	i
 800e490:	e7fe      	b.n	800e490 <xQueueGenericCreate+0x16>
 800e492:	68fb      	ldr	r3, [r7, #12]
 800e494:	68ba      	ldr	r2, [r7, #8]
 800e496:	4353      	muls	r3, r2
 800e498:	61fb      	str	r3, [r7, #28]
 800e49a:	69fb      	ldr	r3, [r7, #28]
 800e49c:	3350      	adds	r3, #80	; 0x50
 800e49e:	0018      	movs	r0, r3
 800e4a0:	f002 f81e 	bl	80104e0 <pvPortMalloc>
 800e4a4:	0003      	movs	r3, r0
 800e4a6:	61bb      	str	r3, [r7, #24]
 800e4a8:	69bb      	ldr	r3, [r7, #24]
 800e4aa:	2b00      	cmp	r3, #0
 800e4ac:	d012      	beq.n	800e4d4 <xQueueGenericCreate+0x5a>
 800e4ae:	69bb      	ldr	r3, [r7, #24]
 800e4b0:	617b      	str	r3, [r7, #20]
 800e4b2:	697b      	ldr	r3, [r7, #20]
 800e4b4:	3350      	adds	r3, #80	; 0x50
 800e4b6:	617b      	str	r3, [r7, #20]
 800e4b8:	69bb      	ldr	r3, [r7, #24]
 800e4ba:	2246      	movs	r2, #70	; 0x46
 800e4bc:	2100      	movs	r1, #0
 800e4be:	5499      	strb	r1, [r3, r2]
 800e4c0:	1dfb      	adds	r3, r7, #7
 800e4c2:	781c      	ldrb	r4, [r3, #0]
 800e4c4:	697a      	ldr	r2, [r7, #20]
 800e4c6:	68b9      	ldr	r1, [r7, #8]
 800e4c8:	68f8      	ldr	r0, [r7, #12]
 800e4ca:	69bb      	ldr	r3, [r7, #24]
 800e4cc:	9300      	str	r3, [sp, #0]
 800e4ce:	0023      	movs	r3, r4
 800e4d0:	f000 f805 	bl	800e4de <prvInitialiseNewQueue>
 800e4d4:	69bb      	ldr	r3, [r7, #24]
 800e4d6:	0018      	movs	r0, r3
 800e4d8:	46bd      	mov	sp, r7
 800e4da:	b009      	add	sp, #36	; 0x24
 800e4dc:	bd90      	pop	{r4, r7, pc}

0800e4de <prvInitialiseNewQueue>:
 800e4de:	b580      	push	{r7, lr}
 800e4e0:	b084      	sub	sp, #16
 800e4e2:	af00      	add	r7, sp, #0
 800e4e4:	60f8      	str	r0, [r7, #12]
 800e4e6:	60b9      	str	r1, [r7, #8]
 800e4e8:	607a      	str	r2, [r7, #4]
 800e4ea:	001a      	movs	r2, r3
 800e4ec:	1cfb      	adds	r3, r7, #3
 800e4ee:	701a      	strb	r2, [r3, #0]
 800e4f0:	68bb      	ldr	r3, [r7, #8]
 800e4f2:	2b00      	cmp	r3, #0
 800e4f4:	d103      	bne.n	800e4fe <prvInitialiseNewQueue+0x20>
 800e4f6:	69bb      	ldr	r3, [r7, #24]
 800e4f8:	69ba      	ldr	r2, [r7, #24]
 800e4fa:	601a      	str	r2, [r3, #0]
 800e4fc:	e002      	b.n	800e504 <prvInitialiseNewQueue+0x26>
 800e4fe:	69bb      	ldr	r3, [r7, #24]
 800e500:	687a      	ldr	r2, [r7, #4]
 800e502:	601a      	str	r2, [r3, #0]
 800e504:	69bb      	ldr	r3, [r7, #24]
 800e506:	68fa      	ldr	r2, [r7, #12]
 800e508:	63da      	str	r2, [r3, #60]	; 0x3c
 800e50a:	69bb      	ldr	r3, [r7, #24]
 800e50c:	68ba      	ldr	r2, [r7, #8]
 800e50e:	641a      	str	r2, [r3, #64]	; 0x40
 800e510:	69bb      	ldr	r3, [r7, #24]
 800e512:	2101      	movs	r1, #1
 800e514:	0018      	movs	r0, r3
 800e516:	f7ff ff10 	bl	800e33a <xQueueGenericReset>
 800e51a:	69bb      	ldr	r3, [r7, #24]
 800e51c:	1cfa      	adds	r2, r7, #3
 800e51e:	214c      	movs	r1, #76	; 0x4c
 800e520:	7812      	ldrb	r2, [r2, #0]
 800e522:	545a      	strb	r2, [r3, r1]
 800e524:	46c0      	nop			; (mov r8, r8)
 800e526:	46bd      	mov	sp, r7
 800e528:	b004      	add	sp, #16
 800e52a:	bd80      	pop	{r7, pc}

0800e52c <xQueueGenericSend>:
 800e52c:	b580      	push	{r7, lr}
 800e52e:	b08a      	sub	sp, #40	; 0x28
 800e530:	af00      	add	r7, sp, #0
 800e532:	60f8      	str	r0, [r7, #12]
 800e534:	60b9      	str	r1, [r7, #8]
 800e536:	607a      	str	r2, [r7, #4]
 800e538:	603b      	str	r3, [r7, #0]
 800e53a:	2300      	movs	r3, #0
 800e53c:	627b      	str	r3, [r7, #36]	; 0x24
 800e53e:	68fb      	ldr	r3, [r7, #12]
 800e540:	623b      	str	r3, [r7, #32]
 800e542:	6a3b      	ldr	r3, [r7, #32]
 800e544:	2b00      	cmp	r3, #0
 800e546:	d101      	bne.n	800e54c <xQueueGenericSend+0x20>
 800e548:	b672      	cpsid	i
 800e54a:	e7fe      	b.n	800e54a <xQueueGenericSend+0x1e>
 800e54c:	68bb      	ldr	r3, [r7, #8]
 800e54e:	2b00      	cmp	r3, #0
 800e550:	d103      	bne.n	800e55a <xQueueGenericSend+0x2e>
 800e552:	6a3b      	ldr	r3, [r7, #32]
 800e554:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e556:	2b00      	cmp	r3, #0
 800e558:	d101      	bne.n	800e55e <xQueueGenericSend+0x32>
 800e55a:	2301      	movs	r3, #1
 800e55c:	e000      	b.n	800e560 <xQueueGenericSend+0x34>
 800e55e:	2300      	movs	r3, #0
 800e560:	2b00      	cmp	r3, #0
 800e562:	d101      	bne.n	800e568 <xQueueGenericSend+0x3c>
 800e564:	b672      	cpsid	i
 800e566:	e7fe      	b.n	800e566 <xQueueGenericSend+0x3a>
 800e568:	683b      	ldr	r3, [r7, #0]
 800e56a:	2b02      	cmp	r3, #2
 800e56c:	d103      	bne.n	800e576 <xQueueGenericSend+0x4a>
 800e56e:	6a3b      	ldr	r3, [r7, #32]
 800e570:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e572:	2b01      	cmp	r3, #1
 800e574:	d101      	bne.n	800e57a <xQueueGenericSend+0x4e>
 800e576:	2301      	movs	r3, #1
 800e578:	e000      	b.n	800e57c <xQueueGenericSend+0x50>
 800e57a:	2300      	movs	r3, #0
 800e57c:	2b00      	cmp	r3, #0
 800e57e:	d101      	bne.n	800e584 <xQueueGenericSend+0x58>
 800e580:	b672      	cpsid	i
 800e582:	e7fe      	b.n	800e582 <xQueueGenericSend+0x56>
 800e584:	f001 fa9a 	bl	800fabc <xTaskGetSchedulerState>
 800e588:	1e03      	subs	r3, r0, #0
 800e58a:	d102      	bne.n	800e592 <xQueueGenericSend+0x66>
 800e58c:	687b      	ldr	r3, [r7, #4]
 800e58e:	2b00      	cmp	r3, #0
 800e590:	d101      	bne.n	800e596 <xQueueGenericSend+0x6a>
 800e592:	2301      	movs	r3, #1
 800e594:	e000      	b.n	800e598 <xQueueGenericSend+0x6c>
 800e596:	2300      	movs	r3, #0
 800e598:	2b00      	cmp	r3, #0
 800e59a:	d101      	bne.n	800e5a0 <xQueueGenericSend+0x74>
 800e59c:	b672      	cpsid	i
 800e59e:	e7fe      	b.n	800e59e <xQueueGenericSend+0x72>
 800e5a0:	f001 ff06 	bl	80103b0 <vPortEnterCritical>
 800e5a4:	6a3b      	ldr	r3, [r7, #32]
 800e5a6:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800e5a8:	6a3b      	ldr	r3, [r7, #32]
 800e5aa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e5ac:	429a      	cmp	r2, r3
 800e5ae:	d302      	bcc.n	800e5b6 <xQueueGenericSend+0x8a>
 800e5b0:	683b      	ldr	r3, [r7, #0]
 800e5b2:	2b02      	cmp	r3, #2
 800e5b4:	d11e      	bne.n	800e5f4 <xQueueGenericSend+0xc8>
 800e5b6:	683a      	ldr	r2, [r7, #0]
 800e5b8:	68b9      	ldr	r1, [r7, #8]
 800e5ba:	6a3b      	ldr	r3, [r7, #32]
 800e5bc:	0018      	movs	r0, r3
 800e5be:	f000 fa05 	bl	800e9cc <prvCopyDataToQueue>
 800e5c2:	0003      	movs	r3, r0
 800e5c4:	61fb      	str	r3, [r7, #28]
 800e5c6:	6a3b      	ldr	r3, [r7, #32]
 800e5c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e5ca:	2b00      	cmp	r3, #0
 800e5cc:	d009      	beq.n	800e5e2 <xQueueGenericSend+0xb6>
 800e5ce:	6a3b      	ldr	r3, [r7, #32]
 800e5d0:	3324      	adds	r3, #36	; 0x24
 800e5d2:	0018      	movs	r0, r3
 800e5d4:	f001 f8cc 	bl	800f770 <xTaskRemoveFromEventList>
 800e5d8:	1e03      	subs	r3, r0, #0
 800e5da:	d007      	beq.n	800e5ec <xQueueGenericSend+0xc0>
 800e5dc:	f001 fed8 	bl	8010390 <vPortYield>
 800e5e0:	e004      	b.n	800e5ec <xQueueGenericSend+0xc0>
 800e5e2:	69fb      	ldr	r3, [r7, #28]
 800e5e4:	2b00      	cmp	r3, #0
 800e5e6:	d001      	beq.n	800e5ec <xQueueGenericSend+0xc0>
 800e5e8:	f001 fed2 	bl	8010390 <vPortYield>
 800e5ec:	f001 fef2 	bl	80103d4 <vPortExitCritical>
 800e5f0:	2301      	movs	r3, #1
 800e5f2:	e05b      	b.n	800e6ac <xQueueGenericSend+0x180>
 800e5f4:	687b      	ldr	r3, [r7, #4]
 800e5f6:	2b00      	cmp	r3, #0
 800e5f8:	d103      	bne.n	800e602 <xQueueGenericSend+0xd6>
 800e5fa:	f001 feeb 	bl	80103d4 <vPortExitCritical>
 800e5fe:	2300      	movs	r3, #0
 800e600:	e054      	b.n	800e6ac <xQueueGenericSend+0x180>
 800e602:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e604:	2b00      	cmp	r3, #0
 800e606:	d106      	bne.n	800e616 <xQueueGenericSend+0xea>
 800e608:	2314      	movs	r3, #20
 800e60a:	18fb      	adds	r3, r7, r3
 800e60c:	0018      	movs	r0, r3
 800e60e:	f001 f90b 	bl	800f828 <vTaskInternalSetTimeOutState>
 800e612:	2301      	movs	r3, #1
 800e614:	627b      	str	r3, [r7, #36]	; 0x24
 800e616:	f001 fedd 	bl	80103d4 <vPortExitCritical>
 800e61a:	f000 feb5 	bl	800f388 <vTaskSuspendAll>
 800e61e:	f001 fec7 	bl	80103b0 <vPortEnterCritical>
 800e622:	6a3b      	ldr	r3, [r7, #32]
 800e624:	2244      	movs	r2, #68	; 0x44
 800e626:	5c9b      	ldrb	r3, [r3, r2]
 800e628:	b25b      	sxtb	r3, r3
 800e62a:	3301      	adds	r3, #1
 800e62c:	d103      	bne.n	800e636 <xQueueGenericSend+0x10a>
 800e62e:	6a3b      	ldr	r3, [r7, #32]
 800e630:	2244      	movs	r2, #68	; 0x44
 800e632:	2100      	movs	r1, #0
 800e634:	5499      	strb	r1, [r3, r2]
 800e636:	6a3b      	ldr	r3, [r7, #32]
 800e638:	2245      	movs	r2, #69	; 0x45
 800e63a:	5c9b      	ldrb	r3, [r3, r2]
 800e63c:	b25b      	sxtb	r3, r3
 800e63e:	3301      	adds	r3, #1
 800e640:	d103      	bne.n	800e64a <xQueueGenericSend+0x11e>
 800e642:	6a3b      	ldr	r3, [r7, #32]
 800e644:	2245      	movs	r2, #69	; 0x45
 800e646:	2100      	movs	r1, #0
 800e648:	5499      	strb	r1, [r3, r2]
 800e64a:	f001 fec3 	bl	80103d4 <vPortExitCritical>
 800e64e:	1d3a      	adds	r2, r7, #4
 800e650:	2314      	movs	r3, #20
 800e652:	18fb      	adds	r3, r7, r3
 800e654:	0011      	movs	r1, r2
 800e656:	0018      	movs	r0, r3
 800e658:	f001 f8fa 	bl	800f850 <xTaskCheckForTimeOut>
 800e65c:	1e03      	subs	r3, r0, #0
 800e65e:	d11e      	bne.n	800e69e <xQueueGenericSend+0x172>
 800e660:	6a3b      	ldr	r3, [r7, #32]
 800e662:	0018      	movs	r0, r3
 800e664:	f000 fab7 	bl	800ebd6 <prvIsQueueFull>
 800e668:	1e03      	subs	r3, r0, #0
 800e66a:	d011      	beq.n	800e690 <xQueueGenericSend+0x164>
 800e66c:	6a3b      	ldr	r3, [r7, #32]
 800e66e:	3310      	adds	r3, #16
 800e670:	687a      	ldr	r2, [r7, #4]
 800e672:	0011      	movs	r1, r2
 800e674:	0018      	movs	r0, r3
 800e676:	f001 f837 	bl	800f6e8 <vTaskPlaceOnEventList>
 800e67a:	6a3b      	ldr	r3, [r7, #32]
 800e67c:	0018      	movs	r0, r3
 800e67e:	f000 fa36 	bl	800eaee <prvUnlockQueue>
 800e682:	f000 fe8d 	bl	800f3a0 <xTaskResumeAll>
 800e686:	1e03      	subs	r3, r0, #0
 800e688:	d18a      	bne.n	800e5a0 <xQueueGenericSend+0x74>
 800e68a:	f001 fe81 	bl	8010390 <vPortYield>
 800e68e:	e787      	b.n	800e5a0 <xQueueGenericSend+0x74>
 800e690:	6a3b      	ldr	r3, [r7, #32]
 800e692:	0018      	movs	r0, r3
 800e694:	f000 fa2b 	bl	800eaee <prvUnlockQueue>
 800e698:	f000 fe82 	bl	800f3a0 <xTaskResumeAll>
 800e69c:	e780      	b.n	800e5a0 <xQueueGenericSend+0x74>
 800e69e:	6a3b      	ldr	r3, [r7, #32]
 800e6a0:	0018      	movs	r0, r3
 800e6a2:	f000 fa24 	bl	800eaee <prvUnlockQueue>
 800e6a6:	f000 fe7b 	bl	800f3a0 <xTaskResumeAll>
 800e6aa:	2300      	movs	r3, #0
 800e6ac:	0018      	movs	r0, r3
 800e6ae:	46bd      	mov	sp, r7
 800e6b0:	b00a      	add	sp, #40	; 0x28
 800e6b2:	bd80      	pop	{r7, pc}

0800e6b4 <xQueueGenericSendFromISR>:
 800e6b4:	b590      	push	{r4, r7, lr}
 800e6b6:	b08b      	sub	sp, #44	; 0x2c
 800e6b8:	af00      	add	r7, sp, #0
 800e6ba:	60f8      	str	r0, [r7, #12]
 800e6bc:	60b9      	str	r1, [r7, #8]
 800e6be:	607a      	str	r2, [r7, #4]
 800e6c0:	603b      	str	r3, [r7, #0]
 800e6c2:	68fb      	ldr	r3, [r7, #12]
 800e6c4:	623b      	str	r3, [r7, #32]
 800e6c6:	6a3b      	ldr	r3, [r7, #32]
 800e6c8:	2b00      	cmp	r3, #0
 800e6ca:	d101      	bne.n	800e6d0 <xQueueGenericSendFromISR+0x1c>
 800e6cc:	b672      	cpsid	i
 800e6ce:	e7fe      	b.n	800e6ce <xQueueGenericSendFromISR+0x1a>
 800e6d0:	68bb      	ldr	r3, [r7, #8]
 800e6d2:	2b00      	cmp	r3, #0
 800e6d4:	d103      	bne.n	800e6de <xQueueGenericSendFromISR+0x2a>
 800e6d6:	6a3b      	ldr	r3, [r7, #32]
 800e6d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e6da:	2b00      	cmp	r3, #0
 800e6dc:	d101      	bne.n	800e6e2 <xQueueGenericSendFromISR+0x2e>
 800e6de:	2301      	movs	r3, #1
 800e6e0:	e000      	b.n	800e6e4 <xQueueGenericSendFromISR+0x30>
 800e6e2:	2300      	movs	r3, #0
 800e6e4:	2b00      	cmp	r3, #0
 800e6e6:	d101      	bne.n	800e6ec <xQueueGenericSendFromISR+0x38>
 800e6e8:	b672      	cpsid	i
 800e6ea:	e7fe      	b.n	800e6ea <xQueueGenericSendFromISR+0x36>
 800e6ec:	683b      	ldr	r3, [r7, #0]
 800e6ee:	2b02      	cmp	r3, #2
 800e6f0:	d103      	bne.n	800e6fa <xQueueGenericSendFromISR+0x46>
 800e6f2:	6a3b      	ldr	r3, [r7, #32]
 800e6f4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e6f6:	2b01      	cmp	r3, #1
 800e6f8:	d101      	bne.n	800e6fe <xQueueGenericSendFromISR+0x4a>
 800e6fa:	2301      	movs	r3, #1
 800e6fc:	e000      	b.n	800e700 <xQueueGenericSendFromISR+0x4c>
 800e6fe:	2300      	movs	r3, #0
 800e700:	2b00      	cmp	r3, #0
 800e702:	d101      	bne.n	800e708 <xQueueGenericSendFromISR+0x54>
 800e704:	b672      	cpsid	i
 800e706:	e7fe      	b.n	800e706 <xQueueGenericSendFromISR+0x52>
 800e708:	f001 fe7c 	bl	8010404 <ulSetInterruptMaskFromISR>
 800e70c:	0003      	movs	r3, r0
 800e70e:	61fb      	str	r3, [r7, #28]
 800e710:	6a3b      	ldr	r3, [r7, #32]
 800e712:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800e714:	6a3b      	ldr	r3, [r7, #32]
 800e716:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e718:	429a      	cmp	r2, r3
 800e71a:	d302      	bcc.n	800e722 <xQueueGenericSendFromISR+0x6e>
 800e71c:	683b      	ldr	r3, [r7, #0]
 800e71e:	2b02      	cmp	r3, #2
 800e720:	d131      	bne.n	800e786 <xQueueGenericSendFromISR+0xd2>
 800e722:	241b      	movs	r4, #27
 800e724:	193b      	adds	r3, r7, r4
 800e726:	6a3a      	ldr	r2, [r7, #32]
 800e728:	2145      	movs	r1, #69	; 0x45
 800e72a:	5c52      	ldrb	r2, [r2, r1]
 800e72c:	701a      	strb	r2, [r3, #0]
 800e72e:	6a3b      	ldr	r3, [r7, #32]
 800e730:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e732:	617b      	str	r3, [r7, #20]
 800e734:	683a      	ldr	r2, [r7, #0]
 800e736:	68b9      	ldr	r1, [r7, #8]
 800e738:	6a3b      	ldr	r3, [r7, #32]
 800e73a:	0018      	movs	r0, r3
 800e73c:	f000 f946 	bl	800e9cc <prvCopyDataToQueue>
 800e740:	193b      	adds	r3, r7, r4
 800e742:	781b      	ldrb	r3, [r3, #0]
 800e744:	b25b      	sxtb	r3, r3
 800e746:	3301      	adds	r3, #1
 800e748:	d111      	bne.n	800e76e <xQueueGenericSendFromISR+0xba>
 800e74a:	6a3b      	ldr	r3, [r7, #32]
 800e74c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e74e:	2b00      	cmp	r3, #0
 800e750:	d016      	beq.n	800e780 <xQueueGenericSendFromISR+0xcc>
 800e752:	6a3b      	ldr	r3, [r7, #32]
 800e754:	3324      	adds	r3, #36	; 0x24
 800e756:	0018      	movs	r0, r3
 800e758:	f001 f80a 	bl	800f770 <xTaskRemoveFromEventList>
 800e75c:	1e03      	subs	r3, r0, #0
 800e75e:	d00f      	beq.n	800e780 <xQueueGenericSendFromISR+0xcc>
 800e760:	687b      	ldr	r3, [r7, #4]
 800e762:	2b00      	cmp	r3, #0
 800e764:	d00c      	beq.n	800e780 <xQueueGenericSendFromISR+0xcc>
 800e766:	687b      	ldr	r3, [r7, #4]
 800e768:	2201      	movs	r2, #1
 800e76a:	601a      	str	r2, [r3, #0]
 800e76c:	e008      	b.n	800e780 <xQueueGenericSendFromISR+0xcc>
 800e76e:	231b      	movs	r3, #27
 800e770:	18fb      	adds	r3, r7, r3
 800e772:	781b      	ldrb	r3, [r3, #0]
 800e774:	3301      	adds	r3, #1
 800e776:	b2db      	uxtb	r3, r3
 800e778:	b259      	sxtb	r1, r3
 800e77a:	6a3b      	ldr	r3, [r7, #32]
 800e77c:	2245      	movs	r2, #69	; 0x45
 800e77e:	5499      	strb	r1, [r3, r2]
 800e780:	2301      	movs	r3, #1
 800e782:	627b      	str	r3, [r7, #36]	; 0x24
 800e784:	e001      	b.n	800e78a <xQueueGenericSendFromISR+0xd6>
 800e786:	2300      	movs	r3, #0
 800e788:	627b      	str	r3, [r7, #36]	; 0x24
 800e78a:	69fb      	ldr	r3, [r7, #28]
 800e78c:	0018      	movs	r0, r3
 800e78e:	f001 fe3f 	bl	8010410 <vClearInterruptMaskFromISR>
 800e792:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e794:	0018      	movs	r0, r3
 800e796:	46bd      	mov	sp, r7
 800e798:	b00b      	add	sp, #44	; 0x2c
 800e79a:	bd90      	pop	{r4, r7, pc}

0800e79c <xQueueReceive>:
 800e79c:	b580      	push	{r7, lr}
 800e79e:	b08a      	sub	sp, #40	; 0x28
 800e7a0:	af00      	add	r7, sp, #0
 800e7a2:	60f8      	str	r0, [r7, #12]
 800e7a4:	60b9      	str	r1, [r7, #8]
 800e7a6:	607a      	str	r2, [r7, #4]
 800e7a8:	2300      	movs	r3, #0
 800e7aa:	627b      	str	r3, [r7, #36]	; 0x24
 800e7ac:	68fb      	ldr	r3, [r7, #12]
 800e7ae:	623b      	str	r3, [r7, #32]
 800e7b0:	6a3b      	ldr	r3, [r7, #32]
 800e7b2:	2b00      	cmp	r3, #0
 800e7b4:	d101      	bne.n	800e7ba <xQueueReceive+0x1e>
 800e7b6:	b672      	cpsid	i
 800e7b8:	e7fe      	b.n	800e7b8 <xQueueReceive+0x1c>
 800e7ba:	68bb      	ldr	r3, [r7, #8]
 800e7bc:	2b00      	cmp	r3, #0
 800e7be:	d103      	bne.n	800e7c8 <xQueueReceive+0x2c>
 800e7c0:	6a3b      	ldr	r3, [r7, #32]
 800e7c2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e7c4:	2b00      	cmp	r3, #0
 800e7c6:	d101      	bne.n	800e7cc <xQueueReceive+0x30>
 800e7c8:	2301      	movs	r3, #1
 800e7ca:	e000      	b.n	800e7ce <xQueueReceive+0x32>
 800e7cc:	2300      	movs	r3, #0
 800e7ce:	2b00      	cmp	r3, #0
 800e7d0:	d101      	bne.n	800e7d6 <xQueueReceive+0x3a>
 800e7d2:	b672      	cpsid	i
 800e7d4:	e7fe      	b.n	800e7d4 <xQueueReceive+0x38>
 800e7d6:	f001 f971 	bl	800fabc <xTaskGetSchedulerState>
 800e7da:	1e03      	subs	r3, r0, #0
 800e7dc:	d102      	bne.n	800e7e4 <xQueueReceive+0x48>
 800e7de:	687b      	ldr	r3, [r7, #4]
 800e7e0:	2b00      	cmp	r3, #0
 800e7e2:	d101      	bne.n	800e7e8 <xQueueReceive+0x4c>
 800e7e4:	2301      	movs	r3, #1
 800e7e6:	e000      	b.n	800e7ea <xQueueReceive+0x4e>
 800e7e8:	2300      	movs	r3, #0
 800e7ea:	2b00      	cmp	r3, #0
 800e7ec:	d101      	bne.n	800e7f2 <xQueueReceive+0x56>
 800e7ee:	b672      	cpsid	i
 800e7f0:	e7fe      	b.n	800e7f0 <xQueueReceive+0x54>
 800e7f2:	f001 fddd 	bl	80103b0 <vPortEnterCritical>
 800e7f6:	6a3b      	ldr	r3, [r7, #32]
 800e7f8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e7fa:	61fb      	str	r3, [r7, #28]
 800e7fc:	69fb      	ldr	r3, [r7, #28]
 800e7fe:	2b00      	cmp	r3, #0
 800e800:	d01a      	beq.n	800e838 <xQueueReceive+0x9c>
 800e802:	68ba      	ldr	r2, [r7, #8]
 800e804:	6a3b      	ldr	r3, [r7, #32]
 800e806:	0011      	movs	r1, r2
 800e808:	0018      	movs	r0, r3
 800e80a:	f000 f94a 	bl	800eaa2 <prvCopyDataFromQueue>
 800e80e:	69fb      	ldr	r3, [r7, #28]
 800e810:	1e5a      	subs	r2, r3, #1
 800e812:	6a3b      	ldr	r3, [r7, #32]
 800e814:	639a      	str	r2, [r3, #56]	; 0x38
 800e816:	6a3b      	ldr	r3, [r7, #32]
 800e818:	691b      	ldr	r3, [r3, #16]
 800e81a:	2b00      	cmp	r3, #0
 800e81c:	d008      	beq.n	800e830 <xQueueReceive+0x94>
 800e81e:	6a3b      	ldr	r3, [r7, #32]
 800e820:	3310      	adds	r3, #16
 800e822:	0018      	movs	r0, r3
 800e824:	f000 ffa4 	bl	800f770 <xTaskRemoveFromEventList>
 800e828:	1e03      	subs	r3, r0, #0
 800e82a:	d001      	beq.n	800e830 <xQueueReceive+0x94>
 800e82c:	f001 fdb0 	bl	8010390 <vPortYield>
 800e830:	f001 fdd0 	bl	80103d4 <vPortExitCritical>
 800e834:	2301      	movs	r3, #1
 800e836:	e062      	b.n	800e8fe <xQueueReceive+0x162>
 800e838:	687b      	ldr	r3, [r7, #4]
 800e83a:	2b00      	cmp	r3, #0
 800e83c:	d103      	bne.n	800e846 <xQueueReceive+0xaa>
 800e83e:	f001 fdc9 	bl	80103d4 <vPortExitCritical>
 800e842:	2300      	movs	r3, #0
 800e844:	e05b      	b.n	800e8fe <xQueueReceive+0x162>
 800e846:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e848:	2b00      	cmp	r3, #0
 800e84a:	d106      	bne.n	800e85a <xQueueReceive+0xbe>
 800e84c:	2314      	movs	r3, #20
 800e84e:	18fb      	adds	r3, r7, r3
 800e850:	0018      	movs	r0, r3
 800e852:	f000 ffe9 	bl	800f828 <vTaskInternalSetTimeOutState>
 800e856:	2301      	movs	r3, #1
 800e858:	627b      	str	r3, [r7, #36]	; 0x24
 800e85a:	f001 fdbb 	bl	80103d4 <vPortExitCritical>
 800e85e:	f000 fd93 	bl	800f388 <vTaskSuspendAll>
 800e862:	f001 fda5 	bl	80103b0 <vPortEnterCritical>
 800e866:	6a3b      	ldr	r3, [r7, #32]
 800e868:	2244      	movs	r2, #68	; 0x44
 800e86a:	5c9b      	ldrb	r3, [r3, r2]
 800e86c:	b25b      	sxtb	r3, r3
 800e86e:	3301      	adds	r3, #1
 800e870:	d103      	bne.n	800e87a <xQueueReceive+0xde>
 800e872:	6a3b      	ldr	r3, [r7, #32]
 800e874:	2244      	movs	r2, #68	; 0x44
 800e876:	2100      	movs	r1, #0
 800e878:	5499      	strb	r1, [r3, r2]
 800e87a:	6a3b      	ldr	r3, [r7, #32]
 800e87c:	2245      	movs	r2, #69	; 0x45
 800e87e:	5c9b      	ldrb	r3, [r3, r2]
 800e880:	b25b      	sxtb	r3, r3
 800e882:	3301      	adds	r3, #1
 800e884:	d103      	bne.n	800e88e <xQueueReceive+0xf2>
 800e886:	6a3b      	ldr	r3, [r7, #32]
 800e888:	2245      	movs	r2, #69	; 0x45
 800e88a:	2100      	movs	r1, #0
 800e88c:	5499      	strb	r1, [r3, r2]
 800e88e:	f001 fda1 	bl	80103d4 <vPortExitCritical>
 800e892:	1d3a      	adds	r2, r7, #4
 800e894:	2314      	movs	r3, #20
 800e896:	18fb      	adds	r3, r7, r3
 800e898:	0011      	movs	r1, r2
 800e89a:	0018      	movs	r0, r3
 800e89c:	f000 ffd8 	bl	800f850 <xTaskCheckForTimeOut>
 800e8a0:	1e03      	subs	r3, r0, #0
 800e8a2:	d11e      	bne.n	800e8e2 <xQueueReceive+0x146>
 800e8a4:	6a3b      	ldr	r3, [r7, #32]
 800e8a6:	0018      	movs	r0, r3
 800e8a8:	f000 f97f 	bl	800ebaa <prvIsQueueEmpty>
 800e8ac:	1e03      	subs	r3, r0, #0
 800e8ae:	d011      	beq.n	800e8d4 <xQueueReceive+0x138>
 800e8b0:	6a3b      	ldr	r3, [r7, #32]
 800e8b2:	3324      	adds	r3, #36	; 0x24
 800e8b4:	687a      	ldr	r2, [r7, #4]
 800e8b6:	0011      	movs	r1, r2
 800e8b8:	0018      	movs	r0, r3
 800e8ba:	f000 ff15 	bl	800f6e8 <vTaskPlaceOnEventList>
 800e8be:	6a3b      	ldr	r3, [r7, #32]
 800e8c0:	0018      	movs	r0, r3
 800e8c2:	f000 f914 	bl	800eaee <prvUnlockQueue>
 800e8c6:	f000 fd6b 	bl	800f3a0 <xTaskResumeAll>
 800e8ca:	1e03      	subs	r3, r0, #0
 800e8cc:	d191      	bne.n	800e7f2 <xQueueReceive+0x56>
 800e8ce:	f001 fd5f 	bl	8010390 <vPortYield>
 800e8d2:	e78e      	b.n	800e7f2 <xQueueReceive+0x56>
 800e8d4:	6a3b      	ldr	r3, [r7, #32]
 800e8d6:	0018      	movs	r0, r3
 800e8d8:	f000 f909 	bl	800eaee <prvUnlockQueue>
 800e8dc:	f000 fd60 	bl	800f3a0 <xTaskResumeAll>
 800e8e0:	e787      	b.n	800e7f2 <xQueueReceive+0x56>
 800e8e2:	6a3b      	ldr	r3, [r7, #32]
 800e8e4:	0018      	movs	r0, r3
 800e8e6:	f000 f902 	bl	800eaee <prvUnlockQueue>
 800e8ea:	f000 fd59 	bl	800f3a0 <xTaskResumeAll>
 800e8ee:	6a3b      	ldr	r3, [r7, #32]
 800e8f0:	0018      	movs	r0, r3
 800e8f2:	f000 f95a 	bl	800ebaa <prvIsQueueEmpty>
 800e8f6:	1e03      	subs	r3, r0, #0
 800e8f8:	d100      	bne.n	800e8fc <xQueueReceive+0x160>
 800e8fa:	e77a      	b.n	800e7f2 <xQueueReceive+0x56>
 800e8fc:	2300      	movs	r3, #0
 800e8fe:	0018      	movs	r0, r3
 800e900:	46bd      	mov	sp, r7
 800e902:	b00a      	add	sp, #40	; 0x28
 800e904:	bd80      	pop	{r7, pc}

0800e906 <xQueueReceiveFromISR>:
 800e906:	b590      	push	{r4, r7, lr}
 800e908:	b08b      	sub	sp, #44	; 0x2c
 800e90a:	af00      	add	r7, sp, #0
 800e90c:	60f8      	str	r0, [r7, #12]
 800e90e:	60b9      	str	r1, [r7, #8]
 800e910:	607a      	str	r2, [r7, #4]
 800e912:	68fb      	ldr	r3, [r7, #12]
 800e914:	623b      	str	r3, [r7, #32]
 800e916:	6a3b      	ldr	r3, [r7, #32]
 800e918:	2b00      	cmp	r3, #0
 800e91a:	d101      	bne.n	800e920 <xQueueReceiveFromISR+0x1a>
 800e91c:	b672      	cpsid	i
 800e91e:	e7fe      	b.n	800e91e <xQueueReceiveFromISR+0x18>
 800e920:	68bb      	ldr	r3, [r7, #8]
 800e922:	2b00      	cmp	r3, #0
 800e924:	d103      	bne.n	800e92e <xQueueReceiveFromISR+0x28>
 800e926:	6a3b      	ldr	r3, [r7, #32]
 800e928:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e92a:	2b00      	cmp	r3, #0
 800e92c:	d101      	bne.n	800e932 <xQueueReceiveFromISR+0x2c>
 800e92e:	2301      	movs	r3, #1
 800e930:	e000      	b.n	800e934 <xQueueReceiveFromISR+0x2e>
 800e932:	2300      	movs	r3, #0
 800e934:	2b00      	cmp	r3, #0
 800e936:	d101      	bne.n	800e93c <xQueueReceiveFromISR+0x36>
 800e938:	b672      	cpsid	i
 800e93a:	e7fe      	b.n	800e93a <xQueueReceiveFromISR+0x34>
 800e93c:	f001 fd62 	bl	8010404 <ulSetInterruptMaskFromISR>
 800e940:	0003      	movs	r3, r0
 800e942:	61fb      	str	r3, [r7, #28]
 800e944:	6a3b      	ldr	r3, [r7, #32]
 800e946:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e948:	61bb      	str	r3, [r7, #24]
 800e94a:	69bb      	ldr	r3, [r7, #24]
 800e94c:	2b00      	cmp	r3, #0
 800e94e:	d032      	beq.n	800e9b6 <xQueueReceiveFromISR+0xb0>
 800e950:	2417      	movs	r4, #23
 800e952:	193b      	adds	r3, r7, r4
 800e954:	6a3a      	ldr	r2, [r7, #32]
 800e956:	2144      	movs	r1, #68	; 0x44
 800e958:	5c52      	ldrb	r2, [r2, r1]
 800e95a:	701a      	strb	r2, [r3, #0]
 800e95c:	68ba      	ldr	r2, [r7, #8]
 800e95e:	6a3b      	ldr	r3, [r7, #32]
 800e960:	0011      	movs	r1, r2
 800e962:	0018      	movs	r0, r3
 800e964:	f000 f89d 	bl	800eaa2 <prvCopyDataFromQueue>
 800e968:	69bb      	ldr	r3, [r7, #24]
 800e96a:	1e5a      	subs	r2, r3, #1
 800e96c:	6a3b      	ldr	r3, [r7, #32]
 800e96e:	639a      	str	r2, [r3, #56]	; 0x38
 800e970:	193b      	adds	r3, r7, r4
 800e972:	781b      	ldrb	r3, [r3, #0]
 800e974:	b25b      	sxtb	r3, r3
 800e976:	3301      	adds	r3, #1
 800e978:	d111      	bne.n	800e99e <xQueueReceiveFromISR+0x98>
 800e97a:	6a3b      	ldr	r3, [r7, #32]
 800e97c:	691b      	ldr	r3, [r3, #16]
 800e97e:	2b00      	cmp	r3, #0
 800e980:	d016      	beq.n	800e9b0 <xQueueReceiveFromISR+0xaa>
 800e982:	6a3b      	ldr	r3, [r7, #32]
 800e984:	3310      	adds	r3, #16
 800e986:	0018      	movs	r0, r3
 800e988:	f000 fef2 	bl	800f770 <xTaskRemoveFromEventList>
 800e98c:	1e03      	subs	r3, r0, #0
 800e98e:	d00f      	beq.n	800e9b0 <xQueueReceiveFromISR+0xaa>
 800e990:	687b      	ldr	r3, [r7, #4]
 800e992:	2b00      	cmp	r3, #0
 800e994:	d00c      	beq.n	800e9b0 <xQueueReceiveFromISR+0xaa>
 800e996:	687b      	ldr	r3, [r7, #4]
 800e998:	2201      	movs	r2, #1
 800e99a:	601a      	str	r2, [r3, #0]
 800e99c:	e008      	b.n	800e9b0 <xQueueReceiveFromISR+0xaa>
 800e99e:	2317      	movs	r3, #23
 800e9a0:	18fb      	adds	r3, r7, r3
 800e9a2:	781b      	ldrb	r3, [r3, #0]
 800e9a4:	3301      	adds	r3, #1
 800e9a6:	b2db      	uxtb	r3, r3
 800e9a8:	b259      	sxtb	r1, r3
 800e9aa:	6a3b      	ldr	r3, [r7, #32]
 800e9ac:	2244      	movs	r2, #68	; 0x44
 800e9ae:	5499      	strb	r1, [r3, r2]
 800e9b0:	2301      	movs	r3, #1
 800e9b2:	627b      	str	r3, [r7, #36]	; 0x24
 800e9b4:	e001      	b.n	800e9ba <xQueueReceiveFromISR+0xb4>
 800e9b6:	2300      	movs	r3, #0
 800e9b8:	627b      	str	r3, [r7, #36]	; 0x24
 800e9ba:	69fb      	ldr	r3, [r7, #28]
 800e9bc:	0018      	movs	r0, r3
 800e9be:	f001 fd27 	bl	8010410 <vClearInterruptMaskFromISR>
 800e9c2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e9c4:	0018      	movs	r0, r3
 800e9c6:	46bd      	mov	sp, r7
 800e9c8:	b00b      	add	sp, #44	; 0x2c
 800e9ca:	bd90      	pop	{r4, r7, pc}

0800e9cc <prvCopyDataToQueue>:
 800e9cc:	b580      	push	{r7, lr}
 800e9ce:	b086      	sub	sp, #24
 800e9d0:	af00      	add	r7, sp, #0
 800e9d2:	60f8      	str	r0, [r7, #12]
 800e9d4:	60b9      	str	r1, [r7, #8]
 800e9d6:	607a      	str	r2, [r7, #4]
 800e9d8:	2300      	movs	r3, #0
 800e9da:	617b      	str	r3, [r7, #20]
 800e9dc:	68fb      	ldr	r3, [r7, #12]
 800e9de:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e9e0:	613b      	str	r3, [r7, #16]
 800e9e2:	68fb      	ldr	r3, [r7, #12]
 800e9e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e9e6:	2b00      	cmp	r3, #0
 800e9e8:	d10e      	bne.n	800ea08 <prvCopyDataToQueue+0x3c>
 800e9ea:	68fb      	ldr	r3, [r7, #12]
 800e9ec:	681b      	ldr	r3, [r3, #0]
 800e9ee:	2b00      	cmp	r3, #0
 800e9f0:	d14e      	bne.n	800ea90 <prvCopyDataToQueue+0xc4>
 800e9f2:	68fb      	ldr	r3, [r7, #12]
 800e9f4:	689b      	ldr	r3, [r3, #8]
 800e9f6:	0018      	movs	r0, r3
 800e9f8:	f001 f87c 	bl	800faf4 <xTaskPriorityDisinherit>
 800e9fc:	0003      	movs	r3, r0
 800e9fe:	617b      	str	r3, [r7, #20]
 800ea00:	68fb      	ldr	r3, [r7, #12]
 800ea02:	2200      	movs	r2, #0
 800ea04:	609a      	str	r2, [r3, #8]
 800ea06:	e043      	b.n	800ea90 <prvCopyDataToQueue+0xc4>
 800ea08:	687b      	ldr	r3, [r7, #4]
 800ea0a:	2b00      	cmp	r3, #0
 800ea0c:	d119      	bne.n	800ea42 <prvCopyDataToQueue+0x76>
 800ea0e:	68fb      	ldr	r3, [r7, #12]
 800ea10:	6858      	ldr	r0, [r3, #4]
 800ea12:	68fb      	ldr	r3, [r7, #12]
 800ea14:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800ea16:	68bb      	ldr	r3, [r7, #8]
 800ea18:	0019      	movs	r1, r3
 800ea1a:	f009 fc87 	bl	801832c <memcpy>
 800ea1e:	68fb      	ldr	r3, [r7, #12]
 800ea20:	685a      	ldr	r2, [r3, #4]
 800ea22:	68fb      	ldr	r3, [r7, #12]
 800ea24:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800ea26:	18d2      	adds	r2, r2, r3
 800ea28:	68fb      	ldr	r3, [r7, #12]
 800ea2a:	605a      	str	r2, [r3, #4]
 800ea2c:	68fb      	ldr	r3, [r7, #12]
 800ea2e:	685a      	ldr	r2, [r3, #4]
 800ea30:	68fb      	ldr	r3, [r7, #12]
 800ea32:	689b      	ldr	r3, [r3, #8]
 800ea34:	429a      	cmp	r2, r3
 800ea36:	d32b      	bcc.n	800ea90 <prvCopyDataToQueue+0xc4>
 800ea38:	68fb      	ldr	r3, [r7, #12]
 800ea3a:	681a      	ldr	r2, [r3, #0]
 800ea3c:	68fb      	ldr	r3, [r7, #12]
 800ea3e:	605a      	str	r2, [r3, #4]
 800ea40:	e026      	b.n	800ea90 <prvCopyDataToQueue+0xc4>
 800ea42:	68fb      	ldr	r3, [r7, #12]
 800ea44:	68d8      	ldr	r0, [r3, #12]
 800ea46:	68fb      	ldr	r3, [r7, #12]
 800ea48:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800ea4a:	68bb      	ldr	r3, [r7, #8]
 800ea4c:	0019      	movs	r1, r3
 800ea4e:	f009 fc6d 	bl	801832c <memcpy>
 800ea52:	68fb      	ldr	r3, [r7, #12]
 800ea54:	68da      	ldr	r2, [r3, #12]
 800ea56:	68fb      	ldr	r3, [r7, #12]
 800ea58:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800ea5a:	425b      	negs	r3, r3
 800ea5c:	18d2      	adds	r2, r2, r3
 800ea5e:	68fb      	ldr	r3, [r7, #12]
 800ea60:	60da      	str	r2, [r3, #12]
 800ea62:	68fb      	ldr	r3, [r7, #12]
 800ea64:	68da      	ldr	r2, [r3, #12]
 800ea66:	68fb      	ldr	r3, [r7, #12]
 800ea68:	681b      	ldr	r3, [r3, #0]
 800ea6a:	429a      	cmp	r2, r3
 800ea6c:	d207      	bcs.n	800ea7e <prvCopyDataToQueue+0xb2>
 800ea6e:	68fb      	ldr	r3, [r7, #12]
 800ea70:	689a      	ldr	r2, [r3, #8]
 800ea72:	68fb      	ldr	r3, [r7, #12]
 800ea74:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800ea76:	425b      	negs	r3, r3
 800ea78:	18d2      	adds	r2, r2, r3
 800ea7a:	68fb      	ldr	r3, [r7, #12]
 800ea7c:	60da      	str	r2, [r3, #12]
 800ea7e:	687b      	ldr	r3, [r7, #4]
 800ea80:	2b02      	cmp	r3, #2
 800ea82:	d105      	bne.n	800ea90 <prvCopyDataToQueue+0xc4>
 800ea84:	693b      	ldr	r3, [r7, #16]
 800ea86:	2b00      	cmp	r3, #0
 800ea88:	d002      	beq.n	800ea90 <prvCopyDataToQueue+0xc4>
 800ea8a:	693b      	ldr	r3, [r7, #16]
 800ea8c:	3b01      	subs	r3, #1
 800ea8e:	613b      	str	r3, [r7, #16]
 800ea90:	693b      	ldr	r3, [r7, #16]
 800ea92:	1c5a      	adds	r2, r3, #1
 800ea94:	68fb      	ldr	r3, [r7, #12]
 800ea96:	639a      	str	r2, [r3, #56]	; 0x38
 800ea98:	697b      	ldr	r3, [r7, #20]
 800ea9a:	0018      	movs	r0, r3
 800ea9c:	46bd      	mov	sp, r7
 800ea9e:	b006      	add	sp, #24
 800eaa0:	bd80      	pop	{r7, pc}

0800eaa2 <prvCopyDataFromQueue>:
 800eaa2:	b580      	push	{r7, lr}
 800eaa4:	b082      	sub	sp, #8
 800eaa6:	af00      	add	r7, sp, #0
 800eaa8:	6078      	str	r0, [r7, #4]
 800eaaa:	6039      	str	r1, [r7, #0]
 800eaac:	687b      	ldr	r3, [r7, #4]
 800eaae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800eab0:	2b00      	cmp	r3, #0
 800eab2:	d018      	beq.n	800eae6 <prvCopyDataFromQueue+0x44>
 800eab4:	687b      	ldr	r3, [r7, #4]
 800eab6:	68da      	ldr	r2, [r3, #12]
 800eab8:	687b      	ldr	r3, [r7, #4]
 800eaba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800eabc:	18d2      	adds	r2, r2, r3
 800eabe:	687b      	ldr	r3, [r7, #4]
 800eac0:	60da      	str	r2, [r3, #12]
 800eac2:	687b      	ldr	r3, [r7, #4]
 800eac4:	68da      	ldr	r2, [r3, #12]
 800eac6:	687b      	ldr	r3, [r7, #4]
 800eac8:	689b      	ldr	r3, [r3, #8]
 800eaca:	429a      	cmp	r2, r3
 800eacc:	d303      	bcc.n	800ead6 <prvCopyDataFromQueue+0x34>
 800eace:	687b      	ldr	r3, [r7, #4]
 800ead0:	681a      	ldr	r2, [r3, #0]
 800ead2:	687b      	ldr	r3, [r7, #4]
 800ead4:	60da      	str	r2, [r3, #12]
 800ead6:	687b      	ldr	r3, [r7, #4]
 800ead8:	68d9      	ldr	r1, [r3, #12]
 800eada:	687b      	ldr	r3, [r7, #4]
 800eadc:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800eade:	683b      	ldr	r3, [r7, #0]
 800eae0:	0018      	movs	r0, r3
 800eae2:	f009 fc23 	bl	801832c <memcpy>
 800eae6:	46c0      	nop			; (mov r8, r8)
 800eae8:	46bd      	mov	sp, r7
 800eaea:	b002      	add	sp, #8
 800eaec:	bd80      	pop	{r7, pc}

0800eaee <prvUnlockQueue>:
 800eaee:	b580      	push	{r7, lr}
 800eaf0:	b084      	sub	sp, #16
 800eaf2:	af00      	add	r7, sp, #0
 800eaf4:	6078      	str	r0, [r7, #4]
 800eaf6:	f001 fc5b 	bl	80103b0 <vPortEnterCritical>
 800eafa:	230f      	movs	r3, #15
 800eafc:	18fb      	adds	r3, r7, r3
 800eafe:	687a      	ldr	r2, [r7, #4]
 800eb00:	2145      	movs	r1, #69	; 0x45
 800eb02:	5c52      	ldrb	r2, [r2, r1]
 800eb04:	701a      	strb	r2, [r3, #0]
 800eb06:	e013      	b.n	800eb30 <prvUnlockQueue+0x42>
 800eb08:	687b      	ldr	r3, [r7, #4]
 800eb0a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800eb0c:	2b00      	cmp	r3, #0
 800eb0e:	d016      	beq.n	800eb3e <prvUnlockQueue+0x50>
 800eb10:	687b      	ldr	r3, [r7, #4]
 800eb12:	3324      	adds	r3, #36	; 0x24
 800eb14:	0018      	movs	r0, r3
 800eb16:	f000 fe2b 	bl	800f770 <xTaskRemoveFromEventList>
 800eb1a:	1e03      	subs	r3, r0, #0
 800eb1c:	d001      	beq.n	800eb22 <prvUnlockQueue+0x34>
 800eb1e:	f000 fee7 	bl	800f8f0 <vTaskMissedYield>
 800eb22:	210f      	movs	r1, #15
 800eb24:	187b      	adds	r3, r7, r1
 800eb26:	781b      	ldrb	r3, [r3, #0]
 800eb28:	3b01      	subs	r3, #1
 800eb2a:	b2da      	uxtb	r2, r3
 800eb2c:	187b      	adds	r3, r7, r1
 800eb2e:	701a      	strb	r2, [r3, #0]
 800eb30:	230f      	movs	r3, #15
 800eb32:	18fb      	adds	r3, r7, r3
 800eb34:	781b      	ldrb	r3, [r3, #0]
 800eb36:	b25b      	sxtb	r3, r3
 800eb38:	2b00      	cmp	r3, #0
 800eb3a:	dce5      	bgt.n	800eb08 <prvUnlockQueue+0x1a>
 800eb3c:	e000      	b.n	800eb40 <prvUnlockQueue+0x52>
 800eb3e:	46c0      	nop			; (mov r8, r8)
 800eb40:	687b      	ldr	r3, [r7, #4]
 800eb42:	2245      	movs	r2, #69	; 0x45
 800eb44:	21ff      	movs	r1, #255	; 0xff
 800eb46:	5499      	strb	r1, [r3, r2]
 800eb48:	f001 fc44 	bl	80103d4 <vPortExitCritical>
 800eb4c:	f001 fc30 	bl	80103b0 <vPortEnterCritical>
 800eb50:	230e      	movs	r3, #14
 800eb52:	18fb      	adds	r3, r7, r3
 800eb54:	687a      	ldr	r2, [r7, #4]
 800eb56:	2144      	movs	r1, #68	; 0x44
 800eb58:	5c52      	ldrb	r2, [r2, r1]
 800eb5a:	701a      	strb	r2, [r3, #0]
 800eb5c:	e013      	b.n	800eb86 <prvUnlockQueue+0x98>
 800eb5e:	687b      	ldr	r3, [r7, #4]
 800eb60:	691b      	ldr	r3, [r3, #16]
 800eb62:	2b00      	cmp	r3, #0
 800eb64:	d016      	beq.n	800eb94 <prvUnlockQueue+0xa6>
 800eb66:	687b      	ldr	r3, [r7, #4]
 800eb68:	3310      	adds	r3, #16
 800eb6a:	0018      	movs	r0, r3
 800eb6c:	f000 fe00 	bl	800f770 <xTaskRemoveFromEventList>
 800eb70:	1e03      	subs	r3, r0, #0
 800eb72:	d001      	beq.n	800eb78 <prvUnlockQueue+0x8a>
 800eb74:	f000 febc 	bl	800f8f0 <vTaskMissedYield>
 800eb78:	210e      	movs	r1, #14
 800eb7a:	187b      	adds	r3, r7, r1
 800eb7c:	781b      	ldrb	r3, [r3, #0]
 800eb7e:	3b01      	subs	r3, #1
 800eb80:	b2da      	uxtb	r2, r3
 800eb82:	187b      	adds	r3, r7, r1
 800eb84:	701a      	strb	r2, [r3, #0]
 800eb86:	230e      	movs	r3, #14
 800eb88:	18fb      	adds	r3, r7, r3
 800eb8a:	781b      	ldrb	r3, [r3, #0]
 800eb8c:	b25b      	sxtb	r3, r3
 800eb8e:	2b00      	cmp	r3, #0
 800eb90:	dce5      	bgt.n	800eb5e <prvUnlockQueue+0x70>
 800eb92:	e000      	b.n	800eb96 <prvUnlockQueue+0xa8>
 800eb94:	46c0      	nop			; (mov r8, r8)
 800eb96:	687b      	ldr	r3, [r7, #4]
 800eb98:	2244      	movs	r2, #68	; 0x44
 800eb9a:	21ff      	movs	r1, #255	; 0xff
 800eb9c:	5499      	strb	r1, [r3, r2]
 800eb9e:	f001 fc19 	bl	80103d4 <vPortExitCritical>
 800eba2:	46c0      	nop			; (mov r8, r8)
 800eba4:	46bd      	mov	sp, r7
 800eba6:	b004      	add	sp, #16
 800eba8:	bd80      	pop	{r7, pc}

0800ebaa <prvIsQueueEmpty>:
 800ebaa:	b580      	push	{r7, lr}
 800ebac:	b084      	sub	sp, #16
 800ebae:	af00      	add	r7, sp, #0
 800ebb0:	6078      	str	r0, [r7, #4]
 800ebb2:	f001 fbfd 	bl	80103b0 <vPortEnterCritical>
 800ebb6:	687b      	ldr	r3, [r7, #4]
 800ebb8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ebba:	2b00      	cmp	r3, #0
 800ebbc:	d102      	bne.n	800ebc4 <prvIsQueueEmpty+0x1a>
 800ebbe:	2301      	movs	r3, #1
 800ebc0:	60fb      	str	r3, [r7, #12]
 800ebc2:	e001      	b.n	800ebc8 <prvIsQueueEmpty+0x1e>
 800ebc4:	2300      	movs	r3, #0
 800ebc6:	60fb      	str	r3, [r7, #12]
 800ebc8:	f001 fc04 	bl	80103d4 <vPortExitCritical>
 800ebcc:	68fb      	ldr	r3, [r7, #12]
 800ebce:	0018      	movs	r0, r3
 800ebd0:	46bd      	mov	sp, r7
 800ebd2:	b004      	add	sp, #16
 800ebd4:	bd80      	pop	{r7, pc}

0800ebd6 <prvIsQueueFull>:
 800ebd6:	b580      	push	{r7, lr}
 800ebd8:	b084      	sub	sp, #16
 800ebda:	af00      	add	r7, sp, #0
 800ebdc:	6078      	str	r0, [r7, #4]
 800ebde:	f001 fbe7 	bl	80103b0 <vPortEnterCritical>
 800ebe2:	687b      	ldr	r3, [r7, #4]
 800ebe4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800ebe6:	687b      	ldr	r3, [r7, #4]
 800ebe8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ebea:	429a      	cmp	r2, r3
 800ebec:	d102      	bne.n	800ebf4 <prvIsQueueFull+0x1e>
 800ebee:	2301      	movs	r3, #1
 800ebf0:	60fb      	str	r3, [r7, #12]
 800ebf2:	e001      	b.n	800ebf8 <prvIsQueueFull+0x22>
 800ebf4:	2300      	movs	r3, #0
 800ebf6:	60fb      	str	r3, [r7, #12]
 800ebf8:	f001 fbec 	bl	80103d4 <vPortExitCritical>
 800ebfc:	68fb      	ldr	r3, [r7, #12]
 800ebfe:	0018      	movs	r0, r3
 800ec00:	46bd      	mov	sp, r7
 800ec02:	b004      	add	sp, #16
 800ec04:	bd80      	pop	{r7, pc}
	...

0800ec08 <vQueueAddToRegistry>:
 800ec08:	b580      	push	{r7, lr}
 800ec0a:	b084      	sub	sp, #16
 800ec0c:	af00      	add	r7, sp, #0
 800ec0e:	6078      	str	r0, [r7, #4]
 800ec10:	6039      	str	r1, [r7, #0]
 800ec12:	2300      	movs	r3, #0
 800ec14:	60fb      	str	r3, [r7, #12]
 800ec16:	e015      	b.n	800ec44 <vQueueAddToRegistry+0x3c>
 800ec18:	4b0e      	ldr	r3, [pc, #56]	; (800ec54 <vQueueAddToRegistry+0x4c>)
 800ec1a:	68fa      	ldr	r2, [r7, #12]
 800ec1c:	00d2      	lsls	r2, r2, #3
 800ec1e:	58d3      	ldr	r3, [r2, r3]
 800ec20:	2b00      	cmp	r3, #0
 800ec22:	d10c      	bne.n	800ec3e <vQueueAddToRegistry+0x36>
 800ec24:	4b0b      	ldr	r3, [pc, #44]	; (800ec54 <vQueueAddToRegistry+0x4c>)
 800ec26:	68fa      	ldr	r2, [r7, #12]
 800ec28:	00d2      	lsls	r2, r2, #3
 800ec2a:	6839      	ldr	r1, [r7, #0]
 800ec2c:	50d1      	str	r1, [r2, r3]
 800ec2e:	4a09      	ldr	r2, [pc, #36]	; (800ec54 <vQueueAddToRegistry+0x4c>)
 800ec30:	68fb      	ldr	r3, [r7, #12]
 800ec32:	00db      	lsls	r3, r3, #3
 800ec34:	18d3      	adds	r3, r2, r3
 800ec36:	3304      	adds	r3, #4
 800ec38:	687a      	ldr	r2, [r7, #4]
 800ec3a:	601a      	str	r2, [r3, #0]
 800ec3c:	e006      	b.n	800ec4c <vQueueAddToRegistry+0x44>
 800ec3e:	68fb      	ldr	r3, [r7, #12]
 800ec40:	3301      	adds	r3, #1
 800ec42:	60fb      	str	r3, [r7, #12]
 800ec44:	68fb      	ldr	r3, [r7, #12]
 800ec46:	2b07      	cmp	r3, #7
 800ec48:	d9e6      	bls.n	800ec18 <vQueueAddToRegistry+0x10>
 800ec4a:	46c0      	nop			; (mov r8, r8)
 800ec4c:	46c0      	nop			; (mov r8, r8)
 800ec4e:	46bd      	mov	sp, r7
 800ec50:	b004      	add	sp, #16
 800ec52:	bd80      	pop	{r7, pc}
 800ec54:	20000a58 	.word	0x20000a58

0800ec58 <vQueueWaitForMessageRestricted>:
 800ec58:	b580      	push	{r7, lr}
 800ec5a:	b086      	sub	sp, #24
 800ec5c:	af00      	add	r7, sp, #0
 800ec5e:	60f8      	str	r0, [r7, #12]
 800ec60:	60b9      	str	r1, [r7, #8]
 800ec62:	607a      	str	r2, [r7, #4]
 800ec64:	68fb      	ldr	r3, [r7, #12]
 800ec66:	617b      	str	r3, [r7, #20]
 800ec68:	f001 fba2 	bl	80103b0 <vPortEnterCritical>
 800ec6c:	697b      	ldr	r3, [r7, #20]
 800ec6e:	2244      	movs	r2, #68	; 0x44
 800ec70:	5c9b      	ldrb	r3, [r3, r2]
 800ec72:	b25b      	sxtb	r3, r3
 800ec74:	3301      	adds	r3, #1
 800ec76:	d103      	bne.n	800ec80 <vQueueWaitForMessageRestricted+0x28>
 800ec78:	697b      	ldr	r3, [r7, #20]
 800ec7a:	2244      	movs	r2, #68	; 0x44
 800ec7c:	2100      	movs	r1, #0
 800ec7e:	5499      	strb	r1, [r3, r2]
 800ec80:	697b      	ldr	r3, [r7, #20]
 800ec82:	2245      	movs	r2, #69	; 0x45
 800ec84:	5c9b      	ldrb	r3, [r3, r2]
 800ec86:	b25b      	sxtb	r3, r3
 800ec88:	3301      	adds	r3, #1
 800ec8a:	d103      	bne.n	800ec94 <vQueueWaitForMessageRestricted+0x3c>
 800ec8c:	697b      	ldr	r3, [r7, #20]
 800ec8e:	2245      	movs	r2, #69	; 0x45
 800ec90:	2100      	movs	r1, #0
 800ec92:	5499      	strb	r1, [r3, r2]
 800ec94:	f001 fb9e 	bl	80103d4 <vPortExitCritical>
 800ec98:	697b      	ldr	r3, [r7, #20]
 800ec9a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ec9c:	2b00      	cmp	r3, #0
 800ec9e:	d106      	bne.n	800ecae <vQueueWaitForMessageRestricted+0x56>
 800eca0:	697b      	ldr	r3, [r7, #20]
 800eca2:	3324      	adds	r3, #36	; 0x24
 800eca4:	687a      	ldr	r2, [r7, #4]
 800eca6:	68b9      	ldr	r1, [r7, #8]
 800eca8:	0018      	movs	r0, r3
 800ecaa:	f000 fd3b 	bl	800f724 <vTaskPlaceOnEventListRestricted>
 800ecae:	697b      	ldr	r3, [r7, #20]
 800ecb0:	0018      	movs	r0, r3
 800ecb2:	f7ff ff1c 	bl	800eaee <prvUnlockQueue>
 800ecb6:	46c0      	nop			; (mov r8, r8)
 800ecb8:	46bd      	mov	sp, r7
 800ecba:	b006      	add	sp, #24
 800ecbc:	bd80      	pop	{r7, pc}

0800ecbe <xTaskCreateStatic>:
 800ecbe:	b590      	push	{r4, r7, lr}
 800ecc0:	b08d      	sub	sp, #52	; 0x34
 800ecc2:	af04      	add	r7, sp, #16
 800ecc4:	60f8      	str	r0, [r7, #12]
 800ecc6:	60b9      	str	r1, [r7, #8]
 800ecc8:	607a      	str	r2, [r7, #4]
 800ecca:	603b      	str	r3, [r7, #0]
 800eccc:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800ecce:	2b00      	cmp	r3, #0
 800ecd0:	d101      	bne.n	800ecd6 <xTaskCreateStatic+0x18>
 800ecd2:	b672      	cpsid	i
 800ecd4:	e7fe      	b.n	800ecd4 <xTaskCreateStatic+0x16>
 800ecd6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800ecd8:	2b00      	cmp	r3, #0
 800ecda:	d101      	bne.n	800ece0 <xTaskCreateStatic+0x22>
 800ecdc:	b672      	cpsid	i
 800ecde:	e7fe      	b.n	800ecde <xTaskCreateStatic+0x20>
 800ece0:	23a8      	movs	r3, #168	; 0xa8
 800ece2:	617b      	str	r3, [r7, #20]
 800ece4:	697b      	ldr	r3, [r7, #20]
 800ece6:	2ba8      	cmp	r3, #168	; 0xa8
 800ece8:	d001      	beq.n	800ecee <xTaskCreateStatic+0x30>
 800ecea:	b672      	cpsid	i
 800ecec:	e7fe      	b.n	800ecec <xTaskCreateStatic+0x2e>
 800ecee:	697b      	ldr	r3, [r7, #20]
 800ecf0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800ecf2:	2b00      	cmp	r3, #0
 800ecf4:	d020      	beq.n	800ed38 <xTaskCreateStatic+0x7a>
 800ecf6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800ecf8:	2b00      	cmp	r3, #0
 800ecfa:	d01d      	beq.n	800ed38 <xTaskCreateStatic+0x7a>
 800ecfc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800ecfe:	61fb      	str	r3, [r7, #28]
 800ed00:	69fb      	ldr	r3, [r7, #28]
 800ed02:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800ed04:	631a      	str	r2, [r3, #48]	; 0x30
 800ed06:	69fb      	ldr	r3, [r7, #28]
 800ed08:	22a5      	movs	r2, #165	; 0xa5
 800ed0a:	2102      	movs	r1, #2
 800ed0c:	5499      	strb	r1, [r3, r2]
 800ed0e:	683c      	ldr	r4, [r7, #0]
 800ed10:	687a      	ldr	r2, [r7, #4]
 800ed12:	68b9      	ldr	r1, [r7, #8]
 800ed14:	68f8      	ldr	r0, [r7, #12]
 800ed16:	2300      	movs	r3, #0
 800ed18:	9303      	str	r3, [sp, #12]
 800ed1a:	69fb      	ldr	r3, [r7, #28]
 800ed1c:	9302      	str	r3, [sp, #8]
 800ed1e:	2318      	movs	r3, #24
 800ed20:	18fb      	adds	r3, r7, r3
 800ed22:	9301      	str	r3, [sp, #4]
 800ed24:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800ed26:	9300      	str	r3, [sp, #0]
 800ed28:	0023      	movs	r3, r4
 800ed2a:	f000 f859 	bl	800ede0 <prvInitialiseNewTask>
 800ed2e:	69fb      	ldr	r3, [r7, #28]
 800ed30:	0018      	movs	r0, r3
 800ed32:	f000 f8f5 	bl	800ef20 <prvAddNewTaskToReadyList>
 800ed36:	e001      	b.n	800ed3c <xTaskCreateStatic+0x7e>
 800ed38:	2300      	movs	r3, #0
 800ed3a:	61bb      	str	r3, [r7, #24]
 800ed3c:	69bb      	ldr	r3, [r7, #24]
 800ed3e:	0018      	movs	r0, r3
 800ed40:	46bd      	mov	sp, r7
 800ed42:	b009      	add	sp, #36	; 0x24
 800ed44:	bd90      	pop	{r4, r7, pc}

0800ed46 <xTaskCreate>:
 800ed46:	b590      	push	{r4, r7, lr}
 800ed48:	b08d      	sub	sp, #52	; 0x34
 800ed4a:	af04      	add	r7, sp, #16
 800ed4c:	60f8      	str	r0, [r7, #12]
 800ed4e:	60b9      	str	r1, [r7, #8]
 800ed50:	603b      	str	r3, [r7, #0]
 800ed52:	1dbb      	adds	r3, r7, #6
 800ed54:	801a      	strh	r2, [r3, #0]
 800ed56:	1dbb      	adds	r3, r7, #6
 800ed58:	881b      	ldrh	r3, [r3, #0]
 800ed5a:	009b      	lsls	r3, r3, #2
 800ed5c:	0018      	movs	r0, r3
 800ed5e:	f001 fbbf 	bl	80104e0 <pvPortMalloc>
 800ed62:	0003      	movs	r3, r0
 800ed64:	617b      	str	r3, [r7, #20]
 800ed66:	697b      	ldr	r3, [r7, #20]
 800ed68:	2b00      	cmp	r3, #0
 800ed6a:	d010      	beq.n	800ed8e <xTaskCreate+0x48>
 800ed6c:	20a8      	movs	r0, #168	; 0xa8
 800ed6e:	f001 fbb7 	bl	80104e0 <pvPortMalloc>
 800ed72:	0003      	movs	r3, r0
 800ed74:	61fb      	str	r3, [r7, #28]
 800ed76:	69fb      	ldr	r3, [r7, #28]
 800ed78:	2b00      	cmp	r3, #0
 800ed7a:	d003      	beq.n	800ed84 <xTaskCreate+0x3e>
 800ed7c:	69fb      	ldr	r3, [r7, #28]
 800ed7e:	697a      	ldr	r2, [r7, #20]
 800ed80:	631a      	str	r2, [r3, #48]	; 0x30
 800ed82:	e006      	b.n	800ed92 <xTaskCreate+0x4c>
 800ed84:	697b      	ldr	r3, [r7, #20]
 800ed86:	0018      	movs	r0, r3
 800ed88:	f001 fc56 	bl	8010638 <vPortFree>
 800ed8c:	e001      	b.n	800ed92 <xTaskCreate+0x4c>
 800ed8e:	2300      	movs	r3, #0
 800ed90:	61fb      	str	r3, [r7, #28]
 800ed92:	69fb      	ldr	r3, [r7, #28]
 800ed94:	2b00      	cmp	r3, #0
 800ed96:	d01a      	beq.n	800edce <xTaskCreate+0x88>
 800ed98:	69fb      	ldr	r3, [r7, #28]
 800ed9a:	22a5      	movs	r2, #165	; 0xa5
 800ed9c:	2100      	movs	r1, #0
 800ed9e:	5499      	strb	r1, [r3, r2]
 800eda0:	1dbb      	adds	r3, r7, #6
 800eda2:	881a      	ldrh	r2, [r3, #0]
 800eda4:	683c      	ldr	r4, [r7, #0]
 800eda6:	68b9      	ldr	r1, [r7, #8]
 800eda8:	68f8      	ldr	r0, [r7, #12]
 800edaa:	2300      	movs	r3, #0
 800edac:	9303      	str	r3, [sp, #12]
 800edae:	69fb      	ldr	r3, [r7, #28]
 800edb0:	9302      	str	r3, [sp, #8]
 800edb2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800edb4:	9301      	str	r3, [sp, #4]
 800edb6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800edb8:	9300      	str	r3, [sp, #0]
 800edba:	0023      	movs	r3, r4
 800edbc:	f000 f810 	bl	800ede0 <prvInitialiseNewTask>
 800edc0:	69fb      	ldr	r3, [r7, #28]
 800edc2:	0018      	movs	r0, r3
 800edc4:	f000 f8ac 	bl	800ef20 <prvAddNewTaskToReadyList>
 800edc8:	2301      	movs	r3, #1
 800edca:	61bb      	str	r3, [r7, #24]
 800edcc:	e002      	b.n	800edd4 <xTaskCreate+0x8e>
 800edce:	2301      	movs	r3, #1
 800edd0:	425b      	negs	r3, r3
 800edd2:	61bb      	str	r3, [r7, #24]
 800edd4:	69bb      	ldr	r3, [r7, #24]
 800edd6:	0018      	movs	r0, r3
 800edd8:	46bd      	mov	sp, r7
 800edda:	b009      	add	sp, #36	; 0x24
 800eddc:	bd90      	pop	{r4, r7, pc}
	...

0800ede0 <prvInitialiseNewTask>:
 800ede0:	b580      	push	{r7, lr}
 800ede2:	b086      	sub	sp, #24
 800ede4:	af00      	add	r7, sp, #0
 800ede6:	60f8      	str	r0, [r7, #12]
 800ede8:	60b9      	str	r1, [r7, #8]
 800edea:	607a      	str	r2, [r7, #4]
 800edec:	603b      	str	r3, [r7, #0]
 800edee:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800edf0:	6b18      	ldr	r0, [r3, #48]	; 0x30
 800edf2:	687b      	ldr	r3, [r7, #4]
 800edf4:	009b      	lsls	r3, r3, #2
 800edf6:	001a      	movs	r2, r3
 800edf8:	21a5      	movs	r1, #165	; 0xa5
 800edfa:	f009 f9e3 	bl	80181c4 <memset>
 800edfe:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ee00:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800ee02:	687b      	ldr	r3, [r7, #4]
 800ee04:	4942      	ldr	r1, [pc, #264]	; (800ef10 <prvInitialiseNewTask+0x130>)
 800ee06:	468c      	mov	ip, r1
 800ee08:	4463      	add	r3, ip
 800ee0a:	009b      	lsls	r3, r3, #2
 800ee0c:	18d3      	adds	r3, r2, r3
 800ee0e:	613b      	str	r3, [r7, #16]
 800ee10:	693b      	ldr	r3, [r7, #16]
 800ee12:	2207      	movs	r2, #7
 800ee14:	4393      	bics	r3, r2
 800ee16:	613b      	str	r3, [r7, #16]
 800ee18:	693b      	ldr	r3, [r7, #16]
 800ee1a:	2207      	movs	r2, #7
 800ee1c:	4013      	ands	r3, r2
 800ee1e:	d001      	beq.n	800ee24 <prvInitialiseNewTask+0x44>
 800ee20:	b672      	cpsid	i
 800ee22:	e7fe      	b.n	800ee22 <prvInitialiseNewTask+0x42>
 800ee24:	68bb      	ldr	r3, [r7, #8]
 800ee26:	2b00      	cmp	r3, #0
 800ee28:	d020      	beq.n	800ee6c <prvInitialiseNewTask+0x8c>
 800ee2a:	2300      	movs	r3, #0
 800ee2c:	617b      	str	r3, [r7, #20]
 800ee2e:	e013      	b.n	800ee58 <prvInitialiseNewTask+0x78>
 800ee30:	68ba      	ldr	r2, [r7, #8]
 800ee32:	697b      	ldr	r3, [r7, #20]
 800ee34:	18d3      	adds	r3, r2, r3
 800ee36:	7818      	ldrb	r0, [r3, #0]
 800ee38:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800ee3a:	2134      	movs	r1, #52	; 0x34
 800ee3c:	697b      	ldr	r3, [r7, #20]
 800ee3e:	18d3      	adds	r3, r2, r3
 800ee40:	185b      	adds	r3, r3, r1
 800ee42:	1c02      	adds	r2, r0, #0
 800ee44:	701a      	strb	r2, [r3, #0]
 800ee46:	68ba      	ldr	r2, [r7, #8]
 800ee48:	697b      	ldr	r3, [r7, #20]
 800ee4a:	18d3      	adds	r3, r2, r3
 800ee4c:	781b      	ldrb	r3, [r3, #0]
 800ee4e:	2b00      	cmp	r3, #0
 800ee50:	d006      	beq.n	800ee60 <prvInitialiseNewTask+0x80>
 800ee52:	697b      	ldr	r3, [r7, #20]
 800ee54:	3301      	adds	r3, #1
 800ee56:	617b      	str	r3, [r7, #20]
 800ee58:	697b      	ldr	r3, [r7, #20]
 800ee5a:	2b0f      	cmp	r3, #15
 800ee5c:	d9e8      	bls.n	800ee30 <prvInitialiseNewTask+0x50>
 800ee5e:	e000      	b.n	800ee62 <prvInitialiseNewTask+0x82>
 800ee60:	46c0      	nop			; (mov r8, r8)
 800ee62:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ee64:	2243      	movs	r2, #67	; 0x43
 800ee66:	2100      	movs	r1, #0
 800ee68:	5499      	strb	r1, [r3, r2]
 800ee6a:	e003      	b.n	800ee74 <prvInitialiseNewTask+0x94>
 800ee6c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ee6e:	2234      	movs	r2, #52	; 0x34
 800ee70:	2100      	movs	r1, #0
 800ee72:	5499      	strb	r1, [r3, r2]
 800ee74:	6a3b      	ldr	r3, [r7, #32]
 800ee76:	2b37      	cmp	r3, #55	; 0x37
 800ee78:	d901      	bls.n	800ee7e <prvInitialiseNewTask+0x9e>
 800ee7a:	2337      	movs	r3, #55	; 0x37
 800ee7c:	623b      	str	r3, [r7, #32]
 800ee7e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ee80:	6a3a      	ldr	r2, [r7, #32]
 800ee82:	62da      	str	r2, [r3, #44]	; 0x2c
 800ee84:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ee86:	6a3a      	ldr	r2, [r7, #32]
 800ee88:	64da      	str	r2, [r3, #76]	; 0x4c
 800ee8a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ee8c:	2200      	movs	r2, #0
 800ee8e:	651a      	str	r2, [r3, #80]	; 0x50
 800ee90:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ee92:	3304      	adds	r3, #4
 800ee94:	0018      	movs	r0, r3
 800ee96:	f7ff f9c5 	bl	800e224 <vListInitialiseItem>
 800ee9a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ee9c:	3318      	adds	r3, #24
 800ee9e:	0018      	movs	r0, r3
 800eea0:	f7ff f9c0 	bl	800e224 <vListInitialiseItem>
 800eea4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800eea6:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800eea8:	611a      	str	r2, [r3, #16]
 800eeaa:	6a3b      	ldr	r3, [r7, #32]
 800eeac:	2238      	movs	r2, #56	; 0x38
 800eeae:	1ad2      	subs	r2, r2, r3
 800eeb0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800eeb2:	619a      	str	r2, [r3, #24]
 800eeb4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800eeb6:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800eeb8:	625a      	str	r2, [r3, #36]	; 0x24
 800eeba:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800eebc:	22a0      	movs	r2, #160	; 0xa0
 800eebe:	2100      	movs	r1, #0
 800eec0:	5099      	str	r1, [r3, r2]
 800eec2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800eec4:	22a4      	movs	r2, #164	; 0xa4
 800eec6:	2100      	movs	r1, #0
 800eec8:	5499      	strb	r1, [r3, r2]
 800eeca:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800eecc:	3354      	adds	r3, #84	; 0x54
 800eece:	224c      	movs	r2, #76	; 0x4c
 800eed0:	2100      	movs	r1, #0
 800eed2:	0018      	movs	r0, r3
 800eed4:	f009 f976 	bl	80181c4 <memset>
 800eed8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800eeda:	4a0e      	ldr	r2, [pc, #56]	; (800ef14 <prvInitialiseNewTask+0x134>)
 800eedc:	659a      	str	r2, [r3, #88]	; 0x58
 800eede:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800eee0:	4a0d      	ldr	r2, [pc, #52]	; (800ef18 <prvInitialiseNewTask+0x138>)
 800eee2:	65da      	str	r2, [r3, #92]	; 0x5c
 800eee4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800eee6:	4a0d      	ldr	r2, [pc, #52]	; (800ef1c <prvInitialiseNewTask+0x13c>)
 800eee8:	661a      	str	r2, [r3, #96]	; 0x60
 800eeea:	683a      	ldr	r2, [r7, #0]
 800eeec:	68f9      	ldr	r1, [r7, #12]
 800eeee:	693b      	ldr	r3, [r7, #16]
 800eef0:	0018      	movs	r0, r3
 800eef2:	f001 f9c1 	bl	8010278 <pxPortInitialiseStack>
 800eef6:	0002      	movs	r2, r0
 800eef8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800eefa:	601a      	str	r2, [r3, #0]
 800eefc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800eefe:	2b00      	cmp	r3, #0
 800ef00:	d002      	beq.n	800ef08 <prvInitialiseNewTask+0x128>
 800ef02:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ef04:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800ef06:	601a      	str	r2, [r3, #0]
 800ef08:	46c0      	nop			; (mov r8, r8)
 800ef0a:	46bd      	mov	sp, r7
 800ef0c:	b006      	add	sp, #24
 800ef0e:	bd80      	pop	{r7, pc}
 800ef10:	3fffffff 	.word	0x3fffffff
 800ef14:	20003380 	.word	0x20003380
 800ef18:	200033e8 	.word	0x200033e8
 800ef1c:	20003450 	.word	0x20003450

0800ef20 <prvAddNewTaskToReadyList>:
 800ef20:	b580      	push	{r7, lr}
 800ef22:	b082      	sub	sp, #8
 800ef24:	af00      	add	r7, sp, #0
 800ef26:	6078      	str	r0, [r7, #4]
 800ef28:	f001 fa42 	bl	80103b0 <vPortEnterCritical>
 800ef2c:	4b2a      	ldr	r3, [pc, #168]	; (800efd8 <prvAddNewTaskToReadyList+0xb8>)
 800ef2e:	681b      	ldr	r3, [r3, #0]
 800ef30:	1c5a      	adds	r2, r3, #1
 800ef32:	4b29      	ldr	r3, [pc, #164]	; (800efd8 <prvAddNewTaskToReadyList+0xb8>)
 800ef34:	601a      	str	r2, [r3, #0]
 800ef36:	4b29      	ldr	r3, [pc, #164]	; (800efdc <prvAddNewTaskToReadyList+0xbc>)
 800ef38:	681b      	ldr	r3, [r3, #0]
 800ef3a:	2b00      	cmp	r3, #0
 800ef3c:	d109      	bne.n	800ef52 <prvAddNewTaskToReadyList+0x32>
 800ef3e:	4b27      	ldr	r3, [pc, #156]	; (800efdc <prvAddNewTaskToReadyList+0xbc>)
 800ef40:	687a      	ldr	r2, [r7, #4]
 800ef42:	601a      	str	r2, [r3, #0]
 800ef44:	4b24      	ldr	r3, [pc, #144]	; (800efd8 <prvAddNewTaskToReadyList+0xb8>)
 800ef46:	681b      	ldr	r3, [r3, #0]
 800ef48:	2b01      	cmp	r3, #1
 800ef4a:	d110      	bne.n	800ef6e <prvAddNewTaskToReadyList+0x4e>
 800ef4c:	f000 fcea 	bl	800f924 <prvInitialiseTaskLists>
 800ef50:	e00d      	b.n	800ef6e <prvAddNewTaskToReadyList+0x4e>
 800ef52:	4b23      	ldr	r3, [pc, #140]	; (800efe0 <prvAddNewTaskToReadyList+0xc0>)
 800ef54:	681b      	ldr	r3, [r3, #0]
 800ef56:	2b00      	cmp	r3, #0
 800ef58:	d109      	bne.n	800ef6e <prvAddNewTaskToReadyList+0x4e>
 800ef5a:	4b20      	ldr	r3, [pc, #128]	; (800efdc <prvAddNewTaskToReadyList+0xbc>)
 800ef5c:	681b      	ldr	r3, [r3, #0]
 800ef5e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ef60:	687b      	ldr	r3, [r7, #4]
 800ef62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ef64:	429a      	cmp	r2, r3
 800ef66:	d802      	bhi.n	800ef6e <prvAddNewTaskToReadyList+0x4e>
 800ef68:	4b1c      	ldr	r3, [pc, #112]	; (800efdc <prvAddNewTaskToReadyList+0xbc>)
 800ef6a:	687a      	ldr	r2, [r7, #4]
 800ef6c:	601a      	str	r2, [r3, #0]
 800ef6e:	4b1d      	ldr	r3, [pc, #116]	; (800efe4 <prvAddNewTaskToReadyList+0xc4>)
 800ef70:	681b      	ldr	r3, [r3, #0]
 800ef72:	1c5a      	adds	r2, r3, #1
 800ef74:	4b1b      	ldr	r3, [pc, #108]	; (800efe4 <prvAddNewTaskToReadyList+0xc4>)
 800ef76:	601a      	str	r2, [r3, #0]
 800ef78:	4b1a      	ldr	r3, [pc, #104]	; (800efe4 <prvAddNewTaskToReadyList+0xc4>)
 800ef7a:	681a      	ldr	r2, [r3, #0]
 800ef7c:	687b      	ldr	r3, [r7, #4]
 800ef7e:	645a      	str	r2, [r3, #68]	; 0x44
 800ef80:	687b      	ldr	r3, [r7, #4]
 800ef82:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ef84:	4b18      	ldr	r3, [pc, #96]	; (800efe8 <prvAddNewTaskToReadyList+0xc8>)
 800ef86:	681b      	ldr	r3, [r3, #0]
 800ef88:	429a      	cmp	r2, r3
 800ef8a:	d903      	bls.n	800ef94 <prvAddNewTaskToReadyList+0x74>
 800ef8c:	687b      	ldr	r3, [r7, #4]
 800ef8e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ef90:	4b15      	ldr	r3, [pc, #84]	; (800efe8 <prvAddNewTaskToReadyList+0xc8>)
 800ef92:	601a      	str	r2, [r3, #0]
 800ef94:	687b      	ldr	r3, [r7, #4]
 800ef96:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ef98:	0013      	movs	r3, r2
 800ef9a:	009b      	lsls	r3, r3, #2
 800ef9c:	189b      	adds	r3, r3, r2
 800ef9e:	009b      	lsls	r3, r3, #2
 800efa0:	4a12      	ldr	r2, [pc, #72]	; (800efec <prvAddNewTaskToReadyList+0xcc>)
 800efa2:	189a      	adds	r2, r3, r2
 800efa4:	687b      	ldr	r3, [r7, #4]
 800efa6:	3304      	adds	r3, #4
 800efa8:	0019      	movs	r1, r3
 800efaa:	0010      	movs	r0, r2
 800efac:	f7ff f945 	bl	800e23a <vListInsertEnd>
 800efb0:	f001 fa10 	bl	80103d4 <vPortExitCritical>
 800efb4:	4b0a      	ldr	r3, [pc, #40]	; (800efe0 <prvAddNewTaskToReadyList+0xc0>)
 800efb6:	681b      	ldr	r3, [r3, #0]
 800efb8:	2b00      	cmp	r3, #0
 800efba:	d008      	beq.n	800efce <prvAddNewTaskToReadyList+0xae>
 800efbc:	4b07      	ldr	r3, [pc, #28]	; (800efdc <prvAddNewTaskToReadyList+0xbc>)
 800efbe:	681b      	ldr	r3, [r3, #0]
 800efc0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800efc2:	687b      	ldr	r3, [r7, #4]
 800efc4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800efc6:	429a      	cmp	r2, r3
 800efc8:	d201      	bcs.n	800efce <prvAddNewTaskToReadyList+0xae>
 800efca:	f001 f9e1 	bl	8010390 <vPortYield>
 800efce:	46c0      	nop			; (mov r8, r8)
 800efd0:	46bd      	mov	sp, r7
 800efd2:	b002      	add	sp, #8
 800efd4:	bd80      	pop	{r7, pc}
 800efd6:	46c0      	nop			; (mov r8, r8)
 800efd8:	20000f6c 	.word	0x20000f6c
 800efdc:	20000a98 	.word	0x20000a98
 800efe0:	20000f78 	.word	0x20000f78
 800efe4:	20000f88 	.word	0x20000f88
 800efe8:	20000f74 	.word	0x20000f74
 800efec:	20000a9c 	.word	0x20000a9c

0800eff0 <vTaskDelay>:
 800eff0:	b580      	push	{r7, lr}
 800eff2:	b084      	sub	sp, #16
 800eff4:	af00      	add	r7, sp, #0
 800eff6:	6078      	str	r0, [r7, #4]
 800eff8:	2300      	movs	r3, #0
 800effa:	60fb      	str	r3, [r7, #12]
 800effc:	687b      	ldr	r3, [r7, #4]
 800effe:	2b00      	cmp	r3, #0
 800f000:	d010      	beq.n	800f024 <vTaskDelay+0x34>
 800f002:	4b0d      	ldr	r3, [pc, #52]	; (800f038 <vTaskDelay+0x48>)
 800f004:	681b      	ldr	r3, [r3, #0]
 800f006:	2b00      	cmp	r3, #0
 800f008:	d001      	beq.n	800f00e <vTaskDelay+0x1e>
 800f00a:	b672      	cpsid	i
 800f00c:	e7fe      	b.n	800f00c <vTaskDelay+0x1c>
 800f00e:	f000 f9bb 	bl	800f388 <vTaskSuspendAll>
 800f012:	687b      	ldr	r3, [r7, #4]
 800f014:	2100      	movs	r1, #0
 800f016:	0018      	movs	r0, r3
 800f018:	f000 fdc8 	bl	800fbac <prvAddCurrentTaskToDelayedList>
 800f01c:	f000 f9c0 	bl	800f3a0 <xTaskResumeAll>
 800f020:	0003      	movs	r3, r0
 800f022:	60fb      	str	r3, [r7, #12]
 800f024:	68fb      	ldr	r3, [r7, #12]
 800f026:	2b00      	cmp	r3, #0
 800f028:	d101      	bne.n	800f02e <vTaskDelay+0x3e>
 800f02a:	f001 f9b1 	bl	8010390 <vPortYield>
 800f02e:	46c0      	nop			; (mov r8, r8)
 800f030:	46bd      	mov	sp, r7
 800f032:	b004      	add	sp, #16
 800f034:	bd80      	pop	{r7, pc}
 800f036:	46c0      	nop			; (mov r8, r8)
 800f038:	20000f94 	.word	0x20000f94

0800f03c <eTaskGetState>:
 800f03c:	b580      	push	{r7, lr}
 800f03e:	b088      	sub	sp, #32
 800f040:	af00      	add	r7, sp, #0
 800f042:	6078      	str	r0, [r7, #4]
 800f044:	687b      	ldr	r3, [r7, #4]
 800f046:	61bb      	str	r3, [r7, #24]
 800f048:	69bb      	ldr	r3, [r7, #24]
 800f04a:	2b00      	cmp	r3, #0
 800f04c:	d101      	bne.n	800f052 <eTaskGetState+0x16>
 800f04e:	b672      	cpsid	i
 800f050:	e7fe      	b.n	800f050 <eTaskGetState+0x14>
 800f052:	4b2c      	ldr	r3, [pc, #176]	; (800f104 <eTaskGetState+0xc8>)
 800f054:	681b      	ldr	r3, [r3, #0]
 800f056:	69ba      	ldr	r2, [r7, #24]
 800f058:	429a      	cmp	r2, r3
 800f05a:	d104      	bne.n	800f066 <eTaskGetState+0x2a>
 800f05c:	231f      	movs	r3, #31
 800f05e:	18fb      	adds	r3, r7, r3
 800f060:	2200      	movs	r2, #0
 800f062:	701a      	strb	r2, [r3, #0]
 800f064:	e046      	b.n	800f0f4 <eTaskGetState+0xb8>
 800f066:	f001 f9a3 	bl	80103b0 <vPortEnterCritical>
 800f06a:	69bb      	ldr	r3, [r7, #24]
 800f06c:	695b      	ldr	r3, [r3, #20]
 800f06e:	617b      	str	r3, [r7, #20]
 800f070:	4b25      	ldr	r3, [pc, #148]	; (800f108 <eTaskGetState+0xcc>)
 800f072:	681b      	ldr	r3, [r3, #0]
 800f074:	613b      	str	r3, [r7, #16]
 800f076:	4b25      	ldr	r3, [pc, #148]	; (800f10c <eTaskGetState+0xd0>)
 800f078:	681b      	ldr	r3, [r3, #0]
 800f07a:	60fb      	str	r3, [r7, #12]
 800f07c:	f001 f9aa 	bl	80103d4 <vPortExitCritical>
 800f080:	697a      	ldr	r2, [r7, #20]
 800f082:	693b      	ldr	r3, [r7, #16]
 800f084:	429a      	cmp	r2, r3
 800f086:	d003      	beq.n	800f090 <eTaskGetState+0x54>
 800f088:	697a      	ldr	r2, [r7, #20]
 800f08a:	68fb      	ldr	r3, [r7, #12]
 800f08c:	429a      	cmp	r2, r3
 800f08e:	d104      	bne.n	800f09a <eTaskGetState+0x5e>
 800f090:	231f      	movs	r3, #31
 800f092:	18fb      	adds	r3, r7, r3
 800f094:	2202      	movs	r2, #2
 800f096:	701a      	strb	r2, [r3, #0]
 800f098:	e02c      	b.n	800f0f4 <eTaskGetState+0xb8>
 800f09a:	697a      	ldr	r2, [r7, #20]
 800f09c:	4b1c      	ldr	r3, [pc, #112]	; (800f110 <eTaskGetState+0xd4>)
 800f09e:	429a      	cmp	r2, r3
 800f0a0:	d118      	bne.n	800f0d4 <eTaskGetState+0x98>
 800f0a2:	69bb      	ldr	r3, [r7, #24]
 800f0a4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f0a6:	2b00      	cmp	r3, #0
 800f0a8:	d10f      	bne.n	800f0ca <eTaskGetState+0x8e>
 800f0aa:	69bb      	ldr	r3, [r7, #24]
 800f0ac:	22a4      	movs	r2, #164	; 0xa4
 800f0ae:	5c9b      	ldrb	r3, [r3, r2]
 800f0b0:	b2db      	uxtb	r3, r3
 800f0b2:	2b01      	cmp	r3, #1
 800f0b4:	d104      	bne.n	800f0c0 <eTaskGetState+0x84>
 800f0b6:	231f      	movs	r3, #31
 800f0b8:	18fb      	adds	r3, r7, r3
 800f0ba:	2202      	movs	r2, #2
 800f0bc:	701a      	strb	r2, [r3, #0]
 800f0be:	e019      	b.n	800f0f4 <eTaskGetState+0xb8>
 800f0c0:	231f      	movs	r3, #31
 800f0c2:	18fb      	adds	r3, r7, r3
 800f0c4:	2203      	movs	r2, #3
 800f0c6:	701a      	strb	r2, [r3, #0]
 800f0c8:	e014      	b.n	800f0f4 <eTaskGetState+0xb8>
 800f0ca:	231f      	movs	r3, #31
 800f0cc:	18fb      	adds	r3, r7, r3
 800f0ce:	2202      	movs	r2, #2
 800f0d0:	701a      	strb	r2, [r3, #0]
 800f0d2:	e00f      	b.n	800f0f4 <eTaskGetState+0xb8>
 800f0d4:	697a      	ldr	r2, [r7, #20]
 800f0d6:	4b0f      	ldr	r3, [pc, #60]	; (800f114 <eTaskGetState+0xd8>)
 800f0d8:	429a      	cmp	r2, r3
 800f0da:	d002      	beq.n	800f0e2 <eTaskGetState+0xa6>
 800f0dc:	697b      	ldr	r3, [r7, #20]
 800f0de:	2b00      	cmp	r3, #0
 800f0e0:	d104      	bne.n	800f0ec <eTaskGetState+0xb0>
 800f0e2:	231f      	movs	r3, #31
 800f0e4:	18fb      	adds	r3, r7, r3
 800f0e6:	2204      	movs	r2, #4
 800f0e8:	701a      	strb	r2, [r3, #0]
 800f0ea:	e003      	b.n	800f0f4 <eTaskGetState+0xb8>
 800f0ec:	231f      	movs	r3, #31
 800f0ee:	18fb      	adds	r3, r7, r3
 800f0f0:	2201      	movs	r2, #1
 800f0f2:	701a      	strb	r2, [r3, #0]
 800f0f4:	231f      	movs	r3, #31
 800f0f6:	18fb      	adds	r3, r7, r3
 800f0f8:	781b      	ldrb	r3, [r3, #0]
 800f0fa:	0018      	movs	r0, r3
 800f0fc:	46bd      	mov	sp, r7
 800f0fe:	b008      	add	sp, #32
 800f100:	bd80      	pop	{r7, pc}
 800f102:	46c0      	nop			; (mov r8, r8)
 800f104:	20000a98 	.word	0x20000a98
 800f108:	20000f24 	.word	0x20000f24
 800f10c:	20000f28 	.word	0x20000f28
 800f110:	20000f58 	.word	0x20000f58
 800f114:	20000f40 	.word	0x20000f40

0800f118 <vTaskSuspend>:
 800f118:	b580      	push	{r7, lr}
 800f11a:	b084      	sub	sp, #16
 800f11c:	af00      	add	r7, sp, #0
 800f11e:	6078      	str	r0, [r7, #4]
 800f120:	f001 f946 	bl	80103b0 <vPortEnterCritical>
 800f124:	687b      	ldr	r3, [r7, #4]
 800f126:	2b00      	cmp	r3, #0
 800f128:	d102      	bne.n	800f130 <vTaskSuspend+0x18>
 800f12a:	4b29      	ldr	r3, [pc, #164]	; (800f1d0 <vTaskSuspend+0xb8>)
 800f12c:	681b      	ldr	r3, [r3, #0]
 800f12e:	e000      	b.n	800f132 <vTaskSuspend+0x1a>
 800f130:	687b      	ldr	r3, [r7, #4]
 800f132:	60fb      	str	r3, [r7, #12]
 800f134:	68fb      	ldr	r3, [r7, #12]
 800f136:	3304      	adds	r3, #4
 800f138:	0018      	movs	r0, r3
 800f13a:	f7ff f8d6 	bl	800e2ea <uxListRemove>
 800f13e:	68fb      	ldr	r3, [r7, #12]
 800f140:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f142:	2b00      	cmp	r3, #0
 800f144:	d004      	beq.n	800f150 <vTaskSuspend+0x38>
 800f146:	68fb      	ldr	r3, [r7, #12]
 800f148:	3318      	adds	r3, #24
 800f14a:	0018      	movs	r0, r3
 800f14c:	f7ff f8cd 	bl	800e2ea <uxListRemove>
 800f150:	68fb      	ldr	r3, [r7, #12]
 800f152:	1d1a      	adds	r2, r3, #4
 800f154:	4b1f      	ldr	r3, [pc, #124]	; (800f1d4 <vTaskSuspend+0xbc>)
 800f156:	0011      	movs	r1, r2
 800f158:	0018      	movs	r0, r3
 800f15a:	f7ff f86e 	bl	800e23a <vListInsertEnd>
 800f15e:	68fb      	ldr	r3, [r7, #12]
 800f160:	22a4      	movs	r2, #164	; 0xa4
 800f162:	5c9b      	ldrb	r3, [r3, r2]
 800f164:	b2db      	uxtb	r3, r3
 800f166:	2b01      	cmp	r3, #1
 800f168:	d103      	bne.n	800f172 <vTaskSuspend+0x5a>
 800f16a:	68fb      	ldr	r3, [r7, #12]
 800f16c:	22a4      	movs	r2, #164	; 0xa4
 800f16e:	2100      	movs	r1, #0
 800f170:	5499      	strb	r1, [r3, r2]
 800f172:	f001 f92f 	bl	80103d4 <vPortExitCritical>
 800f176:	4b18      	ldr	r3, [pc, #96]	; (800f1d8 <vTaskSuspend+0xc0>)
 800f178:	681b      	ldr	r3, [r3, #0]
 800f17a:	2b00      	cmp	r3, #0
 800f17c:	d005      	beq.n	800f18a <vTaskSuspend+0x72>
 800f17e:	f001 f917 	bl	80103b0 <vPortEnterCritical>
 800f182:	f000 fc6f 	bl	800fa64 <prvResetNextTaskUnblockTime>
 800f186:	f001 f925 	bl	80103d4 <vPortExitCritical>
 800f18a:	4b11      	ldr	r3, [pc, #68]	; (800f1d0 <vTaskSuspend+0xb8>)
 800f18c:	681b      	ldr	r3, [r3, #0]
 800f18e:	68fa      	ldr	r2, [r7, #12]
 800f190:	429a      	cmp	r2, r3
 800f192:	d118      	bne.n	800f1c6 <vTaskSuspend+0xae>
 800f194:	4b10      	ldr	r3, [pc, #64]	; (800f1d8 <vTaskSuspend+0xc0>)
 800f196:	681b      	ldr	r3, [r3, #0]
 800f198:	2b00      	cmp	r3, #0
 800f19a:	d008      	beq.n	800f1ae <vTaskSuspend+0x96>
 800f19c:	4b0f      	ldr	r3, [pc, #60]	; (800f1dc <vTaskSuspend+0xc4>)
 800f19e:	681b      	ldr	r3, [r3, #0]
 800f1a0:	2b00      	cmp	r3, #0
 800f1a2:	d001      	beq.n	800f1a8 <vTaskSuspend+0x90>
 800f1a4:	b672      	cpsid	i
 800f1a6:	e7fe      	b.n	800f1a6 <vTaskSuspend+0x8e>
 800f1a8:	f001 f8f2 	bl	8010390 <vPortYield>
 800f1ac:	e00b      	b.n	800f1c6 <vTaskSuspend+0xae>
 800f1ae:	4b09      	ldr	r3, [pc, #36]	; (800f1d4 <vTaskSuspend+0xbc>)
 800f1b0:	681a      	ldr	r2, [r3, #0]
 800f1b2:	4b0b      	ldr	r3, [pc, #44]	; (800f1e0 <vTaskSuspend+0xc8>)
 800f1b4:	681b      	ldr	r3, [r3, #0]
 800f1b6:	429a      	cmp	r2, r3
 800f1b8:	d103      	bne.n	800f1c2 <vTaskSuspend+0xaa>
 800f1ba:	4b05      	ldr	r3, [pc, #20]	; (800f1d0 <vTaskSuspend+0xb8>)
 800f1bc:	2200      	movs	r2, #0
 800f1be:	601a      	str	r2, [r3, #0]
 800f1c0:	e001      	b.n	800f1c6 <vTaskSuspend+0xae>
 800f1c2:	f000 fa37 	bl	800f634 <vTaskSwitchContext>
 800f1c6:	46c0      	nop			; (mov r8, r8)
 800f1c8:	46bd      	mov	sp, r7
 800f1ca:	b004      	add	sp, #16
 800f1cc:	bd80      	pop	{r7, pc}
 800f1ce:	46c0      	nop			; (mov r8, r8)
 800f1d0:	20000a98 	.word	0x20000a98
 800f1d4:	20000f58 	.word	0x20000f58
 800f1d8:	20000f78 	.word	0x20000f78
 800f1dc:	20000f94 	.word	0x20000f94
 800f1e0:	20000f6c 	.word	0x20000f6c

0800f1e4 <prvTaskIsTaskSuspended>:
 800f1e4:	b580      	push	{r7, lr}
 800f1e6:	b084      	sub	sp, #16
 800f1e8:	af00      	add	r7, sp, #0
 800f1ea:	6078      	str	r0, [r7, #4]
 800f1ec:	2300      	movs	r3, #0
 800f1ee:	60fb      	str	r3, [r7, #12]
 800f1f0:	687b      	ldr	r3, [r7, #4]
 800f1f2:	60bb      	str	r3, [r7, #8]
 800f1f4:	687b      	ldr	r3, [r7, #4]
 800f1f6:	2b00      	cmp	r3, #0
 800f1f8:	d101      	bne.n	800f1fe <prvTaskIsTaskSuspended+0x1a>
 800f1fa:	b672      	cpsid	i
 800f1fc:	e7fe      	b.n	800f1fc <prvTaskIsTaskSuspended+0x18>
 800f1fe:	68bb      	ldr	r3, [r7, #8]
 800f200:	695a      	ldr	r2, [r3, #20]
 800f202:	4b09      	ldr	r3, [pc, #36]	; (800f228 <prvTaskIsTaskSuspended+0x44>)
 800f204:	429a      	cmp	r2, r3
 800f206:	d10a      	bne.n	800f21e <prvTaskIsTaskSuspended+0x3a>
 800f208:	68bb      	ldr	r3, [r7, #8]
 800f20a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800f20c:	4b07      	ldr	r3, [pc, #28]	; (800f22c <prvTaskIsTaskSuspended+0x48>)
 800f20e:	429a      	cmp	r2, r3
 800f210:	d005      	beq.n	800f21e <prvTaskIsTaskSuspended+0x3a>
 800f212:	68bb      	ldr	r3, [r7, #8]
 800f214:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f216:	2b00      	cmp	r3, #0
 800f218:	d101      	bne.n	800f21e <prvTaskIsTaskSuspended+0x3a>
 800f21a:	2301      	movs	r3, #1
 800f21c:	60fb      	str	r3, [r7, #12]
 800f21e:	68fb      	ldr	r3, [r7, #12]
 800f220:	0018      	movs	r0, r3
 800f222:	46bd      	mov	sp, r7
 800f224:	b004      	add	sp, #16
 800f226:	bd80      	pop	{r7, pc}
 800f228:	20000f58 	.word	0x20000f58
 800f22c:	20000f2c 	.word	0x20000f2c

0800f230 <vTaskResume>:
 800f230:	b580      	push	{r7, lr}
 800f232:	b084      	sub	sp, #16
 800f234:	af00      	add	r7, sp, #0
 800f236:	6078      	str	r0, [r7, #4]
 800f238:	687b      	ldr	r3, [r7, #4]
 800f23a:	60fb      	str	r3, [r7, #12]
 800f23c:	687b      	ldr	r3, [r7, #4]
 800f23e:	2b00      	cmp	r3, #0
 800f240:	d101      	bne.n	800f246 <vTaskResume+0x16>
 800f242:	b672      	cpsid	i
 800f244:	e7fe      	b.n	800f244 <vTaskResume+0x14>
 800f246:	4b1e      	ldr	r3, [pc, #120]	; (800f2c0 <vTaskResume+0x90>)
 800f248:	681b      	ldr	r3, [r3, #0]
 800f24a:	68fa      	ldr	r2, [r7, #12]
 800f24c:	429a      	cmp	r2, r3
 800f24e:	d032      	beq.n	800f2b6 <vTaskResume+0x86>
 800f250:	68fb      	ldr	r3, [r7, #12]
 800f252:	2b00      	cmp	r3, #0
 800f254:	d02f      	beq.n	800f2b6 <vTaskResume+0x86>
 800f256:	f001 f8ab 	bl	80103b0 <vPortEnterCritical>
 800f25a:	68fb      	ldr	r3, [r7, #12]
 800f25c:	0018      	movs	r0, r3
 800f25e:	f7ff ffc1 	bl	800f1e4 <prvTaskIsTaskSuspended>
 800f262:	1e03      	subs	r3, r0, #0
 800f264:	d025      	beq.n	800f2b2 <vTaskResume+0x82>
 800f266:	68fb      	ldr	r3, [r7, #12]
 800f268:	3304      	adds	r3, #4
 800f26a:	0018      	movs	r0, r3
 800f26c:	f7ff f83d 	bl	800e2ea <uxListRemove>
 800f270:	68fb      	ldr	r3, [r7, #12]
 800f272:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f274:	4b13      	ldr	r3, [pc, #76]	; (800f2c4 <vTaskResume+0x94>)
 800f276:	681b      	ldr	r3, [r3, #0]
 800f278:	429a      	cmp	r2, r3
 800f27a:	d903      	bls.n	800f284 <vTaskResume+0x54>
 800f27c:	68fb      	ldr	r3, [r7, #12]
 800f27e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f280:	4b10      	ldr	r3, [pc, #64]	; (800f2c4 <vTaskResume+0x94>)
 800f282:	601a      	str	r2, [r3, #0]
 800f284:	68fb      	ldr	r3, [r7, #12]
 800f286:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f288:	0013      	movs	r3, r2
 800f28a:	009b      	lsls	r3, r3, #2
 800f28c:	189b      	adds	r3, r3, r2
 800f28e:	009b      	lsls	r3, r3, #2
 800f290:	4a0d      	ldr	r2, [pc, #52]	; (800f2c8 <vTaskResume+0x98>)
 800f292:	189a      	adds	r2, r3, r2
 800f294:	68fb      	ldr	r3, [r7, #12]
 800f296:	3304      	adds	r3, #4
 800f298:	0019      	movs	r1, r3
 800f29a:	0010      	movs	r0, r2
 800f29c:	f7fe ffcd 	bl	800e23a <vListInsertEnd>
 800f2a0:	68fb      	ldr	r3, [r7, #12]
 800f2a2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f2a4:	4b06      	ldr	r3, [pc, #24]	; (800f2c0 <vTaskResume+0x90>)
 800f2a6:	681b      	ldr	r3, [r3, #0]
 800f2a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f2aa:	429a      	cmp	r2, r3
 800f2ac:	d301      	bcc.n	800f2b2 <vTaskResume+0x82>
 800f2ae:	f001 f86f 	bl	8010390 <vPortYield>
 800f2b2:	f001 f88f 	bl	80103d4 <vPortExitCritical>
 800f2b6:	46c0      	nop			; (mov r8, r8)
 800f2b8:	46bd      	mov	sp, r7
 800f2ba:	b004      	add	sp, #16
 800f2bc:	bd80      	pop	{r7, pc}
 800f2be:	46c0      	nop			; (mov r8, r8)
 800f2c0:	20000a98 	.word	0x20000a98
 800f2c4:	20000f74 	.word	0x20000f74
 800f2c8:	20000a9c 	.word	0x20000a9c

0800f2cc <vTaskStartScheduler>:
 800f2cc:	b590      	push	{r4, r7, lr}
 800f2ce:	b089      	sub	sp, #36	; 0x24
 800f2d0:	af04      	add	r7, sp, #16
 800f2d2:	2300      	movs	r3, #0
 800f2d4:	60bb      	str	r3, [r7, #8]
 800f2d6:	2300      	movs	r3, #0
 800f2d8:	607b      	str	r3, [r7, #4]
 800f2da:	003a      	movs	r2, r7
 800f2dc:	1d39      	adds	r1, r7, #4
 800f2de:	2308      	movs	r3, #8
 800f2e0:	18fb      	adds	r3, r7, r3
 800f2e2:	0018      	movs	r0, r3
 800f2e4:	f7fe ff50 	bl	800e188 <vApplicationGetIdleTaskMemory>
 800f2e8:	683c      	ldr	r4, [r7, #0]
 800f2ea:	687b      	ldr	r3, [r7, #4]
 800f2ec:	68ba      	ldr	r2, [r7, #8]
 800f2ee:	491e      	ldr	r1, [pc, #120]	; (800f368 <vTaskStartScheduler+0x9c>)
 800f2f0:	481e      	ldr	r0, [pc, #120]	; (800f36c <vTaskStartScheduler+0xa0>)
 800f2f2:	9202      	str	r2, [sp, #8]
 800f2f4:	9301      	str	r3, [sp, #4]
 800f2f6:	2300      	movs	r3, #0
 800f2f8:	9300      	str	r3, [sp, #0]
 800f2fa:	2300      	movs	r3, #0
 800f2fc:	0022      	movs	r2, r4
 800f2fe:	f7ff fcde 	bl	800ecbe <xTaskCreateStatic>
 800f302:	0002      	movs	r2, r0
 800f304:	4b1a      	ldr	r3, [pc, #104]	; (800f370 <vTaskStartScheduler+0xa4>)
 800f306:	601a      	str	r2, [r3, #0]
 800f308:	4b19      	ldr	r3, [pc, #100]	; (800f370 <vTaskStartScheduler+0xa4>)
 800f30a:	681b      	ldr	r3, [r3, #0]
 800f30c:	2b00      	cmp	r3, #0
 800f30e:	d002      	beq.n	800f316 <vTaskStartScheduler+0x4a>
 800f310:	2301      	movs	r3, #1
 800f312:	60fb      	str	r3, [r7, #12]
 800f314:	e001      	b.n	800f31a <vTaskStartScheduler+0x4e>
 800f316:	2300      	movs	r3, #0
 800f318:	60fb      	str	r3, [r7, #12]
 800f31a:	68fb      	ldr	r3, [r7, #12]
 800f31c:	2b01      	cmp	r3, #1
 800f31e:	d103      	bne.n	800f328 <vTaskStartScheduler+0x5c>
 800f320:	f000 fc98 	bl	800fc54 <xTimerCreateTimerTask>
 800f324:	0003      	movs	r3, r0
 800f326:	60fb      	str	r3, [r7, #12]
 800f328:	68fb      	ldr	r3, [r7, #12]
 800f32a:	2b01      	cmp	r3, #1
 800f32c:	d113      	bne.n	800f356 <vTaskStartScheduler+0x8a>
 800f32e:	b672      	cpsid	i
 800f330:	4b10      	ldr	r3, [pc, #64]	; (800f374 <vTaskStartScheduler+0xa8>)
 800f332:	681b      	ldr	r3, [r3, #0]
 800f334:	3354      	adds	r3, #84	; 0x54
 800f336:	001a      	movs	r2, r3
 800f338:	4b0f      	ldr	r3, [pc, #60]	; (800f378 <vTaskStartScheduler+0xac>)
 800f33a:	601a      	str	r2, [r3, #0]
 800f33c:	4b0f      	ldr	r3, [pc, #60]	; (800f37c <vTaskStartScheduler+0xb0>)
 800f33e:	2201      	movs	r2, #1
 800f340:	4252      	negs	r2, r2
 800f342:	601a      	str	r2, [r3, #0]
 800f344:	4b0e      	ldr	r3, [pc, #56]	; (800f380 <vTaskStartScheduler+0xb4>)
 800f346:	2201      	movs	r2, #1
 800f348:	601a      	str	r2, [r3, #0]
 800f34a:	4b0e      	ldr	r3, [pc, #56]	; (800f384 <vTaskStartScheduler+0xb8>)
 800f34c:	2200      	movs	r2, #0
 800f34e:	601a      	str	r2, [r3, #0]
 800f350:	f000 fffa 	bl	8010348 <xPortStartScheduler>
 800f354:	e004      	b.n	800f360 <vTaskStartScheduler+0x94>
 800f356:	68fb      	ldr	r3, [r7, #12]
 800f358:	3301      	adds	r3, #1
 800f35a:	d101      	bne.n	800f360 <vTaskStartScheduler+0x94>
 800f35c:	b672      	cpsid	i
 800f35e:	e7fe      	b.n	800f35e <vTaskStartScheduler+0x92>
 800f360:	46c0      	nop			; (mov r8, r8)
 800f362:	46bd      	mov	sp, r7
 800f364:	b005      	add	sp, #20
 800f366:	bd90      	pop	{r4, r7, pc}
 800f368:	08018a90 	.word	0x08018a90
 800f36c:	0800f905 	.word	0x0800f905
 800f370:	20000f90 	.word	0x20000f90
 800f374:	20000a98 	.word	0x20000a98
 800f378:	20000108 	.word	0x20000108
 800f37c:	20000f8c 	.word	0x20000f8c
 800f380:	20000f78 	.word	0x20000f78
 800f384:	20000f70 	.word	0x20000f70

0800f388 <vTaskSuspendAll>:
 800f388:	b580      	push	{r7, lr}
 800f38a:	af00      	add	r7, sp, #0
 800f38c:	4b03      	ldr	r3, [pc, #12]	; (800f39c <vTaskSuspendAll+0x14>)
 800f38e:	681b      	ldr	r3, [r3, #0]
 800f390:	1c5a      	adds	r2, r3, #1
 800f392:	4b02      	ldr	r3, [pc, #8]	; (800f39c <vTaskSuspendAll+0x14>)
 800f394:	601a      	str	r2, [r3, #0]
 800f396:	46c0      	nop			; (mov r8, r8)
 800f398:	46bd      	mov	sp, r7
 800f39a:	bd80      	pop	{r7, pc}
 800f39c:	20000f94 	.word	0x20000f94

0800f3a0 <xTaskResumeAll>:
 800f3a0:	b580      	push	{r7, lr}
 800f3a2:	b084      	sub	sp, #16
 800f3a4:	af00      	add	r7, sp, #0
 800f3a6:	2300      	movs	r3, #0
 800f3a8:	60fb      	str	r3, [r7, #12]
 800f3aa:	2300      	movs	r3, #0
 800f3ac:	60bb      	str	r3, [r7, #8]
 800f3ae:	4b3a      	ldr	r3, [pc, #232]	; (800f498 <xTaskResumeAll+0xf8>)
 800f3b0:	681b      	ldr	r3, [r3, #0]
 800f3b2:	2b00      	cmp	r3, #0
 800f3b4:	d101      	bne.n	800f3ba <xTaskResumeAll+0x1a>
 800f3b6:	b672      	cpsid	i
 800f3b8:	e7fe      	b.n	800f3b8 <xTaskResumeAll+0x18>
 800f3ba:	f000 fff9 	bl	80103b0 <vPortEnterCritical>
 800f3be:	4b36      	ldr	r3, [pc, #216]	; (800f498 <xTaskResumeAll+0xf8>)
 800f3c0:	681b      	ldr	r3, [r3, #0]
 800f3c2:	1e5a      	subs	r2, r3, #1
 800f3c4:	4b34      	ldr	r3, [pc, #208]	; (800f498 <xTaskResumeAll+0xf8>)
 800f3c6:	601a      	str	r2, [r3, #0]
 800f3c8:	4b33      	ldr	r3, [pc, #204]	; (800f498 <xTaskResumeAll+0xf8>)
 800f3ca:	681b      	ldr	r3, [r3, #0]
 800f3cc:	2b00      	cmp	r3, #0
 800f3ce:	d15b      	bne.n	800f488 <xTaskResumeAll+0xe8>
 800f3d0:	4b32      	ldr	r3, [pc, #200]	; (800f49c <xTaskResumeAll+0xfc>)
 800f3d2:	681b      	ldr	r3, [r3, #0]
 800f3d4:	2b00      	cmp	r3, #0
 800f3d6:	d057      	beq.n	800f488 <xTaskResumeAll+0xe8>
 800f3d8:	e02f      	b.n	800f43a <xTaskResumeAll+0x9a>
 800f3da:	4b31      	ldr	r3, [pc, #196]	; (800f4a0 <xTaskResumeAll+0x100>)
 800f3dc:	68db      	ldr	r3, [r3, #12]
 800f3de:	68db      	ldr	r3, [r3, #12]
 800f3e0:	60fb      	str	r3, [r7, #12]
 800f3e2:	68fb      	ldr	r3, [r7, #12]
 800f3e4:	3318      	adds	r3, #24
 800f3e6:	0018      	movs	r0, r3
 800f3e8:	f7fe ff7f 	bl	800e2ea <uxListRemove>
 800f3ec:	68fb      	ldr	r3, [r7, #12]
 800f3ee:	3304      	adds	r3, #4
 800f3f0:	0018      	movs	r0, r3
 800f3f2:	f7fe ff7a 	bl	800e2ea <uxListRemove>
 800f3f6:	68fb      	ldr	r3, [r7, #12]
 800f3f8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f3fa:	4b2a      	ldr	r3, [pc, #168]	; (800f4a4 <xTaskResumeAll+0x104>)
 800f3fc:	681b      	ldr	r3, [r3, #0]
 800f3fe:	429a      	cmp	r2, r3
 800f400:	d903      	bls.n	800f40a <xTaskResumeAll+0x6a>
 800f402:	68fb      	ldr	r3, [r7, #12]
 800f404:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f406:	4b27      	ldr	r3, [pc, #156]	; (800f4a4 <xTaskResumeAll+0x104>)
 800f408:	601a      	str	r2, [r3, #0]
 800f40a:	68fb      	ldr	r3, [r7, #12]
 800f40c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f40e:	0013      	movs	r3, r2
 800f410:	009b      	lsls	r3, r3, #2
 800f412:	189b      	adds	r3, r3, r2
 800f414:	009b      	lsls	r3, r3, #2
 800f416:	4a24      	ldr	r2, [pc, #144]	; (800f4a8 <xTaskResumeAll+0x108>)
 800f418:	189a      	adds	r2, r3, r2
 800f41a:	68fb      	ldr	r3, [r7, #12]
 800f41c:	3304      	adds	r3, #4
 800f41e:	0019      	movs	r1, r3
 800f420:	0010      	movs	r0, r2
 800f422:	f7fe ff0a 	bl	800e23a <vListInsertEnd>
 800f426:	68fb      	ldr	r3, [r7, #12]
 800f428:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f42a:	4b20      	ldr	r3, [pc, #128]	; (800f4ac <xTaskResumeAll+0x10c>)
 800f42c:	681b      	ldr	r3, [r3, #0]
 800f42e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f430:	429a      	cmp	r2, r3
 800f432:	d302      	bcc.n	800f43a <xTaskResumeAll+0x9a>
 800f434:	4b1e      	ldr	r3, [pc, #120]	; (800f4b0 <xTaskResumeAll+0x110>)
 800f436:	2201      	movs	r2, #1
 800f438:	601a      	str	r2, [r3, #0]
 800f43a:	4b19      	ldr	r3, [pc, #100]	; (800f4a0 <xTaskResumeAll+0x100>)
 800f43c:	681b      	ldr	r3, [r3, #0]
 800f43e:	2b00      	cmp	r3, #0
 800f440:	d1cb      	bne.n	800f3da <xTaskResumeAll+0x3a>
 800f442:	68fb      	ldr	r3, [r7, #12]
 800f444:	2b00      	cmp	r3, #0
 800f446:	d001      	beq.n	800f44c <xTaskResumeAll+0xac>
 800f448:	f000 fb0c 	bl	800fa64 <prvResetNextTaskUnblockTime>
 800f44c:	4b19      	ldr	r3, [pc, #100]	; (800f4b4 <xTaskResumeAll+0x114>)
 800f44e:	681b      	ldr	r3, [r3, #0]
 800f450:	607b      	str	r3, [r7, #4]
 800f452:	687b      	ldr	r3, [r7, #4]
 800f454:	2b00      	cmp	r3, #0
 800f456:	d00f      	beq.n	800f478 <xTaskResumeAll+0xd8>
 800f458:	f000 f83c 	bl	800f4d4 <xTaskIncrementTick>
 800f45c:	1e03      	subs	r3, r0, #0
 800f45e:	d002      	beq.n	800f466 <xTaskResumeAll+0xc6>
 800f460:	4b13      	ldr	r3, [pc, #76]	; (800f4b0 <xTaskResumeAll+0x110>)
 800f462:	2201      	movs	r2, #1
 800f464:	601a      	str	r2, [r3, #0]
 800f466:	687b      	ldr	r3, [r7, #4]
 800f468:	3b01      	subs	r3, #1
 800f46a:	607b      	str	r3, [r7, #4]
 800f46c:	687b      	ldr	r3, [r7, #4]
 800f46e:	2b00      	cmp	r3, #0
 800f470:	d1f2      	bne.n	800f458 <xTaskResumeAll+0xb8>
 800f472:	4b10      	ldr	r3, [pc, #64]	; (800f4b4 <xTaskResumeAll+0x114>)
 800f474:	2200      	movs	r2, #0
 800f476:	601a      	str	r2, [r3, #0]
 800f478:	4b0d      	ldr	r3, [pc, #52]	; (800f4b0 <xTaskResumeAll+0x110>)
 800f47a:	681b      	ldr	r3, [r3, #0]
 800f47c:	2b00      	cmp	r3, #0
 800f47e:	d003      	beq.n	800f488 <xTaskResumeAll+0xe8>
 800f480:	2301      	movs	r3, #1
 800f482:	60bb      	str	r3, [r7, #8]
 800f484:	f000 ff84 	bl	8010390 <vPortYield>
 800f488:	f000 ffa4 	bl	80103d4 <vPortExitCritical>
 800f48c:	68bb      	ldr	r3, [r7, #8]
 800f48e:	0018      	movs	r0, r3
 800f490:	46bd      	mov	sp, r7
 800f492:	b004      	add	sp, #16
 800f494:	bd80      	pop	{r7, pc}
 800f496:	46c0      	nop			; (mov r8, r8)
 800f498:	20000f94 	.word	0x20000f94
 800f49c:	20000f6c 	.word	0x20000f6c
 800f4a0:	20000f2c 	.word	0x20000f2c
 800f4a4:	20000f74 	.word	0x20000f74
 800f4a8:	20000a9c 	.word	0x20000a9c
 800f4ac:	20000a98 	.word	0x20000a98
 800f4b0:	20000f80 	.word	0x20000f80
 800f4b4:	20000f7c 	.word	0x20000f7c

0800f4b8 <xTaskGetTickCount>:
 800f4b8:	b580      	push	{r7, lr}
 800f4ba:	b082      	sub	sp, #8
 800f4bc:	af00      	add	r7, sp, #0
 800f4be:	4b04      	ldr	r3, [pc, #16]	; (800f4d0 <xTaskGetTickCount+0x18>)
 800f4c0:	681b      	ldr	r3, [r3, #0]
 800f4c2:	607b      	str	r3, [r7, #4]
 800f4c4:	687b      	ldr	r3, [r7, #4]
 800f4c6:	0018      	movs	r0, r3
 800f4c8:	46bd      	mov	sp, r7
 800f4ca:	b002      	add	sp, #8
 800f4cc:	bd80      	pop	{r7, pc}
 800f4ce:	46c0      	nop			; (mov r8, r8)
 800f4d0:	20000f70 	.word	0x20000f70

0800f4d4 <xTaskIncrementTick>:
 800f4d4:	b580      	push	{r7, lr}
 800f4d6:	b086      	sub	sp, #24
 800f4d8:	af00      	add	r7, sp, #0
 800f4da:	2300      	movs	r3, #0
 800f4dc:	617b      	str	r3, [r7, #20]
 800f4de:	4b4a      	ldr	r3, [pc, #296]	; (800f608 <xTaskIncrementTick+0x134>)
 800f4e0:	681b      	ldr	r3, [r3, #0]
 800f4e2:	2b00      	cmp	r3, #0
 800f4e4:	d000      	beq.n	800f4e8 <xTaskIncrementTick+0x14>
 800f4e6:	e084      	b.n	800f5f2 <xTaskIncrementTick+0x11e>
 800f4e8:	4b48      	ldr	r3, [pc, #288]	; (800f60c <xTaskIncrementTick+0x138>)
 800f4ea:	681b      	ldr	r3, [r3, #0]
 800f4ec:	3301      	adds	r3, #1
 800f4ee:	613b      	str	r3, [r7, #16]
 800f4f0:	4b46      	ldr	r3, [pc, #280]	; (800f60c <xTaskIncrementTick+0x138>)
 800f4f2:	693a      	ldr	r2, [r7, #16]
 800f4f4:	601a      	str	r2, [r3, #0]
 800f4f6:	693b      	ldr	r3, [r7, #16]
 800f4f8:	2b00      	cmp	r3, #0
 800f4fa:	d117      	bne.n	800f52c <xTaskIncrementTick+0x58>
 800f4fc:	4b44      	ldr	r3, [pc, #272]	; (800f610 <xTaskIncrementTick+0x13c>)
 800f4fe:	681b      	ldr	r3, [r3, #0]
 800f500:	681b      	ldr	r3, [r3, #0]
 800f502:	2b00      	cmp	r3, #0
 800f504:	d001      	beq.n	800f50a <xTaskIncrementTick+0x36>
 800f506:	b672      	cpsid	i
 800f508:	e7fe      	b.n	800f508 <xTaskIncrementTick+0x34>
 800f50a:	4b41      	ldr	r3, [pc, #260]	; (800f610 <xTaskIncrementTick+0x13c>)
 800f50c:	681b      	ldr	r3, [r3, #0]
 800f50e:	60fb      	str	r3, [r7, #12]
 800f510:	4b40      	ldr	r3, [pc, #256]	; (800f614 <xTaskIncrementTick+0x140>)
 800f512:	681a      	ldr	r2, [r3, #0]
 800f514:	4b3e      	ldr	r3, [pc, #248]	; (800f610 <xTaskIncrementTick+0x13c>)
 800f516:	601a      	str	r2, [r3, #0]
 800f518:	4b3e      	ldr	r3, [pc, #248]	; (800f614 <xTaskIncrementTick+0x140>)
 800f51a:	68fa      	ldr	r2, [r7, #12]
 800f51c:	601a      	str	r2, [r3, #0]
 800f51e:	4b3e      	ldr	r3, [pc, #248]	; (800f618 <xTaskIncrementTick+0x144>)
 800f520:	681b      	ldr	r3, [r3, #0]
 800f522:	1c5a      	adds	r2, r3, #1
 800f524:	4b3c      	ldr	r3, [pc, #240]	; (800f618 <xTaskIncrementTick+0x144>)
 800f526:	601a      	str	r2, [r3, #0]
 800f528:	f000 fa9c 	bl	800fa64 <prvResetNextTaskUnblockTime>
 800f52c:	4b3b      	ldr	r3, [pc, #236]	; (800f61c <xTaskIncrementTick+0x148>)
 800f52e:	681b      	ldr	r3, [r3, #0]
 800f530:	693a      	ldr	r2, [r7, #16]
 800f532:	429a      	cmp	r2, r3
 800f534:	d349      	bcc.n	800f5ca <xTaskIncrementTick+0xf6>
 800f536:	4b36      	ldr	r3, [pc, #216]	; (800f610 <xTaskIncrementTick+0x13c>)
 800f538:	681b      	ldr	r3, [r3, #0]
 800f53a:	681b      	ldr	r3, [r3, #0]
 800f53c:	2b00      	cmp	r3, #0
 800f53e:	d104      	bne.n	800f54a <xTaskIncrementTick+0x76>
 800f540:	4b36      	ldr	r3, [pc, #216]	; (800f61c <xTaskIncrementTick+0x148>)
 800f542:	2201      	movs	r2, #1
 800f544:	4252      	negs	r2, r2
 800f546:	601a      	str	r2, [r3, #0]
 800f548:	e03f      	b.n	800f5ca <xTaskIncrementTick+0xf6>
 800f54a:	4b31      	ldr	r3, [pc, #196]	; (800f610 <xTaskIncrementTick+0x13c>)
 800f54c:	681b      	ldr	r3, [r3, #0]
 800f54e:	68db      	ldr	r3, [r3, #12]
 800f550:	68db      	ldr	r3, [r3, #12]
 800f552:	60bb      	str	r3, [r7, #8]
 800f554:	68bb      	ldr	r3, [r7, #8]
 800f556:	685b      	ldr	r3, [r3, #4]
 800f558:	607b      	str	r3, [r7, #4]
 800f55a:	693a      	ldr	r2, [r7, #16]
 800f55c:	687b      	ldr	r3, [r7, #4]
 800f55e:	429a      	cmp	r2, r3
 800f560:	d203      	bcs.n	800f56a <xTaskIncrementTick+0x96>
 800f562:	4b2e      	ldr	r3, [pc, #184]	; (800f61c <xTaskIncrementTick+0x148>)
 800f564:	687a      	ldr	r2, [r7, #4]
 800f566:	601a      	str	r2, [r3, #0]
 800f568:	e02f      	b.n	800f5ca <xTaskIncrementTick+0xf6>
 800f56a:	68bb      	ldr	r3, [r7, #8]
 800f56c:	3304      	adds	r3, #4
 800f56e:	0018      	movs	r0, r3
 800f570:	f7fe febb 	bl	800e2ea <uxListRemove>
 800f574:	68bb      	ldr	r3, [r7, #8]
 800f576:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f578:	2b00      	cmp	r3, #0
 800f57a:	d004      	beq.n	800f586 <xTaskIncrementTick+0xb2>
 800f57c:	68bb      	ldr	r3, [r7, #8]
 800f57e:	3318      	adds	r3, #24
 800f580:	0018      	movs	r0, r3
 800f582:	f7fe feb2 	bl	800e2ea <uxListRemove>
 800f586:	68bb      	ldr	r3, [r7, #8]
 800f588:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f58a:	4b25      	ldr	r3, [pc, #148]	; (800f620 <xTaskIncrementTick+0x14c>)
 800f58c:	681b      	ldr	r3, [r3, #0]
 800f58e:	429a      	cmp	r2, r3
 800f590:	d903      	bls.n	800f59a <xTaskIncrementTick+0xc6>
 800f592:	68bb      	ldr	r3, [r7, #8]
 800f594:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f596:	4b22      	ldr	r3, [pc, #136]	; (800f620 <xTaskIncrementTick+0x14c>)
 800f598:	601a      	str	r2, [r3, #0]
 800f59a:	68bb      	ldr	r3, [r7, #8]
 800f59c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f59e:	0013      	movs	r3, r2
 800f5a0:	009b      	lsls	r3, r3, #2
 800f5a2:	189b      	adds	r3, r3, r2
 800f5a4:	009b      	lsls	r3, r3, #2
 800f5a6:	4a1f      	ldr	r2, [pc, #124]	; (800f624 <xTaskIncrementTick+0x150>)
 800f5a8:	189a      	adds	r2, r3, r2
 800f5aa:	68bb      	ldr	r3, [r7, #8]
 800f5ac:	3304      	adds	r3, #4
 800f5ae:	0019      	movs	r1, r3
 800f5b0:	0010      	movs	r0, r2
 800f5b2:	f7fe fe42 	bl	800e23a <vListInsertEnd>
 800f5b6:	68bb      	ldr	r3, [r7, #8]
 800f5b8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f5ba:	4b1b      	ldr	r3, [pc, #108]	; (800f628 <xTaskIncrementTick+0x154>)
 800f5bc:	681b      	ldr	r3, [r3, #0]
 800f5be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f5c0:	429a      	cmp	r2, r3
 800f5c2:	d3b8      	bcc.n	800f536 <xTaskIncrementTick+0x62>
 800f5c4:	2301      	movs	r3, #1
 800f5c6:	617b      	str	r3, [r7, #20]
 800f5c8:	e7b5      	b.n	800f536 <xTaskIncrementTick+0x62>
 800f5ca:	4b17      	ldr	r3, [pc, #92]	; (800f628 <xTaskIncrementTick+0x154>)
 800f5cc:	681b      	ldr	r3, [r3, #0]
 800f5ce:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f5d0:	4914      	ldr	r1, [pc, #80]	; (800f624 <xTaskIncrementTick+0x150>)
 800f5d2:	0013      	movs	r3, r2
 800f5d4:	009b      	lsls	r3, r3, #2
 800f5d6:	189b      	adds	r3, r3, r2
 800f5d8:	009b      	lsls	r3, r3, #2
 800f5da:	585b      	ldr	r3, [r3, r1]
 800f5dc:	2b01      	cmp	r3, #1
 800f5de:	d901      	bls.n	800f5e4 <xTaskIncrementTick+0x110>
 800f5e0:	2301      	movs	r3, #1
 800f5e2:	617b      	str	r3, [r7, #20]
 800f5e4:	4b11      	ldr	r3, [pc, #68]	; (800f62c <xTaskIncrementTick+0x158>)
 800f5e6:	681b      	ldr	r3, [r3, #0]
 800f5e8:	2b00      	cmp	r3, #0
 800f5ea:	d007      	beq.n	800f5fc <xTaskIncrementTick+0x128>
 800f5ec:	2301      	movs	r3, #1
 800f5ee:	617b      	str	r3, [r7, #20]
 800f5f0:	e004      	b.n	800f5fc <xTaskIncrementTick+0x128>
 800f5f2:	4b0f      	ldr	r3, [pc, #60]	; (800f630 <xTaskIncrementTick+0x15c>)
 800f5f4:	681b      	ldr	r3, [r3, #0]
 800f5f6:	1c5a      	adds	r2, r3, #1
 800f5f8:	4b0d      	ldr	r3, [pc, #52]	; (800f630 <xTaskIncrementTick+0x15c>)
 800f5fa:	601a      	str	r2, [r3, #0]
 800f5fc:	697b      	ldr	r3, [r7, #20]
 800f5fe:	0018      	movs	r0, r3
 800f600:	46bd      	mov	sp, r7
 800f602:	b006      	add	sp, #24
 800f604:	bd80      	pop	{r7, pc}
 800f606:	46c0      	nop			; (mov r8, r8)
 800f608:	20000f94 	.word	0x20000f94
 800f60c:	20000f70 	.word	0x20000f70
 800f610:	20000f24 	.word	0x20000f24
 800f614:	20000f28 	.word	0x20000f28
 800f618:	20000f84 	.word	0x20000f84
 800f61c:	20000f8c 	.word	0x20000f8c
 800f620:	20000f74 	.word	0x20000f74
 800f624:	20000a9c 	.word	0x20000a9c
 800f628:	20000a98 	.word	0x20000a98
 800f62c:	20000f80 	.word	0x20000f80
 800f630:	20000f7c 	.word	0x20000f7c

0800f634 <vTaskSwitchContext>:
 800f634:	b580      	push	{r7, lr}
 800f636:	b082      	sub	sp, #8
 800f638:	af00      	add	r7, sp, #0
 800f63a:	4b25      	ldr	r3, [pc, #148]	; (800f6d0 <vTaskSwitchContext+0x9c>)
 800f63c:	681b      	ldr	r3, [r3, #0]
 800f63e:	2b00      	cmp	r3, #0
 800f640:	d003      	beq.n	800f64a <vTaskSwitchContext+0x16>
 800f642:	4b24      	ldr	r3, [pc, #144]	; (800f6d4 <vTaskSwitchContext+0xa0>)
 800f644:	2201      	movs	r2, #1
 800f646:	601a      	str	r2, [r3, #0]
 800f648:	e03d      	b.n	800f6c6 <vTaskSwitchContext+0x92>
 800f64a:	4b22      	ldr	r3, [pc, #136]	; (800f6d4 <vTaskSwitchContext+0xa0>)
 800f64c:	2200      	movs	r2, #0
 800f64e:	601a      	str	r2, [r3, #0]
 800f650:	4b21      	ldr	r3, [pc, #132]	; (800f6d8 <vTaskSwitchContext+0xa4>)
 800f652:	681b      	ldr	r3, [r3, #0]
 800f654:	607b      	str	r3, [r7, #4]
 800f656:	e007      	b.n	800f668 <vTaskSwitchContext+0x34>
 800f658:	687b      	ldr	r3, [r7, #4]
 800f65a:	2b00      	cmp	r3, #0
 800f65c:	d101      	bne.n	800f662 <vTaskSwitchContext+0x2e>
 800f65e:	b672      	cpsid	i
 800f660:	e7fe      	b.n	800f660 <vTaskSwitchContext+0x2c>
 800f662:	687b      	ldr	r3, [r7, #4]
 800f664:	3b01      	subs	r3, #1
 800f666:	607b      	str	r3, [r7, #4]
 800f668:	491c      	ldr	r1, [pc, #112]	; (800f6dc <vTaskSwitchContext+0xa8>)
 800f66a:	687a      	ldr	r2, [r7, #4]
 800f66c:	0013      	movs	r3, r2
 800f66e:	009b      	lsls	r3, r3, #2
 800f670:	189b      	adds	r3, r3, r2
 800f672:	009b      	lsls	r3, r3, #2
 800f674:	585b      	ldr	r3, [r3, r1]
 800f676:	2b00      	cmp	r3, #0
 800f678:	d0ee      	beq.n	800f658 <vTaskSwitchContext+0x24>
 800f67a:	687a      	ldr	r2, [r7, #4]
 800f67c:	0013      	movs	r3, r2
 800f67e:	009b      	lsls	r3, r3, #2
 800f680:	189b      	adds	r3, r3, r2
 800f682:	009b      	lsls	r3, r3, #2
 800f684:	4a15      	ldr	r2, [pc, #84]	; (800f6dc <vTaskSwitchContext+0xa8>)
 800f686:	189b      	adds	r3, r3, r2
 800f688:	603b      	str	r3, [r7, #0]
 800f68a:	683b      	ldr	r3, [r7, #0]
 800f68c:	685b      	ldr	r3, [r3, #4]
 800f68e:	685a      	ldr	r2, [r3, #4]
 800f690:	683b      	ldr	r3, [r7, #0]
 800f692:	605a      	str	r2, [r3, #4]
 800f694:	683b      	ldr	r3, [r7, #0]
 800f696:	685a      	ldr	r2, [r3, #4]
 800f698:	683b      	ldr	r3, [r7, #0]
 800f69a:	3308      	adds	r3, #8
 800f69c:	429a      	cmp	r2, r3
 800f69e:	d104      	bne.n	800f6aa <vTaskSwitchContext+0x76>
 800f6a0:	683b      	ldr	r3, [r7, #0]
 800f6a2:	685b      	ldr	r3, [r3, #4]
 800f6a4:	685a      	ldr	r2, [r3, #4]
 800f6a6:	683b      	ldr	r3, [r7, #0]
 800f6a8:	605a      	str	r2, [r3, #4]
 800f6aa:	683b      	ldr	r3, [r7, #0]
 800f6ac:	685b      	ldr	r3, [r3, #4]
 800f6ae:	68da      	ldr	r2, [r3, #12]
 800f6b0:	4b0b      	ldr	r3, [pc, #44]	; (800f6e0 <vTaskSwitchContext+0xac>)
 800f6b2:	601a      	str	r2, [r3, #0]
 800f6b4:	4b08      	ldr	r3, [pc, #32]	; (800f6d8 <vTaskSwitchContext+0xa4>)
 800f6b6:	687a      	ldr	r2, [r7, #4]
 800f6b8:	601a      	str	r2, [r3, #0]
 800f6ba:	4b09      	ldr	r3, [pc, #36]	; (800f6e0 <vTaskSwitchContext+0xac>)
 800f6bc:	681b      	ldr	r3, [r3, #0]
 800f6be:	3354      	adds	r3, #84	; 0x54
 800f6c0:	001a      	movs	r2, r3
 800f6c2:	4b08      	ldr	r3, [pc, #32]	; (800f6e4 <vTaskSwitchContext+0xb0>)
 800f6c4:	601a      	str	r2, [r3, #0]
 800f6c6:	46c0      	nop			; (mov r8, r8)
 800f6c8:	46bd      	mov	sp, r7
 800f6ca:	b002      	add	sp, #8
 800f6cc:	bd80      	pop	{r7, pc}
 800f6ce:	46c0      	nop			; (mov r8, r8)
 800f6d0:	20000f94 	.word	0x20000f94
 800f6d4:	20000f80 	.word	0x20000f80
 800f6d8:	20000f74 	.word	0x20000f74
 800f6dc:	20000a9c 	.word	0x20000a9c
 800f6e0:	20000a98 	.word	0x20000a98
 800f6e4:	20000108 	.word	0x20000108

0800f6e8 <vTaskPlaceOnEventList>:
 800f6e8:	b580      	push	{r7, lr}
 800f6ea:	b082      	sub	sp, #8
 800f6ec:	af00      	add	r7, sp, #0
 800f6ee:	6078      	str	r0, [r7, #4]
 800f6f0:	6039      	str	r1, [r7, #0]
 800f6f2:	687b      	ldr	r3, [r7, #4]
 800f6f4:	2b00      	cmp	r3, #0
 800f6f6:	d101      	bne.n	800f6fc <vTaskPlaceOnEventList+0x14>
 800f6f8:	b672      	cpsid	i
 800f6fa:	e7fe      	b.n	800f6fa <vTaskPlaceOnEventList+0x12>
 800f6fc:	4b08      	ldr	r3, [pc, #32]	; (800f720 <vTaskPlaceOnEventList+0x38>)
 800f6fe:	681b      	ldr	r3, [r3, #0]
 800f700:	3318      	adds	r3, #24
 800f702:	001a      	movs	r2, r3
 800f704:	687b      	ldr	r3, [r7, #4]
 800f706:	0011      	movs	r1, r2
 800f708:	0018      	movs	r0, r3
 800f70a:	f7fe fdb8 	bl	800e27e <vListInsert>
 800f70e:	683b      	ldr	r3, [r7, #0]
 800f710:	2101      	movs	r1, #1
 800f712:	0018      	movs	r0, r3
 800f714:	f000 fa4a 	bl	800fbac <prvAddCurrentTaskToDelayedList>
 800f718:	46c0      	nop			; (mov r8, r8)
 800f71a:	46bd      	mov	sp, r7
 800f71c:	b002      	add	sp, #8
 800f71e:	bd80      	pop	{r7, pc}
 800f720:	20000a98 	.word	0x20000a98

0800f724 <vTaskPlaceOnEventListRestricted>:
 800f724:	b580      	push	{r7, lr}
 800f726:	b084      	sub	sp, #16
 800f728:	af00      	add	r7, sp, #0
 800f72a:	60f8      	str	r0, [r7, #12]
 800f72c:	60b9      	str	r1, [r7, #8]
 800f72e:	607a      	str	r2, [r7, #4]
 800f730:	68fb      	ldr	r3, [r7, #12]
 800f732:	2b00      	cmp	r3, #0
 800f734:	d101      	bne.n	800f73a <vTaskPlaceOnEventListRestricted+0x16>
 800f736:	b672      	cpsid	i
 800f738:	e7fe      	b.n	800f738 <vTaskPlaceOnEventListRestricted+0x14>
 800f73a:	4b0c      	ldr	r3, [pc, #48]	; (800f76c <vTaskPlaceOnEventListRestricted+0x48>)
 800f73c:	681b      	ldr	r3, [r3, #0]
 800f73e:	3318      	adds	r3, #24
 800f740:	001a      	movs	r2, r3
 800f742:	68fb      	ldr	r3, [r7, #12]
 800f744:	0011      	movs	r1, r2
 800f746:	0018      	movs	r0, r3
 800f748:	f7fe fd77 	bl	800e23a <vListInsertEnd>
 800f74c:	687b      	ldr	r3, [r7, #4]
 800f74e:	2b00      	cmp	r3, #0
 800f750:	d002      	beq.n	800f758 <vTaskPlaceOnEventListRestricted+0x34>
 800f752:	2301      	movs	r3, #1
 800f754:	425b      	negs	r3, r3
 800f756:	60bb      	str	r3, [r7, #8]
 800f758:	687a      	ldr	r2, [r7, #4]
 800f75a:	68bb      	ldr	r3, [r7, #8]
 800f75c:	0011      	movs	r1, r2
 800f75e:	0018      	movs	r0, r3
 800f760:	f000 fa24 	bl	800fbac <prvAddCurrentTaskToDelayedList>
 800f764:	46c0      	nop			; (mov r8, r8)
 800f766:	46bd      	mov	sp, r7
 800f768:	b004      	add	sp, #16
 800f76a:	bd80      	pop	{r7, pc}
 800f76c:	20000a98 	.word	0x20000a98

0800f770 <xTaskRemoveFromEventList>:
 800f770:	b580      	push	{r7, lr}
 800f772:	b084      	sub	sp, #16
 800f774:	af00      	add	r7, sp, #0
 800f776:	6078      	str	r0, [r7, #4]
 800f778:	687b      	ldr	r3, [r7, #4]
 800f77a:	68db      	ldr	r3, [r3, #12]
 800f77c:	68db      	ldr	r3, [r3, #12]
 800f77e:	60bb      	str	r3, [r7, #8]
 800f780:	68bb      	ldr	r3, [r7, #8]
 800f782:	2b00      	cmp	r3, #0
 800f784:	d101      	bne.n	800f78a <xTaskRemoveFromEventList+0x1a>
 800f786:	b672      	cpsid	i
 800f788:	e7fe      	b.n	800f788 <xTaskRemoveFromEventList+0x18>
 800f78a:	68bb      	ldr	r3, [r7, #8]
 800f78c:	3318      	adds	r3, #24
 800f78e:	0018      	movs	r0, r3
 800f790:	f7fe fdab 	bl	800e2ea <uxListRemove>
 800f794:	4b1e      	ldr	r3, [pc, #120]	; (800f810 <xTaskRemoveFromEventList+0xa0>)
 800f796:	681b      	ldr	r3, [r3, #0]
 800f798:	2b00      	cmp	r3, #0
 800f79a:	d11d      	bne.n	800f7d8 <xTaskRemoveFromEventList+0x68>
 800f79c:	68bb      	ldr	r3, [r7, #8]
 800f79e:	3304      	adds	r3, #4
 800f7a0:	0018      	movs	r0, r3
 800f7a2:	f7fe fda2 	bl	800e2ea <uxListRemove>
 800f7a6:	68bb      	ldr	r3, [r7, #8]
 800f7a8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f7aa:	4b1a      	ldr	r3, [pc, #104]	; (800f814 <xTaskRemoveFromEventList+0xa4>)
 800f7ac:	681b      	ldr	r3, [r3, #0]
 800f7ae:	429a      	cmp	r2, r3
 800f7b0:	d903      	bls.n	800f7ba <xTaskRemoveFromEventList+0x4a>
 800f7b2:	68bb      	ldr	r3, [r7, #8]
 800f7b4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f7b6:	4b17      	ldr	r3, [pc, #92]	; (800f814 <xTaskRemoveFromEventList+0xa4>)
 800f7b8:	601a      	str	r2, [r3, #0]
 800f7ba:	68bb      	ldr	r3, [r7, #8]
 800f7bc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f7be:	0013      	movs	r3, r2
 800f7c0:	009b      	lsls	r3, r3, #2
 800f7c2:	189b      	adds	r3, r3, r2
 800f7c4:	009b      	lsls	r3, r3, #2
 800f7c6:	4a14      	ldr	r2, [pc, #80]	; (800f818 <xTaskRemoveFromEventList+0xa8>)
 800f7c8:	189a      	adds	r2, r3, r2
 800f7ca:	68bb      	ldr	r3, [r7, #8]
 800f7cc:	3304      	adds	r3, #4
 800f7ce:	0019      	movs	r1, r3
 800f7d0:	0010      	movs	r0, r2
 800f7d2:	f7fe fd32 	bl	800e23a <vListInsertEnd>
 800f7d6:	e007      	b.n	800f7e8 <xTaskRemoveFromEventList+0x78>
 800f7d8:	68bb      	ldr	r3, [r7, #8]
 800f7da:	3318      	adds	r3, #24
 800f7dc:	001a      	movs	r2, r3
 800f7de:	4b0f      	ldr	r3, [pc, #60]	; (800f81c <xTaskRemoveFromEventList+0xac>)
 800f7e0:	0011      	movs	r1, r2
 800f7e2:	0018      	movs	r0, r3
 800f7e4:	f7fe fd29 	bl	800e23a <vListInsertEnd>
 800f7e8:	68bb      	ldr	r3, [r7, #8]
 800f7ea:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f7ec:	4b0c      	ldr	r3, [pc, #48]	; (800f820 <xTaskRemoveFromEventList+0xb0>)
 800f7ee:	681b      	ldr	r3, [r3, #0]
 800f7f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f7f2:	429a      	cmp	r2, r3
 800f7f4:	d905      	bls.n	800f802 <xTaskRemoveFromEventList+0x92>
 800f7f6:	2301      	movs	r3, #1
 800f7f8:	60fb      	str	r3, [r7, #12]
 800f7fa:	4b0a      	ldr	r3, [pc, #40]	; (800f824 <xTaskRemoveFromEventList+0xb4>)
 800f7fc:	2201      	movs	r2, #1
 800f7fe:	601a      	str	r2, [r3, #0]
 800f800:	e001      	b.n	800f806 <xTaskRemoveFromEventList+0x96>
 800f802:	2300      	movs	r3, #0
 800f804:	60fb      	str	r3, [r7, #12]
 800f806:	68fb      	ldr	r3, [r7, #12]
 800f808:	0018      	movs	r0, r3
 800f80a:	46bd      	mov	sp, r7
 800f80c:	b004      	add	sp, #16
 800f80e:	bd80      	pop	{r7, pc}
 800f810:	20000f94 	.word	0x20000f94
 800f814:	20000f74 	.word	0x20000f74
 800f818:	20000a9c 	.word	0x20000a9c
 800f81c:	20000f2c 	.word	0x20000f2c
 800f820:	20000a98 	.word	0x20000a98
 800f824:	20000f80 	.word	0x20000f80

0800f828 <vTaskInternalSetTimeOutState>:
 800f828:	b580      	push	{r7, lr}
 800f82a:	b082      	sub	sp, #8
 800f82c:	af00      	add	r7, sp, #0
 800f82e:	6078      	str	r0, [r7, #4]
 800f830:	4b05      	ldr	r3, [pc, #20]	; (800f848 <vTaskInternalSetTimeOutState+0x20>)
 800f832:	681a      	ldr	r2, [r3, #0]
 800f834:	687b      	ldr	r3, [r7, #4]
 800f836:	601a      	str	r2, [r3, #0]
 800f838:	4b04      	ldr	r3, [pc, #16]	; (800f84c <vTaskInternalSetTimeOutState+0x24>)
 800f83a:	681a      	ldr	r2, [r3, #0]
 800f83c:	687b      	ldr	r3, [r7, #4]
 800f83e:	605a      	str	r2, [r3, #4]
 800f840:	46c0      	nop			; (mov r8, r8)
 800f842:	46bd      	mov	sp, r7
 800f844:	b002      	add	sp, #8
 800f846:	bd80      	pop	{r7, pc}
 800f848:	20000f84 	.word	0x20000f84
 800f84c:	20000f70 	.word	0x20000f70

0800f850 <xTaskCheckForTimeOut>:
 800f850:	b580      	push	{r7, lr}
 800f852:	b086      	sub	sp, #24
 800f854:	af00      	add	r7, sp, #0
 800f856:	6078      	str	r0, [r7, #4]
 800f858:	6039      	str	r1, [r7, #0]
 800f85a:	687b      	ldr	r3, [r7, #4]
 800f85c:	2b00      	cmp	r3, #0
 800f85e:	d101      	bne.n	800f864 <xTaskCheckForTimeOut+0x14>
 800f860:	b672      	cpsid	i
 800f862:	e7fe      	b.n	800f862 <xTaskCheckForTimeOut+0x12>
 800f864:	683b      	ldr	r3, [r7, #0]
 800f866:	2b00      	cmp	r3, #0
 800f868:	d101      	bne.n	800f86e <xTaskCheckForTimeOut+0x1e>
 800f86a:	b672      	cpsid	i
 800f86c:	e7fe      	b.n	800f86c <xTaskCheckForTimeOut+0x1c>
 800f86e:	f000 fd9f 	bl	80103b0 <vPortEnterCritical>
 800f872:	4b1d      	ldr	r3, [pc, #116]	; (800f8e8 <xTaskCheckForTimeOut+0x98>)
 800f874:	681b      	ldr	r3, [r3, #0]
 800f876:	613b      	str	r3, [r7, #16]
 800f878:	687b      	ldr	r3, [r7, #4]
 800f87a:	685b      	ldr	r3, [r3, #4]
 800f87c:	693a      	ldr	r2, [r7, #16]
 800f87e:	1ad3      	subs	r3, r2, r3
 800f880:	60fb      	str	r3, [r7, #12]
 800f882:	683b      	ldr	r3, [r7, #0]
 800f884:	681b      	ldr	r3, [r3, #0]
 800f886:	3301      	adds	r3, #1
 800f888:	d102      	bne.n	800f890 <xTaskCheckForTimeOut+0x40>
 800f88a:	2300      	movs	r3, #0
 800f88c:	617b      	str	r3, [r7, #20]
 800f88e:	e024      	b.n	800f8da <xTaskCheckForTimeOut+0x8a>
 800f890:	687b      	ldr	r3, [r7, #4]
 800f892:	681a      	ldr	r2, [r3, #0]
 800f894:	4b15      	ldr	r3, [pc, #84]	; (800f8ec <xTaskCheckForTimeOut+0x9c>)
 800f896:	681b      	ldr	r3, [r3, #0]
 800f898:	429a      	cmp	r2, r3
 800f89a:	d007      	beq.n	800f8ac <xTaskCheckForTimeOut+0x5c>
 800f89c:	687b      	ldr	r3, [r7, #4]
 800f89e:	685b      	ldr	r3, [r3, #4]
 800f8a0:	693a      	ldr	r2, [r7, #16]
 800f8a2:	429a      	cmp	r2, r3
 800f8a4:	d302      	bcc.n	800f8ac <xTaskCheckForTimeOut+0x5c>
 800f8a6:	2301      	movs	r3, #1
 800f8a8:	617b      	str	r3, [r7, #20]
 800f8aa:	e016      	b.n	800f8da <xTaskCheckForTimeOut+0x8a>
 800f8ac:	683b      	ldr	r3, [r7, #0]
 800f8ae:	681b      	ldr	r3, [r3, #0]
 800f8b0:	68fa      	ldr	r2, [r7, #12]
 800f8b2:	429a      	cmp	r2, r3
 800f8b4:	d20c      	bcs.n	800f8d0 <xTaskCheckForTimeOut+0x80>
 800f8b6:	683b      	ldr	r3, [r7, #0]
 800f8b8:	681a      	ldr	r2, [r3, #0]
 800f8ba:	68fb      	ldr	r3, [r7, #12]
 800f8bc:	1ad2      	subs	r2, r2, r3
 800f8be:	683b      	ldr	r3, [r7, #0]
 800f8c0:	601a      	str	r2, [r3, #0]
 800f8c2:	687b      	ldr	r3, [r7, #4]
 800f8c4:	0018      	movs	r0, r3
 800f8c6:	f7ff ffaf 	bl	800f828 <vTaskInternalSetTimeOutState>
 800f8ca:	2300      	movs	r3, #0
 800f8cc:	617b      	str	r3, [r7, #20]
 800f8ce:	e004      	b.n	800f8da <xTaskCheckForTimeOut+0x8a>
 800f8d0:	683b      	ldr	r3, [r7, #0]
 800f8d2:	2200      	movs	r2, #0
 800f8d4:	601a      	str	r2, [r3, #0]
 800f8d6:	2301      	movs	r3, #1
 800f8d8:	617b      	str	r3, [r7, #20]
 800f8da:	f000 fd7b 	bl	80103d4 <vPortExitCritical>
 800f8de:	697b      	ldr	r3, [r7, #20]
 800f8e0:	0018      	movs	r0, r3
 800f8e2:	46bd      	mov	sp, r7
 800f8e4:	b006      	add	sp, #24
 800f8e6:	bd80      	pop	{r7, pc}
 800f8e8:	20000f70 	.word	0x20000f70
 800f8ec:	20000f84 	.word	0x20000f84

0800f8f0 <vTaskMissedYield>:
 800f8f0:	b580      	push	{r7, lr}
 800f8f2:	af00      	add	r7, sp, #0
 800f8f4:	4b02      	ldr	r3, [pc, #8]	; (800f900 <vTaskMissedYield+0x10>)
 800f8f6:	2201      	movs	r2, #1
 800f8f8:	601a      	str	r2, [r3, #0]
 800f8fa:	46c0      	nop			; (mov r8, r8)
 800f8fc:	46bd      	mov	sp, r7
 800f8fe:	bd80      	pop	{r7, pc}
 800f900:	20000f80 	.word	0x20000f80

0800f904 <prvIdleTask>:
 800f904:	b580      	push	{r7, lr}
 800f906:	b082      	sub	sp, #8
 800f908:	af00      	add	r7, sp, #0
 800f90a:	6078      	str	r0, [r7, #4]
 800f90c:	f000 f84e 	bl	800f9ac <prvCheckTasksWaitingTermination>
 800f910:	4b03      	ldr	r3, [pc, #12]	; (800f920 <prvIdleTask+0x1c>)
 800f912:	681b      	ldr	r3, [r3, #0]
 800f914:	2b01      	cmp	r3, #1
 800f916:	d9f9      	bls.n	800f90c <prvIdleTask+0x8>
 800f918:	f000 fd3a 	bl	8010390 <vPortYield>
 800f91c:	e7f6      	b.n	800f90c <prvIdleTask+0x8>
 800f91e:	46c0      	nop			; (mov r8, r8)
 800f920:	20000a9c 	.word	0x20000a9c

0800f924 <prvInitialiseTaskLists>:
 800f924:	b580      	push	{r7, lr}
 800f926:	b082      	sub	sp, #8
 800f928:	af00      	add	r7, sp, #0
 800f92a:	2300      	movs	r3, #0
 800f92c:	607b      	str	r3, [r7, #4]
 800f92e:	e00c      	b.n	800f94a <prvInitialiseTaskLists+0x26>
 800f930:	687a      	ldr	r2, [r7, #4]
 800f932:	0013      	movs	r3, r2
 800f934:	009b      	lsls	r3, r3, #2
 800f936:	189b      	adds	r3, r3, r2
 800f938:	009b      	lsls	r3, r3, #2
 800f93a:	4a14      	ldr	r2, [pc, #80]	; (800f98c <prvInitialiseTaskLists+0x68>)
 800f93c:	189b      	adds	r3, r3, r2
 800f93e:	0018      	movs	r0, r3
 800f940:	f7fe fc52 	bl	800e1e8 <vListInitialise>
 800f944:	687b      	ldr	r3, [r7, #4]
 800f946:	3301      	adds	r3, #1
 800f948:	607b      	str	r3, [r7, #4]
 800f94a:	687b      	ldr	r3, [r7, #4]
 800f94c:	2b37      	cmp	r3, #55	; 0x37
 800f94e:	d9ef      	bls.n	800f930 <prvInitialiseTaskLists+0xc>
 800f950:	4b0f      	ldr	r3, [pc, #60]	; (800f990 <prvInitialiseTaskLists+0x6c>)
 800f952:	0018      	movs	r0, r3
 800f954:	f7fe fc48 	bl	800e1e8 <vListInitialise>
 800f958:	4b0e      	ldr	r3, [pc, #56]	; (800f994 <prvInitialiseTaskLists+0x70>)
 800f95a:	0018      	movs	r0, r3
 800f95c:	f7fe fc44 	bl	800e1e8 <vListInitialise>
 800f960:	4b0d      	ldr	r3, [pc, #52]	; (800f998 <prvInitialiseTaskLists+0x74>)
 800f962:	0018      	movs	r0, r3
 800f964:	f7fe fc40 	bl	800e1e8 <vListInitialise>
 800f968:	4b0c      	ldr	r3, [pc, #48]	; (800f99c <prvInitialiseTaskLists+0x78>)
 800f96a:	0018      	movs	r0, r3
 800f96c:	f7fe fc3c 	bl	800e1e8 <vListInitialise>
 800f970:	4b0b      	ldr	r3, [pc, #44]	; (800f9a0 <prvInitialiseTaskLists+0x7c>)
 800f972:	0018      	movs	r0, r3
 800f974:	f7fe fc38 	bl	800e1e8 <vListInitialise>
 800f978:	4b0a      	ldr	r3, [pc, #40]	; (800f9a4 <prvInitialiseTaskLists+0x80>)
 800f97a:	4a05      	ldr	r2, [pc, #20]	; (800f990 <prvInitialiseTaskLists+0x6c>)
 800f97c:	601a      	str	r2, [r3, #0]
 800f97e:	4b0a      	ldr	r3, [pc, #40]	; (800f9a8 <prvInitialiseTaskLists+0x84>)
 800f980:	4a04      	ldr	r2, [pc, #16]	; (800f994 <prvInitialiseTaskLists+0x70>)
 800f982:	601a      	str	r2, [r3, #0]
 800f984:	46c0      	nop			; (mov r8, r8)
 800f986:	46bd      	mov	sp, r7
 800f988:	b002      	add	sp, #8
 800f98a:	bd80      	pop	{r7, pc}
 800f98c:	20000a9c 	.word	0x20000a9c
 800f990:	20000efc 	.word	0x20000efc
 800f994:	20000f10 	.word	0x20000f10
 800f998:	20000f2c 	.word	0x20000f2c
 800f99c:	20000f40 	.word	0x20000f40
 800f9a0:	20000f58 	.word	0x20000f58
 800f9a4:	20000f24 	.word	0x20000f24
 800f9a8:	20000f28 	.word	0x20000f28

0800f9ac <prvCheckTasksWaitingTermination>:
 800f9ac:	b580      	push	{r7, lr}
 800f9ae:	b082      	sub	sp, #8
 800f9b0:	af00      	add	r7, sp, #0
 800f9b2:	e01a      	b.n	800f9ea <prvCheckTasksWaitingTermination+0x3e>
 800f9b4:	f000 fcfc 	bl	80103b0 <vPortEnterCritical>
 800f9b8:	4b10      	ldr	r3, [pc, #64]	; (800f9fc <prvCheckTasksWaitingTermination+0x50>)
 800f9ba:	68db      	ldr	r3, [r3, #12]
 800f9bc:	68db      	ldr	r3, [r3, #12]
 800f9be:	607b      	str	r3, [r7, #4]
 800f9c0:	687b      	ldr	r3, [r7, #4]
 800f9c2:	3304      	adds	r3, #4
 800f9c4:	0018      	movs	r0, r3
 800f9c6:	f7fe fc90 	bl	800e2ea <uxListRemove>
 800f9ca:	4b0d      	ldr	r3, [pc, #52]	; (800fa00 <prvCheckTasksWaitingTermination+0x54>)
 800f9cc:	681b      	ldr	r3, [r3, #0]
 800f9ce:	1e5a      	subs	r2, r3, #1
 800f9d0:	4b0b      	ldr	r3, [pc, #44]	; (800fa00 <prvCheckTasksWaitingTermination+0x54>)
 800f9d2:	601a      	str	r2, [r3, #0]
 800f9d4:	4b0b      	ldr	r3, [pc, #44]	; (800fa04 <prvCheckTasksWaitingTermination+0x58>)
 800f9d6:	681b      	ldr	r3, [r3, #0]
 800f9d8:	1e5a      	subs	r2, r3, #1
 800f9da:	4b0a      	ldr	r3, [pc, #40]	; (800fa04 <prvCheckTasksWaitingTermination+0x58>)
 800f9dc:	601a      	str	r2, [r3, #0]
 800f9de:	f000 fcf9 	bl	80103d4 <vPortExitCritical>
 800f9e2:	687b      	ldr	r3, [r7, #4]
 800f9e4:	0018      	movs	r0, r3
 800f9e6:	f000 f80f 	bl	800fa08 <prvDeleteTCB>
 800f9ea:	4b06      	ldr	r3, [pc, #24]	; (800fa04 <prvCheckTasksWaitingTermination+0x58>)
 800f9ec:	681b      	ldr	r3, [r3, #0]
 800f9ee:	2b00      	cmp	r3, #0
 800f9f0:	d1e0      	bne.n	800f9b4 <prvCheckTasksWaitingTermination+0x8>
 800f9f2:	46c0      	nop			; (mov r8, r8)
 800f9f4:	46c0      	nop			; (mov r8, r8)
 800f9f6:	46bd      	mov	sp, r7
 800f9f8:	b002      	add	sp, #8
 800f9fa:	bd80      	pop	{r7, pc}
 800f9fc:	20000f40 	.word	0x20000f40
 800fa00:	20000f6c 	.word	0x20000f6c
 800fa04:	20000f54 	.word	0x20000f54

0800fa08 <prvDeleteTCB>:
 800fa08:	b580      	push	{r7, lr}
 800fa0a:	b082      	sub	sp, #8
 800fa0c:	af00      	add	r7, sp, #0
 800fa0e:	6078      	str	r0, [r7, #4]
 800fa10:	687b      	ldr	r3, [r7, #4]
 800fa12:	3354      	adds	r3, #84	; 0x54
 800fa14:	0018      	movs	r0, r3
 800fa16:	f008 fbdd 	bl	80181d4 <_reclaim_reent>
 800fa1a:	687b      	ldr	r3, [r7, #4]
 800fa1c:	22a5      	movs	r2, #165	; 0xa5
 800fa1e:	5c9b      	ldrb	r3, [r3, r2]
 800fa20:	2b00      	cmp	r3, #0
 800fa22:	d109      	bne.n	800fa38 <prvDeleteTCB+0x30>
 800fa24:	687b      	ldr	r3, [r7, #4]
 800fa26:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800fa28:	0018      	movs	r0, r3
 800fa2a:	f000 fe05 	bl	8010638 <vPortFree>
 800fa2e:	687b      	ldr	r3, [r7, #4]
 800fa30:	0018      	movs	r0, r3
 800fa32:	f000 fe01 	bl	8010638 <vPortFree>
 800fa36:	e010      	b.n	800fa5a <prvDeleteTCB+0x52>
 800fa38:	687b      	ldr	r3, [r7, #4]
 800fa3a:	22a5      	movs	r2, #165	; 0xa5
 800fa3c:	5c9b      	ldrb	r3, [r3, r2]
 800fa3e:	2b01      	cmp	r3, #1
 800fa40:	d104      	bne.n	800fa4c <prvDeleteTCB+0x44>
 800fa42:	687b      	ldr	r3, [r7, #4]
 800fa44:	0018      	movs	r0, r3
 800fa46:	f000 fdf7 	bl	8010638 <vPortFree>
 800fa4a:	e006      	b.n	800fa5a <prvDeleteTCB+0x52>
 800fa4c:	687b      	ldr	r3, [r7, #4]
 800fa4e:	22a5      	movs	r2, #165	; 0xa5
 800fa50:	5c9b      	ldrb	r3, [r3, r2]
 800fa52:	2b02      	cmp	r3, #2
 800fa54:	d001      	beq.n	800fa5a <prvDeleteTCB+0x52>
 800fa56:	b672      	cpsid	i
 800fa58:	e7fe      	b.n	800fa58 <prvDeleteTCB+0x50>
 800fa5a:	46c0      	nop			; (mov r8, r8)
 800fa5c:	46bd      	mov	sp, r7
 800fa5e:	b002      	add	sp, #8
 800fa60:	bd80      	pop	{r7, pc}
	...

0800fa64 <prvResetNextTaskUnblockTime>:
 800fa64:	b580      	push	{r7, lr}
 800fa66:	b082      	sub	sp, #8
 800fa68:	af00      	add	r7, sp, #0
 800fa6a:	4b0b      	ldr	r3, [pc, #44]	; (800fa98 <prvResetNextTaskUnblockTime+0x34>)
 800fa6c:	681b      	ldr	r3, [r3, #0]
 800fa6e:	681b      	ldr	r3, [r3, #0]
 800fa70:	2b00      	cmp	r3, #0
 800fa72:	d104      	bne.n	800fa7e <prvResetNextTaskUnblockTime+0x1a>
 800fa74:	4b09      	ldr	r3, [pc, #36]	; (800fa9c <prvResetNextTaskUnblockTime+0x38>)
 800fa76:	2201      	movs	r2, #1
 800fa78:	4252      	negs	r2, r2
 800fa7a:	601a      	str	r2, [r3, #0]
 800fa7c:	e008      	b.n	800fa90 <prvResetNextTaskUnblockTime+0x2c>
 800fa7e:	4b06      	ldr	r3, [pc, #24]	; (800fa98 <prvResetNextTaskUnblockTime+0x34>)
 800fa80:	681b      	ldr	r3, [r3, #0]
 800fa82:	68db      	ldr	r3, [r3, #12]
 800fa84:	68db      	ldr	r3, [r3, #12]
 800fa86:	607b      	str	r3, [r7, #4]
 800fa88:	687b      	ldr	r3, [r7, #4]
 800fa8a:	685a      	ldr	r2, [r3, #4]
 800fa8c:	4b03      	ldr	r3, [pc, #12]	; (800fa9c <prvResetNextTaskUnblockTime+0x38>)
 800fa8e:	601a      	str	r2, [r3, #0]
 800fa90:	46c0      	nop			; (mov r8, r8)
 800fa92:	46bd      	mov	sp, r7
 800fa94:	b002      	add	sp, #8
 800fa96:	bd80      	pop	{r7, pc}
 800fa98:	20000f24 	.word	0x20000f24
 800fa9c:	20000f8c 	.word	0x20000f8c

0800faa0 <xTaskGetCurrentTaskHandle>:
 800faa0:	b580      	push	{r7, lr}
 800faa2:	b082      	sub	sp, #8
 800faa4:	af00      	add	r7, sp, #0
 800faa6:	4b04      	ldr	r3, [pc, #16]	; (800fab8 <xTaskGetCurrentTaskHandle+0x18>)
 800faa8:	681b      	ldr	r3, [r3, #0]
 800faaa:	607b      	str	r3, [r7, #4]
 800faac:	687b      	ldr	r3, [r7, #4]
 800faae:	0018      	movs	r0, r3
 800fab0:	46bd      	mov	sp, r7
 800fab2:	b002      	add	sp, #8
 800fab4:	bd80      	pop	{r7, pc}
 800fab6:	46c0      	nop			; (mov r8, r8)
 800fab8:	20000a98 	.word	0x20000a98

0800fabc <xTaskGetSchedulerState>:
 800fabc:	b580      	push	{r7, lr}
 800fabe:	b082      	sub	sp, #8
 800fac0:	af00      	add	r7, sp, #0
 800fac2:	4b0a      	ldr	r3, [pc, #40]	; (800faec <xTaskGetSchedulerState+0x30>)
 800fac4:	681b      	ldr	r3, [r3, #0]
 800fac6:	2b00      	cmp	r3, #0
 800fac8:	d102      	bne.n	800fad0 <xTaskGetSchedulerState+0x14>
 800faca:	2301      	movs	r3, #1
 800facc:	607b      	str	r3, [r7, #4]
 800face:	e008      	b.n	800fae2 <xTaskGetSchedulerState+0x26>
 800fad0:	4b07      	ldr	r3, [pc, #28]	; (800faf0 <xTaskGetSchedulerState+0x34>)
 800fad2:	681b      	ldr	r3, [r3, #0]
 800fad4:	2b00      	cmp	r3, #0
 800fad6:	d102      	bne.n	800fade <xTaskGetSchedulerState+0x22>
 800fad8:	2302      	movs	r3, #2
 800fada:	607b      	str	r3, [r7, #4]
 800fadc:	e001      	b.n	800fae2 <xTaskGetSchedulerState+0x26>
 800fade:	2300      	movs	r3, #0
 800fae0:	607b      	str	r3, [r7, #4]
 800fae2:	687b      	ldr	r3, [r7, #4]
 800fae4:	0018      	movs	r0, r3
 800fae6:	46bd      	mov	sp, r7
 800fae8:	b002      	add	sp, #8
 800faea:	bd80      	pop	{r7, pc}
 800faec:	20000f78 	.word	0x20000f78
 800faf0:	20000f94 	.word	0x20000f94

0800faf4 <xTaskPriorityDisinherit>:
 800faf4:	b580      	push	{r7, lr}
 800faf6:	b084      	sub	sp, #16
 800faf8:	af00      	add	r7, sp, #0
 800fafa:	6078      	str	r0, [r7, #4]
 800fafc:	687b      	ldr	r3, [r7, #4]
 800fafe:	60bb      	str	r3, [r7, #8]
 800fb00:	2300      	movs	r3, #0
 800fb02:	60fb      	str	r3, [r7, #12]
 800fb04:	687b      	ldr	r3, [r7, #4]
 800fb06:	2b00      	cmp	r3, #0
 800fb08:	d044      	beq.n	800fb94 <xTaskPriorityDisinherit+0xa0>
 800fb0a:	4b25      	ldr	r3, [pc, #148]	; (800fba0 <xTaskPriorityDisinherit+0xac>)
 800fb0c:	681b      	ldr	r3, [r3, #0]
 800fb0e:	68ba      	ldr	r2, [r7, #8]
 800fb10:	429a      	cmp	r2, r3
 800fb12:	d001      	beq.n	800fb18 <xTaskPriorityDisinherit+0x24>
 800fb14:	b672      	cpsid	i
 800fb16:	e7fe      	b.n	800fb16 <xTaskPriorityDisinherit+0x22>
 800fb18:	68bb      	ldr	r3, [r7, #8]
 800fb1a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800fb1c:	2b00      	cmp	r3, #0
 800fb1e:	d101      	bne.n	800fb24 <xTaskPriorityDisinherit+0x30>
 800fb20:	b672      	cpsid	i
 800fb22:	e7fe      	b.n	800fb22 <xTaskPriorityDisinherit+0x2e>
 800fb24:	68bb      	ldr	r3, [r7, #8]
 800fb26:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800fb28:	1e5a      	subs	r2, r3, #1
 800fb2a:	68bb      	ldr	r3, [r7, #8]
 800fb2c:	651a      	str	r2, [r3, #80]	; 0x50
 800fb2e:	68bb      	ldr	r3, [r7, #8]
 800fb30:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800fb32:	68bb      	ldr	r3, [r7, #8]
 800fb34:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800fb36:	429a      	cmp	r2, r3
 800fb38:	d02c      	beq.n	800fb94 <xTaskPriorityDisinherit+0xa0>
 800fb3a:	68bb      	ldr	r3, [r7, #8]
 800fb3c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800fb3e:	2b00      	cmp	r3, #0
 800fb40:	d128      	bne.n	800fb94 <xTaskPriorityDisinherit+0xa0>
 800fb42:	68bb      	ldr	r3, [r7, #8]
 800fb44:	3304      	adds	r3, #4
 800fb46:	0018      	movs	r0, r3
 800fb48:	f7fe fbcf 	bl	800e2ea <uxListRemove>
 800fb4c:	68bb      	ldr	r3, [r7, #8]
 800fb4e:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800fb50:	68bb      	ldr	r3, [r7, #8]
 800fb52:	62da      	str	r2, [r3, #44]	; 0x2c
 800fb54:	68bb      	ldr	r3, [r7, #8]
 800fb56:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fb58:	2238      	movs	r2, #56	; 0x38
 800fb5a:	1ad2      	subs	r2, r2, r3
 800fb5c:	68bb      	ldr	r3, [r7, #8]
 800fb5e:	619a      	str	r2, [r3, #24]
 800fb60:	68bb      	ldr	r3, [r7, #8]
 800fb62:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800fb64:	4b0f      	ldr	r3, [pc, #60]	; (800fba4 <xTaskPriorityDisinherit+0xb0>)
 800fb66:	681b      	ldr	r3, [r3, #0]
 800fb68:	429a      	cmp	r2, r3
 800fb6a:	d903      	bls.n	800fb74 <xTaskPriorityDisinherit+0x80>
 800fb6c:	68bb      	ldr	r3, [r7, #8]
 800fb6e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800fb70:	4b0c      	ldr	r3, [pc, #48]	; (800fba4 <xTaskPriorityDisinherit+0xb0>)
 800fb72:	601a      	str	r2, [r3, #0]
 800fb74:	68bb      	ldr	r3, [r7, #8]
 800fb76:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800fb78:	0013      	movs	r3, r2
 800fb7a:	009b      	lsls	r3, r3, #2
 800fb7c:	189b      	adds	r3, r3, r2
 800fb7e:	009b      	lsls	r3, r3, #2
 800fb80:	4a09      	ldr	r2, [pc, #36]	; (800fba8 <xTaskPriorityDisinherit+0xb4>)
 800fb82:	189a      	adds	r2, r3, r2
 800fb84:	68bb      	ldr	r3, [r7, #8]
 800fb86:	3304      	adds	r3, #4
 800fb88:	0019      	movs	r1, r3
 800fb8a:	0010      	movs	r0, r2
 800fb8c:	f7fe fb55 	bl	800e23a <vListInsertEnd>
 800fb90:	2301      	movs	r3, #1
 800fb92:	60fb      	str	r3, [r7, #12]
 800fb94:	68fb      	ldr	r3, [r7, #12]
 800fb96:	0018      	movs	r0, r3
 800fb98:	46bd      	mov	sp, r7
 800fb9a:	b004      	add	sp, #16
 800fb9c:	bd80      	pop	{r7, pc}
 800fb9e:	46c0      	nop			; (mov r8, r8)
 800fba0:	20000a98 	.word	0x20000a98
 800fba4:	20000f74 	.word	0x20000f74
 800fba8:	20000a9c 	.word	0x20000a9c

0800fbac <prvAddCurrentTaskToDelayedList>:
 800fbac:	b580      	push	{r7, lr}
 800fbae:	b084      	sub	sp, #16
 800fbb0:	af00      	add	r7, sp, #0
 800fbb2:	6078      	str	r0, [r7, #4]
 800fbb4:	6039      	str	r1, [r7, #0]
 800fbb6:	4b21      	ldr	r3, [pc, #132]	; (800fc3c <prvAddCurrentTaskToDelayedList+0x90>)
 800fbb8:	681b      	ldr	r3, [r3, #0]
 800fbba:	60fb      	str	r3, [r7, #12]
 800fbbc:	4b20      	ldr	r3, [pc, #128]	; (800fc40 <prvAddCurrentTaskToDelayedList+0x94>)
 800fbbe:	681b      	ldr	r3, [r3, #0]
 800fbc0:	3304      	adds	r3, #4
 800fbc2:	0018      	movs	r0, r3
 800fbc4:	f7fe fb91 	bl	800e2ea <uxListRemove>
 800fbc8:	687b      	ldr	r3, [r7, #4]
 800fbca:	3301      	adds	r3, #1
 800fbcc:	d10b      	bne.n	800fbe6 <prvAddCurrentTaskToDelayedList+0x3a>
 800fbce:	683b      	ldr	r3, [r7, #0]
 800fbd0:	2b00      	cmp	r3, #0
 800fbd2:	d008      	beq.n	800fbe6 <prvAddCurrentTaskToDelayedList+0x3a>
 800fbd4:	4b1a      	ldr	r3, [pc, #104]	; (800fc40 <prvAddCurrentTaskToDelayedList+0x94>)
 800fbd6:	681b      	ldr	r3, [r3, #0]
 800fbd8:	1d1a      	adds	r2, r3, #4
 800fbda:	4b1a      	ldr	r3, [pc, #104]	; (800fc44 <prvAddCurrentTaskToDelayedList+0x98>)
 800fbdc:	0011      	movs	r1, r2
 800fbde:	0018      	movs	r0, r3
 800fbe0:	f7fe fb2b 	bl	800e23a <vListInsertEnd>
 800fbe4:	e026      	b.n	800fc34 <prvAddCurrentTaskToDelayedList+0x88>
 800fbe6:	68fa      	ldr	r2, [r7, #12]
 800fbe8:	687b      	ldr	r3, [r7, #4]
 800fbea:	18d3      	adds	r3, r2, r3
 800fbec:	60bb      	str	r3, [r7, #8]
 800fbee:	4b14      	ldr	r3, [pc, #80]	; (800fc40 <prvAddCurrentTaskToDelayedList+0x94>)
 800fbf0:	681b      	ldr	r3, [r3, #0]
 800fbf2:	68ba      	ldr	r2, [r7, #8]
 800fbf4:	605a      	str	r2, [r3, #4]
 800fbf6:	68ba      	ldr	r2, [r7, #8]
 800fbf8:	68fb      	ldr	r3, [r7, #12]
 800fbfa:	429a      	cmp	r2, r3
 800fbfc:	d209      	bcs.n	800fc12 <prvAddCurrentTaskToDelayedList+0x66>
 800fbfe:	4b12      	ldr	r3, [pc, #72]	; (800fc48 <prvAddCurrentTaskToDelayedList+0x9c>)
 800fc00:	681a      	ldr	r2, [r3, #0]
 800fc02:	4b0f      	ldr	r3, [pc, #60]	; (800fc40 <prvAddCurrentTaskToDelayedList+0x94>)
 800fc04:	681b      	ldr	r3, [r3, #0]
 800fc06:	3304      	adds	r3, #4
 800fc08:	0019      	movs	r1, r3
 800fc0a:	0010      	movs	r0, r2
 800fc0c:	f7fe fb37 	bl	800e27e <vListInsert>
 800fc10:	e010      	b.n	800fc34 <prvAddCurrentTaskToDelayedList+0x88>
 800fc12:	4b0e      	ldr	r3, [pc, #56]	; (800fc4c <prvAddCurrentTaskToDelayedList+0xa0>)
 800fc14:	681a      	ldr	r2, [r3, #0]
 800fc16:	4b0a      	ldr	r3, [pc, #40]	; (800fc40 <prvAddCurrentTaskToDelayedList+0x94>)
 800fc18:	681b      	ldr	r3, [r3, #0]
 800fc1a:	3304      	adds	r3, #4
 800fc1c:	0019      	movs	r1, r3
 800fc1e:	0010      	movs	r0, r2
 800fc20:	f7fe fb2d 	bl	800e27e <vListInsert>
 800fc24:	4b0a      	ldr	r3, [pc, #40]	; (800fc50 <prvAddCurrentTaskToDelayedList+0xa4>)
 800fc26:	681b      	ldr	r3, [r3, #0]
 800fc28:	68ba      	ldr	r2, [r7, #8]
 800fc2a:	429a      	cmp	r2, r3
 800fc2c:	d202      	bcs.n	800fc34 <prvAddCurrentTaskToDelayedList+0x88>
 800fc2e:	4b08      	ldr	r3, [pc, #32]	; (800fc50 <prvAddCurrentTaskToDelayedList+0xa4>)
 800fc30:	68ba      	ldr	r2, [r7, #8]
 800fc32:	601a      	str	r2, [r3, #0]
 800fc34:	46c0      	nop			; (mov r8, r8)
 800fc36:	46bd      	mov	sp, r7
 800fc38:	b004      	add	sp, #16
 800fc3a:	bd80      	pop	{r7, pc}
 800fc3c:	20000f70 	.word	0x20000f70
 800fc40:	20000a98 	.word	0x20000a98
 800fc44:	20000f58 	.word	0x20000f58
 800fc48:	20000f28 	.word	0x20000f28
 800fc4c:	20000f24 	.word	0x20000f24
 800fc50:	20000f8c 	.word	0x20000f8c

0800fc54 <xTimerCreateTimerTask>:
 800fc54:	b590      	push	{r4, r7, lr}
 800fc56:	b089      	sub	sp, #36	; 0x24
 800fc58:	af04      	add	r7, sp, #16
 800fc5a:	2300      	movs	r3, #0
 800fc5c:	60fb      	str	r3, [r7, #12]
 800fc5e:	f000 fac9 	bl	80101f4 <prvCheckForValidListAndQueue>
 800fc62:	4b17      	ldr	r3, [pc, #92]	; (800fcc0 <xTimerCreateTimerTask+0x6c>)
 800fc64:	681b      	ldr	r3, [r3, #0]
 800fc66:	2b00      	cmp	r3, #0
 800fc68:	d020      	beq.n	800fcac <xTimerCreateTimerTask+0x58>
 800fc6a:	2300      	movs	r3, #0
 800fc6c:	60bb      	str	r3, [r7, #8]
 800fc6e:	2300      	movs	r3, #0
 800fc70:	607b      	str	r3, [r7, #4]
 800fc72:	003a      	movs	r2, r7
 800fc74:	1d39      	adds	r1, r7, #4
 800fc76:	2308      	movs	r3, #8
 800fc78:	18fb      	adds	r3, r7, r3
 800fc7a:	0018      	movs	r0, r3
 800fc7c:	f7fe fa9c 	bl	800e1b8 <vApplicationGetTimerTaskMemory>
 800fc80:	683c      	ldr	r4, [r7, #0]
 800fc82:	687b      	ldr	r3, [r7, #4]
 800fc84:	68ba      	ldr	r2, [r7, #8]
 800fc86:	490f      	ldr	r1, [pc, #60]	; (800fcc4 <xTimerCreateTimerTask+0x70>)
 800fc88:	480f      	ldr	r0, [pc, #60]	; (800fcc8 <xTimerCreateTimerTask+0x74>)
 800fc8a:	9202      	str	r2, [sp, #8]
 800fc8c:	9301      	str	r3, [sp, #4]
 800fc8e:	2302      	movs	r3, #2
 800fc90:	9300      	str	r3, [sp, #0]
 800fc92:	2300      	movs	r3, #0
 800fc94:	0022      	movs	r2, r4
 800fc96:	f7ff f812 	bl	800ecbe <xTaskCreateStatic>
 800fc9a:	0002      	movs	r2, r0
 800fc9c:	4b0b      	ldr	r3, [pc, #44]	; (800fccc <xTimerCreateTimerTask+0x78>)
 800fc9e:	601a      	str	r2, [r3, #0]
 800fca0:	4b0a      	ldr	r3, [pc, #40]	; (800fccc <xTimerCreateTimerTask+0x78>)
 800fca2:	681b      	ldr	r3, [r3, #0]
 800fca4:	2b00      	cmp	r3, #0
 800fca6:	d001      	beq.n	800fcac <xTimerCreateTimerTask+0x58>
 800fca8:	2301      	movs	r3, #1
 800fcaa:	60fb      	str	r3, [r7, #12]
 800fcac:	68fb      	ldr	r3, [r7, #12]
 800fcae:	2b00      	cmp	r3, #0
 800fcb0:	d101      	bne.n	800fcb6 <xTimerCreateTimerTask+0x62>
 800fcb2:	b672      	cpsid	i
 800fcb4:	e7fe      	b.n	800fcb4 <xTimerCreateTimerTask+0x60>
 800fcb6:	68fb      	ldr	r3, [r7, #12]
 800fcb8:	0018      	movs	r0, r3
 800fcba:	46bd      	mov	sp, r7
 800fcbc:	b005      	add	sp, #20
 800fcbe:	bd90      	pop	{r4, r7, pc}
 800fcc0:	20000fc8 	.word	0x20000fc8
 800fcc4:	08018a98 	.word	0x08018a98
 800fcc8:	0800fded 	.word	0x0800fded
 800fccc:	20000fcc 	.word	0x20000fcc

0800fcd0 <xTimerGenericCommand>:
 800fcd0:	b590      	push	{r4, r7, lr}
 800fcd2:	b08b      	sub	sp, #44	; 0x2c
 800fcd4:	af00      	add	r7, sp, #0
 800fcd6:	60f8      	str	r0, [r7, #12]
 800fcd8:	60b9      	str	r1, [r7, #8]
 800fcda:	607a      	str	r2, [r7, #4]
 800fcdc:	603b      	str	r3, [r7, #0]
 800fcde:	2300      	movs	r3, #0
 800fce0:	627b      	str	r3, [r7, #36]	; 0x24
 800fce2:	68fb      	ldr	r3, [r7, #12]
 800fce4:	2b00      	cmp	r3, #0
 800fce6:	d101      	bne.n	800fcec <xTimerGenericCommand+0x1c>
 800fce8:	b672      	cpsid	i
 800fcea:	e7fe      	b.n	800fcea <xTimerGenericCommand+0x1a>
 800fcec:	4b1c      	ldr	r3, [pc, #112]	; (800fd60 <xTimerGenericCommand+0x90>)
 800fcee:	681b      	ldr	r3, [r3, #0]
 800fcf0:	2b00      	cmp	r3, #0
 800fcf2:	d030      	beq.n	800fd56 <xTimerGenericCommand+0x86>
 800fcf4:	2414      	movs	r4, #20
 800fcf6:	193b      	adds	r3, r7, r4
 800fcf8:	68ba      	ldr	r2, [r7, #8]
 800fcfa:	601a      	str	r2, [r3, #0]
 800fcfc:	193b      	adds	r3, r7, r4
 800fcfe:	687a      	ldr	r2, [r7, #4]
 800fd00:	605a      	str	r2, [r3, #4]
 800fd02:	193b      	adds	r3, r7, r4
 800fd04:	68fa      	ldr	r2, [r7, #12]
 800fd06:	609a      	str	r2, [r3, #8]
 800fd08:	68bb      	ldr	r3, [r7, #8]
 800fd0a:	2b05      	cmp	r3, #5
 800fd0c:	dc19      	bgt.n	800fd42 <xTimerGenericCommand+0x72>
 800fd0e:	f7ff fed5 	bl	800fabc <xTaskGetSchedulerState>
 800fd12:	0003      	movs	r3, r0
 800fd14:	2b02      	cmp	r3, #2
 800fd16:	d109      	bne.n	800fd2c <xTimerGenericCommand+0x5c>
 800fd18:	4b11      	ldr	r3, [pc, #68]	; (800fd60 <xTimerGenericCommand+0x90>)
 800fd1a:	6818      	ldr	r0, [r3, #0]
 800fd1c:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800fd1e:	1939      	adds	r1, r7, r4
 800fd20:	2300      	movs	r3, #0
 800fd22:	f7fe fc03 	bl	800e52c <xQueueGenericSend>
 800fd26:	0003      	movs	r3, r0
 800fd28:	627b      	str	r3, [r7, #36]	; 0x24
 800fd2a:	e014      	b.n	800fd56 <xTimerGenericCommand+0x86>
 800fd2c:	4b0c      	ldr	r3, [pc, #48]	; (800fd60 <xTimerGenericCommand+0x90>)
 800fd2e:	6818      	ldr	r0, [r3, #0]
 800fd30:	2314      	movs	r3, #20
 800fd32:	18f9      	adds	r1, r7, r3
 800fd34:	2300      	movs	r3, #0
 800fd36:	2200      	movs	r2, #0
 800fd38:	f7fe fbf8 	bl	800e52c <xQueueGenericSend>
 800fd3c:	0003      	movs	r3, r0
 800fd3e:	627b      	str	r3, [r7, #36]	; 0x24
 800fd40:	e009      	b.n	800fd56 <xTimerGenericCommand+0x86>
 800fd42:	4b07      	ldr	r3, [pc, #28]	; (800fd60 <xTimerGenericCommand+0x90>)
 800fd44:	6818      	ldr	r0, [r3, #0]
 800fd46:	683a      	ldr	r2, [r7, #0]
 800fd48:	2314      	movs	r3, #20
 800fd4a:	18f9      	adds	r1, r7, r3
 800fd4c:	2300      	movs	r3, #0
 800fd4e:	f7fe fcb1 	bl	800e6b4 <xQueueGenericSendFromISR>
 800fd52:	0003      	movs	r3, r0
 800fd54:	627b      	str	r3, [r7, #36]	; 0x24
 800fd56:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800fd58:	0018      	movs	r0, r3
 800fd5a:	46bd      	mov	sp, r7
 800fd5c:	b00b      	add	sp, #44	; 0x2c
 800fd5e:	bd90      	pop	{r4, r7, pc}
 800fd60:	20000fc8 	.word	0x20000fc8

0800fd64 <prvProcessExpiredTimer>:
 800fd64:	b580      	push	{r7, lr}
 800fd66:	b086      	sub	sp, #24
 800fd68:	af02      	add	r7, sp, #8
 800fd6a:	6078      	str	r0, [r7, #4]
 800fd6c:	6039      	str	r1, [r7, #0]
 800fd6e:	4b1e      	ldr	r3, [pc, #120]	; (800fde8 <prvProcessExpiredTimer+0x84>)
 800fd70:	681b      	ldr	r3, [r3, #0]
 800fd72:	68db      	ldr	r3, [r3, #12]
 800fd74:	68db      	ldr	r3, [r3, #12]
 800fd76:	60fb      	str	r3, [r7, #12]
 800fd78:	68fb      	ldr	r3, [r7, #12]
 800fd7a:	3304      	adds	r3, #4
 800fd7c:	0018      	movs	r0, r3
 800fd7e:	f7fe fab4 	bl	800e2ea <uxListRemove>
 800fd82:	68fb      	ldr	r3, [r7, #12]
 800fd84:	2228      	movs	r2, #40	; 0x28
 800fd86:	5c9b      	ldrb	r3, [r3, r2]
 800fd88:	001a      	movs	r2, r3
 800fd8a:	2304      	movs	r3, #4
 800fd8c:	4013      	ands	r3, r2
 800fd8e:	d019      	beq.n	800fdc4 <prvProcessExpiredTimer+0x60>
 800fd90:	68fb      	ldr	r3, [r7, #12]
 800fd92:	699a      	ldr	r2, [r3, #24]
 800fd94:	687b      	ldr	r3, [r7, #4]
 800fd96:	18d1      	adds	r1, r2, r3
 800fd98:	687b      	ldr	r3, [r7, #4]
 800fd9a:	683a      	ldr	r2, [r7, #0]
 800fd9c:	68f8      	ldr	r0, [r7, #12]
 800fd9e:	f000 f8c3 	bl	800ff28 <prvInsertTimerInActiveList>
 800fda2:	1e03      	subs	r3, r0, #0
 800fda4:	d017      	beq.n	800fdd6 <prvProcessExpiredTimer+0x72>
 800fda6:	687a      	ldr	r2, [r7, #4]
 800fda8:	68f8      	ldr	r0, [r7, #12]
 800fdaa:	2300      	movs	r3, #0
 800fdac:	9300      	str	r3, [sp, #0]
 800fdae:	2300      	movs	r3, #0
 800fdb0:	2100      	movs	r1, #0
 800fdb2:	f7ff ff8d 	bl	800fcd0 <xTimerGenericCommand>
 800fdb6:	0003      	movs	r3, r0
 800fdb8:	60bb      	str	r3, [r7, #8]
 800fdba:	68bb      	ldr	r3, [r7, #8]
 800fdbc:	2b00      	cmp	r3, #0
 800fdbe:	d10a      	bne.n	800fdd6 <prvProcessExpiredTimer+0x72>
 800fdc0:	b672      	cpsid	i
 800fdc2:	e7fe      	b.n	800fdc2 <prvProcessExpiredTimer+0x5e>
 800fdc4:	68fb      	ldr	r3, [r7, #12]
 800fdc6:	2228      	movs	r2, #40	; 0x28
 800fdc8:	5c9b      	ldrb	r3, [r3, r2]
 800fdca:	2201      	movs	r2, #1
 800fdcc:	4393      	bics	r3, r2
 800fdce:	b2d9      	uxtb	r1, r3
 800fdd0:	68fb      	ldr	r3, [r7, #12]
 800fdd2:	2228      	movs	r2, #40	; 0x28
 800fdd4:	5499      	strb	r1, [r3, r2]
 800fdd6:	68fb      	ldr	r3, [r7, #12]
 800fdd8:	6a1b      	ldr	r3, [r3, #32]
 800fdda:	68fa      	ldr	r2, [r7, #12]
 800fddc:	0010      	movs	r0, r2
 800fdde:	4798      	blx	r3
 800fde0:	46c0      	nop			; (mov r8, r8)
 800fde2:	46bd      	mov	sp, r7
 800fde4:	b004      	add	sp, #16
 800fde6:	bd80      	pop	{r7, pc}
 800fde8:	20000fc0 	.word	0x20000fc0

0800fdec <prvTimerTask>:
 800fdec:	b580      	push	{r7, lr}
 800fdee:	b084      	sub	sp, #16
 800fdf0:	af00      	add	r7, sp, #0
 800fdf2:	6078      	str	r0, [r7, #4]
 800fdf4:	2308      	movs	r3, #8
 800fdf6:	18fb      	adds	r3, r7, r3
 800fdf8:	0018      	movs	r0, r3
 800fdfa:	f000 f853 	bl	800fea4 <prvGetNextExpireTime>
 800fdfe:	0003      	movs	r3, r0
 800fe00:	60fb      	str	r3, [r7, #12]
 800fe02:	68ba      	ldr	r2, [r7, #8]
 800fe04:	68fb      	ldr	r3, [r7, #12]
 800fe06:	0011      	movs	r1, r2
 800fe08:	0018      	movs	r0, r3
 800fe0a:	f000 f803 	bl	800fe14 <prvProcessTimerOrBlockTask>
 800fe0e:	f000 f8cd 	bl	800ffac <prvProcessReceivedCommands>
 800fe12:	e7ef      	b.n	800fdf4 <prvTimerTask+0x8>

0800fe14 <prvProcessTimerOrBlockTask>:
 800fe14:	b580      	push	{r7, lr}
 800fe16:	b084      	sub	sp, #16
 800fe18:	af00      	add	r7, sp, #0
 800fe1a:	6078      	str	r0, [r7, #4]
 800fe1c:	6039      	str	r1, [r7, #0]
 800fe1e:	f7ff fab3 	bl	800f388 <vTaskSuspendAll>
 800fe22:	2308      	movs	r3, #8
 800fe24:	18fb      	adds	r3, r7, r3
 800fe26:	0018      	movs	r0, r3
 800fe28:	f000 f85e 	bl	800fee8 <prvSampleTimeNow>
 800fe2c:	0003      	movs	r3, r0
 800fe2e:	60fb      	str	r3, [r7, #12]
 800fe30:	68bb      	ldr	r3, [r7, #8]
 800fe32:	2b00      	cmp	r3, #0
 800fe34:	d12b      	bne.n	800fe8e <prvProcessTimerOrBlockTask+0x7a>
 800fe36:	683b      	ldr	r3, [r7, #0]
 800fe38:	2b00      	cmp	r3, #0
 800fe3a:	d10c      	bne.n	800fe56 <prvProcessTimerOrBlockTask+0x42>
 800fe3c:	687a      	ldr	r2, [r7, #4]
 800fe3e:	68fb      	ldr	r3, [r7, #12]
 800fe40:	429a      	cmp	r2, r3
 800fe42:	d808      	bhi.n	800fe56 <prvProcessTimerOrBlockTask+0x42>
 800fe44:	f7ff faac 	bl	800f3a0 <xTaskResumeAll>
 800fe48:	68fa      	ldr	r2, [r7, #12]
 800fe4a:	687b      	ldr	r3, [r7, #4]
 800fe4c:	0011      	movs	r1, r2
 800fe4e:	0018      	movs	r0, r3
 800fe50:	f7ff ff88 	bl	800fd64 <prvProcessExpiredTimer>
 800fe54:	e01d      	b.n	800fe92 <prvProcessTimerOrBlockTask+0x7e>
 800fe56:	683b      	ldr	r3, [r7, #0]
 800fe58:	2b00      	cmp	r3, #0
 800fe5a:	d008      	beq.n	800fe6e <prvProcessTimerOrBlockTask+0x5a>
 800fe5c:	4b0f      	ldr	r3, [pc, #60]	; (800fe9c <prvProcessTimerOrBlockTask+0x88>)
 800fe5e:	681b      	ldr	r3, [r3, #0]
 800fe60:	681b      	ldr	r3, [r3, #0]
 800fe62:	2b00      	cmp	r3, #0
 800fe64:	d101      	bne.n	800fe6a <prvProcessTimerOrBlockTask+0x56>
 800fe66:	2301      	movs	r3, #1
 800fe68:	e000      	b.n	800fe6c <prvProcessTimerOrBlockTask+0x58>
 800fe6a:	2300      	movs	r3, #0
 800fe6c:	603b      	str	r3, [r7, #0]
 800fe6e:	4b0c      	ldr	r3, [pc, #48]	; (800fea0 <prvProcessTimerOrBlockTask+0x8c>)
 800fe70:	6818      	ldr	r0, [r3, #0]
 800fe72:	687a      	ldr	r2, [r7, #4]
 800fe74:	68fb      	ldr	r3, [r7, #12]
 800fe76:	1ad3      	subs	r3, r2, r3
 800fe78:	683a      	ldr	r2, [r7, #0]
 800fe7a:	0019      	movs	r1, r3
 800fe7c:	f7fe feec 	bl	800ec58 <vQueueWaitForMessageRestricted>
 800fe80:	f7ff fa8e 	bl	800f3a0 <xTaskResumeAll>
 800fe84:	1e03      	subs	r3, r0, #0
 800fe86:	d104      	bne.n	800fe92 <prvProcessTimerOrBlockTask+0x7e>
 800fe88:	f000 fa82 	bl	8010390 <vPortYield>
 800fe8c:	e001      	b.n	800fe92 <prvProcessTimerOrBlockTask+0x7e>
 800fe8e:	f7ff fa87 	bl	800f3a0 <xTaskResumeAll>
 800fe92:	46c0      	nop			; (mov r8, r8)
 800fe94:	46bd      	mov	sp, r7
 800fe96:	b004      	add	sp, #16
 800fe98:	bd80      	pop	{r7, pc}
 800fe9a:	46c0      	nop			; (mov r8, r8)
 800fe9c:	20000fc4 	.word	0x20000fc4
 800fea0:	20000fc8 	.word	0x20000fc8

0800fea4 <prvGetNextExpireTime>:
 800fea4:	b580      	push	{r7, lr}
 800fea6:	b084      	sub	sp, #16
 800fea8:	af00      	add	r7, sp, #0
 800feaa:	6078      	str	r0, [r7, #4]
 800feac:	4b0d      	ldr	r3, [pc, #52]	; (800fee4 <prvGetNextExpireTime+0x40>)
 800feae:	681b      	ldr	r3, [r3, #0]
 800feb0:	681b      	ldr	r3, [r3, #0]
 800feb2:	2b00      	cmp	r3, #0
 800feb4:	d101      	bne.n	800feba <prvGetNextExpireTime+0x16>
 800feb6:	2201      	movs	r2, #1
 800feb8:	e000      	b.n	800febc <prvGetNextExpireTime+0x18>
 800feba:	2200      	movs	r2, #0
 800febc:	687b      	ldr	r3, [r7, #4]
 800febe:	601a      	str	r2, [r3, #0]
 800fec0:	687b      	ldr	r3, [r7, #4]
 800fec2:	681b      	ldr	r3, [r3, #0]
 800fec4:	2b00      	cmp	r3, #0
 800fec6:	d105      	bne.n	800fed4 <prvGetNextExpireTime+0x30>
 800fec8:	4b06      	ldr	r3, [pc, #24]	; (800fee4 <prvGetNextExpireTime+0x40>)
 800feca:	681b      	ldr	r3, [r3, #0]
 800fecc:	68db      	ldr	r3, [r3, #12]
 800fece:	681b      	ldr	r3, [r3, #0]
 800fed0:	60fb      	str	r3, [r7, #12]
 800fed2:	e001      	b.n	800fed8 <prvGetNextExpireTime+0x34>
 800fed4:	2300      	movs	r3, #0
 800fed6:	60fb      	str	r3, [r7, #12]
 800fed8:	68fb      	ldr	r3, [r7, #12]
 800feda:	0018      	movs	r0, r3
 800fedc:	46bd      	mov	sp, r7
 800fede:	b004      	add	sp, #16
 800fee0:	bd80      	pop	{r7, pc}
 800fee2:	46c0      	nop			; (mov r8, r8)
 800fee4:	20000fc0 	.word	0x20000fc0

0800fee8 <prvSampleTimeNow>:
 800fee8:	b580      	push	{r7, lr}
 800feea:	b084      	sub	sp, #16
 800feec:	af00      	add	r7, sp, #0
 800feee:	6078      	str	r0, [r7, #4]
 800fef0:	f7ff fae2 	bl	800f4b8 <xTaskGetTickCount>
 800fef4:	0003      	movs	r3, r0
 800fef6:	60fb      	str	r3, [r7, #12]
 800fef8:	4b0a      	ldr	r3, [pc, #40]	; (800ff24 <prvSampleTimeNow+0x3c>)
 800fefa:	681b      	ldr	r3, [r3, #0]
 800fefc:	68fa      	ldr	r2, [r7, #12]
 800fefe:	429a      	cmp	r2, r3
 800ff00:	d205      	bcs.n	800ff0e <prvSampleTimeNow+0x26>
 800ff02:	f000 f919 	bl	8010138 <prvSwitchTimerLists>
 800ff06:	687b      	ldr	r3, [r7, #4]
 800ff08:	2201      	movs	r2, #1
 800ff0a:	601a      	str	r2, [r3, #0]
 800ff0c:	e002      	b.n	800ff14 <prvSampleTimeNow+0x2c>
 800ff0e:	687b      	ldr	r3, [r7, #4]
 800ff10:	2200      	movs	r2, #0
 800ff12:	601a      	str	r2, [r3, #0]
 800ff14:	4b03      	ldr	r3, [pc, #12]	; (800ff24 <prvSampleTimeNow+0x3c>)
 800ff16:	68fa      	ldr	r2, [r7, #12]
 800ff18:	601a      	str	r2, [r3, #0]
 800ff1a:	68fb      	ldr	r3, [r7, #12]
 800ff1c:	0018      	movs	r0, r3
 800ff1e:	46bd      	mov	sp, r7
 800ff20:	b004      	add	sp, #16
 800ff22:	bd80      	pop	{r7, pc}
 800ff24:	20000fd0 	.word	0x20000fd0

0800ff28 <prvInsertTimerInActiveList>:
 800ff28:	b580      	push	{r7, lr}
 800ff2a:	b086      	sub	sp, #24
 800ff2c:	af00      	add	r7, sp, #0
 800ff2e:	60f8      	str	r0, [r7, #12]
 800ff30:	60b9      	str	r1, [r7, #8]
 800ff32:	607a      	str	r2, [r7, #4]
 800ff34:	603b      	str	r3, [r7, #0]
 800ff36:	2300      	movs	r3, #0
 800ff38:	617b      	str	r3, [r7, #20]
 800ff3a:	68fb      	ldr	r3, [r7, #12]
 800ff3c:	68ba      	ldr	r2, [r7, #8]
 800ff3e:	605a      	str	r2, [r3, #4]
 800ff40:	68fb      	ldr	r3, [r7, #12]
 800ff42:	68fa      	ldr	r2, [r7, #12]
 800ff44:	611a      	str	r2, [r3, #16]
 800ff46:	68ba      	ldr	r2, [r7, #8]
 800ff48:	687b      	ldr	r3, [r7, #4]
 800ff4a:	429a      	cmp	r2, r3
 800ff4c:	d812      	bhi.n	800ff74 <prvInsertTimerInActiveList+0x4c>
 800ff4e:	687a      	ldr	r2, [r7, #4]
 800ff50:	683b      	ldr	r3, [r7, #0]
 800ff52:	1ad2      	subs	r2, r2, r3
 800ff54:	68fb      	ldr	r3, [r7, #12]
 800ff56:	699b      	ldr	r3, [r3, #24]
 800ff58:	429a      	cmp	r2, r3
 800ff5a:	d302      	bcc.n	800ff62 <prvInsertTimerInActiveList+0x3a>
 800ff5c:	2301      	movs	r3, #1
 800ff5e:	617b      	str	r3, [r7, #20]
 800ff60:	e01b      	b.n	800ff9a <prvInsertTimerInActiveList+0x72>
 800ff62:	4b10      	ldr	r3, [pc, #64]	; (800ffa4 <prvInsertTimerInActiveList+0x7c>)
 800ff64:	681a      	ldr	r2, [r3, #0]
 800ff66:	68fb      	ldr	r3, [r7, #12]
 800ff68:	3304      	adds	r3, #4
 800ff6a:	0019      	movs	r1, r3
 800ff6c:	0010      	movs	r0, r2
 800ff6e:	f7fe f986 	bl	800e27e <vListInsert>
 800ff72:	e012      	b.n	800ff9a <prvInsertTimerInActiveList+0x72>
 800ff74:	687a      	ldr	r2, [r7, #4]
 800ff76:	683b      	ldr	r3, [r7, #0]
 800ff78:	429a      	cmp	r2, r3
 800ff7a:	d206      	bcs.n	800ff8a <prvInsertTimerInActiveList+0x62>
 800ff7c:	68ba      	ldr	r2, [r7, #8]
 800ff7e:	683b      	ldr	r3, [r7, #0]
 800ff80:	429a      	cmp	r2, r3
 800ff82:	d302      	bcc.n	800ff8a <prvInsertTimerInActiveList+0x62>
 800ff84:	2301      	movs	r3, #1
 800ff86:	617b      	str	r3, [r7, #20]
 800ff88:	e007      	b.n	800ff9a <prvInsertTimerInActiveList+0x72>
 800ff8a:	4b07      	ldr	r3, [pc, #28]	; (800ffa8 <prvInsertTimerInActiveList+0x80>)
 800ff8c:	681a      	ldr	r2, [r3, #0]
 800ff8e:	68fb      	ldr	r3, [r7, #12]
 800ff90:	3304      	adds	r3, #4
 800ff92:	0019      	movs	r1, r3
 800ff94:	0010      	movs	r0, r2
 800ff96:	f7fe f972 	bl	800e27e <vListInsert>
 800ff9a:	697b      	ldr	r3, [r7, #20]
 800ff9c:	0018      	movs	r0, r3
 800ff9e:	46bd      	mov	sp, r7
 800ffa0:	b006      	add	sp, #24
 800ffa2:	bd80      	pop	{r7, pc}
 800ffa4:	20000fc4 	.word	0x20000fc4
 800ffa8:	20000fc0 	.word	0x20000fc0

0800ffac <prvProcessReceivedCommands>:
 800ffac:	b590      	push	{r4, r7, lr}
 800ffae:	b08d      	sub	sp, #52	; 0x34
 800ffb0:	af02      	add	r7, sp, #8
 800ffb2:	e0ac      	b.n	801010e <prvProcessReceivedCommands+0x162>
 800ffb4:	2208      	movs	r2, #8
 800ffb6:	18bb      	adds	r3, r7, r2
 800ffb8:	681b      	ldr	r3, [r3, #0]
 800ffba:	2b00      	cmp	r3, #0
 800ffbc:	da0f      	bge.n	800ffde <prvProcessReceivedCommands+0x32>
 800ffbe:	18bb      	adds	r3, r7, r2
 800ffc0:	3304      	adds	r3, #4
 800ffc2:	627b      	str	r3, [r7, #36]	; 0x24
 800ffc4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ffc6:	2b00      	cmp	r3, #0
 800ffc8:	d101      	bne.n	800ffce <prvProcessReceivedCommands+0x22>
 800ffca:	b672      	cpsid	i
 800ffcc:	e7fe      	b.n	800ffcc <prvProcessReceivedCommands+0x20>
 800ffce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ffd0:	681a      	ldr	r2, [r3, #0]
 800ffd2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ffd4:	6858      	ldr	r0, [r3, #4]
 800ffd6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ffd8:	689b      	ldr	r3, [r3, #8]
 800ffda:	0019      	movs	r1, r3
 800ffdc:	4790      	blx	r2
 800ffde:	2208      	movs	r2, #8
 800ffe0:	18bb      	adds	r3, r7, r2
 800ffe2:	681b      	ldr	r3, [r3, #0]
 800ffe4:	2b00      	cmp	r3, #0
 800ffe6:	da00      	bge.n	800ffea <prvProcessReceivedCommands+0x3e>
 800ffe8:	e091      	b.n	801010e <prvProcessReceivedCommands+0x162>
 800ffea:	18bb      	adds	r3, r7, r2
 800ffec:	689b      	ldr	r3, [r3, #8]
 800ffee:	623b      	str	r3, [r7, #32]
 800fff0:	6a3b      	ldr	r3, [r7, #32]
 800fff2:	695b      	ldr	r3, [r3, #20]
 800fff4:	2b00      	cmp	r3, #0
 800fff6:	d004      	beq.n	8010002 <prvProcessReceivedCommands+0x56>
 800fff8:	6a3b      	ldr	r3, [r7, #32]
 800fffa:	3304      	adds	r3, #4
 800fffc:	0018      	movs	r0, r3
 800fffe:	f7fe f974 	bl	800e2ea <uxListRemove>
 8010002:	1d3b      	adds	r3, r7, #4
 8010004:	0018      	movs	r0, r3
 8010006:	f7ff ff6f 	bl	800fee8 <prvSampleTimeNow>
 801000a:	0003      	movs	r3, r0
 801000c:	61fb      	str	r3, [r7, #28]
 801000e:	2308      	movs	r3, #8
 8010010:	18fb      	adds	r3, r7, r3
 8010012:	681b      	ldr	r3, [r3, #0]
 8010014:	2b09      	cmp	r3, #9
 8010016:	d900      	bls.n	801001a <prvProcessReceivedCommands+0x6e>
 8010018:	e078      	b.n	801010c <prvProcessReceivedCommands+0x160>
 801001a:	009a      	lsls	r2, r3, #2
 801001c:	4b44      	ldr	r3, [pc, #272]	; (8010130 <prvProcessReceivedCommands+0x184>)
 801001e:	18d3      	adds	r3, r2, r3
 8010020:	681b      	ldr	r3, [r3, #0]
 8010022:	469f      	mov	pc, r3
 8010024:	6a3b      	ldr	r3, [r7, #32]
 8010026:	2228      	movs	r2, #40	; 0x28
 8010028:	5c9b      	ldrb	r3, [r3, r2]
 801002a:	2201      	movs	r2, #1
 801002c:	4313      	orrs	r3, r2
 801002e:	b2d9      	uxtb	r1, r3
 8010030:	6a3b      	ldr	r3, [r7, #32]
 8010032:	2228      	movs	r2, #40	; 0x28
 8010034:	5499      	strb	r1, [r3, r2]
 8010036:	2408      	movs	r4, #8
 8010038:	193b      	adds	r3, r7, r4
 801003a:	685a      	ldr	r2, [r3, #4]
 801003c:	6a3b      	ldr	r3, [r7, #32]
 801003e:	699b      	ldr	r3, [r3, #24]
 8010040:	18d1      	adds	r1, r2, r3
 8010042:	193b      	adds	r3, r7, r4
 8010044:	685b      	ldr	r3, [r3, #4]
 8010046:	69fa      	ldr	r2, [r7, #28]
 8010048:	6a38      	ldr	r0, [r7, #32]
 801004a:	f7ff ff6d 	bl	800ff28 <prvInsertTimerInActiveList>
 801004e:	1e03      	subs	r3, r0, #0
 8010050:	d05d      	beq.n	801010e <prvProcessReceivedCommands+0x162>
 8010052:	6a3b      	ldr	r3, [r7, #32]
 8010054:	6a1b      	ldr	r3, [r3, #32]
 8010056:	6a3a      	ldr	r2, [r7, #32]
 8010058:	0010      	movs	r0, r2
 801005a:	4798      	blx	r3
 801005c:	6a3b      	ldr	r3, [r7, #32]
 801005e:	2228      	movs	r2, #40	; 0x28
 8010060:	5c9b      	ldrb	r3, [r3, r2]
 8010062:	001a      	movs	r2, r3
 8010064:	2304      	movs	r3, #4
 8010066:	4013      	ands	r3, r2
 8010068:	d051      	beq.n	801010e <prvProcessReceivedCommands+0x162>
 801006a:	193b      	adds	r3, r7, r4
 801006c:	685a      	ldr	r2, [r3, #4]
 801006e:	6a3b      	ldr	r3, [r7, #32]
 8010070:	699b      	ldr	r3, [r3, #24]
 8010072:	18d2      	adds	r2, r2, r3
 8010074:	6a38      	ldr	r0, [r7, #32]
 8010076:	2300      	movs	r3, #0
 8010078:	9300      	str	r3, [sp, #0]
 801007a:	2300      	movs	r3, #0
 801007c:	2100      	movs	r1, #0
 801007e:	f7ff fe27 	bl	800fcd0 <xTimerGenericCommand>
 8010082:	0003      	movs	r3, r0
 8010084:	61bb      	str	r3, [r7, #24]
 8010086:	69bb      	ldr	r3, [r7, #24]
 8010088:	2b00      	cmp	r3, #0
 801008a:	d140      	bne.n	801010e <prvProcessReceivedCommands+0x162>
 801008c:	b672      	cpsid	i
 801008e:	e7fe      	b.n	801008e <prvProcessReceivedCommands+0xe2>
 8010090:	6a3b      	ldr	r3, [r7, #32]
 8010092:	2228      	movs	r2, #40	; 0x28
 8010094:	5c9b      	ldrb	r3, [r3, r2]
 8010096:	2201      	movs	r2, #1
 8010098:	4393      	bics	r3, r2
 801009a:	b2d9      	uxtb	r1, r3
 801009c:	6a3b      	ldr	r3, [r7, #32]
 801009e:	2228      	movs	r2, #40	; 0x28
 80100a0:	5499      	strb	r1, [r3, r2]
 80100a2:	e034      	b.n	801010e <prvProcessReceivedCommands+0x162>
 80100a4:	6a3b      	ldr	r3, [r7, #32]
 80100a6:	2228      	movs	r2, #40	; 0x28
 80100a8:	5c9b      	ldrb	r3, [r3, r2]
 80100aa:	2201      	movs	r2, #1
 80100ac:	4313      	orrs	r3, r2
 80100ae:	b2d9      	uxtb	r1, r3
 80100b0:	6a3b      	ldr	r3, [r7, #32]
 80100b2:	2228      	movs	r2, #40	; 0x28
 80100b4:	5499      	strb	r1, [r3, r2]
 80100b6:	2308      	movs	r3, #8
 80100b8:	18fb      	adds	r3, r7, r3
 80100ba:	685a      	ldr	r2, [r3, #4]
 80100bc:	6a3b      	ldr	r3, [r7, #32]
 80100be:	619a      	str	r2, [r3, #24]
 80100c0:	6a3b      	ldr	r3, [r7, #32]
 80100c2:	699b      	ldr	r3, [r3, #24]
 80100c4:	2b00      	cmp	r3, #0
 80100c6:	d101      	bne.n	80100cc <prvProcessReceivedCommands+0x120>
 80100c8:	b672      	cpsid	i
 80100ca:	e7fe      	b.n	80100ca <prvProcessReceivedCommands+0x11e>
 80100cc:	6a3b      	ldr	r3, [r7, #32]
 80100ce:	699a      	ldr	r2, [r3, #24]
 80100d0:	69fb      	ldr	r3, [r7, #28]
 80100d2:	18d1      	adds	r1, r2, r3
 80100d4:	69fb      	ldr	r3, [r7, #28]
 80100d6:	69fa      	ldr	r2, [r7, #28]
 80100d8:	6a38      	ldr	r0, [r7, #32]
 80100da:	f7ff ff25 	bl	800ff28 <prvInsertTimerInActiveList>
 80100de:	e016      	b.n	801010e <prvProcessReceivedCommands+0x162>
 80100e0:	6a3b      	ldr	r3, [r7, #32]
 80100e2:	2228      	movs	r2, #40	; 0x28
 80100e4:	5c9b      	ldrb	r3, [r3, r2]
 80100e6:	001a      	movs	r2, r3
 80100e8:	2302      	movs	r3, #2
 80100ea:	4013      	ands	r3, r2
 80100ec:	d104      	bne.n	80100f8 <prvProcessReceivedCommands+0x14c>
 80100ee:	6a3b      	ldr	r3, [r7, #32]
 80100f0:	0018      	movs	r0, r3
 80100f2:	f000 faa1 	bl	8010638 <vPortFree>
 80100f6:	e00a      	b.n	801010e <prvProcessReceivedCommands+0x162>
 80100f8:	6a3b      	ldr	r3, [r7, #32]
 80100fa:	2228      	movs	r2, #40	; 0x28
 80100fc:	5c9b      	ldrb	r3, [r3, r2]
 80100fe:	2201      	movs	r2, #1
 8010100:	4393      	bics	r3, r2
 8010102:	b2d9      	uxtb	r1, r3
 8010104:	6a3b      	ldr	r3, [r7, #32]
 8010106:	2228      	movs	r2, #40	; 0x28
 8010108:	5499      	strb	r1, [r3, r2]
 801010a:	e000      	b.n	801010e <prvProcessReceivedCommands+0x162>
 801010c:	46c0      	nop			; (mov r8, r8)
 801010e:	4b09      	ldr	r3, [pc, #36]	; (8010134 <prvProcessReceivedCommands+0x188>)
 8010110:	681b      	ldr	r3, [r3, #0]
 8010112:	2208      	movs	r2, #8
 8010114:	18b9      	adds	r1, r7, r2
 8010116:	2200      	movs	r2, #0
 8010118:	0018      	movs	r0, r3
 801011a:	f7fe fb3f 	bl	800e79c <xQueueReceive>
 801011e:	1e03      	subs	r3, r0, #0
 8010120:	d000      	beq.n	8010124 <prvProcessReceivedCommands+0x178>
 8010122:	e747      	b.n	800ffb4 <prvProcessReceivedCommands+0x8>
 8010124:	46c0      	nop			; (mov r8, r8)
 8010126:	46c0      	nop			; (mov r8, r8)
 8010128:	46bd      	mov	sp, r7
 801012a:	b00b      	add	sp, #44	; 0x2c
 801012c:	bd90      	pop	{r4, r7, pc}
 801012e:	46c0      	nop			; (mov r8, r8)
 8010130:	080199f0 	.word	0x080199f0
 8010134:	20000fc8 	.word	0x20000fc8

08010138 <prvSwitchTimerLists>:
 8010138:	b580      	push	{r7, lr}
 801013a:	b088      	sub	sp, #32
 801013c:	af02      	add	r7, sp, #8
 801013e:	e041      	b.n	80101c4 <prvSwitchTimerLists+0x8c>
 8010140:	4b2a      	ldr	r3, [pc, #168]	; (80101ec <prvSwitchTimerLists+0xb4>)
 8010142:	681b      	ldr	r3, [r3, #0]
 8010144:	68db      	ldr	r3, [r3, #12]
 8010146:	681b      	ldr	r3, [r3, #0]
 8010148:	613b      	str	r3, [r7, #16]
 801014a:	4b28      	ldr	r3, [pc, #160]	; (80101ec <prvSwitchTimerLists+0xb4>)
 801014c:	681b      	ldr	r3, [r3, #0]
 801014e:	68db      	ldr	r3, [r3, #12]
 8010150:	68db      	ldr	r3, [r3, #12]
 8010152:	60fb      	str	r3, [r7, #12]
 8010154:	68fb      	ldr	r3, [r7, #12]
 8010156:	3304      	adds	r3, #4
 8010158:	0018      	movs	r0, r3
 801015a:	f7fe f8c6 	bl	800e2ea <uxListRemove>
 801015e:	68fb      	ldr	r3, [r7, #12]
 8010160:	6a1b      	ldr	r3, [r3, #32]
 8010162:	68fa      	ldr	r2, [r7, #12]
 8010164:	0010      	movs	r0, r2
 8010166:	4798      	blx	r3
 8010168:	68fb      	ldr	r3, [r7, #12]
 801016a:	2228      	movs	r2, #40	; 0x28
 801016c:	5c9b      	ldrb	r3, [r3, r2]
 801016e:	001a      	movs	r2, r3
 8010170:	2304      	movs	r3, #4
 8010172:	4013      	ands	r3, r2
 8010174:	d026      	beq.n	80101c4 <prvSwitchTimerLists+0x8c>
 8010176:	68fb      	ldr	r3, [r7, #12]
 8010178:	699b      	ldr	r3, [r3, #24]
 801017a:	693a      	ldr	r2, [r7, #16]
 801017c:	18d3      	adds	r3, r2, r3
 801017e:	60bb      	str	r3, [r7, #8]
 8010180:	68ba      	ldr	r2, [r7, #8]
 8010182:	693b      	ldr	r3, [r7, #16]
 8010184:	429a      	cmp	r2, r3
 8010186:	d90e      	bls.n	80101a6 <prvSwitchTimerLists+0x6e>
 8010188:	68fb      	ldr	r3, [r7, #12]
 801018a:	68ba      	ldr	r2, [r7, #8]
 801018c:	605a      	str	r2, [r3, #4]
 801018e:	68fb      	ldr	r3, [r7, #12]
 8010190:	68fa      	ldr	r2, [r7, #12]
 8010192:	611a      	str	r2, [r3, #16]
 8010194:	4b15      	ldr	r3, [pc, #84]	; (80101ec <prvSwitchTimerLists+0xb4>)
 8010196:	681a      	ldr	r2, [r3, #0]
 8010198:	68fb      	ldr	r3, [r7, #12]
 801019a:	3304      	adds	r3, #4
 801019c:	0019      	movs	r1, r3
 801019e:	0010      	movs	r0, r2
 80101a0:	f7fe f86d 	bl	800e27e <vListInsert>
 80101a4:	e00e      	b.n	80101c4 <prvSwitchTimerLists+0x8c>
 80101a6:	693a      	ldr	r2, [r7, #16]
 80101a8:	68f8      	ldr	r0, [r7, #12]
 80101aa:	2300      	movs	r3, #0
 80101ac:	9300      	str	r3, [sp, #0]
 80101ae:	2300      	movs	r3, #0
 80101b0:	2100      	movs	r1, #0
 80101b2:	f7ff fd8d 	bl	800fcd0 <xTimerGenericCommand>
 80101b6:	0003      	movs	r3, r0
 80101b8:	607b      	str	r3, [r7, #4]
 80101ba:	687b      	ldr	r3, [r7, #4]
 80101bc:	2b00      	cmp	r3, #0
 80101be:	d101      	bne.n	80101c4 <prvSwitchTimerLists+0x8c>
 80101c0:	b672      	cpsid	i
 80101c2:	e7fe      	b.n	80101c2 <prvSwitchTimerLists+0x8a>
 80101c4:	4b09      	ldr	r3, [pc, #36]	; (80101ec <prvSwitchTimerLists+0xb4>)
 80101c6:	681b      	ldr	r3, [r3, #0]
 80101c8:	681b      	ldr	r3, [r3, #0]
 80101ca:	2b00      	cmp	r3, #0
 80101cc:	d1b8      	bne.n	8010140 <prvSwitchTimerLists+0x8>
 80101ce:	4b07      	ldr	r3, [pc, #28]	; (80101ec <prvSwitchTimerLists+0xb4>)
 80101d0:	681b      	ldr	r3, [r3, #0]
 80101d2:	617b      	str	r3, [r7, #20]
 80101d4:	4b06      	ldr	r3, [pc, #24]	; (80101f0 <prvSwitchTimerLists+0xb8>)
 80101d6:	681a      	ldr	r2, [r3, #0]
 80101d8:	4b04      	ldr	r3, [pc, #16]	; (80101ec <prvSwitchTimerLists+0xb4>)
 80101da:	601a      	str	r2, [r3, #0]
 80101dc:	4b04      	ldr	r3, [pc, #16]	; (80101f0 <prvSwitchTimerLists+0xb8>)
 80101de:	697a      	ldr	r2, [r7, #20]
 80101e0:	601a      	str	r2, [r3, #0]
 80101e2:	46c0      	nop			; (mov r8, r8)
 80101e4:	46bd      	mov	sp, r7
 80101e6:	b006      	add	sp, #24
 80101e8:	bd80      	pop	{r7, pc}
 80101ea:	46c0      	nop			; (mov r8, r8)
 80101ec:	20000fc0 	.word	0x20000fc0
 80101f0:	20000fc4 	.word	0x20000fc4

080101f4 <prvCheckForValidListAndQueue>:
 80101f4:	b580      	push	{r7, lr}
 80101f6:	b082      	sub	sp, #8
 80101f8:	af02      	add	r7, sp, #8
 80101fa:	f000 f8d9 	bl	80103b0 <vPortEnterCritical>
 80101fe:	4b16      	ldr	r3, [pc, #88]	; (8010258 <prvCheckForValidListAndQueue+0x64>)
 8010200:	681b      	ldr	r3, [r3, #0]
 8010202:	2b00      	cmp	r3, #0
 8010204:	d123      	bne.n	801024e <prvCheckForValidListAndQueue+0x5a>
 8010206:	4b15      	ldr	r3, [pc, #84]	; (801025c <prvCheckForValidListAndQueue+0x68>)
 8010208:	0018      	movs	r0, r3
 801020a:	f7fd ffed 	bl	800e1e8 <vListInitialise>
 801020e:	4b14      	ldr	r3, [pc, #80]	; (8010260 <prvCheckForValidListAndQueue+0x6c>)
 8010210:	0018      	movs	r0, r3
 8010212:	f7fd ffe9 	bl	800e1e8 <vListInitialise>
 8010216:	4b13      	ldr	r3, [pc, #76]	; (8010264 <prvCheckForValidListAndQueue+0x70>)
 8010218:	4a10      	ldr	r2, [pc, #64]	; (801025c <prvCheckForValidListAndQueue+0x68>)
 801021a:	601a      	str	r2, [r3, #0]
 801021c:	4b12      	ldr	r3, [pc, #72]	; (8010268 <prvCheckForValidListAndQueue+0x74>)
 801021e:	4a10      	ldr	r2, [pc, #64]	; (8010260 <prvCheckForValidListAndQueue+0x6c>)
 8010220:	601a      	str	r2, [r3, #0]
 8010222:	4b12      	ldr	r3, [pc, #72]	; (801026c <prvCheckForValidListAndQueue+0x78>)
 8010224:	4a12      	ldr	r2, [pc, #72]	; (8010270 <prvCheckForValidListAndQueue+0x7c>)
 8010226:	2100      	movs	r1, #0
 8010228:	9100      	str	r1, [sp, #0]
 801022a:	2110      	movs	r1, #16
 801022c:	200a      	movs	r0, #10
 801022e:	f7fe f8d8 	bl	800e3e2 <xQueueGenericCreateStatic>
 8010232:	0002      	movs	r2, r0
 8010234:	4b08      	ldr	r3, [pc, #32]	; (8010258 <prvCheckForValidListAndQueue+0x64>)
 8010236:	601a      	str	r2, [r3, #0]
 8010238:	4b07      	ldr	r3, [pc, #28]	; (8010258 <prvCheckForValidListAndQueue+0x64>)
 801023a:	681b      	ldr	r3, [r3, #0]
 801023c:	2b00      	cmp	r3, #0
 801023e:	d006      	beq.n	801024e <prvCheckForValidListAndQueue+0x5a>
 8010240:	4b05      	ldr	r3, [pc, #20]	; (8010258 <prvCheckForValidListAndQueue+0x64>)
 8010242:	681b      	ldr	r3, [r3, #0]
 8010244:	4a0b      	ldr	r2, [pc, #44]	; (8010274 <prvCheckForValidListAndQueue+0x80>)
 8010246:	0011      	movs	r1, r2
 8010248:	0018      	movs	r0, r3
 801024a:	f7fe fcdd 	bl	800ec08 <vQueueAddToRegistry>
 801024e:	f000 f8c1 	bl	80103d4 <vPortExitCritical>
 8010252:	46c0      	nop			; (mov r8, r8)
 8010254:	46bd      	mov	sp, r7
 8010256:	bd80      	pop	{r7, pc}
 8010258:	20000fc8 	.word	0x20000fc8
 801025c:	20000f98 	.word	0x20000f98
 8010260:	20000fac 	.word	0x20000fac
 8010264:	20000fc0 	.word	0x20000fc0
 8010268:	20000fc4 	.word	0x20000fc4
 801026c:	20001074 	.word	0x20001074
 8010270:	20000fd4 	.word	0x20000fd4
 8010274:	08018aa0 	.word	0x08018aa0

08010278 <pxPortInitialiseStack>:
 8010278:	b580      	push	{r7, lr}
 801027a:	b084      	sub	sp, #16
 801027c:	af00      	add	r7, sp, #0
 801027e:	60f8      	str	r0, [r7, #12]
 8010280:	60b9      	str	r1, [r7, #8]
 8010282:	607a      	str	r2, [r7, #4]
 8010284:	68fb      	ldr	r3, [r7, #12]
 8010286:	3b04      	subs	r3, #4
 8010288:	60fb      	str	r3, [r7, #12]
 801028a:	68fb      	ldr	r3, [r7, #12]
 801028c:	2280      	movs	r2, #128	; 0x80
 801028e:	0452      	lsls	r2, r2, #17
 8010290:	601a      	str	r2, [r3, #0]
 8010292:	68fb      	ldr	r3, [r7, #12]
 8010294:	3b04      	subs	r3, #4
 8010296:	60fb      	str	r3, [r7, #12]
 8010298:	68ba      	ldr	r2, [r7, #8]
 801029a:	68fb      	ldr	r3, [r7, #12]
 801029c:	601a      	str	r2, [r3, #0]
 801029e:	68fb      	ldr	r3, [r7, #12]
 80102a0:	3b04      	subs	r3, #4
 80102a2:	60fb      	str	r3, [r7, #12]
 80102a4:	4a08      	ldr	r2, [pc, #32]	; (80102c8 <pxPortInitialiseStack+0x50>)
 80102a6:	68fb      	ldr	r3, [r7, #12]
 80102a8:	601a      	str	r2, [r3, #0]
 80102aa:	68fb      	ldr	r3, [r7, #12]
 80102ac:	3b14      	subs	r3, #20
 80102ae:	60fb      	str	r3, [r7, #12]
 80102b0:	687a      	ldr	r2, [r7, #4]
 80102b2:	68fb      	ldr	r3, [r7, #12]
 80102b4:	601a      	str	r2, [r3, #0]
 80102b6:	68fb      	ldr	r3, [r7, #12]
 80102b8:	3b20      	subs	r3, #32
 80102ba:	60fb      	str	r3, [r7, #12]
 80102bc:	68fb      	ldr	r3, [r7, #12]
 80102be:	0018      	movs	r0, r3
 80102c0:	46bd      	mov	sp, r7
 80102c2:	b004      	add	sp, #16
 80102c4:	bd80      	pop	{r7, pc}
 80102c6:	46c0      	nop			; (mov r8, r8)
 80102c8:	080102cd 	.word	0x080102cd

080102cc <prvTaskExitError>:
 80102cc:	b580      	push	{r7, lr}
 80102ce:	b082      	sub	sp, #8
 80102d0:	af00      	add	r7, sp, #0
 80102d2:	2300      	movs	r3, #0
 80102d4:	607b      	str	r3, [r7, #4]
 80102d6:	4b08      	ldr	r3, [pc, #32]	; (80102f8 <prvTaskExitError+0x2c>)
 80102d8:	681b      	ldr	r3, [r3, #0]
 80102da:	3301      	adds	r3, #1
 80102dc:	d001      	beq.n	80102e2 <prvTaskExitError+0x16>
 80102de:	b672      	cpsid	i
 80102e0:	e7fe      	b.n	80102e0 <prvTaskExitError+0x14>
 80102e2:	b672      	cpsid	i
 80102e4:	46c0      	nop			; (mov r8, r8)
 80102e6:	687b      	ldr	r3, [r7, #4]
 80102e8:	2b00      	cmp	r3, #0
 80102ea:	d0fc      	beq.n	80102e6 <prvTaskExitError+0x1a>
 80102ec:	46c0      	nop			; (mov r8, r8)
 80102ee:	46c0      	nop			; (mov r8, r8)
 80102f0:	46bd      	mov	sp, r7
 80102f2:	b002      	add	sp, #8
 80102f4:	bd80      	pop	{r7, pc}
 80102f6:	46c0      	nop			; (mov r8, r8)
 80102f8:	20000010 	.word	0x20000010

080102fc <SVC_Handler>:
 80102fc:	b580      	push	{r7, lr}
 80102fe:	af00      	add	r7, sp, #0
 8010300:	46c0      	nop			; (mov r8, r8)
 8010302:	46bd      	mov	sp, r7
 8010304:	bd80      	pop	{r7, pc}
	...

08010310 <vPortStartFirstTask>:
 8010310:	4a0b      	ldr	r2, [pc, #44]	; (8010340 <pxCurrentTCBConst2>)
 8010312:	6813      	ldr	r3, [r2, #0]
 8010314:	6818      	ldr	r0, [r3, #0]
 8010316:	3020      	adds	r0, #32
 8010318:	f380 8809 	msr	PSP, r0
 801031c:	2002      	movs	r0, #2
 801031e:	f380 8814 	msr	CONTROL, r0
 8010322:	f3bf 8f6f 	isb	sy
 8010326:	bc3f      	pop	{r0, r1, r2, r3, r4, r5}
 8010328:	46ae      	mov	lr, r5
 801032a:	bc08      	pop	{r3}
 801032c:	bc04      	pop	{r2}
 801032e:	b662      	cpsie	i
 8010330:	4718      	bx	r3
 8010332:	46c0      	nop			; (mov r8, r8)
 8010334:	46c0      	nop			; (mov r8, r8)
 8010336:	46c0      	nop			; (mov r8, r8)
 8010338:	46c0      	nop			; (mov r8, r8)
 801033a:	46c0      	nop			; (mov r8, r8)
 801033c:	46c0      	nop			; (mov r8, r8)
 801033e:	46c0      	nop			; (mov r8, r8)

08010340 <pxCurrentTCBConst2>:
 8010340:	20000a98 	.word	0x20000a98
 8010344:	46c0      	nop			; (mov r8, r8)
 8010346:	46c0      	nop			; (mov r8, r8)

08010348 <xPortStartScheduler>:
 8010348:	b580      	push	{r7, lr}
 801034a:	af00      	add	r7, sp, #0
 801034c:	4b0e      	ldr	r3, [pc, #56]	; (8010388 <xPortStartScheduler+0x40>)
 801034e:	681a      	ldr	r2, [r3, #0]
 8010350:	4b0d      	ldr	r3, [pc, #52]	; (8010388 <xPortStartScheduler+0x40>)
 8010352:	21ff      	movs	r1, #255	; 0xff
 8010354:	0409      	lsls	r1, r1, #16
 8010356:	430a      	orrs	r2, r1
 8010358:	601a      	str	r2, [r3, #0]
 801035a:	4b0b      	ldr	r3, [pc, #44]	; (8010388 <xPortStartScheduler+0x40>)
 801035c:	681a      	ldr	r2, [r3, #0]
 801035e:	4b0a      	ldr	r3, [pc, #40]	; (8010388 <xPortStartScheduler+0x40>)
 8010360:	21ff      	movs	r1, #255	; 0xff
 8010362:	0609      	lsls	r1, r1, #24
 8010364:	430a      	orrs	r2, r1
 8010366:	601a      	str	r2, [r3, #0]
 8010368:	f000 f898 	bl	801049c <vPortSetupTimerInterrupt>
 801036c:	4b07      	ldr	r3, [pc, #28]	; (801038c <xPortStartScheduler+0x44>)
 801036e:	2200      	movs	r2, #0
 8010370:	601a      	str	r2, [r3, #0]
 8010372:	f7ff ffcd 	bl	8010310 <vPortStartFirstTask>
 8010376:	f7ff f95d 	bl	800f634 <vTaskSwitchContext>
 801037a:	f7ff ffa7 	bl	80102cc <prvTaskExitError>
 801037e:	2300      	movs	r3, #0
 8010380:	0018      	movs	r0, r3
 8010382:	46bd      	mov	sp, r7
 8010384:	bd80      	pop	{r7, pc}
 8010386:	46c0      	nop			; (mov r8, r8)
 8010388:	e000ed20 	.word	0xe000ed20
 801038c:	20000010 	.word	0x20000010

08010390 <vPortYield>:
 8010390:	b580      	push	{r7, lr}
 8010392:	af00      	add	r7, sp, #0
 8010394:	4b05      	ldr	r3, [pc, #20]	; (80103ac <vPortYield+0x1c>)
 8010396:	2280      	movs	r2, #128	; 0x80
 8010398:	0552      	lsls	r2, r2, #21
 801039a:	601a      	str	r2, [r3, #0]
 801039c:	f3bf 8f4f 	dsb	sy
 80103a0:	f3bf 8f6f 	isb	sy
 80103a4:	46c0      	nop			; (mov r8, r8)
 80103a6:	46bd      	mov	sp, r7
 80103a8:	bd80      	pop	{r7, pc}
 80103aa:	46c0      	nop			; (mov r8, r8)
 80103ac:	e000ed04 	.word	0xe000ed04

080103b0 <vPortEnterCritical>:
 80103b0:	b580      	push	{r7, lr}
 80103b2:	af00      	add	r7, sp, #0
 80103b4:	b672      	cpsid	i
 80103b6:	4b06      	ldr	r3, [pc, #24]	; (80103d0 <vPortEnterCritical+0x20>)
 80103b8:	681b      	ldr	r3, [r3, #0]
 80103ba:	1c5a      	adds	r2, r3, #1
 80103bc:	4b04      	ldr	r3, [pc, #16]	; (80103d0 <vPortEnterCritical+0x20>)
 80103be:	601a      	str	r2, [r3, #0]
 80103c0:	f3bf 8f4f 	dsb	sy
 80103c4:	f3bf 8f6f 	isb	sy
 80103c8:	46c0      	nop			; (mov r8, r8)
 80103ca:	46bd      	mov	sp, r7
 80103cc:	bd80      	pop	{r7, pc}
 80103ce:	46c0      	nop			; (mov r8, r8)
 80103d0:	20000010 	.word	0x20000010

080103d4 <vPortExitCritical>:
 80103d4:	b580      	push	{r7, lr}
 80103d6:	af00      	add	r7, sp, #0
 80103d8:	4b09      	ldr	r3, [pc, #36]	; (8010400 <vPortExitCritical+0x2c>)
 80103da:	681b      	ldr	r3, [r3, #0]
 80103dc:	2b00      	cmp	r3, #0
 80103de:	d101      	bne.n	80103e4 <vPortExitCritical+0x10>
 80103e0:	b672      	cpsid	i
 80103e2:	e7fe      	b.n	80103e2 <vPortExitCritical+0xe>
 80103e4:	4b06      	ldr	r3, [pc, #24]	; (8010400 <vPortExitCritical+0x2c>)
 80103e6:	681b      	ldr	r3, [r3, #0]
 80103e8:	1e5a      	subs	r2, r3, #1
 80103ea:	4b05      	ldr	r3, [pc, #20]	; (8010400 <vPortExitCritical+0x2c>)
 80103ec:	601a      	str	r2, [r3, #0]
 80103ee:	4b04      	ldr	r3, [pc, #16]	; (8010400 <vPortExitCritical+0x2c>)
 80103f0:	681b      	ldr	r3, [r3, #0]
 80103f2:	2b00      	cmp	r3, #0
 80103f4:	d100      	bne.n	80103f8 <vPortExitCritical+0x24>
 80103f6:	b662      	cpsie	i
 80103f8:	46c0      	nop			; (mov r8, r8)
 80103fa:	46bd      	mov	sp, r7
 80103fc:	bd80      	pop	{r7, pc}
 80103fe:	46c0      	nop			; (mov r8, r8)
 8010400:	20000010 	.word	0x20000010

08010404 <ulSetInterruptMaskFromISR>:
 8010404:	f3ef 8010 	mrs	r0, PRIMASK
 8010408:	b672      	cpsid	i
 801040a:	4770      	bx	lr
 801040c:	46c0      	nop			; (mov r8, r8)
 801040e:	0018      	movs	r0, r3

08010410 <vClearInterruptMaskFromISR>:
 8010410:	f380 8810 	msr	PRIMASK, r0
 8010414:	4770      	bx	lr
 8010416:	46c0      	nop			; (mov r8, r8)
	...

08010420 <PendSV_Handler>:
 8010420:	f3ef 8009 	mrs	r0, PSP
 8010424:	4b0e      	ldr	r3, [pc, #56]	; (8010460 <pxCurrentTCBConst>)
 8010426:	681a      	ldr	r2, [r3, #0]
 8010428:	3820      	subs	r0, #32
 801042a:	6010      	str	r0, [r2, #0]
 801042c:	c0f0      	stmia	r0!, {r4, r5, r6, r7}
 801042e:	4644      	mov	r4, r8
 8010430:	464d      	mov	r5, r9
 8010432:	4656      	mov	r6, sl
 8010434:	465f      	mov	r7, fp
 8010436:	c0f0      	stmia	r0!, {r4, r5, r6, r7}
 8010438:	b508      	push	{r3, lr}
 801043a:	b672      	cpsid	i
 801043c:	f7ff f8fa 	bl	800f634 <vTaskSwitchContext>
 8010440:	b662      	cpsie	i
 8010442:	bc0c      	pop	{r2, r3}
 8010444:	6811      	ldr	r1, [r2, #0]
 8010446:	6808      	ldr	r0, [r1, #0]
 8010448:	3010      	adds	r0, #16
 801044a:	c8f0      	ldmia	r0!, {r4, r5, r6, r7}
 801044c:	46a0      	mov	r8, r4
 801044e:	46a9      	mov	r9, r5
 8010450:	46b2      	mov	sl, r6
 8010452:	46bb      	mov	fp, r7
 8010454:	f380 8809 	msr	PSP, r0
 8010458:	3820      	subs	r0, #32
 801045a:	c8f0      	ldmia	r0!, {r4, r5, r6, r7}
 801045c:	4718      	bx	r3
 801045e:	46c0      	nop			; (mov r8, r8)

08010460 <pxCurrentTCBConst>:
 8010460:	20000a98 	.word	0x20000a98
 8010464:	46c0      	nop			; (mov r8, r8)
 8010466:	46c0      	nop			; (mov r8, r8)

08010468 <xPortSysTickHandler>:
 8010468:	b580      	push	{r7, lr}
 801046a:	b082      	sub	sp, #8
 801046c:	af00      	add	r7, sp, #0
 801046e:	f7ff ffc9 	bl	8010404 <ulSetInterruptMaskFromISR>
 8010472:	0003      	movs	r3, r0
 8010474:	607b      	str	r3, [r7, #4]
 8010476:	f7ff f82d 	bl	800f4d4 <xTaskIncrementTick>
 801047a:	1e03      	subs	r3, r0, #0
 801047c:	d003      	beq.n	8010486 <xPortSysTickHandler+0x1e>
 801047e:	4b06      	ldr	r3, [pc, #24]	; (8010498 <xPortSysTickHandler+0x30>)
 8010480:	2280      	movs	r2, #128	; 0x80
 8010482:	0552      	lsls	r2, r2, #21
 8010484:	601a      	str	r2, [r3, #0]
 8010486:	687b      	ldr	r3, [r7, #4]
 8010488:	0018      	movs	r0, r3
 801048a:	f7ff ffc1 	bl	8010410 <vClearInterruptMaskFromISR>
 801048e:	46c0      	nop			; (mov r8, r8)
 8010490:	46bd      	mov	sp, r7
 8010492:	b002      	add	sp, #8
 8010494:	bd80      	pop	{r7, pc}
 8010496:	46c0      	nop			; (mov r8, r8)
 8010498:	e000ed04 	.word	0xe000ed04

0801049c <vPortSetupTimerInterrupt>:
 801049c:	b580      	push	{r7, lr}
 801049e:	af00      	add	r7, sp, #0
 80104a0:	4b0b      	ldr	r3, [pc, #44]	; (80104d0 <vPortSetupTimerInterrupt+0x34>)
 80104a2:	2200      	movs	r2, #0
 80104a4:	601a      	str	r2, [r3, #0]
 80104a6:	4b0b      	ldr	r3, [pc, #44]	; (80104d4 <vPortSetupTimerInterrupt+0x38>)
 80104a8:	2200      	movs	r2, #0
 80104aa:	601a      	str	r2, [r3, #0]
 80104ac:	4b0a      	ldr	r3, [pc, #40]	; (80104d8 <vPortSetupTimerInterrupt+0x3c>)
 80104ae:	681b      	ldr	r3, [r3, #0]
 80104b0:	22fa      	movs	r2, #250	; 0xfa
 80104b2:	0091      	lsls	r1, r2, #2
 80104b4:	0018      	movs	r0, r3
 80104b6:	f7f5 fe9b 	bl	80061f0 <__udivsi3>
 80104ba:	0003      	movs	r3, r0
 80104bc:	001a      	movs	r2, r3
 80104be:	4b07      	ldr	r3, [pc, #28]	; (80104dc <vPortSetupTimerInterrupt+0x40>)
 80104c0:	3a01      	subs	r2, #1
 80104c2:	601a      	str	r2, [r3, #0]
 80104c4:	4b02      	ldr	r3, [pc, #8]	; (80104d0 <vPortSetupTimerInterrupt+0x34>)
 80104c6:	2207      	movs	r2, #7
 80104c8:	601a      	str	r2, [r3, #0]
 80104ca:	46c0      	nop			; (mov r8, r8)
 80104cc:	46bd      	mov	sp, r7
 80104ce:	bd80      	pop	{r7, pc}
 80104d0:	e000e010 	.word	0xe000e010
 80104d4:	e000e018 	.word	0xe000e018
 80104d8:	20000004 	.word	0x20000004
 80104dc:	e000e014 	.word	0xe000e014

080104e0 <pvPortMalloc>:
 80104e0:	b580      	push	{r7, lr}
 80104e2:	b086      	sub	sp, #24
 80104e4:	af00      	add	r7, sp, #0
 80104e6:	6078      	str	r0, [r7, #4]
 80104e8:	2300      	movs	r3, #0
 80104ea:	60fb      	str	r3, [r7, #12]
 80104ec:	f7fe ff4c 	bl	800f388 <vTaskSuspendAll>
 80104f0:	4b4b      	ldr	r3, [pc, #300]	; (8010620 <pvPortMalloc+0x140>)
 80104f2:	681b      	ldr	r3, [r3, #0]
 80104f4:	2b00      	cmp	r3, #0
 80104f6:	d101      	bne.n	80104fc <pvPortMalloc+0x1c>
 80104f8:	f000 f8ec 	bl	80106d4 <prvHeapInit>
 80104fc:	4b49      	ldr	r3, [pc, #292]	; (8010624 <pvPortMalloc+0x144>)
 80104fe:	681b      	ldr	r3, [r3, #0]
 8010500:	687a      	ldr	r2, [r7, #4]
 8010502:	4013      	ands	r3, r2
 8010504:	d000      	beq.n	8010508 <pvPortMalloc+0x28>
 8010506:	e07e      	b.n	8010606 <pvPortMalloc+0x126>
 8010508:	687b      	ldr	r3, [r7, #4]
 801050a:	2b00      	cmp	r3, #0
 801050c:	d012      	beq.n	8010534 <pvPortMalloc+0x54>
 801050e:	2208      	movs	r2, #8
 8010510:	687b      	ldr	r3, [r7, #4]
 8010512:	189b      	adds	r3, r3, r2
 8010514:	607b      	str	r3, [r7, #4]
 8010516:	687b      	ldr	r3, [r7, #4]
 8010518:	2207      	movs	r2, #7
 801051a:	4013      	ands	r3, r2
 801051c:	d00a      	beq.n	8010534 <pvPortMalloc+0x54>
 801051e:	687b      	ldr	r3, [r7, #4]
 8010520:	2207      	movs	r2, #7
 8010522:	4393      	bics	r3, r2
 8010524:	3308      	adds	r3, #8
 8010526:	607b      	str	r3, [r7, #4]
 8010528:	687b      	ldr	r3, [r7, #4]
 801052a:	2207      	movs	r2, #7
 801052c:	4013      	ands	r3, r2
 801052e:	d001      	beq.n	8010534 <pvPortMalloc+0x54>
 8010530:	b672      	cpsid	i
 8010532:	e7fe      	b.n	8010532 <pvPortMalloc+0x52>
 8010534:	687b      	ldr	r3, [r7, #4]
 8010536:	2b00      	cmp	r3, #0
 8010538:	d065      	beq.n	8010606 <pvPortMalloc+0x126>
 801053a:	4b3b      	ldr	r3, [pc, #236]	; (8010628 <pvPortMalloc+0x148>)
 801053c:	681b      	ldr	r3, [r3, #0]
 801053e:	687a      	ldr	r2, [r7, #4]
 8010540:	429a      	cmp	r2, r3
 8010542:	d860      	bhi.n	8010606 <pvPortMalloc+0x126>
 8010544:	4b39      	ldr	r3, [pc, #228]	; (801062c <pvPortMalloc+0x14c>)
 8010546:	613b      	str	r3, [r7, #16]
 8010548:	4b38      	ldr	r3, [pc, #224]	; (801062c <pvPortMalloc+0x14c>)
 801054a:	681b      	ldr	r3, [r3, #0]
 801054c:	617b      	str	r3, [r7, #20]
 801054e:	e004      	b.n	801055a <pvPortMalloc+0x7a>
 8010550:	697b      	ldr	r3, [r7, #20]
 8010552:	613b      	str	r3, [r7, #16]
 8010554:	697b      	ldr	r3, [r7, #20]
 8010556:	681b      	ldr	r3, [r3, #0]
 8010558:	617b      	str	r3, [r7, #20]
 801055a:	697b      	ldr	r3, [r7, #20]
 801055c:	685b      	ldr	r3, [r3, #4]
 801055e:	687a      	ldr	r2, [r7, #4]
 8010560:	429a      	cmp	r2, r3
 8010562:	d903      	bls.n	801056c <pvPortMalloc+0x8c>
 8010564:	697b      	ldr	r3, [r7, #20]
 8010566:	681b      	ldr	r3, [r3, #0]
 8010568:	2b00      	cmp	r3, #0
 801056a:	d1f1      	bne.n	8010550 <pvPortMalloc+0x70>
 801056c:	4b2c      	ldr	r3, [pc, #176]	; (8010620 <pvPortMalloc+0x140>)
 801056e:	681b      	ldr	r3, [r3, #0]
 8010570:	697a      	ldr	r2, [r7, #20]
 8010572:	429a      	cmp	r2, r3
 8010574:	d047      	beq.n	8010606 <pvPortMalloc+0x126>
 8010576:	693b      	ldr	r3, [r7, #16]
 8010578:	681b      	ldr	r3, [r3, #0]
 801057a:	2208      	movs	r2, #8
 801057c:	189b      	adds	r3, r3, r2
 801057e:	60fb      	str	r3, [r7, #12]
 8010580:	697b      	ldr	r3, [r7, #20]
 8010582:	681a      	ldr	r2, [r3, #0]
 8010584:	693b      	ldr	r3, [r7, #16]
 8010586:	601a      	str	r2, [r3, #0]
 8010588:	697b      	ldr	r3, [r7, #20]
 801058a:	685a      	ldr	r2, [r3, #4]
 801058c:	687b      	ldr	r3, [r7, #4]
 801058e:	1ad2      	subs	r2, r2, r3
 8010590:	2308      	movs	r3, #8
 8010592:	005b      	lsls	r3, r3, #1
 8010594:	429a      	cmp	r2, r3
 8010596:	d916      	bls.n	80105c6 <pvPortMalloc+0xe6>
 8010598:	697a      	ldr	r2, [r7, #20]
 801059a:	687b      	ldr	r3, [r7, #4]
 801059c:	18d3      	adds	r3, r2, r3
 801059e:	60bb      	str	r3, [r7, #8]
 80105a0:	68bb      	ldr	r3, [r7, #8]
 80105a2:	2207      	movs	r2, #7
 80105a4:	4013      	ands	r3, r2
 80105a6:	d001      	beq.n	80105ac <pvPortMalloc+0xcc>
 80105a8:	b672      	cpsid	i
 80105aa:	e7fe      	b.n	80105aa <pvPortMalloc+0xca>
 80105ac:	697b      	ldr	r3, [r7, #20]
 80105ae:	685a      	ldr	r2, [r3, #4]
 80105b0:	687b      	ldr	r3, [r7, #4]
 80105b2:	1ad2      	subs	r2, r2, r3
 80105b4:	68bb      	ldr	r3, [r7, #8]
 80105b6:	605a      	str	r2, [r3, #4]
 80105b8:	697b      	ldr	r3, [r7, #20]
 80105ba:	687a      	ldr	r2, [r7, #4]
 80105bc:	605a      	str	r2, [r3, #4]
 80105be:	68bb      	ldr	r3, [r7, #8]
 80105c0:	0018      	movs	r0, r3
 80105c2:	f000 f8e7 	bl	8010794 <prvInsertBlockIntoFreeList>
 80105c6:	4b18      	ldr	r3, [pc, #96]	; (8010628 <pvPortMalloc+0x148>)
 80105c8:	681a      	ldr	r2, [r3, #0]
 80105ca:	697b      	ldr	r3, [r7, #20]
 80105cc:	685b      	ldr	r3, [r3, #4]
 80105ce:	1ad2      	subs	r2, r2, r3
 80105d0:	4b15      	ldr	r3, [pc, #84]	; (8010628 <pvPortMalloc+0x148>)
 80105d2:	601a      	str	r2, [r3, #0]
 80105d4:	4b14      	ldr	r3, [pc, #80]	; (8010628 <pvPortMalloc+0x148>)
 80105d6:	681a      	ldr	r2, [r3, #0]
 80105d8:	4b15      	ldr	r3, [pc, #84]	; (8010630 <pvPortMalloc+0x150>)
 80105da:	681b      	ldr	r3, [r3, #0]
 80105dc:	429a      	cmp	r2, r3
 80105de:	d203      	bcs.n	80105e8 <pvPortMalloc+0x108>
 80105e0:	4b11      	ldr	r3, [pc, #68]	; (8010628 <pvPortMalloc+0x148>)
 80105e2:	681a      	ldr	r2, [r3, #0]
 80105e4:	4b12      	ldr	r3, [pc, #72]	; (8010630 <pvPortMalloc+0x150>)
 80105e6:	601a      	str	r2, [r3, #0]
 80105e8:	697b      	ldr	r3, [r7, #20]
 80105ea:	685a      	ldr	r2, [r3, #4]
 80105ec:	4b0d      	ldr	r3, [pc, #52]	; (8010624 <pvPortMalloc+0x144>)
 80105ee:	681b      	ldr	r3, [r3, #0]
 80105f0:	431a      	orrs	r2, r3
 80105f2:	697b      	ldr	r3, [r7, #20]
 80105f4:	605a      	str	r2, [r3, #4]
 80105f6:	697b      	ldr	r3, [r7, #20]
 80105f8:	2200      	movs	r2, #0
 80105fa:	601a      	str	r2, [r3, #0]
 80105fc:	4b0d      	ldr	r3, [pc, #52]	; (8010634 <pvPortMalloc+0x154>)
 80105fe:	681b      	ldr	r3, [r3, #0]
 8010600:	1c5a      	adds	r2, r3, #1
 8010602:	4b0c      	ldr	r3, [pc, #48]	; (8010634 <pvPortMalloc+0x154>)
 8010604:	601a      	str	r2, [r3, #0]
 8010606:	f7fe fecb 	bl	800f3a0 <xTaskResumeAll>
 801060a:	68fb      	ldr	r3, [r7, #12]
 801060c:	2207      	movs	r2, #7
 801060e:	4013      	ands	r3, r2
 8010610:	d001      	beq.n	8010616 <pvPortMalloc+0x136>
 8010612:	b672      	cpsid	i
 8010614:	e7fe      	b.n	8010614 <pvPortMalloc+0x134>
 8010616:	68fb      	ldr	r3, [r7, #12]
 8010618:	0018      	movs	r0, r3
 801061a:	46bd      	mov	sp, r7
 801061c:	b006      	add	sp, #24
 801061e:	bd80      	pop	{r7, pc}
 8010620:	20002c24 	.word	0x20002c24
 8010624:	20002c38 	.word	0x20002c38
 8010628:	20002c28 	.word	0x20002c28
 801062c:	20002c1c 	.word	0x20002c1c
 8010630:	20002c2c 	.word	0x20002c2c
 8010634:	20002c30 	.word	0x20002c30

08010638 <vPortFree>:
 8010638:	b580      	push	{r7, lr}
 801063a:	b084      	sub	sp, #16
 801063c:	af00      	add	r7, sp, #0
 801063e:	6078      	str	r0, [r7, #4]
 8010640:	687b      	ldr	r3, [r7, #4]
 8010642:	60fb      	str	r3, [r7, #12]
 8010644:	687b      	ldr	r3, [r7, #4]
 8010646:	2b00      	cmp	r3, #0
 8010648:	d03a      	beq.n	80106c0 <vPortFree+0x88>
 801064a:	2308      	movs	r3, #8
 801064c:	425b      	negs	r3, r3
 801064e:	68fa      	ldr	r2, [r7, #12]
 8010650:	18d3      	adds	r3, r2, r3
 8010652:	60fb      	str	r3, [r7, #12]
 8010654:	68fb      	ldr	r3, [r7, #12]
 8010656:	60bb      	str	r3, [r7, #8]
 8010658:	68bb      	ldr	r3, [r7, #8]
 801065a:	685a      	ldr	r2, [r3, #4]
 801065c:	4b1a      	ldr	r3, [pc, #104]	; (80106c8 <vPortFree+0x90>)
 801065e:	681b      	ldr	r3, [r3, #0]
 8010660:	4013      	ands	r3, r2
 8010662:	d101      	bne.n	8010668 <vPortFree+0x30>
 8010664:	b672      	cpsid	i
 8010666:	e7fe      	b.n	8010666 <vPortFree+0x2e>
 8010668:	68bb      	ldr	r3, [r7, #8]
 801066a:	681b      	ldr	r3, [r3, #0]
 801066c:	2b00      	cmp	r3, #0
 801066e:	d001      	beq.n	8010674 <vPortFree+0x3c>
 8010670:	b672      	cpsid	i
 8010672:	e7fe      	b.n	8010672 <vPortFree+0x3a>
 8010674:	68bb      	ldr	r3, [r7, #8]
 8010676:	685a      	ldr	r2, [r3, #4]
 8010678:	4b13      	ldr	r3, [pc, #76]	; (80106c8 <vPortFree+0x90>)
 801067a:	681b      	ldr	r3, [r3, #0]
 801067c:	4013      	ands	r3, r2
 801067e:	d01f      	beq.n	80106c0 <vPortFree+0x88>
 8010680:	68bb      	ldr	r3, [r7, #8]
 8010682:	681b      	ldr	r3, [r3, #0]
 8010684:	2b00      	cmp	r3, #0
 8010686:	d11b      	bne.n	80106c0 <vPortFree+0x88>
 8010688:	68bb      	ldr	r3, [r7, #8]
 801068a:	685a      	ldr	r2, [r3, #4]
 801068c:	4b0e      	ldr	r3, [pc, #56]	; (80106c8 <vPortFree+0x90>)
 801068e:	681b      	ldr	r3, [r3, #0]
 8010690:	43db      	mvns	r3, r3
 8010692:	401a      	ands	r2, r3
 8010694:	68bb      	ldr	r3, [r7, #8]
 8010696:	605a      	str	r2, [r3, #4]
 8010698:	f7fe fe76 	bl	800f388 <vTaskSuspendAll>
 801069c:	68bb      	ldr	r3, [r7, #8]
 801069e:	685a      	ldr	r2, [r3, #4]
 80106a0:	4b0a      	ldr	r3, [pc, #40]	; (80106cc <vPortFree+0x94>)
 80106a2:	681b      	ldr	r3, [r3, #0]
 80106a4:	18d2      	adds	r2, r2, r3
 80106a6:	4b09      	ldr	r3, [pc, #36]	; (80106cc <vPortFree+0x94>)
 80106a8:	601a      	str	r2, [r3, #0]
 80106aa:	68bb      	ldr	r3, [r7, #8]
 80106ac:	0018      	movs	r0, r3
 80106ae:	f000 f871 	bl	8010794 <prvInsertBlockIntoFreeList>
 80106b2:	4b07      	ldr	r3, [pc, #28]	; (80106d0 <vPortFree+0x98>)
 80106b4:	681b      	ldr	r3, [r3, #0]
 80106b6:	1c5a      	adds	r2, r3, #1
 80106b8:	4b05      	ldr	r3, [pc, #20]	; (80106d0 <vPortFree+0x98>)
 80106ba:	601a      	str	r2, [r3, #0]
 80106bc:	f7fe fe70 	bl	800f3a0 <xTaskResumeAll>
 80106c0:	46c0      	nop			; (mov r8, r8)
 80106c2:	46bd      	mov	sp, r7
 80106c4:	b004      	add	sp, #16
 80106c6:	bd80      	pop	{r7, pc}
 80106c8:	20002c38 	.word	0x20002c38
 80106cc:	20002c28 	.word	0x20002c28
 80106d0:	20002c34 	.word	0x20002c34

080106d4 <prvHeapInit>:
 80106d4:	b580      	push	{r7, lr}
 80106d6:	b084      	sub	sp, #16
 80106d8:	af00      	add	r7, sp, #0
 80106da:	4b27      	ldr	r3, [pc, #156]	; (8010778 <prvHeapInit+0xa4>)
 80106dc:	60bb      	str	r3, [r7, #8]
 80106de:	4b27      	ldr	r3, [pc, #156]	; (801077c <prvHeapInit+0xa8>)
 80106e0:	60fb      	str	r3, [r7, #12]
 80106e2:	68fb      	ldr	r3, [r7, #12]
 80106e4:	2207      	movs	r2, #7
 80106e6:	4013      	ands	r3, r2
 80106e8:	d00c      	beq.n	8010704 <prvHeapInit+0x30>
 80106ea:	68fb      	ldr	r3, [r7, #12]
 80106ec:	3307      	adds	r3, #7
 80106ee:	60fb      	str	r3, [r7, #12]
 80106f0:	68fb      	ldr	r3, [r7, #12]
 80106f2:	2207      	movs	r2, #7
 80106f4:	4393      	bics	r3, r2
 80106f6:	60fb      	str	r3, [r7, #12]
 80106f8:	68ba      	ldr	r2, [r7, #8]
 80106fa:	68fb      	ldr	r3, [r7, #12]
 80106fc:	1ad2      	subs	r2, r2, r3
 80106fe:	4b1f      	ldr	r3, [pc, #124]	; (801077c <prvHeapInit+0xa8>)
 8010700:	18d3      	adds	r3, r2, r3
 8010702:	60bb      	str	r3, [r7, #8]
 8010704:	68fb      	ldr	r3, [r7, #12]
 8010706:	607b      	str	r3, [r7, #4]
 8010708:	4b1d      	ldr	r3, [pc, #116]	; (8010780 <prvHeapInit+0xac>)
 801070a:	687a      	ldr	r2, [r7, #4]
 801070c:	601a      	str	r2, [r3, #0]
 801070e:	4b1c      	ldr	r3, [pc, #112]	; (8010780 <prvHeapInit+0xac>)
 8010710:	2200      	movs	r2, #0
 8010712:	605a      	str	r2, [r3, #4]
 8010714:	687b      	ldr	r3, [r7, #4]
 8010716:	68ba      	ldr	r2, [r7, #8]
 8010718:	18d3      	adds	r3, r2, r3
 801071a:	60fb      	str	r3, [r7, #12]
 801071c:	2208      	movs	r2, #8
 801071e:	68fb      	ldr	r3, [r7, #12]
 8010720:	1a9b      	subs	r3, r3, r2
 8010722:	60fb      	str	r3, [r7, #12]
 8010724:	68fb      	ldr	r3, [r7, #12]
 8010726:	2207      	movs	r2, #7
 8010728:	4393      	bics	r3, r2
 801072a:	60fb      	str	r3, [r7, #12]
 801072c:	68fa      	ldr	r2, [r7, #12]
 801072e:	4b15      	ldr	r3, [pc, #84]	; (8010784 <prvHeapInit+0xb0>)
 8010730:	601a      	str	r2, [r3, #0]
 8010732:	4b14      	ldr	r3, [pc, #80]	; (8010784 <prvHeapInit+0xb0>)
 8010734:	681b      	ldr	r3, [r3, #0]
 8010736:	2200      	movs	r2, #0
 8010738:	605a      	str	r2, [r3, #4]
 801073a:	4b12      	ldr	r3, [pc, #72]	; (8010784 <prvHeapInit+0xb0>)
 801073c:	681b      	ldr	r3, [r3, #0]
 801073e:	2200      	movs	r2, #0
 8010740:	601a      	str	r2, [r3, #0]
 8010742:	687b      	ldr	r3, [r7, #4]
 8010744:	603b      	str	r3, [r7, #0]
 8010746:	683b      	ldr	r3, [r7, #0]
 8010748:	68fa      	ldr	r2, [r7, #12]
 801074a:	1ad2      	subs	r2, r2, r3
 801074c:	683b      	ldr	r3, [r7, #0]
 801074e:	605a      	str	r2, [r3, #4]
 8010750:	4b0c      	ldr	r3, [pc, #48]	; (8010784 <prvHeapInit+0xb0>)
 8010752:	681a      	ldr	r2, [r3, #0]
 8010754:	683b      	ldr	r3, [r7, #0]
 8010756:	601a      	str	r2, [r3, #0]
 8010758:	683b      	ldr	r3, [r7, #0]
 801075a:	685a      	ldr	r2, [r3, #4]
 801075c:	4b0a      	ldr	r3, [pc, #40]	; (8010788 <prvHeapInit+0xb4>)
 801075e:	601a      	str	r2, [r3, #0]
 8010760:	683b      	ldr	r3, [r7, #0]
 8010762:	685a      	ldr	r2, [r3, #4]
 8010764:	4b09      	ldr	r3, [pc, #36]	; (801078c <prvHeapInit+0xb8>)
 8010766:	601a      	str	r2, [r3, #0]
 8010768:	4b09      	ldr	r3, [pc, #36]	; (8010790 <prvHeapInit+0xbc>)
 801076a:	2280      	movs	r2, #128	; 0x80
 801076c:	0612      	lsls	r2, r2, #24
 801076e:	601a      	str	r2, [r3, #0]
 8010770:	46c0      	nop			; (mov r8, r8)
 8010772:	46bd      	mov	sp, r7
 8010774:	b004      	add	sp, #16
 8010776:	bd80      	pop	{r7, pc}
 8010778:	00001b58 	.word	0x00001b58
 801077c:	200010c4 	.word	0x200010c4
 8010780:	20002c1c 	.word	0x20002c1c
 8010784:	20002c24 	.word	0x20002c24
 8010788:	20002c2c 	.word	0x20002c2c
 801078c:	20002c28 	.word	0x20002c28
 8010790:	20002c38 	.word	0x20002c38

08010794 <prvInsertBlockIntoFreeList>:
 8010794:	b580      	push	{r7, lr}
 8010796:	b084      	sub	sp, #16
 8010798:	af00      	add	r7, sp, #0
 801079a:	6078      	str	r0, [r7, #4]
 801079c:	4b27      	ldr	r3, [pc, #156]	; (801083c <prvInsertBlockIntoFreeList+0xa8>)
 801079e:	60fb      	str	r3, [r7, #12]
 80107a0:	e002      	b.n	80107a8 <prvInsertBlockIntoFreeList+0x14>
 80107a2:	68fb      	ldr	r3, [r7, #12]
 80107a4:	681b      	ldr	r3, [r3, #0]
 80107a6:	60fb      	str	r3, [r7, #12]
 80107a8:	68fb      	ldr	r3, [r7, #12]
 80107aa:	681b      	ldr	r3, [r3, #0]
 80107ac:	687a      	ldr	r2, [r7, #4]
 80107ae:	429a      	cmp	r2, r3
 80107b0:	d8f7      	bhi.n	80107a2 <prvInsertBlockIntoFreeList+0xe>
 80107b2:	68fb      	ldr	r3, [r7, #12]
 80107b4:	60bb      	str	r3, [r7, #8]
 80107b6:	68fb      	ldr	r3, [r7, #12]
 80107b8:	685b      	ldr	r3, [r3, #4]
 80107ba:	68ba      	ldr	r2, [r7, #8]
 80107bc:	18d3      	adds	r3, r2, r3
 80107be:	687a      	ldr	r2, [r7, #4]
 80107c0:	429a      	cmp	r2, r3
 80107c2:	d108      	bne.n	80107d6 <prvInsertBlockIntoFreeList+0x42>
 80107c4:	68fb      	ldr	r3, [r7, #12]
 80107c6:	685a      	ldr	r2, [r3, #4]
 80107c8:	687b      	ldr	r3, [r7, #4]
 80107ca:	685b      	ldr	r3, [r3, #4]
 80107cc:	18d2      	adds	r2, r2, r3
 80107ce:	68fb      	ldr	r3, [r7, #12]
 80107d0:	605a      	str	r2, [r3, #4]
 80107d2:	68fb      	ldr	r3, [r7, #12]
 80107d4:	607b      	str	r3, [r7, #4]
 80107d6:	687b      	ldr	r3, [r7, #4]
 80107d8:	60bb      	str	r3, [r7, #8]
 80107da:	687b      	ldr	r3, [r7, #4]
 80107dc:	685b      	ldr	r3, [r3, #4]
 80107de:	68ba      	ldr	r2, [r7, #8]
 80107e0:	18d2      	adds	r2, r2, r3
 80107e2:	68fb      	ldr	r3, [r7, #12]
 80107e4:	681b      	ldr	r3, [r3, #0]
 80107e6:	429a      	cmp	r2, r3
 80107e8:	d118      	bne.n	801081c <prvInsertBlockIntoFreeList+0x88>
 80107ea:	68fb      	ldr	r3, [r7, #12]
 80107ec:	681a      	ldr	r2, [r3, #0]
 80107ee:	4b14      	ldr	r3, [pc, #80]	; (8010840 <prvInsertBlockIntoFreeList+0xac>)
 80107f0:	681b      	ldr	r3, [r3, #0]
 80107f2:	429a      	cmp	r2, r3
 80107f4:	d00d      	beq.n	8010812 <prvInsertBlockIntoFreeList+0x7e>
 80107f6:	687b      	ldr	r3, [r7, #4]
 80107f8:	685a      	ldr	r2, [r3, #4]
 80107fa:	68fb      	ldr	r3, [r7, #12]
 80107fc:	681b      	ldr	r3, [r3, #0]
 80107fe:	685b      	ldr	r3, [r3, #4]
 8010800:	18d2      	adds	r2, r2, r3
 8010802:	687b      	ldr	r3, [r7, #4]
 8010804:	605a      	str	r2, [r3, #4]
 8010806:	68fb      	ldr	r3, [r7, #12]
 8010808:	681b      	ldr	r3, [r3, #0]
 801080a:	681a      	ldr	r2, [r3, #0]
 801080c:	687b      	ldr	r3, [r7, #4]
 801080e:	601a      	str	r2, [r3, #0]
 8010810:	e008      	b.n	8010824 <prvInsertBlockIntoFreeList+0x90>
 8010812:	4b0b      	ldr	r3, [pc, #44]	; (8010840 <prvInsertBlockIntoFreeList+0xac>)
 8010814:	681a      	ldr	r2, [r3, #0]
 8010816:	687b      	ldr	r3, [r7, #4]
 8010818:	601a      	str	r2, [r3, #0]
 801081a:	e003      	b.n	8010824 <prvInsertBlockIntoFreeList+0x90>
 801081c:	68fb      	ldr	r3, [r7, #12]
 801081e:	681a      	ldr	r2, [r3, #0]
 8010820:	687b      	ldr	r3, [r7, #4]
 8010822:	601a      	str	r2, [r3, #0]
 8010824:	68fa      	ldr	r2, [r7, #12]
 8010826:	687b      	ldr	r3, [r7, #4]
 8010828:	429a      	cmp	r2, r3
 801082a:	d002      	beq.n	8010832 <prvInsertBlockIntoFreeList+0x9e>
 801082c:	68fb      	ldr	r3, [r7, #12]
 801082e:	687a      	ldr	r2, [r7, #4]
 8010830:	601a      	str	r2, [r3, #0]
 8010832:	46c0      	nop			; (mov r8, r8)
 8010834:	46bd      	mov	sp, r7
 8010836:	b004      	add	sp, #16
 8010838:	bd80      	pop	{r7, pc}
 801083a:	46c0      	nop			; (mov r8, r8)
 801083c:	20002c1c 	.word	0x20002c1c
 8010840:	20002c24 	.word	0x20002c24

08010844 <MX_USBPD_Init>:

/* USER CODE BEGIN 2 */
/* USER CODE END 2 */
/* USBPD init function */
void MX_USBPD_Init(void)
{
 8010844:	b580      	push	{r7, lr}
 8010846:	af00      	add	r7, sp, #0

  /* Global Init of USBPD HW */
  USBPD_HW_IF_GlobalHwInit();
 8010848:	f7fb ffec 	bl	800c824 <USBPD_HW_IF_GlobalHwInit>

  /* Initialize the Device Policy Manager */
  if (USBPD_OK != USBPD_DPM_InitCore())
 801084c:	f000 f830 	bl	80108b0 <USBPD_DPM_InitCore>
 8010850:	1e03      	subs	r3, r0, #0
 8010852:	d000      	beq.n	8010856 <MX_USBPD_Init+0x12>
  {
    while(1);
 8010854:	e7fe      	b.n	8010854 <MX_USBPD_Init+0x10>
  }

  /* Initialize GUI before retrieving PDO from RAM */
  GUI_Init(BSP_GetBoardName, BSP_GetBoardID, HW_IF_PWR_GetVoltage, HW_IF_PWR_GetCurrent);
 8010856:	4b0a      	ldr	r3, [pc, #40]	; (8010880 <MX_USBPD_Init+0x3c>)
 8010858:	4a0a      	ldr	r2, [pc, #40]	; (8010884 <MX_USBPD_Init+0x40>)
 801085a:	490b      	ldr	r1, [pc, #44]	; (8010888 <MX_USBPD_Init+0x44>)
 801085c:	480b      	ldr	r0, [pc, #44]	; (801088c <MX_USBPD_Init+0x48>)
 801085e:	f003 fb45 	bl	8013eec <GUI_Init>

  /* Initialise the DPM application */
  if (USBPD_OK != USBPD_DPM_UserInit())
 8010862:	f001 f8d7 	bl	8011a14 <USBPD_DPM_UserInit>
 8010866:	1e03      	subs	r3, r0, #0
 8010868:	d000      	beq.n	801086c <MX_USBPD_Init+0x28>
  {
    while(1);
 801086a:	e7fe      	b.n	801086a <MX_USBPD_Init+0x26>
  }

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

  if (USBPD_OK != USBPD_DPM_InitOS())
 801086c:	f000 f8f8 	bl	8010a60 <USBPD_DPM_InitOS>
 8010870:	1e03      	subs	r3, r0, #0
 8010872:	d000      	beq.n	8010876 <MX_USBPD_Init+0x32>
  {
    while(1);
 8010874:	e7fe      	b.n	8010874 <MX_USBPD_Init+0x30>
  __ASM volatile ("cpsie i" : : : "memory");
 8010876:	b662      	cpsie	i
}
 8010878:	46c0      	nop			; (mov r8, r8)
  /* USER CODE BEGIN EnableIRQ */
  /* Enable IRQ which has been disabled by FreeRTOS services */
  __enable_irq();
  /* USER CODE END EnableIRQ */

}
 801087a:	46c0      	nop			; (mov r8, r8)
 801087c:	46bd      	mov	sp, r7
 801087e:	bd80      	pop	{r7, pc}
 8010880:	0800d509 	.word	0x0800d509
 8010884:	0800d4e1 	.word	0x0800d4e1
 8010888:	080108a1 	.word	0x080108a1
 801088c:	08010891 	.word	0x08010891

08010890 <BSP_GetBoardName>:
/**
  * @brief  This method returns the board name
  * @retval pointer to the board name string
  */
__weak const uint8_t* BSP_GetBoardName(void)
{
 8010890:	b580      	push	{r7, lr}
 8010892:	af00      	add	r7, sp, #0
  return (const uint8_t*)BSP_BOARD_NAME;
 8010894:	4b01      	ldr	r3, [pc, #4]	; (801089c <BSP_GetBoardName+0xc>)
}
 8010896:	0018      	movs	r0, r3
 8010898:	46bd      	mov	sp, r7
 801089a:	bd80      	pop	{r7, pc}
 801089c:	08018aa8 	.word	0x08018aa8

080108a0 <BSP_GetBoardID>:
/**
  * @brief  This method returns the board ID
  * @retval pointer to the board ID string
  */
__weak const uint8_t* BSP_GetBoardID(void)
{
 80108a0:	b580      	push	{r7, lr}
 80108a2:	af00      	add	r7, sp, #0
  return (const uint8_t*)BSP_BOARD_ID;
 80108a4:	4b01      	ldr	r3, [pc, #4]	; (80108ac <BSP_GetBoardID+0xc>)
}
 80108a6:	0018      	movs	r0, r3
 80108a8:	46bd      	mov	sp, r7
 80108aa:	bd80      	pop	{r7, pc}
 80108ac:	08018ab4 	.word	0x08018ab4

080108b0 <USBPD_DPM_InitCore>:
/**
  * @brief  Initialize the core stack (port power role, PWR_IF, CAD and PE Init procedures)
  * @retval USBPD status
  */
USBPD_StatusTypeDef USBPD_DPM_InitCore(void)
{
 80108b0:	b5b0      	push	{r4, r5, r7, lr}
 80108b2:	b082      	sub	sp, #8
 80108b4:	af00      	add	r7, sp, #0
  /* variable to get dynamique memory allocated by usbpd stack */
  uint32_t stack_dynamemsize;
  USBPD_StatusTypeDef _retr = USBPD_OK;
 80108b6:	1dfb      	adds	r3, r7, #7
 80108b8:	2200      	movs	r2, #0
 80108ba:	701a      	strb	r2, [r3, #0]
    USBPD_DPM_CADCallback,
    USBPD_DPM_CADTaskWakeUp
  };

  /* Check the lib selected */
  if (USBPD_TRUE != USBPD_PE_CheckLIB(LIB_ID))
 80108bc:	4b63      	ldr	r3, [pc, #396]	; (8010a4c <USBPD_DPM_InitCore+0x19c>)
 80108be:	0018      	movs	r0, r3
 80108c0:	f7f0 fe0c 	bl	80014dc <USBPD_PE_CheckLIB>
 80108c4:	0003      	movs	r3, r0
 80108c6:	2b01      	cmp	r3, #1
 80108c8:	d003      	beq.n	80108d2 <USBPD_DPM_InitCore+0x22>
  {
    _retr = USBPD_ERROR;
 80108ca:	1dfb      	adds	r3, r7, #7
 80108cc:	2202      	movs	r2, #2
 80108ce:	701a      	strb	r2, [r3, #0]
    goto error;
 80108d0:	e0b6      	b.n	8010a40 <USBPD_DPM_InitCore+0x190>
  }

  /* to get how much memory are dynamically allocated by the stack
     the memory return is corresponding to 2 ports so if the application
     managed only one port divide the value return by 2                   */
  stack_dynamemsize = USBPD_PE_GetMemoryConsumption();
 80108d2:	f7f0 fe11 	bl	80014f8 <USBPD_PE_GetMemoryConsumption>
 80108d6:	0003      	movs	r3, r0
 80108d8:	603b      	str	r3, [r7, #0]

  /* done to avoid warning */
  (void)stack_dynamemsize;

  /* Initialise the TRACE */
  USBPD_TRACE_Init();
 80108da:	f7fa f975 	bl	800abc8 <USBPD_TRACE_Init>

  for (uint8_t _port_index = 0; _port_index < USBPD_PORT_COUNT; ++_port_index)
 80108de:	1dbb      	adds	r3, r7, #6
 80108e0:	2200      	movs	r2, #0
 80108e2:	701a      	strb	r2, [r3, #0]
 80108e4:	e0a6      	b.n	8010a34 <USBPD_DPM_InitCore+0x184>
  {
    /* Variable to be sure that DPM is correctly initialized */
    DPM_Params[_port_index].DPM_Initialized = USBPD_FALSE;
 80108e6:	1dbb      	adds	r3, r7, #6
 80108e8:	781b      	ldrb	r3, [r3, #0]
 80108ea:	4a59      	ldr	r2, [pc, #356]	; (8010a50 <USBPD_DPM_InitCore+0x1a0>)
 80108ec:	009b      	lsls	r3, r3, #2
 80108ee:	18d3      	adds	r3, r2, r3
 80108f0:	785a      	ldrb	r2, [r3, #1]
 80108f2:	2108      	movs	r1, #8
 80108f4:	438a      	bics	r2, r1
 80108f6:	705a      	strb	r2, [r3, #1]

    /* check the stack settings */
    DPM_Params[_port_index].PE_SpecRevision  = DPM_Settings[_port_index].PE_SpecRevision;
 80108f8:	1dbb      	adds	r3, r7, #6
 80108fa:	781a      	ldrb	r2, [r3, #0]
 80108fc:	1dbb      	adds	r3, r7, #6
 80108fe:	7818      	ldrb	r0, [r3, #0]
 8010900:	4954      	ldr	r1, [pc, #336]	; (8010a54 <USBPD_DPM_InitCore+0x1a4>)
 8010902:	0013      	movs	r3, r2
 8010904:	005b      	lsls	r3, r3, #1
 8010906:	189b      	adds	r3, r3, r2
 8010908:	009b      	lsls	r3, r3, #2
 801090a:	18cb      	adds	r3, r1, r3
 801090c:	791b      	ldrb	r3, [r3, #4]
 801090e:	079b      	lsls	r3, r3, #30
 8010910:	0f9b      	lsrs	r3, r3, #30
 8010912:	b2d9      	uxtb	r1, r3
 8010914:	4b4e      	ldr	r3, [pc, #312]	; (8010a50 <USBPD_DPM_InitCore+0x1a0>)
 8010916:	0082      	lsls	r2, r0, #2
 8010918:	2003      	movs	r0, #3
 801091a:	4001      	ands	r1, r0
 801091c:	000c      	movs	r4, r1
 801091e:	5cd1      	ldrb	r1, [r2, r3]
 8010920:	2003      	movs	r0, #3
 8010922:	4381      	bics	r1, r0
 8010924:	1c08      	adds	r0, r1, #0
 8010926:	1c21      	adds	r1, r4, #0
 8010928:	4301      	orrs	r1, r0
 801092a:	54d1      	strb	r1, [r2, r3]
    DPM_Params[_port_index].PE_PowerRole     = DPM_Settings[_port_index].PE_DefaultRole;
 801092c:	1dbb      	adds	r3, r7, #6
 801092e:	781a      	ldrb	r2, [r3, #0]
 8010930:	1dbb      	adds	r3, r7, #6
 8010932:	7818      	ldrb	r0, [r3, #0]
 8010934:	4947      	ldr	r1, [pc, #284]	; (8010a54 <USBPD_DPM_InitCore+0x1a4>)
 8010936:	0013      	movs	r3, r2
 8010938:	005b      	lsls	r3, r3, #1
 801093a:	189b      	adds	r3, r3, r2
 801093c:	009b      	lsls	r3, r3, #2
 801093e:	18cb      	adds	r3, r1, r3
 8010940:	791b      	ldrb	r3, [r3, #4]
 8010942:	075b      	lsls	r3, r3, #29
 8010944:	0fdb      	lsrs	r3, r3, #31
 8010946:	b2d9      	uxtb	r1, r3
 8010948:	4b41      	ldr	r3, [pc, #260]	; (8010a50 <USBPD_DPM_InitCore+0x1a0>)
 801094a:	0082      	lsls	r2, r0, #2
 801094c:	2001      	movs	r0, #1
 801094e:	4001      	ands	r1, r0
 8010950:	008c      	lsls	r4, r1, #2
 8010952:	5cd1      	ldrb	r1, [r2, r3]
 8010954:	2004      	movs	r0, #4
 8010956:	4381      	bics	r1, r0
 8010958:	1c08      	adds	r0, r1, #0
 801095a:	1c21      	adds	r1, r4, #0
 801095c:	4301      	orrs	r1, r0
 801095e:	54d1      	strb	r1, [r2, r3]
    DPM_Params[_port_index].PE_SwapOngoing   = USBPD_FALSE;
 8010960:	1dbb      	adds	r3, r7, #6
 8010962:	781a      	ldrb	r2, [r3, #0]
 8010964:	4b3a      	ldr	r3, [pc, #232]	; (8010a50 <USBPD_DPM_InitCore+0x1a0>)
 8010966:	0092      	lsls	r2, r2, #2
 8010968:	5cd1      	ldrb	r1, [r2, r3]
 801096a:	2010      	movs	r0, #16
 801096c:	4381      	bics	r1, r0
 801096e:	54d1      	strb	r1, [r2, r3]
    DPM_Params[_port_index].ActiveCCIs       = CCNONE;
 8010970:	1dbb      	adds	r3, r7, #6
 8010972:	781a      	ldrb	r2, [r3, #0]
 8010974:	4b36      	ldr	r3, [pc, #216]	; (8010a50 <USBPD_DPM_InitCore+0x1a0>)
 8010976:	0092      	lsls	r2, r2, #2
 8010978:	5cd1      	ldrb	r1, [r2, r3]
 801097a:	203f      	movs	r0, #63	; 0x3f
 801097c:	4001      	ands	r1, r0
 801097e:	54d1      	strb	r1, [r2, r3]
    DPM_Params[_port_index].VconnCCIs        = CCNONE;
 8010980:	1dbb      	adds	r3, r7, #6
 8010982:	781b      	ldrb	r3, [r3, #0]
 8010984:	4a32      	ldr	r2, [pc, #200]	; (8010a50 <USBPD_DPM_InitCore+0x1a0>)
 8010986:	009b      	lsls	r3, r3, #2
 8010988:	18d3      	adds	r3, r2, r3
 801098a:	785a      	ldrb	r2, [r3, #1]
 801098c:	2160      	movs	r1, #96	; 0x60
 801098e:	438a      	bics	r2, r1
 8010990:	705a      	strb	r2, [r3, #1]
    DPM_Params[_port_index].VconnStatus      = USBPD_FALSE;
 8010992:	1dbb      	adds	r3, r7, #6
 8010994:	781b      	ldrb	r3, [r3, #0]
 8010996:	4a2e      	ldr	r2, [pc, #184]	; (8010a50 <USBPD_DPM_InitCore+0x1a0>)
 8010998:	009b      	lsls	r3, r3, #2
 801099a:	18d3      	adds	r3, r2, r3
 801099c:	785a      	ldrb	r2, [r3, #1]
 801099e:	217f      	movs	r1, #127	; 0x7f
 80109a0:	400a      	ands	r2, r1
 80109a2:	705a      	strb	r2, [r3, #1]

    /* CAD SET UP : Port 0 */
    CHECK_CAD_FUNCTION_CALL(USBPD_CAD_Init(_port_index,
 80109a4:	1dbb      	adds	r3, r7, #6
 80109a6:	781a      	ldrb	r2, [r3, #0]
 80109a8:	0013      	movs	r3, r2
 80109aa:	005b      	lsls	r3, r3, #1
 80109ac:	189b      	adds	r3, r3, r2
 80109ae:	009b      	lsls	r3, r3, #2
 80109b0:	4a28      	ldr	r2, [pc, #160]	; (8010a54 <USBPD_DPM_InitCore+0x1a4>)
 80109b2:	189c      	adds	r4, r3, r2
 80109b4:	1dbb      	adds	r3, r7, #6
 80109b6:	781b      	ldrb	r3, [r3, #0]
 80109b8:	009a      	lsls	r2, r3, #2
 80109ba:	4b25      	ldr	r3, [pc, #148]	; (8010a50 <USBPD_DPM_InitCore+0x1a0>)
 80109bc:	18d2      	adds	r2, r2, r3
 80109be:	4926      	ldr	r1, [pc, #152]	; (8010a58 <USBPD_DPM_InitCore+0x1a8>)
 80109c0:	1dbb      	adds	r3, r7, #6
 80109c2:	7818      	ldrb	r0, [r3, #0]
 80109c4:	0013      	movs	r3, r2
 80109c6:	0022      	movs	r2, r4
 80109c8:	f7ef fb9e 	bl	8000108 <USBPD_CAD_Init>
 80109cc:	1e03      	subs	r3, r0, #0
 80109ce:	d003      	beq.n	80109d8 <USBPD_DPM_InitCore+0x128>
 80109d0:	1dfb      	adds	r3, r7, #7
 80109d2:	2202      	movs	r2, #2
 80109d4:	701a      	strb	r2, [r3, #0]
 80109d6:	e033      	b.n	8010a40 <USBPD_DPM_InitCore+0x190>
                                           &CAD_cbs,
                                           &DPM_Settings[_port_index],
                                           &DPM_Params[_port_index]));

    /* PE SET UP : Port 0 */
    CHECK_PE_FUNCTION_CALL(USBPD_PE_Init(_port_index, (USBPD_SettingsTypeDef *)&DPM_Settings[_port_index],
 80109d8:	1dbb      	adds	r3, r7, #6
 80109da:	781a      	ldrb	r2, [r3, #0]
 80109dc:	0013      	movs	r3, r2
 80109de:	005b      	lsls	r3, r3, #1
 80109e0:	189b      	adds	r3, r3, r2
 80109e2:	009b      	lsls	r3, r3, #2
 80109e4:	4a1b      	ldr	r2, [pc, #108]	; (8010a54 <USBPD_DPM_InitCore+0x1a4>)
 80109e6:	1899      	adds	r1, r3, r2
 80109e8:	1dbb      	adds	r3, r7, #6
 80109ea:	781b      	ldrb	r3, [r3, #0]
 80109ec:	009a      	lsls	r2, r3, #2
 80109ee:	4b18      	ldr	r3, [pc, #96]	; (8010a50 <USBPD_DPM_InitCore+0x1a0>)
 80109f0:	18d2      	adds	r2, r2, r3
 80109f2:	1dfc      	adds	r4, r7, #7
 80109f4:	4d19      	ldr	r5, [pc, #100]	; (8010a5c <USBPD_DPM_InitCore+0x1ac>)
 80109f6:	1dbb      	adds	r3, r7, #6
 80109f8:	7818      	ldrb	r0, [r3, #0]
 80109fa:	002b      	movs	r3, r5
 80109fc:	f7ef fc62 	bl	80002c4 <USBPD_PE_Init>
 8010a00:	0003      	movs	r3, r0
 8010a02:	7023      	strb	r3, [r4, #0]
 8010a04:	1dfb      	adds	r3, r7, #7
 8010a06:	781b      	ldrb	r3, [r3, #0]
 8010a08:	2b00      	cmp	r3, #0
 8010a0a:	d119      	bne.n	8010a40 <USBPD_DPM_InitCore+0x190>
                                         &DPM_Params[_port_index], &dpmCallbacks));

    /* DPM is correctly initialized */
    DPM_Params[_port_index].DPM_Initialized = USBPD_TRUE;
 8010a0c:	1dbb      	adds	r3, r7, #6
 8010a0e:	781b      	ldrb	r3, [r3, #0]
 8010a10:	4a0f      	ldr	r2, [pc, #60]	; (8010a50 <USBPD_DPM_InitCore+0x1a0>)
 8010a12:	009b      	lsls	r3, r3, #2
 8010a14:	18d3      	adds	r3, r2, r3
 8010a16:	785a      	ldrb	r2, [r3, #1]
 8010a18:	2108      	movs	r1, #8
 8010a1a:	430a      	orrs	r2, r1
 8010a1c:	705a      	strb	r2, [r3, #1]

    /* Enable CAD on Port 0 */
    USBPD_CAD_PortEnable(_port_index, USBPD_CAD_ENABLE);
 8010a1e:	1dbb      	adds	r3, r7, #6
 8010a20:	781b      	ldrb	r3, [r3, #0]
 8010a22:	2101      	movs	r1, #1
 8010a24:	0018      	movs	r0, r3
 8010a26:	f7ef fb9c 	bl	8000162 <USBPD_CAD_PortEnable>
  for (uint8_t _port_index = 0; _port_index < USBPD_PORT_COUNT; ++_port_index)
 8010a2a:	1dbb      	adds	r3, r7, #6
 8010a2c:	1dba      	adds	r2, r7, #6
 8010a2e:	7812      	ldrb	r2, [r2, #0]
 8010a30:	3201      	adds	r2, #1
 8010a32:	701a      	strb	r2, [r3, #0]
 8010a34:	1dbb      	adds	r3, r7, #6
 8010a36:	781b      	ldrb	r3, [r3, #0]
 8010a38:	2b00      	cmp	r3, #0
 8010a3a:	d100      	bne.n	8010a3e <USBPD_DPM_InitCore+0x18e>
 8010a3c:	e753      	b.n	80108e6 <USBPD_DPM_InitCore+0x36>

#ifdef _LOW_POWER
  USBPD_LOWPOWER_Init();
#endif /* _LOW_POWER */

error :
 8010a3e:	46c0      	nop			; (mov r8, r8)
  return _retr;
 8010a40:	1dfb      	adds	r3, r7, #7
 8010a42:	781b      	ldrb	r3, [r3, #0]
}
 8010a44:	0018      	movs	r0, r3
 8010a46:	46bd      	mov	sp, r7
 8010a48:	b002      	add	sp, #8
 8010a4a:	bdb0      	pop	{r4, r5, r7, pc}
 8010a4c:	30410000 	.word	0x30410000
 8010a50:	20002c4c 	.word	0x20002c4c
 8010a54:	20000014 	.word	0x20000014
 8010a58:	08019a18 	.word	0x08019a18
 8010a5c:	08019a20 	.word	0x08019a20

08010a60 <USBPD_DPM_InitOS>:
/**
  * @brief  Initialize the OS parts (task, queue,... )
  * @retval USBPD status
  */
USBPD_StatusTypeDef USBPD_DPM_InitOS(void)
{
 8010a60:	b590      	push	{r4, r7, lr}
 8010a62:	b08d      	sub	sp, #52	; 0x34
 8010a64:	af00      	add	r7, sp, #0
  OS_INIT();
 8010a66:	242f      	movs	r4, #47	; 0x2f
 8010a68:	193b      	adds	r3, r7, r4
 8010a6a:	2200      	movs	r2, #0
 8010a6c:	701a      	strb	r2, [r3, #0]
  {
    OS_CREATE_QUEUE(CADQueueId, "QCAD", USBPD_PORT_COUNT, OS_ELEMENT_SIZE);
 8010a6e:	2200      	movs	r2, #0
 8010a70:	2102      	movs	r1, #2
 8010a72:	2001      	movs	r0, #1
 8010a74:	f7fd fa58 	bl	800df28 <osMessageQueueNew>
 8010a78:	0002      	movs	r2, r0
 8010a7a:	4b32      	ldr	r3, [pc, #200]	; (8010b44 <USBPD_DPM_InitOS+0xe4>)
 8010a7c:	601a      	str	r2, [r3, #0]
    OS_DEFINE_TASK(CAD, USBPD_CAD_Task, OS_CAD_PRIORITY, OS_CAD_STACK_SIZE, NULL);
    OS_CREATE_TASK(CADThread, CAD, USBPD_CAD_Task,  OS_CAD_PRIORITY, OS_CAD_STACK_SIZE, (int)NULL);
 8010a7e:	1d3b      	adds	r3, r7, #4
 8010a80:	0018      	movs	r0, r3
 8010a82:	2324      	movs	r3, #36	; 0x24
 8010a84:	001a      	movs	r2, r3
 8010a86:	2100      	movs	r1, #0
 8010a88:	f007 fb9c 	bl	80181c4 <memset>
 8010a8c:	1d3b      	adds	r3, r7, #4
 8010a8e:	4a2e      	ldr	r2, [pc, #184]	; (8010b48 <USBPD_DPM_InitOS+0xe8>)
 8010a90:	601a      	str	r2, [r3, #0]
 8010a92:	1d3b      	adds	r3, r7, #4
 8010a94:	2296      	movs	r2, #150	; 0x96
 8010a96:	00d2      	lsls	r2, r2, #3
 8010a98:	615a      	str	r2, [r3, #20]
 8010a9a:	1d3b      	adds	r3, r7, #4
 8010a9c:	2230      	movs	r2, #48	; 0x30
 8010a9e:	619a      	str	r2, [r3, #24]
 8010aa0:	1d3a      	adds	r2, r7, #4
 8010aa2:	4b2a      	ldr	r3, [pc, #168]	; (8010b4c <USBPD_DPM_InitOS+0xec>)
 8010aa4:	2100      	movs	r1, #0
 8010aa6:	0018      	movs	r0, r3
 8010aa8:	f7fd f93c 	bl	800dd24 <osThreadNew>
 8010aac:	0002      	movs	r2, r0
 8010aae:	4b28      	ldr	r3, [pc, #160]	; (8010b50 <USBPD_DPM_InitOS+0xf0>)
 8010ab0:	601a      	str	r2, [r3, #0]
 8010ab2:	4b27      	ldr	r3, [pc, #156]	; (8010b50 <USBPD_DPM_InitOS+0xf0>)
 8010ab4:	681b      	ldr	r3, [r3, #0]
 8010ab6:	2b00      	cmp	r3, #0
 8010ab8:	d103      	bne.n	8010ac2 <USBPD_DPM_InitOS+0x62>
 8010aba:	193b      	adds	r3, r7, r4
 8010abc:	2202      	movs	r2, #2
 8010abe:	701a      	strb	r2, [r3, #0]
 8010ac0:	e039      	b.n	8010b36 <USBPD_DPM_InitOS+0xd6>
  }

  /* Create the queue corresponding to PE task */
  for (uint32_t index = 0; index < USBPD_PORT_COUNT; index++)
 8010ac2:	2300      	movs	r3, #0
 8010ac4:	62bb      	str	r3, [r7, #40]	; 0x28
 8010ac6:	e032      	b.n	8010b2e <USBPD_DPM_InitOS+0xce>
  {
    OS_CREATE_QUEUE(PEQueueId[index], "QPE", 1, OS_ELEMENT_SIZE);
 8010ac8:	2200      	movs	r2, #0
 8010aca:	2102      	movs	r1, #2
 8010acc:	2001      	movs	r0, #1
 8010ace:	f7fd fa2b 	bl	800df28 <osMessageQueueNew>
 8010ad2:	0001      	movs	r1, r0
 8010ad4:	4b1f      	ldr	r3, [pc, #124]	; (8010b54 <USBPD_DPM_InitOS+0xf4>)
 8010ad6:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8010ad8:	0092      	lsls	r2, r2, #2
 8010ada:	50d1      	str	r1, [r2, r3]

    if (index == USBPD_PORT_0)
 8010adc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8010ade:	2b00      	cmp	r3, #0
 8010ae0:	d122      	bne.n	8010b28 <USBPD_DPM_InitOS+0xc8>
    {
      /* Tasks definition */
      OS_DEFINE_TASK(PE_0, USBPD_PE_Task, OS_PE_PRIORITY,  OS_PE_STACK_SIZE,  USBPD_PORT_0);
      OS_CREATE_TASK(DPM_PEThreadId_Table[USBPD_PORT_0], PE_0, USBPD_PE_Task,
 8010ae2:	1d3b      	adds	r3, r7, #4
 8010ae4:	0018      	movs	r0, r3
 8010ae6:	2324      	movs	r3, #36	; 0x24
 8010ae8:	001a      	movs	r2, r3
 8010aea:	2100      	movs	r1, #0
 8010aec:	f007 fb6a 	bl	80181c4 <memset>
 8010af0:	1d3b      	adds	r3, r7, #4
 8010af2:	4a19      	ldr	r2, [pc, #100]	; (8010b58 <USBPD_DPM_InitOS+0xf8>)
 8010af4:	601a      	str	r2, [r3, #0]
 8010af6:	1d3b      	adds	r3, r7, #4
 8010af8:	22af      	movs	r2, #175	; 0xaf
 8010afa:	00d2      	lsls	r2, r2, #3
 8010afc:	615a      	str	r2, [r3, #20]
 8010afe:	1d3b      	adds	r3, r7, #4
 8010b00:	2220      	movs	r2, #32
 8010b02:	619a      	str	r2, [r3, #24]
 8010b04:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8010b06:	1d3a      	adds	r2, r7, #4
 8010b08:	4b14      	ldr	r3, [pc, #80]	; (8010b5c <USBPD_DPM_InitOS+0xfc>)
 8010b0a:	0018      	movs	r0, r3
 8010b0c:	f7fd f90a 	bl	800dd24 <osThreadNew>
 8010b10:	0002      	movs	r2, r0
 8010b12:	4b13      	ldr	r3, [pc, #76]	; (8010b60 <USBPD_DPM_InitOS+0x100>)
 8010b14:	601a      	str	r2, [r3, #0]
 8010b16:	4b12      	ldr	r3, [pc, #72]	; (8010b60 <USBPD_DPM_InitOS+0x100>)
 8010b18:	681b      	ldr	r3, [r3, #0]
 8010b1a:	2b00      	cmp	r3, #0
 8010b1c:	d104      	bne.n	8010b28 <USBPD_DPM_InitOS+0xc8>
 8010b1e:	232f      	movs	r3, #47	; 0x2f
 8010b20:	18fb      	adds	r3, r7, r3
 8010b22:	2202      	movs	r2, #2
 8010b24:	701a      	strb	r2, [r3, #0]
 8010b26:	e006      	b.n	8010b36 <USBPD_DPM_InitOS+0xd6>
  for (uint32_t index = 0; index < USBPD_PORT_COUNT; index++)
 8010b28:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8010b2a:	3301      	adds	r3, #1
 8010b2c:	62bb      	str	r3, [r7, #40]	; 0x28
 8010b2e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8010b30:	2b00      	cmp	r3, #0
 8010b32:	d0c9      	beq.n	8010ac8 <USBPD_DPM_InitOS+0x68>
      OS_CREATE_TASK(DPM_PEThreadId_Table[USBPD_PORT_1], PE_1, USBPD_PE_Task,
                     OS_PE_PRIORITY, OS_PE_STACK_SIZE, (int)index);
    }
#endif /* USBPD_PORT_COUNT > 1*/
  }
error:
 8010b34:	46c0      	nop			; (mov r8, r8)

  return _retr;
 8010b36:	232f      	movs	r3, #47	; 0x2f
 8010b38:	18fb      	adds	r3, r7, r3
 8010b3a:	781b      	ldrb	r3, [r3, #0]
}
 8010b3c:	0018      	movs	r0, r3
 8010b3e:	46bd      	mov	sp, r7
 8010b40:	b00d      	add	sp, #52	; 0x34
 8010b42:	bd90      	pop	{r4, r7, pc}
 8010b44:	20002c40 	.word	0x20002c40
 8010b48:	08018abc 	.word	0x08018abc
 8010b4c:	08010c29 	.word	0x08010c29
 8010b50:	20002c44 	.word	0x20002c44
 8010b54:	20002c48 	.word	0x20002c48
 8010b58:	08018ac0 	.word	0x08018ac0
 8010b5c:	08010bc5 	.word	0x08010bc5
 8010b60:	20002c3c 	.word	0x20002c3c

08010b64 <USBPD_PE_TaskWakeUp>:
  * @brief  WakeUp PE task
  * @param  PortNum port number
  * @retval None
  */
static void USBPD_PE_TaskWakeUp(uint8_t PortNum)
{
 8010b64:	b580      	push	{r7, lr}
 8010b66:	b084      	sub	sp, #16
 8010b68:	af00      	add	r7, sp, #0
 8010b6a:	0002      	movs	r2, r0
 8010b6c:	1dfb      	adds	r3, r7, #7
 8010b6e:	701a      	strb	r2, [r3, #0]
  OS_PUT_MESSAGE_QUEUE(PEQueueId[PortNum], 0xFFFFU, 0U);
 8010b70:	4b08      	ldr	r3, [pc, #32]	; (8010b94 <USBPD_PE_TaskWakeUp+0x30>)
 8010b72:	60fb      	str	r3, [r7, #12]
 8010b74:	1dfb      	adds	r3, r7, #7
 8010b76:	781a      	ldrb	r2, [r3, #0]
 8010b78:	4b07      	ldr	r3, [pc, #28]	; (8010b98 <USBPD_PE_TaskWakeUp+0x34>)
 8010b7a:	0092      	lsls	r2, r2, #2
 8010b7c:	58d0      	ldr	r0, [r2, r3]
 8010b7e:	230c      	movs	r3, #12
 8010b80:	18f9      	adds	r1, r7, r3
 8010b82:	2300      	movs	r3, #0
 8010b84:	2200      	movs	r2, #0
 8010b86:	f7fd fa49 	bl	800e01c <osMessageQueuePut>
}
 8010b8a:	46c0      	nop			; (mov r8, r8)
 8010b8c:	46bd      	mov	sp, r7
 8010b8e:	b004      	add	sp, #16
 8010b90:	bd80      	pop	{r7, pc}
 8010b92:	46c0      	nop			; (mov r8, r8)
 8010b94:	0000ffff 	.word	0x0000ffff
 8010b98:	20002c48 	.word	0x20002c48

08010b9c <USBPD_DPM_CADTaskWakeUp>:
/**
  * @brief  WakeUp CAD task
  * @retval None
  */
static void USBPD_DPM_CADTaskWakeUp(void)
{
 8010b9c:	b580      	push	{r7, lr}
 8010b9e:	b082      	sub	sp, #8
 8010ba0:	af00      	add	r7, sp, #0
  OS_PUT_MESSAGE_QUEUE(CADQueueId, 0xFFFF, 0);
 8010ba2:	4b06      	ldr	r3, [pc, #24]	; (8010bbc <USBPD_DPM_CADTaskWakeUp+0x20>)
 8010ba4:	607b      	str	r3, [r7, #4]
 8010ba6:	4b06      	ldr	r3, [pc, #24]	; (8010bc0 <USBPD_DPM_CADTaskWakeUp+0x24>)
 8010ba8:	6818      	ldr	r0, [r3, #0]
 8010baa:	1d39      	adds	r1, r7, #4
 8010bac:	2300      	movs	r3, #0
 8010bae:	2200      	movs	r2, #0
 8010bb0:	f7fd fa34 	bl	800e01c <osMessageQueuePut>
}
 8010bb4:	46c0      	nop			; (mov r8, r8)
 8010bb6:	46bd      	mov	sp, r7
 8010bb8:	b002      	add	sp, #8
 8010bba:	bd80      	pop	{r7, pc}
 8010bbc:	0000ffff 	.word	0x0000ffff
 8010bc0:	20002c40 	.word	0x20002c40

08010bc4 <USBPD_PE_Task>:
  * @brief  Main task for PE layer
  * @param  argument Not used
  * @retval None
  */
DEF_TASK_FUNCTION(USBPD_PE_Task)
{
 8010bc4:	b590      	push	{r4, r7, lr}
 8010bc6:	b087      	sub	sp, #28
 8010bc8:	af00      	add	r7, sp, #0
 8010bca:	6078      	str	r0, [r7, #4]
  uint8_t _port = (uint32_t)argument;
 8010bcc:	687a      	ldr	r2, [r7, #4]
 8010bce:	2317      	movs	r3, #23
 8010bd0:	18fb      	adds	r3, r7, r3
 8010bd2:	701a      	strb	r2, [r3, #0]
  UTIL_LPM_SetOffMode(0 == _port ? LPM_PE_0 : LPM_PE_1, UTIL_LPM_DISABLE);
#endif /* _LOW_POWER */

  for (;;)
  {
    if (DPM_Params[_port].PE_IsConnected == USBPD_FALSE)
 8010bd4:	2317      	movs	r3, #23
 8010bd6:	18fb      	adds	r3, r7, r3
 8010bd8:	781b      	ldrb	r3, [r3, #0]
 8010bda:	4a11      	ldr	r2, [pc, #68]	; (8010c20 <USBPD_PE_Task+0x5c>)
 8010bdc:	009b      	lsls	r3, r3, #2
 8010bde:	18d3      	adds	r3, r2, r3
 8010be0:	785b      	ldrb	r3, [r3, #1]
 8010be2:	06db      	lsls	r3, r3, #27
 8010be4:	0fdb      	lsrs	r3, r3, #31
 8010be6:	b2db      	uxtb	r3, r3
 8010be8:	2b00      	cmp	r3, #0
 8010bea:	d105      	bne.n	8010bf8 <USBPD_PE_Task+0x34>
    {
      /* if the port is no more connected, suspend the PE thread */
      OS_TASK_SUSPEND(OS_TASK_GETID());
 8010bec:	f7fd f930 	bl	800de50 <osThreadGetId>
 8010bf0:	0003      	movs	r3, r0
 8010bf2:	0018      	movs	r0, r3
 8010bf4:	f7fd f938 	bl	800de68 <osThreadSuspend>
    }

    _timing = USBPD_PE_StateMachine_SNK(_port);
 8010bf8:	2417      	movs	r4, #23
 8010bfa:	193b      	adds	r3, r7, r4
 8010bfc:	781b      	ldrb	r3, [r3, #0]
 8010bfe:	0018      	movs	r0, r3
 8010c00:	f7f1 f912 	bl	8001e28 <USBPD_PE_StateMachine_SNK>
 8010c04:	0003      	movs	r3, r0
 8010c06:	613b      	str	r3, [r7, #16]
 /* _DRP || ( _SRC && _SNK) */

    OS_GETMESSAGE_QUEUE(PEQueueId[_port], _timing);
 8010c08:	193b      	adds	r3, r7, r4
 8010c0a:	781a      	ldrb	r2, [r3, #0]
 8010c0c:	4b05      	ldr	r3, [pc, #20]	; (8010c24 <USBPD_PE_Task+0x60>)
 8010c0e:	0092      	lsls	r2, r2, #2
 8010c10:	58d0      	ldr	r0, [r2, r3]
 8010c12:	693b      	ldr	r3, [r7, #16]
 8010c14:	220c      	movs	r2, #12
 8010c16:	18b9      	adds	r1, r7, r2
 8010c18:	2200      	movs	r2, #0
 8010c1a:	f7fd fa5b 	bl	800e0d4 <osMessageQueueGet>
    if (DPM_Params[_port].PE_IsConnected == USBPD_FALSE)
 8010c1e:	e7d9      	b.n	8010bd4 <USBPD_PE_Task+0x10>
 8010c20:	20002c4c 	.word	0x20002c4c
 8010c24:	20002c48 	.word	0x20002c48

08010c28 <USBPD_CAD_Task>:
  * @brief  Main task for CAD layer
  * @param  argument Not used
  * @retval None
  */
DEF_TASK_FUNCTION(USBPD_CAD_Task)
{
 8010c28:	b580      	push	{r7, lr}
 8010c2a:	b084      	sub	sp, #16
 8010c2c:	af00      	add	r7, sp, #0
 8010c2e:	6078      	str	r0, [r7, #4]
#ifdef _LOW_POWER
  UTIL_LPM_SetOffMode(LPM_CAD, UTIL_LPM_DISABLE);
#endif /* _LOW_POWER */
  for (;;)
  {
    _timing = USBPD_CAD_Process();
 8010c30:	f7ef fa9e 	bl	8000170 <USBPD_CAD_Process>
 8010c34:	0003      	movs	r3, r0
 8010c36:	60fb      	str	r3, [r7, #12]
    OS_GETMESSAGE_QUEUE(CADQueueId, _timing);
 8010c38:	4b04      	ldr	r3, [pc, #16]	; (8010c4c <USBPD_CAD_Task+0x24>)
 8010c3a:	6818      	ldr	r0, [r3, #0]
 8010c3c:	68fb      	ldr	r3, [r7, #12]
 8010c3e:	2208      	movs	r2, #8
 8010c40:	18b9      	adds	r1, r7, r2
 8010c42:	2200      	movs	r2, #0
 8010c44:	f7fd fa46 	bl	800e0d4 <osMessageQueueGet>
    _timing = USBPD_CAD_Process();
 8010c48:	e7f2      	b.n	8010c30 <USBPD_CAD_Task+0x8>
 8010c4a:	46c0      	nop			; (mov r8, r8)
 8010c4c:	20002c40 	.word	0x20002c40

08010c50 <USBPD_DPM_CADCallback>:
  * @param  State     CAD state
  * @param  Cc        The Communication Channel for the USBPD communication
  * @retval None
  */
void USBPD_DPM_CADCallback(uint8_t PortNum, USBPD_CAD_EVENT State, CCxPin_TypeDef Cc)
{
 8010c50:	b580      	push	{r7, lr}
 8010c52:	b086      	sub	sp, #24
 8010c54:	af02      	add	r7, sp, #8
 8010c56:	603a      	str	r2, [r7, #0]
 8010c58:	1dfb      	adds	r3, r7, #7
 8010c5a:	1c02      	adds	r2, r0, #0
 8010c5c:	701a      	strb	r2, [r3, #0]
 8010c5e:	1dbb      	adds	r3, r7, #6
 8010c60:	1c0a      	adds	r2, r1, #0
 8010c62:	701a      	strb	r2, [r3, #0]
  USBPD_TRACE_Add(USBPD_TRACE_CADEVENT, PortNum, (uint8_t)State, NULL, 0);
 8010c64:	1dbb      	adds	r3, r7, #6
 8010c66:	781a      	ldrb	r2, [r3, #0]
 8010c68:	1dfb      	adds	r3, r7, #7
 8010c6a:	7819      	ldrb	r1, [r3, #0]
 8010c6c:	2300      	movs	r3, #0
 8010c6e:	9300      	str	r3, [sp, #0]
 8010c70:	2300      	movs	r3, #0
 8010c72:	2003      	movs	r0, #3
 8010c74:	f7f9 ffbe 	bl	800abf4 <USBPD_TRACE_Add>
 /* _TRACE */
  (void)(Cc);
  switch (State)
 8010c78:	1dbb      	adds	r3, r7, #6
 8010c7a:	781b      	ldrb	r3, [r3, #0]
 8010c7c:	2b04      	cmp	r3, #4
 8010c7e:	d009      	beq.n	8010c94 <USBPD_DPM_CADCallback+0x44>
 8010c80:	dd00      	ble.n	8010c84 <USBPD_DPM_CADCallback+0x34>
 8010c82:	e06f      	b.n	8010d64 <USBPD_DPM_CADCallback+0x114>
 8010c84:	2b03      	cmp	r3, #3
 8010c86:	d01d      	beq.n	8010cc4 <USBPD_DPM_CADCallback+0x74>
 8010c88:	dc6c      	bgt.n	8010d64 <USBPD_DPM_CADCallback+0x114>
 8010c8a:	2b01      	cmp	r3, #1
 8010c8c:	d01a      	beq.n	8010cc4 <USBPD_DPM_CADCallback+0x74>
 8010c8e:	2b02      	cmp	r3, #2
 8010c90:	d00c      	beq.n	8010cac <USBPD_DPM_CADCallback+0x5c>
      USBPD_DPM_Notification(PortNum, USBPD_NOTIFY_USBSTACK_STOP);
      break;
    }
    default :
      /* nothing to do */
      break;
 8010c92:	e067      	b.n	8010d64 <USBPD_DPM_CADCallback+0x114>
      USBPD_DPM_UserCableDetection(PortNum, USBPD_CAD_EVENT_ATTEMC);
 8010c94:	1dfb      	adds	r3, r7, #7
 8010c96:	781b      	ldrb	r3, [r3, #0]
 8010c98:	2104      	movs	r1, #4
 8010c9a:	0018      	movs	r0, r3
 8010c9c:	f000 feda 	bl	8011a54 <USBPD_DPM_UserCableDetection>
      DPM_StartPETask(PortNum);
 8010ca0:	1dfb      	adds	r3, r7, #7
 8010ca2:	781b      	ldrb	r3, [r3, #0]
 8010ca4:	0018      	movs	r0, r3
 8010ca6:	f000 f867 	bl	8010d78 <DPM_StartPETask>
      break;
 8010caa:	e05c      	b.n	8010d66 <USBPD_DPM_CADCallback+0x116>
      USBPD_DPM_UserCableDetection(PortNum, USBPD_CAD_EVENT_ATTACHED);
 8010cac:	1dfb      	adds	r3, r7, #7
 8010cae:	781b      	ldrb	r3, [r3, #0]
 8010cb0:	2102      	movs	r1, #2
 8010cb2:	0018      	movs	r0, r3
 8010cb4:	f000 fece 	bl	8011a54 <USBPD_DPM_UserCableDetection>
      DPM_StartPETask(PortNum);
 8010cb8:	1dfb      	adds	r3, r7, #7
 8010cba:	781b      	ldrb	r3, [r3, #0]
 8010cbc:	0018      	movs	r0, r3
 8010cbe:	f000 f85b 	bl	8010d78 <DPM_StartPETask>
      break;
 8010cc2:	e050      	b.n	8010d66 <USBPD_DPM_CADCallback+0x116>
      uint8_t _timeout = 0;
 8010cc4:	230f      	movs	r3, #15
 8010cc6:	18fb      	adds	r3, r7, r3
 8010cc8:	2200      	movs	r2, #0
 8010cca:	701a      	strb	r2, [r3, #0]
      USBPD_PE_TaskWakeUp(PortNum);
 8010ccc:	1dfb      	adds	r3, r7, #7
 8010cce:	781b      	ldrb	r3, [r3, #0]
 8010cd0:	0018      	movs	r0, r3
 8010cd2:	f7ff ff47 	bl	8010b64 <USBPD_PE_TaskWakeUp>
      while (!OS_TASK_IS_SUPENDED(DPM_PEThreadId_Table[PortNum]))
 8010cd6:	e015      	b.n	8010d04 <USBPD_DPM_CADCallback+0xb4>
        (void)OS_DELAY(1);
 8010cd8:	2001      	movs	r0, #1
 8010cda:	f7fd f909 	bl	800def0 <osDelay>
        _timeout++;
 8010cde:	210f      	movs	r1, #15
 8010ce0:	187b      	adds	r3, r7, r1
 8010ce2:	781a      	ldrb	r2, [r3, #0]
 8010ce4:	187b      	adds	r3, r7, r1
 8010ce6:	3201      	adds	r2, #1
 8010ce8:	701a      	strb	r2, [r3, #0]
        if (_timeout > 30u)
 8010cea:	187b      	adds	r3, r7, r1
 8010cec:	781b      	ldrb	r3, [r3, #0]
 8010cee:	2b1e      	cmp	r3, #30
 8010cf0:	d908      	bls.n	8010d04 <USBPD_DPM_CADCallback+0xb4>
          (void)OS_TASK_SUSPEND(DPM_PEThreadId_Table[PortNum]);
 8010cf2:	1dfb      	adds	r3, r7, #7
 8010cf4:	781a      	ldrb	r2, [r3, #0]
 8010cf6:	4b1e      	ldr	r3, [pc, #120]	; (8010d70 <USBPD_DPM_CADCallback+0x120>)
 8010cf8:	0092      	lsls	r2, r2, #2
 8010cfa:	58d3      	ldr	r3, [r2, r3]
 8010cfc:	0018      	movs	r0, r3
 8010cfe:	f7fd f8b3 	bl	800de68 <osThreadSuspend>
          break;
 8010d02:	e00a      	b.n	8010d1a <USBPD_DPM_CADCallback+0xca>
      while (!OS_TASK_IS_SUPENDED(DPM_PEThreadId_Table[PortNum]))
 8010d04:	1dfb      	adds	r3, r7, #7
 8010d06:	781a      	ldrb	r2, [r3, #0]
 8010d08:	4b19      	ldr	r3, [pc, #100]	; (8010d70 <USBPD_DPM_CADCallback+0x120>)
 8010d0a:	0092      	lsls	r2, r2, #2
 8010d0c:	58d3      	ldr	r3, [r2, r3]
 8010d0e:	0018      	movs	r0, r3
 8010d10:	f7fe f994 	bl	800f03c <eTaskGetState>
 8010d14:	0003      	movs	r3, r0
 8010d16:	2b03      	cmp	r3, #3
 8010d18:	d1de      	bne.n	8010cd8 <USBPD_DPM_CADCallback+0x88>
      USBPD_PE_StateMachine_Stop(PortNum);
 8010d1a:	1dfb      	adds	r3, r7, #7
 8010d1c:	781b      	ldrb	r3, [r3, #0]
 8010d1e:	0018      	movs	r0, r3
 8010d20:	f7ef fb9b 	bl	800045a <USBPD_PE_StateMachine_Stop>
      DPM_Params[PortNum].PE_SwapOngoing = USBPD_FALSE;
 8010d24:	1dfb      	adds	r3, r7, #7
 8010d26:	781a      	ldrb	r2, [r3, #0]
 8010d28:	4b12      	ldr	r3, [pc, #72]	; (8010d74 <USBPD_DPM_CADCallback+0x124>)
 8010d2a:	0092      	lsls	r2, r2, #2
 8010d2c:	5cd1      	ldrb	r1, [r2, r3]
 8010d2e:	2010      	movs	r0, #16
 8010d30:	4381      	bics	r1, r0
 8010d32:	54d1      	strb	r1, [r2, r3]
      DPM_Params[PortNum].PE_Power   = USBPD_POWER_NO;
 8010d34:	1dfb      	adds	r3, r7, #7
 8010d36:	781b      	ldrb	r3, [r3, #0]
 8010d38:	4a0e      	ldr	r2, [pc, #56]	; (8010d74 <USBPD_DPM_CADCallback+0x124>)
 8010d3a:	009b      	lsls	r3, r3, #2
 8010d3c:	18d3      	adds	r3, r2, r3
 8010d3e:	785a      	ldrb	r2, [r3, #1]
 8010d40:	2107      	movs	r1, #7
 8010d42:	438a      	bics	r2, r1
 8010d44:	705a      	strb	r2, [r3, #1]
      USBPD_DPM_UserCableDetection(PortNum, State);
 8010d46:	1dbb      	adds	r3, r7, #6
 8010d48:	781a      	ldrb	r2, [r3, #0]
 8010d4a:	1dfb      	adds	r3, r7, #7
 8010d4c:	781b      	ldrb	r3, [r3, #0]
 8010d4e:	0011      	movs	r1, r2
 8010d50:	0018      	movs	r0, r3
 8010d52:	f000 fe7f 	bl	8011a54 <USBPD_DPM_UserCableDetection>
      USBPD_DPM_Notification(PortNum, USBPD_NOTIFY_USBSTACK_STOP);
 8010d56:	1dfb      	adds	r3, r7, #7
 8010d58:	781b      	ldrb	r3, [r3, #0]
 8010d5a:	2169      	movs	r1, #105	; 0x69
 8010d5c:	0018      	movs	r0, r3
 8010d5e:	f000 fed3 	bl	8011b08 <USBPD_DPM_Notification>
      break;
 8010d62:	e000      	b.n	8010d66 <USBPD_DPM_CADCallback+0x116>
      break;
 8010d64:	46c0      	nop			; (mov r8, r8)
  }
}
 8010d66:	46c0      	nop			; (mov r8, r8)
 8010d68:	46bd      	mov	sp, r7
 8010d6a:	b004      	add	sp, #16
 8010d6c:	bd80      	pop	{r7, pc}
 8010d6e:	46c0      	nop			; (mov r8, r8)
 8010d70:	20002c3c 	.word	0x20002c3c
 8010d74:	20002c4c 	.word	0x20002c4c

08010d78 <DPM_StartPETask>:

static void DPM_StartPETask(uint8_t PortNum)
{
 8010d78:	b580      	push	{r7, lr}
 8010d7a:	b082      	sub	sp, #8
 8010d7c:	af00      	add	r7, sp, #0
 8010d7e:	0002      	movs	r2, r0
 8010d80:	1dfb      	adds	r3, r7, #7
 8010d82:	701a      	strb	r2, [r3, #0]
  USBPD_PE_StateMachine_Reset(PortNum);
 8010d84:	1dfb      	adds	r3, r7, #7
 8010d86:	781b      	ldrb	r3, [r3, #0]
 8010d88:	0018      	movs	r0, r3
 8010d8a:	f7ef fb60 	bl	800044e <USBPD_PE_StateMachine_Reset>
  /* Resume the PE task */
  switch (PortNum)
 8010d8e:	1dfb      	adds	r3, r7, #7
 8010d90:	781b      	ldrb	r3, [r3, #0]
 8010d92:	2b01      	cmp	r3, #1
 8010d94:	d808      	bhi.n	8010da8 <DPM_StartPETask+0x30>
  {
    case USBPD_PORT_0:
    case USBPD_PORT_1:
    {
      OS_TASK_RESUME(DPM_PEThreadId_Table[PortNum]);
 8010d96:	1dfb      	adds	r3, r7, #7
 8010d98:	781a      	ldrb	r2, [r3, #0]
 8010d9a:	4b0a      	ldr	r3, [pc, #40]	; (8010dc4 <DPM_StartPETask+0x4c>)
 8010d9c:	0092      	lsls	r2, r2, #2
 8010d9e:	58d3      	ldr	r3, [r2, r3]
 8010da0:	0018      	movs	r0, r3
 8010da2:	f7fd f883 	bl	800deac <osThreadResume>
      break;
 8010da6:	e002      	b.n	8010dae <DPM_StartPETask+0x36>
    }
    default :
    {
      USBPD_DPM_ErrorHandler();
 8010da8:	f000 f80e 	bl	8010dc8 <USBPD_DPM_ErrorHandler>
      break;
 8010dac:	46c0      	nop			; (mov r8, r8)
    }
  }
 /* _RTOS || THREADX */
  USBPD_DPM_Notification(PortNum, USBPD_NOTIFY_USBSTACK_START);
 8010dae:	1dfb      	adds	r3, r7, #7
 8010db0:	781b      	ldrb	r3, [r3, #0]
 8010db2:	2168      	movs	r1, #104	; 0x68
 8010db4:	0018      	movs	r0, r3
 8010db6:	f000 fea7 	bl	8011b08 <USBPD_DPM_Notification>
}
 8010dba:	46c0      	nop			; (mov r8, r8)
 8010dbc:	46bd      	mov	sp, r7
 8010dbe:	b002      	add	sp, #8
 8010dc0:	bd80      	pop	{r7, pc}
 8010dc2:	46c0      	nop			; (mov r8, r8)
 8010dc4:	20002c3c 	.word	0x20002c3c

08010dc8 <USBPD_DPM_ErrorHandler>:
 /* USBPDCORE_LIB_NO_PD */

__WEAK void USBPD_DPM_ErrorHandler(void)
{
 8010dc8:	b580      	push	{r7, lr}
 8010dca:	af00      	add	r7, sp, #0
  /* This function is called to block application execution
     in case of an unexpected behavior
     another solution could be to reset application */
  while (1u == 1u) {};
 8010dcc:	e7fe      	b.n	8010dcc <USBPD_DPM_ErrorHandler+0x4>
	...

08010dd0 <USBPD_PWR_IF_SupplyReady>:
  * @param  PortNum Port number
  * @param  Vsafe   Vsafe status based on @ref USBPD_VSAFE_StatusTypeDef
  * @retval USBPD status
  */
USBPD_StatusTypeDef USBPD_PWR_IF_SupplyReady(uint8_t PortNum, USBPD_VSAFE_StatusTypeDef Vsafe)
{
 8010dd0:	b580      	push	{r7, lr}
 8010dd2:	b084      	sub	sp, #16
 8010dd4:	af00      	add	r7, sp, #0
 8010dd6:	0002      	movs	r2, r0
 8010dd8:	1dfb      	adds	r3, r7, #7
 8010dda:	701a      	strb	r2, [r3, #0]
 8010ddc:	1dbb      	adds	r3, r7, #6
 8010dde:	1c0a      	adds	r2, r1, #0
 8010de0:	701a      	strb	r2, [r3, #0]
/* USER CODE BEGIN USBPD_PWR_IF_SupplyReady */
  USBPD_StatusTypeDef status = USBPD_ERROR;
 8010de2:	230f      	movs	r3, #15
 8010de4:	18fb      	adds	r3, r7, r3
 8010de6:	2202      	movs	r2, #2
 8010de8:	701a      	strb	r2, [r3, #0]
  uint32_t _voltage;

  /* check for valid port */
  if (!USBPD_PORT_IsValid(PortNum))
 8010dea:	1dfb      	adds	r3, r7, #7
 8010dec:	781b      	ldrb	r3, [r3, #0]
 8010dee:	2b00      	cmp	r3, #0
 8010df0:	d001      	beq.n	8010df6 <USBPD_PWR_IF_SupplyReady+0x26>
  {
    return USBPD_ERROR;
 8010df2:	2302      	movs	r3, #2
 8010df4:	e024      	b.n	8010e40 <USBPD_PWR_IF_SupplyReady+0x70>
  }

  BSP_USBPD_PWR_VBUSGetVoltage(PortNum, &_voltage);
 8010df6:	1dfb      	adds	r3, r7, #7
 8010df8:	781b      	ldrb	r3, [r3, #0]
 8010dfa:	2208      	movs	r2, #8
 8010dfc:	18ba      	adds	r2, r7, r2
 8010dfe:	0011      	movs	r1, r2
 8010e00:	0018      	movs	r0, r3
 8010e02:	f001 ffb1 	bl	8012d68 <BSP_USBPD_PWR_VBUSGetVoltage>
  if (USBPD_VSAFE_0V == Vsafe)
 8010e06:	1dbb      	adds	r3, r7, #6
 8010e08:	781b      	ldrb	r3, [r3, #0]
 8010e0a:	2b00      	cmp	r3, #0
 8010e0c:	d10a      	bne.n	8010e24 <USBPD_PWR_IF_SupplyReady+0x54>
  {
    /* Vsafe0V */
    status = ((_voltage < USBPD_PWR_LOW_VBUS_THRESHOLD) ? USBPD_OK : USBPD_ERROR);
 8010e0e:	68bb      	ldr	r3, [r7, #8]
 8010e10:	4a0d      	ldr	r2, [pc, #52]	; (8010e48 <USBPD_PWR_IF_SupplyReady+0x78>)
 8010e12:	4293      	cmp	r3, r2
 8010e14:	d801      	bhi.n	8010e1a <USBPD_PWR_IF_SupplyReady+0x4a>
 8010e16:	2200      	movs	r2, #0
 8010e18:	e000      	b.n	8010e1c <USBPD_PWR_IF_SupplyReady+0x4c>
 8010e1a:	2202      	movs	r2, #2
 8010e1c:	230f      	movs	r3, #15
 8010e1e:	18fb      	adds	r3, r7, r3
 8010e20:	701a      	strb	r2, [r3, #0]
 8010e22:	e00a      	b.n	8010e3a <USBPD_PWR_IF_SupplyReady+0x6a>
  }
  else
  {
    /* Vsafe5V */
    status = ((_voltage > USBPD_PWR_HIGH_VBUS_THRESHOLD) ? USBPD_OK : USBPD_ERROR);
 8010e24:	68ba      	ldr	r2, [r7, #8]
 8010e26:	23af      	movs	r3, #175	; 0xaf
 8010e28:	011b      	lsls	r3, r3, #4
 8010e2a:	429a      	cmp	r2, r3
 8010e2c:	d901      	bls.n	8010e32 <USBPD_PWR_IF_SupplyReady+0x62>
 8010e2e:	2200      	movs	r2, #0
 8010e30:	e000      	b.n	8010e34 <USBPD_PWR_IF_SupplyReady+0x64>
 8010e32:	2202      	movs	r2, #2
 8010e34:	230f      	movs	r3, #15
 8010e36:	18fb      	adds	r3, r7, r3
 8010e38:	701a      	strb	r2, [r3, #0]
  }

  return status;
 8010e3a:	230f      	movs	r3, #15
 8010e3c:	18fb      	adds	r3, r7, r3
 8010e3e:	781b      	ldrb	r3, [r3, #0]
/* USER CODE END USBPD_PWR_IF_SupplyReady */
}
 8010e40:	0018      	movs	r0, r3
 8010e42:	46bd      	mov	sp, r7
 8010e44:	b004      	add	sp, #16
 8010e46:	bd80      	pop	{r7, pc}
 8010e48:	000002ed 	.word	0x000002ed

08010e4c <USBPD_PWR_IF_GetPortPDOs>:
  * @param  Ptr Pointer on address where PDO values should be written (u8 pointer)
  * @param  Size Pointer on nb of u32 written by PWR_IF (nb of PDOs)
  * @retval None
  */
void USBPD_PWR_IF_GetPortPDOs(uint8_t PortNum, USBPD_CORE_DataInfoType_TypeDef DataId, uint8_t *Ptr, uint32_t *Size)
{
 8010e4c:	b580      	push	{r7, lr}
 8010e4e:	b084      	sub	sp, #16
 8010e50:	af00      	add	r7, sp, #0
 8010e52:	60ba      	str	r2, [r7, #8]
 8010e54:	607b      	str	r3, [r7, #4]
 8010e56:	230f      	movs	r3, #15
 8010e58:	18fb      	adds	r3, r7, r3
 8010e5a:	1c02      	adds	r2, r0, #0
 8010e5c:	701a      	strb	r2, [r3, #0]
 8010e5e:	230e      	movs	r3, #14
 8010e60:	18fb      	adds	r3, r7, r3
 8010e62:	1c0a      	adds	r2, r1, #0
 8010e64:	701a      	strb	r2, [r3, #0]
    {
      *Size = USBPD_NbPDO[0];
 8010e66:	4b08      	ldr	r3, [pc, #32]	; (8010e88 <USBPD_PWR_IF_GetPortPDOs+0x3c>)
 8010e68:	781b      	ldrb	r3, [r3, #0]
 8010e6a:	001a      	movs	r2, r3
 8010e6c:	687b      	ldr	r3, [r7, #4]
 8010e6e:	601a      	str	r2, [r3, #0]
      memcpy(Ptr,PORT0_PDO_ListSNK, sizeof(uint32_t) * USBPD_NbPDO[0]);
 8010e70:	4b05      	ldr	r3, [pc, #20]	; (8010e88 <USBPD_PWR_IF_GetPortPDOs+0x3c>)
 8010e72:	781b      	ldrb	r3, [r3, #0]
 8010e74:	009a      	lsls	r2, r3, #2
 8010e76:	4905      	ldr	r1, [pc, #20]	; (8010e8c <USBPD_PWR_IF_GetPortPDOs+0x40>)
 8010e78:	68bb      	ldr	r3, [r7, #8]
 8010e7a:	0018      	movs	r0, r3
 8010e7c:	f007 fa56 	bl	801832c <memcpy>
    }
/* USER CODE BEGIN USBPD_PWR_IF_GetPortPDOs */

/* USER CODE END USBPD_PWR_IF_GetPortPDOs */
}
 8010e80:	46c0      	nop			; (mov r8, r8)
 8010e82:	46bd      	mov	sp, r7
 8010e84:	b004      	add	sp, #16
 8010e86:	bd80      	pop	{r7, pc}
 8010e88:	2000009c 	.word	0x2000009c
 8010e8c:	200000a0 	.word	0x200000a0

08010e90 <USBPD_PWR_IF_GetVBUSStatus>:
  * @param PortNum Port number
  * @param PowerTypeStatus  Power type status based on @ref USBPD_VBUSPOWER_STATUS
  * @retval UBBPD_TRUE or USBPD_FALSE
  */
uint8_t USBPD_PWR_IF_GetVBUSStatus(uint8_t PortNum, USBPD_VBUSPOWER_STATUS PowerTypeStatus)
{
 8010e90:	b580      	push	{r7, lr}
 8010e92:	b084      	sub	sp, #16
 8010e94:	af00      	add	r7, sp, #0
 8010e96:	0002      	movs	r2, r0
 8010e98:	1dfb      	adds	r3, r7, #7
 8010e9a:	701a      	strb	r2, [r3, #0]
 8010e9c:	1dbb      	adds	r3, r7, #6
 8010e9e:	1c0a      	adds	r2, r1, #0
 8010ea0:	701a      	strb	r2, [r3, #0]
/* USER CODE BEGIN USBPD_PWR_IF_GetVBUSStatus */
  uint8_t _status = USBPD_FALSE;
 8010ea2:	230f      	movs	r3, #15
 8010ea4:	18fb      	adds	r3, r7, r3
 8010ea6:	2200      	movs	r2, #0
 8010ea8:	701a      	strb	r2, [r3, #0]
  uint32_t _vbus = HW_IF_PWR_GetVoltage(PortNum);
 8010eaa:	1dfb      	adds	r3, r7, #7
 8010eac:	781b      	ldrb	r3, [r3, #0]
 8010eae:	0018      	movs	r0, r3
 8010eb0:	f7fc fb16 	bl	800d4e0 <HW_IF_PWR_GetVoltage>
 8010eb4:	0003      	movs	r3, r0
 8010eb6:	60bb      	str	r3, [r7, #8]

  switch(PowerTypeStatus)
 8010eb8:	1dbb      	adds	r3, r7, #6
 8010eba:	781b      	ldrb	r3, [r3, #0]
 8010ebc:	2b02      	cmp	r3, #2
 8010ebe:	d018      	beq.n	8010ef2 <USBPD_PWR_IF_GetVBUSStatus+0x62>
 8010ec0:	dc21      	bgt.n	8010f06 <USBPD_PWR_IF_GetVBUSStatus+0x76>
 8010ec2:	2b00      	cmp	r3, #0
 8010ec4:	d002      	beq.n	8010ecc <USBPD_PWR_IF_GetVBUSStatus+0x3c>
 8010ec6:	2b01      	cmp	r3, #1
 8010ec8:	d009      	beq.n	8010ede <USBPD_PWR_IF_GetVBUSStatus+0x4e>
    break;
  case USBPD_PWR_SNKDETACH:
    if (_vbus < USBPD_PWR_HIGH_VBUS_THRESHOLD) _status = USBPD_TRUE;
    break;
  default :
    break;
 8010eca:	e01c      	b.n	8010f06 <USBPD_PWR_IF_GetVBUSStatus+0x76>
    if (_vbus < USBPD_PWR_LOW_VBUS_THRESHOLD) _status = USBPD_TRUE;
 8010ecc:	68bb      	ldr	r3, [r7, #8]
 8010ece:	4a15      	ldr	r2, [pc, #84]	; (8010f24 <USBPD_PWR_IF_GetVBUSStatus+0x94>)
 8010ed0:	4293      	cmp	r3, r2
 8010ed2:	d81a      	bhi.n	8010f0a <USBPD_PWR_IF_GetVBUSStatus+0x7a>
 8010ed4:	230f      	movs	r3, #15
 8010ed6:	18fb      	adds	r3, r7, r3
 8010ed8:	2201      	movs	r2, #1
 8010eda:	701a      	strb	r2, [r3, #0]
    break;
 8010edc:	e015      	b.n	8010f0a <USBPD_PWR_IF_GetVBUSStatus+0x7a>
    if (_vbus >= USBPD_PWR_HIGH_VBUS_THRESHOLD) _status = USBPD_TRUE;
 8010ede:	68ba      	ldr	r2, [r7, #8]
 8010ee0:	23af      	movs	r3, #175	; 0xaf
 8010ee2:	011b      	lsls	r3, r3, #4
 8010ee4:	429a      	cmp	r2, r3
 8010ee6:	d312      	bcc.n	8010f0e <USBPD_PWR_IF_GetVBUSStatus+0x7e>
 8010ee8:	230f      	movs	r3, #15
 8010eea:	18fb      	adds	r3, r7, r3
 8010eec:	2201      	movs	r2, #1
 8010eee:	701a      	strb	r2, [r3, #0]
    break;
 8010ef0:	e00d      	b.n	8010f0e <USBPD_PWR_IF_GetVBUSStatus+0x7e>
    if (_vbus < USBPD_PWR_HIGH_VBUS_THRESHOLD) _status = USBPD_TRUE;
 8010ef2:	68ba      	ldr	r2, [r7, #8]
 8010ef4:	23af      	movs	r3, #175	; 0xaf
 8010ef6:	011b      	lsls	r3, r3, #4
 8010ef8:	429a      	cmp	r2, r3
 8010efa:	d20a      	bcs.n	8010f12 <USBPD_PWR_IF_GetVBUSStatus+0x82>
 8010efc:	230f      	movs	r3, #15
 8010efe:	18fb      	adds	r3, r7, r3
 8010f00:	2201      	movs	r2, #1
 8010f02:	701a      	strb	r2, [r3, #0]
    break;
 8010f04:	e005      	b.n	8010f12 <USBPD_PWR_IF_GetVBUSStatus+0x82>
    break;
 8010f06:	46c0      	nop			; (mov r8, r8)
 8010f08:	e004      	b.n	8010f14 <USBPD_PWR_IF_GetVBUSStatus+0x84>
    break;
 8010f0a:	46c0      	nop			; (mov r8, r8)
 8010f0c:	e002      	b.n	8010f14 <USBPD_PWR_IF_GetVBUSStatus+0x84>
    break;
 8010f0e:	46c0      	nop			; (mov r8, r8)
 8010f10:	e000      	b.n	8010f14 <USBPD_PWR_IF_GetVBUSStatus+0x84>
    break;
 8010f12:	46c0      	nop			; (mov r8, r8)
  }
  return _status;
 8010f14:	230f      	movs	r3, #15
 8010f16:	18fb      	adds	r3, r7, r3
 8010f18:	781b      	ldrb	r3, [r3, #0]
/* USER CODE END USBPD_PWR_IF_GetVBUSStatus */
}
 8010f1a:	0018      	movs	r0, r3
 8010f1c:	46bd      	mov	sp, r7
 8010f1e:	b004      	add	sp, #16
 8010f20:	bd80      	pop	{r7, pc}
 8010f22:	46c0      	nop			; (mov r8, r8)
 8010f24:	000002ed 	.word	0x000002ed

08010f28 <USBPD_USER_SERV_StoreSRCPDO>:
  * @param  Ptr     Pointer on the data
  * @param  Size    Nb of bytes to be updated in DPM
  * @retval None
  */
void USBPD_USER_SERV_StoreSRCPDO(uint8_t PortNum, uint8_t *Ptr, uint32_t Size)
{
 8010f28:	b580      	push	{r7, lr}
 8010f2a:	b086      	sub	sp, #24
 8010f2c:	af00      	add	r7, sp, #0
 8010f2e:	60b9      	str	r1, [r7, #8]
 8010f30:	607a      	str	r2, [r7, #4]
 8010f32:	210f      	movs	r1, #15
 8010f34:	187b      	adds	r3, r7, r1
 8010f36:	1c02      	adds	r2, r0, #0
 8010f38:	701a      	strb	r2, [r3, #0]
  /*!< Storage of Received Source PDO values */
  if (Size <= (USBPD_MAX_NB_PDO * 4U))
 8010f3a:	687b      	ldr	r3, [r7, #4]
 8010f3c:	2b1c      	cmp	r3, #28
 8010f3e:	d82c      	bhi.n	8010f9a <USBPD_USER_SERV_StoreSRCPDO+0x72>
  {
    uint8_t *rdo;
    DPM_Ports[PortNum].DPM_NumberOfRcvSRCPDO = (Size / 4U);
 8010f40:	187b      	adds	r3, r7, r1
 8010f42:	781a      	ldrb	r2, [r3, #0]
 8010f44:	687b      	ldr	r3, [r7, #4]
 8010f46:	0899      	lsrs	r1, r3, #2
 8010f48:	4816      	ldr	r0, [pc, #88]	; (8010fa4 <USBPD_USER_SERV_StoreSRCPDO+0x7c>)
 8010f4a:	0013      	movs	r3, r2
 8010f4c:	009b      	lsls	r3, r3, #2
 8010f4e:	189b      	adds	r3, r3, r2
 8010f50:	011b      	lsls	r3, r3, #4
 8010f52:	18c3      	adds	r3, r0, r3
 8010f54:	331c      	adds	r3, #28
 8010f56:	6019      	str	r1, [r3, #0]
    /* Copy PDO data in DPM Handle field */
    for (uint32_t index = 0; index < (Size / 4U); index++)
 8010f58:	2300      	movs	r3, #0
 8010f5a:	617b      	str	r3, [r7, #20]
 8010f5c:	e018      	b.n	8010f90 <USBPD_USER_SERV_StoreSRCPDO+0x68>
    {
      rdo = (uint8_t *)&DPM_Ports[PortNum].DPM_ListOfRcvSRCPDO[index];
 8010f5e:	230f      	movs	r3, #15
 8010f60:	18fb      	adds	r3, r7, r3
 8010f62:	781a      	ldrb	r2, [r3, #0]
 8010f64:	0013      	movs	r3, r2
 8010f66:	009b      	lsls	r3, r3, #2
 8010f68:	189b      	adds	r3, r3, r2
 8010f6a:	009b      	lsls	r3, r3, #2
 8010f6c:	697a      	ldr	r2, [r7, #20]
 8010f6e:	189b      	adds	r3, r3, r2
 8010f70:	009a      	lsls	r2, r3, #2
 8010f72:	4b0c      	ldr	r3, [pc, #48]	; (8010fa4 <USBPD_USER_SERV_StoreSRCPDO+0x7c>)
 8010f74:	18d3      	adds	r3, r2, r3
 8010f76:	613b      	str	r3, [r7, #16]
      (void)memcpy(rdo, (Ptr + (index * 4U)), (4U * sizeof(uint8_t)));
 8010f78:	697b      	ldr	r3, [r7, #20]
 8010f7a:	009b      	lsls	r3, r3, #2
 8010f7c:	68ba      	ldr	r2, [r7, #8]
 8010f7e:	18d1      	adds	r1, r2, r3
 8010f80:	693b      	ldr	r3, [r7, #16]
 8010f82:	2204      	movs	r2, #4
 8010f84:	0018      	movs	r0, r3
 8010f86:	f007 f9d1 	bl	801832c <memcpy>
    for (uint32_t index = 0; index < (Size / 4U); index++)
 8010f8a:	697b      	ldr	r3, [r7, #20]
 8010f8c:	3301      	adds	r3, #1
 8010f8e:	617b      	str	r3, [r7, #20]
 8010f90:	687b      	ldr	r3, [r7, #4]
 8010f92:	089b      	lsrs	r3, r3, #2
 8010f94:	697a      	ldr	r2, [r7, #20]
 8010f96:	429a      	cmp	r2, r3
 8010f98:	d3e1      	bcc.n	8010f5e <USBPD_USER_SERV_StoreSRCPDO+0x36>
    }
  }
}
 8010f9a:	46c0      	nop			; (mov r8, r8)
 8010f9c:	46bd      	mov	sp, r7
 8010f9e:	b006      	add	sp, #24
 8010fa0:	bd80      	pop	{r7, pc}
 8010fa2:	46c0      	nop			; (mov r8, r8)
 8010fa4:	20002c54 	.word	0x20002c54

08010fa8 <USBPD_USER_SERV_EvaluateCapa>:
  * @retval None
  */
void USBPD_USER_SERV_EvaluateCapa(uint8_t PortNum,
                                  uint32_t *PtrRequestData,
                                  USBPD_CORE_PDO_Type_TypeDef *PtrPowerObjectType)
{
 8010fa8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010faa:	b0ab      	sub	sp, #172	; 0xac
 8010fac:	af02      	add	r7, sp, #8
 8010fae:	60b9      	str	r1, [r7, #8]
 8010fb0:	607a      	str	r2, [r7, #4]
 8010fb2:	240f      	movs	r4, #15
 8010fb4:	193b      	adds	r3, r7, r4
 8010fb6:	1c02      	adds	r2, r0, #0
 8010fb8:	701a      	strb	r2, [r3, #0]
  USBPD_PDO_TypeDef  fixed_pdo;
  USBPD_SNKRDO_TypeDef rdo;
  USBPD_HandleTypeDef *pdhandle = &DPM_Ports[PortNum];
 8010fba:	193b      	adds	r3, r7, r4
 8010fbc:	781a      	ldrb	r2, [r3, #0]
 8010fbe:	0013      	movs	r3, r2
 8010fc0:	009b      	lsls	r3, r3, #2
 8010fc2:	189b      	adds	r3, r3, r2
 8010fc4:	011b      	lsls	r3, r3, #4
 8010fc6:	4a66      	ldr	r2, [pc, #408]	; (8011160 <USBPD_USER_SERV_EvaluateCapa+0x1b8>)
 8010fc8:	189b      	adds	r3, r3, r2
 8010fca:	269c      	movs	r6, #156	; 0x9c
 8010fcc:	19ba      	adds	r2, r7, r6
 8010fce:	6013      	str	r3, [r2, #0]
  USBPD_USER_SettingsTypeDef *puser = (USBPD_USER_SettingsTypeDef *)&DPM_USER_Settings[PortNum];
 8010fd0:	193b      	adds	r3, r7, r4
 8010fd2:	781b      	ldrb	r3, [r3, #0]
 8010fd4:	2274      	movs	r2, #116	; 0x74
 8010fd6:	435a      	muls	r2, r3
 8010fd8:	4b62      	ldr	r3, [pc, #392]	; (8011164 <USBPD_USER_SERV_EvaluateCapa+0x1bc>)
 8010fda:	18d3      	adds	r3, r2, r3
 8010fdc:	2298      	movs	r2, #152	; 0x98
 8010fde:	18b9      	adds	r1, r7, r2
 8010fe0:	600b      	str	r3, [r1, #0]
  uint32_t pdoindex;
  uint32_t size;
  uint32_t snkpdolist[USBPD_MAX_NB_PDO];
  USBPD_PDO_TypeDef snk_fixed_pdo;

  snkpowerrequestdetails.RequestedVoltageInmVunits = 0;
 8010fe2:	2178      	movs	r1, #120	; 0x78
 8010fe4:	187b      	adds	r3, r7, r1
 8010fe6:	2200      	movs	r2, #0
 8010fe8:	601a      	str	r2, [r3, #0]
  snkpowerrequestdetails.OperatingCurrentInmAunits = 0;
 8010fea:	187b      	adds	r3, r7, r1
 8010fec:	2200      	movs	r2, #0
 8010fee:	609a      	str	r2, [r3, #8]

  /* Find the Pdo index for the requested voltage, depending on the wanted method */
  pdoindex = USER_SERV_FindVoltageIndex(PortNum, &snkpowerrequestdetails, USER_SERV_PDO_Sel_Method);
 8010ff0:	193b      	adds	r3, r7, r4
 8010ff2:	7818      	ldrb	r0, [r3, #0]
 8010ff4:	4b5c      	ldr	r3, [pc, #368]	; (8011168 <USBPD_USER_SERV_EvaluateCapa+0x1c0>)
 8010ff6:	781a      	ldrb	r2, [r3, #0]
 8010ff8:	187b      	adds	r3, r7, r1
 8010ffa:	0019      	movs	r1, r3
 8010ffc:	f000 fa22 	bl	8011444 <USER_SERV_FindVoltageIndex>
 8011000:	0003      	movs	r3, r0
 8011002:	2194      	movs	r1, #148	; 0x94
 8011004:	1878      	adds	r0, r7, r1
 8011006:	6003      	str	r3, [r0, #0]

  /* Initialize RDO */
  rdo.d32 = 0;
 8011008:	2300      	movs	r3, #0
 801100a:	258c      	movs	r5, #140	; 0x8c
 801100c:	1978      	adds	r0, r7, r5
 801100e:	6003      	str	r3, [r0, #0]

  /* If no valid SNK PDO or if no SRC PDO match found
      (index>=nb of valid received SRC PDOs or function returned DPM_NO_SRC_PDO_FOUND */
  if (pdoindex >= pdhandle->DPM_NumberOfRcvSRCPDO)
 8011010:	19b8      	adds	r0, r7, r6
 8011012:	6803      	ldr	r3, [r0, #0]
 8011014:	69db      	ldr	r3, [r3, #28]
 8011016:	1879      	adds	r1, r7, r1
 8011018:	680a      	ldr	r2, [r1, #0]
 801101a:	429a      	cmp	r2, r3
 801101c:	d200      	bcs.n	8011020 <USBPD_USER_SERV_EvaluateCapa+0x78>
 801101e:	e085      	b.n	801112c <USBPD_USER_SERV_EvaluateCapa+0x184>
  {
#if defined(_TRACE)
    uint8_t msg[] = "USBPD_USER_SERV_EvaluateCapa: could not find desired voltage";
 8011020:	2114      	movs	r1, #20
 8011022:	187a      	adds	r2, r7, r1
 8011024:	4b51      	ldr	r3, [pc, #324]	; (801116c <USBPD_USER_SERV_EvaluateCapa+0x1c4>)
 8011026:	0010      	movs	r0, r2
 8011028:	0019      	movs	r1, r3
 801102a:	233d      	movs	r3, #61	; 0x3d
 801102c:	001a      	movs	r2, r3
 801102e:	f007 f97d 	bl	801832c <memcpy>
    USBPD_TRACE_Add(USBPD_TRACE_DEBUG, PortNum, 0, (uint8_t *)msg, sizeof(msg));
 8011032:	2114      	movs	r1, #20
 8011034:	187a      	adds	r2, r7, r1
 8011036:	193b      	adds	r3, r7, r4
 8011038:	7819      	ldrb	r1, [r3, #0]
 801103a:	233d      	movs	r3, #61	; 0x3d
 801103c:	9300      	str	r3, [sp, #0]
 801103e:	0013      	movs	r3, r2
 8011040:	2200      	movs	r2, #0
 8011042:	2006      	movs	r0, #6
 8011044:	f7f9 fdd6 	bl	800abf4 <USBPD_TRACE_Add>
#endif /* _TRACE */
    fixed_pdo.d32 = pdhandle->DPM_ListOfRcvSRCPDO[0];
 8011048:	19b9      	adds	r1, r7, r6
 801104a:	680b      	ldr	r3, [r1, #0]
 801104c:	681b      	ldr	r3, [r3, #0]
 801104e:	2090      	movs	r0, #144	; 0x90
 8011050:	1839      	adds	r1, r7, r0
 8011052:	600b      	str	r3, [r1, #0]
    /* Read SNK PDO list for retrieving useful data to fill in RDO */
    USBPD_PWR_IF_GetPortPDOs(PortNum, USBPD_CORE_DATATYPE_SNK_PDO, (uint8_t *)&snkpdolist[0], &size);
 8011054:	2174      	movs	r1, #116	; 0x74
 8011056:	1879      	adds	r1, r7, r1
 8011058:	2358      	movs	r3, #88	; 0x58
 801105a:	18fa      	adds	r2, r7, r3
 801105c:	193b      	adds	r3, r7, r4
 801105e:	7818      	ldrb	r0, [r3, #0]
 8011060:	000b      	movs	r3, r1
 8011062:	2101      	movs	r1, #1
 8011064:	f7ff fef2 	bl	8010e4c <USBPD_PWR_IF_GetPortPDOs>
    /* Store value of 1st SNK PDO (Fixed) in local variable */
    snk_fixed_pdo.d32 = snkpdolist[0];
 8011068:	2158      	movs	r1, #88	; 0x58
 801106a:	187b      	adds	r3, r7, r1
 801106c:	681b      	ldr	r3, [r3, #0]
 801106e:	657b      	str	r3, [r7, #84]	; 0x54
    rdo.FixedVariableRDO.ObjectPosition = 1U;
 8011070:	238f      	movs	r3, #143	; 0x8f
 8011072:	18fb      	adds	r3, r7, r3
 8011074:	781a      	ldrb	r2, [r3, #0]
 8011076:	2170      	movs	r1, #112	; 0x70
 8011078:	438a      	bics	r2, r1
 801107a:	1c11      	adds	r1, r2, #0
 801107c:	2210      	movs	r2, #16
 801107e:	430a      	orrs	r2, r1
 8011080:	701a      	strb	r2, [r3, #0]
    rdo.FixedVariableRDO.OperatingCurrentIn10mAunits  =  fixed_pdo.SRCFixedPDO.MaxCurrentIn10mAunits;
 8011082:	2090      	movs	r0, #144	; 0x90
 8011084:	183b      	adds	r3, r7, r0
 8011086:	881b      	ldrh	r3, [r3, #0]
 8011088:	059b      	lsls	r3, r3, #22
 801108a:	0d9b      	lsrs	r3, r3, #22
 801108c:	b29b      	uxth	r3, r3
 801108e:	059b      	lsls	r3, r3, #22
 8011090:	0d9b      	lsrs	r3, r3, #22
 8011092:	029b      	lsls	r3, r3, #10
 8011094:	1979      	adds	r1, r7, r5
 8011096:	680a      	ldr	r2, [r1, #0]
 8011098:	4935      	ldr	r1, [pc, #212]	; (8011170 <USBPD_USER_SERV_EvaluateCapa+0x1c8>)
 801109a:	400a      	ands	r2, r1
 801109c:	4313      	orrs	r3, r2
 801109e:	1979      	adds	r1, r7, r5
 80110a0:	600b      	str	r3, [r1, #0]
    rdo.FixedVariableRDO.MaxOperatingCurrent10mAunits =  fixed_pdo.SRCFixedPDO.MaxCurrentIn10mAunits;
 80110a2:	183b      	adds	r3, r7, r0
 80110a4:	881b      	ldrh	r3, [r3, #0]
 80110a6:	059b      	lsls	r3, r3, #22
 80110a8:	0d9b      	lsrs	r3, r3, #22
 80110aa:	b29a      	uxth	r2, r3
 80110ac:	197b      	adds	r3, r7, r5
 80110ae:	0592      	lsls	r2, r2, #22
 80110b0:	0d90      	lsrs	r0, r2, #22
 80110b2:	881a      	ldrh	r2, [r3, #0]
 80110b4:	0a92      	lsrs	r2, r2, #10
 80110b6:	0292      	lsls	r2, r2, #10
 80110b8:	1c11      	adds	r1, r2, #0
 80110ba:	1c02      	adds	r2, r0, #0
 80110bc:	430a      	orrs	r2, r1
 80110be:	801a      	strh	r2, [r3, #0]
    rdo.FixedVariableRDO.CapabilityMismatch = 1U;
 80110c0:	208f      	movs	r0, #143	; 0x8f
 80110c2:	183b      	adds	r3, r7, r0
 80110c4:	781a      	ldrb	r2, [r3, #0]
 80110c6:	2104      	movs	r1, #4
 80110c8:	430a      	orrs	r2, r1
 80110ca:	701a      	strb	r2, [r3, #0]
    rdo.FixedVariableRDO.USBCommunicationsCapable = snk_fixed_pdo.SNKFixedPDO.USBCommunicationsCapable;
 80110cc:	2157      	movs	r1, #87	; 0x57
 80110ce:	187b      	adds	r3, r7, r1
 80110d0:	781b      	ldrb	r3, [r3, #0]
 80110d2:	075b      	lsls	r3, r3, #29
 80110d4:	0fdb      	lsrs	r3, r3, #31
 80110d6:	b2da      	uxtb	r2, r3
 80110d8:	183b      	adds	r3, r7, r0
 80110da:	2101      	movs	r1, #1
 80110dc:	400a      	ands	r2, r1
 80110de:	1890      	adds	r0, r2, r2
 80110e0:	781a      	ldrb	r2, [r3, #0]
 80110e2:	2102      	movs	r1, #2
 80110e4:	438a      	bics	r2, r1
 80110e6:	1c11      	adds	r1, r2, #0
 80110e8:	1c02      	adds	r2, r0, #0
 80110ea:	430a      	orrs	r2, r1
 80110ec:	701a      	strb	r2, [r3, #0]
    DPM_Ports[PortNum].DPM_RequestedCurrent = puser->DPM_SNKRequestedPower.MaxOperatingCurrentInmAunits;
 80110ee:	193b      	adds	r3, r7, r4
 80110f0:	781a      	ldrb	r2, [r3, #0]
 80110f2:	2398      	movs	r3, #152	; 0x98
 80110f4:	18fb      	adds	r3, r7, r3
 80110f6:	681b      	ldr	r3, [r3, #0]
 80110f8:	6859      	ldr	r1, [r3, #4]
 80110fa:	4819      	ldr	r0, [pc, #100]	; (8011160 <USBPD_USER_SERV_EvaluateCapa+0x1b8>)
 80110fc:	0013      	movs	r3, r2
 80110fe:	009b      	lsls	r3, r3, #2
 8011100:	189b      	adds	r3, r3, r2
 8011102:	011b      	lsls	r3, r3, #4
 8011104:	18c3      	adds	r3, r0, r3
 8011106:	334c      	adds	r3, #76	; 0x4c
 8011108:	6019      	str	r1, [r3, #0]

    pdhandle->DPM_RequestDOMsg = rdo.d32;
 801110a:	197b      	adds	r3, r7, r5
 801110c:	681a      	ldr	r2, [r3, #0]
 801110e:	19bb      	adds	r3, r7, r6
 8011110:	681b      	ldr	r3, [r3, #0]
 8011112:	63da      	str	r2, [r3, #60]	; 0x3c
    *PtrPowerObjectType = USBPD_CORE_PDO_TYPE_FIXED;
 8011114:	687b      	ldr	r3, [r7, #4]
 8011116:	2200      	movs	r2, #0
 8011118:	601a      	str	r2, [r3, #0]
    *PtrRequestData = rdo.d32;
 801111a:	197b      	adds	r3, r7, r5
 801111c:	681a      	ldr	r2, [r3, #0]
 801111e:	68bb      	ldr	r3, [r7, #8]
 8011120:	601a      	str	r2, [r3, #0]
    pdhandle->DPM_RequestedVoltage = 5000U;
 8011122:	19bb      	adds	r3, r7, r6
 8011124:	681b      	ldr	r3, [r3, #0]
 8011126:	4a13      	ldr	r2, [pc, #76]	; (8011174 <USBPD_USER_SERV_EvaluateCapa+0x1cc>)
 8011128:	649a      	str	r2, [r3, #72]	; 0x48
 801112a:	e015      	b.n	8011158 <USBPD_USER_SERV_EvaluateCapa+0x1b0>
    return;
  }

  USER_SERV_SNK_BuildRDOfromSelectedPDO(PortNum, pdoindex, &snkpowerrequestdetails, &rdo, PtrPowerObjectType);
 801112c:	2394      	movs	r3, #148	; 0x94
 801112e:	18fb      	adds	r3, r7, r3
 8011130:	681b      	ldr	r3, [r3, #0]
 8011132:	b2d9      	uxtb	r1, r3
 8011134:	238c      	movs	r3, #140	; 0x8c
 8011136:	18fc      	adds	r4, r7, r3
 8011138:	2378      	movs	r3, #120	; 0x78
 801113a:	18fa      	adds	r2, r7, r3
 801113c:	230f      	movs	r3, #15
 801113e:	18fb      	adds	r3, r7, r3
 8011140:	7818      	ldrb	r0, [r3, #0]
 8011142:	687b      	ldr	r3, [r7, #4]
 8011144:	9300      	str	r3, [sp, #0]
 8011146:	0023      	movs	r3, r4
 8011148:	f000 fa76 	bl	8011638 <USER_SERV_SNK_BuildRDOfromSelectedPDO>

  *PtrRequestData = pdhandle->DPM_RequestDOMsg;
 801114c:	239c      	movs	r3, #156	; 0x9c
 801114e:	18fb      	adds	r3, r7, r3
 8011150:	681b      	ldr	r3, [r3, #0]
 8011152:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8011154:	68bb      	ldr	r3, [r7, #8]
 8011156:	601a      	str	r2, [r3, #0]
}
 8011158:	46bd      	mov	sp, r7
 801115a:	b029      	add	sp, #164	; 0xa4
 801115c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801115e:	46c0      	nop			; (mov r8, r8)
 8011160:	20002c54 	.word	0x20002c54
 8011164:	20000028 	.word	0x20000028
 8011168:	20002c50 	.word	0x20002c50
 801116c:	08018ac8 	.word	0x08018ac8
 8011170:	fff003ff 	.word	0xfff003ff
 8011174:	00001388 	.word	0x00001388

08011178 <USER_SERV_SNK_EvaluateMatchWithSRCPDO>:
  */
static uint32_t USER_SERV_SNK_EvaluateMatchWithSRCPDO(uint8_t PortNum,
                                                      uint32_t SrcPDO,
                                                      uint32_t *PtrRequestedVoltage,
                                                      uint32_t *PtrRequestedPower)
{
 8011178:	b590      	push	{r4, r7, lr}
 801117a:	b09b      	sub	sp, #108	; 0x6c
 801117c:	af00      	add	r7, sp, #0
 801117e:	60b9      	str	r1, [r7, #8]
 8011180:	607a      	str	r2, [r7, #4]
 8011182:	603b      	str	r3, [r7, #0]
 8011184:	240f      	movs	r4, #15
 8011186:	193b      	adds	r3, r7, r4
 8011188:	1c02      	adds	r2, r0, #0
 801118a:	701a      	strb	r2, [r3, #0]
  USBPD_PDO_TypeDef srcpdo;
  USBPD_PDO_TypeDef snkpdo;
  uint32_t match = USBPD_FALSE;
 801118c:	2300      	movs	r3, #0
 801118e:	667b      	str	r3, [r7, #100]	; 0x64
  uint32_t currentrequestedpower;
  uint32_t maxrequestedvoltage;
  uint32_t currentrequestedvoltage;

  /* Retrieve SNK PDO list from PWR_IF storage : PDO values + nb of u32 written by PWR_IF (nb of PDOs) */
  USBPD_PWR_IF_GetPortPDOs(PortNum, USBPD_CORE_DATATYPE_SNK_PDO, (uint8_t *)snkpdo_array, &nbsnkpdo);
 8011190:	2330      	movs	r3, #48	; 0x30
 8011192:	18f9      	adds	r1, r7, r3
 8011194:	2314      	movs	r3, #20
 8011196:	18fa      	adds	r2, r7, r3
 8011198:	193b      	adds	r3, r7, r4
 801119a:	7818      	ldrb	r0, [r3, #0]
 801119c:	000b      	movs	r3, r1
 801119e:	2101      	movs	r1, #1
 80111a0:	f7ff fe54 	bl	8010e4c <USBPD_PWR_IF_GetPortPDOs>

  if (0 == nbsnkpdo)
 80111a4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80111a6:	2b00      	cmp	r3, #0
 80111a8:	d101      	bne.n	80111ae <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x36>
  {
    return (USBPD_FALSE);
 80111aa:	2300      	movs	r3, #0
 80111ac:	e146      	b.n	801143c <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x2c4>
  }

  /* Set default output values */
  maxrequestedpower    = 0;
 80111ae:	2300      	movs	r3, #0
 80111b0:	663b      	str	r3, [r7, #96]	; 0x60
  maxrequestedvoltage  = 0;
 80111b2:	2300      	movs	r3, #0
 80111b4:	65bb      	str	r3, [r7, #88]	; 0x58

  /* Check SRC PDO value according to its type */
  srcpdo.d32 = SrcPDO;
 80111b6:	68bb      	ldr	r3, [r7, #8]
 80111b8:	63bb      	str	r3, [r7, #56]	; 0x38
  switch (srcpdo.GenericPDO.PowerObject)
 80111ba:	233b      	movs	r3, #59	; 0x3b
 80111bc:	18fb      	adds	r3, r7, r3
 80111be:	781b      	ldrb	r3, [r3, #0]
 80111c0:	061b      	lsls	r3, r3, #24
 80111c2:	0f9b      	lsrs	r3, r3, #30
 80111c4:	b2db      	uxtb	r3, r3
 80111c6:	2b00      	cmp	r3, #0
 80111c8:	d003      	beq.n	80111d2 <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x5a>
 80111ca:	2b03      	cmp	r3, #3
 80111cc:	d100      	bne.n	80111d0 <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x58>
 80111ce:	e06c      	b.n	80112aa <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x132>
 80111d0:	e126      	b.n	8011420 <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x2a8>
  {
    /* SRC Fixed Supply PDO */
    case USBPD_CORE_PDO_TYPE_FIXED:
    {
      srcvoltage50mv = srcpdo.SRCFixedPDO.VoltageIn50mVunits;
 80111d2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80111d4:	031b      	lsls	r3, r3, #12
 80111d6:	0d9b      	lsrs	r3, r3, #22
 80111d8:	b29a      	uxth	r2, r3
 80111da:	2342      	movs	r3, #66	; 0x42
 80111dc:	18fb      	adds	r3, r7, r3
 80111de:	801a      	strh	r2, [r3, #0]
      srcmaxcurrent10ma = srcpdo.SRCFixedPDO.MaxCurrentIn10mAunits;
 80111e0:	2338      	movs	r3, #56	; 0x38
 80111e2:	18fb      	adds	r3, r7, r3
 80111e4:	881b      	ldrh	r3, [r3, #0]
 80111e6:	059b      	lsls	r3, r3, #22
 80111e8:	0d9b      	lsrs	r3, r3, #22
 80111ea:	b29a      	uxth	r2, r3
 80111ec:	2340      	movs	r3, #64	; 0x40
 80111ee:	18fb      	adds	r3, r7, r3
 80111f0:	801a      	strh	r2, [r3, #0]

      /* Loop through SNK PDO list */
      for (uint16_t i = 0; i < nbsnkpdo; i++)
 80111f2:	2352      	movs	r3, #82	; 0x52
 80111f4:	18fb      	adds	r3, r7, r3
 80111f6:	2200      	movs	r2, #0
 80111f8:	801a      	strh	r2, [r3, #0]
 80111fa:	e04f      	b.n	801129c <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x124>
      {
        currentrequestedpower = 0;
 80111fc:	2300      	movs	r3, #0
 80111fe:	65fb      	str	r3, [r7, #92]	; 0x5c
        currentrequestedvoltage = 0;
 8011200:	2300      	movs	r3, #0
 8011202:	657b      	str	r3, [r7, #84]	; 0x54

        /* Retrieve SNK PDO value according to its type */
        snkpdo.d32 = snkpdo_array[i];
 8011204:	2352      	movs	r3, #82	; 0x52
 8011206:	18fb      	adds	r3, r7, r3
 8011208:	881a      	ldrh	r2, [r3, #0]
 801120a:	2314      	movs	r3, #20
 801120c:	18fb      	adds	r3, r7, r3
 801120e:	0092      	lsls	r2, r2, #2
 8011210:	58d3      	ldr	r3, [r2, r3]
 8011212:	637b      	str	r3, [r7, #52]	; 0x34
        switch (snkpdo.GenericPDO.PowerObject)
 8011214:	2337      	movs	r3, #55	; 0x37
 8011216:	18fb      	adds	r3, r7, r3
 8011218:	781b      	ldrb	r3, [r3, #0]
 801121a:	061b      	lsls	r3, r3, #24
 801121c:	0f9b      	lsrs	r3, r3, #30
 801121e:	b2db      	uxtb	r3, r3
 8011220:	2b00      	cmp	r3, #0
 8011222:	d128      	bne.n	8011276 <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0xfe>
        {
          /* SNK Fixed Supply PDO */
          case USBPD_CORE_PDO_TYPE_FIXED:
          {
            snkvoltage50mv = snkpdo.SNKFixedPDO.VoltageIn50mVunits;
 8011224:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8011226:	031b      	lsls	r3, r3, #12
 8011228:	0d9b      	lsrs	r3, r3, #22
 801122a:	b29a      	uxth	r2, r3
 801122c:	213e      	movs	r1, #62	; 0x3e
 801122e:	187b      	adds	r3, r7, r1
 8011230:	801a      	strh	r2, [r3, #0]
            snkopcurrent10ma = snkpdo.SNKFixedPDO.OperationalCurrentIn10mAunits;
 8011232:	2334      	movs	r3, #52	; 0x34
 8011234:	18fb      	adds	r3, r7, r3
 8011236:	881b      	ldrh	r3, [r3, #0]
 8011238:	059b      	lsls	r3, r3, #22
 801123a:	0d9b      	lsrs	r3, r3, #22
 801123c:	b29a      	uxth	r2, r3
 801123e:	203c      	movs	r0, #60	; 0x3c
 8011240:	183b      	adds	r3, r7, r0
 8011242:	801a      	strh	r2, [r3, #0]

               Requested Voltage: SNK Voltage
               Requested Op Current: SNK Op Current
               Requested Max Current: SNK Op Current
            */
            if ((snkvoltage50mv == srcvoltage50mv) && (snkopcurrent10ma <= srcmaxcurrent10ma))
 8011244:	187a      	adds	r2, r7, r1
 8011246:	2342      	movs	r3, #66	; 0x42
 8011248:	18fb      	adds	r3, r7, r3
 801124a:	8812      	ldrh	r2, [r2, #0]
 801124c:	881b      	ldrh	r3, [r3, #0]
 801124e:	429a      	cmp	r2, r3
 8011250:	d113      	bne.n	801127a <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x102>
 8011252:	183a      	adds	r2, r7, r0
 8011254:	2340      	movs	r3, #64	; 0x40
 8011256:	18fb      	adds	r3, r7, r3
 8011258:	8812      	ldrh	r2, [r2, #0]
 801125a:	881b      	ldrh	r3, [r3, #0]
 801125c:	429a      	cmp	r2, r3
 801125e:	d80c      	bhi.n	801127a <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x102>
            {
              currentrequestedpower = (snkvoltage50mv * snkopcurrent10ma) / 2U; /* To get value in mW */
 8011260:	187b      	adds	r3, r7, r1
 8011262:	881b      	ldrh	r3, [r3, #0]
 8011264:	183a      	adds	r2, r7, r0
 8011266:	8812      	ldrh	r2, [r2, #0]
 8011268:	4353      	muls	r3, r2
 801126a:	085b      	lsrs	r3, r3, #1
 801126c:	65fb      	str	r3, [r7, #92]	; 0x5c
              currentrequestedvoltage = snkvoltage50mv;
 801126e:	187b      	adds	r3, r7, r1
 8011270:	881b      	ldrh	r3, [r3, #0]
 8011272:	657b      	str	r3, [r7, #84]	; 0x54
            }
            break;
 8011274:	e001      	b.n	801127a <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x102>
          }
          /* SNK Augmented Power Data Object (APDO) */
          case USBPD_CORE_PDO_TYPE_APDO:
            break;
 8011276:	46c0      	nop			; (mov r8, r8)
 8011278:	e000      	b.n	801127c <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x104>
            break;
 801127a:	46c0      	nop			; (mov r8, r8)

          default:
            break;
        }

        if (currentrequestedpower > maxrequestedpower)
 801127c:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 801127e:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8011280:	429a      	cmp	r2, r3
 8011282:	d905      	bls.n	8011290 <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x118>
        {
          match = USBPD_TRUE;
 8011284:	2301      	movs	r3, #1
 8011286:	667b      	str	r3, [r7, #100]	; 0x64
          maxrequestedpower   = currentrequestedpower;
 8011288:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801128a:	663b      	str	r3, [r7, #96]	; 0x60
          maxrequestedvoltage = currentrequestedvoltage;
 801128c:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 801128e:	65bb      	str	r3, [r7, #88]	; 0x58
      for (uint16_t i = 0; i < nbsnkpdo; i++)
 8011290:	2152      	movs	r1, #82	; 0x52
 8011292:	187b      	adds	r3, r7, r1
 8011294:	881a      	ldrh	r2, [r3, #0]
 8011296:	187b      	adds	r3, r7, r1
 8011298:	3201      	adds	r2, #1
 801129a:	801a      	strh	r2, [r3, #0]
 801129c:	2352      	movs	r3, #82	; 0x52
 801129e:	18fb      	adds	r3, r7, r3
 80112a0:	881a      	ldrh	r2, [r3, #0]
 80112a2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80112a4:	429a      	cmp	r2, r3
 80112a6:	d3a9      	bcc.n	80111fc <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x84>
        }
      }
    }
    break;
 80112a8:	e0bc      	b.n	8011424 <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x2ac>
    case USBPD_CORE_PDO_TYPE_APDO:
    {
      uint16_t srcmaxvoltage100mv;
      uint16_t srcminvoltage100mv;
      uint16_t srcmaxcurrent50ma;
      srcmaxvoltage100mv = srcpdo.SRCSNKAPDO.MaxVoltageIn100mV;
 80112aa:	233a      	movs	r3, #58	; 0x3a
 80112ac:	18fb      	adds	r3, r7, r3
 80112ae:	881b      	ldrh	r3, [r3, #0]
 80112b0:	05db      	lsls	r3, r3, #23
 80112b2:	0e1b      	lsrs	r3, r3, #24
 80112b4:	b2da      	uxtb	r2, r3
 80112b6:	234e      	movs	r3, #78	; 0x4e
 80112b8:	18fb      	adds	r3, r7, r3
 80112ba:	801a      	strh	r2, [r3, #0]
      srcminvoltage100mv = srcpdo.SRCSNKAPDO.MinVoltageIn100mV;
 80112bc:	2138      	movs	r1, #56	; 0x38
 80112be:	187b      	adds	r3, r7, r1
 80112c0:	785a      	ldrb	r2, [r3, #1]
 80112c2:	234c      	movs	r3, #76	; 0x4c
 80112c4:	18fb      	adds	r3, r7, r3
 80112c6:	801a      	strh	r2, [r3, #0]
      srcmaxcurrent50ma = srcpdo.SRCSNKAPDO.MaxCurrentIn50mAunits;
 80112c8:	187b      	adds	r3, r7, r1
 80112ca:	781b      	ldrb	r3, [r3, #0]
 80112cc:	065b      	lsls	r3, r3, #25
 80112ce:	0e5b      	lsrs	r3, r3, #25
 80112d0:	b2da      	uxtb	r2, r3
 80112d2:	234a      	movs	r3, #74	; 0x4a
 80112d4:	18fb      	adds	r3, r7, r3
 80112d6:	801a      	strh	r2, [r3, #0]

      /* Loop through SNK PDO list */
      for (uint16_t i = 0; i < nbsnkpdo; i++)
 80112d8:	2350      	movs	r3, #80	; 0x50
 80112da:	18fb      	adds	r3, r7, r3
 80112dc:	2200      	movs	r2, #0
 80112de:	801a      	strh	r2, [r3, #0]
 80112e0:	e096      	b.n	8011410 <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x298>
      {
        currentrequestedpower = 0;
 80112e2:	2300      	movs	r3, #0
 80112e4:	65fb      	str	r3, [r7, #92]	; 0x5c
        currentrequestedvoltage = 0;
 80112e6:	2300      	movs	r3, #0
 80112e8:	657b      	str	r3, [r7, #84]	; 0x54

        /* Retrieve SNK PDO value according to its type */
        snkpdo.d32 = snkpdo_array[i];
 80112ea:	2350      	movs	r3, #80	; 0x50
 80112ec:	18fb      	adds	r3, r7, r3
 80112ee:	881a      	ldrh	r2, [r3, #0]
 80112f0:	2314      	movs	r3, #20
 80112f2:	18fb      	adds	r3, r7, r3
 80112f4:	0092      	lsls	r2, r2, #2
 80112f6:	58d3      	ldr	r3, [r2, r3]
 80112f8:	637b      	str	r3, [r7, #52]	; 0x34
        switch (snkpdo.GenericPDO.PowerObject)
 80112fa:	2337      	movs	r3, #55	; 0x37
 80112fc:	18fb      	adds	r3, r7, r3
 80112fe:	781b      	ldrb	r3, [r3, #0]
 8011300:	061b      	lsls	r3, r3, #24
 8011302:	0f9b      	lsrs	r3, r3, #30
 8011304:	b2db      	uxtb	r3, r3
 8011306:	2b00      	cmp	r3, #0
 8011308:	d100      	bne.n	801130c <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x194>
 801130a:	e06c      	b.n	80113e6 <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x26e>
 801130c:	2b03      	cmp	r3, #3
 801130e:	d000      	beq.n	8011312 <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x19a>
 8011310:	e06b      	b.n	80113ea <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x272>
          {
            uint16_t snkmaxvoltage100mv;
            uint16_t snkminvoltage100mv;
            uint16_t snkmaxcurrent50ma;

            snkminvoltage100mv = snkpdo.SRCSNKAPDO.MinVoltageIn100mV;
 8011312:	2134      	movs	r1, #52	; 0x34
 8011314:	187b      	adds	r3, r7, r1
 8011316:	785a      	ldrb	r2, [r3, #1]
 8011318:	2048      	movs	r0, #72	; 0x48
 801131a:	183b      	adds	r3, r7, r0
 801131c:	801a      	strh	r2, [r3, #0]
            snkmaxvoltage100mv = snkpdo.SRCSNKAPDO.MaxVoltageIn100mV;
 801131e:	2336      	movs	r3, #54	; 0x36
 8011320:	18fb      	adds	r3, r7, r3
 8011322:	881b      	ldrh	r3, [r3, #0]
 8011324:	05db      	lsls	r3, r3, #23
 8011326:	0e1b      	lsrs	r3, r3, #24
 8011328:	b2da      	uxtb	r2, r3
 801132a:	2446      	movs	r4, #70	; 0x46
 801132c:	193b      	adds	r3, r7, r4
 801132e:	801a      	strh	r2, [r3, #0]
            snkmaxcurrent50ma = snkpdo.SRCSNKAPDO.MaxCurrentIn50mAunits;
 8011330:	187b      	adds	r3, r7, r1
 8011332:	781b      	ldrb	r3, [r3, #0]
 8011334:	065b      	lsls	r3, r3, #25
 8011336:	0e5b      	lsrs	r3, r3, #25
 8011338:	b2da      	uxtb	r2, r3
 801133a:	2344      	movs	r3, #68	; 0x44
 801133c:	18fb      	adds	r3, r7, r3
 801133e:	801a      	strh	r2, [r3, #0]

            /* Match if SNK APDO voltage overlaps with the SRC APDO voltage range */
            if (((srcminvoltage100mv <= snkmaxvoltage100mv) && (srcminvoltage100mv >= snkminvoltage100mv)) ||
 8011340:	214c      	movs	r1, #76	; 0x4c
 8011342:	187a      	adds	r2, r7, r1
 8011344:	193b      	adds	r3, r7, r4
 8011346:	8812      	ldrh	r2, [r2, #0]
 8011348:	881b      	ldrh	r3, [r3, #0]
 801134a:	429a      	cmp	r2, r3
 801134c:	d805      	bhi.n	801135a <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x1e2>
 801134e:	187a      	adds	r2, r7, r1
 8011350:	183b      	adds	r3, r7, r0
 8011352:	8812      	ldrh	r2, [r2, #0]
 8011354:	881b      	ldrh	r3, [r3, #0]
 8011356:	429a      	cmp	r2, r3
 8011358:	d20e      	bcs.n	8011378 <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x200>
 801135a:	2148      	movs	r1, #72	; 0x48
 801135c:	187a      	adds	r2, r7, r1
 801135e:	234e      	movs	r3, #78	; 0x4e
 8011360:	18fb      	adds	r3, r7, r3
 8011362:	8812      	ldrh	r2, [r2, #0]
 8011364:	881b      	ldrh	r3, [r3, #0]
 8011366:	429a      	cmp	r2, r3
 8011368:	d841      	bhi.n	80113ee <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x276>
                ((snkminvoltage100mv <= srcmaxvoltage100mv) && (snkminvoltage100mv >= srcminvoltage100mv)))
 801136a:	187a      	adds	r2, r7, r1
 801136c:	234c      	movs	r3, #76	; 0x4c
 801136e:	18fb      	adds	r3, r7, r3
 8011370:	8812      	ldrh	r2, [r2, #0]
 8011372:	881b      	ldrh	r3, [r3, #0]
 8011374:	429a      	cmp	r2, r3
 8011376:	d33a      	bcc.n	80113ee <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x276>
            {
              if (snkmaxcurrent50ma <= srcmaxcurrent50ma)
 8011378:	2344      	movs	r3, #68	; 0x44
 801137a:	18fa      	adds	r2, r7, r3
 801137c:	234a      	movs	r3, #74	; 0x4a
 801137e:	18fb      	adds	r3, r7, r3
 8011380:	8812      	ldrh	r2, [r2, #0]
 8011382:	881b      	ldrh	r3, [r3, #0]
 8011384:	429a      	cmp	r2, r3
 8011386:	d832      	bhi.n	80113ee <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x276>
              {
                *PtrRequestedVoltage = MIN(PWR_DECODE_100MV(srcmaxvoltage100mv),
 8011388:	2346      	movs	r3, #70	; 0x46
 801138a:	18fb      	adds	r3, r7, r3
 801138c:	881b      	ldrh	r3, [r3, #0]
 801138e:	2264      	movs	r2, #100	; 0x64
 8011390:	4353      	muls	r3, r2
 8011392:	b299      	uxth	r1, r3
 8011394:	234e      	movs	r3, #78	; 0x4e
 8011396:	18fb      	adds	r3, r7, r3
 8011398:	881b      	ldrh	r3, [r3, #0]
 801139a:	2264      	movs	r2, #100	; 0x64
 801139c:	4353      	muls	r3, r2
 801139e:	b29b      	uxth	r3, r3
 80113a0:	1c18      	adds	r0, r3, #0
 80113a2:	b28a      	uxth	r2, r1
 80113a4:	b283      	uxth	r3, r0
 80113a6:	429a      	cmp	r2, r3
 80113a8:	d900      	bls.n	80113ac <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x234>
 80113aa:	1c01      	adds	r1, r0, #0
 80113ac:	b28b      	uxth	r3, r1
 80113ae:	001a      	movs	r2, r3
 80113b0:	687b      	ldr	r3, [r7, #4]
 80113b2:	601a      	str	r2, [r3, #0]
                                           PWR_DECODE_100MV(snkmaxvoltage100mv));
                currentrequestedpower = (*PtrRequestedVoltage * PWR_DECODE_50MA(snkmaxcurrent50ma)) / 1000U; /* mW */
 80113b4:	687b      	ldr	r3, [r7, #4]
 80113b6:	681b      	ldr	r3, [r3, #0]
 80113b8:	2244      	movs	r2, #68	; 0x44
 80113ba:	18ba      	adds	r2, r7, r2
 80113bc:	8812      	ldrh	r2, [r2, #0]
 80113be:	2132      	movs	r1, #50	; 0x32
 80113c0:	434a      	muls	r2, r1
 80113c2:	b292      	uxth	r2, r2
 80113c4:	4353      	muls	r3, r2
 80113c6:	22fa      	movs	r2, #250	; 0xfa
 80113c8:	0091      	lsls	r1, r2, #2
 80113ca:	0018      	movs	r0, r3
 80113cc:	f7f4 ff10 	bl	80061f0 <__udivsi3>
 80113d0:	0003      	movs	r3, r0
 80113d2:	65fb      	str	r3, [r7, #92]	; 0x5c
                currentrequestedvoltage = (*PtrRequestedVoltage / 50U);
 80113d4:	687b      	ldr	r3, [r7, #4]
 80113d6:	681b      	ldr	r3, [r3, #0]
 80113d8:	2132      	movs	r1, #50	; 0x32
 80113da:	0018      	movs	r0, r3
 80113dc:	f7f4 ff08 	bl	80061f0 <__udivsi3>
 80113e0:	0003      	movs	r3, r0
 80113e2:	657b      	str	r3, [r7, #84]	; 0x54
              }
            }
          }
          break;
 80113e4:	e003      	b.n	80113ee <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x276>
            break;
 80113e6:	46c0      	nop			; (mov r8, r8)
 80113e8:	e002      	b.n	80113f0 <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x278>

          default:
            break;
 80113ea:	46c0      	nop			; (mov r8, r8)
 80113ec:	e000      	b.n	80113f0 <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x278>
          break;
 80113ee:	46c0      	nop			; (mov r8, r8)
        }

        if (currentrequestedpower > maxrequestedpower)
 80113f0:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 80113f2:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 80113f4:	429a      	cmp	r2, r3
 80113f6:	d905      	bls.n	8011404 <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x28c>
        {
          match = USBPD_TRUE;
 80113f8:	2301      	movs	r3, #1
 80113fa:	667b      	str	r3, [r7, #100]	; 0x64
          maxrequestedpower   = currentrequestedpower;
 80113fc:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80113fe:	663b      	str	r3, [r7, #96]	; 0x60
          maxrequestedvoltage = currentrequestedvoltage;
 8011400:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8011402:	65bb      	str	r3, [r7, #88]	; 0x58
      for (uint16_t i = 0; i < nbsnkpdo; i++)
 8011404:	2150      	movs	r1, #80	; 0x50
 8011406:	187b      	adds	r3, r7, r1
 8011408:	881a      	ldrh	r2, [r3, #0]
 801140a:	187b      	adds	r3, r7, r1
 801140c:	3201      	adds	r2, #1
 801140e:	801a      	strh	r2, [r3, #0]
 8011410:	2350      	movs	r3, #80	; 0x50
 8011412:	18fb      	adds	r3, r7, r3
 8011414:	881a      	ldrh	r2, [r3, #0]
 8011416:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8011418:	429a      	cmp	r2, r3
 801141a:	d200      	bcs.n	801141e <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x2a6>
 801141c:	e761      	b.n	80112e2 <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x16a>
        }
      }
    }
    break;
 801141e:	e001      	b.n	8011424 <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x2ac>

    default:
      return (USBPD_FALSE);
 8011420:	2300      	movs	r3, #0
 8011422:	e00b      	b.n	801143c <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x2c4>
  }

  if (maxrequestedpower > 0)
 8011424:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8011426:	2b00      	cmp	r3, #0
 8011428:	d007      	beq.n	801143a <USER_SERV_SNK_EvaluateMatchWithSRCPDO+0x2c2>
  {
    *PtrRequestedPower   = maxrequestedpower;
 801142a:	683b      	ldr	r3, [r7, #0]
 801142c:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 801142e:	601a      	str	r2, [r3, #0]
    *PtrRequestedVoltage = maxrequestedvoltage * 50U; /* value in mV */
 8011430:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8011432:	2232      	movs	r2, #50	; 0x32
 8011434:	435a      	muls	r2, r3
 8011436:	687b      	ldr	r3, [r7, #4]
 8011438:	601a      	str	r2, [r3, #0]
  }
  return (match);
 801143a:	6e7b      	ldr	r3, [r7, #100]	; 0x64
}
 801143c:	0018      	movs	r0, r3
 801143e:	46bd      	mov	sp, r7
 8011440:	b01b      	add	sp, #108	; 0x6c
 8011442:	bd90      	pop	{r4, r7, pc}

08011444 <USER_SERV_FindVoltageIndex>:
  * @retval Index of PDO within source capabilities message (DPM_NO_SRC_PDO_FOUND indicating not found)
  */
static uint32_t USER_SERV_FindVoltageIndex(uint32_t PortNum,
                                           USBPD_DPM_SNKPowerRequestDetailsTypeDef *PtrRequestPowerDetails,
                                           uint8_t Method)
{
 8011444:	b580      	push	{r7, lr}
 8011446:	b090      	sub	sp, #64	; 0x40
 8011448:	af00      	add	r7, sp, #0
 801144a:	60f8      	str	r0, [r7, #12]
 801144c:	60b9      	str	r1, [r7, #8]
 801144e:	1dfb      	adds	r3, r7, #7
 8011450:	701a      	strb	r2, [r3, #0]
  uint32_t nbpdo;
  uint32_t allowablepower;
  uint32_t selpower;
  uint32_t allowablecurrent;
  uint32_t selcurrent;
  uint32_t curr_index = DPM_NO_SRC_PDO_FOUND;
 8011452:	23ff      	movs	r3, #255	; 0xff
 8011454:	633b      	str	r3, [r7, #48]	; 0x30
  uint32_t temp_index;
  USBPD_USER_SettingsTypeDef *puser = (USBPD_USER_SettingsTypeDef *)&DPM_USER_Settings[PortNum];
 8011456:	68fb      	ldr	r3, [r7, #12]
 8011458:	2274      	movs	r2, #116	; 0x74
 801145a:	435a      	muls	r2, r3
 801145c:	4b73      	ldr	r3, [pc, #460]	; (801162c <USER_SERV_FindVoltageIndex+0x1e8>)
 801145e:	18d3      	adds	r3, r2, r3
 8011460:	62bb      	str	r3, [r7, #40]	; 0x28

  allowablepower = 0;
 8011462:	2300      	movs	r3, #0
 8011464:	613b      	str	r3, [r7, #16]
  selpower       = 0;
 8011466:	2300      	movs	r3, #0
 8011468:	63bb      	str	r3, [r7, #56]	; 0x38
  reqvoltage     = 0;
 801146a:	2300      	movs	r3, #0
 801146c:	63fb      	str	r3, [r7, #60]	; 0x3c
  voltage        = 0;
 801146e:	2300      	movs	r3, #0
 8011470:	617b      	str	r3, [r7, #20]
  selcurrent     = 0;
 8011472:	2300      	movs	r3, #0
 8011474:	637b      	str	r3, [r7, #52]	; 0x34

  /* Search PDO index among Source PDO of Port */
  nbpdo = DPM_Ports[PortNum].DPM_NumberOfRcvSRCPDO;
 8011476:	496e      	ldr	r1, [pc, #440]	; (8011630 <USER_SERV_FindVoltageIndex+0x1ec>)
 8011478:	68fa      	ldr	r2, [r7, #12]
 801147a:	0013      	movs	r3, r2
 801147c:	009b      	lsls	r3, r3, #2
 801147e:	189b      	adds	r3, r3, r2
 8011480:	011b      	lsls	r3, r3, #4
 8011482:	18cb      	adds	r3, r1, r3
 8011484:	331c      	adds	r3, #28
 8011486:	681b      	ldr	r3, [r3, #0]
 8011488:	627b      	str	r3, [r7, #36]	; 0x24
  ptpdoarray = DPM_Ports[PortNum].DPM_ListOfRcvSRCPDO;
 801148a:	68fa      	ldr	r2, [r7, #12]
 801148c:	0013      	movs	r3, r2
 801148e:	009b      	lsls	r3, r3, #2
 8011490:	189b      	adds	r3, r3, r2
 8011492:	011b      	lsls	r3, r3, #4
 8011494:	4a66      	ldr	r2, [pc, #408]	; (8011630 <USER_SERV_FindVoltageIndex+0x1ec>)
 8011496:	189b      	adds	r3, r3, r2
 8011498:	623b      	str	r3, [r7, #32]

  /* search the best PDO in the list of source PDOs */
  for (temp_index = 0; temp_index < nbpdo; temp_index++)
 801149a:	2300      	movs	r3, #0
 801149c:	62fb      	str	r3, [r7, #44]	; 0x2c
 801149e:	e09a      	b.n	80115d6 <USER_SERV_FindVoltageIndex+0x192>
  {
    pdo.d32 = ptpdoarray[temp_index];
 80114a0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80114a2:	009b      	lsls	r3, r3, #2
 80114a4:	6a3a      	ldr	r2, [r7, #32]
 80114a6:	18d3      	adds	r3, r2, r3
 80114a8:	681b      	ldr	r3, [r3, #0]
 80114aa:	61bb      	str	r3, [r7, #24]

    /* Check if the received source PDO is matching any of the SNK PDO */
    allowablepower = 0;
 80114ac:	2300      	movs	r3, #0
 80114ae:	613b      	str	r3, [r7, #16]
    if (USBPD_TRUE == USER_SERV_SNK_EvaluateMatchWithSRCPDO(PortNum, pdo.d32, &voltage, &allowablepower))
 80114b0:	68fb      	ldr	r3, [r7, #12]
 80114b2:	b2d8      	uxtb	r0, r3
 80114b4:	69b9      	ldr	r1, [r7, #24]
 80114b6:	2310      	movs	r3, #16
 80114b8:	18fb      	adds	r3, r7, r3
 80114ba:	2214      	movs	r2, #20
 80114bc:	18ba      	adds	r2, r7, r2
 80114be:	f7ff fe5b 	bl	8011178 <USER_SERV_SNK_EvaluateMatchWithSRCPDO>
 80114c2:	0003      	movs	r3, r0
 80114c4:	2b01      	cmp	r3, #1
 80114c6:	d000      	beq.n	80114ca <USER_SERV_FindVoltageIndex+0x86>
 80114c8:	e082      	b.n	80115d0 <USER_SERV_FindVoltageIndex+0x18c>
    {
      allowablecurrent = (allowablepower / voltage) * 1000U;
 80114ca:	693b      	ldr	r3, [r7, #16]
 80114cc:	697a      	ldr	r2, [r7, #20]
 80114ce:	0011      	movs	r1, r2
 80114d0:	0018      	movs	r0, r3
 80114d2:	f7f4 fe8d 	bl	80061f0 <__udivsi3>
 80114d6:	0003      	movs	r3, r0
 80114d8:	001a      	movs	r2, r3
 80114da:	0013      	movs	r3, r2
 80114dc:	015b      	lsls	r3, r3, #5
 80114de:	1a9b      	subs	r3, r3, r2
 80114e0:	009b      	lsls	r3, r3, #2
 80114e2:	189b      	adds	r3, r3, r2
 80114e4:	00db      	lsls	r3, r3, #3
 80114e6:	61fb      	str	r3, [r7, #28]

      /* Choose the best PDO depending on the user preferences */
      switch (Method)
 80114e8:	1dfb      	adds	r3, r7, #7
 80114ea:	781b      	ldrb	r3, [r3, #0]
 80114ec:	2b05      	cmp	r3, #5
 80114ee:	d85b      	bhi.n	80115a8 <USER_SERV_FindVoltageIndex+0x164>
 80114f0:	009a      	lsls	r2, r3, #2
 80114f2:	4b50      	ldr	r3, [pc, #320]	; (8011634 <USER_SERV_FindVoltageIndex+0x1f0>)
 80114f4:	18d3      	adds	r3, r2, r3
 80114f6:	681b      	ldr	r3, [r3, #0]
 80114f8:	469f      	mov	pc, r3
      {
        case PDO_SEL_METHOD_MAX_PWR:
          if (allowablepower > selpower)
 80114fa:	693b      	ldr	r3, [r7, #16]
 80114fc:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80114fe:	429a      	cmp	r2, r3
 8011500:	d25b      	bcs.n	80115ba <USER_SERV_FindVoltageIndex+0x176>
          {
            /* Consider the current PDO the best one until now */
            curr_index = temp_index;
 8011502:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8011504:	633b      	str	r3, [r7, #48]	; 0x30
            selpower   = allowablepower;
 8011506:	693b      	ldr	r3, [r7, #16]
 8011508:	63bb      	str	r3, [r7, #56]	; 0x38
            reqvoltage = voltage;
 801150a:	697b      	ldr	r3, [r7, #20]
 801150c:	63fb      	str	r3, [r7, #60]	; 0x3c
            selcurrent = allowablecurrent;
 801150e:	69fb      	ldr	r3, [r7, #28]
 8011510:	637b      	str	r3, [r7, #52]	; 0x34
          }
          break;
 8011512:	e052      	b.n	80115ba <USER_SERV_FindVoltageIndex+0x176>

        case PDO_SEL_METHOD_MIN_PWR:
          if ((allowablepower < selpower) || (selpower == 0))
 8011514:	693b      	ldr	r3, [r7, #16]
 8011516:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8011518:	429a      	cmp	r2, r3
 801151a:	d802      	bhi.n	8011522 <USER_SERV_FindVoltageIndex+0xde>
 801151c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801151e:	2b00      	cmp	r3, #0
 8011520:	d14d      	bne.n	80115be <USER_SERV_FindVoltageIndex+0x17a>
          {
            /* Consider the current PDO the best one until now */
            curr_index = temp_index;
 8011522:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8011524:	633b      	str	r3, [r7, #48]	; 0x30
            selpower   = allowablepower;
 8011526:	693b      	ldr	r3, [r7, #16]
 8011528:	63bb      	str	r3, [r7, #56]	; 0x38
            reqvoltage = voltage;
 801152a:	697b      	ldr	r3, [r7, #20]
 801152c:	63fb      	str	r3, [r7, #60]	; 0x3c
            selcurrent = allowablecurrent;
 801152e:	69fb      	ldr	r3, [r7, #28]
 8011530:	637b      	str	r3, [r7, #52]	; 0x34
          }
          break;
 8011532:	e044      	b.n	80115be <USER_SERV_FindVoltageIndex+0x17a>

        case PDO_SEL_METHOD_MAX_VOLT:
          if (voltage > reqvoltage)
 8011534:	697b      	ldr	r3, [r7, #20]
 8011536:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8011538:	429a      	cmp	r2, r3
 801153a:	d242      	bcs.n	80115c2 <USER_SERV_FindVoltageIndex+0x17e>
          {
            /* Consider the current PDO the best one until now */
            curr_index = temp_index;
 801153c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801153e:	633b      	str	r3, [r7, #48]	; 0x30
            selpower   = allowablepower;
 8011540:	693b      	ldr	r3, [r7, #16]
 8011542:	63bb      	str	r3, [r7, #56]	; 0x38
            reqvoltage = voltage;
 8011544:	697b      	ldr	r3, [r7, #20]
 8011546:	63fb      	str	r3, [r7, #60]	; 0x3c
            selcurrent = allowablecurrent;
 8011548:	69fb      	ldr	r3, [r7, #28]
 801154a:	637b      	str	r3, [r7, #52]	; 0x34
          }
          break;
 801154c:	e039      	b.n	80115c2 <USER_SERV_FindVoltageIndex+0x17e>

        case PDO_SEL_METHOD_MIN_VOLT:
          if ((voltage < reqvoltage) || (reqvoltage == 0))
 801154e:	697b      	ldr	r3, [r7, #20]
 8011550:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8011552:	429a      	cmp	r2, r3
 8011554:	d802      	bhi.n	801155c <USER_SERV_FindVoltageIndex+0x118>
 8011556:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8011558:	2b00      	cmp	r3, #0
 801155a:	d134      	bne.n	80115c6 <USER_SERV_FindVoltageIndex+0x182>
          {
            /* Consider the current PDO the best one until now */
            curr_index = temp_index;
 801155c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801155e:	633b      	str	r3, [r7, #48]	; 0x30
            selpower   = allowablepower;
 8011560:	693b      	ldr	r3, [r7, #16]
 8011562:	63bb      	str	r3, [r7, #56]	; 0x38
            reqvoltage = voltage;
 8011564:	697b      	ldr	r3, [r7, #20]
 8011566:	63fb      	str	r3, [r7, #60]	; 0x3c
            selcurrent = allowablecurrent;
 8011568:	69fb      	ldr	r3, [r7, #28]
 801156a:	637b      	str	r3, [r7, #52]	; 0x34
          }
          break;
 801156c:	e02b      	b.n	80115c6 <USER_SERV_FindVoltageIndex+0x182>

        case PDO_SEL_METHOD_MAX_CUR:
          if (allowablecurrent > selcurrent)
 801156e:	69fa      	ldr	r2, [r7, #28]
 8011570:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8011572:	429a      	cmp	r2, r3
 8011574:	d929      	bls.n	80115ca <USER_SERV_FindVoltageIndex+0x186>
          {
            /* Consider the current PDO the best one until now */
            curr_index = temp_index;
 8011576:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8011578:	633b      	str	r3, [r7, #48]	; 0x30
            selpower   = allowablepower;
 801157a:	693b      	ldr	r3, [r7, #16]
 801157c:	63bb      	str	r3, [r7, #56]	; 0x38
            reqvoltage = voltage;
 801157e:	697b      	ldr	r3, [r7, #20]
 8011580:	63fb      	str	r3, [r7, #60]	; 0x3c
            selcurrent = allowablecurrent;
 8011582:	69fb      	ldr	r3, [r7, #28]
 8011584:	637b      	str	r3, [r7, #52]	; 0x34
          }
          break;
 8011586:	e020      	b.n	80115ca <USER_SERV_FindVoltageIndex+0x186>

        case PDO_SEL_METHOD_MIN_CUR:
          if ((allowablecurrent < selcurrent) || (selcurrent == 0))
 8011588:	69fa      	ldr	r2, [r7, #28]
 801158a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801158c:	429a      	cmp	r2, r3
 801158e:	d302      	bcc.n	8011596 <USER_SERV_FindVoltageIndex+0x152>
 8011590:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8011592:	2b00      	cmp	r3, #0
 8011594:	d11b      	bne.n	80115ce <USER_SERV_FindVoltageIndex+0x18a>
          {
            /* Consider the current PDO the best one until now */
            curr_index = temp_index;
 8011596:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8011598:	633b      	str	r3, [r7, #48]	; 0x30
            selpower   = allowablepower;
 801159a:	693b      	ldr	r3, [r7, #16]
 801159c:	63bb      	str	r3, [r7, #56]	; 0x38
            reqvoltage = voltage;
 801159e:	697b      	ldr	r3, [r7, #20]
 80115a0:	63fb      	str	r3, [r7, #60]	; 0x3c
            selcurrent = allowablecurrent;
 80115a2:	69fb      	ldr	r3, [r7, #28]
 80115a4:	637b      	str	r3, [r7, #52]	; 0x34
          }
          break;
 80115a6:	e012      	b.n	80115ce <USER_SERV_FindVoltageIndex+0x18a>

        default:
          /* Default behavior: last PDO is selected */
          curr_index = temp_index;
 80115a8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80115aa:	633b      	str	r3, [r7, #48]	; 0x30
          selpower   = allowablepower;
 80115ac:	693b      	ldr	r3, [r7, #16]
 80115ae:	63bb      	str	r3, [r7, #56]	; 0x38
          reqvoltage = voltage;
 80115b0:	697b      	ldr	r3, [r7, #20]
 80115b2:	63fb      	str	r3, [r7, #60]	; 0x3c
          selcurrent = allowablecurrent;
 80115b4:	69fb      	ldr	r3, [r7, #28]
 80115b6:	637b      	str	r3, [r7, #52]	; 0x34
 80115b8:	e00a      	b.n	80115d0 <USER_SERV_FindVoltageIndex+0x18c>
          break;
 80115ba:	46c0      	nop			; (mov r8, r8)
 80115bc:	e008      	b.n	80115d0 <USER_SERV_FindVoltageIndex+0x18c>
          break;
 80115be:	46c0      	nop			; (mov r8, r8)
 80115c0:	e006      	b.n	80115d0 <USER_SERV_FindVoltageIndex+0x18c>
          break;
 80115c2:	46c0      	nop			; (mov r8, r8)
 80115c4:	e004      	b.n	80115d0 <USER_SERV_FindVoltageIndex+0x18c>
          break;
 80115c6:	46c0      	nop			; (mov r8, r8)
 80115c8:	e002      	b.n	80115d0 <USER_SERV_FindVoltageIndex+0x18c>
          break;
 80115ca:	46c0      	nop			; (mov r8, r8)
 80115cc:	e000      	b.n	80115d0 <USER_SERV_FindVoltageIndex+0x18c>
          break;
 80115ce:	46c0      	nop			; (mov r8, r8)
  for (temp_index = 0; temp_index < nbpdo; temp_index++)
 80115d0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80115d2:	3301      	adds	r3, #1
 80115d4:	62fb      	str	r3, [r7, #44]	; 0x2c
 80115d6:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80115d8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80115da:	429a      	cmp	r2, r3
 80115dc:	d200      	bcs.n	80115e0 <USER_SERV_FindVoltageIndex+0x19c>
 80115de:	e75f      	b.n	80114a0 <USER_SERV_FindVoltageIndex+0x5c>
      }
    }
  }

  /* If a suitable PDO was found */
  if (curr_index != DPM_NO_SRC_PDO_FOUND)
 80115e0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80115e2:	2bff      	cmp	r3, #255	; 0xff
 80115e4:	d01c      	beq.n	8011620 <USER_SERV_FindVoltageIndex+0x1dc>
  {
    /* Fill the request power details */
    PtrRequestPowerDetails->MaxOperatingCurrentInmAunits = puser->DPM_SNKRequestedPower.MaxOperatingCurrentInmAunits;
 80115e6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80115e8:	685a      	ldr	r2, [r3, #4]
 80115ea:	68bb      	ldr	r3, [r7, #8]
 80115ec:	605a      	str	r2, [r3, #4]
    PtrRequestPowerDetails->OperatingCurrentInmAunits    = (1000U * selpower) / reqvoltage;
 80115ee:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80115f0:	0013      	movs	r3, r2
 80115f2:	015b      	lsls	r3, r3, #5
 80115f4:	1a9b      	subs	r3, r3, r2
 80115f6:	009b      	lsls	r3, r3, #2
 80115f8:	189b      	adds	r3, r3, r2
 80115fa:	00db      	lsls	r3, r3, #3
 80115fc:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 80115fe:	0018      	movs	r0, r3
 8011600:	f7f4 fdf6 	bl	80061f0 <__udivsi3>
 8011604:	0003      	movs	r3, r0
 8011606:	001a      	movs	r2, r3
 8011608:	68bb      	ldr	r3, [r7, #8]
 801160a:	609a      	str	r2, [r3, #8]
    PtrRequestPowerDetails->MaxOperatingPowerInmWunits   = puser->DPM_SNKRequestedPower.MaxOperatingPowerInmWunits;
 801160c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801160e:	699a      	ldr	r2, [r3, #24]
 8011610:	68bb      	ldr	r3, [r7, #8]
 8011612:	60da      	str	r2, [r3, #12]
    PtrRequestPowerDetails->OperatingPowerInmWunits      = selpower;
 8011614:	68bb      	ldr	r3, [r7, #8]
 8011616:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8011618:	611a      	str	r2, [r3, #16]
    PtrRequestPowerDetails->RequestedVoltageInmVunits    = reqvoltage;
 801161a:	68bb      	ldr	r3, [r7, #8]
 801161c:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 801161e:	601a      	str	r2, [r3, #0]
  }

  return curr_index;
 8011620:	6b3b      	ldr	r3, [r7, #48]	; 0x30
}
 8011622:	0018      	movs	r0, r3
 8011624:	46bd      	mov	sp, r7
 8011626:	b010      	add	sp, #64	; 0x40
 8011628:	bd80      	pop	{r7, pc}
 801162a:	46c0      	nop			; (mov r8, r8)
 801162c:	20000028 	.word	0x20000028
 8011630:	20002c54 	.word	0x20002c54
 8011634:	08019a60 	.word	0x08019a60

08011638 <USER_SERV_SNK_BuildRDOfromSelectedPDO>:
static void USER_SERV_SNK_BuildRDOfromSelectedPDO(uint8_t PortNum,
                                                  uint8_t IndexSrcPDO,
                                                  USBPD_DPM_SNKPowerRequestDetailsTypeDef *PtrRequestPowerDetails,
                                                  USBPD_SNKRDO_TypeDef *Rdo,
                                                  USBPD_CORE_PDO_Type_TypeDef *PtrPowerObject)
{
 8011638:	b5f0      	push	{r4, r5, r6, r7, lr}
 801163a:	b0a7      	sub	sp, #156	; 0x9c
 801163c:	af02      	add	r7, sp, #8
 801163e:	60ba      	str	r2, [r7, #8]
 8011640:	607b      	str	r3, [r7, #4]
 8011642:	240f      	movs	r4, #15
 8011644:	193b      	adds	r3, r7, r4
 8011646:	1c02      	adds	r2, r0, #0
 8011648:	701a      	strb	r2, [r3, #0]
 801164a:	230e      	movs	r3, #14
 801164c:	18fb      	adds	r3, r7, r3
 801164e:	1c0a      	adds	r2, r1, #0
 8011650:	701a      	strb	r2, [r3, #0]
  uint32_t mv = 0;
 8011652:	2300      	movs	r3, #0
 8011654:	228c      	movs	r2, #140	; 0x8c
 8011656:	18ba      	adds	r2, r7, r2
 8011658:	6013      	str	r3, [r2, #0]
  uint32_t ma = 0;
 801165a:	2300      	movs	r3, #0
 801165c:	2288      	movs	r2, #136	; 0x88
 801165e:	18ba      	adds	r2, r7, r2
 8011660:	6013      	str	r3, [r2, #0]
  uint32_t size;
  USBPD_PDO_TypeDef  pdo;
  USBPD_SNKRDO_TypeDef rdo;
  USBPD_HandleTypeDef *pdhandle = &DPM_Ports[PortNum];
 8011662:	193b      	adds	r3, r7, r4
 8011664:	781a      	ldrb	r2, [r3, #0]
 8011666:	0013      	movs	r3, r2
 8011668:	009b      	lsls	r3, r3, #2
 801166a:	189b      	adds	r3, r3, r2
 801166c:	011b      	lsls	r3, r3, #4
 801166e:	4ae2      	ldr	r2, [pc, #904]	; (80119f8 <USER_SERV_SNK_BuildRDOfromSelectedPDO+0x3c0>)
 8011670:	189b      	adds	r3, r3, r2
 8011672:	2584      	movs	r5, #132	; 0x84
 8011674:	197a      	adds	r2, r7, r5
 8011676:	6013      	str	r3, [r2, #0]
  USBPD_USER_SettingsTypeDef *puser = (USBPD_USER_SettingsTypeDef *)&DPM_USER_Settings[PortNum];
 8011678:	193b      	adds	r3, r7, r4
 801167a:	781b      	ldrb	r3, [r3, #0]
 801167c:	2274      	movs	r2, #116	; 0x74
 801167e:	435a      	muls	r2, r3
 8011680:	4bde      	ldr	r3, [pc, #888]	; (80119fc <USER_SERV_SNK_BuildRDOfromSelectedPDO+0x3c4>)
 8011682:	18d3      	adds	r3, r2, r3
 8011684:	2280      	movs	r2, #128	; 0x80
 8011686:	18ba      	adds	r2, r7, r2
 8011688:	6013      	str	r3, [r2, #0]
  uint32_t snkpdolist[USBPD_MAX_NB_PDO];
  USBPD_PDO_TypeDef snk_fixed_pdo;

  /* Initialize RDO */
  rdo.d32 = 0;
 801168a:	2300      	movs	r3, #0
 801168c:	677b      	str	r3, [r7, #116]	; 0x74

  /* Read SNK PDO list for retrieving useful data to fill in RDO */
  USBPD_PWR_IF_GetPortPDOs(PortNum, USBPD_CORE_DATATYPE_SNK_PDO, (uint8_t *)&snkpdolist[0], &size);
 801168e:	237c      	movs	r3, #124	; 0x7c
 8011690:	18f9      	adds	r1, r7, r3
 8011692:	2658      	movs	r6, #88	; 0x58
 8011694:	19ba      	adds	r2, r7, r6
 8011696:	193b      	adds	r3, r7, r4
 8011698:	7818      	ldrb	r0, [r3, #0]
 801169a:	000b      	movs	r3, r1
 801169c:	2101      	movs	r1, #1
 801169e:	f7ff fbd5 	bl	8010e4c <USBPD_PWR_IF_GetPortPDOs>

  /* Store value of 1st SNK PDO (Fixed) in local variable */
  snk_fixed_pdo.d32 = snkpdolist[0];
 80116a2:	19bb      	adds	r3, r7, r6
 80116a4:	681b      	ldr	r3, [r3, #0]
 80116a6:	657b      	str	r3, [r7, #84]	; 0x54

  /* Set common fields in RDO */
  pdo.d32 = pdhandle->DPM_ListOfRcvSRCPDO[0];
 80116a8:	197b      	adds	r3, r7, r5
 80116aa:	681b      	ldr	r3, [r3, #0]
 80116ac:	681b      	ldr	r3, [r3, #0]
 80116ae:	67bb      	str	r3, [r7, #120]	; 0x78
  rdo.GenericRDO.USBCommunicationsCapable     = snk_fixed_pdo.SNKFixedPDO.USBCommunicationsCapable;
 80116b0:	2357      	movs	r3, #87	; 0x57
 80116b2:	18fb      	adds	r3, r7, r3
 80116b4:	781b      	ldrb	r3, [r3, #0]
 80116b6:	075b      	lsls	r3, r3, #29
 80116b8:	0fdb      	lsrs	r3, r3, #31
 80116ba:	b2da      	uxtb	r2, r3
 80116bc:	2377      	movs	r3, #119	; 0x77
 80116be:	18fb      	adds	r3, r7, r3
 80116c0:	2101      	movs	r1, #1
 80116c2:	400a      	ands	r2, r1
 80116c4:	1890      	adds	r0, r2, r2
 80116c6:	781a      	ldrb	r2, [r3, #0]
 80116c8:	2102      	movs	r1, #2
 80116ca:	438a      	bics	r2, r1
 80116cc:	1c11      	adds	r1, r2, #0
 80116ce:	1c02      	adds	r2, r0, #0
 80116d0:	430a      	orrs	r2, r1
 80116d2:	701a      	strb	r2, [r3, #0]
  if (USBPD_SPECIFICATION_REV2 < DPM_Params[PortNum].PE_SpecRevision)
 80116d4:	193b      	adds	r3, r7, r4
 80116d6:	781a      	ldrb	r2, [r3, #0]
 80116d8:	4bc9      	ldr	r3, [pc, #804]	; (8011a00 <USER_SERV_SNK_BuildRDOfromSelectedPDO+0x3c8>)
 80116da:	0092      	lsls	r2, r2, #2
 80116dc:	5cd3      	ldrb	r3, [r2, r3]
 80116de:	079b      	lsls	r3, r3, #30
 80116e0:	0f9b      	lsrs	r3, r3, #30
 80116e2:	b2db      	uxtb	r3, r3
 80116e4:	2b01      	cmp	r3, #1
 80116e6:	d931      	bls.n	801174c <USER_SERV_SNK_BuildRDOfromSelectedPDO+0x114>
  {
#if defined(USBPDCORE_UNCHUNCKED_MODE)
    rdo.FixedVariableRDO.UnchunkedExtendedMessage = DPM_Settings[PortNum].PE_PD3_Support.d.PE_UnchunkSupport;
 80116e8:	193b      	adds	r3, r7, r4
 80116ea:	781a      	ldrb	r2, [r3, #0]
 80116ec:	49c5      	ldr	r1, [pc, #788]	; (8011a04 <USER_SERV_SNK_BuildRDOfromSelectedPDO+0x3cc>)
 80116ee:	2008      	movs	r0, #8
 80116f0:	0013      	movs	r3, r2
 80116f2:	005b      	lsls	r3, r3, #1
 80116f4:	189b      	adds	r3, r3, r2
 80116f6:	009b      	lsls	r3, r3, #2
 80116f8:	18cb      	adds	r3, r1, r3
 80116fa:	181b      	adds	r3, r3, r0
 80116fc:	781b      	ldrb	r3, [r3, #0]
 80116fe:	07db      	lsls	r3, r3, #31
 8011700:	0fdb      	lsrs	r3, r3, #31
 8011702:	b2da      	uxtb	r2, r3
 8011704:	2376      	movs	r3, #118	; 0x76
 8011706:	18fb      	adds	r3, r7, r3
 8011708:	01d0      	lsls	r0, r2, #7
 801170a:	781a      	ldrb	r2, [r3, #0]
 801170c:	217f      	movs	r1, #127	; 0x7f
 801170e:	400a      	ands	r2, r1
 8011710:	1c11      	adds	r1, r2, #0
 8011712:	1c02      	adds	r2, r0, #0
 8011714:	430a      	orrs	r2, r1
 8011716:	701a      	strb	r2, [r3, #0]
    DPM_Params[PortNum].PE_UnchunkSupport   = USBPD_FALSE;
 8011718:	193b      	adds	r3, r7, r4
 801171a:	781b      	ldrb	r3, [r3, #0]
 801171c:	4ab8      	ldr	r2, [pc, #736]	; (8011a00 <USER_SERV_SNK_BuildRDOfromSelectedPDO+0x3c8>)
 801171e:	009b      	lsls	r3, r3, #2
 8011720:	18d3      	adds	r3, r2, r3
 8011722:	78da      	ldrb	r2, [r3, #3]
 8011724:	2102      	movs	r1, #2
 8011726:	438a      	bics	r2, r1
 8011728:	70da      	strb	r2, [r3, #3]
    /* Set unchuncked bit if supported by port partner;*/
    if (USBPD_TRUE == pdo.SRCFixedPDO.UnchunkedExtendedMessage)
 801172a:	237b      	movs	r3, #123	; 0x7b
 801172c:	18fb      	adds	r3, r7, r3
 801172e:	781b      	ldrb	r3, [r3, #0]
 8011730:	2201      	movs	r2, #1
 8011732:	4013      	ands	r3, r2
 8011734:	b2db      	uxtb	r3, r3
 8011736:	2b00      	cmp	r3, #0
 8011738:	d008      	beq.n	801174c <USER_SERV_SNK_BuildRDOfromSelectedPDO+0x114>
    {
      DPM_Params[PortNum].PE_UnchunkSupport   = USBPD_TRUE;
 801173a:	193b      	adds	r3, r7, r4
 801173c:	781b      	ldrb	r3, [r3, #0]
 801173e:	4ab0      	ldr	r2, [pc, #704]	; (8011a00 <USER_SERV_SNK_BuildRDOfromSelectedPDO+0x3c8>)
 8011740:	009b      	lsls	r3, r3, #2
 8011742:	18d3      	adds	r3, r2, r3
 8011744:	78da      	ldrb	r2, [r3, #3]
 8011746:	2102      	movs	r1, #2
 8011748:	430a      	orrs	r2, r1
 801174a:	70da      	strb	r2, [r3, #3]
    }
#endif /* USBPDCORE_UNCHUNCKED_MODE */
  }

  /* If no valid SNK PDO or if no SRC PDO match found (index>=nb of valid received SRC PDOs */
  if ((size < 1) || (IndexSrcPDO >= pdhandle->DPM_NumberOfRcvSRCPDO))
 801174c:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 801174e:	2b00      	cmp	r3, #0
 8011750:	d008      	beq.n	8011764 <USER_SERV_SNK_BuildRDOfromSelectedPDO+0x12c>
 8011752:	230e      	movs	r3, #14
 8011754:	18fb      	adds	r3, r7, r3
 8011756:	781a      	ldrb	r2, [r3, #0]
 8011758:	2384      	movs	r3, #132	; 0x84
 801175a:	18fb      	adds	r3, r7, r3
 801175c:	681b      	ldr	r3, [r3, #0]
 801175e:	69db      	ldr	r3, [r3, #28]
 8011760:	429a      	cmp	r2, r3
 8011762:	d364      	bcc.n	801182e <USER_SERV_SNK_BuildRDOfromSelectedPDO+0x1f6>
  {
    /* USBPD_DPM_EvaluateCapabilities: Mismatch, could not find desired pdo index */
#ifdef _TRACE
    uint8_t msg[] = "USER_SERV_SNK_BuildRDOfromSelectedPDO: Pb in SRC PDO selection";
 8011764:	2414      	movs	r4, #20
 8011766:	193a      	adds	r2, r7, r4
 8011768:	4ba7      	ldr	r3, [pc, #668]	; (8011a08 <USER_SERV_SNK_BuildRDOfromSelectedPDO+0x3d0>)
 801176a:	0010      	movs	r0, r2
 801176c:	0019      	movs	r1, r3
 801176e:	233f      	movs	r3, #63	; 0x3f
 8011770:	001a      	movs	r2, r3
 8011772:	f006 fddb 	bl	801832c <memcpy>
    USBPD_TRACE_Add(USBPD_TRACE_DEBUG, PortNum, 0, (uint8_t *)msg, sizeof(msg));
 8011776:	193a      	adds	r2, r7, r4
 8011778:	250f      	movs	r5, #15
 801177a:	197b      	adds	r3, r7, r5
 801177c:	7819      	ldrb	r1, [r3, #0]
 801177e:	233f      	movs	r3, #63	; 0x3f
 8011780:	9300      	str	r3, [sp, #0]
 8011782:	0013      	movs	r3, r2
 8011784:	2200      	movs	r2, #0
 8011786:	2006      	movs	r0, #6
 8011788:	f7f9 fa34 	bl	800abf4 <USBPD_TRACE_Add>
#endif /* _TRACE */
    rdo.FixedVariableRDO.ObjectPosition = 1U;
 801178c:	2477      	movs	r4, #119	; 0x77
 801178e:	193b      	adds	r3, r7, r4
 8011790:	781a      	ldrb	r2, [r3, #0]
 8011792:	2170      	movs	r1, #112	; 0x70
 8011794:	438a      	bics	r2, r1
 8011796:	1c11      	adds	r1, r2, #0
 8011798:	2210      	movs	r2, #16
 801179a:	430a      	orrs	r2, r1
 801179c:	701a      	strb	r2, [r3, #0]
    rdo.FixedVariableRDO.OperatingCurrentIn10mAunits  = pdo.SRCFixedPDO.MaxCurrentIn10mAunits;
 801179e:	2078      	movs	r0, #120	; 0x78
 80117a0:	183b      	adds	r3, r7, r0
 80117a2:	881b      	ldrh	r3, [r3, #0]
 80117a4:	059b      	lsls	r3, r3, #22
 80117a6:	0d9b      	lsrs	r3, r3, #22
 80117a8:	b29b      	uxth	r3, r3
 80117aa:	059b      	lsls	r3, r3, #22
 80117ac:	0d9b      	lsrs	r3, r3, #22
 80117ae:	029b      	lsls	r3, r3, #10
 80117b0:	6f7a      	ldr	r2, [r7, #116]	; 0x74
 80117b2:	4996      	ldr	r1, [pc, #600]	; (8011a0c <USER_SERV_SNK_BuildRDOfromSelectedPDO+0x3d4>)
 80117b4:	400a      	ands	r2, r1
 80117b6:	4313      	orrs	r3, r2
 80117b8:	677b      	str	r3, [r7, #116]	; 0x74
    rdo.FixedVariableRDO.MaxOperatingCurrent10mAunits = pdo.SRCFixedPDO.MaxCurrentIn10mAunits;
 80117ba:	183b      	adds	r3, r7, r0
 80117bc:	881b      	ldrh	r3, [r3, #0]
 80117be:	059b      	lsls	r3, r3, #22
 80117c0:	0d9b      	lsrs	r3, r3, #22
 80117c2:	b29a      	uxth	r2, r3
 80117c4:	2374      	movs	r3, #116	; 0x74
 80117c6:	18fb      	adds	r3, r7, r3
 80117c8:	0592      	lsls	r2, r2, #22
 80117ca:	0d90      	lsrs	r0, r2, #22
 80117cc:	881a      	ldrh	r2, [r3, #0]
 80117ce:	0a92      	lsrs	r2, r2, #10
 80117d0:	0292      	lsls	r2, r2, #10
 80117d2:	1c11      	adds	r1, r2, #0
 80117d4:	1c02      	adds	r2, r0, #0
 80117d6:	430a      	orrs	r2, r1
 80117d8:	801a      	strh	r2, [r3, #0]
    rdo.FixedVariableRDO.CapabilityMismatch           = 1U;
 80117da:	193b      	adds	r3, r7, r4
 80117dc:	781a      	ldrb	r2, [r3, #0]
 80117de:	2104      	movs	r1, #4
 80117e0:	430a      	orrs	r2, r1
 80117e2:	701a      	strb	r2, [r3, #0]
    rdo.FixedVariableRDO.USBCommunicationsCapable     = snk_fixed_pdo.SNKFixedPDO.USBCommunicationsCapable;
 80117e4:	2357      	movs	r3, #87	; 0x57
 80117e6:	18fb      	adds	r3, r7, r3
 80117e8:	781b      	ldrb	r3, [r3, #0]
 80117ea:	075b      	lsls	r3, r3, #29
 80117ec:	0fdb      	lsrs	r3, r3, #31
 80117ee:	b2da      	uxtb	r2, r3
 80117f0:	193b      	adds	r3, r7, r4
 80117f2:	2101      	movs	r1, #1
 80117f4:	400a      	ands	r2, r1
 80117f6:	1890      	adds	r0, r2, r2
 80117f8:	781a      	ldrb	r2, [r3, #0]
 80117fa:	2102      	movs	r1, #2
 80117fc:	438a      	bics	r2, r1
 80117fe:	1c11      	adds	r1, r2, #0
 8011800:	1c02      	adds	r2, r0, #0
 8011802:	430a      	orrs	r2, r1
 8011804:	701a      	strb	r2, [r3, #0]
    DPM_Ports[PortNum].DPM_RequestedCurrent           = puser->DPM_SNKRequestedPower.MaxOperatingCurrentInmAunits;
 8011806:	197b      	adds	r3, r7, r5
 8011808:	781a      	ldrb	r2, [r3, #0]
 801180a:	2380      	movs	r3, #128	; 0x80
 801180c:	18fb      	adds	r3, r7, r3
 801180e:	681b      	ldr	r3, [r3, #0]
 8011810:	6859      	ldr	r1, [r3, #4]
 8011812:	4879      	ldr	r0, [pc, #484]	; (80119f8 <USER_SERV_SNK_BuildRDOfromSelectedPDO+0x3c0>)
 8011814:	0013      	movs	r3, r2
 8011816:	009b      	lsls	r3, r3, #2
 8011818:	189b      	adds	r3, r3, r2
 801181a:	011b      	lsls	r3, r3, #4
 801181c:	18c3      	adds	r3, r0, r3
 801181e:	334c      	adds	r3, #76	; 0x4c
 8011820:	6019      	str	r1, [r3, #0]
    /* USBPD_DPM_EvaluateCapabilities: Mismatch, could not find desired pdo index */

    pdhandle->DPM_RequestDOMsg = rdo.d32;
 8011822:	6f7a      	ldr	r2, [r7, #116]	; 0x74
 8011824:	2384      	movs	r3, #132	; 0x84
 8011826:	18fb      	adds	r3, r7, r3
 8011828:	681b      	ldr	r3, [r3, #0]
 801182a:	63da      	str	r2, [r3, #60]	; 0x3c
 801182c:	e0e0      	b.n	80119f0 <USER_SERV_SNK_BuildRDOfromSelectedPDO+0x3b8>
    return;
  }

  /* Set the Object position */
  rdo.GenericRDO.ObjectPosition               = IndexSrcPDO + 1U;
 801182e:	240e      	movs	r4, #14
 8011830:	193b      	adds	r3, r7, r4
 8011832:	781b      	ldrb	r3, [r3, #0]
 8011834:	3301      	adds	r3, #1
 8011836:	b2db      	uxtb	r3, r3
 8011838:	1c1a      	adds	r2, r3, #0
 801183a:	2307      	movs	r3, #7
 801183c:	4013      	ands	r3, r2
 801183e:	b2da      	uxtb	r2, r3
 8011840:	2577      	movs	r5, #119	; 0x77
 8011842:	197b      	adds	r3, r7, r5
 8011844:	2107      	movs	r1, #7
 8011846:	400a      	ands	r2, r1
 8011848:	0110      	lsls	r0, r2, #4
 801184a:	781a      	ldrb	r2, [r3, #0]
 801184c:	2170      	movs	r1, #112	; 0x70
 801184e:	438a      	bics	r2, r1
 8011850:	1c11      	adds	r1, r2, #0
 8011852:	1c02      	adds	r2, r0, #0
 8011854:	430a      	orrs	r2, r1
 8011856:	701a      	strb	r2, [r3, #0]
  rdo.GenericRDO.NoUSBSuspend                 = 0;
 8011858:	197b      	adds	r3, r7, r5
 801185a:	781a      	ldrb	r2, [r3, #0]
 801185c:	2101      	movs	r1, #1
 801185e:	438a      	bics	r2, r1
 8011860:	701a      	strb	r2, [r3, #0]

  /* Extract power information from Power Data Object */
  pdo.d32 = pdhandle->DPM_ListOfRcvSRCPDO[IndexSrcPDO];
 8011862:	193b      	adds	r3, r7, r4
 8011864:	781a      	ldrb	r2, [r3, #0]
 8011866:	2384      	movs	r3, #132	; 0x84
 8011868:	18fb      	adds	r3, r7, r3
 801186a:	681b      	ldr	r3, [r3, #0]
 801186c:	0092      	lsls	r2, r2, #2
 801186e:	58d3      	ldr	r3, [r2, r3]
 8011870:	67bb      	str	r3, [r7, #120]	; 0x78

  *PtrPowerObject = pdo.GenericPDO.PowerObject;
 8011872:	217b      	movs	r1, #123	; 0x7b
 8011874:	187b      	adds	r3, r7, r1
 8011876:	781b      	ldrb	r3, [r3, #0]
 8011878:	061b      	lsls	r3, r3, #24
 801187a:	0f9b      	lsrs	r3, r3, #30
 801187c:	b2db      	uxtb	r3, r3
 801187e:	001a      	movs	r2, r3
 8011880:	2398      	movs	r3, #152	; 0x98
 8011882:	2010      	movs	r0, #16
 8011884:	181b      	adds	r3, r3, r0
 8011886:	19db      	adds	r3, r3, r7
 8011888:	681b      	ldr	r3, [r3, #0]
 801188a:	601a      	str	r2, [r3, #0]

  /* Retrieve request details from SRC PDO selection */
  mv = PtrRequestPowerDetails->RequestedVoltageInmVunits;
 801188c:	68bb      	ldr	r3, [r7, #8]
 801188e:	681b      	ldr	r3, [r3, #0]
 8011890:	228c      	movs	r2, #140	; 0x8c
 8011892:	18ba      	adds	r2, r7, r2
 8011894:	6013      	str	r3, [r2, #0]
  ma = PtrRequestPowerDetails->OperatingCurrentInmAunits;
 8011896:	68bb      	ldr	r3, [r7, #8]
 8011898:	689b      	ldr	r3, [r3, #8]
 801189a:	2288      	movs	r2, #136	; 0x88
 801189c:	18ba      	adds	r2, r7, r2
 801189e:	6013      	str	r3, [r2, #0]

  switch (pdo.GenericPDO.PowerObject)
 80118a0:	187b      	adds	r3, r7, r1
 80118a2:	781b      	ldrb	r3, [r3, #0]
 80118a4:	061b      	lsls	r3, r3, #24
 80118a6:	0f9b      	lsrs	r3, r3, #30
 80118a8:	b2db      	uxtb	r3, r3
 80118aa:	2b00      	cmp	r3, #0
 80118ac:	d002      	beq.n	80118b4 <USER_SERV_SNK_BuildRDOfromSelectedPDO+0x27c>
 80118ae:	2b03      	cmp	r3, #3
 80118b0:	d036      	beq.n	8011920 <USER_SERV_SNK_BuildRDOfromSelectedPDO+0x2e8>
      rdo.ProgRDO.OutputVoltageIn20mV            = mv / 20U;
    }
    break;

    default:
      break;
 80118b2:	e083      	b.n	80119bc <USER_SERV_SNK_BuildRDOfromSelectedPDO+0x384>
      DPM_Ports[PortNum].DPM_RequestedCurrent           = ma;
 80118b4:	230f      	movs	r3, #15
 80118b6:	18fb      	adds	r3, r7, r3
 80118b8:	781a      	ldrb	r2, [r3, #0]
 80118ba:	494f      	ldr	r1, [pc, #316]	; (80119f8 <USER_SERV_SNK_BuildRDOfromSelectedPDO+0x3c0>)
 80118bc:	0013      	movs	r3, r2
 80118be:	009b      	lsls	r3, r3, #2
 80118c0:	189b      	adds	r3, r3, r2
 80118c2:	011b      	lsls	r3, r3, #4
 80118c4:	18cb      	adds	r3, r1, r3
 80118c6:	334c      	adds	r3, #76	; 0x4c
 80118c8:	2488      	movs	r4, #136	; 0x88
 80118ca:	193a      	adds	r2, r7, r4
 80118cc:	6812      	ldr	r2, [r2, #0]
 80118ce:	601a      	str	r2, [r3, #0]
      rdo.FixedVariableRDO.OperatingCurrentIn10mAunits  = ma / 10U;
 80118d0:	193b      	adds	r3, r7, r4
 80118d2:	681b      	ldr	r3, [r3, #0]
 80118d4:	210a      	movs	r1, #10
 80118d6:	0018      	movs	r0, r3
 80118d8:	f7f4 fc8a 	bl	80061f0 <__udivsi3>
 80118dc:	0003      	movs	r3, r0
 80118de:	059b      	lsls	r3, r3, #22
 80118e0:	0d9b      	lsrs	r3, r3, #22
 80118e2:	b29b      	uxth	r3, r3
 80118e4:	059b      	lsls	r3, r3, #22
 80118e6:	0d9b      	lsrs	r3, r3, #22
 80118e8:	029b      	lsls	r3, r3, #10
 80118ea:	6f7a      	ldr	r2, [r7, #116]	; 0x74
 80118ec:	4947      	ldr	r1, [pc, #284]	; (8011a0c <USER_SERV_SNK_BuildRDOfromSelectedPDO+0x3d4>)
 80118ee:	400a      	ands	r2, r1
 80118f0:	4313      	orrs	r3, r2
 80118f2:	677b      	str	r3, [r7, #116]	; 0x74
      rdo.FixedVariableRDO.MaxOperatingCurrent10mAunits = ma / 10U;
 80118f4:	193b      	adds	r3, r7, r4
 80118f6:	681b      	ldr	r3, [r3, #0]
 80118f8:	210a      	movs	r1, #10
 80118fa:	0018      	movs	r0, r3
 80118fc:	f7f4 fc78 	bl	80061f0 <__udivsi3>
 8011900:	0003      	movs	r3, r0
 8011902:	059b      	lsls	r3, r3, #22
 8011904:	0d9b      	lsrs	r3, r3, #22
 8011906:	b29a      	uxth	r2, r3
 8011908:	2374      	movs	r3, #116	; 0x74
 801190a:	18fb      	adds	r3, r7, r3
 801190c:	0592      	lsls	r2, r2, #22
 801190e:	0d90      	lsrs	r0, r2, #22
 8011910:	881a      	ldrh	r2, [r3, #0]
 8011912:	0a92      	lsrs	r2, r2, #10
 8011914:	0292      	lsls	r2, r2, #10
 8011916:	1c11      	adds	r1, r2, #0
 8011918:	1c02      	adds	r2, r0, #0
 801191a:	430a      	orrs	r2, r1
 801191c:	801a      	strh	r2, [r3, #0]
    break;
 801191e:	e04d      	b.n	80119bc <USER_SERV_SNK_BuildRDOfromSelectedPDO+0x384>
      DPM_Ports[PortNum].DPM_RequestedCurrent    = ma;
 8011920:	230f      	movs	r3, #15
 8011922:	18fb      	adds	r3, r7, r3
 8011924:	781a      	ldrb	r2, [r3, #0]
 8011926:	4934      	ldr	r1, [pc, #208]	; (80119f8 <USER_SERV_SNK_BuildRDOfromSelectedPDO+0x3c0>)
 8011928:	0013      	movs	r3, r2
 801192a:	009b      	lsls	r3, r3, #2
 801192c:	189b      	adds	r3, r3, r2
 801192e:	011b      	lsls	r3, r3, #4
 8011930:	18cb      	adds	r3, r1, r3
 8011932:	334c      	adds	r3, #76	; 0x4c
 8011934:	2488      	movs	r4, #136	; 0x88
 8011936:	193a      	adds	r2, r7, r4
 8011938:	6812      	ldr	r2, [r2, #0]
 801193a:	601a      	str	r2, [r3, #0]
      rdo.ProgRDO.ObjectPosition                 = IndexSrcPDO + 1U;
 801193c:	230e      	movs	r3, #14
 801193e:	18fb      	adds	r3, r7, r3
 8011940:	781b      	ldrb	r3, [r3, #0]
 8011942:	3301      	adds	r3, #1
 8011944:	b2db      	uxtb	r3, r3
 8011946:	1c1a      	adds	r2, r3, #0
 8011948:	2307      	movs	r3, #7
 801194a:	4013      	ands	r3, r2
 801194c:	b2da      	uxtb	r2, r3
 801194e:	2377      	movs	r3, #119	; 0x77
 8011950:	18fb      	adds	r3, r7, r3
 8011952:	2107      	movs	r1, #7
 8011954:	400a      	ands	r2, r1
 8011956:	0110      	lsls	r0, r2, #4
 8011958:	781a      	ldrb	r2, [r3, #0]
 801195a:	2170      	movs	r1, #112	; 0x70
 801195c:	438a      	bics	r2, r1
 801195e:	1c11      	adds	r1, r2, #0
 8011960:	1c02      	adds	r2, r0, #0
 8011962:	430a      	orrs	r2, r1
 8011964:	701a      	strb	r2, [r3, #0]
      rdo.ProgRDO.OperatingCurrentIn50mAunits    = ma / 50U;
 8011966:	193b      	adds	r3, r7, r4
 8011968:	681b      	ldr	r3, [r3, #0]
 801196a:	2132      	movs	r1, #50	; 0x32
 801196c:	0018      	movs	r0, r3
 801196e:	f7f4 fc3f 	bl	80061f0 <__udivsi3>
 8011972:	0003      	movs	r3, r0
 8011974:	1c1a      	adds	r2, r3, #0
 8011976:	237f      	movs	r3, #127	; 0x7f
 8011978:	4013      	ands	r3, r2
 801197a:	b2da      	uxtb	r2, r3
 801197c:	2374      	movs	r3, #116	; 0x74
 801197e:	18fb      	adds	r3, r7, r3
 8011980:	217f      	movs	r1, #127	; 0x7f
 8011982:	400a      	ands	r2, r1
 8011984:	0010      	movs	r0, r2
 8011986:	781a      	ldrb	r2, [r3, #0]
 8011988:	217f      	movs	r1, #127	; 0x7f
 801198a:	438a      	bics	r2, r1
 801198c:	1c11      	adds	r1, r2, #0
 801198e:	1c02      	adds	r2, r0, #0
 8011990:	430a      	orrs	r2, r1
 8011992:	701a      	strb	r2, [r3, #0]
      rdo.ProgRDO.OutputVoltageIn20mV            = mv / 20U;
 8011994:	238c      	movs	r3, #140	; 0x8c
 8011996:	18fb      	adds	r3, r7, r3
 8011998:	681b      	ldr	r3, [r3, #0]
 801199a:	2114      	movs	r1, #20
 801199c:	0018      	movs	r0, r3
 801199e:	f7f4 fc27 	bl	80061f0 <__udivsi3>
 80119a2:	0003      	movs	r3, r0
 80119a4:	055b      	lsls	r3, r3, #21
 80119a6:	0d5b      	lsrs	r3, r3, #21
 80119a8:	b29b      	uxth	r3, r3
 80119aa:	055b      	lsls	r3, r3, #21
 80119ac:	0d5b      	lsrs	r3, r3, #21
 80119ae:	025b      	lsls	r3, r3, #9
 80119b0:	6f7a      	ldr	r2, [r7, #116]	; 0x74
 80119b2:	4917      	ldr	r1, [pc, #92]	; (8011a10 <USER_SERV_SNK_BuildRDOfromSelectedPDO+0x3d8>)
 80119b4:	400a      	ands	r2, r1
 80119b6:	4313      	orrs	r3, r2
 80119b8:	677b      	str	r3, [r7, #116]	; 0x74
    break;
 80119ba:	46c0      	nop			; (mov r8, r8)
  }

  pdhandle->DPM_RequestDOMsg = rdo.d32;
 80119bc:	6f7a      	ldr	r2, [r7, #116]	; 0x74
 80119be:	2184      	movs	r1, #132	; 0x84
 80119c0:	187b      	adds	r3, r7, r1
 80119c2:	681b      	ldr	r3, [r3, #0]
 80119c4:	63da      	str	r2, [r3, #60]	; 0x3c
  pdhandle->DPM_RDOPosition  = rdo.GenericRDO.ObjectPosition;
 80119c6:	2377      	movs	r3, #119	; 0x77
 80119c8:	18fb      	adds	r3, r7, r3
 80119ca:	781b      	ldrb	r3, [r3, #0]
 80119cc:	065b      	lsls	r3, r3, #25
 80119ce:	0f5b      	lsrs	r3, r3, #29
 80119d0:	b2db      	uxtb	r3, r3
 80119d2:	001a      	movs	r2, r3
 80119d4:	187b      	adds	r3, r7, r1
 80119d6:	681b      	ldr	r3, [r3, #0]
 80119d8:	641a      	str	r2, [r3, #64]	; 0x40

  Rdo->d32 = pdhandle->DPM_RequestDOMsg;
 80119da:	187b      	adds	r3, r7, r1
 80119dc:	681b      	ldr	r3, [r3, #0]
 80119de:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80119e0:	687b      	ldr	r3, [r7, #4]
 80119e2:	601a      	str	r2, [r3, #0]
  /* Get the requested voltage */
  pdhandle->DPM_RequestedVoltage = mv;
 80119e4:	187b      	adds	r3, r7, r1
 80119e6:	681b      	ldr	r3, [r3, #0]
 80119e8:	228c      	movs	r2, #140	; 0x8c
 80119ea:	18ba      	adds	r2, r7, r2
 80119ec:	6812      	ldr	r2, [r2, #0]
 80119ee:	649a      	str	r2, [r3, #72]	; 0x48
}
 80119f0:	46bd      	mov	sp, r7
 80119f2:	b025      	add	sp, #148	; 0x94
 80119f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80119f6:	46c0      	nop			; (mov r8, r8)
 80119f8:	20002c54 	.word	0x20002c54
 80119fc:	20000028 	.word	0x20000028
 8011a00:	20002c4c 	.word	0x20002c4c
 8011a04:	20000014 	.word	0x20000014
 8011a08:	08018b08 	.word	0x08018b08
 8011a0c:	fff003ff 	.word	0xfff003ff
 8011a10:	fff001ff 	.word	0xfff001ff

08011a14 <USBPD_DPM_UserInit>:
/**
  * @brief  Initialize DPM (port power role, PWR_IF, CAD and PE Init procedures)
  * @retval USBPD Status
  */
USBPD_StatusTypeDef USBPD_DPM_UserInit(void)
{
 8011a14:	b580      	push	{r7, lr}
 8011a16:	af00      	add	r7, sp, #0
/* USER CODE BEGIN USBPD_DPM_UserInit */
  return USBPD_OK;
 8011a18:	2300      	movs	r3, #0
/* USER CODE END USBPD_DPM_UserInit */
}
 8011a1a:	0018      	movs	r0, r3
 8011a1c:	46bd      	mov	sp, r7
 8011a1e:	bd80      	pop	{r7, pc}

08011a20 <USBPD_DPM_SetNotification_GUI>:
  * @param  PtrPost       Pointer on function to send GUI notifications
  * @param  PtrSaveInfo   Pointer on function to save information from Port Partner
  * @retval None
  */
void USBPD_DPM_SetNotification_GUI(GUI_NOTIFICATION_FORMAT_SEND PtrFormatSend, GUI_NOTIFICATION_POST PtrPost, GUI_SAVE_INFO PtrSaveInfo)
{
 8011a20:	b580      	push	{r7, lr}
 8011a22:	b084      	sub	sp, #16
 8011a24:	af00      	add	r7, sp, #0
 8011a26:	60f8      	str	r0, [r7, #12]
 8011a28:	60b9      	str	r1, [r7, #8]
 8011a2a:	607a      	str	r2, [r7, #4]
  DPM_GUI_PostNotificationMessage   = PtrPost;
 8011a2c:	4b06      	ldr	r3, [pc, #24]	; (8011a48 <USBPD_DPM_SetNotification_GUI+0x28>)
 8011a2e:	68ba      	ldr	r2, [r7, #8]
 8011a30:	601a      	str	r2, [r3, #0]
  DPM_GUI_FormatAndSendNotification = PtrFormatSend;
 8011a32:	4b06      	ldr	r3, [pc, #24]	; (8011a4c <USBPD_DPM_SetNotification_GUI+0x2c>)
 8011a34:	68fa      	ldr	r2, [r7, #12]
 8011a36:	601a      	str	r2, [r3, #0]
  DPM_GUI_SaveInfo                  = PtrSaveInfo;
 8011a38:	4b05      	ldr	r3, [pc, #20]	; (8011a50 <USBPD_DPM_SetNotification_GUI+0x30>)
 8011a3a:	687a      	ldr	r2, [r7, #4]
 8011a3c:	601a      	str	r2, [r3, #0]
}
 8011a3e:	46c0      	nop			; (mov r8, r8)
 8011a40:	46bd      	mov	sp, r7
 8011a42:	b004      	add	sp, #16
 8011a44:	bd80      	pop	{r7, pc}
 8011a46:	46c0      	nop			; (mov r8, r8)
 8011a48:	20002ca4 	.word	0x20002ca4
 8011a4c:	20002ca8 	.word	0x20002ca8
 8011a50:	20002cac 	.word	0x20002cac

08011a54 <USBPD_DPM_UserCableDetection>:
  * @param  PortNum The handle of the port
  * @param  State CAD state
  * @retval None
  */
void USBPD_DPM_UserCableDetection(uint8_t PortNum, USBPD_CAD_EVENT State)
{
 8011a54:	b590      	push	{r4, r7, lr}
 8011a56:	b093      	sub	sp, #76	; 0x4c
 8011a58:	af02      	add	r7, sp, #8
 8011a5a:	0002      	movs	r2, r0
 8011a5c:	1dfb      	adds	r3, r7, #7
 8011a5e:	701a      	strb	r2, [r3, #0]
 8011a60:	1dbb      	adds	r3, r7, #6
 8011a62:	1c0a      	adds	r2, r1, #0
 8011a64:	701a      	strb	r2, [r3, #0]
  switch(State)
 8011a66:	1dbb      	adds	r3, r7, #6
 8011a68:	781b      	ldrb	r3, [r3, #0]
 8011a6a:	2b02      	cmp	r3, #2
 8011a6c:	d001      	beq.n	8011a72 <USBPD_DPM_UserCableDetection+0x1e>
 8011a6e:	2b04      	cmp	r3, #4
 8011a70:	d10b      	bne.n	8011a8a <USBPD_DPM_UserCableDetection+0x36>
  {
  case USBPD_CAD_EVENT_ATTEMC:
  case USBPD_CAD_EVENT_ATTACHED:
    /* Format and send a notification to GUI if enabled */
    if (NULL != DPM_GUI_FormatAndSendNotification)
 8011a72:	4b22      	ldr	r3, [pc, #136]	; (8011afc <USBPD_DPM_UserCableDetection+0xa8>)
 8011a74:	681b      	ldr	r3, [r3, #0]
 8011a76:	2b00      	cmp	r3, #0
 8011a78:	d013      	beq.n	8011aa2 <USBPD_DPM_UserCableDetection+0x4e>
    {
      DPM_GUI_FormatAndSendNotification(PortNum, DPM_GUI_NOTIF_ISCONNECTED, 0);
 8011a7a:	4b20      	ldr	r3, [pc, #128]	; (8011afc <USBPD_DPM_UserCableDetection+0xa8>)
 8011a7c:	681b      	ldr	r3, [r3, #0]
 8011a7e:	1dfa      	adds	r2, r7, #7
 8011a80:	7810      	ldrb	r0, [r2, #0]
 8011a82:	2200      	movs	r2, #0
 8011a84:	2120      	movs	r1, #32
 8011a86:	4798      	blx	r3
    }
    break;
 8011a88:	e00b      	b.n	8011aa2 <USBPD_DPM_UserCableDetection+0x4e>
  default :
    /* Format and send a notification to GUI if enabled */
    if (NULL != DPM_GUI_FormatAndSendNotification)
 8011a8a:	4b1c      	ldr	r3, [pc, #112]	; (8011afc <USBPD_DPM_UserCableDetection+0xa8>)
 8011a8c:	681b      	ldr	r3, [r3, #0]
 8011a8e:	2b00      	cmp	r3, #0
 8011a90:	d008      	beq.n	8011aa4 <USBPD_DPM_UserCableDetection+0x50>
    {
      DPM_GUI_FormatAndSendNotification(PortNum, DPM_GUI_NOTIF_ISCONNECTED | DPM_GUI_NOTIF_POWER_EVENT, 0);
 8011a92:	4b1a      	ldr	r3, [pc, #104]	; (8011afc <USBPD_DPM_UserCableDetection+0xa8>)
 8011a94:	681b      	ldr	r3, [r3, #0]
 8011a96:	1dfa      	adds	r2, r7, #7
 8011a98:	7810      	ldrb	r0, [r2, #0]
 8011a9a:	4919      	ldr	r1, [pc, #100]	; (8011b00 <USBPD_DPM_UserCableDetection+0xac>)
 8011a9c:	2200      	movs	r2, #0
 8011a9e:	4798      	blx	r3
 8011aa0:	e000      	b.n	8011aa4 <USBPD_DPM_UserCableDetection+0x50>
    break;
 8011aa2:	46c0      	nop			; (mov r8, r8)
    }
  }
/* USER CODE BEGIN USBPD_DPM_UserCableDetection */
DPM_USER_DEBUG_TRACE(PortNum, "ADVICE: update USBPD_DPM_UserCableDetection");
 8011aa4:	4a17      	ldr	r2, [pc, #92]	; (8011b04 <USBPD_DPM_UserCableDetection+0xb0>)
 8011aa6:	240c      	movs	r4, #12
 8011aa8:	193b      	adds	r3, r7, r4
 8011aaa:	2132      	movs	r1, #50	; 0x32
 8011aac:	0018      	movs	r0, r3
 8011aae:	f006 fb35 	bl	801811c <sniprintf>
 8011ab2:	0002      	movs	r2, r0
 8011ab4:	213f      	movs	r1, #63	; 0x3f
 8011ab6:	187b      	adds	r3, r7, r1
 8011ab8:	701a      	strb	r2, [r3, #0]
 8011aba:	187b      	adds	r3, r7, r1
 8011abc:	781b      	ldrb	r3, [r3, #0]
 8011abe:	2b31      	cmp	r3, #49	; 0x31
 8011ac0:	d80d      	bhi.n	8011ade <USBPD_DPM_UserCableDetection+0x8a>
 8011ac2:	193b      	adds	r3, r7, r4
 8011ac4:	0018      	movs	r0, r3
 8011ac6:	f7f4 fb81 	bl	80061cc <strlen>
 8011aca:	193a      	adds	r2, r7, r4
 8011acc:	1dfb      	adds	r3, r7, #7
 8011ace:	7819      	ldrb	r1, [r3, #0]
 8011ad0:	9000      	str	r0, [sp, #0]
 8011ad2:	0013      	movs	r3, r2
 8011ad4:	2200      	movs	r2, #0
 8011ad6:	2006      	movs	r0, #6
 8011ad8:	f7f9 f88c 	bl	800abf4 <USBPD_TRACE_Add>
/* USER CODE END USBPD_DPM_UserCableDetection */
}
 8011adc:	e00a      	b.n	8011af4 <USBPD_DPM_UserCableDetection+0xa0>
DPM_USER_DEBUG_TRACE(PortNum, "ADVICE: update USBPD_DPM_UserCableDetection");
 8011ade:	230c      	movs	r3, #12
 8011ae0:	18fa      	adds	r2, r7, r3
 8011ae2:	1dfb      	adds	r3, r7, #7
 8011ae4:	7819      	ldrb	r1, [r3, #0]
 8011ae6:	2332      	movs	r3, #50	; 0x32
 8011ae8:	9300      	str	r3, [sp, #0]
 8011aea:	0013      	movs	r3, r2
 8011aec:	2200      	movs	r2, #0
 8011aee:	2006      	movs	r0, #6
 8011af0:	f7f9 f880 	bl	800abf4 <USBPD_TRACE_Add>
}
 8011af4:	46c0      	nop			; (mov r8, r8)
 8011af6:	46bd      	mov	sp, r7
 8011af8:	b011      	add	sp, #68	; 0x44
 8011afa:	bd90      	pop	{r4, r7, pc}
 8011afc:	20002ca8 	.word	0x20002ca8
 8011b00:	00008020 	.word	0x00008020
 8011b04:	08018b48 	.word	0x08018b48

08011b08 <USBPD_DPM_Notification>:
  * @param  PortNum The current port number
  * @param  EventVal @ref USBPD_NotifyEventValue_TypeDef
  * @retval None
  */
void USBPD_DPM_Notification(uint8_t PortNum, USBPD_NotifyEventValue_TypeDef EventVal)
{
 8011b08:	b590      	push	{r4, r7, lr}
 8011b0a:	b093      	sub	sp, #76	; 0x4c
 8011b0c:	af02      	add	r7, sp, #8
 8011b0e:	0002      	movs	r2, r0
 8011b10:	1dfb      	adds	r3, r7, #7
 8011b12:	701a      	strb	r2, [r3, #0]
 8011b14:	1dbb      	adds	r3, r7, #6
 8011b16:	1c0a      	adds	r2, r1, #0
 8011b18:	701a      	strb	r2, [r3, #0]
  /* Forward PE notifications to GUI if enabled */
  if (NULL != DPM_GUI_PostNotificationMessage)
 8011b1a:	4b1d      	ldr	r3, [pc, #116]	; (8011b90 <USBPD_DPM_Notification+0x88>)
 8011b1c:	681b      	ldr	r3, [r3, #0]
 8011b1e:	2b00      	cmp	r3, #0
 8011b20:	d008      	beq.n	8011b34 <USBPD_DPM_Notification+0x2c>
  {
    DPM_GUI_PostNotificationMessage(PortNum, EventVal);
 8011b22:	4b1b      	ldr	r3, [pc, #108]	; (8011b90 <USBPD_DPM_Notification+0x88>)
 8011b24:	681b      	ldr	r3, [r3, #0]
 8011b26:	1dba      	adds	r2, r7, #6
 8011b28:	7812      	ldrb	r2, [r2, #0]
 8011b2a:	b291      	uxth	r1, r2
 8011b2c:	1dfa      	adds	r2, r7, #7
 8011b2e:	7812      	ldrb	r2, [r2, #0]
 8011b30:	0010      	movs	r0, r2
 8011b32:	4798      	blx	r3
//    case USBPD_NOTIFY_DATAROLESWAP_DFP :
//      break;
//    case USBPD_NOTIFY_DATAROLESWAP_UFP :
//      break;
    default:
      DPM_USER_DEBUG_TRACE(PortNum, "ADVICE: USBPD_DPM_Notification:%d", EventVal);
 8011b34:	1dbb      	adds	r3, r7, #6
 8011b36:	781b      	ldrb	r3, [r3, #0]
 8011b38:	4a16      	ldr	r2, [pc, #88]	; (8011b94 <USBPD_DPM_Notification+0x8c>)
 8011b3a:	240c      	movs	r4, #12
 8011b3c:	1938      	adds	r0, r7, r4
 8011b3e:	2132      	movs	r1, #50	; 0x32
 8011b40:	f006 faec 	bl	801811c <sniprintf>
 8011b44:	0002      	movs	r2, r0
 8011b46:	213f      	movs	r1, #63	; 0x3f
 8011b48:	187b      	adds	r3, r7, r1
 8011b4a:	701a      	strb	r2, [r3, #0]
 8011b4c:	187b      	adds	r3, r7, r1
 8011b4e:	781b      	ldrb	r3, [r3, #0]
 8011b50:	2b31      	cmp	r3, #49	; 0x31
 8011b52:	d80d      	bhi.n	8011b70 <USBPD_DPM_Notification+0x68>
 8011b54:	193b      	adds	r3, r7, r4
 8011b56:	0018      	movs	r0, r3
 8011b58:	f7f4 fb38 	bl	80061cc <strlen>
 8011b5c:	193a      	adds	r2, r7, r4
 8011b5e:	1dfb      	adds	r3, r7, #7
 8011b60:	7819      	ldrb	r1, [r3, #0]
 8011b62:	9000      	str	r0, [sp, #0]
 8011b64:	0013      	movs	r3, r2
 8011b66:	2200      	movs	r2, #0
 8011b68:	2006      	movs	r0, #6
 8011b6a:	f7f9 f843 	bl	800abf4 <USBPD_TRACE_Add>
      break;
 8011b6e:	e00a      	b.n	8011b86 <USBPD_DPM_Notification+0x7e>
      DPM_USER_DEBUG_TRACE(PortNum, "ADVICE: USBPD_DPM_Notification:%d", EventVal);
 8011b70:	230c      	movs	r3, #12
 8011b72:	18fa      	adds	r2, r7, r3
 8011b74:	1dfb      	adds	r3, r7, #7
 8011b76:	7819      	ldrb	r1, [r3, #0]
 8011b78:	2332      	movs	r3, #50	; 0x32
 8011b7a:	9300      	str	r3, [sp, #0]
 8011b7c:	0013      	movs	r3, r2
 8011b7e:	2200      	movs	r2, #0
 8011b80:	2006      	movs	r0, #6
 8011b82:	f7f9 f837 	bl	800abf4 <USBPD_TRACE_Add>
      break;
 8011b86:	46c0      	nop			; (mov r8, r8)
  }
/* USER CODE END USBPD_DPM_Notification */
}
 8011b88:	46c0      	nop			; (mov r8, r8)
 8011b8a:	46bd      	mov	sp, r7
 8011b8c:	b011      	add	sp, #68	; 0x44
 8011b8e:	bd90      	pop	{r4, r7, pc}
 8011b90:	20002ca4 	.word	0x20002ca4
 8011b94:	08018b74 	.word	0x08018b74

08011b98 <USBPD_DPM_HardReset>:
  * @param  CurrentRole the current role
  * @param  Status status on hard reset event
  * @retval None
  */
void USBPD_DPM_HardReset(uint8_t PortNum, USBPD_PortPowerRole_TypeDef CurrentRole, USBPD_HR_Status_TypeDef Status)
{
 8011b98:	b590      	push	{r4, r7, lr}
 8011b9a:	b093      	sub	sp, #76	; 0x4c
 8011b9c:	af02      	add	r7, sp, #8
 8011b9e:	6039      	str	r1, [r7, #0]
 8011ba0:	0011      	movs	r1, r2
 8011ba2:	1dfb      	adds	r3, r7, #7
 8011ba4:	1c02      	adds	r2, r0, #0
 8011ba6:	701a      	strb	r2, [r3, #0]
 8011ba8:	1dbb      	adds	r3, r7, #6
 8011baa:	1c0a      	adds	r2, r1, #0
 8011bac:	701a      	strb	r2, [r3, #0]
/* USER CODE BEGIN USBPD_DPM_HardReset */
  DPM_USER_DEBUG_TRACE(PortNum, "ADVICE: update USBPD_DPM_HardReset");
 8011bae:	4a16      	ldr	r2, [pc, #88]	; (8011c08 <USBPD_DPM_HardReset+0x70>)
 8011bb0:	240c      	movs	r4, #12
 8011bb2:	193b      	adds	r3, r7, r4
 8011bb4:	2132      	movs	r1, #50	; 0x32
 8011bb6:	0018      	movs	r0, r3
 8011bb8:	f006 fab0 	bl	801811c <sniprintf>
 8011bbc:	0002      	movs	r2, r0
 8011bbe:	213f      	movs	r1, #63	; 0x3f
 8011bc0:	187b      	adds	r3, r7, r1
 8011bc2:	701a      	strb	r2, [r3, #0]
 8011bc4:	187b      	adds	r3, r7, r1
 8011bc6:	781b      	ldrb	r3, [r3, #0]
 8011bc8:	2b31      	cmp	r3, #49	; 0x31
 8011bca:	d80d      	bhi.n	8011be8 <USBPD_DPM_HardReset+0x50>
 8011bcc:	193b      	adds	r3, r7, r4
 8011bce:	0018      	movs	r0, r3
 8011bd0:	f7f4 fafc 	bl	80061cc <strlen>
 8011bd4:	193a      	adds	r2, r7, r4
 8011bd6:	1dfb      	adds	r3, r7, #7
 8011bd8:	7819      	ldrb	r1, [r3, #0]
 8011bda:	9000      	str	r0, [sp, #0]
 8011bdc:	0013      	movs	r3, r2
 8011bde:	2200      	movs	r2, #0
 8011be0:	2006      	movs	r0, #6
 8011be2:	f7f9 f807 	bl	800abf4 <USBPD_TRACE_Add>
/* USER CODE END USBPD_DPM_HardReset */
}
 8011be6:	e00a      	b.n	8011bfe <USBPD_DPM_HardReset+0x66>
  DPM_USER_DEBUG_TRACE(PortNum, "ADVICE: update USBPD_DPM_HardReset");
 8011be8:	230c      	movs	r3, #12
 8011bea:	18fa      	adds	r2, r7, r3
 8011bec:	1dfb      	adds	r3, r7, #7
 8011bee:	7819      	ldrb	r1, [r3, #0]
 8011bf0:	2332      	movs	r3, #50	; 0x32
 8011bf2:	9300      	str	r3, [sp, #0]
 8011bf4:	0013      	movs	r3, r2
 8011bf6:	2200      	movs	r2, #0
 8011bf8:	2006      	movs	r0, #6
 8011bfa:	f7f8 fffb 	bl	800abf4 <USBPD_TRACE_Add>
}
 8011bfe:	46c0      	nop			; (mov r8, r8)
 8011c00:	46bd      	mov	sp, r7
 8011c02:	b011      	add	sp, #68	; 0x44
 8011c04:	bd90      	pop	{r4, r7, pc}
 8011c06:	46c0      	nop			; (mov r8, r8)
 8011c08:	08018b98 	.word	0x08018b98

08011c0c <USBPD_DPM_GetDataInfo>:
  * @param  Ptr     Pointer on address where DPM data should be written (u8 pointer)
  * @param  Size    Pointer on nb of u8 written by DPM
  * @retval None
  */
void USBPD_DPM_GetDataInfo(uint8_t PortNum, USBPD_CORE_DataInfoType_TypeDef DataId, uint8_t *Ptr, uint32_t *Size)
{
 8011c0c:	b5b0      	push	{r4, r5, r7, lr}
 8011c0e:	b094      	sub	sp, #80	; 0x50
 8011c10:	af02      	add	r7, sp, #8
 8011c12:	60ba      	str	r2, [r7, #8]
 8011c14:	607b      	str	r3, [r7, #4]
 8011c16:	250f      	movs	r5, #15
 8011c18:	197b      	adds	r3, r7, r5
 8011c1a:	1c02      	adds	r2, r0, #0
 8011c1c:	701a      	strb	r2, [r3, #0]
 8011c1e:	200e      	movs	r0, #14
 8011c20:	183b      	adds	r3, r7, r0
 8011c22:	1c0a      	adds	r2, r1, #0
 8011c24:	701a      	strb	r2, [r3, #0]
/* USER CODE BEGIN USBPD_DPM_GetDataInfo */
  /* Check type of information targeted by request */
  switch(DataId)
 8011c26:	0001      	movs	r1, r0
 8011c28:	187b      	adds	r3, r7, r1
 8011c2a:	781b      	ldrb	r3, [r3, #0]
 8011c2c:	2b01      	cmp	r3, #1
 8011c2e:	d10e      	bne.n	8011c4e <USBPD_DPM_GetDataInfo+0x42>
  {

  case USBPD_CORE_DATATYPE_SNK_PDO: /*!< Handling of port Sink PDO, requested by get sink capa*/
  USBPD_PWR_IF_GetPortPDOs(PortNum, DataId, Ptr, Size);
 8011c30:	687c      	ldr	r4, [r7, #4]
 8011c32:	68ba      	ldr	r2, [r7, #8]
 8011c34:	187b      	adds	r3, r7, r1
 8011c36:	7819      	ldrb	r1, [r3, #0]
 8011c38:	197b      	adds	r3, r7, r5
 8011c3a:	7818      	ldrb	r0, [r3, #0]
 8011c3c:	0023      	movs	r3, r4
 8011c3e:	f7ff f905 	bl	8010e4c <USBPD_PWR_IF_GetPortPDOs>
  *Size *= 4;
 8011c42:	687b      	ldr	r3, [r7, #4]
 8011c44:	681b      	ldr	r3, [r3, #0]
 8011c46:	009a      	lsls	r2, r3, #2
 8011c48:	687b      	ldr	r3, [r7, #4]
 8011c4a:	601a      	str	r2, [r3, #0]
  break;
 8011c4c:	e02c      	b.n	8011ca8 <USBPD_DPM_GetDataInfo+0x9c>
//  case USBPD_CORE_BATTERY_STATUS:             /*!< Retrieve of Battery status message content          */
    // break;
//  case USBPD_CORE_BATTERY_CAPABILITY:         /*!< Retrieve of Battery capability message content      */
    // break;
  default:
    DPM_USER_DEBUG_TRACE(PortNum, "ADVICE: update USBPD_DPM_GetDataInfo:%d", DataId);
 8011c4e:	230e      	movs	r3, #14
 8011c50:	18fb      	adds	r3, r7, r3
 8011c52:	781b      	ldrb	r3, [r3, #0]
 8011c54:	4a16      	ldr	r2, [pc, #88]	; (8011cb0 <USBPD_DPM_GetDataInfo+0xa4>)
 8011c56:	2414      	movs	r4, #20
 8011c58:	1938      	adds	r0, r7, r4
 8011c5a:	2132      	movs	r1, #50	; 0x32
 8011c5c:	f006 fa5e 	bl	801811c <sniprintf>
 8011c60:	0002      	movs	r2, r0
 8011c62:	2147      	movs	r1, #71	; 0x47
 8011c64:	187b      	adds	r3, r7, r1
 8011c66:	701a      	strb	r2, [r3, #0]
 8011c68:	187b      	adds	r3, r7, r1
 8011c6a:	781b      	ldrb	r3, [r3, #0]
 8011c6c:	2b31      	cmp	r3, #49	; 0x31
 8011c6e:	d80e      	bhi.n	8011c8e <USBPD_DPM_GetDataInfo+0x82>
 8011c70:	193b      	adds	r3, r7, r4
 8011c72:	0018      	movs	r0, r3
 8011c74:	f7f4 faaa 	bl	80061cc <strlen>
 8011c78:	193a      	adds	r2, r7, r4
 8011c7a:	230f      	movs	r3, #15
 8011c7c:	18fb      	adds	r3, r7, r3
 8011c7e:	7819      	ldrb	r1, [r3, #0]
 8011c80:	9000      	str	r0, [sp, #0]
 8011c82:	0013      	movs	r3, r2
 8011c84:	2200      	movs	r2, #0
 8011c86:	2006      	movs	r0, #6
 8011c88:	f7f8 ffb4 	bl	800abf4 <USBPD_TRACE_Add>
    break;
 8011c8c:	e00b      	b.n	8011ca6 <USBPD_DPM_GetDataInfo+0x9a>
    DPM_USER_DEBUG_TRACE(PortNum, "ADVICE: update USBPD_DPM_GetDataInfo:%d", DataId);
 8011c8e:	2314      	movs	r3, #20
 8011c90:	18fa      	adds	r2, r7, r3
 8011c92:	230f      	movs	r3, #15
 8011c94:	18fb      	adds	r3, r7, r3
 8011c96:	7819      	ldrb	r1, [r3, #0]
 8011c98:	2332      	movs	r3, #50	; 0x32
 8011c9a:	9300      	str	r3, [sp, #0]
 8011c9c:	0013      	movs	r3, r2
 8011c9e:	2200      	movs	r2, #0
 8011ca0:	2006      	movs	r0, #6
 8011ca2:	f7f8 ffa7 	bl	800abf4 <USBPD_TRACE_Add>
    break;
 8011ca6:	46c0      	nop			; (mov r8, r8)
  }
/* USER CODE END USBPD_DPM_GetDataInfo */
}
 8011ca8:	46c0      	nop			; (mov r8, r8)
 8011caa:	46bd      	mov	sp, r7
 8011cac:	b012      	add	sp, #72	; 0x48
 8011cae:	bdb0      	pop	{r4, r5, r7, pc}
 8011cb0:	08018bbc 	.word	0x08018bbc

08011cb4 <USBPD_DPM_SetDataInfo>:
  * @param  Ptr     Pointer on the data
  * @param  Size    Nb of bytes to be updated in DPM
  * @retval None
  */
void USBPD_DPM_SetDataInfo(uint8_t PortNum, USBPD_CORE_DataInfoType_TypeDef DataId, uint8_t *Ptr, uint32_t Size)
{
 8011cb4:	b5b0      	push	{r4, r5, r7, lr}
 8011cb6:	b094      	sub	sp, #80	; 0x50
 8011cb8:	af02      	add	r7, sp, #8
 8011cba:	60ba      	str	r2, [r7, #8]
 8011cbc:	607b      	str	r3, [r7, #4]
 8011cbe:	240f      	movs	r4, #15
 8011cc0:	193b      	adds	r3, r7, r4
 8011cc2:	1c02      	adds	r2, r0, #0
 8011cc4:	701a      	strb	r2, [r3, #0]
 8011cc6:	200e      	movs	r0, #14
 8011cc8:	183b      	adds	r3, r7, r0
 8011cca:	1c0a      	adds	r2, r1, #0
 8011ccc:	701a      	strb	r2, [r3, #0]
/* USER CODE BEGIN USBPD_DPM_SetDataInfo */
  /* Check type of information targeted by request */
  switch(DataId)
 8011cce:	183b      	adds	r3, r7, r0
 8011cd0:	781b      	ldrb	r3, [r3, #0]
 8011cd2:	2b04      	cmp	r3, #4
 8011cd4:	d107      	bne.n	8011ce6 <USBPD_DPM_SetDataInfo+0x32>
  {
  /* Case Received Source PDO values Data information :*/
   case USBPD_CORE_DATATYPE_RCV_SRC_PDO:         /*!< Storage of Received Source PDO values        */
       USBPD_USER_SERV_StoreSRCPDO(PortNum, Ptr, Size);
 8011cd6:	687a      	ldr	r2, [r7, #4]
 8011cd8:	68b9      	ldr	r1, [r7, #8]
 8011cda:	193b      	adds	r3, r7, r4
 8011cdc:	781b      	ldrb	r3, [r3, #0]
 8011cde:	0018      	movs	r0, r3
 8011ce0:	f7ff f922 	bl	8010f28 <USBPD_USER_SERV_StoreSRCPDO>
       break;
 8011ce4:	e02c      	b.n	8011d40 <USBPD_DPM_SetDataInfo+0x8c>
//  case USBPD_CORE_GET_BATTERY_CAPABILITY:     /*!< Storing of received Get Battery capability message content*/
    // break;
//  case USBPD_CORE_SNK_EXTENDED_CAPA:          /*!< Storing of Sink Extended capability message content       */
    // break;
  default:
    DPM_USER_DEBUG_TRACE(PortNum, "ADVICE: update USBPD_DPM_SetDataInfo:%d", DataId);
 8011ce6:	230e      	movs	r3, #14
 8011ce8:	18fb      	adds	r3, r7, r3
 8011cea:	781b      	ldrb	r3, [r3, #0]
 8011cec:	4a1e      	ldr	r2, [pc, #120]	; (8011d68 <USBPD_DPM_SetDataInfo+0xb4>)
 8011cee:	2414      	movs	r4, #20
 8011cf0:	1938      	adds	r0, r7, r4
 8011cf2:	2132      	movs	r1, #50	; 0x32
 8011cf4:	f006 fa12 	bl	801811c <sniprintf>
 8011cf8:	0002      	movs	r2, r0
 8011cfa:	2147      	movs	r1, #71	; 0x47
 8011cfc:	187b      	adds	r3, r7, r1
 8011cfe:	701a      	strb	r2, [r3, #0]
 8011d00:	187b      	adds	r3, r7, r1
 8011d02:	781b      	ldrb	r3, [r3, #0]
 8011d04:	2b31      	cmp	r3, #49	; 0x31
 8011d06:	d80e      	bhi.n	8011d26 <USBPD_DPM_SetDataInfo+0x72>
 8011d08:	193b      	adds	r3, r7, r4
 8011d0a:	0018      	movs	r0, r3
 8011d0c:	f7f4 fa5e 	bl	80061cc <strlen>
 8011d10:	193a      	adds	r2, r7, r4
 8011d12:	230f      	movs	r3, #15
 8011d14:	18fb      	adds	r3, r7, r3
 8011d16:	7819      	ldrb	r1, [r3, #0]
 8011d18:	9000      	str	r0, [sp, #0]
 8011d1a:	0013      	movs	r3, r2
 8011d1c:	2200      	movs	r2, #0
 8011d1e:	2006      	movs	r0, #6
 8011d20:	f7f8 ff68 	bl	800abf4 <USBPD_TRACE_Add>
    break;
 8011d24:	e00b      	b.n	8011d3e <USBPD_DPM_SetDataInfo+0x8a>
    DPM_USER_DEBUG_TRACE(PortNum, "ADVICE: update USBPD_DPM_SetDataInfo:%d", DataId);
 8011d26:	2314      	movs	r3, #20
 8011d28:	18fa      	adds	r2, r7, r3
 8011d2a:	230f      	movs	r3, #15
 8011d2c:	18fb      	adds	r3, r7, r3
 8011d2e:	7819      	ldrb	r1, [r3, #0]
 8011d30:	2332      	movs	r3, #50	; 0x32
 8011d32:	9300      	str	r3, [sp, #0]
 8011d34:	0013      	movs	r3, r2
 8011d36:	2200      	movs	r2, #0
 8011d38:	2006      	movs	r0, #6
 8011d3a:	f7f8 ff5b 	bl	800abf4 <USBPD_TRACE_Add>
    break;
 8011d3e:	46c0      	nop			; (mov r8, r8)
  }
/* USER CODE END USBPD_DPM_SetDataInfo */

  /* Forward info to GUI if enabled */
  if (NULL != DPM_GUI_SaveInfo)
 8011d40:	4b0a      	ldr	r3, [pc, #40]	; (8011d6c <USBPD_DPM_SetDataInfo+0xb8>)
 8011d42:	681b      	ldr	r3, [r3, #0]
 8011d44:	2b00      	cmp	r3, #0
 8011d46:	d00b      	beq.n	8011d60 <USBPD_DPM_SetDataInfo+0xac>
  {
    DPM_GUI_SaveInfo(PortNum, DataId, Ptr, Size);
 8011d48:	4b08      	ldr	r3, [pc, #32]	; (8011d6c <USBPD_DPM_SetDataInfo+0xb8>)
 8011d4a:	681c      	ldr	r4, [r3, #0]
 8011d4c:	687d      	ldr	r5, [r7, #4]
 8011d4e:	68ba      	ldr	r2, [r7, #8]
 8011d50:	230e      	movs	r3, #14
 8011d52:	18fb      	adds	r3, r7, r3
 8011d54:	7819      	ldrb	r1, [r3, #0]
 8011d56:	230f      	movs	r3, #15
 8011d58:	18fb      	adds	r3, r7, r3
 8011d5a:	7818      	ldrb	r0, [r3, #0]
 8011d5c:	002b      	movs	r3, r5
 8011d5e:	47a0      	blx	r4
  }
}
 8011d60:	46c0      	nop			; (mov r8, r8)
 8011d62:	46bd      	mov	sp, r7
 8011d64:	b012      	add	sp, #72	; 0x48
 8011d66:	bdb0      	pop	{r4, r5, r7, pc}
 8011d68:	08018be4 	.word	0x08018be4
 8011d6c:	20002cac 	.word	0x20002cac

08011d70 <USBPD_DPM_SNK_EvaluateCapabilities>:
  * @param  PtrRequestData  Pointer on selected request data object
  * @param  PtrPowerObjectType  Pointer on the power data object
  * @retval None
  */
void USBPD_DPM_SNK_EvaluateCapabilities(uint8_t PortNum, uint32_t *PtrRequestData, USBPD_CORE_PDO_Type_TypeDef *PtrPowerObjectType)
{
 8011d70:	b590      	push	{r4, r7, lr}
 8011d72:	b085      	sub	sp, #20
 8011d74:	af00      	add	r7, sp, #0
 8011d76:	60b9      	str	r1, [r7, #8]
 8011d78:	607a      	str	r2, [r7, #4]
 8011d7a:	240f      	movs	r4, #15
 8011d7c:	193b      	adds	r3, r7, r4
 8011d7e:	1c02      	adds	r2, r0, #0
 8011d80:	701a      	strb	r2, [r3, #0]
/* USER CODE BEGIN USBPD_DPM_SNK_EvaluateCapabilities */

	/* Variable PDO*/
	USBPD_USER_SERV_EvaluateCapa(PortNum, PtrRequestData, PtrPowerObjectType);
 8011d82:	687a      	ldr	r2, [r7, #4]
 8011d84:	68b9      	ldr	r1, [r7, #8]
 8011d86:	193b      	adds	r3, r7, r4
 8011d88:	781b      	ldrb	r3, [r3, #0]
 8011d8a:	0018      	movs	r0, r3
 8011d8c:	f7ff f90c 	bl	8010fa8 <USBPD_USER_SERV_EvaluateCapa>
	//rdo.FixedVariableRDO.CapabilityMismatch = 0;
	//*PtrPowerObjectType = USBPD_CORE_PDO_TYPE_FIXED;
	//*PtrRequestData = rdo.d32;

/* USER CODE END USBPD_DPM_SNK_EvaluateCapabilities */
}
 8011d90:	46c0      	nop			; (mov r8, r8)
 8011d92:	46bd      	mov	sp, r7
 8011d94:	b005      	add	sp, #20
 8011d96:	bd90      	pop	{r4, r7, pc}

08011d98 <USBPD_DPM_ExtendedMessageReceived>:
  * @param  ptrData   Pointer on address Extended Message data could be read (u8 pointer)
  * @param  DataSize  Nb of u8 that compose Extended message
  * @retval None
  */
void USBPD_DPM_ExtendedMessageReceived(uint8_t PortNum, USBPD_ExtendedMsg_TypeDef MsgType, uint8_t *ptrData, uint16_t DataSize)
{
 8011d98:	b590      	push	{r4, r7, lr}
 8011d9a:	b083      	sub	sp, #12
 8011d9c:	af00      	add	r7, sp, #0
 8011d9e:	0004      	movs	r4, r0
 8011da0:	0008      	movs	r0, r1
 8011da2:	603a      	str	r2, [r7, #0]
 8011da4:	0019      	movs	r1, r3
 8011da6:	1dfb      	adds	r3, r7, #7
 8011da8:	1c22      	adds	r2, r4, #0
 8011daa:	701a      	strb	r2, [r3, #0]
 8011dac:	1dbb      	adds	r3, r7, #6
 8011dae:	1c02      	adds	r2, r0, #0
 8011db0:	701a      	strb	r2, [r3, #0]
 8011db2:	1d3b      	adds	r3, r7, #4
 8011db4:	1c0a      	adds	r2, r1, #0
 8011db6:	801a      	strh	r2, [r3, #0]
/* USER CODE BEGIN USBPD_DPM_ExtendedMessageReceived */

/* USER CODE END USBPD_DPM_ExtendedMessageReceived */
}
 8011db8:	46c0      	nop			; (mov r8, r8)
 8011dba:	46bd      	mov	sp, r7
 8011dbc:	b003      	add	sp, #12
 8011dbe:	bd90      	pop	{r4, r7, pc}

08011dc0 <USBPD_DPM_EnterErrorRecovery>:
  * @brief  DPM callback to allow PE to enter ERROR_RECOVERY state.
  * @param  PortNum Port number
  * @retval None
  */
void USBPD_DPM_EnterErrorRecovery(uint8_t PortNum)
{
 8011dc0:	b580      	push	{r7, lr}
 8011dc2:	b082      	sub	sp, #8
 8011dc4:	af00      	add	r7, sp, #0
 8011dc6:	0002      	movs	r2, r0
 8011dc8:	1dfb      	adds	r3, r7, #7
 8011dca:	701a      	strb	r2, [r3, #0]
/* USER CODE BEGIN USBPD_DPM_EnterErrorRecovery */
  /* Inform CAD to enter recovery mode */
  USBPD_CAD_EnterErrorRecovery(PortNum);
 8011dcc:	1dfb      	adds	r3, r7, #7
 8011dce:	781b      	ldrb	r3, [r3, #0]
 8011dd0:	0018      	movs	r0, r3
 8011dd2:	f7ee fa63 	bl	800029c <USBPD_CAD_EnterErrorRecovery>
/* USER CODE END USBPD_DPM_EnterErrorRecovery */
}
 8011dd6:	46c0      	nop			; (mov r8, r8)
 8011dd8:	46bd      	mov	sp, r7
 8011dda:	b002      	add	sp, #8
 8011ddc:	bd80      	pop	{r7, pc}
	...

08011de0 <USBPD_DPM_EvaluateDataRoleSwap>:
            @ref USBPD_ACCEPT if DRS can be accepted
            @ref USBPD_REJECT if DRS is not accepted in one data role (DFP or UFP) or in PD2.0 config
            @ref USBPD_NOTSUPPORTED if DRS is not supported at all by the application (in both data roles) - P3.0 only
  */
USBPD_StatusTypeDef USBPD_DPM_EvaluateDataRoleSwap(uint8_t PortNum)
{
 8011de0:	b580      	push	{r7, lr}
 8011de2:	b084      	sub	sp, #16
 8011de4:	af00      	add	r7, sp, #0
 8011de6:	0002      	movs	r2, r0
 8011de8:	1dfb      	adds	r3, r7, #7
 8011dea:	701a      	strb	r2, [r3, #0]
/* USER CODE BEGIN USBPD_DPM_EvaluateDataRoleSwap */
  USBPD_StatusTypeDef status = USBPD_REJECT;
 8011dec:	230f      	movs	r3, #15
 8011dee:	18fb      	adds	r3, r7, r3
 8011df0:	220c      	movs	r2, #12
 8011df2:	701a      	strb	r2, [r3, #0]
  /* Sent NOT_SUPPORTED if DRS is not supported at all by the application (in both data roles) - P3.0 only */
  if ((USBPD_FALSE == DPM_USER_Settings[PortNum].PE_DataSwap)
 8011df4:	1dfb      	adds	r3, r7, #7
 8011df6:	781a      	ldrb	r2, [r3, #0]
 8011df8:	4b2c      	ldr	r3, [pc, #176]	; (8011eac <USBPD_DPM_EvaluateDataRoleSwap+0xcc>)
 8011dfa:	2174      	movs	r1, #116	; 0x74
 8011dfc:	434a      	muls	r2, r1
 8011dfe:	5cd3      	ldrb	r3, [r2, r3]
 8011e00:	07db      	lsls	r3, r3, #31
 8011e02:	0fdb      	lsrs	r3, r3, #31
 8011e04:	b2db      	uxtb	r3, r3
 8011e06:	2b00      	cmp	r3, #0
 8011e08:	d015      	beq.n	8011e36 <USBPD_DPM_EvaluateDataRoleSwap+0x56>
    || ((USBPD_FALSE == DPM_USER_Settings[PortNum].PE_DR_Swap_To_DFP)
 8011e0a:	1dfb      	adds	r3, r7, #7
 8011e0c:	781a      	ldrb	r2, [r3, #0]
 8011e0e:	4b27      	ldr	r3, [pc, #156]	; (8011eac <USBPD_DPM_EvaluateDataRoleSwap+0xcc>)
 8011e10:	2174      	movs	r1, #116	; 0x74
 8011e12:	434a      	muls	r2, r1
 8011e14:	5cd3      	ldrb	r3, [r2, r3]
 8011e16:	075b      	lsls	r3, r3, #29
 8011e18:	0fdb      	lsrs	r3, r3, #31
 8011e1a:	b2db      	uxtb	r3, r3
 8011e1c:	2b00      	cmp	r3, #0
 8011e1e:	d10f      	bne.n	8011e40 <USBPD_DPM_EvaluateDataRoleSwap+0x60>
    && (USBPD_FALSE == DPM_USER_Settings[PortNum].PE_DR_Swap_To_UFP)))
 8011e20:	1dfb      	adds	r3, r7, #7
 8011e22:	781a      	ldrb	r2, [r3, #0]
 8011e24:	4b21      	ldr	r3, [pc, #132]	; (8011eac <USBPD_DPM_EvaluateDataRoleSwap+0xcc>)
 8011e26:	2174      	movs	r1, #116	; 0x74
 8011e28:	434a      	muls	r2, r1
 8011e2a:	5cd3      	ldrb	r3, [r2, r3]
 8011e2c:	071b      	lsls	r3, r3, #28
 8011e2e:	0fdb      	lsrs	r3, r3, #31
 8011e30:	b2db      	uxtb	r3, r3
 8011e32:	2b00      	cmp	r3, #0
 8011e34:	d104      	bne.n	8011e40 <USBPD_DPM_EvaluateDataRoleSwap+0x60>
  {
    status = USBPD_NOTSUPPORTED;
 8011e36:	230f      	movs	r3, #15
 8011e38:	18fb      	adds	r3, r7, r3
 8011e3a:	2201      	movs	r2, #1
 8011e3c:	701a      	strb	r2, [r3, #0]
 8011e3e:	e02d      	b.n	8011e9c <USBPD_DPM_EvaluateDataRoleSwap+0xbc>
  }
  else
  {
    /* ACCEPT DRS if at least supported by 1 data role */
    if (((USBPD_TRUE == DPM_USER_Settings[PortNum].PE_DR_Swap_To_DFP) && (USBPD_PORTDATAROLE_UFP == DPM_Params[PortNum].PE_DataRole))
 8011e40:	1dfb      	adds	r3, r7, #7
 8011e42:	781a      	ldrb	r2, [r3, #0]
 8011e44:	4b19      	ldr	r3, [pc, #100]	; (8011eac <USBPD_DPM_EvaluateDataRoleSwap+0xcc>)
 8011e46:	2174      	movs	r1, #116	; 0x74
 8011e48:	434a      	muls	r2, r1
 8011e4a:	5cd3      	ldrb	r3, [r2, r3]
 8011e4c:	075b      	lsls	r3, r3, #29
 8011e4e:	0fdb      	lsrs	r3, r3, #31
 8011e50:	b2db      	uxtb	r3, r3
 8011e52:	2b01      	cmp	r3, #1
 8011e54:	d109      	bne.n	8011e6a <USBPD_DPM_EvaluateDataRoleSwap+0x8a>
 8011e56:	1dfb      	adds	r3, r7, #7
 8011e58:	781a      	ldrb	r2, [r3, #0]
 8011e5a:	4b15      	ldr	r3, [pc, #84]	; (8011eb0 <USBPD_DPM_EvaluateDataRoleSwap+0xd0>)
 8011e5c:	0092      	lsls	r2, r2, #2
 8011e5e:	5cd3      	ldrb	r3, [r2, r3]
 8011e60:	071b      	lsls	r3, r3, #28
 8011e62:	0fdb      	lsrs	r3, r3, #31
 8011e64:	b2db      	uxtb	r3, r3
 8011e66:	2b00      	cmp	r3, #0
 8011e68:	d014      	beq.n	8011e94 <USBPD_DPM_EvaluateDataRoleSwap+0xb4>
       || ((USBPD_TRUE == DPM_USER_Settings[PortNum].PE_DR_Swap_To_UFP) && (USBPD_PORTDATAROLE_DFP == DPM_Params[PortNum].PE_DataRole)))
 8011e6a:	1dfb      	adds	r3, r7, #7
 8011e6c:	781a      	ldrb	r2, [r3, #0]
 8011e6e:	4b0f      	ldr	r3, [pc, #60]	; (8011eac <USBPD_DPM_EvaluateDataRoleSwap+0xcc>)
 8011e70:	2174      	movs	r1, #116	; 0x74
 8011e72:	434a      	muls	r2, r1
 8011e74:	5cd3      	ldrb	r3, [r2, r3]
 8011e76:	071b      	lsls	r3, r3, #28
 8011e78:	0fdb      	lsrs	r3, r3, #31
 8011e7a:	b2db      	uxtb	r3, r3
 8011e7c:	2b01      	cmp	r3, #1
 8011e7e:	d10d      	bne.n	8011e9c <USBPD_DPM_EvaluateDataRoleSwap+0xbc>
 8011e80:	1dfb      	adds	r3, r7, #7
 8011e82:	781a      	ldrb	r2, [r3, #0]
 8011e84:	4b0a      	ldr	r3, [pc, #40]	; (8011eb0 <USBPD_DPM_EvaluateDataRoleSwap+0xd0>)
 8011e86:	0092      	lsls	r2, r2, #2
 8011e88:	5cd3      	ldrb	r3, [r2, r3]
 8011e8a:	071b      	lsls	r3, r3, #28
 8011e8c:	0fdb      	lsrs	r3, r3, #31
 8011e8e:	b2db      	uxtb	r3, r3
 8011e90:	2b01      	cmp	r3, #1
 8011e92:	d103      	bne.n	8011e9c <USBPD_DPM_EvaluateDataRoleSwap+0xbc>
    {
      status = USBPD_ACCEPT;
 8011e94:	230f      	movs	r3, #15
 8011e96:	18fb      	adds	r3, r7, r3
 8011e98:	220a      	movs	r2, #10
 8011e9a:	701a      	strb	r2, [r3, #0]
    }
  }
  return status;
 8011e9c:	230f      	movs	r3, #15
 8011e9e:	18fb      	adds	r3, r7, r3
 8011ea0:	781b      	ldrb	r3, [r3, #0]
/* USER CODE END USBPD_DPM_EvaluateDataRoleSwap */
}
 8011ea2:	0018      	movs	r0, r3
 8011ea4:	46bd      	mov	sp, r7
 8011ea6:	b004      	add	sp, #16
 8011ea8:	bd80      	pop	{r7, pc}
 8011eaa:	46c0      	nop			; (mov r8, r8)
 8011eac:	20000028 	.word	0x20000028
 8011eb0:	20002c4c 	.word	0x20002c4c

08011eb4 <USBPD_DPM_IsPowerReady>:
  * @param  PortNum Port number
  * @param  Vsafe   Vsafe status based on @ref USBPD_VSAFE_StatusTypeDef
  * @retval USBPD_DISABLE or USBPD_ENABLE
  */
USBPD_FunctionalState USBPD_DPM_IsPowerReady(uint8_t PortNum, USBPD_VSAFE_StatusTypeDef Vsafe)
{
 8011eb4:	b580      	push	{r7, lr}
 8011eb6:	b082      	sub	sp, #8
 8011eb8:	af00      	add	r7, sp, #0
 8011eba:	0002      	movs	r2, r0
 8011ebc:	1dfb      	adds	r3, r7, #7
 8011ebe:	701a      	strb	r2, [r3, #0]
 8011ec0:	1dbb      	adds	r3, r7, #6
 8011ec2:	1c0a      	adds	r2, r1, #0
 8011ec4:	701a      	strb	r2, [r3, #0]
/* USER CODE BEGIN USBPD_DPM_IsPowerReady */
  return ((USBPD_OK == USBPD_PWR_IF_SupplyReady(PortNum, Vsafe)) ? USBPD_ENABLE : USBPD_DISABLE);
 8011ec6:	1dbb      	adds	r3, r7, #6
 8011ec8:	781a      	ldrb	r2, [r3, #0]
 8011eca:	1dfb      	adds	r3, r7, #7
 8011ecc:	781b      	ldrb	r3, [r3, #0]
 8011ece:	0011      	movs	r1, r2
 8011ed0:	0018      	movs	r0, r3
 8011ed2:	f7fe ff7d 	bl	8010dd0 <USBPD_PWR_IF_SupplyReady>
 8011ed6:	0003      	movs	r3, r0
 8011ed8:	425a      	negs	r2, r3
 8011eda:	4153      	adcs	r3, r2
 8011edc:	b2db      	uxtb	r3, r3
/* USER CODE END USBPD_DPM_IsPowerReady */
}
 8011ede:	0018      	movs	r0, r3
 8011ee0:	46bd      	mov	sp, r7
 8011ee2:	b002      	add	sp, #8
 8011ee4:	bd80      	pop	{r7, pc}
	...

08011ee8 <USBPD_DPM_RequestHardReset>:
  * @brief  Request the PE to send a hard reset
  * @param  PortNum The current port number
  * @retval USBPD Status
  */
USBPD_StatusTypeDef USBPD_DPM_RequestHardReset(uint8_t PortNum)
{
 8011ee8:	b5b0      	push	{r4, r5, r7, lr}
 8011eea:	b092      	sub	sp, #72	; 0x48
 8011eec:	af02      	add	r7, sp, #8
 8011eee:	0002      	movs	r2, r0
 8011ef0:	1dfb      	adds	r3, r7, #7
 8011ef2:	701a      	strb	r2, [r3, #0]
  USBPD_StatusTypeDef _status = USBPD_PE_Request_HardReset(PortNum);
 8011ef4:	253f      	movs	r5, #63	; 0x3f
 8011ef6:	197c      	adds	r4, r7, r5
 8011ef8:	1dfb      	adds	r3, r7, #7
 8011efa:	781b      	ldrb	r3, [r3, #0]
 8011efc:	0018      	movs	r0, r3
 8011efe:	f7ee fadb 	bl	80004b8 <USBPD_PE_Request_HardReset>
 8011f02:	0003      	movs	r3, r0
 8011f04:	7023      	strb	r3, [r4, #0]
  DPM_USER_ERROR_TRACE(PortNum, _status, "HARD RESET not accepted by the stack");
 8011f06:	197b      	adds	r3, r7, r5
 8011f08:	781b      	ldrb	r3, [r3, #0]
 8011f0a:	2b00      	cmp	r3, #0
 8011f0c:	d027      	beq.n	8011f5e <USBPD_DPM_RequestHardReset+0x76>
 8011f0e:	4a17      	ldr	r2, [pc, #92]	; (8011f6c <USBPD_DPM_RequestHardReset+0x84>)
 8011f10:	240c      	movs	r4, #12
 8011f12:	193b      	adds	r3, r7, r4
 8011f14:	2132      	movs	r1, #50	; 0x32
 8011f16:	0018      	movs	r0, r3
 8011f18:	f006 f900 	bl	801811c <sniprintf>
 8011f1c:	0002      	movs	r2, r0
 8011f1e:	213e      	movs	r1, #62	; 0x3e
 8011f20:	187b      	adds	r3, r7, r1
 8011f22:	701a      	strb	r2, [r3, #0]
 8011f24:	187b      	adds	r3, r7, r1
 8011f26:	781b      	ldrb	r3, [r3, #0]
 8011f28:	2b31      	cmp	r3, #49	; 0x31
 8011f2a:	d80d      	bhi.n	8011f48 <USBPD_DPM_RequestHardReset+0x60>
 8011f2c:	193b      	adds	r3, r7, r4
 8011f2e:	0018      	movs	r0, r3
 8011f30:	f7f4 f94c 	bl	80061cc <strlen>
 8011f34:	193a      	adds	r2, r7, r4
 8011f36:	1dfb      	adds	r3, r7, #7
 8011f38:	7819      	ldrb	r1, [r3, #0]
 8011f3a:	9000      	str	r0, [sp, #0]
 8011f3c:	0013      	movs	r3, r2
 8011f3e:	2200      	movs	r2, #0
 8011f40:	2006      	movs	r0, #6
 8011f42:	f7f8 fe57 	bl	800abf4 <USBPD_TRACE_Add>
 8011f46:	e00a      	b.n	8011f5e <USBPD_DPM_RequestHardReset+0x76>
 8011f48:	230c      	movs	r3, #12
 8011f4a:	18fa      	adds	r2, r7, r3
 8011f4c:	1dfb      	adds	r3, r7, #7
 8011f4e:	7819      	ldrb	r1, [r3, #0]
 8011f50:	2332      	movs	r3, #50	; 0x32
 8011f52:	9300      	str	r3, [sp, #0]
 8011f54:	0013      	movs	r3, r2
 8011f56:	2200      	movs	r2, #0
 8011f58:	2006      	movs	r0, #6
 8011f5a:	f7f8 fe4b 	bl	800abf4 <USBPD_TRACE_Add>
  return _status;
 8011f5e:	233f      	movs	r3, #63	; 0x3f
 8011f60:	18fb      	adds	r3, r7, r3
 8011f62:	781b      	ldrb	r3, [r3, #0]
}
 8011f64:	0018      	movs	r0, r3
 8011f66:	46bd      	mov	sp, r7
 8011f68:	b010      	add	sp, #64	; 0x40
 8011f6a:	bdb0      	pop	{r4, r5, r7, pc}
 8011f6c:	08018c0c 	.word	0x08018c0c

08011f70 <USBPD_DPM_RequestCableReset>:
            The DFP has to be supplying VCONN prior to a Cable Reset
  * @param  PortNum The current port number
  * @retval USBPD Status
  */
USBPD_StatusTypeDef USBPD_DPM_RequestCableReset(uint8_t PortNum)
{
 8011f70:	b5b0      	push	{r4, r5, r7, lr}
 8011f72:	b092      	sub	sp, #72	; 0x48
 8011f74:	af02      	add	r7, sp, #8
 8011f76:	0002      	movs	r2, r0
 8011f78:	1dfb      	adds	r3, r7, #7
 8011f7a:	701a      	strb	r2, [r3, #0]
  USBPD_StatusTypeDef _status = USBPD_PE_Request_CableReset(PortNum);
 8011f7c:	253f      	movs	r5, #63	; 0x3f
 8011f7e:	197c      	adds	r4, r7, r5
 8011f80:	1dfb      	adds	r3, r7, #7
 8011f82:	781b      	ldrb	r3, [r3, #0]
 8011f84:	0018      	movs	r0, r3
 8011f86:	f7ee faa3 	bl	80004d0 <USBPD_PE_Request_CableReset>
 8011f8a:	0003      	movs	r3, r0
 8011f8c:	7023      	strb	r3, [r4, #0]
  DPM_USER_ERROR_TRACE(PortNum, _status, "CABLE RESET not accepted by the stack");
 8011f8e:	197b      	adds	r3, r7, r5
 8011f90:	781b      	ldrb	r3, [r3, #0]
 8011f92:	2b00      	cmp	r3, #0
 8011f94:	d027      	beq.n	8011fe6 <USBPD_DPM_RequestCableReset+0x76>
 8011f96:	4a17      	ldr	r2, [pc, #92]	; (8011ff4 <USBPD_DPM_RequestCableReset+0x84>)
 8011f98:	240c      	movs	r4, #12
 8011f9a:	193b      	adds	r3, r7, r4
 8011f9c:	2132      	movs	r1, #50	; 0x32
 8011f9e:	0018      	movs	r0, r3
 8011fa0:	f006 f8bc 	bl	801811c <sniprintf>
 8011fa4:	0002      	movs	r2, r0
 8011fa6:	213e      	movs	r1, #62	; 0x3e
 8011fa8:	187b      	adds	r3, r7, r1
 8011faa:	701a      	strb	r2, [r3, #0]
 8011fac:	187b      	adds	r3, r7, r1
 8011fae:	781b      	ldrb	r3, [r3, #0]
 8011fb0:	2b31      	cmp	r3, #49	; 0x31
 8011fb2:	d80d      	bhi.n	8011fd0 <USBPD_DPM_RequestCableReset+0x60>
 8011fb4:	193b      	adds	r3, r7, r4
 8011fb6:	0018      	movs	r0, r3
 8011fb8:	f7f4 f908 	bl	80061cc <strlen>
 8011fbc:	193a      	adds	r2, r7, r4
 8011fbe:	1dfb      	adds	r3, r7, #7
 8011fc0:	7819      	ldrb	r1, [r3, #0]
 8011fc2:	9000      	str	r0, [sp, #0]
 8011fc4:	0013      	movs	r3, r2
 8011fc6:	2200      	movs	r2, #0
 8011fc8:	2006      	movs	r0, #6
 8011fca:	f7f8 fe13 	bl	800abf4 <USBPD_TRACE_Add>
 8011fce:	e00a      	b.n	8011fe6 <USBPD_DPM_RequestCableReset+0x76>
 8011fd0:	230c      	movs	r3, #12
 8011fd2:	18fa      	adds	r2, r7, r3
 8011fd4:	1dfb      	adds	r3, r7, #7
 8011fd6:	7819      	ldrb	r1, [r3, #0]
 8011fd8:	2332      	movs	r3, #50	; 0x32
 8011fda:	9300      	str	r3, [sp, #0]
 8011fdc:	0013      	movs	r3, r2
 8011fde:	2200      	movs	r2, #0
 8011fe0:	2006      	movs	r0, #6
 8011fe2:	f7f8 fe07 	bl	800abf4 <USBPD_TRACE_Add>
  return _status;
 8011fe6:	233f      	movs	r3, #63	; 0x3f
 8011fe8:	18fb      	adds	r3, r7, r3
 8011fea:	781b      	ldrb	r3, [r3, #0]
}
 8011fec:	0018      	movs	r0, r3
 8011fee:	46bd      	mov	sp, r7
 8011ff0:	b010      	add	sp, #64	; 0x40
 8011ff2:	bdb0      	pop	{r4, r5, r7, pc}
 8011ff4:	08018c34 	.word	0x08018c34

08011ff8 <USBPD_DPM_RequestGotoMin>:
  * @brief  Request the PE to send a GOTOMIN message
  * @param  PortNum The current port number
  * @retval USBPD Status
  */
USBPD_StatusTypeDef USBPD_DPM_RequestGotoMin(uint8_t PortNum)
{
 8011ff8:	b5b0      	push	{r4, r5, r7, lr}
 8011ffa:	b092      	sub	sp, #72	; 0x48
 8011ffc:	af02      	add	r7, sp, #8
 8011ffe:	0002      	movs	r2, r0
 8012000:	1dfb      	adds	r3, r7, #7
 8012002:	701a      	strb	r2, [r3, #0]
  USBPD_StatusTypeDef _status = USBPD_PE_Request_CtrlMessage(PortNum, USBPD_CONTROLMSG_GOTOMIN, USBPD_SOPTYPE_SOP);
 8012004:	253f      	movs	r5, #63	; 0x3f
 8012006:	197c      	adds	r4, r7, r5
 8012008:	1dfb      	adds	r3, r7, #7
 801200a:	781b      	ldrb	r3, [r3, #0]
 801200c:	2200      	movs	r2, #0
 801200e:	2102      	movs	r1, #2
 8012010:	0018      	movs	r0, r3
 8012012:	f7ee fa77 	bl	8000504 <USBPD_PE_Request_CtrlMessage>
 8012016:	0003      	movs	r3, r0
 8012018:	7023      	strb	r3, [r4, #0]
  DPM_USER_ERROR_TRACE(PortNum, _status, "GOTOMIN not accepted by the stack");
 801201a:	197b      	adds	r3, r7, r5
 801201c:	781b      	ldrb	r3, [r3, #0]
 801201e:	2b00      	cmp	r3, #0
 8012020:	d027      	beq.n	8012072 <USBPD_DPM_RequestGotoMin+0x7a>
 8012022:	4a17      	ldr	r2, [pc, #92]	; (8012080 <USBPD_DPM_RequestGotoMin+0x88>)
 8012024:	240c      	movs	r4, #12
 8012026:	193b      	adds	r3, r7, r4
 8012028:	2132      	movs	r1, #50	; 0x32
 801202a:	0018      	movs	r0, r3
 801202c:	f006 f876 	bl	801811c <sniprintf>
 8012030:	0002      	movs	r2, r0
 8012032:	213e      	movs	r1, #62	; 0x3e
 8012034:	187b      	adds	r3, r7, r1
 8012036:	701a      	strb	r2, [r3, #0]
 8012038:	187b      	adds	r3, r7, r1
 801203a:	781b      	ldrb	r3, [r3, #0]
 801203c:	2b31      	cmp	r3, #49	; 0x31
 801203e:	d80d      	bhi.n	801205c <USBPD_DPM_RequestGotoMin+0x64>
 8012040:	193b      	adds	r3, r7, r4
 8012042:	0018      	movs	r0, r3
 8012044:	f7f4 f8c2 	bl	80061cc <strlen>
 8012048:	193a      	adds	r2, r7, r4
 801204a:	1dfb      	adds	r3, r7, #7
 801204c:	7819      	ldrb	r1, [r3, #0]
 801204e:	9000      	str	r0, [sp, #0]
 8012050:	0013      	movs	r3, r2
 8012052:	2200      	movs	r2, #0
 8012054:	2006      	movs	r0, #6
 8012056:	f7f8 fdcd 	bl	800abf4 <USBPD_TRACE_Add>
 801205a:	e00a      	b.n	8012072 <USBPD_DPM_RequestGotoMin+0x7a>
 801205c:	230c      	movs	r3, #12
 801205e:	18fa      	adds	r2, r7, r3
 8012060:	1dfb      	adds	r3, r7, #7
 8012062:	7819      	ldrb	r1, [r3, #0]
 8012064:	2332      	movs	r3, #50	; 0x32
 8012066:	9300      	str	r3, [sp, #0]
 8012068:	0013      	movs	r3, r2
 801206a:	2200      	movs	r2, #0
 801206c:	2006      	movs	r0, #6
 801206e:	f7f8 fdc1 	bl	800abf4 <USBPD_TRACE_Add>
  return _status;
 8012072:	233f      	movs	r3, #63	; 0x3f
 8012074:	18fb      	adds	r3, r7, r3
 8012076:	781b      	ldrb	r3, [r3, #0]
}
 8012078:	0018      	movs	r0, r3
 801207a:	46bd      	mov	sp, r7
 801207c:	b010      	add	sp, #64	; 0x40
 801207e:	bdb0      	pop	{r4, r5, r7, pc}
 8012080:	08018c5c 	.word	0x08018c5c

08012084 <USBPD_DPM_RequestPing>:
  *         If PD2.0 is used, PING timer needs to be implemented on user side.
  * @param  PortNum The current port number
  * @retval USBPD Status
  */
USBPD_StatusTypeDef USBPD_DPM_RequestPing(uint8_t PortNum)
{
 8012084:	b5b0      	push	{r4, r5, r7, lr}
 8012086:	b092      	sub	sp, #72	; 0x48
 8012088:	af02      	add	r7, sp, #8
 801208a:	0002      	movs	r2, r0
 801208c:	1dfb      	adds	r3, r7, #7
 801208e:	701a      	strb	r2, [r3, #0]
  USBPD_StatusTypeDef _status = USBPD_PE_Request_CtrlMessage(PortNum, USBPD_CONTROLMSG_PING, USBPD_SOPTYPE_SOP);
 8012090:	253f      	movs	r5, #63	; 0x3f
 8012092:	197c      	adds	r4, r7, r5
 8012094:	1dfb      	adds	r3, r7, #7
 8012096:	781b      	ldrb	r3, [r3, #0]
 8012098:	2200      	movs	r2, #0
 801209a:	2105      	movs	r1, #5
 801209c:	0018      	movs	r0, r3
 801209e:	f7ee fa31 	bl	8000504 <USBPD_PE_Request_CtrlMessage>
 80120a2:	0003      	movs	r3, r0
 80120a4:	7023      	strb	r3, [r4, #0]
  DPM_USER_ERROR_TRACE(PortNum, _status, "PING not accepted by the stack");
 80120a6:	197b      	adds	r3, r7, r5
 80120a8:	781b      	ldrb	r3, [r3, #0]
 80120aa:	2b00      	cmp	r3, #0
 80120ac:	d027      	beq.n	80120fe <USBPD_DPM_RequestPing+0x7a>
 80120ae:	4a17      	ldr	r2, [pc, #92]	; (801210c <USBPD_DPM_RequestPing+0x88>)
 80120b0:	240c      	movs	r4, #12
 80120b2:	193b      	adds	r3, r7, r4
 80120b4:	2132      	movs	r1, #50	; 0x32
 80120b6:	0018      	movs	r0, r3
 80120b8:	f006 f830 	bl	801811c <sniprintf>
 80120bc:	0002      	movs	r2, r0
 80120be:	213e      	movs	r1, #62	; 0x3e
 80120c0:	187b      	adds	r3, r7, r1
 80120c2:	701a      	strb	r2, [r3, #0]
 80120c4:	187b      	adds	r3, r7, r1
 80120c6:	781b      	ldrb	r3, [r3, #0]
 80120c8:	2b31      	cmp	r3, #49	; 0x31
 80120ca:	d80d      	bhi.n	80120e8 <USBPD_DPM_RequestPing+0x64>
 80120cc:	193b      	adds	r3, r7, r4
 80120ce:	0018      	movs	r0, r3
 80120d0:	f7f4 f87c 	bl	80061cc <strlen>
 80120d4:	193a      	adds	r2, r7, r4
 80120d6:	1dfb      	adds	r3, r7, #7
 80120d8:	7819      	ldrb	r1, [r3, #0]
 80120da:	9000      	str	r0, [sp, #0]
 80120dc:	0013      	movs	r3, r2
 80120de:	2200      	movs	r2, #0
 80120e0:	2006      	movs	r0, #6
 80120e2:	f7f8 fd87 	bl	800abf4 <USBPD_TRACE_Add>
 80120e6:	e00a      	b.n	80120fe <USBPD_DPM_RequestPing+0x7a>
 80120e8:	230c      	movs	r3, #12
 80120ea:	18fa      	adds	r2, r7, r3
 80120ec:	1dfb      	adds	r3, r7, #7
 80120ee:	7819      	ldrb	r1, [r3, #0]
 80120f0:	2332      	movs	r3, #50	; 0x32
 80120f2:	9300      	str	r3, [sp, #0]
 80120f4:	0013      	movs	r3, r2
 80120f6:	2200      	movs	r2, #0
 80120f8:	2006      	movs	r0, #6
 80120fa:	f7f8 fd7b 	bl	800abf4 <USBPD_TRACE_Add>
  return _status;
 80120fe:	233f      	movs	r3, #63	; 0x3f
 8012100:	18fb      	adds	r3, r7, r3
 8012102:	781b      	ldrb	r3, [r3, #0]
}
 8012104:	0018      	movs	r0, r3
 8012106:	46bd      	mov	sp, r7
 8012108:	b010      	add	sp, #64	; 0x40
 801210a:	bdb0      	pop	{r4, r5, r7, pc}
 801210c:	08018c80 	.word	0x08018c80

08012110 <USBPD_DPM_RequestMessageRequest>:
  * @param  IndexSrcPDO Index on the selected SRC PDO (value between 1 to 7)
  * @param  RequestedVoltage Requested voltage (in MV and use mainly for APDO)
  * @retval USBPD Status
  */
USBPD_StatusTypeDef USBPD_DPM_RequestMessageRequest(uint8_t PortNum, uint8_t IndexSrcPDO, uint16_t RequestedVoltage)
{
 8012110:	b590      	push	{r4, r7, lr}
 8012112:	b093      	sub	sp, #76	; 0x4c
 8012114:	af02      	add	r7, sp, #8
 8012116:	0004      	movs	r4, r0
 8012118:	0008      	movs	r0, r1
 801211a:	0011      	movs	r1, r2
 801211c:	1dfb      	adds	r3, r7, #7
 801211e:	1c22      	adds	r2, r4, #0
 8012120:	701a      	strb	r2, [r3, #0]
 8012122:	1dbb      	adds	r3, r7, #6
 8012124:	1c02      	adds	r2, r0, #0
 8012126:	701a      	strb	r2, [r3, #0]
 8012128:	1d3b      	adds	r3, r7, #4
 801212a:	1c0a      	adds	r2, r1, #0
 801212c:	801a      	strh	r2, [r3, #0]
  USBPD_StatusTypeDef _status = USBPD_ERROR;
 801212e:	233f      	movs	r3, #63	; 0x3f
 8012130:	18fb      	adds	r3, r7, r3
 8012132:	2202      	movs	r2, #2
 8012134:	701a      	strb	r2, [r3, #0]
/* USER CODE BEGIN USBPD_DPM_RequestMessageRequest */
  /* To be adapted to call the PE function */
  /*       _status = USBPD_PE_Send_Request(PortNum, rdo.d32, pdo_object);*/
  DPM_USER_DEBUG_TRACE(PortNum, "ADVICE: update USBPD_DPM_RequestMessageRequest");
 8012136:	4a2e      	ldr	r2, [pc, #184]	; (80121f0 <USBPD_DPM_RequestMessageRequest+0xe0>)
 8012138:	2408      	movs	r4, #8
 801213a:	193b      	adds	r3, r7, r4
 801213c:	2132      	movs	r1, #50	; 0x32
 801213e:	0018      	movs	r0, r3
 8012140:	f005 ffec 	bl	801811c <sniprintf>
 8012144:	0002      	movs	r2, r0
 8012146:	213e      	movs	r1, #62	; 0x3e
 8012148:	187b      	adds	r3, r7, r1
 801214a:	701a      	strb	r2, [r3, #0]
 801214c:	187b      	adds	r3, r7, r1
 801214e:	781b      	ldrb	r3, [r3, #0]
 8012150:	2b31      	cmp	r3, #49	; 0x31
 8012152:	d80d      	bhi.n	8012170 <USBPD_DPM_RequestMessageRequest+0x60>
 8012154:	193b      	adds	r3, r7, r4
 8012156:	0018      	movs	r0, r3
 8012158:	f7f4 f838 	bl	80061cc <strlen>
 801215c:	193a      	adds	r2, r7, r4
 801215e:	1dfb      	adds	r3, r7, #7
 8012160:	7819      	ldrb	r1, [r3, #0]
 8012162:	9000      	str	r0, [sp, #0]
 8012164:	0013      	movs	r3, r2
 8012166:	2200      	movs	r2, #0
 8012168:	2006      	movs	r0, #6
 801216a:	f7f8 fd43 	bl	800abf4 <USBPD_TRACE_Add>
 801216e:	e00a      	b.n	8012186 <USBPD_DPM_RequestMessageRequest+0x76>
 8012170:	2308      	movs	r3, #8
 8012172:	18fa      	adds	r2, r7, r3
 8012174:	1dfb      	adds	r3, r7, #7
 8012176:	7819      	ldrb	r1, [r3, #0]
 8012178:	2332      	movs	r3, #50	; 0x32
 801217a:	9300      	str	r3, [sp, #0]
 801217c:	0013      	movs	r3, r2
 801217e:	2200      	movs	r2, #0
 8012180:	2006      	movs	r0, #6
 8012182:	f7f8 fd37 	bl	800abf4 <USBPD_TRACE_Add>
/* USER CODE END USBPD_DPM_RequestMessageRequest */
  DPM_USER_ERROR_TRACE(PortNum, _status, "REQUEST not accepted by the stack");
 8012186:	233f      	movs	r3, #63	; 0x3f
 8012188:	18fb      	adds	r3, r7, r3
 801218a:	781b      	ldrb	r3, [r3, #0]
 801218c:	2b00      	cmp	r3, #0
 801218e:	d027      	beq.n	80121e0 <USBPD_DPM_RequestMessageRequest+0xd0>
 8012190:	4a18      	ldr	r2, [pc, #96]	; (80121f4 <USBPD_DPM_RequestMessageRequest+0xe4>)
 8012192:	2408      	movs	r4, #8
 8012194:	193b      	adds	r3, r7, r4
 8012196:	2132      	movs	r1, #50	; 0x32
 8012198:	0018      	movs	r0, r3
 801219a:	f005 ffbf 	bl	801811c <sniprintf>
 801219e:	0002      	movs	r2, r0
 80121a0:	213d      	movs	r1, #61	; 0x3d
 80121a2:	187b      	adds	r3, r7, r1
 80121a4:	701a      	strb	r2, [r3, #0]
 80121a6:	187b      	adds	r3, r7, r1
 80121a8:	781b      	ldrb	r3, [r3, #0]
 80121aa:	2b31      	cmp	r3, #49	; 0x31
 80121ac:	d80d      	bhi.n	80121ca <USBPD_DPM_RequestMessageRequest+0xba>
 80121ae:	193b      	adds	r3, r7, r4
 80121b0:	0018      	movs	r0, r3
 80121b2:	f7f4 f80b 	bl	80061cc <strlen>
 80121b6:	193a      	adds	r2, r7, r4
 80121b8:	1dfb      	adds	r3, r7, #7
 80121ba:	7819      	ldrb	r1, [r3, #0]
 80121bc:	9000      	str	r0, [sp, #0]
 80121be:	0013      	movs	r3, r2
 80121c0:	2200      	movs	r2, #0
 80121c2:	2006      	movs	r0, #6
 80121c4:	f7f8 fd16 	bl	800abf4 <USBPD_TRACE_Add>
 80121c8:	e00a      	b.n	80121e0 <USBPD_DPM_RequestMessageRequest+0xd0>
 80121ca:	2308      	movs	r3, #8
 80121cc:	18fa      	adds	r2, r7, r3
 80121ce:	1dfb      	adds	r3, r7, #7
 80121d0:	7819      	ldrb	r1, [r3, #0]
 80121d2:	2332      	movs	r3, #50	; 0x32
 80121d4:	9300      	str	r3, [sp, #0]
 80121d6:	0013      	movs	r3, r2
 80121d8:	2200      	movs	r2, #0
 80121da:	2006      	movs	r0, #6
 80121dc:	f7f8 fd0a 	bl	800abf4 <USBPD_TRACE_Add>
  return _status;
 80121e0:	233f      	movs	r3, #63	; 0x3f
 80121e2:	18fb      	adds	r3, r7, r3
 80121e4:	781b      	ldrb	r3, [r3, #0]
}
 80121e6:	0018      	movs	r0, r3
 80121e8:	46bd      	mov	sp, r7
 80121ea:	b011      	add	sp, #68	; 0x44
 80121ec:	bd90      	pop	{r4, r7, pc}
 80121ee:	46c0      	nop			; (mov r8, r8)
 80121f0:	08018ca0 	.word	0x08018ca0
 80121f4:	08018cd0 	.word	0x08018cd0

080121f8 <USBPD_DPM_RequestGetSourceCapability>:
  * @brief  Request the PE to send a GET_SRC_CAPA message
  * @param  PortNum The current port number
  * @retval USBPD Status
  */
USBPD_StatusTypeDef USBPD_DPM_RequestGetSourceCapability(uint8_t PortNum)
{
 80121f8:	b5b0      	push	{r4, r5, r7, lr}
 80121fa:	b092      	sub	sp, #72	; 0x48
 80121fc:	af02      	add	r7, sp, #8
 80121fe:	0002      	movs	r2, r0
 8012200:	1dfb      	adds	r3, r7, #7
 8012202:	701a      	strb	r2, [r3, #0]
  USBPD_StatusTypeDef _status = USBPD_PE_Request_CtrlMessage(PortNum, USBPD_CONTROLMSG_GET_SRC_CAP, USBPD_SOPTYPE_SOP);
 8012204:	253f      	movs	r5, #63	; 0x3f
 8012206:	197c      	adds	r4, r7, r5
 8012208:	1dfb      	adds	r3, r7, #7
 801220a:	781b      	ldrb	r3, [r3, #0]
 801220c:	2200      	movs	r2, #0
 801220e:	2107      	movs	r1, #7
 8012210:	0018      	movs	r0, r3
 8012212:	f7ee f977 	bl	8000504 <USBPD_PE_Request_CtrlMessage>
 8012216:	0003      	movs	r3, r0
 8012218:	7023      	strb	r3, [r4, #0]
  DPM_USER_ERROR_TRACE(PortNum, _status, "GET_SRC_CAPA not accepted by the stack");
 801221a:	197b      	adds	r3, r7, r5
 801221c:	781b      	ldrb	r3, [r3, #0]
 801221e:	2b00      	cmp	r3, #0
 8012220:	d027      	beq.n	8012272 <USBPD_DPM_RequestGetSourceCapability+0x7a>
 8012222:	4a17      	ldr	r2, [pc, #92]	; (8012280 <USBPD_DPM_RequestGetSourceCapability+0x88>)
 8012224:	240c      	movs	r4, #12
 8012226:	193b      	adds	r3, r7, r4
 8012228:	2132      	movs	r1, #50	; 0x32
 801222a:	0018      	movs	r0, r3
 801222c:	f005 ff76 	bl	801811c <sniprintf>
 8012230:	0002      	movs	r2, r0
 8012232:	213e      	movs	r1, #62	; 0x3e
 8012234:	187b      	adds	r3, r7, r1
 8012236:	701a      	strb	r2, [r3, #0]
 8012238:	187b      	adds	r3, r7, r1
 801223a:	781b      	ldrb	r3, [r3, #0]
 801223c:	2b31      	cmp	r3, #49	; 0x31
 801223e:	d80d      	bhi.n	801225c <USBPD_DPM_RequestGetSourceCapability+0x64>
 8012240:	193b      	adds	r3, r7, r4
 8012242:	0018      	movs	r0, r3
 8012244:	f7f3 ffc2 	bl	80061cc <strlen>
 8012248:	193a      	adds	r2, r7, r4
 801224a:	1dfb      	adds	r3, r7, #7
 801224c:	7819      	ldrb	r1, [r3, #0]
 801224e:	9000      	str	r0, [sp, #0]
 8012250:	0013      	movs	r3, r2
 8012252:	2200      	movs	r2, #0
 8012254:	2006      	movs	r0, #6
 8012256:	f7f8 fccd 	bl	800abf4 <USBPD_TRACE_Add>
 801225a:	e00a      	b.n	8012272 <USBPD_DPM_RequestGetSourceCapability+0x7a>
 801225c:	230c      	movs	r3, #12
 801225e:	18fa      	adds	r2, r7, r3
 8012260:	1dfb      	adds	r3, r7, #7
 8012262:	7819      	ldrb	r1, [r3, #0]
 8012264:	2332      	movs	r3, #50	; 0x32
 8012266:	9300      	str	r3, [sp, #0]
 8012268:	0013      	movs	r3, r2
 801226a:	2200      	movs	r2, #0
 801226c:	2006      	movs	r0, #6
 801226e:	f7f8 fcc1 	bl	800abf4 <USBPD_TRACE_Add>
  return _status;
 8012272:	233f      	movs	r3, #63	; 0x3f
 8012274:	18fb      	adds	r3, r7, r3
 8012276:	781b      	ldrb	r3, [r3, #0]
}
 8012278:	0018      	movs	r0, r3
 801227a:	46bd      	mov	sp, r7
 801227c:	b010      	add	sp, #64	; 0x40
 801227e:	bdb0      	pop	{r4, r5, r7, pc}
 8012280:	08018cf4 	.word	0x08018cf4

08012284 <USBPD_DPM_RequestGetSinkCapability>:
  * @brief  Request the PE to send a GET_SNK_CAPA message
  * @param  PortNum The current port number
  * @retval USBPD Status
  */
USBPD_StatusTypeDef USBPD_DPM_RequestGetSinkCapability(uint8_t PortNum)
{
 8012284:	b5b0      	push	{r4, r5, r7, lr}
 8012286:	b092      	sub	sp, #72	; 0x48
 8012288:	af02      	add	r7, sp, #8
 801228a:	0002      	movs	r2, r0
 801228c:	1dfb      	adds	r3, r7, #7
 801228e:	701a      	strb	r2, [r3, #0]
  USBPD_StatusTypeDef _status = USBPD_PE_Request_CtrlMessage(PortNum, USBPD_CONTROLMSG_GET_SNK_CAP, USBPD_SOPTYPE_SOP);
 8012290:	253f      	movs	r5, #63	; 0x3f
 8012292:	197c      	adds	r4, r7, r5
 8012294:	1dfb      	adds	r3, r7, #7
 8012296:	781b      	ldrb	r3, [r3, #0]
 8012298:	2200      	movs	r2, #0
 801229a:	2108      	movs	r1, #8
 801229c:	0018      	movs	r0, r3
 801229e:	f7ee f931 	bl	8000504 <USBPD_PE_Request_CtrlMessage>
 80122a2:	0003      	movs	r3, r0
 80122a4:	7023      	strb	r3, [r4, #0]
  DPM_USER_ERROR_TRACE(PortNum, _status, "GET_SINK_CAPA not accepted by the stack");
 80122a6:	197b      	adds	r3, r7, r5
 80122a8:	781b      	ldrb	r3, [r3, #0]
 80122aa:	2b00      	cmp	r3, #0
 80122ac:	d027      	beq.n	80122fe <USBPD_DPM_RequestGetSinkCapability+0x7a>
 80122ae:	4a17      	ldr	r2, [pc, #92]	; (801230c <USBPD_DPM_RequestGetSinkCapability+0x88>)
 80122b0:	240c      	movs	r4, #12
 80122b2:	193b      	adds	r3, r7, r4
 80122b4:	2132      	movs	r1, #50	; 0x32
 80122b6:	0018      	movs	r0, r3
 80122b8:	f005 ff30 	bl	801811c <sniprintf>
 80122bc:	0002      	movs	r2, r0
 80122be:	213e      	movs	r1, #62	; 0x3e
 80122c0:	187b      	adds	r3, r7, r1
 80122c2:	701a      	strb	r2, [r3, #0]
 80122c4:	187b      	adds	r3, r7, r1
 80122c6:	781b      	ldrb	r3, [r3, #0]
 80122c8:	2b31      	cmp	r3, #49	; 0x31
 80122ca:	d80d      	bhi.n	80122e8 <USBPD_DPM_RequestGetSinkCapability+0x64>
 80122cc:	193b      	adds	r3, r7, r4
 80122ce:	0018      	movs	r0, r3
 80122d0:	f7f3 ff7c 	bl	80061cc <strlen>
 80122d4:	193a      	adds	r2, r7, r4
 80122d6:	1dfb      	adds	r3, r7, #7
 80122d8:	7819      	ldrb	r1, [r3, #0]
 80122da:	9000      	str	r0, [sp, #0]
 80122dc:	0013      	movs	r3, r2
 80122de:	2200      	movs	r2, #0
 80122e0:	2006      	movs	r0, #6
 80122e2:	f7f8 fc87 	bl	800abf4 <USBPD_TRACE_Add>
 80122e6:	e00a      	b.n	80122fe <USBPD_DPM_RequestGetSinkCapability+0x7a>
 80122e8:	230c      	movs	r3, #12
 80122ea:	18fa      	adds	r2, r7, r3
 80122ec:	1dfb      	adds	r3, r7, #7
 80122ee:	7819      	ldrb	r1, [r3, #0]
 80122f0:	2332      	movs	r3, #50	; 0x32
 80122f2:	9300      	str	r3, [sp, #0]
 80122f4:	0013      	movs	r3, r2
 80122f6:	2200      	movs	r2, #0
 80122f8:	2006      	movs	r0, #6
 80122fa:	f7f8 fc7b 	bl	800abf4 <USBPD_TRACE_Add>
  return _status;
 80122fe:	233f      	movs	r3, #63	; 0x3f
 8012300:	18fb      	adds	r3, r7, r3
 8012302:	781b      	ldrb	r3, [r3, #0]
}
 8012304:	0018      	movs	r0, r3
 8012306:	46bd      	mov	sp, r7
 8012308:	b010      	add	sp, #64	; 0x40
 801230a:	bdb0      	pop	{r4, r5, r7, pc}
 801230c:	08018d1c 	.word	0x08018d1c

08012310 <USBPD_DPM_RequestDataRoleSwap>:
  * @brief  Request the PE to perform a Data Role Swap.
  * @param  PortNum The current port number
  * @retval USBPD Status
  */
USBPD_StatusTypeDef USBPD_DPM_RequestDataRoleSwap(uint8_t PortNum)
{
 8012310:	b5b0      	push	{r4, r5, r7, lr}
 8012312:	b092      	sub	sp, #72	; 0x48
 8012314:	af02      	add	r7, sp, #8
 8012316:	0002      	movs	r2, r0
 8012318:	1dfb      	adds	r3, r7, #7
 801231a:	701a      	strb	r2, [r3, #0]
  USBPD_StatusTypeDef _status = USBPD_PE_Request_CtrlMessage(PortNum, USBPD_CONTROLMSG_DR_SWAP, USBPD_SOPTYPE_SOP);
 801231c:	253f      	movs	r5, #63	; 0x3f
 801231e:	197c      	adds	r4, r7, r5
 8012320:	1dfb      	adds	r3, r7, #7
 8012322:	781b      	ldrb	r3, [r3, #0]
 8012324:	2200      	movs	r2, #0
 8012326:	2109      	movs	r1, #9
 8012328:	0018      	movs	r0, r3
 801232a:	f7ee f8eb 	bl	8000504 <USBPD_PE_Request_CtrlMessage>
 801232e:	0003      	movs	r3, r0
 8012330:	7023      	strb	r3, [r4, #0]
  DPM_USER_ERROR_TRACE(PortNum, _status, "DRS not accepted by the stack");
 8012332:	197b      	adds	r3, r7, r5
 8012334:	781b      	ldrb	r3, [r3, #0]
 8012336:	2b00      	cmp	r3, #0
 8012338:	d027      	beq.n	801238a <USBPD_DPM_RequestDataRoleSwap+0x7a>
 801233a:	4a17      	ldr	r2, [pc, #92]	; (8012398 <USBPD_DPM_RequestDataRoleSwap+0x88>)
 801233c:	240c      	movs	r4, #12
 801233e:	193b      	adds	r3, r7, r4
 8012340:	2132      	movs	r1, #50	; 0x32
 8012342:	0018      	movs	r0, r3
 8012344:	f005 feea 	bl	801811c <sniprintf>
 8012348:	0002      	movs	r2, r0
 801234a:	213e      	movs	r1, #62	; 0x3e
 801234c:	187b      	adds	r3, r7, r1
 801234e:	701a      	strb	r2, [r3, #0]
 8012350:	187b      	adds	r3, r7, r1
 8012352:	781b      	ldrb	r3, [r3, #0]
 8012354:	2b31      	cmp	r3, #49	; 0x31
 8012356:	d80d      	bhi.n	8012374 <USBPD_DPM_RequestDataRoleSwap+0x64>
 8012358:	193b      	adds	r3, r7, r4
 801235a:	0018      	movs	r0, r3
 801235c:	f7f3 ff36 	bl	80061cc <strlen>
 8012360:	193a      	adds	r2, r7, r4
 8012362:	1dfb      	adds	r3, r7, #7
 8012364:	7819      	ldrb	r1, [r3, #0]
 8012366:	9000      	str	r0, [sp, #0]
 8012368:	0013      	movs	r3, r2
 801236a:	2200      	movs	r2, #0
 801236c:	2006      	movs	r0, #6
 801236e:	f7f8 fc41 	bl	800abf4 <USBPD_TRACE_Add>
 8012372:	e00a      	b.n	801238a <USBPD_DPM_RequestDataRoleSwap+0x7a>
 8012374:	230c      	movs	r3, #12
 8012376:	18fa      	adds	r2, r7, r3
 8012378:	1dfb      	adds	r3, r7, #7
 801237a:	7819      	ldrb	r1, [r3, #0]
 801237c:	2332      	movs	r3, #50	; 0x32
 801237e:	9300      	str	r3, [sp, #0]
 8012380:	0013      	movs	r3, r2
 8012382:	2200      	movs	r2, #0
 8012384:	2006      	movs	r0, #6
 8012386:	f7f8 fc35 	bl	800abf4 <USBPD_TRACE_Add>
  return _status;
 801238a:	233f      	movs	r3, #63	; 0x3f
 801238c:	18fb      	adds	r3, r7, r3
 801238e:	781b      	ldrb	r3, [r3, #0]
}
 8012390:	0018      	movs	r0, r3
 8012392:	46bd      	mov	sp, r7
 8012394:	b010      	add	sp, #64	; 0x40
 8012396:	bdb0      	pop	{r4, r5, r7, pc}
 8012398:	08018d44 	.word	0x08018d44

0801239c <USBPD_DPM_RequestPowerRoleSwap>:
  * @brief  Request the PE to perform a Power Role Swap.
  * @param  PortNum The current port number
  * @retval USBPD Status
  */
USBPD_StatusTypeDef USBPD_DPM_RequestPowerRoleSwap(uint8_t PortNum)
{
 801239c:	b590      	push	{r4, r7, lr}
 801239e:	b093      	sub	sp, #76	; 0x4c
 80123a0:	af02      	add	r7, sp, #8
 80123a2:	0002      	movs	r2, r0
 80123a4:	1dfb      	adds	r3, r7, #7
 80123a6:	701a      	strb	r2, [r3, #0]
  DPM_USER_ERROR_TRACE(PortNum, USBPD_ERROR, "PRS not accepted by the stack");
 80123a8:	4a16      	ldr	r2, [pc, #88]	; (8012404 <USBPD_DPM_RequestPowerRoleSwap+0x68>)
 80123aa:	240c      	movs	r4, #12
 80123ac:	193b      	adds	r3, r7, r4
 80123ae:	2132      	movs	r1, #50	; 0x32
 80123b0:	0018      	movs	r0, r3
 80123b2:	f005 feb3 	bl	801811c <sniprintf>
 80123b6:	0002      	movs	r2, r0
 80123b8:	213f      	movs	r1, #63	; 0x3f
 80123ba:	187b      	adds	r3, r7, r1
 80123bc:	701a      	strb	r2, [r3, #0]
 80123be:	187b      	adds	r3, r7, r1
 80123c0:	781b      	ldrb	r3, [r3, #0]
 80123c2:	2b31      	cmp	r3, #49	; 0x31
 80123c4:	d80d      	bhi.n	80123e2 <USBPD_DPM_RequestPowerRoleSwap+0x46>
 80123c6:	193b      	adds	r3, r7, r4
 80123c8:	0018      	movs	r0, r3
 80123ca:	f7f3 feff 	bl	80061cc <strlen>
 80123ce:	193a      	adds	r2, r7, r4
 80123d0:	1dfb      	adds	r3, r7, #7
 80123d2:	7819      	ldrb	r1, [r3, #0]
 80123d4:	9000      	str	r0, [sp, #0]
 80123d6:	0013      	movs	r3, r2
 80123d8:	2200      	movs	r2, #0
 80123da:	2006      	movs	r0, #6
 80123dc:	f7f8 fc0a 	bl	800abf4 <USBPD_TRACE_Add>
 80123e0:	e00a      	b.n	80123f8 <USBPD_DPM_RequestPowerRoleSwap+0x5c>
 80123e2:	230c      	movs	r3, #12
 80123e4:	18fa      	adds	r2, r7, r3
 80123e6:	1dfb      	adds	r3, r7, #7
 80123e8:	7819      	ldrb	r1, [r3, #0]
 80123ea:	2332      	movs	r3, #50	; 0x32
 80123ec:	9300      	str	r3, [sp, #0]
 80123ee:	0013      	movs	r3, r2
 80123f0:	2200      	movs	r2, #0
 80123f2:	2006      	movs	r0, #6
 80123f4:	f7f8 fbfe 	bl	800abf4 <USBPD_TRACE_Add>
  return USBPD_ERROR;
 80123f8:	2302      	movs	r3, #2
}
 80123fa:	0018      	movs	r0, r3
 80123fc:	46bd      	mov	sp, r7
 80123fe:	b011      	add	sp, #68	; 0x44
 8012400:	bd90      	pop	{r4, r7, pc}
 8012402:	46c0      	nop			; (mov r8, r8)
 8012404:	08018d64 	.word	0x08018d64

08012408 <USBPD_DPM_RequestVconnSwap>:
  * @brief  Request the PE to perform a VCONN Swap.
  * @param  PortNum The current port number
  * @retval USBPD Status
  */
USBPD_StatusTypeDef USBPD_DPM_RequestVconnSwap(uint8_t PortNum)
{
 8012408:	b5b0      	push	{r4, r5, r7, lr}
 801240a:	b092      	sub	sp, #72	; 0x48
 801240c:	af02      	add	r7, sp, #8
 801240e:	0002      	movs	r2, r0
 8012410:	1dfb      	adds	r3, r7, #7
 8012412:	701a      	strb	r2, [r3, #0]
  USBPD_StatusTypeDef _status = USBPD_PE_Request_CtrlMessage(PortNum, USBPD_CONTROLMSG_VCONN_SWAP, USBPD_SOPTYPE_SOP);
 8012414:	253f      	movs	r5, #63	; 0x3f
 8012416:	197c      	adds	r4, r7, r5
 8012418:	1dfb      	adds	r3, r7, #7
 801241a:	781b      	ldrb	r3, [r3, #0]
 801241c:	2200      	movs	r2, #0
 801241e:	210b      	movs	r1, #11
 8012420:	0018      	movs	r0, r3
 8012422:	f7ee f86f 	bl	8000504 <USBPD_PE_Request_CtrlMessage>
 8012426:	0003      	movs	r3, r0
 8012428:	7023      	strb	r3, [r4, #0]
  DPM_USER_ERROR_TRACE(PortNum, _status, "VCS not accepted by the stack");
 801242a:	197b      	adds	r3, r7, r5
 801242c:	781b      	ldrb	r3, [r3, #0]
 801242e:	2b00      	cmp	r3, #0
 8012430:	d027      	beq.n	8012482 <USBPD_DPM_RequestVconnSwap+0x7a>
 8012432:	4a17      	ldr	r2, [pc, #92]	; (8012490 <USBPD_DPM_RequestVconnSwap+0x88>)
 8012434:	240c      	movs	r4, #12
 8012436:	193b      	adds	r3, r7, r4
 8012438:	2132      	movs	r1, #50	; 0x32
 801243a:	0018      	movs	r0, r3
 801243c:	f005 fe6e 	bl	801811c <sniprintf>
 8012440:	0002      	movs	r2, r0
 8012442:	213e      	movs	r1, #62	; 0x3e
 8012444:	187b      	adds	r3, r7, r1
 8012446:	701a      	strb	r2, [r3, #0]
 8012448:	187b      	adds	r3, r7, r1
 801244a:	781b      	ldrb	r3, [r3, #0]
 801244c:	2b31      	cmp	r3, #49	; 0x31
 801244e:	d80d      	bhi.n	801246c <USBPD_DPM_RequestVconnSwap+0x64>
 8012450:	193b      	adds	r3, r7, r4
 8012452:	0018      	movs	r0, r3
 8012454:	f7f3 feba 	bl	80061cc <strlen>
 8012458:	193a      	adds	r2, r7, r4
 801245a:	1dfb      	adds	r3, r7, #7
 801245c:	7819      	ldrb	r1, [r3, #0]
 801245e:	9000      	str	r0, [sp, #0]
 8012460:	0013      	movs	r3, r2
 8012462:	2200      	movs	r2, #0
 8012464:	2006      	movs	r0, #6
 8012466:	f7f8 fbc5 	bl	800abf4 <USBPD_TRACE_Add>
 801246a:	e00a      	b.n	8012482 <USBPD_DPM_RequestVconnSwap+0x7a>
 801246c:	230c      	movs	r3, #12
 801246e:	18fa      	adds	r2, r7, r3
 8012470:	1dfb      	adds	r3, r7, #7
 8012472:	7819      	ldrb	r1, [r3, #0]
 8012474:	2332      	movs	r3, #50	; 0x32
 8012476:	9300      	str	r3, [sp, #0]
 8012478:	0013      	movs	r3, r2
 801247a:	2200      	movs	r2, #0
 801247c:	2006      	movs	r0, #6
 801247e:	f7f8 fbb9 	bl	800abf4 <USBPD_TRACE_Add>
  return _status;
 8012482:	233f      	movs	r3, #63	; 0x3f
 8012484:	18fb      	adds	r3, r7, r3
 8012486:	781b      	ldrb	r3, [r3, #0]
}
 8012488:	0018      	movs	r0, r3
 801248a:	46bd      	mov	sp, r7
 801248c:	b010      	add	sp, #64	; 0x40
 801248e:	bdb0      	pop	{r4, r5, r7, pc}
 8012490:	08018d84 	.word	0x08018d84

08012494 <USBPD_DPM_RequestSoftReset>:
  * @param  PortNum The current port number
  * @param  SOPType SOP Type based on @ref USBPD_SOPType_TypeDef
  * @retval USBPD Status
  */
USBPD_StatusTypeDef USBPD_DPM_RequestSoftReset(uint8_t PortNum, USBPD_SOPType_TypeDef SOPType)
{
 8012494:	b5b0      	push	{r4, r5, r7, lr}
 8012496:	b092      	sub	sp, #72	; 0x48
 8012498:	af02      	add	r7, sp, #8
 801249a:	0002      	movs	r2, r0
 801249c:	1dfb      	adds	r3, r7, #7
 801249e:	701a      	strb	r2, [r3, #0]
 80124a0:	1dbb      	adds	r3, r7, #6
 80124a2:	1c0a      	adds	r2, r1, #0
 80124a4:	701a      	strb	r2, [r3, #0]
  USBPD_StatusTypeDef _status = USBPD_PE_Request_CtrlMessage(PortNum, USBPD_CONTROLMSG_SOFT_RESET, SOPType);
 80124a6:	253f      	movs	r5, #63	; 0x3f
 80124a8:	197c      	adds	r4, r7, r5
 80124aa:	1dbb      	adds	r3, r7, #6
 80124ac:	781a      	ldrb	r2, [r3, #0]
 80124ae:	1dfb      	adds	r3, r7, #7
 80124b0:	781b      	ldrb	r3, [r3, #0]
 80124b2:	210d      	movs	r1, #13
 80124b4:	0018      	movs	r0, r3
 80124b6:	f7ee f825 	bl	8000504 <USBPD_PE_Request_CtrlMessage>
 80124ba:	0003      	movs	r3, r0
 80124bc:	7023      	strb	r3, [r4, #0]
  DPM_USER_ERROR_TRACE(PortNum, _status, "SOFT_RESET not accepted by the stack");
 80124be:	197b      	adds	r3, r7, r5
 80124c0:	781b      	ldrb	r3, [r3, #0]
 80124c2:	2b00      	cmp	r3, #0
 80124c4:	d027      	beq.n	8012516 <USBPD_DPM_RequestSoftReset+0x82>
 80124c6:	4a17      	ldr	r2, [pc, #92]	; (8012524 <USBPD_DPM_RequestSoftReset+0x90>)
 80124c8:	240c      	movs	r4, #12
 80124ca:	193b      	adds	r3, r7, r4
 80124cc:	2132      	movs	r1, #50	; 0x32
 80124ce:	0018      	movs	r0, r3
 80124d0:	f005 fe24 	bl	801811c <sniprintf>
 80124d4:	0002      	movs	r2, r0
 80124d6:	213e      	movs	r1, #62	; 0x3e
 80124d8:	187b      	adds	r3, r7, r1
 80124da:	701a      	strb	r2, [r3, #0]
 80124dc:	187b      	adds	r3, r7, r1
 80124de:	781b      	ldrb	r3, [r3, #0]
 80124e0:	2b31      	cmp	r3, #49	; 0x31
 80124e2:	d80d      	bhi.n	8012500 <USBPD_DPM_RequestSoftReset+0x6c>
 80124e4:	193b      	adds	r3, r7, r4
 80124e6:	0018      	movs	r0, r3
 80124e8:	f7f3 fe70 	bl	80061cc <strlen>
 80124ec:	193a      	adds	r2, r7, r4
 80124ee:	1dfb      	adds	r3, r7, #7
 80124f0:	7819      	ldrb	r1, [r3, #0]
 80124f2:	9000      	str	r0, [sp, #0]
 80124f4:	0013      	movs	r3, r2
 80124f6:	2200      	movs	r2, #0
 80124f8:	2006      	movs	r0, #6
 80124fa:	f7f8 fb7b 	bl	800abf4 <USBPD_TRACE_Add>
 80124fe:	e00a      	b.n	8012516 <USBPD_DPM_RequestSoftReset+0x82>
 8012500:	230c      	movs	r3, #12
 8012502:	18fa      	adds	r2, r7, r3
 8012504:	1dfb      	adds	r3, r7, #7
 8012506:	7819      	ldrb	r1, [r3, #0]
 8012508:	2332      	movs	r3, #50	; 0x32
 801250a:	9300      	str	r3, [sp, #0]
 801250c:	0013      	movs	r3, r2
 801250e:	2200      	movs	r2, #0
 8012510:	2006      	movs	r0, #6
 8012512:	f7f8 fb6f 	bl	800abf4 <USBPD_TRACE_Add>
  return _status;
 8012516:	233f      	movs	r3, #63	; 0x3f
 8012518:	18fb      	adds	r3, r7, r3
 801251a:	781b      	ldrb	r3, [r3, #0]
}
 801251c:	0018      	movs	r0, r3
 801251e:	46bd      	mov	sp, r7
 8012520:	b010      	add	sp, #64	; 0x40
 8012522:	bdb0      	pop	{r4, r5, r7, pc}
 8012524:	08018da4 	.word	0x08018da4

08012528 <USBPD_DPM_RequestSourceCapability>:
  * @brief  Request the PE to send a Source Capability message.
  * @param  PortNum The current port number
  * @retval USBPD Status
  */
USBPD_StatusTypeDef USBPD_DPM_RequestSourceCapability(uint8_t PortNum)
{
 8012528:	b5b0      	push	{r4, r5, r7, lr}
 801252a:	b092      	sub	sp, #72	; 0x48
 801252c:	af02      	add	r7, sp, #8
 801252e:	0002      	movs	r2, r0
 8012530:	1dfb      	adds	r3, r7, #7
 8012532:	701a      	strb	r2, [r3, #0]
  /* PE will directly get the PDO saved in structure @ref PWR_Port_PDO_Storage */
  USBPD_StatusTypeDef _status = USBPD_PE_Request_DataMessage(PortNum, USBPD_DATAMSG_SRC_CAPABILITIES, NULL);
 8012534:	253f      	movs	r5, #63	; 0x3f
 8012536:	197c      	adds	r4, r7, r5
 8012538:	1dfb      	adds	r3, r7, #7
 801253a:	781b      	ldrb	r3, [r3, #0]
 801253c:	2200      	movs	r2, #0
 801253e:	2101      	movs	r1, #1
 8012540:	0018      	movs	r0, r3
 8012542:	f7ee f88b 	bl	800065c <USBPD_PE_Request_DataMessage>
 8012546:	0003      	movs	r3, r0
 8012548:	7023      	strb	r3, [r4, #0]
  DPM_USER_ERROR_TRACE(PortNum, _status, "SRC_CAPA not accepted by the stack");
 801254a:	197b      	adds	r3, r7, r5
 801254c:	781b      	ldrb	r3, [r3, #0]
 801254e:	2b00      	cmp	r3, #0
 8012550:	d027      	beq.n	80125a2 <USBPD_DPM_RequestSourceCapability+0x7a>
 8012552:	4a17      	ldr	r2, [pc, #92]	; (80125b0 <USBPD_DPM_RequestSourceCapability+0x88>)
 8012554:	240c      	movs	r4, #12
 8012556:	193b      	adds	r3, r7, r4
 8012558:	2132      	movs	r1, #50	; 0x32
 801255a:	0018      	movs	r0, r3
 801255c:	f005 fdde 	bl	801811c <sniprintf>
 8012560:	0002      	movs	r2, r0
 8012562:	213e      	movs	r1, #62	; 0x3e
 8012564:	187b      	adds	r3, r7, r1
 8012566:	701a      	strb	r2, [r3, #0]
 8012568:	187b      	adds	r3, r7, r1
 801256a:	781b      	ldrb	r3, [r3, #0]
 801256c:	2b31      	cmp	r3, #49	; 0x31
 801256e:	d80d      	bhi.n	801258c <USBPD_DPM_RequestSourceCapability+0x64>
 8012570:	193b      	adds	r3, r7, r4
 8012572:	0018      	movs	r0, r3
 8012574:	f7f3 fe2a 	bl	80061cc <strlen>
 8012578:	193a      	adds	r2, r7, r4
 801257a:	1dfb      	adds	r3, r7, #7
 801257c:	7819      	ldrb	r1, [r3, #0]
 801257e:	9000      	str	r0, [sp, #0]
 8012580:	0013      	movs	r3, r2
 8012582:	2200      	movs	r2, #0
 8012584:	2006      	movs	r0, #6
 8012586:	f7f8 fb35 	bl	800abf4 <USBPD_TRACE_Add>
 801258a:	e00a      	b.n	80125a2 <USBPD_DPM_RequestSourceCapability+0x7a>
 801258c:	230c      	movs	r3, #12
 801258e:	18fa      	adds	r2, r7, r3
 8012590:	1dfb      	adds	r3, r7, #7
 8012592:	7819      	ldrb	r1, [r3, #0]
 8012594:	2332      	movs	r3, #50	; 0x32
 8012596:	9300      	str	r3, [sp, #0]
 8012598:	0013      	movs	r3, r2
 801259a:	2200      	movs	r2, #0
 801259c:	2006      	movs	r0, #6
 801259e:	f7f8 fb29 	bl	800abf4 <USBPD_TRACE_Add>
  return _status;
 80125a2:	233f      	movs	r3, #63	; 0x3f
 80125a4:	18fb      	adds	r3, r7, r3
 80125a6:	781b      	ldrb	r3, [r3, #0]
}
 80125a8:	0018      	movs	r0, r3
 80125aa:	46bd      	mov	sp, r7
 80125ac:	b010      	add	sp, #64	; 0x40
 80125ae:	bdb0      	pop	{r4, r5, r7, pc}
 80125b0:	08018dcc 	.word	0x08018dcc

080125b4 <USBPD_DPM_RequestAlert>:
  * @param  PortNum The current port number
  * @param  Alert   Alert based on @ref USBPD_ADO_TypeDef
  * @retval USBPD Status
  */
USBPD_StatusTypeDef USBPD_DPM_RequestAlert(uint8_t PortNum, USBPD_ADO_TypeDef Alert)
{
 80125b4:	b5b0      	push	{r4, r5, r7, lr}
 80125b6:	b092      	sub	sp, #72	; 0x48
 80125b8:	af02      	add	r7, sp, #8
 80125ba:	0002      	movs	r2, r0
 80125bc:	6039      	str	r1, [r7, #0]
 80125be:	1dfb      	adds	r3, r7, #7
 80125c0:	701a      	strb	r2, [r3, #0]
  USBPD_StatusTypeDef _status = USBPD_PE_Request_DataMessage(PortNum, USBPD_DATAMSG_ALERT, (uint32_t*)&Alert.d32);
 80125c2:	253f      	movs	r5, #63	; 0x3f
 80125c4:	197c      	adds	r4, r7, r5
 80125c6:	003a      	movs	r2, r7
 80125c8:	1dfb      	adds	r3, r7, #7
 80125ca:	781b      	ldrb	r3, [r3, #0]
 80125cc:	2106      	movs	r1, #6
 80125ce:	0018      	movs	r0, r3
 80125d0:	f7ee f844 	bl	800065c <USBPD_PE_Request_DataMessage>
 80125d4:	0003      	movs	r3, r0
 80125d6:	7023      	strb	r3, [r4, #0]
  DPM_USER_ERROR_TRACE(PortNum, _status, "ALERT not accepted by the stack");
 80125d8:	197b      	adds	r3, r7, r5
 80125da:	781b      	ldrb	r3, [r3, #0]
 80125dc:	2b00      	cmp	r3, #0
 80125de:	d027      	beq.n	8012630 <USBPD_DPM_RequestAlert+0x7c>
 80125e0:	4a17      	ldr	r2, [pc, #92]	; (8012640 <USBPD_DPM_RequestAlert+0x8c>)
 80125e2:	240c      	movs	r4, #12
 80125e4:	193b      	adds	r3, r7, r4
 80125e6:	2132      	movs	r1, #50	; 0x32
 80125e8:	0018      	movs	r0, r3
 80125ea:	f005 fd97 	bl	801811c <sniprintf>
 80125ee:	0002      	movs	r2, r0
 80125f0:	213e      	movs	r1, #62	; 0x3e
 80125f2:	187b      	adds	r3, r7, r1
 80125f4:	701a      	strb	r2, [r3, #0]
 80125f6:	187b      	adds	r3, r7, r1
 80125f8:	781b      	ldrb	r3, [r3, #0]
 80125fa:	2b31      	cmp	r3, #49	; 0x31
 80125fc:	d80d      	bhi.n	801261a <USBPD_DPM_RequestAlert+0x66>
 80125fe:	193b      	adds	r3, r7, r4
 8012600:	0018      	movs	r0, r3
 8012602:	f7f3 fde3 	bl	80061cc <strlen>
 8012606:	193a      	adds	r2, r7, r4
 8012608:	1dfb      	adds	r3, r7, #7
 801260a:	7819      	ldrb	r1, [r3, #0]
 801260c:	9000      	str	r0, [sp, #0]
 801260e:	0013      	movs	r3, r2
 8012610:	2200      	movs	r2, #0
 8012612:	2006      	movs	r0, #6
 8012614:	f7f8 faee 	bl	800abf4 <USBPD_TRACE_Add>
 8012618:	e00a      	b.n	8012630 <USBPD_DPM_RequestAlert+0x7c>
 801261a:	230c      	movs	r3, #12
 801261c:	18fa      	adds	r2, r7, r3
 801261e:	1dfb      	adds	r3, r7, #7
 8012620:	7819      	ldrb	r1, [r3, #0]
 8012622:	2332      	movs	r3, #50	; 0x32
 8012624:	9300      	str	r3, [sp, #0]
 8012626:	0013      	movs	r3, r2
 8012628:	2200      	movs	r2, #0
 801262a:	2006      	movs	r0, #6
 801262c:	f7f8 fae2 	bl	800abf4 <USBPD_TRACE_Add>
  return _status;
 8012630:	233f      	movs	r3, #63	; 0x3f
 8012632:	18fb      	adds	r3, r7, r3
 8012634:	781b      	ldrb	r3, [r3, #0]
}
 8012636:	0018      	movs	r0, r3
 8012638:	46bd      	mov	sp, r7
 801263a:	b010      	add	sp, #64	; 0x40
 801263c:	bdb0      	pop	{r4, r5, r7, pc}
 801263e:	46c0      	nop			; (mov r8, r8)
 8012640:	08018f5c 	.word	0x08018f5c

08012644 <USBPD_DPM_RequestGetSourceCapabilityExt>:
  * @brief  Request the PE to get a source capability extended
  * @param  PortNum The current port number
  * @retval USBPD Status
  */
USBPD_StatusTypeDef USBPD_DPM_RequestGetSourceCapabilityExt(uint8_t PortNum)
{
 8012644:	b5b0      	push	{r4, r5, r7, lr}
 8012646:	b092      	sub	sp, #72	; 0x48
 8012648:	af02      	add	r7, sp, #8
 801264a:	0002      	movs	r2, r0
 801264c:	1dfb      	adds	r3, r7, #7
 801264e:	701a      	strb	r2, [r3, #0]
  USBPD_StatusTypeDef _status = USBPD_PE_Request_CtrlMessage(PortNum, USBPD_CONTROLMSG_GET_SRC_CAPEXT, USBPD_SOPTYPE_SOP);
 8012650:	253f      	movs	r5, #63	; 0x3f
 8012652:	197c      	adds	r4, r7, r5
 8012654:	1dfb      	adds	r3, r7, #7
 8012656:	781b      	ldrb	r3, [r3, #0]
 8012658:	2200      	movs	r2, #0
 801265a:	2111      	movs	r1, #17
 801265c:	0018      	movs	r0, r3
 801265e:	f7ed ff51 	bl	8000504 <USBPD_PE_Request_CtrlMessage>
 8012662:	0003      	movs	r3, r0
 8012664:	7023      	strb	r3, [r4, #0]
  DPM_USER_ERROR_TRACE(PortNum, _status, "GET_SRC_CAPA_EXT not accepted by the stack");
 8012666:	197b      	adds	r3, r7, r5
 8012668:	781b      	ldrb	r3, [r3, #0]
 801266a:	2b00      	cmp	r3, #0
 801266c:	d027      	beq.n	80126be <USBPD_DPM_RequestGetSourceCapabilityExt+0x7a>
 801266e:	4a17      	ldr	r2, [pc, #92]	; (80126cc <USBPD_DPM_RequestGetSourceCapabilityExt+0x88>)
 8012670:	240c      	movs	r4, #12
 8012672:	193b      	adds	r3, r7, r4
 8012674:	2132      	movs	r1, #50	; 0x32
 8012676:	0018      	movs	r0, r3
 8012678:	f005 fd50 	bl	801811c <sniprintf>
 801267c:	0002      	movs	r2, r0
 801267e:	213e      	movs	r1, #62	; 0x3e
 8012680:	187b      	adds	r3, r7, r1
 8012682:	701a      	strb	r2, [r3, #0]
 8012684:	187b      	adds	r3, r7, r1
 8012686:	781b      	ldrb	r3, [r3, #0]
 8012688:	2b31      	cmp	r3, #49	; 0x31
 801268a:	d80d      	bhi.n	80126a8 <USBPD_DPM_RequestGetSourceCapabilityExt+0x64>
 801268c:	193b      	adds	r3, r7, r4
 801268e:	0018      	movs	r0, r3
 8012690:	f7f3 fd9c 	bl	80061cc <strlen>
 8012694:	193a      	adds	r2, r7, r4
 8012696:	1dfb      	adds	r3, r7, #7
 8012698:	7819      	ldrb	r1, [r3, #0]
 801269a:	9000      	str	r0, [sp, #0]
 801269c:	0013      	movs	r3, r2
 801269e:	2200      	movs	r2, #0
 80126a0:	2006      	movs	r0, #6
 80126a2:	f7f8 faa7 	bl	800abf4 <USBPD_TRACE_Add>
 80126a6:	e00a      	b.n	80126be <USBPD_DPM_RequestGetSourceCapabilityExt+0x7a>
 80126a8:	230c      	movs	r3, #12
 80126aa:	18fa      	adds	r2, r7, r3
 80126ac:	1dfb      	adds	r3, r7, #7
 80126ae:	7819      	ldrb	r1, [r3, #0]
 80126b0:	2332      	movs	r3, #50	; 0x32
 80126b2:	9300      	str	r3, [sp, #0]
 80126b4:	0013      	movs	r3, r2
 80126b6:	2200      	movs	r2, #0
 80126b8:	2006      	movs	r0, #6
 80126ba:	f7f8 fa9b 	bl	800abf4 <USBPD_TRACE_Add>
  return _status;
 80126be:	233f      	movs	r3, #63	; 0x3f
 80126c0:	18fb      	adds	r3, r7, r3
 80126c2:	781b      	ldrb	r3, [r3, #0]
}
 80126c4:	0018      	movs	r0, r3
 80126c6:	46bd      	mov	sp, r7
 80126c8:	b010      	add	sp, #64	; 0x40
 80126ca:	bdb0      	pop	{r4, r5, r7, pc}
 80126cc:	08018f7c 	.word	0x08018f7c

080126d0 <USBPD_DPM_RequestGetSinkCapabilityExt>:
  * @brief  Request the PE to get a sink capability extended
  * @param  PortNum The current port number
  * @retval USBPD Status
  */
USBPD_StatusTypeDef USBPD_DPM_RequestGetSinkCapabilityExt(uint8_t PortNum)
{
 80126d0:	b5b0      	push	{r4, r5, r7, lr}
 80126d2:	b092      	sub	sp, #72	; 0x48
 80126d4:	af02      	add	r7, sp, #8
 80126d6:	0002      	movs	r2, r0
 80126d8:	1dfb      	adds	r3, r7, #7
 80126da:	701a      	strb	r2, [r3, #0]
  USBPD_StatusTypeDef _status = USBPD_PE_Request_CtrlMessage(PortNum, USBPD_CONTROLMSG_GET_SNK_CAPEXT, USBPD_SOPTYPE_SOP);
 80126dc:	253f      	movs	r5, #63	; 0x3f
 80126de:	197c      	adds	r4, r7, r5
 80126e0:	1dfb      	adds	r3, r7, #7
 80126e2:	781b      	ldrb	r3, [r3, #0]
 80126e4:	2200      	movs	r2, #0
 80126e6:	2116      	movs	r1, #22
 80126e8:	0018      	movs	r0, r3
 80126ea:	f7ed ff0b 	bl	8000504 <USBPD_PE_Request_CtrlMessage>
 80126ee:	0003      	movs	r3, r0
 80126f0:	7023      	strb	r3, [r4, #0]
  DPM_USER_ERROR_TRACE(PortNum, _status, "GET_SINK_CAPA_EXT not accepted by the stack");
 80126f2:	197b      	adds	r3, r7, r5
 80126f4:	781b      	ldrb	r3, [r3, #0]
 80126f6:	2b00      	cmp	r3, #0
 80126f8:	d027      	beq.n	801274a <USBPD_DPM_RequestGetSinkCapabilityExt+0x7a>
 80126fa:	4a17      	ldr	r2, [pc, #92]	; (8012758 <USBPD_DPM_RequestGetSinkCapabilityExt+0x88>)
 80126fc:	240c      	movs	r4, #12
 80126fe:	193b      	adds	r3, r7, r4
 8012700:	2132      	movs	r1, #50	; 0x32
 8012702:	0018      	movs	r0, r3
 8012704:	f005 fd0a 	bl	801811c <sniprintf>
 8012708:	0002      	movs	r2, r0
 801270a:	213e      	movs	r1, #62	; 0x3e
 801270c:	187b      	adds	r3, r7, r1
 801270e:	701a      	strb	r2, [r3, #0]
 8012710:	187b      	adds	r3, r7, r1
 8012712:	781b      	ldrb	r3, [r3, #0]
 8012714:	2b31      	cmp	r3, #49	; 0x31
 8012716:	d80d      	bhi.n	8012734 <USBPD_DPM_RequestGetSinkCapabilityExt+0x64>
 8012718:	193b      	adds	r3, r7, r4
 801271a:	0018      	movs	r0, r3
 801271c:	f7f3 fd56 	bl	80061cc <strlen>
 8012720:	193a      	adds	r2, r7, r4
 8012722:	1dfb      	adds	r3, r7, #7
 8012724:	7819      	ldrb	r1, [r3, #0]
 8012726:	9000      	str	r0, [sp, #0]
 8012728:	0013      	movs	r3, r2
 801272a:	2200      	movs	r2, #0
 801272c:	2006      	movs	r0, #6
 801272e:	f7f8 fa61 	bl	800abf4 <USBPD_TRACE_Add>
 8012732:	e00a      	b.n	801274a <USBPD_DPM_RequestGetSinkCapabilityExt+0x7a>
 8012734:	230c      	movs	r3, #12
 8012736:	18fa      	adds	r2, r7, r3
 8012738:	1dfb      	adds	r3, r7, #7
 801273a:	7819      	ldrb	r1, [r3, #0]
 801273c:	2332      	movs	r3, #50	; 0x32
 801273e:	9300      	str	r3, [sp, #0]
 8012740:	0013      	movs	r3, r2
 8012742:	2200      	movs	r2, #0
 8012744:	2006      	movs	r0, #6
 8012746:	f7f8 fa55 	bl	800abf4 <USBPD_TRACE_Add>
  return _status;
 801274a:	233f      	movs	r3, #63	; 0x3f
 801274c:	18fb      	adds	r3, r7, r3
 801274e:	781b      	ldrb	r3, [r3, #0]
}
 8012750:	0018      	movs	r0, r3
 8012752:	46bd      	mov	sp, r7
 8012754:	b010      	add	sp, #64	; 0x40
 8012756:	bdb0      	pop	{r4, r5, r7, pc}
 8012758:	08018fa8 	.word	0x08018fa8

0801275c <USBPD_DPM_RequestGetManufacturerInfo>:
  * @param  SOPType SOP Type
  * @param  pManuInfoData Pointer on manufacturer info based on @ref USBPD_GMIDB_TypeDef
  * @retval USBPD Status
  */
USBPD_StatusTypeDef USBPD_DPM_RequestGetManufacturerInfo(uint8_t PortNum, USBPD_SOPType_TypeDef SOPType, uint8_t* pManuInfoData)
{
 801275c:	b590      	push	{r4, r7, lr}
 801275e:	b093      	sub	sp, #76	; 0x4c
 8012760:	af02      	add	r7, sp, #8
 8012762:	603a      	str	r2, [r7, #0]
 8012764:	1dfb      	adds	r3, r7, #7
 8012766:	1c02      	adds	r2, r0, #0
 8012768:	701a      	strb	r2, [r3, #0]
 801276a:	1dbb      	adds	r3, r7, #6
 801276c:	1c0a      	adds	r2, r1, #0
 801276e:	701a      	strb	r2, [r3, #0]
  USBPD_StatusTypeDef _status = USBPD_ERROR;
 8012770:	213f      	movs	r1, #63	; 0x3f
 8012772:	187b      	adds	r3, r7, r1
 8012774:	2202      	movs	r2, #2
 8012776:	701a      	strb	r2, [r3, #0]
  if (USBPD_SOPTYPE_SOP == SOPType)
 8012778:	1dbb      	adds	r3, r7, #6
 801277a:	781b      	ldrb	r3, [r3, #0]
 801277c:	2b00      	cmp	r3, #0
 801277e:	d10d      	bne.n	801279c <USBPD_DPM_RequestGetManufacturerInfo+0x40>
  {
    _status = USBPD_PE_SendExtendedMessage(PortNum, SOPType, USBPD_EXT_GET_MANUFACTURER_INFO, (uint8_t*)pManuInfoData, sizeof(USBPD_GMIDB_TypeDef));
 8012780:	187c      	adds	r4, r7, r1
 8012782:	683a      	ldr	r2, [r7, #0]
 8012784:	1dbb      	adds	r3, r7, #6
 8012786:	7819      	ldrb	r1, [r3, #0]
 8012788:	1dfb      	adds	r3, r7, #7
 801278a:	7818      	ldrb	r0, [r3, #0]
 801278c:	2302      	movs	r3, #2
 801278e:	9300      	str	r3, [sp, #0]
 8012790:	0013      	movs	r3, r2
 8012792:	2206      	movs	r2, #6
 8012794:	f7ed ffee 	bl	8000774 <USBPD_PE_SendExtendedMessage>
 8012798:	0003      	movs	r3, r0
 801279a:	7023      	strb	r3, [r4, #0]
  }
  DPM_USER_ERROR_TRACE(PortNum, _status, "GET_MANU_INFO not accepted by the stack");
 801279c:	233f      	movs	r3, #63	; 0x3f
 801279e:	18fb      	adds	r3, r7, r3
 80127a0:	781b      	ldrb	r3, [r3, #0]
 80127a2:	2b00      	cmp	r3, #0
 80127a4:	d027      	beq.n	80127f6 <USBPD_DPM_RequestGetManufacturerInfo+0x9a>
 80127a6:	4a17      	ldr	r2, [pc, #92]	; (8012804 <USBPD_DPM_RequestGetManufacturerInfo+0xa8>)
 80127a8:	240c      	movs	r4, #12
 80127aa:	193b      	adds	r3, r7, r4
 80127ac:	2132      	movs	r1, #50	; 0x32
 80127ae:	0018      	movs	r0, r3
 80127b0:	f005 fcb4 	bl	801811c <sniprintf>
 80127b4:	0002      	movs	r2, r0
 80127b6:	213e      	movs	r1, #62	; 0x3e
 80127b8:	187b      	adds	r3, r7, r1
 80127ba:	701a      	strb	r2, [r3, #0]
 80127bc:	187b      	adds	r3, r7, r1
 80127be:	781b      	ldrb	r3, [r3, #0]
 80127c0:	2b31      	cmp	r3, #49	; 0x31
 80127c2:	d80d      	bhi.n	80127e0 <USBPD_DPM_RequestGetManufacturerInfo+0x84>
 80127c4:	193b      	adds	r3, r7, r4
 80127c6:	0018      	movs	r0, r3
 80127c8:	f7f3 fd00 	bl	80061cc <strlen>
 80127cc:	193a      	adds	r2, r7, r4
 80127ce:	1dfb      	adds	r3, r7, #7
 80127d0:	7819      	ldrb	r1, [r3, #0]
 80127d2:	9000      	str	r0, [sp, #0]
 80127d4:	0013      	movs	r3, r2
 80127d6:	2200      	movs	r2, #0
 80127d8:	2006      	movs	r0, #6
 80127da:	f7f8 fa0b 	bl	800abf4 <USBPD_TRACE_Add>
 80127de:	e00a      	b.n	80127f6 <USBPD_DPM_RequestGetManufacturerInfo+0x9a>
 80127e0:	230c      	movs	r3, #12
 80127e2:	18fa      	adds	r2, r7, r3
 80127e4:	1dfb      	adds	r3, r7, #7
 80127e6:	7819      	ldrb	r1, [r3, #0]
 80127e8:	2332      	movs	r3, #50	; 0x32
 80127ea:	9300      	str	r3, [sp, #0]
 80127ec:	0013      	movs	r3, r2
 80127ee:	2200      	movs	r2, #0
 80127f0:	2006      	movs	r0, #6
 80127f2:	f7f8 f9ff 	bl	800abf4 <USBPD_TRACE_Add>
  return _status;
 80127f6:	233f      	movs	r3, #63	; 0x3f
 80127f8:	18fb      	adds	r3, r7, r3
 80127fa:	781b      	ldrb	r3, [r3, #0]
}
 80127fc:	0018      	movs	r0, r3
 80127fe:	46bd      	mov	sp, r7
 8012800:	b011      	add	sp, #68	; 0x44
 8012802:	bd90      	pop	{r4, r7, pc}
 8012804:	08018fd4 	.word	0x08018fd4

08012808 <USBPD_DPM_RequestGetPPS_Status>:
  * @brief  Request the PE to request a GET_PPS_STATUS
  * @param  PortNum The current port number
  * @retval USBPD Status
  */
USBPD_StatusTypeDef USBPD_DPM_RequestGetPPS_Status(uint8_t PortNum)
{
 8012808:	b5b0      	push	{r4, r5, r7, lr}
 801280a:	b092      	sub	sp, #72	; 0x48
 801280c:	af02      	add	r7, sp, #8
 801280e:	0002      	movs	r2, r0
 8012810:	1dfb      	adds	r3, r7, #7
 8012812:	701a      	strb	r2, [r3, #0]
  USBPD_StatusTypeDef _status = USBPD_PE_Request_CtrlMessage(PortNum, USBPD_CONTROLMSG_GET_PPS_STATUS, USBPD_SOPTYPE_SOP);
 8012814:	253f      	movs	r5, #63	; 0x3f
 8012816:	197c      	adds	r4, r7, r5
 8012818:	1dfb      	adds	r3, r7, #7
 801281a:	781b      	ldrb	r3, [r3, #0]
 801281c:	2200      	movs	r2, #0
 801281e:	2114      	movs	r1, #20
 8012820:	0018      	movs	r0, r3
 8012822:	f7ed fe6f 	bl	8000504 <USBPD_PE_Request_CtrlMessage>
 8012826:	0003      	movs	r3, r0
 8012828:	7023      	strb	r3, [r4, #0]
  DPM_USER_ERROR_TRACE(PortNum, _status, "GET_PPS_STATUS not accepted by the stack");
 801282a:	197b      	adds	r3, r7, r5
 801282c:	781b      	ldrb	r3, [r3, #0]
 801282e:	2b00      	cmp	r3, #0
 8012830:	d027      	beq.n	8012882 <USBPD_DPM_RequestGetPPS_Status+0x7a>
 8012832:	4a17      	ldr	r2, [pc, #92]	; (8012890 <USBPD_DPM_RequestGetPPS_Status+0x88>)
 8012834:	240c      	movs	r4, #12
 8012836:	193b      	adds	r3, r7, r4
 8012838:	2132      	movs	r1, #50	; 0x32
 801283a:	0018      	movs	r0, r3
 801283c:	f005 fc6e 	bl	801811c <sniprintf>
 8012840:	0002      	movs	r2, r0
 8012842:	213e      	movs	r1, #62	; 0x3e
 8012844:	187b      	adds	r3, r7, r1
 8012846:	701a      	strb	r2, [r3, #0]
 8012848:	187b      	adds	r3, r7, r1
 801284a:	781b      	ldrb	r3, [r3, #0]
 801284c:	2b31      	cmp	r3, #49	; 0x31
 801284e:	d80d      	bhi.n	801286c <USBPD_DPM_RequestGetPPS_Status+0x64>
 8012850:	193b      	adds	r3, r7, r4
 8012852:	0018      	movs	r0, r3
 8012854:	f7f3 fcba 	bl	80061cc <strlen>
 8012858:	193a      	adds	r2, r7, r4
 801285a:	1dfb      	adds	r3, r7, #7
 801285c:	7819      	ldrb	r1, [r3, #0]
 801285e:	9000      	str	r0, [sp, #0]
 8012860:	0013      	movs	r3, r2
 8012862:	2200      	movs	r2, #0
 8012864:	2006      	movs	r0, #6
 8012866:	f7f8 f9c5 	bl	800abf4 <USBPD_TRACE_Add>
 801286a:	e00a      	b.n	8012882 <USBPD_DPM_RequestGetPPS_Status+0x7a>
 801286c:	230c      	movs	r3, #12
 801286e:	18fa      	adds	r2, r7, r3
 8012870:	1dfb      	adds	r3, r7, #7
 8012872:	7819      	ldrb	r1, [r3, #0]
 8012874:	2332      	movs	r3, #50	; 0x32
 8012876:	9300      	str	r3, [sp, #0]
 8012878:	0013      	movs	r3, r2
 801287a:	2200      	movs	r2, #0
 801287c:	2006      	movs	r0, #6
 801287e:	f7f8 f9b9 	bl	800abf4 <USBPD_TRACE_Add>
  return _status;
 8012882:	233f      	movs	r3, #63	; 0x3f
 8012884:	18fb      	adds	r3, r7, r3
 8012886:	781b      	ldrb	r3, [r3, #0]
}
 8012888:	0018      	movs	r0, r3
 801288a:	46bd      	mov	sp, r7
 801288c:	b010      	add	sp, #64	; 0x40
 801288e:	bdb0      	pop	{r4, r5, r7, pc}
 8012890:	08018ffc 	.word	0x08018ffc

08012894 <USBPD_DPM_RequestGetStatus>:
  * @brief  Request the PE to request a GET_STATUS
  * @param  PortNum The current port number
  * @retval USBPD Status
  */
USBPD_StatusTypeDef USBPD_DPM_RequestGetStatus(uint8_t PortNum)
{
 8012894:	b5b0      	push	{r4, r5, r7, lr}
 8012896:	b092      	sub	sp, #72	; 0x48
 8012898:	af02      	add	r7, sp, #8
 801289a:	0002      	movs	r2, r0
 801289c:	1dfb      	adds	r3, r7, #7
 801289e:	701a      	strb	r2, [r3, #0]
  USBPD_StatusTypeDef _status = USBPD_PE_Request_CtrlMessage(PortNum, USBPD_CONTROLMSG_GET_STATUS, USBPD_SOPTYPE_SOP);
 80128a0:	253f      	movs	r5, #63	; 0x3f
 80128a2:	197c      	adds	r4, r7, r5
 80128a4:	1dfb      	adds	r3, r7, #7
 80128a6:	781b      	ldrb	r3, [r3, #0]
 80128a8:	2200      	movs	r2, #0
 80128aa:	2112      	movs	r1, #18
 80128ac:	0018      	movs	r0, r3
 80128ae:	f7ed fe29 	bl	8000504 <USBPD_PE_Request_CtrlMessage>
 80128b2:	0003      	movs	r3, r0
 80128b4:	7023      	strb	r3, [r4, #0]
  DPM_USER_ERROR_TRACE(PortNum, _status, "GET_STATUS not accepted by the stack");
 80128b6:	197b      	adds	r3, r7, r5
 80128b8:	781b      	ldrb	r3, [r3, #0]
 80128ba:	2b00      	cmp	r3, #0
 80128bc:	d027      	beq.n	801290e <USBPD_DPM_RequestGetStatus+0x7a>
 80128be:	4a17      	ldr	r2, [pc, #92]	; (801291c <USBPD_DPM_RequestGetStatus+0x88>)
 80128c0:	240c      	movs	r4, #12
 80128c2:	193b      	adds	r3, r7, r4
 80128c4:	2132      	movs	r1, #50	; 0x32
 80128c6:	0018      	movs	r0, r3
 80128c8:	f005 fc28 	bl	801811c <sniprintf>
 80128cc:	0002      	movs	r2, r0
 80128ce:	213e      	movs	r1, #62	; 0x3e
 80128d0:	187b      	adds	r3, r7, r1
 80128d2:	701a      	strb	r2, [r3, #0]
 80128d4:	187b      	adds	r3, r7, r1
 80128d6:	781b      	ldrb	r3, [r3, #0]
 80128d8:	2b31      	cmp	r3, #49	; 0x31
 80128da:	d80d      	bhi.n	80128f8 <USBPD_DPM_RequestGetStatus+0x64>
 80128dc:	193b      	adds	r3, r7, r4
 80128de:	0018      	movs	r0, r3
 80128e0:	f7f3 fc74 	bl	80061cc <strlen>
 80128e4:	193a      	adds	r2, r7, r4
 80128e6:	1dfb      	adds	r3, r7, #7
 80128e8:	7819      	ldrb	r1, [r3, #0]
 80128ea:	9000      	str	r0, [sp, #0]
 80128ec:	0013      	movs	r3, r2
 80128ee:	2200      	movs	r2, #0
 80128f0:	2006      	movs	r0, #6
 80128f2:	f7f8 f97f 	bl	800abf4 <USBPD_TRACE_Add>
 80128f6:	e00a      	b.n	801290e <USBPD_DPM_RequestGetStatus+0x7a>
 80128f8:	230c      	movs	r3, #12
 80128fa:	18fa      	adds	r2, r7, r3
 80128fc:	1dfb      	adds	r3, r7, #7
 80128fe:	7819      	ldrb	r1, [r3, #0]
 8012900:	2332      	movs	r3, #50	; 0x32
 8012902:	9300      	str	r3, [sp, #0]
 8012904:	0013      	movs	r3, r2
 8012906:	2200      	movs	r2, #0
 8012908:	2006      	movs	r0, #6
 801290a:	f7f8 f973 	bl	800abf4 <USBPD_TRACE_Add>
  return _status;
 801290e:	233f      	movs	r3, #63	; 0x3f
 8012910:	18fb      	adds	r3, r7, r3
 8012912:	781b      	ldrb	r3, [r3, #0]
}
 8012914:	0018      	movs	r0, r3
 8012916:	46bd      	mov	sp, r7
 8012918:	b010      	add	sp, #64	; 0x40
 801291a:	bdb0      	pop	{r4, r5, r7, pc}
 801291c:	08019028 	.word	0x08019028

08012920 <USBPD_DPM_RequestFastRoleSwap>:
  * @brief  Request the PE to perform a Fast Role Swap.
  * @param  PortNum The current port number
  * @retval USBPD Status
  */
USBPD_StatusTypeDef USBPD_DPM_RequestFastRoleSwap(uint8_t PortNum)
{
 8012920:	b5b0      	push	{r4, r5, r7, lr}
 8012922:	b092      	sub	sp, #72	; 0x48
 8012924:	af02      	add	r7, sp, #8
 8012926:	0002      	movs	r2, r0
 8012928:	1dfb      	adds	r3, r7, #7
 801292a:	701a      	strb	r2, [r3, #0]
  USBPD_StatusTypeDef _status = USBPD_PE_Request_CtrlMessage(PortNum, USBPD_CONTROLMSG_FR_SWAP, USBPD_SOPTYPE_SOP);
 801292c:	253f      	movs	r5, #63	; 0x3f
 801292e:	197c      	adds	r4, r7, r5
 8012930:	1dfb      	adds	r3, r7, #7
 8012932:	781b      	ldrb	r3, [r3, #0]
 8012934:	2200      	movs	r2, #0
 8012936:	2113      	movs	r1, #19
 8012938:	0018      	movs	r0, r3
 801293a:	f7ed fde3 	bl	8000504 <USBPD_PE_Request_CtrlMessage>
 801293e:	0003      	movs	r3, r0
 8012940:	7023      	strb	r3, [r4, #0]
  DPM_USER_ERROR_TRACE(PortNum, _status, "FRS not accepted by the stack");
 8012942:	197b      	adds	r3, r7, r5
 8012944:	781b      	ldrb	r3, [r3, #0]
 8012946:	2b00      	cmp	r3, #0
 8012948:	d027      	beq.n	801299a <USBPD_DPM_RequestFastRoleSwap+0x7a>
 801294a:	4a17      	ldr	r2, [pc, #92]	; (80129a8 <USBPD_DPM_RequestFastRoleSwap+0x88>)
 801294c:	240c      	movs	r4, #12
 801294e:	193b      	adds	r3, r7, r4
 8012950:	2132      	movs	r1, #50	; 0x32
 8012952:	0018      	movs	r0, r3
 8012954:	f005 fbe2 	bl	801811c <sniprintf>
 8012958:	0002      	movs	r2, r0
 801295a:	213e      	movs	r1, #62	; 0x3e
 801295c:	187b      	adds	r3, r7, r1
 801295e:	701a      	strb	r2, [r3, #0]
 8012960:	187b      	adds	r3, r7, r1
 8012962:	781b      	ldrb	r3, [r3, #0]
 8012964:	2b31      	cmp	r3, #49	; 0x31
 8012966:	d80d      	bhi.n	8012984 <USBPD_DPM_RequestFastRoleSwap+0x64>
 8012968:	193b      	adds	r3, r7, r4
 801296a:	0018      	movs	r0, r3
 801296c:	f7f3 fc2e 	bl	80061cc <strlen>
 8012970:	193a      	adds	r2, r7, r4
 8012972:	1dfb      	adds	r3, r7, #7
 8012974:	7819      	ldrb	r1, [r3, #0]
 8012976:	9000      	str	r0, [sp, #0]
 8012978:	0013      	movs	r3, r2
 801297a:	2200      	movs	r2, #0
 801297c:	2006      	movs	r0, #6
 801297e:	f7f8 f939 	bl	800abf4 <USBPD_TRACE_Add>
 8012982:	e00a      	b.n	801299a <USBPD_DPM_RequestFastRoleSwap+0x7a>
 8012984:	230c      	movs	r3, #12
 8012986:	18fa      	adds	r2, r7, r3
 8012988:	1dfb      	adds	r3, r7, #7
 801298a:	7819      	ldrb	r1, [r3, #0]
 801298c:	2332      	movs	r3, #50	; 0x32
 801298e:	9300      	str	r3, [sp, #0]
 8012990:	0013      	movs	r3, r2
 8012992:	2200      	movs	r2, #0
 8012994:	2006      	movs	r0, #6
 8012996:	f7f8 f92d 	bl	800abf4 <USBPD_TRACE_Add>
  return _status;
 801299a:	233f      	movs	r3, #63	; 0x3f
 801299c:	18fb      	adds	r3, r7, r3
 801299e:	781b      	ldrb	r3, [r3, #0]
}
 80129a0:	0018      	movs	r0, r3
 80129a2:	46bd      	mov	sp, r7
 80129a4:	b010      	add	sp, #64	; 0x40
 80129a6:	bdb0      	pop	{r4, r5, r7, pc}
 80129a8:	08019050 	.word	0x08019050

080129ac <USBPD_DPM_RequestGetCountryCodes>:
  * @brief  Request the PE to send a GET_COUNTRY_CODES message
  * @param  PortNum The current port number
  * @retval USBPD Status
  */
USBPD_StatusTypeDef USBPD_DPM_RequestGetCountryCodes(uint8_t PortNum)
{
 80129ac:	b5b0      	push	{r4, r5, r7, lr}
 80129ae:	b092      	sub	sp, #72	; 0x48
 80129b0:	af02      	add	r7, sp, #8
 80129b2:	0002      	movs	r2, r0
 80129b4:	1dfb      	adds	r3, r7, #7
 80129b6:	701a      	strb	r2, [r3, #0]
  USBPD_StatusTypeDef _status = USBPD_PE_Request_CtrlMessage(PortNum, USBPD_CONTROLMSG_GET_COUNTRY_CODES, USBPD_SOPTYPE_SOP);
 80129b8:	253f      	movs	r5, #63	; 0x3f
 80129ba:	197c      	adds	r4, r7, r5
 80129bc:	1dfb      	adds	r3, r7, #7
 80129be:	781b      	ldrb	r3, [r3, #0]
 80129c0:	2200      	movs	r2, #0
 80129c2:	2115      	movs	r1, #21
 80129c4:	0018      	movs	r0, r3
 80129c6:	f7ed fd9d 	bl	8000504 <USBPD_PE_Request_CtrlMessage>
 80129ca:	0003      	movs	r3, r0
 80129cc:	7023      	strb	r3, [r4, #0]
  DPM_USER_ERROR_TRACE(PortNum, _status, "GET_COUNTRY_CODES not accepted by the stack");
 80129ce:	197b      	adds	r3, r7, r5
 80129d0:	781b      	ldrb	r3, [r3, #0]
 80129d2:	2b00      	cmp	r3, #0
 80129d4:	d027      	beq.n	8012a26 <USBPD_DPM_RequestGetCountryCodes+0x7a>
 80129d6:	4a17      	ldr	r2, [pc, #92]	; (8012a34 <USBPD_DPM_RequestGetCountryCodes+0x88>)
 80129d8:	240c      	movs	r4, #12
 80129da:	193b      	adds	r3, r7, r4
 80129dc:	2132      	movs	r1, #50	; 0x32
 80129de:	0018      	movs	r0, r3
 80129e0:	f005 fb9c 	bl	801811c <sniprintf>
 80129e4:	0002      	movs	r2, r0
 80129e6:	213e      	movs	r1, #62	; 0x3e
 80129e8:	187b      	adds	r3, r7, r1
 80129ea:	701a      	strb	r2, [r3, #0]
 80129ec:	187b      	adds	r3, r7, r1
 80129ee:	781b      	ldrb	r3, [r3, #0]
 80129f0:	2b31      	cmp	r3, #49	; 0x31
 80129f2:	d80d      	bhi.n	8012a10 <USBPD_DPM_RequestGetCountryCodes+0x64>
 80129f4:	193b      	adds	r3, r7, r4
 80129f6:	0018      	movs	r0, r3
 80129f8:	f7f3 fbe8 	bl	80061cc <strlen>
 80129fc:	193a      	adds	r2, r7, r4
 80129fe:	1dfb      	adds	r3, r7, #7
 8012a00:	7819      	ldrb	r1, [r3, #0]
 8012a02:	9000      	str	r0, [sp, #0]
 8012a04:	0013      	movs	r3, r2
 8012a06:	2200      	movs	r2, #0
 8012a08:	2006      	movs	r0, #6
 8012a0a:	f7f8 f8f3 	bl	800abf4 <USBPD_TRACE_Add>
 8012a0e:	e00a      	b.n	8012a26 <USBPD_DPM_RequestGetCountryCodes+0x7a>
 8012a10:	230c      	movs	r3, #12
 8012a12:	18fa      	adds	r2, r7, r3
 8012a14:	1dfb      	adds	r3, r7, #7
 8012a16:	7819      	ldrb	r1, [r3, #0]
 8012a18:	2332      	movs	r3, #50	; 0x32
 8012a1a:	9300      	str	r3, [sp, #0]
 8012a1c:	0013      	movs	r3, r2
 8012a1e:	2200      	movs	r2, #0
 8012a20:	2006      	movs	r0, #6
 8012a22:	f7f8 f8e7 	bl	800abf4 <USBPD_TRACE_Add>
  return _status;
 8012a26:	233f      	movs	r3, #63	; 0x3f
 8012a28:	18fb      	adds	r3, r7, r3
 8012a2a:	781b      	ldrb	r3, [r3, #0]
}
 8012a2c:	0018      	movs	r0, r3
 8012a2e:	46bd      	mov	sp, r7
 8012a30:	b010      	add	sp, #64	; 0x40
 8012a32:	bdb0      	pop	{r4, r5, r7, pc}
 8012a34:	08019070 	.word	0x08019070

08012a38 <USBPD_DPM_RequestGetCountryInfo>:
  * @param  PortNum     The current port number
  * @param  CountryCode Country code (1st character and 2nd of the Alpha-2 Country)
  * @retval USBPD Status
  */
USBPD_StatusTypeDef USBPD_DPM_RequestGetCountryInfo(uint8_t PortNum, uint16_t CountryCode)
{
 8012a38:	b5b0      	push	{r4, r5, r7, lr}
 8012a3a:	b092      	sub	sp, #72	; 0x48
 8012a3c:	af02      	add	r7, sp, #8
 8012a3e:	0002      	movs	r2, r0
 8012a40:	1dfb      	adds	r3, r7, #7
 8012a42:	701a      	strb	r2, [r3, #0]
 8012a44:	1d3b      	adds	r3, r7, #4
 8012a46:	1c0a      	adds	r2, r1, #0
 8012a48:	801a      	strh	r2, [r3, #0]
  USBPD_StatusTypeDef _status = USBPD_PE_Request_DataMessage(PortNum, USBPD_DATAMSG_GET_COUNTRY_INFO, (uint32_t*)&CountryCode);
 8012a4a:	253f      	movs	r5, #63	; 0x3f
 8012a4c:	197c      	adds	r4, r7, r5
 8012a4e:	1d3a      	adds	r2, r7, #4
 8012a50:	1dfb      	adds	r3, r7, #7
 8012a52:	781b      	ldrb	r3, [r3, #0]
 8012a54:	2107      	movs	r1, #7
 8012a56:	0018      	movs	r0, r3
 8012a58:	f7ed fe00 	bl	800065c <USBPD_PE_Request_DataMessage>
 8012a5c:	0003      	movs	r3, r0
 8012a5e:	7023      	strb	r3, [r4, #0]
  DPM_USER_ERROR_TRACE(PortNum, _status, "GET_COUNTRY_INFO not accepted by the stack");
 8012a60:	197b      	adds	r3, r7, r5
 8012a62:	781b      	ldrb	r3, [r3, #0]
 8012a64:	2b00      	cmp	r3, #0
 8012a66:	d027      	beq.n	8012ab8 <USBPD_DPM_RequestGetCountryInfo+0x80>
 8012a68:	4a17      	ldr	r2, [pc, #92]	; (8012ac8 <USBPD_DPM_RequestGetCountryInfo+0x90>)
 8012a6a:	240c      	movs	r4, #12
 8012a6c:	193b      	adds	r3, r7, r4
 8012a6e:	2132      	movs	r1, #50	; 0x32
 8012a70:	0018      	movs	r0, r3
 8012a72:	f005 fb53 	bl	801811c <sniprintf>
 8012a76:	0002      	movs	r2, r0
 8012a78:	213e      	movs	r1, #62	; 0x3e
 8012a7a:	187b      	adds	r3, r7, r1
 8012a7c:	701a      	strb	r2, [r3, #0]
 8012a7e:	187b      	adds	r3, r7, r1
 8012a80:	781b      	ldrb	r3, [r3, #0]
 8012a82:	2b31      	cmp	r3, #49	; 0x31
 8012a84:	d80d      	bhi.n	8012aa2 <USBPD_DPM_RequestGetCountryInfo+0x6a>
 8012a86:	193b      	adds	r3, r7, r4
 8012a88:	0018      	movs	r0, r3
 8012a8a:	f7f3 fb9f 	bl	80061cc <strlen>
 8012a8e:	193a      	adds	r2, r7, r4
 8012a90:	1dfb      	adds	r3, r7, #7
 8012a92:	7819      	ldrb	r1, [r3, #0]
 8012a94:	9000      	str	r0, [sp, #0]
 8012a96:	0013      	movs	r3, r2
 8012a98:	2200      	movs	r2, #0
 8012a9a:	2006      	movs	r0, #6
 8012a9c:	f7f8 f8aa 	bl	800abf4 <USBPD_TRACE_Add>
 8012aa0:	e00a      	b.n	8012ab8 <USBPD_DPM_RequestGetCountryInfo+0x80>
 8012aa2:	230c      	movs	r3, #12
 8012aa4:	18fa      	adds	r2, r7, r3
 8012aa6:	1dfb      	adds	r3, r7, #7
 8012aa8:	7819      	ldrb	r1, [r3, #0]
 8012aaa:	2332      	movs	r3, #50	; 0x32
 8012aac:	9300      	str	r3, [sp, #0]
 8012aae:	0013      	movs	r3, r2
 8012ab0:	2200      	movs	r2, #0
 8012ab2:	2006      	movs	r0, #6
 8012ab4:	f7f8 f89e 	bl	800abf4 <USBPD_TRACE_Add>
  return _status;
 8012ab8:	233f      	movs	r3, #63	; 0x3f
 8012aba:	18fb      	adds	r3, r7, r3
 8012abc:	781b      	ldrb	r3, [r3, #0]
}
 8012abe:	0018      	movs	r0, r3
 8012ac0:	46bd      	mov	sp, r7
 8012ac2:	b010      	add	sp, #64	; 0x40
 8012ac4:	bdb0      	pop	{r4, r5, r7, pc}
 8012ac6:	46c0      	nop			; (mov r8, r8)
 8012ac8:	0801909c 	.word	0x0801909c

08012acc <USBPD_DPM_RequestGetBatteryCapability>:
  * @param  PortNum         The current port number
  * @param  pBatteryCapRef  Pointer on the Battery Capability reference
  * @retval USBPD Status
  */
USBPD_StatusTypeDef USBPD_DPM_RequestGetBatteryCapability(uint8_t PortNum, uint8_t *pBatteryCapRef)
{
 8012acc:	b5b0      	push	{r4, r5, r7, lr}
 8012ace:	b092      	sub	sp, #72	; 0x48
 8012ad0:	af02      	add	r7, sp, #8
 8012ad2:	0002      	movs	r2, r0
 8012ad4:	6039      	str	r1, [r7, #0]
 8012ad6:	1dfb      	adds	r3, r7, #7
 8012ad8:	701a      	strb	r2, [r3, #0]
  USBPD_StatusTypeDef _status = USBPD_PE_SendExtendedMessage(PortNum, USBPD_SOPTYPE_SOP, USBPD_EXT_GET_BATTERY_CAP, (uint8_t*)pBatteryCapRef, 1);
 8012ada:	253f      	movs	r5, #63	; 0x3f
 8012adc:	197c      	adds	r4, r7, r5
 8012ade:	683a      	ldr	r2, [r7, #0]
 8012ae0:	1dfb      	adds	r3, r7, #7
 8012ae2:	7818      	ldrb	r0, [r3, #0]
 8012ae4:	2301      	movs	r3, #1
 8012ae6:	9300      	str	r3, [sp, #0]
 8012ae8:	0013      	movs	r3, r2
 8012aea:	2203      	movs	r2, #3
 8012aec:	2100      	movs	r1, #0
 8012aee:	f7ed fe41 	bl	8000774 <USBPD_PE_SendExtendedMessage>
 8012af2:	0003      	movs	r3, r0
 8012af4:	7023      	strb	r3, [r4, #0]
  DPM_USER_ERROR_TRACE(PortNum, _status, "GET_BATTERY_CAPA not accepted by the stack");
 8012af6:	197b      	adds	r3, r7, r5
 8012af8:	781b      	ldrb	r3, [r3, #0]
 8012afa:	2b00      	cmp	r3, #0
 8012afc:	d027      	beq.n	8012b4e <USBPD_DPM_RequestGetBatteryCapability+0x82>
 8012afe:	4a17      	ldr	r2, [pc, #92]	; (8012b5c <USBPD_DPM_RequestGetBatteryCapability+0x90>)
 8012b00:	240c      	movs	r4, #12
 8012b02:	193b      	adds	r3, r7, r4
 8012b04:	2132      	movs	r1, #50	; 0x32
 8012b06:	0018      	movs	r0, r3
 8012b08:	f005 fb08 	bl	801811c <sniprintf>
 8012b0c:	0002      	movs	r2, r0
 8012b0e:	213e      	movs	r1, #62	; 0x3e
 8012b10:	187b      	adds	r3, r7, r1
 8012b12:	701a      	strb	r2, [r3, #0]
 8012b14:	187b      	adds	r3, r7, r1
 8012b16:	781b      	ldrb	r3, [r3, #0]
 8012b18:	2b31      	cmp	r3, #49	; 0x31
 8012b1a:	d80d      	bhi.n	8012b38 <USBPD_DPM_RequestGetBatteryCapability+0x6c>
 8012b1c:	193b      	adds	r3, r7, r4
 8012b1e:	0018      	movs	r0, r3
 8012b20:	f7f3 fb54 	bl	80061cc <strlen>
 8012b24:	193a      	adds	r2, r7, r4
 8012b26:	1dfb      	adds	r3, r7, #7
 8012b28:	7819      	ldrb	r1, [r3, #0]
 8012b2a:	9000      	str	r0, [sp, #0]
 8012b2c:	0013      	movs	r3, r2
 8012b2e:	2200      	movs	r2, #0
 8012b30:	2006      	movs	r0, #6
 8012b32:	f7f8 f85f 	bl	800abf4 <USBPD_TRACE_Add>
 8012b36:	e00a      	b.n	8012b4e <USBPD_DPM_RequestGetBatteryCapability+0x82>
 8012b38:	230c      	movs	r3, #12
 8012b3a:	18fa      	adds	r2, r7, r3
 8012b3c:	1dfb      	adds	r3, r7, #7
 8012b3e:	7819      	ldrb	r1, [r3, #0]
 8012b40:	2332      	movs	r3, #50	; 0x32
 8012b42:	9300      	str	r3, [sp, #0]
 8012b44:	0013      	movs	r3, r2
 8012b46:	2200      	movs	r2, #0
 8012b48:	2006      	movs	r0, #6
 8012b4a:	f7f8 f853 	bl	800abf4 <USBPD_TRACE_Add>
  return _status;
 8012b4e:	233f      	movs	r3, #63	; 0x3f
 8012b50:	18fb      	adds	r3, r7, r3
 8012b52:	781b      	ldrb	r3, [r3, #0]
}
 8012b54:	0018      	movs	r0, r3
 8012b56:	46bd      	mov	sp, r7
 8012b58:	b010      	add	sp, #64	; 0x40
 8012b5a:	bdb0      	pop	{r4, r5, r7, pc}
 8012b5c:	080190c8 	.word	0x080190c8

08012b60 <USBPD_DPM_RequestGetBatteryStatus>:
  * @param  PortNum           The current port number
  * @param  pBatteryStatusRef Pointer on the Battery Status reference
  * @retval USBPD Status
  */
USBPD_StatusTypeDef USBPD_DPM_RequestGetBatteryStatus(uint8_t PortNum, uint8_t *pBatteryStatusRef)
{
 8012b60:	b5b0      	push	{r4, r5, r7, lr}
 8012b62:	b092      	sub	sp, #72	; 0x48
 8012b64:	af02      	add	r7, sp, #8
 8012b66:	0002      	movs	r2, r0
 8012b68:	6039      	str	r1, [r7, #0]
 8012b6a:	1dfb      	adds	r3, r7, #7
 8012b6c:	701a      	strb	r2, [r3, #0]
  USBPD_StatusTypeDef _status = USBPD_PE_SendExtendedMessage(PortNum, USBPD_SOPTYPE_SOP, USBPD_EXT_GET_BATTERY_STATUS, (uint8_t*)pBatteryStatusRef, 1);
 8012b6e:	253f      	movs	r5, #63	; 0x3f
 8012b70:	197c      	adds	r4, r7, r5
 8012b72:	683a      	ldr	r2, [r7, #0]
 8012b74:	1dfb      	adds	r3, r7, #7
 8012b76:	7818      	ldrb	r0, [r3, #0]
 8012b78:	2301      	movs	r3, #1
 8012b7a:	9300      	str	r3, [sp, #0]
 8012b7c:	0013      	movs	r3, r2
 8012b7e:	2204      	movs	r2, #4
 8012b80:	2100      	movs	r1, #0
 8012b82:	f7ed fdf7 	bl	8000774 <USBPD_PE_SendExtendedMessage>
 8012b86:	0003      	movs	r3, r0
 8012b88:	7023      	strb	r3, [r4, #0]
  DPM_USER_ERROR_TRACE(PortNum, _status, "GET_BATTERY_STATUS not accepted by the stack");
 8012b8a:	197b      	adds	r3, r7, r5
 8012b8c:	781b      	ldrb	r3, [r3, #0]
 8012b8e:	2b00      	cmp	r3, #0
 8012b90:	d027      	beq.n	8012be2 <USBPD_DPM_RequestGetBatteryStatus+0x82>
 8012b92:	4a17      	ldr	r2, [pc, #92]	; (8012bf0 <USBPD_DPM_RequestGetBatteryStatus+0x90>)
 8012b94:	240c      	movs	r4, #12
 8012b96:	193b      	adds	r3, r7, r4
 8012b98:	2132      	movs	r1, #50	; 0x32
 8012b9a:	0018      	movs	r0, r3
 8012b9c:	f005 fabe 	bl	801811c <sniprintf>
 8012ba0:	0002      	movs	r2, r0
 8012ba2:	213e      	movs	r1, #62	; 0x3e
 8012ba4:	187b      	adds	r3, r7, r1
 8012ba6:	701a      	strb	r2, [r3, #0]
 8012ba8:	187b      	adds	r3, r7, r1
 8012baa:	781b      	ldrb	r3, [r3, #0]
 8012bac:	2b31      	cmp	r3, #49	; 0x31
 8012bae:	d80d      	bhi.n	8012bcc <USBPD_DPM_RequestGetBatteryStatus+0x6c>
 8012bb0:	193b      	adds	r3, r7, r4
 8012bb2:	0018      	movs	r0, r3
 8012bb4:	f7f3 fb0a 	bl	80061cc <strlen>
 8012bb8:	193a      	adds	r2, r7, r4
 8012bba:	1dfb      	adds	r3, r7, #7
 8012bbc:	7819      	ldrb	r1, [r3, #0]
 8012bbe:	9000      	str	r0, [sp, #0]
 8012bc0:	0013      	movs	r3, r2
 8012bc2:	2200      	movs	r2, #0
 8012bc4:	2006      	movs	r0, #6
 8012bc6:	f7f8 f815 	bl	800abf4 <USBPD_TRACE_Add>
 8012bca:	e00a      	b.n	8012be2 <USBPD_DPM_RequestGetBatteryStatus+0x82>
 8012bcc:	230c      	movs	r3, #12
 8012bce:	18fa      	adds	r2, r7, r3
 8012bd0:	1dfb      	adds	r3, r7, #7
 8012bd2:	7819      	ldrb	r1, [r3, #0]
 8012bd4:	2332      	movs	r3, #50	; 0x32
 8012bd6:	9300      	str	r3, [sp, #0]
 8012bd8:	0013      	movs	r3, r2
 8012bda:	2200      	movs	r2, #0
 8012bdc:	2006      	movs	r0, #6
 8012bde:	f7f8 f809 	bl	800abf4 <USBPD_TRACE_Add>
  return _status;
 8012be2:	233f      	movs	r3, #63	; 0x3f
 8012be4:	18fb      	adds	r3, r7, r3
 8012be6:	781b      	ldrb	r3, [r3, #0]
}
 8012be8:	0018      	movs	r0, r3
 8012bea:	46bd      	mov	sp, r7
 8012bec:	b010      	add	sp, #64	; 0x40
 8012bee:	bdb0      	pop	{r4, r5, r7, pc}
 8012bf0:	080190f4 	.word	0x080190f4

08012bf4 <USBPD_DPM_RequestSecurityRequest>:
  * @brief  Request the PE to send a SECURITY_REQUEST
  * @param  PortNum The current port number
  * @retval USBPD Status
  */
USBPD_StatusTypeDef USBPD_DPM_RequestSecurityRequest(uint8_t PortNum)
{
 8012bf4:	b590      	push	{r4, r7, lr}
 8012bf6:	b093      	sub	sp, #76	; 0x4c
 8012bf8:	af02      	add	r7, sp, #8
 8012bfa:	0002      	movs	r2, r0
 8012bfc:	1dfb      	adds	r3, r7, #7
 8012bfe:	701a      	strb	r2, [r3, #0]
  USBPD_StatusTypeDef _status = USBPD_ERROR;
 8012c00:	213f      	movs	r1, #63	; 0x3f
 8012c02:	187b      	adds	r3, r7, r1
 8012c04:	2202      	movs	r2, #2
 8012c06:	701a      	strb	r2, [r3, #0]
  DPM_USER_ERROR_TRACE(PortNum, _status, "SECURITY_REQUEST not accepted by the stack");
 8012c08:	187b      	adds	r3, r7, r1
 8012c0a:	781b      	ldrb	r3, [r3, #0]
 8012c0c:	2b00      	cmp	r3, #0
 8012c0e:	d027      	beq.n	8012c60 <USBPD_DPM_RequestSecurityRequest+0x6c>
 8012c10:	4a17      	ldr	r2, [pc, #92]	; (8012c70 <USBPD_DPM_RequestSecurityRequest+0x7c>)
 8012c12:	240c      	movs	r4, #12
 8012c14:	193b      	adds	r3, r7, r4
 8012c16:	2132      	movs	r1, #50	; 0x32
 8012c18:	0018      	movs	r0, r3
 8012c1a:	f005 fa7f 	bl	801811c <sniprintf>
 8012c1e:	0002      	movs	r2, r0
 8012c20:	213e      	movs	r1, #62	; 0x3e
 8012c22:	187b      	adds	r3, r7, r1
 8012c24:	701a      	strb	r2, [r3, #0]
 8012c26:	187b      	adds	r3, r7, r1
 8012c28:	781b      	ldrb	r3, [r3, #0]
 8012c2a:	2b31      	cmp	r3, #49	; 0x31
 8012c2c:	d80d      	bhi.n	8012c4a <USBPD_DPM_RequestSecurityRequest+0x56>
 8012c2e:	193b      	adds	r3, r7, r4
 8012c30:	0018      	movs	r0, r3
 8012c32:	f7f3 facb 	bl	80061cc <strlen>
 8012c36:	193a      	adds	r2, r7, r4
 8012c38:	1dfb      	adds	r3, r7, #7
 8012c3a:	7819      	ldrb	r1, [r3, #0]
 8012c3c:	9000      	str	r0, [sp, #0]
 8012c3e:	0013      	movs	r3, r2
 8012c40:	2200      	movs	r2, #0
 8012c42:	2006      	movs	r0, #6
 8012c44:	f7f7 ffd6 	bl	800abf4 <USBPD_TRACE_Add>
 8012c48:	e00a      	b.n	8012c60 <USBPD_DPM_RequestSecurityRequest+0x6c>
 8012c4a:	230c      	movs	r3, #12
 8012c4c:	18fa      	adds	r2, r7, r3
 8012c4e:	1dfb      	adds	r3, r7, #7
 8012c50:	7819      	ldrb	r1, [r3, #0]
 8012c52:	2332      	movs	r3, #50	; 0x32
 8012c54:	9300      	str	r3, [sp, #0]
 8012c56:	0013      	movs	r3, r2
 8012c58:	2200      	movs	r2, #0
 8012c5a:	2006      	movs	r0, #6
 8012c5c:	f7f7 ffca 	bl	800abf4 <USBPD_TRACE_Add>
  return _status;
 8012c60:	233f      	movs	r3, #63	; 0x3f
 8012c62:	18fb      	adds	r3, r7, r3
 8012c64:	781b      	ldrb	r3, [r3, #0]
}
 8012c66:	0018      	movs	r0, r3
 8012c68:	46bd      	mov	sp, r7
 8012c6a:	b011      	add	sp, #68	; 0x44
 8012c6c:	bd90      	pop	{r4, r7, pc}
 8012c6e:	46c0      	nop			; (mov r8, r8)
 8012c70:	08019124 	.word	0x08019124

08012c74 <LL_ADC_REG_ReadConversionData12>:
 8012c74:	b580      	push	{r7, lr}
 8012c76:	b082      	sub	sp, #8
 8012c78:	af00      	add	r7, sp, #0
 8012c7a:	6078      	str	r0, [r7, #4]
 8012c7c:	687b      	ldr	r3, [r7, #4]
 8012c7e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012c80:	b29b      	uxth	r3, r3
 8012c82:	051b      	lsls	r3, r3, #20
 8012c84:	0d1b      	lsrs	r3, r3, #20
 8012c86:	b29b      	uxth	r3, r3
 8012c88:	0018      	movs	r0, r3
 8012c8a:	46bd      	mov	sp, r7
 8012c8c:	b002      	add	sp, #8
 8012c8e:	bd80      	pop	{r7, pc}

08012c90 <BSP_PWR_VBUSGetVoltage>:
 8012c90:	b580      	push	{r7, lr}
 8012c92:	b086      	sub	sp, #24
 8012c94:	af02      	add	r7, sp, #8
 8012c96:	6078      	str	r0, [r7, #4]
 8012c98:	687b      	ldr	r3, [r7, #4]
 8012c9a:	b2d9      	uxtb	r1, r3
 8012c9c:	4b0a      	ldr	r3, [pc, #40]	; (8012cc8 <BSP_PWR_VBUSGetVoltage+0x38>)
 8012c9e:	2227      	movs	r2, #39	; 0x27
 8012ca0:	9200      	str	r2, [sp, #0]
 8012ca2:	2200      	movs	r2, #0
 8012ca4:	2006      	movs	r0, #6
 8012ca6:	f7f7 ffa5 	bl	800abf4 <USBPD_TRACE_Add>
 8012caa:	2300      	movs	r3, #0
 8012cac:	60fb      	str	r3, [r7, #12]
 8012cae:	230c      	movs	r3, #12
 8012cb0:	18fa      	adds	r2, r7, r3
 8012cb2:	687b      	ldr	r3, [r7, #4]
 8012cb4:	0011      	movs	r1, r2
 8012cb6:	0018      	movs	r0, r3
 8012cb8:	f000 f856 	bl	8012d68 <BSP_USBPD_PWR_VBUSGetVoltage>
 8012cbc:	68fb      	ldr	r3, [r7, #12]
 8012cbe:	0018      	movs	r0, r3
 8012cc0:	46bd      	mov	sp, r7
 8012cc2:	b004      	add	sp, #16
 8012cc4:	bd80      	pop	{r7, pc}
 8012cc6:	46c0      	nop			; (mov r8, r8)
 8012cc8:	080192a0 	.word	0x080192a0

08012ccc <BSP_USBPD_PWR_Init>:
 8012ccc:	b580      	push	{r7, lr}
 8012cce:	b084      	sub	sp, #16
 8012cd0:	af00      	add	r7, sp, #0
 8012cd2:	6078      	str	r0, [r7, #4]
 8012cd4:	2300      	movs	r3, #0
 8012cd6:	60fb      	str	r3, [r7, #12]
 8012cd8:	687b      	ldr	r3, [r7, #4]
 8012cda:	2b01      	cmp	r3, #1
 8012cdc:	d902      	bls.n	8012ce4 <BSP_USBPD_PWR_Init+0x18>
 8012cde:	2302      	movs	r3, #2
 8012ce0:	425b      	negs	r3, r3
 8012ce2:	60fb      	str	r3, [r7, #12]
 8012ce4:	68fb      	ldr	r3, [r7, #12]
 8012ce6:	0018      	movs	r0, r3
 8012ce8:	46bd      	mov	sp, r7
 8012cea:	b004      	add	sp, #16
 8012cec:	bd80      	pop	{r7, pc}
	...

08012cf0 <BSP_USBPD_PWR_VBUSInit>:
 8012cf0:	b580      	push	{r7, lr}
 8012cf2:	b086      	sub	sp, #24
 8012cf4:	af02      	add	r7, sp, #8
 8012cf6:	6078      	str	r0, [r7, #4]
 8012cf8:	2300      	movs	r3, #0
 8012cfa:	60fb      	str	r3, [r7, #12]
 8012cfc:	687b      	ldr	r3, [r7, #4]
 8012cfe:	2b01      	cmp	r3, #1
 8012d00:	d903      	bls.n	8012d0a <BSP_USBPD_PWR_VBUSInit+0x1a>
 8012d02:	2302      	movs	r3, #2
 8012d04:	425b      	negs	r3, r3
 8012d06:	60fb      	str	r3, [r7, #12]
 8012d08:	e008      	b.n	8012d1c <BSP_USBPD_PWR_VBUSInit+0x2c>
 8012d0a:	687b      	ldr	r3, [r7, #4]
 8012d0c:	b2d9      	uxtb	r1, r3
 8012d0e:	4b06      	ldr	r3, [pc, #24]	; (8012d28 <BSP_USBPD_PWR_VBUSInit+0x38>)
 8012d10:	2225      	movs	r2, #37	; 0x25
 8012d12:	9200      	str	r2, [sp, #0]
 8012d14:	2200      	movs	r2, #0
 8012d16:	2006      	movs	r0, #6
 8012d18:	f7f7 ff6c 	bl	800abf4 <USBPD_TRACE_Add>
 8012d1c:	68fb      	ldr	r3, [r7, #12]
 8012d1e:	0018      	movs	r0, r3
 8012d20:	46bd      	mov	sp, r7
 8012d22:	b004      	add	sp, #16
 8012d24:	bd80      	pop	{r7, pc}
 8012d26:	46c0      	nop			; (mov r8, r8)
 8012d28:	080194dc 	.word	0x080194dc

08012d2c <BSP_USBPD_PWR_VBUSDeInit>:
 8012d2c:	b580      	push	{r7, lr}
 8012d2e:	b086      	sub	sp, #24
 8012d30:	af02      	add	r7, sp, #8
 8012d32:	6078      	str	r0, [r7, #4]
 8012d34:	230b      	movs	r3, #11
 8012d36:	425b      	negs	r3, r3
 8012d38:	60fb      	str	r3, [r7, #12]
 8012d3a:	687b      	ldr	r3, [r7, #4]
 8012d3c:	2b01      	cmp	r3, #1
 8012d3e:	d902      	bls.n	8012d46 <BSP_USBPD_PWR_VBUSDeInit+0x1a>
 8012d40:	2302      	movs	r3, #2
 8012d42:	425b      	negs	r3, r3
 8012d44:	60fb      	str	r3, [r7, #12]
 8012d46:	687b      	ldr	r3, [r7, #4]
 8012d48:	b2d9      	uxtb	r1, r3
 8012d4a:	4b06      	ldr	r3, [pc, #24]	; (8012d64 <BSP_USBPD_PWR_VBUSDeInit+0x38>)
 8012d4c:	2227      	movs	r2, #39	; 0x27
 8012d4e:	9200      	str	r2, [sp, #0]
 8012d50:	2200      	movs	r2, #0
 8012d52:	2006      	movs	r0, #6
 8012d54:	f7f7 ff4e 	bl	800abf4 <USBPD_TRACE_Add>
 8012d58:	68fb      	ldr	r3, [r7, #12]
 8012d5a:	0018      	movs	r0, r3
 8012d5c:	46bd      	mov	sp, r7
 8012d5e:	b004      	add	sp, #16
 8012d60:	bd80      	pop	{r7, pc}
 8012d62:	46c0      	nop			; (mov r8, r8)
 8012d64:	08019504 	.word	0x08019504

08012d68 <BSP_USBPD_PWR_VBUSGetVoltage>:
 8012d68:	b580      	push	{r7, lr}
 8012d6a:	b084      	sub	sp, #16
 8012d6c:	af00      	add	r7, sp, #0
 8012d6e:	6078      	str	r0, [r7, #4]
 8012d70:	6039      	str	r1, [r7, #0]
 8012d72:	2300      	movs	r3, #0
 8012d74:	60fb      	str	r3, [r7, #12]
 8012d76:	687b      	ldr	r3, [r7, #4]
 8012d78:	2b01      	cmp	r3, #1
 8012d7a:	d802      	bhi.n	8012d82 <BSP_USBPD_PWR_VBUSGetVoltage+0x1a>
 8012d7c:	683b      	ldr	r3, [r7, #0]
 8012d7e:	2b00      	cmp	r3, #0
 8012d80:	d106      	bne.n	8012d90 <BSP_USBPD_PWR_VBUSGetVoltage+0x28>
 8012d82:	2302      	movs	r3, #2
 8012d84:	425b      	negs	r3, r3
 8012d86:	60fb      	str	r3, [r7, #12]
 8012d88:	683b      	ldr	r3, [r7, #0]
 8012d8a:	2200      	movs	r2, #0
 8012d8c:	601a      	str	r2, [r3, #0]
 8012d8e:	e01b      	b.n	8012dc8 <BSP_USBPD_PWR_VBUSGetVoltage+0x60>
 8012d90:	4b10      	ldr	r3, [pc, #64]	; (8012dd4 <BSP_USBPD_PWR_VBUSGetVoltage+0x6c>)
 8012d92:	0018      	movs	r0, r3
 8012d94:	f7ff ff6e 	bl	8012c74 <LL_ADC_REG_ReadConversionData12>
 8012d98:	0003      	movs	r3, r0
 8012d9a:	001a      	movs	r2, r3
 8012d9c:	4b0e      	ldr	r3, [pc, #56]	; (8012dd8 <BSP_USBPD_PWR_VBUSGetVoltage+0x70>)
 8012d9e:	4353      	muls	r3, r2
 8012da0:	490e      	ldr	r1, [pc, #56]	; (8012ddc <BSP_USBPD_PWR_VBUSGetVoltage+0x74>)
 8012da2:	0018      	movs	r0, r3
 8012da4:	f7f3 fa24 	bl	80061f0 <__udivsi3>
 8012da8:	0003      	movs	r3, r0
 8012daa:	60bb      	str	r3, [r7, #8]
 8012dac:	68bb      	ldr	r3, [r7, #8]
 8012dae:	4a0c      	ldr	r2, [pc, #48]	; (8012de0 <BSP_USBPD_PWR_VBUSGetVoltage+0x78>)
 8012db0:	4353      	muls	r3, r2
 8012db2:	60bb      	str	r3, [r7, #8]
 8012db4:	68bb      	ldr	r3, [r7, #8]
 8012db6:	2164      	movs	r1, #100	; 0x64
 8012db8:	0018      	movs	r0, r3
 8012dba:	f7f3 fa19 	bl	80061f0 <__udivsi3>
 8012dbe:	0003      	movs	r3, r0
 8012dc0:	60bb      	str	r3, [r7, #8]
 8012dc2:	683b      	ldr	r3, [r7, #0]
 8012dc4:	68ba      	ldr	r2, [r7, #8]
 8012dc6:	601a      	str	r2, [r3, #0]
 8012dc8:	68fb      	ldr	r3, [r7, #12]
 8012dca:	0018      	movs	r0, r3
 8012dcc:	46bd      	mov	sp, r7
 8012dce:	b004      	add	sp, #16
 8012dd0:	bd80      	pop	{r7, pc}
 8012dd2:	46c0      	nop			; (mov r8, r8)
 8012dd4:	40012400 	.word	0x40012400
 8012dd8:	00000ce4 	.word	0x00000ce4
 8012ddc:	00000fff 	.word	0x00000fff
 8012de0:	00000255 	.word	0x00000255

08012de4 <BSP_USBPD_PWR_VBUSGetCurrent>:
 8012de4:	b580      	push	{r7, lr}
 8012de6:	b086      	sub	sp, #24
 8012de8:	af02      	add	r7, sp, #8
 8012dea:	6078      	str	r0, [r7, #4]
 8012dec:	6039      	str	r1, [r7, #0]
 8012dee:	687b      	ldr	r3, [r7, #4]
 8012df0:	2b01      	cmp	r3, #1
 8012df2:	d802      	bhi.n	8012dfa <BSP_USBPD_PWR_VBUSGetCurrent+0x16>
 8012df4:	683b      	ldr	r3, [r7, #0]
 8012df6:	2b00      	cmp	r3, #0
 8012df8:	d103      	bne.n	8012e02 <BSP_USBPD_PWR_VBUSGetCurrent+0x1e>
 8012dfa:	2302      	movs	r3, #2
 8012dfc:	425b      	negs	r3, r3
 8012dfe:	60fb      	str	r3, [r7, #12]
 8012e00:	e005      	b.n	8012e0e <BSP_USBPD_PWR_VBUSGetCurrent+0x2a>
 8012e02:	683b      	ldr	r3, [r7, #0]
 8012e04:	2200      	movs	r2, #0
 8012e06:	601a      	str	r2, [r3, #0]
 8012e08:	230b      	movs	r3, #11
 8012e0a:	425b      	negs	r3, r3
 8012e0c:	60fb      	str	r3, [r7, #12]
 8012e0e:	687b      	ldr	r3, [r7, #4]
 8012e10:	b2d9      	uxtb	r1, r3
 8012e12:	4b06      	ldr	r3, [pc, #24]	; (8012e2c <BSP_USBPD_PWR_VBUSGetCurrent+0x48>)
 8012e14:	222b      	movs	r2, #43	; 0x2b
 8012e16:	9200      	str	r2, [sp, #0]
 8012e18:	2200      	movs	r2, #0
 8012e1a:	2006      	movs	r0, #6
 8012e1c:	f7f7 feea 	bl	800abf4 <USBPD_TRACE_Add>
 8012e20:	68fb      	ldr	r3, [r7, #12]
 8012e22:	0018      	movs	r0, r3
 8012e24:	46bd      	mov	sp, r7
 8012e26:	b004      	add	sp, #16
 8012e28:	bd80      	pop	{r7, pc}
 8012e2a:	46c0      	nop			; (mov r8, r8)
 8012e2c:	0801964c 	.word	0x0801964c

08012e30 <BSP_GUI_LoadDataFromFlash>:
static GUI_StatusTypeDef        LoadSettingsFromFlash(uint32_t Address, uint32_t *pSettings, uint32_t Size);
static GUI_StatusTypeDef        SavePDOInFlash(uint32_t Address, uint32_t *pListOfPDO);
static GUI_StatusTypeDef        SaveSettingsInFlash(uint32_t Address, uint32_t *pSettings, uint32_t Size);

GUI_StatusTypeDef BSP_GUI_LoadDataFromFlash(void)
{
 8012e30:	b580      	push	{r7, lr}
 8012e32:	b086      	sub	sp, #24
 8012e34:	af02      	add	r7, sp, #8
  GUI_StatusTypeDef _status = GUI_ERROR;
 8012e36:	230f      	movs	r3, #15
 8012e38:	18fb      	adds	r3, r7, r3
 8012e3a:	2203      	movs	r2, #3
 8012e3c:	701a      	strb	r2, [r3, #0]
#if defined(GUI_FLASH_MAGIC_NUMBER)
  uint32_t _addr = GUI_FLASH_MAGIC_NUMBER;
 8012e3e:	4bc0      	ldr	r3, [pc, #768]	; (8013140 <BSP_GUI_LoadDataFromFlash+0x310>)
 8012e40:	681a      	ldr	r2, [r3, #0]
 8012e42:	23c0      	movs	r3, #192	; 0xc0
 8012e44:	049b      	lsls	r3, r3, #18
 8012e46:	4013      	ands	r3, r2
 8012e48:	d00e      	beq.n	8012e68 <BSP_GUI_LoadDataFromFlash+0x38>
 8012e4a:	4bbd      	ldr	r3, [pc, #756]	; (8013140 <BSP_GUI_LoadDataFromFlash+0x310>)
 8012e4c:	681a      	ldr	r2, [r3, #0]
 8012e4e:	23c0      	movs	r3, #192	; 0xc0
 8012e50:	049b      	lsls	r3, r3, #18
 8012e52:	401a      	ands	r2, r3
 8012e54:	2380      	movs	r3, #128	; 0x80
 8012e56:	045b      	lsls	r3, r3, #17
 8012e58:	429a      	cmp	r2, r3
 8012e5a:	d110      	bne.n	8012e7e <BSP_GUI_LoadDataFromFlash+0x4e>
 8012e5c:	4bb9      	ldr	r3, [pc, #740]	; (8013144 <BSP_GUI_LoadDataFromFlash+0x314>)
 8012e5e:	681a      	ldr	r2, [r3, #0]
 8012e60:	2380      	movs	r3, #128	; 0x80
 8012e62:	039b      	lsls	r3, r3, #14
 8012e64:	4013      	ands	r3, r2
 8012e66:	d10a      	bne.n	8012e7e <BSP_GUI_LoadDataFromFlash+0x4e>
 8012e68:	4bb7      	ldr	r3, [pc, #732]	; (8013148 <BSP_GUI_LoadDataFromFlash+0x318>)
 8012e6a:	681b      	ldr	r3, [r3, #0]
 8012e6c:	029b      	lsls	r3, r3, #10
 8012e6e:	4ab7      	ldr	r2, [pc, #732]	; (801314c <BSP_GUI_LoadDataFromFlash+0x31c>)
 8012e70:	4013      	ands	r3, r2
 8012e72:	0adb      	lsrs	r3, r3, #11
 8012e74:	031b      	lsls	r3, r3, #12
 8012e76:	4ab6      	ldr	r2, [pc, #728]	; (8013150 <BSP_GUI_LoadDataFromFlash+0x320>)
 8012e78:	4694      	mov	ip, r2
 8012e7a:	4463      	add	r3, ip
 8012e7c:	e00a      	b.n	8012e94 <BSP_GUI_LoadDataFromFlash+0x64>
 8012e7e:	4bb2      	ldr	r3, [pc, #712]	; (8013148 <BSP_GUI_LoadDataFromFlash+0x318>)
 8012e80:	681b      	ldr	r3, [r3, #0]
 8012e82:	029b      	lsls	r3, r3, #10
 8012e84:	085b      	lsrs	r3, r3, #1
 8012e86:	4ab3      	ldr	r2, [pc, #716]	; (8013154 <BSP_GUI_LoadDataFromFlash+0x324>)
 8012e88:	4013      	ands	r3, r2
 8012e8a:	0adb      	lsrs	r3, r3, #11
 8012e8c:	031b      	lsls	r3, r3, #12
 8012e8e:	4ab0      	ldr	r2, [pc, #704]	; (8013150 <BSP_GUI_LoadDataFromFlash+0x320>)
 8012e90:	4694      	mov	ip, r2
 8012e92:	4463      	add	r3, ip
 8012e94:	60bb      	str	r3, [r7, #8]
#else
  uint32_t _addr = GUI_FLASH_ADDR_NB_PDO_SNK_P0;
#endif /* GUI_FLASH_MAGIC_NUMBER */

  /* Check that we did not reach the end of page */
  if (GUI_FLASH_ADDR_RESERVED > ADDR_FLASH_PAGE_END)
 8012e96:	4baa      	ldr	r3, [pc, #680]	; (8013140 <BSP_GUI_LoadDataFromFlash+0x310>)
 8012e98:	681a      	ldr	r2, [r3, #0]
 8012e9a:	23c0      	movs	r3, #192	; 0xc0
 8012e9c:	049b      	lsls	r3, r3, #18
 8012e9e:	4013      	ands	r3, r2
 8012ea0:	d00e      	beq.n	8012ec0 <BSP_GUI_LoadDataFromFlash+0x90>
 8012ea2:	4ba7      	ldr	r3, [pc, #668]	; (8013140 <BSP_GUI_LoadDataFromFlash+0x310>)
 8012ea4:	681a      	ldr	r2, [r3, #0]
 8012ea6:	23c0      	movs	r3, #192	; 0xc0
 8012ea8:	049b      	lsls	r3, r3, #18
 8012eaa:	401a      	ands	r2, r3
 8012eac:	2380      	movs	r3, #128	; 0x80
 8012eae:	045b      	lsls	r3, r3, #17
 8012eb0:	429a      	cmp	r2, r3
 8012eb2:	d10f      	bne.n	8012ed4 <BSP_GUI_LoadDataFromFlash+0xa4>
 8012eb4:	4ba3      	ldr	r3, [pc, #652]	; (8013144 <BSP_GUI_LoadDataFromFlash+0x314>)
 8012eb6:	681a      	ldr	r2, [r3, #0]
 8012eb8:	2380      	movs	r3, #128	; 0x80
 8012eba:	039b      	lsls	r3, r3, #14
 8012ebc:	4013      	ands	r3, r2
 8012ebe:	d109      	bne.n	8012ed4 <BSP_GUI_LoadDataFromFlash+0xa4>
 8012ec0:	4ba1      	ldr	r3, [pc, #644]	; (8013148 <BSP_GUI_LoadDataFromFlash+0x318>)
 8012ec2:	681b      	ldr	r3, [r3, #0]
 8012ec4:	029b      	lsls	r3, r3, #10
 8012ec6:	4aa1      	ldr	r2, [pc, #644]	; (801314c <BSP_GUI_LoadDataFromFlash+0x31c>)
 8012ec8:	4013      	ands	r3, r2
 8012eca:	0adb      	lsrs	r3, r3, #11
 8012ecc:	031b      	lsls	r3, r3, #12
 8012ece:	4aa2      	ldr	r2, [pc, #648]	; (8013158 <BSP_GUI_LoadDataFromFlash+0x328>)
 8012ed0:	189a      	adds	r2, r3, r2
 8012ed2:	e009      	b.n	8012ee8 <BSP_GUI_LoadDataFromFlash+0xb8>
 8012ed4:	4b9c      	ldr	r3, [pc, #624]	; (8013148 <BSP_GUI_LoadDataFromFlash+0x318>)
 8012ed6:	681b      	ldr	r3, [r3, #0]
 8012ed8:	029b      	lsls	r3, r3, #10
 8012eda:	085b      	lsrs	r3, r3, #1
 8012edc:	4a9d      	ldr	r2, [pc, #628]	; (8013154 <BSP_GUI_LoadDataFromFlash+0x324>)
 8012ede:	4013      	ands	r3, r2
 8012ee0:	0adb      	lsrs	r3, r3, #11
 8012ee2:	031b      	lsls	r3, r3, #12
 8012ee4:	4a9c      	ldr	r2, [pc, #624]	; (8013158 <BSP_GUI_LoadDataFromFlash+0x328>)
 8012ee6:	189a      	adds	r2, r3, r2
 8012ee8:	4b95      	ldr	r3, [pc, #596]	; (8013140 <BSP_GUI_LoadDataFromFlash+0x310>)
 8012eea:	6819      	ldr	r1, [r3, #0]
 8012eec:	23c0      	movs	r3, #192	; 0xc0
 8012eee:	049b      	lsls	r3, r3, #18
 8012ef0:	400b      	ands	r3, r1
 8012ef2:	d00e      	beq.n	8012f12 <BSP_GUI_LoadDataFromFlash+0xe2>
 8012ef4:	4b92      	ldr	r3, [pc, #584]	; (8013140 <BSP_GUI_LoadDataFromFlash+0x310>)
 8012ef6:	6819      	ldr	r1, [r3, #0]
 8012ef8:	23c0      	movs	r3, #192	; 0xc0
 8012efa:	049b      	lsls	r3, r3, #18
 8012efc:	4019      	ands	r1, r3
 8012efe:	2380      	movs	r3, #128	; 0x80
 8012f00:	045b      	lsls	r3, r3, #17
 8012f02:	4299      	cmp	r1, r3
 8012f04:	d112      	bne.n	8012f2c <BSP_GUI_LoadDataFromFlash+0xfc>
 8012f06:	4b8f      	ldr	r3, [pc, #572]	; (8013144 <BSP_GUI_LoadDataFromFlash+0x314>)
 8012f08:	6819      	ldr	r1, [r3, #0]
 8012f0a:	2380      	movs	r3, #128	; 0x80
 8012f0c:	039b      	lsls	r3, r3, #14
 8012f0e:	400b      	ands	r3, r1
 8012f10:	d10c      	bne.n	8012f2c <BSP_GUI_LoadDataFromFlash+0xfc>
 8012f12:	4b8d      	ldr	r3, [pc, #564]	; (8013148 <BSP_GUI_LoadDataFromFlash+0x318>)
 8012f14:	681b      	ldr	r3, [r3, #0]
 8012f16:	029b      	lsls	r3, r3, #10
 8012f18:	498c      	ldr	r1, [pc, #560]	; (801314c <BSP_GUI_LoadDataFromFlash+0x31c>)
 8012f1a:	400b      	ands	r3, r1
 8012f1c:	0adb      	lsrs	r3, r3, #11
 8012f1e:	2180      	movs	r1, #128	; 0x80
 8012f20:	0209      	lsls	r1, r1, #8
 8012f22:	468c      	mov	ip, r1
 8012f24:	4463      	add	r3, ip
 8012f26:	031b      	lsls	r3, r3, #12
 8012f28:	3b01      	subs	r3, #1
 8012f2a:	e00c      	b.n	8012f46 <BSP_GUI_LoadDataFromFlash+0x116>
 8012f2c:	4b86      	ldr	r3, [pc, #536]	; (8013148 <BSP_GUI_LoadDataFromFlash+0x318>)
 8012f2e:	681b      	ldr	r3, [r3, #0]
 8012f30:	029b      	lsls	r3, r3, #10
 8012f32:	085b      	lsrs	r3, r3, #1
 8012f34:	4987      	ldr	r1, [pc, #540]	; (8013154 <BSP_GUI_LoadDataFromFlash+0x324>)
 8012f36:	400b      	ands	r3, r1
 8012f38:	0adb      	lsrs	r3, r3, #11
 8012f3a:	2180      	movs	r1, #128	; 0x80
 8012f3c:	0209      	lsls	r1, r1, #8
 8012f3e:	468c      	mov	ip, r1
 8012f40:	4463      	add	r3, ip
 8012f42:	031b      	lsls	r3, r3, #12
 8012f44:	3b01      	subs	r3, #1
 8012f46:	429a      	cmp	r2, r3
 8012f48:	d900      	bls.n	8012f4c <BSP_GUI_LoadDataFromFlash+0x11c>
 8012f4a:	e17a      	b.n	8013242 <BSP_GUI_LoadDataFromFlash+0x412>
  }

#if defined(GUI_FLASH_MAGIC_NUMBER)
  /* check that GUI area has not been corrupted */
#if defined(FLASH_TYPEPROGRAM_DOUBLEWORD)
  if ((0xFFFFFFFFu != *((uint32_t *)_addr)) && (MagicNumber != *((uint64_t *)_addr)))
 8012f4c:	68bb      	ldr	r3, [r7, #8]
 8012f4e:	681b      	ldr	r3, [r3, #0]
 8012f50:	3301      	adds	r3, #1
 8012f52:	d011      	beq.n	8012f78 <BSP_GUI_LoadDataFromFlash+0x148>
 8012f54:	68bb      	ldr	r3, [r7, #8]
 8012f56:	681a      	ldr	r2, [r3, #0]
 8012f58:	685b      	ldr	r3, [r3, #4]
 8012f5a:	4880      	ldr	r0, [pc, #512]	; (801315c <BSP_GUI_LoadDataFromFlash+0x32c>)
 8012f5c:	4980      	ldr	r1, [pc, #512]	; (8013160 <BSP_GUI_LoadDataFromFlash+0x330>)
 8012f5e:	4282      	cmp	r2, r0
 8012f60:	d101      	bne.n	8012f66 <BSP_GUI_LoadDataFromFlash+0x136>
 8012f62:	428b      	cmp	r3, r1
 8012f64:	d008      	beq.n	8012f78 <BSP_GUI_LoadDataFromFlash+0x148>
#warning "Flash program option undefined"
#endif  /* FLASH_TYPEPROGRAM_DOUBLEWORD */
  {
#if defined(_TRACE)
    /* Memory has been corrupted */
    USBPD_TRACE_Add(USBPD_TRACE_DEBUG, 0U, 0U, (uint8_t *)"GUI Memory is corrupted", sizeof("GUI Memory is corrupted"));
 8012f66:	4b7f      	ldr	r3, [pc, #508]	; (8013164 <BSP_GUI_LoadDataFromFlash+0x334>)
 8012f68:	2218      	movs	r2, #24
 8012f6a:	9200      	str	r2, [sp, #0]
 8012f6c:	2200      	movs	r2, #0
 8012f6e:	2100      	movs	r1, #0
 8012f70:	2006      	movs	r0, #6
 8012f72:	f7f7 fe3f 	bl	800abf4 <USBPD_TRACE_Add>
#endif /* _TRACE */
    goto _exit;
 8012f76:	e167      	b.n	8013248 <BSP_GUI_LoadDataFromFlash+0x418>
  }
  if (0xFFFFFFFFu == *((uint32_t *)_addr))
 8012f78:	68bb      	ldr	r3, [r7, #8]
 8012f7a:	681b      	ldr	r3, [r3, #0]
 8012f7c:	3301      	adds	r3, #1
 8012f7e:	d100      	bne.n	8012f82 <BSP_GUI_LoadDataFromFlash+0x152>
 8012f80:	e161      	b.n	8013246 <BSP_GUI_LoadDataFromFlash+0x416>
  {
    /* Memory is empty no need to retrieve data from GUI area */
    goto _exit;
  }
  _addr = GUI_FLASH_ADDR_NB_PDO_SNK_P0;
 8012f82:	4b6f      	ldr	r3, [pc, #444]	; (8013140 <BSP_GUI_LoadDataFromFlash+0x310>)
 8012f84:	681a      	ldr	r2, [r3, #0]
 8012f86:	23c0      	movs	r3, #192	; 0xc0
 8012f88:	049b      	lsls	r3, r3, #18
 8012f8a:	4013      	ands	r3, r2
 8012f8c:	d00e      	beq.n	8012fac <BSP_GUI_LoadDataFromFlash+0x17c>
 8012f8e:	4b6c      	ldr	r3, [pc, #432]	; (8013140 <BSP_GUI_LoadDataFromFlash+0x310>)
 8012f90:	681a      	ldr	r2, [r3, #0]
 8012f92:	23c0      	movs	r3, #192	; 0xc0
 8012f94:	049b      	lsls	r3, r3, #18
 8012f96:	401a      	ands	r2, r3
 8012f98:	2380      	movs	r3, #128	; 0x80
 8012f9a:	045b      	lsls	r3, r3, #17
 8012f9c:	429a      	cmp	r2, r3
 8012f9e:	d110      	bne.n	8012fc2 <BSP_GUI_LoadDataFromFlash+0x192>
 8012fa0:	4b68      	ldr	r3, [pc, #416]	; (8013144 <BSP_GUI_LoadDataFromFlash+0x314>)
 8012fa2:	681a      	ldr	r2, [r3, #0]
 8012fa4:	2380      	movs	r3, #128	; 0x80
 8012fa6:	039b      	lsls	r3, r3, #14
 8012fa8:	4013      	ands	r3, r2
 8012faa:	d10a      	bne.n	8012fc2 <BSP_GUI_LoadDataFromFlash+0x192>
 8012fac:	4b66      	ldr	r3, [pc, #408]	; (8013148 <BSP_GUI_LoadDataFromFlash+0x318>)
 8012fae:	681b      	ldr	r3, [r3, #0]
 8012fb0:	029b      	lsls	r3, r3, #10
 8012fb2:	4a66      	ldr	r2, [pc, #408]	; (801314c <BSP_GUI_LoadDataFromFlash+0x31c>)
 8012fb4:	4013      	ands	r3, r2
 8012fb6:	0adb      	lsrs	r3, r3, #11
 8012fb8:	031b      	lsls	r3, r3, #12
 8012fba:	4a6b      	ldr	r2, [pc, #428]	; (8013168 <BSP_GUI_LoadDataFromFlash+0x338>)
 8012fbc:	4694      	mov	ip, r2
 8012fbe:	4463      	add	r3, ip
 8012fc0:	e00a      	b.n	8012fd8 <BSP_GUI_LoadDataFromFlash+0x1a8>
 8012fc2:	4b61      	ldr	r3, [pc, #388]	; (8013148 <BSP_GUI_LoadDataFromFlash+0x318>)
 8012fc4:	681b      	ldr	r3, [r3, #0]
 8012fc6:	029b      	lsls	r3, r3, #10
 8012fc8:	085b      	lsrs	r3, r3, #1
 8012fca:	4a62      	ldr	r2, [pc, #392]	; (8013154 <BSP_GUI_LoadDataFromFlash+0x324>)
 8012fcc:	4013      	ands	r3, r2
 8012fce:	0adb      	lsrs	r3, r3, #11
 8012fd0:	031b      	lsls	r3, r3, #12
 8012fd2:	4a65      	ldr	r2, [pc, #404]	; (8013168 <BSP_GUI_LoadDataFromFlash+0x338>)
 8012fd4:	4694      	mov	ip, r2
 8012fd6:	4463      	add	r3, ip
 8012fd8:	60bb      	str	r3, [r7, #8]
#endif /* GUI_FLASH_MAGIC_NUMBER */

  GUI_CHECK_IF_MEMORY_IS_CORRUPTED(_addr)
  {
    uint32_t *_ptr = (uint32_t *)USBPD_NbPDO;
 8012fda:	4b64      	ldr	r3, [pc, #400]	; (801316c <BSP_GUI_LoadDataFromFlash+0x33c>)
 8012fdc:	607b      	str	r3, [r7, #4]
    USBPD_WRITE32(_ptr, *((uint32_t *)_addr));
 8012fde:	230e      	movs	r3, #14
 8012fe0:	18fb      	adds	r3, r7, r3
 8012fe2:	2200      	movs	r2, #0
 8012fe4:	701a      	strb	r2, [r3, #0]
 8012fe6:	e012      	b.n	801300e <BSP_GUI_LoadDataFromFlash+0x1de>
 8012fe8:	68bb      	ldr	r3, [r7, #8]
 8012fea:	681a      	ldr	r2, [r3, #0]
 8012fec:	200e      	movs	r0, #14
 8012fee:	183b      	adds	r3, r7, r0
 8012ff0:	781b      	ldrb	r3, [r3, #0]
 8012ff2:	00db      	lsls	r3, r3, #3
 8012ff4:	40da      	lsrs	r2, r3
 8012ff6:	0011      	movs	r1, r2
 8012ff8:	183b      	adds	r3, r7, r0
 8012ffa:	781b      	ldrb	r3, [r3, #0]
 8012ffc:	687a      	ldr	r2, [r7, #4]
 8012ffe:	18d3      	adds	r3, r2, r3
 8013000:	b2ca      	uxtb	r2, r1
 8013002:	701a      	strb	r2, [r3, #0]
 8013004:	183b      	adds	r3, r7, r0
 8013006:	781a      	ldrb	r2, [r3, #0]
 8013008:	183b      	adds	r3, r7, r0
 801300a:	3201      	adds	r2, #1
 801300c:	701a      	strb	r2, [r3, #0]
 801300e:	230e      	movs	r3, #14
 8013010:	18fb      	adds	r3, r7, r3
 8013012:	781b      	ldrb	r3, [r3, #0]
 8013014:	2b03      	cmp	r3, #3
 8013016:	d9e7      	bls.n	8012fe8 <BSP_GUI_LoadDataFromFlash+0x1b8>
    _status = GUI_OK;
 8013018:	230f      	movs	r3, #15
 801301a:	18fb      	adds	r3, r7, r3
 801301c:	2200      	movs	r2, #0
 801301e:	701a      	strb	r2, [r3, #0]
  _status |= LoadPDOFromFlash(GUI_FLASH_ADDR_PDO_SRC_P0, PORT0_PDO_ListSRC);
#endif /* _SRC || _DRP */

#if defined(_SNK) || defined(_DRP)
  /* Load PORT0_PDO_ListSNK */
  _status |= LoadPDOFromFlash(GUI_FLASH_ADDR_PDO_SNK_P0, PORT0_PDO_ListSNK);
 8013020:	4b47      	ldr	r3, [pc, #284]	; (8013140 <BSP_GUI_LoadDataFromFlash+0x310>)
 8013022:	681a      	ldr	r2, [r3, #0]
 8013024:	23c0      	movs	r3, #192	; 0xc0
 8013026:	049b      	lsls	r3, r3, #18
 8013028:	4013      	ands	r3, r2
 801302a:	d00e      	beq.n	801304a <BSP_GUI_LoadDataFromFlash+0x21a>
 801302c:	4b44      	ldr	r3, [pc, #272]	; (8013140 <BSP_GUI_LoadDataFromFlash+0x310>)
 801302e:	681a      	ldr	r2, [r3, #0]
 8013030:	23c0      	movs	r3, #192	; 0xc0
 8013032:	049b      	lsls	r3, r3, #18
 8013034:	401a      	ands	r2, r3
 8013036:	2380      	movs	r3, #128	; 0x80
 8013038:	045b      	lsls	r3, r3, #17
 801303a:	429a      	cmp	r2, r3
 801303c:	d110      	bne.n	8013060 <BSP_GUI_LoadDataFromFlash+0x230>
 801303e:	4b41      	ldr	r3, [pc, #260]	; (8013144 <BSP_GUI_LoadDataFromFlash+0x314>)
 8013040:	681a      	ldr	r2, [r3, #0]
 8013042:	2380      	movs	r3, #128	; 0x80
 8013044:	039b      	lsls	r3, r3, #14
 8013046:	4013      	ands	r3, r2
 8013048:	d10a      	bne.n	8013060 <BSP_GUI_LoadDataFromFlash+0x230>
 801304a:	4b3f      	ldr	r3, [pc, #252]	; (8013148 <BSP_GUI_LoadDataFromFlash+0x318>)
 801304c:	681b      	ldr	r3, [r3, #0]
 801304e:	029b      	lsls	r3, r3, #10
 8013050:	4a3e      	ldr	r2, [pc, #248]	; (801314c <BSP_GUI_LoadDataFromFlash+0x31c>)
 8013052:	4013      	ands	r3, r2
 8013054:	0adb      	lsrs	r3, r3, #11
 8013056:	031b      	lsls	r3, r3, #12
 8013058:	4a45      	ldr	r2, [pc, #276]	; (8013170 <BSP_GUI_LoadDataFromFlash+0x340>)
 801305a:	4694      	mov	ip, r2
 801305c:	4463      	add	r3, ip
 801305e:	e00a      	b.n	8013076 <BSP_GUI_LoadDataFromFlash+0x246>
 8013060:	4b39      	ldr	r3, [pc, #228]	; (8013148 <BSP_GUI_LoadDataFromFlash+0x318>)
 8013062:	681b      	ldr	r3, [r3, #0]
 8013064:	029b      	lsls	r3, r3, #10
 8013066:	085b      	lsrs	r3, r3, #1
 8013068:	4a3a      	ldr	r2, [pc, #232]	; (8013154 <BSP_GUI_LoadDataFromFlash+0x324>)
 801306a:	4013      	ands	r3, r2
 801306c:	0adb      	lsrs	r3, r3, #11
 801306e:	031b      	lsls	r3, r3, #12
 8013070:	4a3f      	ldr	r2, [pc, #252]	; (8013170 <BSP_GUI_LoadDataFromFlash+0x340>)
 8013072:	4694      	mov	ip, r2
 8013074:	4463      	add	r3, ip
 8013076:	4a3f      	ldr	r2, [pc, #252]	; (8013174 <BSP_GUI_LoadDataFromFlash+0x344>)
 8013078:	0011      	movs	r1, r2
 801307a:	0018      	movs	r0, r3
 801307c:	f000 fc52 	bl	8013924 <LoadPDOFromFlash>
 8013080:	0003      	movs	r3, r0
 8013082:	0019      	movs	r1, r3
 8013084:	220f      	movs	r2, #15
 8013086:	18bb      	adds	r3, r7, r2
 8013088:	18ba      	adds	r2, r7, r2
 801308a:	7812      	ldrb	r2, [r2, #0]
 801308c:	430a      	orrs	r2, r1
 801308e:	701a      	strb	r2, [r3, #0]
  _status |= LoadPDOFromFlash(GUI_FLASH_ADDR_PDO_SNK_P1, PORT1_PDO_ListSNK);
#endif /* _SNK || _DRP */
#endif /* USBPD_PORT_COUNT==2 */

  /* Load DPM_Settings of port 0 */
  _status |= LoadSettingsFromFlash(GUI_FLASH_ADDR_DPM_SETTINGS, (uint32_t *)DPM_Settings,
 8013090:	4b2b      	ldr	r3, [pc, #172]	; (8013140 <BSP_GUI_LoadDataFromFlash+0x310>)
 8013092:	681a      	ldr	r2, [r3, #0]
 8013094:	23c0      	movs	r3, #192	; 0xc0
 8013096:	049b      	lsls	r3, r3, #18
 8013098:	4013      	ands	r3, r2
 801309a:	d00e      	beq.n	80130ba <BSP_GUI_LoadDataFromFlash+0x28a>
 801309c:	4b28      	ldr	r3, [pc, #160]	; (8013140 <BSP_GUI_LoadDataFromFlash+0x310>)
 801309e:	681a      	ldr	r2, [r3, #0]
 80130a0:	23c0      	movs	r3, #192	; 0xc0
 80130a2:	049b      	lsls	r3, r3, #18
 80130a4:	401a      	ands	r2, r3
 80130a6:	2380      	movs	r3, #128	; 0x80
 80130a8:	045b      	lsls	r3, r3, #17
 80130aa:	429a      	cmp	r2, r3
 80130ac:	d110      	bne.n	80130d0 <BSP_GUI_LoadDataFromFlash+0x2a0>
 80130ae:	4b25      	ldr	r3, [pc, #148]	; (8013144 <BSP_GUI_LoadDataFromFlash+0x314>)
 80130b0:	681a      	ldr	r2, [r3, #0]
 80130b2:	2380      	movs	r3, #128	; 0x80
 80130b4:	039b      	lsls	r3, r3, #14
 80130b6:	4013      	ands	r3, r2
 80130b8:	d10a      	bne.n	80130d0 <BSP_GUI_LoadDataFromFlash+0x2a0>
 80130ba:	4b23      	ldr	r3, [pc, #140]	; (8013148 <BSP_GUI_LoadDataFromFlash+0x318>)
 80130bc:	681b      	ldr	r3, [r3, #0]
 80130be:	029b      	lsls	r3, r3, #10
 80130c0:	4a22      	ldr	r2, [pc, #136]	; (801314c <BSP_GUI_LoadDataFromFlash+0x31c>)
 80130c2:	4013      	ands	r3, r2
 80130c4:	0adb      	lsrs	r3, r3, #11
 80130c6:	031b      	lsls	r3, r3, #12
 80130c8:	4a2b      	ldr	r2, [pc, #172]	; (8013178 <BSP_GUI_LoadDataFromFlash+0x348>)
 80130ca:	4694      	mov	ip, r2
 80130cc:	4463      	add	r3, ip
 80130ce:	e00a      	b.n	80130e6 <BSP_GUI_LoadDataFromFlash+0x2b6>
 80130d0:	4b1d      	ldr	r3, [pc, #116]	; (8013148 <BSP_GUI_LoadDataFromFlash+0x318>)
 80130d2:	681b      	ldr	r3, [r3, #0]
 80130d4:	029b      	lsls	r3, r3, #10
 80130d6:	085b      	lsrs	r3, r3, #1
 80130d8:	4a1e      	ldr	r2, [pc, #120]	; (8013154 <BSP_GUI_LoadDataFromFlash+0x324>)
 80130da:	4013      	ands	r3, r2
 80130dc:	0adb      	lsrs	r3, r3, #11
 80130de:	031b      	lsls	r3, r3, #12
 80130e0:	4a25      	ldr	r2, [pc, #148]	; (8013178 <BSP_GUI_LoadDataFromFlash+0x348>)
 80130e2:	4694      	mov	ip, r2
 80130e4:	4463      	add	r3, ip
 80130e6:	4925      	ldr	r1, [pc, #148]	; (801317c <BSP_GUI_LoadDataFromFlash+0x34c>)
 80130e8:	220c      	movs	r2, #12
 80130ea:	0018      	movs	r0, r3
 80130ec:	f000 fc42 	bl	8013974 <LoadSettingsFromFlash>
 80130f0:	0003      	movs	r3, r0
 80130f2:	0019      	movs	r1, r3
 80130f4:	220f      	movs	r2, #15
 80130f6:	18bb      	adds	r3, r7, r2
 80130f8:	18ba      	adds	r2, r7, r2
 80130fa:	7812      	ldrb	r2, [r2, #0]
 80130fc:	430a      	orrs	r2, r1
 80130fe:	701a      	strb	r2, [r3, #0]
                                   sizeof(USBPD_SettingsTypeDef) * (uint32_t)USBPD_PORT_COUNT);

#if defined(GUI_FLASH_ADDR_DPM_ID_SETTINGS)
  /* Load DPM_ID_Settings */
  _status |= LoadSettingsFromFlash(GUI_FLASH_ADDR_DPM_ID_SETTINGS, (uint32_t *)DPM_ID_Settings,
 8013100:	4b0f      	ldr	r3, [pc, #60]	; (8013140 <BSP_GUI_LoadDataFromFlash+0x310>)
 8013102:	681a      	ldr	r2, [r3, #0]
 8013104:	23c0      	movs	r3, #192	; 0xc0
 8013106:	049b      	lsls	r3, r3, #18
 8013108:	4013      	ands	r3, r2
 801310a:	d00e      	beq.n	801312a <BSP_GUI_LoadDataFromFlash+0x2fa>
 801310c:	4b0c      	ldr	r3, [pc, #48]	; (8013140 <BSP_GUI_LoadDataFromFlash+0x310>)
 801310e:	681a      	ldr	r2, [r3, #0]
 8013110:	23c0      	movs	r3, #192	; 0xc0
 8013112:	049b      	lsls	r3, r3, #18
 8013114:	401a      	ands	r2, r3
 8013116:	2380      	movs	r3, #128	; 0x80
 8013118:	045b      	lsls	r3, r3, #17
 801311a:	429a      	cmp	r2, r3
 801311c:	d132      	bne.n	8013184 <BSP_GUI_LoadDataFromFlash+0x354>
 801311e:	4b09      	ldr	r3, [pc, #36]	; (8013144 <BSP_GUI_LoadDataFromFlash+0x314>)
 8013120:	681a      	ldr	r2, [r3, #0]
 8013122:	2380      	movs	r3, #128	; 0x80
 8013124:	039b      	lsls	r3, r3, #14
 8013126:	4013      	ands	r3, r2
 8013128:	d12c      	bne.n	8013184 <BSP_GUI_LoadDataFromFlash+0x354>
 801312a:	4b07      	ldr	r3, [pc, #28]	; (8013148 <BSP_GUI_LoadDataFromFlash+0x318>)
 801312c:	681b      	ldr	r3, [r3, #0]
 801312e:	029b      	lsls	r3, r3, #10
 8013130:	4a06      	ldr	r2, [pc, #24]	; (801314c <BSP_GUI_LoadDataFromFlash+0x31c>)
 8013132:	4013      	ands	r3, r2
 8013134:	0adb      	lsrs	r3, r3, #11
 8013136:	031b      	lsls	r3, r3, #12
 8013138:	4a11      	ldr	r2, [pc, #68]	; (8013180 <BSP_GUI_LoadDataFromFlash+0x350>)
 801313a:	4694      	mov	ip, r2
 801313c:	4463      	add	r3, ip
 801313e:	e02c      	b.n	801319a <BSP_GUI_LoadDataFromFlash+0x36a>
 8013140:	1fff7500 	.word	0x1fff7500
 8013144:	40022020 	.word	0x40022020
 8013148:	1fff75e0 	.word	0x1fff75e0
 801314c:	000ffc00 	.word	0x000ffc00
 8013150:	07fff800 	.word	0x07fff800
 8013154:	0007fe00 	.word	0x0007fe00
 8013158:	07fff924 	.word	0x07fff924
 801315c:	deadf00d 	.word	0xdeadf00d
 8013160:	deadbabe 	.word	0xdeadbabe
 8013164:	08019838 	.word	0x08019838
 8013168:	07fff808 	.word	0x07fff808
 801316c:	2000009c 	.word	0x2000009c
 8013170:	07fff830 	.word	0x07fff830
 8013174:	200000a0 	.word	0x200000a0
 8013178:	07fff890 	.word	0x07fff890
 801317c:	20000014 	.word	0x20000014
 8013180:	07fff91c 	.word	0x07fff91c
 8013184:	4b34      	ldr	r3, [pc, #208]	; (8013258 <BSP_GUI_LoadDataFromFlash+0x428>)
 8013186:	681b      	ldr	r3, [r3, #0]
 8013188:	029b      	lsls	r3, r3, #10
 801318a:	085b      	lsrs	r3, r3, #1
 801318c:	4a33      	ldr	r2, [pc, #204]	; (801325c <BSP_GUI_LoadDataFromFlash+0x42c>)
 801318e:	4013      	ands	r3, r2
 8013190:	0adb      	lsrs	r3, r3, #11
 8013192:	031b      	lsls	r3, r3, #12
 8013194:	4a32      	ldr	r2, [pc, #200]	; (8013260 <BSP_GUI_LoadDataFromFlash+0x430>)
 8013196:	4694      	mov	ip, r2
 8013198:	4463      	add	r3, ip
 801319a:	4932      	ldr	r1, [pc, #200]	; (8013264 <BSP_GUI_LoadDataFromFlash+0x434>)
 801319c:	2208      	movs	r2, #8
 801319e:	0018      	movs	r0, r3
 80131a0:	f000 fbe8 	bl	8013974 <LoadSettingsFromFlash>
 80131a4:	0003      	movs	r3, r0
 80131a6:	0019      	movs	r1, r3
 80131a8:	220f      	movs	r2, #15
 80131aa:	18bb      	adds	r3, r7, r2
 80131ac:	18ba      	adds	r2, r7, r2
 80131ae:	7812      	ldrb	r2, [r2, #0]
 80131b0:	430a      	orrs	r2, r1
 80131b2:	701a      	strb	r2, [r3, #0]
                                   sizeof(USBPD_IdSettingsTypeDef) * (uint32_t)USBPD_PORT_COUNT);
#endif /* GUI_FLASH_ADDR_DPM_ID_SETTINGS */

  /* Load DPM_Settings of port 0 */
  _status |= LoadSettingsFromFlash(GUI_FLASH_ADDR_DPM_USER_SETTINGS, (uint32_t *)DPM_USER_Settings,
 80131b4:	4b2c      	ldr	r3, [pc, #176]	; (8013268 <BSP_GUI_LoadDataFromFlash+0x438>)
 80131b6:	681a      	ldr	r2, [r3, #0]
 80131b8:	23c0      	movs	r3, #192	; 0xc0
 80131ba:	049b      	lsls	r3, r3, #18
 80131bc:	4013      	ands	r3, r2
 80131be:	d00e      	beq.n	80131de <BSP_GUI_LoadDataFromFlash+0x3ae>
 80131c0:	4b29      	ldr	r3, [pc, #164]	; (8013268 <BSP_GUI_LoadDataFromFlash+0x438>)
 80131c2:	681a      	ldr	r2, [r3, #0]
 80131c4:	23c0      	movs	r3, #192	; 0xc0
 80131c6:	049b      	lsls	r3, r3, #18
 80131c8:	401a      	ands	r2, r3
 80131ca:	2380      	movs	r3, #128	; 0x80
 80131cc:	045b      	lsls	r3, r3, #17
 80131ce:	429a      	cmp	r2, r3
 80131d0:	d110      	bne.n	80131f4 <BSP_GUI_LoadDataFromFlash+0x3c4>
 80131d2:	4b26      	ldr	r3, [pc, #152]	; (801326c <BSP_GUI_LoadDataFromFlash+0x43c>)
 80131d4:	681a      	ldr	r2, [r3, #0]
 80131d6:	2380      	movs	r3, #128	; 0x80
 80131d8:	039b      	lsls	r3, r3, #14
 80131da:	4013      	ands	r3, r2
 80131dc:	d10a      	bne.n	80131f4 <BSP_GUI_LoadDataFromFlash+0x3c4>
 80131de:	4b1e      	ldr	r3, [pc, #120]	; (8013258 <BSP_GUI_LoadDataFromFlash+0x428>)
 80131e0:	681b      	ldr	r3, [r3, #0]
 80131e2:	029b      	lsls	r3, r3, #10
 80131e4:	4a22      	ldr	r2, [pc, #136]	; (8013270 <BSP_GUI_LoadDataFromFlash+0x440>)
 80131e6:	4013      	ands	r3, r2
 80131e8:	0adb      	lsrs	r3, r3, #11
 80131ea:	031b      	lsls	r3, r3, #12
 80131ec:	4a21      	ldr	r2, [pc, #132]	; (8013274 <BSP_GUI_LoadDataFromFlash+0x444>)
 80131ee:	4694      	mov	ip, r2
 80131f0:	4463      	add	r3, ip
 80131f2:	e00a      	b.n	801320a <BSP_GUI_LoadDataFromFlash+0x3da>
 80131f4:	4b18      	ldr	r3, [pc, #96]	; (8013258 <BSP_GUI_LoadDataFromFlash+0x428>)
 80131f6:	681b      	ldr	r3, [r3, #0]
 80131f8:	029b      	lsls	r3, r3, #10
 80131fa:	085b      	lsrs	r3, r3, #1
 80131fc:	4a17      	ldr	r2, [pc, #92]	; (801325c <BSP_GUI_LoadDataFromFlash+0x42c>)
 80131fe:	4013      	ands	r3, r2
 8013200:	0adb      	lsrs	r3, r3, #11
 8013202:	031b      	lsls	r3, r3, #12
 8013204:	4a1b      	ldr	r2, [pc, #108]	; (8013274 <BSP_GUI_LoadDataFromFlash+0x444>)
 8013206:	4694      	mov	ip, r2
 8013208:	4463      	add	r3, ip
 801320a:	491b      	ldr	r1, [pc, #108]	; (8013278 <BSP_GUI_LoadDataFromFlash+0x448>)
 801320c:	2274      	movs	r2, #116	; 0x74
 801320e:	0018      	movs	r0, r3
 8013210:	f000 fbb0 	bl	8013974 <LoadSettingsFromFlash>
 8013214:	0003      	movs	r3, r0
 8013216:	0019      	movs	r1, r3
 8013218:	220f      	movs	r2, #15
 801321a:	18bb      	adds	r3, r7, r2
 801321c:	18ba      	adds	r2, r7, r2
 801321e:	7812      	ldrb	r2, [r2, #0]
 8013220:	430a      	orrs	r2, r1
 8013222:	701a      	strb	r2, [r3, #0]
  DPM_USER_Settings[USBPD_PORT_1].DPM_SRCExtendedCapa.VID = DPM_ID_Settings[USBPD_PORT_1].VID;
  DPM_USER_Settings[USBPD_PORT_1].DPM_SRCExtendedCapa.PID = DPM_ID_Settings[USBPD_PORT_1].PID;
#endif /* USBPD_PORT_COUNT==2 */
#endif /* _SRC_CAPA_EXT && (_SRC || _DRP) */
#if defined(_SNK)||defined(_DRP)
  DPM_USER_Settings[USBPD_PORT_0].DPM_SNKExtendedCapa.XID = DPM_ID_Settings[USBPD_PORT_0].XID;
 8013224:	4b0f      	ldr	r3, [pc, #60]	; (8013264 <BSP_GUI_LoadDataFromFlash+0x434>)
 8013226:	681a      	ldr	r2, [r3, #0]
 8013228:	4b13      	ldr	r3, [pc, #76]	; (8013278 <BSP_GUI_LoadDataFromFlash+0x448>)
 801322a:	655a      	str	r2, [r3, #84]	; 0x54
  DPM_USER_Settings[USBPD_PORT_0].DPM_SNKExtendedCapa.VID = DPM_ID_Settings[USBPD_PORT_0].VID;
 801322c:	4b0d      	ldr	r3, [pc, #52]	; (8013264 <BSP_GUI_LoadDataFromFlash+0x434>)
 801322e:	8899      	ldrh	r1, [r3, #4]
 8013230:	4b11      	ldr	r3, [pc, #68]	; (8013278 <BSP_GUI_LoadDataFromFlash+0x448>)
 8013232:	2250      	movs	r2, #80	; 0x50
 8013234:	5299      	strh	r1, [r3, r2]
  DPM_USER_Settings[USBPD_PORT_0].DPM_SNKExtendedCapa.PID = DPM_ID_Settings[USBPD_PORT_0].PID;
 8013236:	4b0b      	ldr	r3, [pc, #44]	; (8013264 <BSP_GUI_LoadDataFromFlash+0x434>)
 8013238:	88d9      	ldrh	r1, [r3, #6]
 801323a:	4b0f      	ldr	r3, [pc, #60]	; (8013278 <BSP_GUI_LoadDataFromFlash+0x448>)
 801323c:	2252      	movs	r2, #82	; 0x52
 801323e:	5299      	strh	r1, [r3, r2]
 8013240:	e002      	b.n	8013248 <BSP_GUI_LoadDataFromFlash+0x418>
    goto _exit;
 8013242:	46c0      	nop			; (mov r8, r8)
 8013244:	e000      	b.n	8013248 <BSP_GUI_LoadDataFromFlash+0x418>
    goto _exit;
 8013246:	46c0      	nop			; (mov r8, r8)
#endif /* USBPD_PORT_COUNT==2 */
#endif /* _VDM */
#endif /* GUI_FLASH_ADDR_DPM_ID_SETTINGS */

_exit:
  return _status;
 8013248:	230f      	movs	r3, #15
 801324a:	18fb      	adds	r3, r7, r3
 801324c:	781b      	ldrb	r3, [r3, #0]
}
 801324e:	0018      	movs	r0, r3
 8013250:	46bd      	mov	sp, r7
 8013252:	b004      	add	sp, #16
 8013254:	bd80      	pop	{r7, pc}
 8013256:	46c0      	nop			; (mov r8, r8)
 8013258:	1fff75e0 	.word	0x1fff75e0
 801325c:	0007fe00 	.word	0x0007fe00
 8013260:	07fff91c 	.word	0x07fff91c
 8013264:	20000020 	.word	0x20000020
 8013268:	1fff7500 	.word	0x1fff7500
 801326c:	40022020 	.word	0x40022020
 8013270:	000ffc00 	.word	0x000ffc00
 8013274:	07fff89c 	.word	0x07fff89c
 8013278:	20000028 	.word	0x20000028

0801327c <BSP_GUI_SaveDataInFlash>:

  return status;
}

GUI_StatusTypeDef BSP_GUI_SaveDataInFlash(void)
{
 801327c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801327e:	b099      	sub	sp, #100	; 0x64
 8013280:	af00      	add	r7, sp, #0
  GUI_StatusTypeDef status = GUI_OK;
 8013282:	2327      	movs	r3, #39	; 0x27
 8013284:	2638      	movs	r6, #56	; 0x38
 8013286:	199b      	adds	r3, r3, r6
 8013288:	19da      	adds	r2, r3, r7
 801328a:	2300      	movs	r3, #0
 801328c:	7013      	strb	r3, [r2, #0]
  __ASM volatile ("cpsid i" : : : "memory");
 801328e:	b672      	cpsid	i
}
 8013290:	46c0      	nop			; (mov r8, r8)

  /* Disable interrupts */
  __disable_irq();

  /* Init Flash registers for writing */
  (void)HAL_FLASH_Unlock();
 8013292:	f7f5 f9df 	bl	8008654 <HAL_FLASH_Unlock>
  erase_init.TypeErase     = FLASH_TYPEERASE_SECTORS;
  erase_init.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
  erase_init.Sector        = FLASH_SECTOR_ID;
  erase_init.NbSectors     = 1;
#else
  erase_init.TypeErase  = FLASH_TYPEERASE_PAGES;
 8013296:	2308      	movs	r3, #8
 8013298:	199b      	adds	r3, r3, r6
 801329a:	19da      	adds	r2, r3, r7
 801329c:	2302      	movs	r3, #2
 801329e:	6013      	str	r3, [r2, #0]

#if defined(STM32F072xB)|| defined(STM32F051x8)
  erase_init.PageAddress  = ADDR_FLASH_LAST_PAGE;
#else
  erase_init.Page       = INDEX_PAGE;
 80132a0:	4bbf      	ldr	r3, [pc, #764]	; (80135a0 <BSP_GUI_SaveDataInFlash+0x324>)
 80132a2:	681a      	ldr	r2, [r3, #0]
 80132a4:	23c0      	movs	r3, #192	; 0xc0
 80132a6:	049b      	lsls	r3, r3, #18
 80132a8:	4013      	ands	r3, r2
 80132aa:	d00e      	beq.n	80132ca <BSP_GUI_SaveDataInFlash+0x4e>
 80132ac:	4bbc      	ldr	r3, [pc, #752]	; (80135a0 <BSP_GUI_SaveDataInFlash+0x324>)
 80132ae:	681a      	ldr	r2, [r3, #0]
 80132b0:	23c0      	movs	r3, #192	; 0xc0
 80132b2:	049b      	lsls	r3, r3, #18
 80132b4:	401a      	ands	r2, r3
 80132b6:	2380      	movs	r3, #128	; 0x80
 80132b8:	045b      	lsls	r3, r3, #17
 80132ba:	429a      	cmp	r2, r3
 80132bc:	d10e      	bne.n	80132dc <BSP_GUI_SaveDataInFlash+0x60>
 80132be:	4bb9      	ldr	r3, [pc, #740]	; (80135a4 <BSP_GUI_SaveDataInFlash+0x328>)
 80132c0:	681a      	ldr	r2, [r3, #0]
 80132c2:	2380      	movs	r3, #128	; 0x80
 80132c4:	039b      	lsls	r3, r3, #14
 80132c6:	4013      	ands	r3, r2
 80132c8:	d108      	bne.n	80132dc <BSP_GUI_SaveDataInFlash+0x60>
 80132ca:	4bb7      	ldr	r3, [pc, #732]	; (80135a8 <BSP_GUI_SaveDataInFlash+0x32c>)
 80132cc:	681b      	ldr	r3, [r3, #0]
 80132ce:	029a      	lsls	r2, r3, #10
 80132d0:	4bb6      	ldr	r3, [pc, #728]	; (80135ac <BSP_GUI_SaveDataInFlash+0x330>)
 80132d2:	4013      	ands	r3, r2
 80132d4:	0adb      	lsrs	r3, r3, #11
 80132d6:	005b      	lsls	r3, r3, #1
 80132d8:	1e5a      	subs	r2, r3, #1
 80132da:	e008      	b.n	80132ee <BSP_GUI_SaveDataInFlash+0x72>
 80132dc:	4bb2      	ldr	r3, [pc, #712]	; (80135a8 <BSP_GUI_SaveDataInFlash+0x32c>)
 80132de:	681b      	ldr	r3, [r3, #0]
 80132e0:	029b      	lsls	r3, r3, #10
 80132e2:	085a      	lsrs	r2, r3, #1
 80132e4:	4bb2      	ldr	r3, [pc, #712]	; (80135b0 <BSP_GUI_SaveDataInFlash+0x334>)
 80132e6:	4013      	ands	r3, r2
 80132e8:	0adb      	lsrs	r3, r3, #11
 80132ea:	005b      	lsls	r3, r3, #1
 80132ec:	1e5a      	subs	r2, r3, #1
 80132ee:	2108      	movs	r1, #8
 80132f0:	2038      	movs	r0, #56	; 0x38
 80132f2:	180b      	adds	r3, r1, r0
 80132f4:	19db      	adds	r3, r3, r7
 80132f6:	609a      	str	r2, [r3, #8]
#endif /* STM32F072xB || STM32F051x8 */
#if defined (FLASH_OPTR_DBANK)
  erase_init.Banks      = FLASH_BANK_2;
#elif defined(FLASH_BANK_2)
  erase_init.Banks      = FLASH_BANK_2;
 80132f8:	180b      	adds	r3, r1, r0
 80132fa:	19da      	adds	r2, r3, r7
 80132fc:	2380      	movs	r3, #128	; 0x80
 80132fe:	021b      	lsls	r3, r3, #8
 8013300:	6053      	str	r3, [r2, #4]
#elif defined(FLASH_BANK_1)
  erase_init.Banks      = FLASH_BANK_1;
#endif /* FLASH_OPTR_DBANK */
  erase_init.NbPages    = 1;
 8013302:	180b      	adds	r3, r1, r0
 8013304:	19da      	adds	r2, r3, r7
 8013306:	2301      	movs	r3, #1
 8013308:	60d3      	str	r3, [r2, #12]

#if defined(FLASH_SR_OPTVERR)
  /* Specific handling of STM32G0 and STM32G4 flash devices for allowing erase operations */
  if (FLASH->SR != 0x00)
 801330a:	4baa      	ldr	r3, [pc, #680]	; (80135b4 <BSP_GUI_SaveDataInFlash+0x338>)
 801330c:	691b      	ldr	r3, [r3, #16]
 801330e:	2b00      	cmp	r3, #0
 8013310:	d003      	beq.n	801331a <BSP_GUI_SaveDataInFlash+0x9e>
  {
    FLASH->SR = FLASH_SR_OPTVERR;
 8013312:	4aa8      	ldr	r2, [pc, #672]	; (80135b4 <BSP_GUI_SaveDataInFlash+0x338>)
 8013314:	2380      	movs	r3, #128	; 0x80
 8013316:	021b      	lsls	r3, r3, #8
 8013318:	6113      	str	r3, [r2, #16]
  }
#endif /* FLASH_SR_OPTVERR */
#endif /* FLASH_CR_SER */

  if (HAL_OK != HAL_FLASHEx_Erase(&erase_init, &page_error))
 801331a:	233c      	movs	r3, #60	; 0x3c
 801331c:	18fa      	adds	r2, r7, r3
 801331e:	2308      	movs	r3, #8
 8013320:	2638      	movs	r6, #56	; 0x38
 8013322:	199b      	adds	r3, r3, r6
 8013324:	19db      	adds	r3, r3, r7
 8013326:	0011      	movs	r1, r2
 8013328:	0018      	movs	r0, r3
 801332a:	f7f5 fa47 	bl	80087bc <HAL_FLASHEx_Erase>
 801332e:	1e03      	subs	r3, r0, #0
 8013330:	d004      	beq.n	801333c <BSP_GUI_SaveDataInFlash+0xc0>
  {
    status = GUI_ERASE_ERROR;
 8013332:	2327      	movs	r3, #39	; 0x27
 8013334:	199b      	adds	r3, r3, r6
 8013336:	19da      	adds	r2, r3, r7
 8013338:	2301      	movs	r3, #1
 801333a:	7013      	strb	r3, [r2, #0]
  }

  /* If Erase is OK, program the new data */
  if ((0xFFFFFFFFU == page_error) && (GUI_OK == status))
 801333c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801333e:	3301      	adds	r3, #1
 8013340:	d000      	beq.n	8013344 <BSP_GUI_SaveDataInFlash+0xc8>
 8013342:	e1d9      	b.n	80136f8 <BSP_GUI_SaveDataInFlash+0x47c>
 8013344:	2327      	movs	r3, #39	; 0x27
 8013346:	2238      	movs	r2, #56	; 0x38
 8013348:	189b      	adds	r3, r3, r2
 801334a:	19db      	adds	r3, r3, r7
 801334c:	781b      	ldrb	r3, [r3, #0]
 801334e:	2b00      	cmp	r3, #0
 8013350:	d000      	beq.n	8013354 <BSP_GUI_SaveDataInFlash+0xd8>
 8013352:	e1d1      	b.n	80136f8 <BSP_GUI_SaveDataInFlash+0x47c>
  {
#if defined(GUI_FLASH_MAGIC_NUMBER)
    /* Save magic Number */
#if defined(FLASH_TYPEPROGRAM_DOUBLEWORD)
    if (HAL_OK != HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD, GUI_FLASH_MAGIC_NUMBER, MagicNumber))
 8013354:	4b92      	ldr	r3, [pc, #584]	; (80135a0 <BSP_GUI_SaveDataInFlash+0x324>)
 8013356:	681a      	ldr	r2, [r3, #0]
 8013358:	23c0      	movs	r3, #192	; 0xc0
 801335a:	049b      	lsls	r3, r3, #18
 801335c:	4013      	ands	r3, r2
 801335e:	d00e      	beq.n	801337e <BSP_GUI_SaveDataInFlash+0x102>
 8013360:	4b8f      	ldr	r3, [pc, #572]	; (80135a0 <BSP_GUI_SaveDataInFlash+0x324>)
 8013362:	681a      	ldr	r2, [r3, #0]
 8013364:	23c0      	movs	r3, #192	; 0xc0
 8013366:	049b      	lsls	r3, r3, #18
 8013368:	401a      	ands	r2, r3
 801336a:	2380      	movs	r3, #128	; 0x80
 801336c:	045b      	lsls	r3, r3, #17
 801336e:	429a      	cmp	r2, r3
 8013370:	d10f      	bne.n	8013392 <BSP_GUI_SaveDataInFlash+0x116>
 8013372:	4b8c      	ldr	r3, [pc, #560]	; (80135a4 <BSP_GUI_SaveDataInFlash+0x328>)
 8013374:	681a      	ldr	r2, [r3, #0]
 8013376:	2380      	movs	r3, #128	; 0x80
 8013378:	039b      	lsls	r3, r3, #14
 801337a:	4013      	ands	r3, r2
 801337c:	d109      	bne.n	8013392 <BSP_GUI_SaveDataInFlash+0x116>
 801337e:	4b8a      	ldr	r3, [pc, #552]	; (80135a8 <BSP_GUI_SaveDataInFlash+0x32c>)
 8013380:	681b      	ldr	r3, [r3, #0]
 8013382:	029a      	lsls	r2, r3, #10
 8013384:	4b89      	ldr	r3, [pc, #548]	; (80135ac <BSP_GUI_SaveDataInFlash+0x330>)
 8013386:	4013      	ands	r3, r2
 8013388:	0adb      	lsrs	r3, r3, #11
 801338a:	031b      	lsls	r3, r3, #12
 801338c:	4a8a      	ldr	r2, [pc, #552]	; (80135b8 <BSP_GUI_SaveDataInFlash+0x33c>)
 801338e:	1899      	adds	r1, r3, r2
 8013390:	e009      	b.n	80133a6 <BSP_GUI_SaveDataInFlash+0x12a>
 8013392:	4b85      	ldr	r3, [pc, #532]	; (80135a8 <BSP_GUI_SaveDataInFlash+0x32c>)
 8013394:	681b      	ldr	r3, [r3, #0]
 8013396:	029b      	lsls	r3, r3, #10
 8013398:	085a      	lsrs	r2, r3, #1
 801339a:	4b85      	ldr	r3, [pc, #532]	; (80135b0 <BSP_GUI_SaveDataInFlash+0x334>)
 801339c:	4013      	ands	r3, r2
 801339e:	0adb      	lsrs	r3, r3, #11
 80133a0:	031b      	lsls	r3, r3, #12
 80133a2:	4a85      	ldr	r2, [pc, #532]	; (80135b8 <BSP_GUI_SaveDataInFlash+0x33c>)
 80133a4:	1899      	adds	r1, r3, r2
 80133a6:	4a85      	ldr	r2, [pc, #532]	; (80135bc <BSP_GUI_SaveDataInFlash+0x340>)
 80133a8:	4b85      	ldr	r3, [pc, #532]	; (80135c0 <BSP_GUI_SaveDataInFlash+0x344>)
 80133aa:	2001      	movs	r0, #1
 80133ac:	f7f5 f904 	bl	80085b8 <HAL_FLASH_Program>
 80133b0:	1e03      	subs	r3, r0, #0
 80133b2:	d005      	beq.n	80133c0 <BSP_GUI_SaveDataInFlash+0x144>
    {
      status = GUI_WRITE_ERROR;
 80133b4:	2327      	movs	r3, #39	; 0x27
 80133b6:	2238      	movs	r2, #56	; 0x38
 80133b8:	189b      	adds	r3, r3, r2
 80133ba:	19da      	adds	r2, r3, r7
 80133bc:	2302      	movs	r3, #2
 80133be:	7013      	strb	r3, [r2, #0]
#warning "Flash program option undefined"
#endif  /* FLASH_TYPEPROGRAM_DOUBLEWORD */
#endif /* GUI_FLASH_MAGIC_NUMBER */

#ifdef GUI_FLASH_ADDR_NB_PDO_SNK_P0
    if (GUI_OK == status)
 80133c0:	2327      	movs	r3, #39	; 0x27
 80133c2:	2238      	movs	r2, #56	; 0x38
 80133c4:	189b      	adds	r3, r3, r2
 80133c6:	19db      	adds	r3, r3, r7
 80133c8:	781b      	ldrb	r3, [r3, #0]
 80133ca:	2b00      	cmp	r3, #0
 80133cc:	d000      	beq.n	80133d0 <BSP_GUI_SaveDataInFlash+0x154>
 80133ce:	e082      	b.n	80134d6 <BSP_GUI_SaveDataInFlash+0x25a>
    {
#if defined(FLASH_TYPEPROGRAM_DOUBLEWORD)
      /* Save the nb of sink and src PDO */
      uint64_t value = 0;
 80133d0:	2200      	movs	r2, #0
 80133d2:	2300      	movs	r3, #0
 80133d4:	653a      	str	r2, [r7, #80]	; 0x50
 80133d6:	657b      	str	r3, [r7, #84]	; 0x54
      value |= USBPD_NbPDO[0];
 80133d8:	4b7a      	ldr	r3, [pc, #488]	; (80135c4 <BSP_GUI_SaveDataInFlash+0x348>)
 80133da:	781b      	ldrb	r3, [r3, #0]
 80133dc:	633b      	str	r3, [r7, #48]	; 0x30
 80133de:	2300      	movs	r3, #0
 80133e0:	637b      	str	r3, [r7, #52]	; 0x34
 80133e2:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80133e4:	6b39      	ldr	r1, [r7, #48]	; 0x30
 80133e6:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80133e8:	0008      	movs	r0, r1
 80133ea:	4318      	orrs	r0, r3
 80133ec:	0004      	movs	r4, r0
 80133ee:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80133f0:	431a      	orrs	r2, r3
 80133f2:	0015      	movs	r5, r2
 80133f4:	653c      	str	r4, [r7, #80]	; 0x50
 80133f6:	657d      	str	r5, [r7, #84]	; 0x54
      value |= (USBPD_NbPDO[1] << 8);
 80133f8:	4b72      	ldr	r3, [pc, #456]	; (80135c4 <BSP_GUI_SaveDataInFlash+0x348>)
 80133fa:	785b      	ldrb	r3, [r3, #1]
 80133fc:	021b      	lsls	r3, r3, #8
 80133fe:	62bb      	str	r3, [r7, #40]	; 0x28
 8013400:	17db      	asrs	r3, r3, #31
 8013402:	62fb      	str	r3, [r7, #44]	; 0x2c
 8013404:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8013406:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8013408:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 801340a:	0008      	movs	r0, r1
 801340c:	4318      	orrs	r0, r3
 801340e:	6138      	str	r0, [r7, #16]
 8013410:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8013412:	431a      	orrs	r2, r3
 8013414:	617a      	str	r2, [r7, #20]
 8013416:	693b      	ldr	r3, [r7, #16]
 8013418:	697c      	ldr	r4, [r7, #20]
 801341a:	653b      	str	r3, [r7, #80]	; 0x50
 801341c:	657c      	str	r4, [r7, #84]	; 0x54
      value |= (USBPD_NbPDO[2] << 16);
 801341e:	4b69      	ldr	r3, [pc, #420]	; (80135c4 <BSP_GUI_SaveDataInFlash+0x348>)
 8013420:	789b      	ldrb	r3, [r3, #2]
 8013422:	041b      	lsls	r3, r3, #16
 8013424:	623b      	str	r3, [r7, #32]
 8013426:	17db      	asrs	r3, r3, #31
 8013428:	627b      	str	r3, [r7, #36]	; 0x24
 801342a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 801342c:	6a39      	ldr	r1, [r7, #32]
 801342e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8013430:	0008      	movs	r0, r1
 8013432:	4318      	orrs	r0, r3
 8013434:	60b8      	str	r0, [r7, #8]
 8013436:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8013438:	431a      	orrs	r2, r3
 801343a:	60fa      	str	r2, [r7, #12]
 801343c:	68bb      	ldr	r3, [r7, #8]
 801343e:	68fc      	ldr	r4, [r7, #12]
 8013440:	653b      	str	r3, [r7, #80]	; 0x50
 8013442:	657c      	str	r4, [r7, #84]	; 0x54
      value |= (USBPD_NbPDO[3] << 24);
 8013444:	4b5f      	ldr	r3, [pc, #380]	; (80135c4 <BSP_GUI_SaveDataInFlash+0x348>)
 8013446:	78db      	ldrb	r3, [r3, #3]
 8013448:	061b      	lsls	r3, r3, #24
 801344a:	61bb      	str	r3, [r7, #24]
 801344c:	17db      	asrs	r3, r3, #31
 801344e:	61fb      	str	r3, [r7, #28]
 8013450:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8013452:	69b9      	ldr	r1, [r7, #24]
 8013454:	69fa      	ldr	r2, [r7, #28]
 8013456:	0008      	movs	r0, r1
 8013458:	4318      	orrs	r0, r3
 801345a:	6038      	str	r0, [r7, #0]
 801345c:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 801345e:	431a      	orrs	r2, r3
 8013460:	607a      	str	r2, [r7, #4]
 8013462:	683b      	ldr	r3, [r7, #0]
 8013464:	687c      	ldr	r4, [r7, #4]
 8013466:	653b      	str	r3, [r7, #80]	; 0x50
 8013468:	657c      	str	r4, [r7, #84]	; 0x54
      if (HAL_OK != HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD, GUI_FLASH_ADDR_NB_PDO_SNK_P0, value))
 801346a:	4b4d      	ldr	r3, [pc, #308]	; (80135a0 <BSP_GUI_SaveDataInFlash+0x324>)
 801346c:	681a      	ldr	r2, [r3, #0]
 801346e:	23c0      	movs	r3, #192	; 0xc0
 8013470:	049b      	lsls	r3, r3, #18
 8013472:	4013      	ands	r3, r2
 8013474:	d00e      	beq.n	8013494 <BSP_GUI_SaveDataInFlash+0x218>
 8013476:	4b4a      	ldr	r3, [pc, #296]	; (80135a0 <BSP_GUI_SaveDataInFlash+0x324>)
 8013478:	681a      	ldr	r2, [r3, #0]
 801347a:	23c0      	movs	r3, #192	; 0xc0
 801347c:	049b      	lsls	r3, r3, #18
 801347e:	401a      	ands	r2, r3
 8013480:	2380      	movs	r3, #128	; 0x80
 8013482:	045b      	lsls	r3, r3, #17
 8013484:	429a      	cmp	r2, r3
 8013486:	d10f      	bne.n	80134a8 <BSP_GUI_SaveDataInFlash+0x22c>
 8013488:	4b46      	ldr	r3, [pc, #280]	; (80135a4 <BSP_GUI_SaveDataInFlash+0x328>)
 801348a:	681a      	ldr	r2, [r3, #0]
 801348c:	2380      	movs	r3, #128	; 0x80
 801348e:	039b      	lsls	r3, r3, #14
 8013490:	4013      	ands	r3, r2
 8013492:	d109      	bne.n	80134a8 <BSP_GUI_SaveDataInFlash+0x22c>
 8013494:	4b44      	ldr	r3, [pc, #272]	; (80135a8 <BSP_GUI_SaveDataInFlash+0x32c>)
 8013496:	681b      	ldr	r3, [r3, #0]
 8013498:	029b      	lsls	r3, r3, #10
 801349a:	4a44      	ldr	r2, [pc, #272]	; (80135ac <BSP_GUI_SaveDataInFlash+0x330>)
 801349c:	4013      	ands	r3, r2
 801349e:	0adb      	lsrs	r3, r3, #11
 80134a0:	031b      	lsls	r3, r3, #12
 80134a2:	4a49      	ldr	r2, [pc, #292]	; (80135c8 <BSP_GUI_SaveDataInFlash+0x34c>)
 80134a4:	1899      	adds	r1, r3, r2
 80134a6:	e009      	b.n	80134bc <BSP_GUI_SaveDataInFlash+0x240>
 80134a8:	4b3f      	ldr	r3, [pc, #252]	; (80135a8 <BSP_GUI_SaveDataInFlash+0x32c>)
 80134aa:	681b      	ldr	r3, [r3, #0]
 80134ac:	029b      	lsls	r3, r3, #10
 80134ae:	085b      	lsrs	r3, r3, #1
 80134b0:	4a3f      	ldr	r2, [pc, #252]	; (80135b0 <BSP_GUI_SaveDataInFlash+0x334>)
 80134b2:	4013      	ands	r3, r2
 80134b4:	0adb      	lsrs	r3, r3, #11
 80134b6:	031b      	lsls	r3, r3, #12
 80134b8:	4a43      	ldr	r2, [pc, #268]	; (80135c8 <BSP_GUI_SaveDataInFlash+0x34c>)
 80134ba:	1899      	adds	r1, r3, r2
 80134bc:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 80134be:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80134c0:	2001      	movs	r0, #1
 80134c2:	f7f5 f879 	bl	80085b8 <HAL_FLASH_Program>
 80134c6:	1e03      	subs	r3, r0, #0
 80134c8:	d005      	beq.n	80134d6 <BSP_GUI_SaveDataInFlash+0x25a>
      {
        status = GUI_WRITE_ERROR;
 80134ca:	2327      	movs	r3, #39	; 0x27
 80134cc:	2238      	movs	r2, #56	; 0x38
 80134ce:	189b      	adds	r3, r3, r2
 80134d0:	19db      	adds	r3, r3, r7
 80134d2:	2202      	movs	r2, #2
 80134d4:	701a      	strb	r2, [r3, #0]
    }
#endif /* _SRC || _DRP */

#if defined(_SNK) || defined(_DRP)
    /* Save PORT0_PDO_ListSNK */
    if (GUI_OK == status)
 80134d6:	2327      	movs	r3, #39	; 0x27
 80134d8:	2238      	movs	r2, #56	; 0x38
 80134da:	189b      	adds	r3, r3, r2
 80134dc:	19db      	adds	r3, r3, r7
 80134de:	781b      	ldrb	r3, [r3, #0]
 80134e0:	2b00      	cmp	r3, #0
 80134e2:	d135      	bne.n	8013550 <BSP_GUI_SaveDataInFlash+0x2d4>
    {
      status = SavePDOInFlash(GUI_FLASH_ADDR_PDO_SNK_P0, PORT0_PDO_ListSNK);
 80134e4:	4b2e      	ldr	r3, [pc, #184]	; (80135a0 <BSP_GUI_SaveDataInFlash+0x324>)
 80134e6:	681a      	ldr	r2, [r3, #0]
 80134e8:	23c0      	movs	r3, #192	; 0xc0
 80134ea:	049b      	lsls	r3, r3, #18
 80134ec:	4013      	ands	r3, r2
 80134ee:	d00e      	beq.n	801350e <BSP_GUI_SaveDataInFlash+0x292>
 80134f0:	4b2b      	ldr	r3, [pc, #172]	; (80135a0 <BSP_GUI_SaveDataInFlash+0x324>)
 80134f2:	681a      	ldr	r2, [r3, #0]
 80134f4:	23c0      	movs	r3, #192	; 0xc0
 80134f6:	049b      	lsls	r3, r3, #18
 80134f8:	401a      	ands	r2, r3
 80134fa:	2380      	movs	r3, #128	; 0x80
 80134fc:	045b      	lsls	r3, r3, #17
 80134fe:	429a      	cmp	r2, r3
 8013500:	d110      	bne.n	8013524 <BSP_GUI_SaveDataInFlash+0x2a8>
 8013502:	4b28      	ldr	r3, [pc, #160]	; (80135a4 <BSP_GUI_SaveDataInFlash+0x328>)
 8013504:	681a      	ldr	r2, [r3, #0]
 8013506:	2380      	movs	r3, #128	; 0x80
 8013508:	039b      	lsls	r3, r3, #14
 801350a:	4013      	ands	r3, r2
 801350c:	d10a      	bne.n	8013524 <BSP_GUI_SaveDataInFlash+0x2a8>
 801350e:	4b26      	ldr	r3, [pc, #152]	; (80135a8 <BSP_GUI_SaveDataInFlash+0x32c>)
 8013510:	681b      	ldr	r3, [r3, #0]
 8013512:	029b      	lsls	r3, r3, #10
 8013514:	4a25      	ldr	r2, [pc, #148]	; (80135ac <BSP_GUI_SaveDataInFlash+0x330>)
 8013516:	4013      	ands	r3, r2
 8013518:	0adb      	lsrs	r3, r3, #11
 801351a:	031b      	lsls	r3, r3, #12
 801351c:	4a2b      	ldr	r2, [pc, #172]	; (80135cc <BSP_GUI_SaveDataInFlash+0x350>)
 801351e:	4694      	mov	ip, r2
 8013520:	4463      	add	r3, ip
 8013522:	e00a      	b.n	801353a <BSP_GUI_SaveDataInFlash+0x2be>
 8013524:	4b20      	ldr	r3, [pc, #128]	; (80135a8 <BSP_GUI_SaveDataInFlash+0x32c>)
 8013526:	681b      	ldr	r3, [r3, #0]
 8013528:	029b      	lsls	r3, r3, #10
 801352a:	085b      	lsrs	r3, r3, #1
 801352c:	4a20      	ldr	r2, [pc, #128]	; (80135b0 <BSP_GUI_SaveDataInFlash+0x334>)
 801352e:	4013      	ands	r3, r2
 8013530:	0adb      	lsrs	r3, r3, #11
 8013532:	031b      	lsls	r3, r3, #12
 8013534:	4a25      	ldr	r2, [pc, #148]	; (80135cc <BSP_GUI_SaveDataInFlash+0x350>)
 8013536:	4694      	mov	ip, r2
 8013538:	4463      	add	r3, ip
 801353a:	2227      	movs	r2, #39	; 0x27
 801353c:	2138      	movs	r1, #56	; 0x38
 801353e:	1852      	adds	r2, r2, r1
 8013540:	19d4      	adds	r4, r2, r7
 8013542:	4a23      	ldr	r2, [pc, #140]	; (80135d0 <BSP_GUI_SaveDataInFlash+0x354>)
 8013544:	0011      	movs	r1, r2
 8013546:	0018      	movs	r0, r3
 8013548:	f000 f8fa 	bl	8013740 <SavePDOInFlash>
 801354c:	0003      	movs	r3, r0
 801354e:	7023      	strb	r3, [r4, #0]
    }
#endif /* _SNK || _DRP */
#endif /* USBPD_PORT_COUNT==2 */

    /* Save DPM_Settings of port 0 */
    if (GUI_OK == status)
 8013550:	2327      	movs	r3, #39	; 0x27
 8013552:	2238      	movs	r2, #56	; 0x38
 8013554:	189b      	adds	r3, r3, r2
 8013556:	19db      	adds	r3, r3, r7
 8013558:	781b      	ldrb	r3, [r3, #0]
 801355a:	2b00      	cmp	r3, #0
 801355c:	d152      	bne.n	8013604 <BSP_GUI_SaveDataInFlash+0x388>
    {
      status = SaveSettingsInFlash(GUI_FLASH_ADDR_DPM_SETTINGS,
 801355e:	4b10      	ldr	r3, [pc, #64]	; (80135a0 <BSP_GUI_SaveDataInFlash+0x324>)
 8013560:	681a      	ldr	r2, [r3, #0]
 8013562:	23c0      	movs	r3, #192	; 0xc0
 8013564:	049b      	lsls	r3, r3, #18
 8013566:	4013      	ands	r3, r2
 8013568:	d00e      	beq.n	8013588 <BSP_GUI_SaveDataInFlash+0x30c>
 801356a:	4b0d      	ldr	r3, [pc, #52]	; (80135a0 <BSP_GUI_SaveDataInFlash+0x324>)
 801356c:	681a      	ldr	r2, [r3, #0]
 801356e:	23c0      	movs	r3, #192	; 0xc0
 8013570:	049b      	lsls	r3, r3, #18
 8013572:	401a      	ands	r2, r3
 8013574:	2380      	movs	r3, #128	; 0x80
 8013576:	045b      	lsls	r3, r3, #17
 8013578:	429a      	cmp	r2, r3
 801357a:	d12d      	bne.n	80135d8 <BSP_GUI_SaveDataInFlash+0x35c>
 801357c:	4b09      	ldr	r3, [pc, #36]	; (80135a4 <BSP_GUI_SaveDataInFlash+0x328>)
 801357e:	681a      	ldr	r2, [r3, #0]
 8013580:	2380      	movs	r3, #128	; 0x80
 8013582:	039b      	lsls	r3, r3, #14
 8013584:	4013      	ands	r3, r2
 8013586:	d127      	bne.n	80135d8 <BSP_GUI_SaveDataInFlash+0x35c>
 8013588:	4b07      	ldr	r3, [pc, #28]	; (80135a8 <BSP_GUI_SaveDataInFlash+0x32c>)
 801358a:	681b      	ldr	r3, [r3, #0]
 801358c:	029b      	lsls	r3, r3, #10
 801358e:	4a07      	ldr	r2, [pc, #28]	; (80135ac <BSP_GUI_SaveDataInFlash+0x330>)
 8013590:	4013      	ands	r3, r2
 8013592:	0adb      	lsrs	r3, r3, #11
 8013594:	031b      	lsls	r3, r3, #12
 8013596:	4a0f      	ldr	r2, [pc, #60]	; (80135d4 <BSP_GUI_SaveDataInFlash+0x358>)
 8013598:	4694      	mov	ip, r2
 801359a:	4463      	add	r3, ip
 801359c:	e027      	b.n	80135ee <BSP_GUI_SaveDataInFlash+0x372>
 801359e:	46c0      	nop			; (mov r8, r8)
 80135a0:	1fff7500 	.word	0x1fff7500
 80135a4:	40022020 	.word	0x40022020
 80135a8:	1fff75e0 	.word	0x1fff75e0
 80135ac:	000ffc00 	.word	0x000ffc00
 80135b0:	0007fe00 	.word	0x0007fe00
 80135b4:	40022000 	.word	0x40022000
 80135b8:	07fff800 	.word	0x07fff800
 80135bc:	deadf00d 	.word	0xdeadf00d
 80135c0:	deadbabe 	.word	0xdeadbabe
 80135c4:	2000009c 	.word	0x2000009c
 80135c8:	07fff808 	.word	0x07fff808
 80135cc:	07fff830 	.word	0x07fff830
 80135d0:	200000a0 	.word	0x200000a0
 80135d4:	07fff890 	.word	0x07fff890
 80135d8:	4b4e      	ldr	r3, [pc, #312]	; (8013714 <BSP_GUI_SaveDataInFlash+0x498>)
 80135da:	681b      	ldr	r3, [r3, #0]
 80135dc:	029b      	lsls	r3, r3, #10
 80135de:	085b      	lsrs	r3, r3, #1
 80135e0:	4a4d      	ldr	r2, [pc, #308]	; (8013718 <BSP_GUI_SaveDataInFlash+0x49c>)
 80135e2:	4013      	ands	r3, r2
 80135e4:	0adb      	lsrs	r3, r3, #11
 80135e6:	031b      	lsls	r3, r3, #12
 80135e8:	4a4c      	ldr	r2, [pc, #304]	; (801371c <BSP_GUI_SaveDataInFlash+0x4a0>)
 80135ea:	4694      	mov	ip, r2
 80135ec:	4463      	add	r3, ip
 80135ee:	2227      	movs	r2, #39	; 0x27
 80135f0:	2138      	movs	r1, #56	; 0x38
 80135f2:	1852      	adds	r2, r2, r1
 80135f4:	19d4      	adds	r4, r2, r7
 80135f6:	494a      	ldr	r1, [pc, #296]	; (8013720 <BSP_GUI_SaveDataInFlash+0x4a4>)
 80135f8:	220c      	movs	r2, #12
 80135fa:	0018      	movs	r0, r3
 80135fc:	f000 f913 	bl	8013826 <SaveSettingsInFlash>
 8013600:	0003      	movs	r3, r0
 8013602:	7023      	strb	r3, [r4, #0]
                                   sizeof(USBPD_SettingsTypeDef) * (uint32_t)USBPD_PORT_COUNT);
    }

#if defined(GUI_FLASH_ADDR_DPM_ID_SETTINGS)
    /* Save DPM_ID_Settings */
    if (GUI_OK == status)
 8013604:	2327      	movs	r3, #39	; 0x27
 8013606:	2238      	movs	r2, #56	; 0x38
 8013608:	189b      	adds	r3, r3, r2
 801360a:	19db      	adds	r3, r3, r7
 801360c:	781b      	ldrb	r3, [r3, #0]
 801360e:	2b00      	cmp	r3, #0
 8013610:	d135      	bne.n	801367e <BSP_GUI_SaveDataInFlash+0x402>
    {
      status = SaveSettingsInFlash(GUI_FLASH_ADDR_DPM_ID_SETTINGS,
 8013612:	4b44      	ldr	r3, [pc, #272]	; (8013724 <BSP_GUI_SaveDataInFlash+0x4a8>)
 8013614:	681a      	ldr	r2, [r3, #0]
 8013616:	23c0      	movs	r3, #192	; 0xc0
 8013618:	049b      	lsls	r3, r3, #18
 801361a:	4013      	ands	r3, r2
 801361c:	d00e      	beq.n	801363c <BSP_GUI_SaveDataInFlash+0x3c0>
 801361e:	4b41      	ldr	r3, [pc, #260]	; (8013724 <BSP_GUI_SaveDataInFlash+0x4a8>)
 8013620:	681a      	ldr	r2, [r3, #0]
 8013622:	23c0      	movs	r3, #192	; 0xc0
 8013624:	049b      	lsls	r3, r3, #18
 8013626:	401a      	ands	r2, r3
 8013628:	2380      	movs	r3, #128	; 0x80
 801362a:	045b      	lsls	r3, r3, #17
 801362c:	429a      	cmp	r2, r3
 801362e:	d110      	bne.n	8013652 <BSP_GUI_SaveDataInFlash+0x3d6>
 8013630:	4b3d      	ldr	r3, [pc, #244]	; (8013728 <BSP_GUI_SaveDataInFlash+0x4ac>)
 8013632:	681a      	ldr	r2, [r3, #0]
 8013634:	2380      	movs	r3, #128	; 0x80
 8013636:	039b      	lsls	r3, r3, #14
 8013638:	4013      	ands	r3, r2
 801363a:	d10a      	bne.n	8013652 <BSP_GUI_SaveDataInFlash+0x3d6>
 801363c:	4b35      	ldr	r3, [pc, #212]	; (8013714 <BSP_GUI_SaveDataInFlash+0x498>)
 801363e:	681b      	ldr	r3, [r3, #0]
 8013640:	029b      	lsls	r3, r3, #10
 8013642:	4a3a      	ldr	r2, [pc, #232]	; (801372c <BSP_GUI_SaveDataInFlash+0x4b0>)
 8013644:	4013      	ands	r3, r2
 8013646:	0adb      	lsrs	r3, r3, #11
 8013648:	031b      	lsls	r3, r3, #12
 801364a:	4a39      	ldr	r2, [pc, #228]	; (8013730 <BSP_GUI_SaveDataInFlash+0x4b4>)
 801364c:	4694      	mov	ip, r2
 801364e:	4463      	add	r3, ip
 8013650:	e00a      	b.n	8013668 <BSP_GUI_SaveDataInFlash+0x3ec>
 8013652:	4b30      	ldr	r3, [pc, #192]	; (8013714 <BSP_GUI_SaveDataInFlash+0x498>)
 8013654:	681b      	ldr	r3, [r3, #0]
 8013656:	029b      	lsls	r3, r3, #10
 8013658:	085b      	lsrs	r3, r3, #1
 801365a:	4a2f      	ldr	r2, [pc, #188]	; (8013718 <BSP_GUI_SaveDataInFlash+0x49c>)
 801365c:	4013      	ands	r3, r2
 801365e:	0adb      	lsrs	r3, r3, #11
 8013660:	031b      	lsls	r3, r3, #12
 8013662:	4a33      	ldr	r2, [pc, #204]	; (8013730 <BSP_GUI_SaveDataInFlash+0x4b4>)
 8013664:	4694      	mov	ip, r2
 8013666:	4463      	add	r3, ip
 8013668:	2227      	movs	r2, #39	; 0x27
 801366a:	2138      	movs	r1, #56	; 0x38
 801366c:	1852      	adds	r2, r2, r1
 801366e:	19d4      	adds	r4, r2, r7
 8013670:	4930      	ldr	r1, [pc, #192]	; (8013734 <BSP_GUI_SaveDataInFlash+0x4b8>)
 8013672:	2208      	movs	r2, #8
 8013674:	0018      	movs	r0, r3
 8013676:	f000 f8d6 	bl	8013826 <SaveSettingsInFlash>
 801367a:	0003      	movs	r3, r0
 801367c:	7023      	strb	r3, [r4, #0]
                                   sizeof(USBPD_IdSettingsTypeDef));
    }
#endif /* GUI_FLASH_ADDR_DPM_ID_SETTINGS */

    /* Save DPM_Settings of port 0 */
    if (GUI_OK == status)
 801367e:	2327      	movs	r3, #39	; 0x27
 8013680:	2238      	movs	r2, #56	; 0x38
 8013682:	189b      	adds	r3, r3, r2
 8013684:	19db      	adds	r3, r3, r7
 8013686:	781b      	ldrb	r3, [r3, #0]
 8013688:	2b00      	cmp	r3, #0
 801368a:	d135      	bne.n	80136f8 <BSP_GUI_SaveDataInFlash+0x47c>
    {
      status = SaveSettingsInFlash(GUI_FLASH_ADDR_DPM_USER_SETTINGS,
 801368c:	4b25      	ldr	r3, [pc, #148]	; (8013724 <BSP_GUI_SaveDataInFlash+0x4a8>)
 801368e:	681a      	ldr	r2, [r3, #0]
 8013690:	23c0      	movs	r3, #192	; 0xc0
 8013692:	049b      	lsls	r3, r3, #18
 8013694:	4013      	ands	r3, r2
 8013696:	d00e      	beq.n	80136b6 <BSP_GUI_SaveDataInFlash+0x43a>
 8013698:	4b22      	ldr	r3, [pc, #136]	; (8013724 <BSP_GUI_SaveDataInFlash+0x4a8>)
 801369a:	681a      	ldr	r2, [r3, #0]
 801369c:	23c0      	movs	r3, #192	; 0xc0
 801369e:	049b      	lsls	r3, r3, #18
 80136a0:	401a      	ands	r2, r3
 80136a2:	2380      	movs	r3, #128	; 0x80
 80136a4:	045b      	lsls	r3, r3, #17
 80136a6:	429a      	cmp	r2, r3
 80136a8:	d110      	bne.n	80136cc <BSP_GUI_SaveDataInFlash+0x450>
 80136aa:	4b1f      	ldr	r3, [pc, #124]	; (8013728 <BSP_GUI_SaveDataInFlash+0x4ac>)
 80136ac:	681a      	ldr	r2, [r3, #0]
 80136ae:	2380      	movs	r3, #128	; 0x80
 80136b0:	039b      	lsls	r3, r3, #14
 80136b2:	4013      	ands	r3, r2
 80136b4:	d10a      	bne.n	80136cc <BSP_GUI_SaveDataInFlash+0x450>
 80136b6:	4b17      	ldr	r3, [pc, #92]	; (8013714 <BSP_GUI_SaveDataInFlash+0x498>)
 80136b8:	681b      	ldr	r3, [r3, #0]
 80136ba:	029b      	lsls	r3, r3, #10
 80136bc:	4a1b      	ldr	r2, [pc, #108]	; (801372c <BSP_GUI_SaveDataInFlash+0x4b0>)
 80136be:	4013      	ands	r3, r2
 80136c0:	0adb      	lsrs	r3, r3, #11
 80136c2:	031b      	lsls	r3, r3, #12
 80136c4:	4a1c      	ldr	r2, [pc, #112]	; (8013738 <BSP_GUI_SaveDataInFlash+0x4bc>)
 80136c6:	4694      	mov	ip, r2
 80136c8:	4463      	add	r3, ip
 80136ca:	e00a      	b.n	80136e2 <BSP_GUI_SaveDataInFlash+0x466>
 80136cc:	4b11      	ldr	r3, [pc, #68]	; (8013714 <BSP_GUI_SaveDataInFlash+0x498>)
 80136ce:	681b      	ldr	r3, [r3, #0]
 80136d0:	029b      	lsls	r3, r3, #10
 80136d2:	085b      	lsrs	r3, r3, #1
 80136d4:	4a10      	ldr	r2, [pc, #64]	; (8013718 <BSP_GUI_SaveDataInFlash+0x49c>)
 80136d6:	4013      	ands	r3, r2
 80136d8:	0adb      	lsrs	r3, r3, #11
 80136da:	031b      	lsls	r3, r3, #12
 80136dc:	4a16      	ldr	r2, [pc, #88]	; (8013738 <BSP_GUI_SaveDataInFlash+0x4bc>)
 80136de:	4694      	mov	ip, r2
 80136e0:	4463      	add	r3, ip
 80136e2:	2227      	movs	r2, #39	; 0x27
 80136e4:	2138      	movs	r1, #56	; 0x38
 80136e6:	1852      	adds	r2, r2, r1
 80136e8:	19d4      	adds	r4, r2, r7
 80136ea:	4914      	ldr	r1, [pc, #80]	; (801373c <BSP_GUI_SaveDataInFlash+0x4c0>)
 80136ec:	2274      	movs	r2, #116	; 0x74
 80136ee:	0018      	movs	r0, r3
 80136f0:	f000 f899 	bl	8013826 <SaveSettingsInFlash>
 80136f4:	0003      	movs	r3, r0
 80136f6:	7023      	strb	r3, [r4, #0]
    }
#endif /* _VDM */
  }

  /* Lock the flash after end of operations */
  (void) HAL_FLASH_Lock();
 80136f8:	f7f4 ffd0 	bl	800869c <HAL_FLASH_Lock>
  __ASM volatile ("cpsie i" : : : "memory");
 80136fc:	b662      	cpsie	i
}
 80136fe:	46c0      	nop			; (mov r8, r8)

  /* Enable interrupts */
  __enable_irq();

  return status;
 8013700:	2327      	movs	r3, #39	; 0x27
 8013702:	2238      	movs	r2, #56	; 0x38
 8013704:	189b      	adds	r3, r3, r2
 8013706:	19db      	adds	r3, r3, r7
 8013708:	781b      	ldrb	r3, [r3, #0]
}
 801370a:	0018      	movs	r0, r3
 801370c:	46bd      	mov	sp, r7
 801370e:	b019      	add	sp, #100	; 0x64
 8013710:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013712:	46c0      	nop			; (mov r8, r8)
 8013714:	1fff75e0 	.word	0x1fff75e0
 8013718:	0007fe00 	.word	0x0007fe00
 801371c:	07fff890 	.word	0x07fff890
 8013720:	20000014 	.word	0x20000014
 8013724:	1fff7500 	.word	0x1fff7500
 8013728:	40022020 	.word	0x40022020
 801372c:	000ffc00 	.word	0x000ffc00
 8013730:	07fff91c 	.word	0x07fff91c
 8013734:	20000020 	.word	0x20000020
 8013738:	07fff89c 	.word	0x07fff89c
 801373c:	20000028 	.word	0x20000028

08013740 <SavePDOInFlash>:

static GUI_StatusTypeDef SavePDOInFlash(uint32_t Address, uint32_t *pListOfPDO)
{
 8013740:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013742:	b08f      	sub	sp, #60	; 0x3c
 8013744:	af00      	add	r7, sp, #0
 8013746:	6178      	str	r0, [r7, #20]
 8013748:	6139      	str	r1, [r7, #16]
#if defined(FLASH_TYPEPROGRAM_DOUBLEWORD)
  uint64_t data_in_64;
  uint32_t index;
  uint32_t index_flash;
  uint32_t value[2];
  GUI_StatusTypeDef status = GUI_OK;
 801374a:	231f      	movs	r3, #31
 801374c:	2210      	movs	r2, #16
 801374e:	189b      	adds	r3, r3, r2
 8013750:	19db      	adds	r3, r3, r7
 8013752:	2200      	movs	r2, #0
 8013754:	701a      	strb	r2, [r3, #0]

  index_flash = 0U;
 8013756:	2300      	movs	r3, #0
 8013758:	633b      	str	r3, [r7, #48]	; 0x30
  for (index = 0U; ((index < USBPD_MAX_NB_PDO) && (GUI_OK == status)); index += 1U)
 801375a:	2300      	movs	r3, #0
 801375c:	637b      	str	r3, [r7, #52]	; 0x34
 801375e:	e04f      	b.n	8013800 <SavePDOInFlash+0xc0>
  {
    value[0] = pListOfPDO[index];
 8013760:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8013762:	009b      	lsls	r3, r3, #2
 8013764:	693a      	ldr	r2, [r7, #16]
 8013766:	18d3      	adds	r3, r2, r3
 8013768:	681a      	ldr	r2, [r3, #0]
 801376a:	2108      	movs	r1, #8
 801376c:	2010      	movs	r0, #16
 801376e:	180b      	adds	r3, r1, r0
 8013770:	19db      	adds	r3, r3, r7
 8013772:	601a      	str	r2, [r3, #0]
    index++;
 8013774:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8013776:	3301      	adds	r3, #1
 8013778:	637b      	str	r3, [r7, #52]	; 0x34
    if (index < USBPD_MAX_NB_PDO)
 801377a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801377c:	2b06      	cmp	r3, #6
 801377e:	d808      	bhi.n	8013792 <SavePDOInFlash+0x52>
    {
      value[1] = pListOfPDO[index];
 8013780:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8013782:	009b      	lsls	r3, r3, #2
 8013784:	693a      	ldr	r2, [r7, #16]
 8013786:	18d3      	adds	r3, r2, r3
 8013788:	681a      	ldr	r2, [r3, #0]
 801378a:	180b      	adds	r3, r1, r0
 801378c:	19db      	adds	r3, r3, r7
 801378e:	605a      	str	r2, [r3, #4]
 8013790:	e006      	b.n	80137a0 <SavePDOInFlash+0x60>
    }
    else
    {
      value[1] = (0xFFFFFFFFU);
 8013792:	2308      	movs	r3, #8
 8013794:	2210      	movs	r2, #16
 8013796:	189b      	adds	r3, r3, r2
 8013798:	19db      	adds	r3, r3, r7
 801379a:	2201      	movs	r2, #1
 801379c:	4252      	negs	r2, r2
 801379e:	605a      	str	r2, [r3, #4]
    }

    data_in_64 = value[0] | ((uint64_t)value[1] << 32U);
 80137a0:	2208      	movs	r2, #8
 80137a2:	2610      	movs	r6, #16
 80137a4:	1993      	adds	r3, r2, r6
 80137a6:	19db      	adds	r3, r3, r7
 80137a8:	681b      	ldr	r3, [r3, #0]
 80137aa:	60bb      	str	r3, [r7, #8]
 80137ac:	2300      	movs	r3, #0
 80137ae:	60fb      	str	r3, [r7, #12]
 80137b0:	1993      	adds	r3, r2, r6
 80137b2:	19db      	adds	r3, r3, r7
 80137b4:	685b      	ldr	r3, [r3, #4]
 80137b6:	603b      	str	r3, [r7, #0]
 80137b8:	2300      	movs	r3, #0
 80137ba:	607b      	str	r3, [r7, #4]
 80137bc:	683b      	ldr	r3, [r7, #0]
 80137be:	001d      	movs	r5, r3
 80137c0:	2300      	movs	r3, #0
 80137c2:	001c      	movs	r4, r3
 80137c4:	68b9      	ldr	r1, [r7, #8]
 80137c6:	68fa      	ldr	r2, [r7, #12]
 80137c8:	000b      	movs	r3, r1
 80137ca:	4323      	orrs	r3, r4
 80137cc:	623b      	str	r3, [r7, #32]
 80137ce:	0013      	movs	r3, r2
 80137d0:	432b      	orrs	r3, r5
 80137d2:	627b      	str	r3, [r7, #36]	; 0x24

    /* Save in the FLASH */
    if (HAL_OK != HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD, (Address + (8U * index_flash)), data_in_64))
 80137d4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80137d6:	00da      	lsls	r2, r3, #3
 80137d8:	697b      	ldr	r3, [r7, #20]
 80137da:	18d1      	adds	r1, r2, r3
 80137dc:	6a3a      	ldr	r2, [r7, #32]
 80137de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80137e0:	2001      	movs	r0, #1
 80137e2:	f7f4 fee9 	bl	80085b8 <HAL_FLASH_Program>
 80137e6:	1e03      	subs	r3, r0, #0
 80137e8:	d004      	beq.n	80137f4 <SavePDOInFlash+0xb4>
    {
      status = GUI_WRITE_ERROR;
 80137ea:	231f      	movs	r3, #31
 80137ec:	199b      	adds	r3, r3, r6
 80137ee:	19db      	adds	r3, r3, r7
 80137f0:	2202      	movs	r2, #2
 80137f2:	701a      	strb	r2, [r3, #0]
    }
    index_flash += 1;
 80137f4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80137f6:	3301      	adds	r3, #1
 80137f8:	633b      	str	r3, [r7, #48]	; 0x30
  for (index = 0U; ((index < USBPD_MAX_NB_PDO) && (GUI_OK == status)); index += 1U)
 80137fa:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80137fc:	3301      	adds	r3, #1
 80137fe:	637b      	str	r3, [r7, #52]	; 0x34
 8013800:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8013802:	2b06      	cmp	r3, #6
 8013804:	d806      	bhi.n	8013814 <SavePDOInFlash+0xd4>
 8013806:	231f      	movs	r3, #31
 8013808:	2210      	movs	r2, #16
 801380a:	189b      	adds	r3, r3, r2
 801380c:	19db      	adds	r3, r3, r7
 801380e:	781b      	ldrb	r3, [r3, #0]
 8013810:	2b00      	cmp	r3, #0
 8013812:	d0a5      	beq.n	8013760 <SavePDOInFlash+0x20>
  }
  return status;
 8013814:	231f      	movs	r3, #31
 8013816:	2210      	movs	r2, #16
 8013818:	189b      	adds	r3, r3, r2
 801381a:	19db      	adds	r3, r3, r7
 801381c:	781b      	ldrb	r3, [r3, #0]
  }
  return status;
#else
#warning "Flash program option undefined"
#endif  /* FLASH_TYPEPROGRAM_DOUBLEWORD */
}
 801381e:	0018      	movs	r0, r3
 8013820:	46bd      	mov	sp, r7
 8013822:	b00f      	add	sp, #60	; 0x3c
 8013824:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013826 <SaveSettingsInFlash>:

static GUI_StatusTypeDef SaveSettingsInFlash(uint32_t Address, uint32_t *pSettings, uint32_t Size)
{
 8013826:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013828:	b091      	sub	sp, #68	; 0x44
 801382a:	af00      	add	r7, sp, #0
 801382c:	61f8      	str	r0, [r7, #28]
 801382e:	61b9      	str	r1, [r7, #24]
 8013830:	617a      	str	r2, [r7, #20]
#if defined(FLASH_TYPEPROGRAM_DOUBLEWORD)
  uint64_t data_in_64;
  uint32_t index;
  uint32_t index_flash;
  uint32_t value[2];
  uint32_t nb_u32   = ((Size) / 4U);
 8013832:	697b      	ldr	r3, [r7, #20]
 8013834:	089b      	lsrs	r3, r3, #2
 8013836:	633b      	str	r3, [r7, #48]	; 0x30
  GUI_StatusTypeDef status = GUI_OK;
 8013838:	2327      	movs	r3, #39	; 0x27
 801383a:	2210      	movs	r2, #16
 801383c:	189b      	adds	r3, r3, r2
 801383e:	19db      	adds	r3, r3, r7
 8013840:	2200      	movs	r2, #0
 8013842:	701a      	strb	r2, [r3, #0]

  /* Ensure nb of bytes to be writeent is 4-multiple */
  if (((Size) % 4U) != 0U)
 8013844:	697b      	ldr	r3, [r7, #20]
 8013846:	2203      	movs	r2, #3
 8013848:	4013      	ands	r3, r2
 801384a:	d001      	beq.n	8013850 <SaveSettingsInFlash+0x2a>
  {
    return (GUI_ERROR);
 801384c:	2303      	movs	r3, #3
 801384e:	e065      	b.n	801391c <SaveSettingsInFlash+0xf6>
  }

  /* Save Settings in the FLASH */
  index_flash = 0U;
 8013850:	2300      	movs	r3, #0
 8013852:	63bb      	str	r3, [r7, #56]	; 0x38
  for (index = 0U; ((index < nb_u32) && (GUI_OK == status)); index += 1U)
 8013854:	2300      	movs	r3, #0
 8013856:	63fb      	str	r3, [r7, #60]	; 0x3c
 8013858:	e050      	b.n	80138fc <SaveSettingsInFlash+0xd6>
  {
    value[0] = pSettings[index];
 801385a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801385c:	009b      	lsls	r3, r3, #2
 801385e:	69ba      	ldr	r2, [r7, #24]
 8013860:	18d3      	adds	r3, r2, r3
 8013862:	681a      	ldr	r2, [r3, #0]
 8013864:	2110      	movs	r1, #16
 8013866:	2010      	movs	r0, #16
 8013868:	180b      	adds	r3, r1, r0
 801386a:	19db      	adds	r3, r3, r7
 801386c:	601a      	str	r2, [r3, #0]
    index++;
 801386e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8013870:	3301      	adds	r3, #1
 8013872:	63fb      	str	r3, [r7, #60]	; 0x3c
    if (index < nb_u32)
 8013874:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8013876:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8013878:	429a      	cmp	r2, r3
 801387a:	d208      	bcs.n	801388e <SaveSettingsInFlash+0x68>
    {
      value[1] = pSettings[index];
 801387c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801387e:	009b      	lsls	r3, r3, #2
 8013880:	69ba      	ldr	r2, [r7, #24]
 8013882:	18d3      	adds	r3, r2, r3
 8013884:	681a      	ldr	r2, [r3, #0]
 8013886:	180b      	adds	r3, r1, r0
 8013888:	19db      	adds	r3, r3, r7
 801388a:	605a      	str	r2, [r3, #4]
 801388c:	e006      	b.n	801389c <SaveSettingsInFlash+0x76>
    }
    else
    {
      value[1] = (0xFFFFFFFFU);
 801388e:	2310      	movs	r3, #16
 8013890:	2210      	movs	r2, #16
 8013892:	189b      	adds	r3, r3, r2
 8013894:	19db      	adds	r3, r3, r7
 8013896:	2201      	movs	r2, #1
 8013898:	4252      	negs	r2, r2
 801389a:	605a      	str	r2, [r3, #4]
    }

    data_in_64 = value[0] | ((uint64_t)value[1] << 32U);
 801389c:	2210      	movs	r2, #16
 801389e:	2610      	movs	r6, #16
 80138a0:	1993      	adds	r3, r2, r6
 80138a2:	19db      	adds	r3, r3, r7
 80138a4:	681b      	ldr	r3, [r3, #0]
 80138a6:	60bb      	str	r3, [r7, #8]
 80138a8:	2300      	movs	r3, #0
 80138aa:	60fb      	str	r3, [r7, #12]
 80138ac:	1993      	adds	r3, r2, r6
 80138ae:	19db      	adds	r3, r3, r7
 80138b0:	685b      	ldr	r3, [r3, #4]
 80138b2:	603b      	str	r3, [r7, #0]
 80138b4:	2300      	movs	r3, #0
 80138b6:	607b      	str	r3, [r7, #4]
 80138b8:	683b      	ldr	r3, [r7, #0]
 80138ba:	001d      	movs	r5, r3
 80138bc:	2300      	movs	r3, #0
 80138be:	001c      	movs	r4, r3
 80138c0:	68b9      	ldr	r1, [r7, #8]
 80138c2:	68fa      	ldr	r2, [r7, #12]
 80138c4:	000b      	movs	r3, r1
 80138c6:	4323      	orrs	r3, r4
 80138c8:	62bb      	str	r3, [r7, #40]	; 0x28
 80138ca:	0013      	movs	r3, r2
 80138cc:	432b      	orrs	r3, r5
 80138ce:	62fb      	str	r3, [r7, #44]	; 0x2c

    /* Save in the FLASH */
    if (HAL_OK != HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD, (Address + (8U * index_flash)), data_in_64))
 80138d0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80138d2:	00da      	lsls	r2, r3, #3
 80138d4:	69fb      	ldr	r3, [r7, #28]
 80138d6:	18d1      	adds	r1, r2, r3
 80138d8:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80138da:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80138dc:	2001      	movs	r0, #1
 80138de:	f7f4 fe6b 	bl	80085b8 <HAL_FLASH_Program>
 80138e2:	1e03      	subs	r3, r0, #0
 80138e4:	d004      	beq.n	80138f0 <SaveSettingsInFlash+0xca>
    {
      status = GUI_WRITE_ERROR;
 80138e6:	2327      	movs	r3, #39	; 0x27
 80138e8:	199b      	adds	r3, r3, r6
 80138ea:	19db      	adds	r3, r3, r7
 80138ec:	2202      	movs	r2, #2
 80138ee:	701a      	strb	r2, [r3, #0]
    }
    index_flash += 1U;
 80138f0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80138f2:	3301      	adds	r3, #1
 80138f4:	63bb      	str	r3, [r7, #56]	; 0x38
  for (index = 0U; ((index < nb_u32) && (GUI_OK == status)); index += 1U)
 80138f6:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80138f8:	3301      	adds	r3, #1
 80138fa:	63fb      	str	r3, [r7, #60]	; 0x3c
 80138fc:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 80138fe:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8013900:	429a      	cmp	r2, r3
 8013902:	d206      	bcs.n	8013912 <SaveSettingsInFlash+0xec>
 8013904:	2327      	movs	r3, #39	; 0x27
 8013906:	2210      	movs	r2, #16
 8013908:	189b      	adds	r3, r3, r2
 801390a:	19db      	adds	r3, r3, r7
 801390c:	781b      	ldrb	r3, [r3, #0]
 801390e:	2b00      	cmp	r3, #0
 8013910:	d0a3      	beq.n	801385a <SaveSettingsInFlash+0x34>
  }
  return status;
 8013912:	2327      	movs	r3, #39	; 0x27
 8013914:	2210      	movs	r2, #16
 8013916:	189b      	adds	r3, r3, r2
 8013918:	19db      	adds	r3, r3, r7
 801391a:	781b      	ldrb	r3, [r3, #0]
  }
  return status;
#else
#warning "Flash program option undefined"
#endif  /* FLASH_TYPEPROGRAM_DOUBLEWORD */
}
 801391c:	0018      	movs	r0, r3
 801391e:	46bd      	mov	sp, r7
 8013920:	b011      	add	sp, #68	; 0x44
 8013922:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013924 <LoadPDOFromFlash>:

static GUI_StatusTypeDef LoadPDOFromFlash(uint32_t Address, uint32_t *pListOfPDO)
{
 8013924:	b580      	push	{r7, lr}
 8013926:	b086      	sub	sp, #24
 8013928:	af00      	add	r7, sp, #0
 801392a:	6078      	str	r0, [r7, #4]
 801392c:	6039      	str	r1, [r7, #0]
  uint32_t _addr = Address;
 801392e:	687b      	ldr	r3, [r7, #4]
 8013930:	617b      	str	r3, [r7, #20]
  GUI_StatusTypeDef _status = GUI_ERROR;
 8013932:	230f      	movs	r3, #15
 8013934:	18fb      	adds	r3, r7, r3
 8013936:	2203      	movs	r2, #3
 8013938:	701a      	strb	r2, [r3, #0]

  /* Check if FLASH is not empty to retrieve the data. Nethertheless keep data in the RAM */
  GUI_CHECK_IF_MEMORY_IS_CORRUPTED(_addr)
  {
    uint32_t _index;
    for (_index = 0U; _index < USBPD_MAX_NB_PDO; _index++)
 801393a:	2300      	movs	r3, #0
 801393c:	613b      	str	r3, [r7, #16]
 801393e:	e00c      	b.n	801395a <LoadPDOFromFlash+0x36>
    {
      pListOfPDO[_index] = *((uint32_t *)_addr);
 8013940:	697a      	ldr	r2, [r7, #20]
 8013942:	693b      	ldr	r3, [r7, #16]
 8013944:	009b      	lsls	r3, r3, #2
 8013946:	6839      	ldr	r1, [r7, #0]
 8013948:	18cb      	adds	r3, r1, r3
 801394a:	6812      	ldr	r2, [r2, #0]
 801394c:	601a      	str	r2, [r3, #0]
      _addr = _addr + 4U;
 801394e:	697b      	ldr	r3, [r7, #20]
 8013950:	3304      	adds	r3, #4
 8013952:	617b      	str	r3, [r7, #20]
    for (_index = 0U; _index < USBPD_MAX_NB_PDO; _index++)
 8013954:	693b      	ldr	r3, [r7, #16]
 8013956:	3301      	adds	r3, #1
 8013958:	613b      	str	r3, [r7, #16]
 801395a:	693b      	ldr	r3, [r7, #16]
 801395c:	2b06      	cmp	r3, #6
 801395e:	d9ef      	bls.n	8013940 <LoadPDOFromFlash+0x1c>
    }
    _status = GUI_OK;
 8013960:	210f      	movs	r1, #15
 8013962:	187b      	adds	r3, r7, r1
 8013964:	2200      	movs	r2, #0
 8013966:	701a      	strb	r2, [r3, #0]
  }
  return _status;
 8013968:	187b      	adds	r3, r7, r1
 801396a:	781b      	ldrb	r3, [r3, #0]
}
 801396c:	0018      	movs	r0, r3
 801396e:	46bd      	mov	sp, r7
 8013970:	b006      	add	sp, #24
 8013972:	bd80      	pop	{r7, pc}

08013974 <LoadSettingsFromFlash>:

static GUI_StatusTypeDef LoadSettingsFromFlash(uint32_t Address, uint32_t *pSettings, uint32_t Size)
{
 8013974:	b590      	push	{r4, r7, lr}
 8013976:	b087      	sub	sp, #28
 8013978:	af00      	add	r7, sp, #0
 801397a:	60f8      	str	r0, [r7, #12]
 801397c:	60b9      	str	r1, [r7, #8]
 801397e:	607a      	str	r2, [r7, #4]
  uint32_t _addr = Address;
 8013980:	68fb      	ldr	r3, [r7, #12]
 8013982:	617b      	str	r3, [r7, #20]
  GUI_StatusTypeDef _status = GUI_ERROR;
 8013984:	2413      	movs	r4, #19
 8013986:	193b      	adds	r3, r7, r4
 8013988:	2203      	movs	r2, #3
 801398a:	701a      	strb	r2, [r3, #0]

  /* Check if FLASH is not empty to retrieve the data. Nethertheless keep data in the RAM */
  GUI_CHECK_IF_MEMORY_IS_CORRUPTED(_addr)
  {
    (void) memcpy(pSettings, ((uint32_t *)_addr), Size);
 801398c:	6979      	ldr	r1, [r7, #20]
 801398e:	687a      	ldr	r2, [r7, #4]
 8013990:	68bb      	ldr	r3, [r7, #8]
 8013992:	0018      	movs	r0, r3
 8013994:	f004 fcca 	bl	801832c <memcpy>
    _status = GUI_OK;
 8013998:	193b      	adds	r3, r7, r4
 801399a:	2200      	movs	r2, #0
 801399c:	701a      	strb	r2, [r3, #0]
  }
  return _status;
 801399e:	193b      	adds	r3, r7, r4
 80139a0:	781b      	ldrb	r3, [r3, #0]
}
 80139a2:	0018      	movs	r0, r3
 80139a4:	46bd      	mov	sp, r7
 80139a6:	b007      	add	sp, #28
 80139a8:	bd90      	pop	{r4, r7, pc}

080139aa <TLV_init_encode>:
 80139aa:	b580      	push	{r7, lr}
 80139ac:	b084      	sub	sp, #16
 80139ae:	af00      	add	r7, sp, #0
 80139b0:	60f8      	str	r0, [r7, #12]
 80139b2:	0008      	movs	r0, r1
 80139b4:	0011      	movs	r1, r2
 80139b6:	607b      	str	r3, [r7, #4]
 80139b8:	230b      	movs	r3, #11
 80139ba:	18fb      	adds	r3, r7, r3
 80139bc:	1c02      	adds	r2, r0, #0
 80139be:	701a      	strb	r2, [r3, #0]
 80139c0:	2308      	movs	r3, #8
 80139c2:	18fb      	adds	r3, r7, r3
 80139c4:	1c0a      	adds	r2, r1, #0
 80139c6:	801a      	strh	r2, [r3, #0]
 80139c8:	687b      	ldr	r3, [r7, #4]
 80139ca:	2b00      	cmp	r3, #0
 80139cc:	d101      	bne.n	80139d2 <TLV_init_encode+0x28>
 80139ce:	23ff      	movs	r3, #255	; 0xff
 80139d0:	e04a      	b.n	8013a68 <TLV_init_encode+0xbe>
 80139d2:	2308      	movs	r3, #8
 80139d4:	18fb      	adds	r3, r7, r3
 80139d6:	881b      	ldrh	r3, [r3, #0]
 80139d8:	2b0a      	cmp	r3, #10
 80139da:	d801      	bhi.n	80139e0 <TLV_init_encode+0x36>
 80139dc:	23ff      	movs	r3, #255	; 0xff
 80139de:	e043      	b.n	8013a68 <TLV_init_encode+0xbe>
 80139e0:	68fb      	ldr	r3, [r7, #12]
 80139e2:	687a      	ldr	r2, [r7, #4]
 80139e4:	601a      	str	r2, [r3, #0]
 80139e6:	68fb      	ldr	r3, [r7, #12]
 80139e8:	2208      	movs	r2, #8
 80139ea:	18ba      	adds	r2, r7, r2
 80139ec:	8812      	ldrh	r2, [r2, #0]
 80139ee:	809a      	strh	r2, [r3, #4]
 80139f0:	68fb      	ldr	r3, [r7, #12]
 80139f2:	681b      	ldr	r3, [r3, #0]
 80139f4:	22fd      	movs	r2, #253	; 0xfd
 80139f6:	701a      	strb	r2, [r3, #0]
 80139f8:	68fb      	ldr	r3, [r7, #12]
 80139fa:	681b      	ldr	r3, [r3, #0]
 80139fc:	3301      	adds	r3, #1
 80139fe:	22fd      	movs	r2, #253	; 0xfd
 8013a00:	701a      	strb	r2, [r3, #0]
 8013a02:	68fb      	ldr	r3, [r7, #12]
 8013a04:	681b      	ldr	r3, [r3, #0]
 8013a06:	3302      	adds	r3, #2
 8013a08:	22fd      	movs	r2, #253	; 0xfd
 8013a0a:	701a      	strb	r2, [r3, #0]
 8013a0c:	68fb      	ldr	r3, [r7, #12]
 8013a0e:	681b      	ldr	r3, [r3, #0]
 8013a10:	3303      	adds	r3, #3
 8013a12:	22fd      	movs	r2, #253	; 0xfd
 8013a14:	701a      	strb	r2, [r3, #0]
 8013a16:	68fb      	ldr	r3, [r7, #12]
 8013a18:	681b      	ldr	r3, [r3, #0]
 8013a1a:	3304      	adds	r3, #4
 8013a1c:	220b      	movs	r2, #11
 8013a1e:	18ba      	adds	r2, r7, r2
 8013a20:	7812      	ldrb	r2, [r2, #0]
 8013a22:	701a      	strb	r2, [r3, #0]
 8013a24:	68fb      	ldr	r3, [r7, #12]
 8013a26:	681b      	ldr	r3, [r3, #0]
 8013a28:	3305      	adds	r3, #5
 8013a2a:	2200      	movs	r2, #0
 8013a2c:	701a      	strb	r2, [r3, #0]
 8013a2e:	68fb      	ldr	r3, [r7, #12]
 8013a30:	681b      	ldr	r3, [r3, #0]
 8013a32:	3306      	adds	r3, #6
 8013a34:	2200      	movs	r2, #0
 8013a36:	701a      	strb	r2, [r3, #0]
 8013a38:	68fb      	ldr	r3, [r7, #12]
 8013a3a:	681b      	ldr	r3, [r3, #0]
 8013a3c:	3307      	adds	r3, #7
 8013a3e:	22a5      	movs	r2, #165	; 0xa5
 8013a40:	701a      	strb	r2, [r3, #0]
 8013a42:	68fb      	ldr	r3, [r7, #12]
 8013a44:	681b      	ldr	r3, [r3, #0]
 8013a46:	3308      	adds	r3, #8
 8013a48:	22a5      	movs	r2, #165	; 0xa5
 8013a4a:	701a      	strb	r2, [r3, #0]
 8013a4c:	68fb      	ldr	r3, [r7, #12]
 8013a4e:	681b      	ldr	r3, [r3, #0]
 8013a50:	3309      	adds	r3, #9
 8013a52:	22a5      	movs	r2, #165	; 0xa5
 8013a54:	701a      	strb	r2, [r3, #0]
 8013a56:	68fb      	ldr	r3, [r7, #12]
 8013a58:	681b      	ldr	r3, [r3, #0]
 8013a5a:	330a      	adds	r3, #10
 8013a5c:	22a5      	movs	r2, #165	; 0xa5
 8013a5e:	701a      	strb	r2, [r3, #0]
 8013a60:	68fb      	ldr	r3, [r7, #12]
 8013a62:	2207      	movs	r2, #7
 8013a64:	80da      	strh	r2, [r3, #6]
 8013a66:	2300      	movs	r3, #0
 8013a68:	0018      	movs	r0, r3
 8013a6a:	46bd      	mov	sp, r7
 8013a6c:	b004      	add	sp, #16
 8013a6e:	bd80      	pop	{r7, pc}

08013a70 <TLV_add>:
 8013a70:	b580      	push	{r7, lr}
 8013a72:	b086      	sub	sp, #24
 8013a74:	af00      	add	r7, sp, #0
 8013a76:	60f8      	str	r0, [r7, #12]
 8013a78:	0008      	movs	r0, r1
 8013a7a:	0011      	movs	r1, r2
 8013a7c:	607b      	str	r3, [r7, #4]
 8013a7e:	230b      	movs	r3, #11
 8013a80:	18fb      	adds	r3, r7, r3
 8013a82:	1c02      	adds	r2, r0, #0
 8013a84:	701a      	strb	r2, [r3, #0]
 8013a86:	2308      	movs	r3, #8
 8013a88:	18fb      	adds	r3, r7, r3
 8013a8a:	1c0a      	adds	r2, r1, #0
 8013a8c:	801a      	strh	r2, [r3, #0]
 8013a8e:	68fb      	ldr	r3, [r7, #12]
 8013a90:	681b      	ldr	r3, [r3, #0]
 8013a92:	68fa      	ldr	r2, [r7, #12]
 8013a94:	88d2      	ldrh	r2, [r2, #6]
 8013a96:	189b      	adds	r3, r3, r2
 8013a98:	781b      	ldrb	r3, [r3, #0]
 8013a9a:	2ba5      	cmp	r3, #165	; 0xa5
 8013a9c:	d001      	beq.n	8013aa2 <TLV_add+0x32>
 8013a9e:	4b5a      	ldr	r3, [pc, #360]	; (8013c08 <TLV_add+0x198>)
 8013aa0:	e0ae      	b.n	8013c00 <TLV_add+0x190>
 8013aa2:	68fb      	ldr	r3, [r7, #12]
 8013aa4:	88db      	ldrh	r3, [r3, #6]
 8013aa6:	001a      	movs	r2, r3
 8013aa8:	2308      	movs	r3, #8
 8013aaa:	18fb      	adds	r3, r7, r3
 8013aac:	881b      	ldrh	r3, [r3, #0]
 8013aae:	18d3      	adds	r3, r2, r3
 8013ab0:	3307      	adds	r3, #7
 8013ab2:	68fa      	ldr	r2, [r7, #12]
 8013ab4:	8892      	ldrh	r2, [r2, #4]
 8013ab6:	4293      	cmp	r3, r2
 8013ab8:	d901      	bls.n	8013abe <TLV_add+0x4e>
 8013aba:	4b53      	ldr	r3, [pc, #332]	; (8013c08 <TLV_add+0x198>)
 8013abc:	e0a0      	b.n	8013c00 <TLV_add+0x190>
 8013abe:	68fb      	ldr	r3, [r7, #12]
 8013ac0:	681b      	ldr	r3, [r3, #0]
 8013ac2:	2b00      	cmp	r3, #0
 8013ac4:	d101      	bne.n	8013aca <TLV_add+0x5a>
 8013ac6:	4b50      	ldr	r3, [pc, #320]	; (8013c08 <TLV_add+0x198>)
 8013ac8:	e09a      	b.n	8013c00 <TLV_add+0x190>
 8013aca:	68fb      	ldr	r3, [r7, #12]
 8013acc:	88db      	ldrh	r3, [r3, #6]
 8013ace:	4a4e      	ldr	r2, [pc, #312]	; (8013c08 <TLV_add+0x198>)
 8013ad0:	4293      	cmp	r3, r2
 8013ad2:	d101      	bne.n	8013ad8 <TLV_add+0x68>
 8013ad4:	4b4c      	ldr	r3, [pc, #304]	; (8013c08 <TLV_add+0x198>)
 8013ad6:	e093      	b.n	8013c00 <TLV_add+0x190>
 8013ad8:	68fb      	ldr	r3, [r7, #12]
 8013ada:	681b      	ldr	r3, [r3, #0]
 8013adc:	68fa      	ldr	r2, [r7, #12]
 8013ade:	88d2      	ldrh	r2, [r2, #6]
 8013ae0:	189b      	adds	r3, r3, r2
 8013ae2:	220b      	movs	r2, #11
 8013ae4:	18ba      	adds	r2, r7, r2
 8013ae6:	7812      	ldrb	r2, [r2, #0]
 8013ae8:	701a      	strb	r2, [r3, #0]
 8013aea:	68fb      	ldr	r3, [r7, #12]
 8013aec:	88db      	ldrh	r3, [r3, #6]
 8013aee:	3301      	adds	r3, #1
 8013af0:	b29a      	uxth	r2, r3
 8013af2:	68fb      	ldr	r3, [r7, #12]
 8013af4:	80da      	strh	r2, [r3, #6]
 8013af6:	68fb      	ldr	r3, [r7, #12]
 8013af8:	88da      	ldrh	r2, [r3, #6]
 8013afa:	68fb      	ldr	r3, [r7, #12]
 8013afc:	811a      	strh	r2, [r3, #8]
 8013afe:	2008      	movs	r0, #8
 8013b00:	183b      	adds	r3, r7, r0
 8013b02:	881b      	ldrh	r3, [r3, #0]
 8013b04:	0a1b      	lsrs	r3, r3, #8
 8013b06:	b299      	uxth	r1, r3
 8013b08:	68fb      	ldr	r3, [r7, #12]
 8013b0a:	681b      	ldr	r3, [r3, #0]
 8013b0c:	68fa      	ldr	r2, [r7, #12]
 8013b0e:	88d2      	ldrh	r2, [r2, #6]
 8013b10:	189b      	adds	r3, r3, r2
 8013b12:	b2ca      	uxtb	r2, r1
 8013b14:	701a      	strb	r2, [r3, #0]
 8013b16:	68fb      	ldr	r3, [r7, #12]
 8013b18:	681a      	ldr	r2, [r3, #0]
 8013b1a:	68fb      	ldr	r3, [r7, #12]
 8013b1c:	88db      	ldrh	r3, [r3, #6]
 8013b1e:	3301      	adds	r3, #1
 8013b20:	18d3      	adds	r3, r2, r3
 8013b22:	183a      	adds	r2, r7, r0
 8013b24:	8812      	ldrh	r2, [r2, #0]
 8013b26:	b2d2      	uxtb	r2, r2
 8013b28:	701a      	strb	r2, [r3, #0]
 8013b2a:	68fb      	ldr	r3, [r7, #12]
 8013b2c:	88db      	ldrh	r3, [r3, #6]
 8013b2e:	3302      	adds	r3, #2
 8013b30:	b29a      	uxth	r2, r3
 8013b32:	68fb      	ldr	r3, [r7, #12]
 8013b34:	80da      	strh	r2, [r3, #6]
 8013b36:	2300      	movs	r3, #0
 8013b38:	617b      	str	r3, [r7, #20]
 8013b3a:	e012      	b.n	8013b62 <TLV_add+0xf2>
 8013b3c:	687a      	ldr	r2, [r7, #4]
 8013b3e:	697b      	ldr	r3, [r7, #20]
 8013b40:	18d2      	adds	r2, r2, r3
 8013b42:	68fb      	ldr	r3, [r7, #12]
 8013b44:	681b      	ldr	r3, [r3, #0]
 8013b46:	68f9      	ldr	r1, [r7, #12]
 8013b48:	88c9      	ldrh	r1, [r1, #6]
 8013b4a:	185b      	adds	r3, r3, r1
 8013b4c:	7812      	ldrb	r2, [r2, #0]
 8013b4e:	701a      	strb	r2, [r3, #0]
 8013b50:	68fb      	ldr	r3, [r7, #12]
 8013b52:	88db      	ldrh	r3, [r3, #6]
 8013b54:	3301      	adds	r3, #1
 8013b56:	b29a      	uxth	r2, r3
 8013b58:	68fb      	ldr	r3, [r7, #12]
 8013b5a:	80da      	strh	r2, [r3, #6]
 8013b5c:	697b      	ldr	r3, [r7, #20]
 8013b5e:	3301      	adds	r3, #1
 8013b60:	617b      	str	r3, [r7, #20]
 8013b62:	2108      	movs	r1, #8
 8013b64:	187b      	adds	r3, r7, r1
 8013b66:	881b      	ldrh	r3, [r3, #0]
 8013b68:	697a      	ldr	r2, [r7, #20]
 8013b6a:	429a      	cmp	r2, r3
 8013b6c:	d3e6      	bcc.n	8013b3c <TLV_add+0xcc>
 8013b6e:	68fb      	ldr	r3, [r7, #12]
 8013b70:	681b      	ldr	r3, [r3, #0]
 8013b72:	68fa      	ldr	r2, [r7, #12]
 8013b74:	88d2      	ldrh	r2, [r2, #6]
 8013b76:	189b      	adds	r3, r3, r2
 8013b78:	22a5      	movs	r2, #165	; 0xa5
 8013b7a:	701a      	strb	r2, [r3, #0]
 8013b7c:	68fb      	ldr	r3, [r7, #12]
 8013b7e:	681a      	ldr	r2, [r3, #0]
 8013b80:	68fb      	ldr	r3, [r7, #12]
 8013b82:	88db      	ldrh	r3, [r3, #6]
 8013b84:	3301      	adds	r3, #1
 8013b86:	18d3      	adds	r3, r2, r3
 8013b88:	22a5      	movs	r2, #165	; 0xa5
 8013b8a:	701a      	strb	r2, [r3, #0]
 8013b8c:	68fb      	ldr	r3, [r7, #12]
 8013b8e:	681a      	ldr	r2, [r3, #0]
 8013b90:	68fb      	ldr	r3, [r7, #12]
 8013b92:	88db      	ldrh	r3, [r3, #6]
 8013b94:	3302      	adds	r3, #2
 8013b96:	18d3      	adds	r3, r2, r3
 8013b98:	22a5      	movs	r2, #165	; 0xa5
 8013b9a:	701a      	strb	r2, [r3, #0]
 8013b9c:	68fb      	ldr	r3, [r7, #12]
 8013b9e:	681a      	ldr	r2, [r3, #0]
 8013ba0:	68fb      	ldr	r3, [r7, #12]
 8013ba2:	88db      	ldrh	r3, [r3, #6]
 8013ba4:	3303      	adds	r3, #3
 8013ba6:	18d3      	adds	r3, r2, r3
 8013ba8:	22a5      	movs	r2, #165	; 0xa5
 8013baa:	701a      	strb	r2, [r3, #0]
 8013bac:	68fb      	ldr	r3, [r7, #12]
 8013bae:	681b      	ldr	r3, [r3, #0]
 8013bb0:	3305      	adds	r3, #5
 8013bb2:	781b      	ldrb	r3, [r3, #0]
 8013bb4:	b29b      	uxth	r3, r3
 8013bb6:	021b      	lsls	r3, r3, #8
 8013bb8:	b29a      	uxth	r2, r3
 8013bba:	68fb      	ldr	r3, [r7, #12]
 8013bbc:	681b      	ldr	r3, [r3, #0]
 8013bbe:	3306      	adds	r3, #6
 8013bc0:	781b      	ldrb	r3, [r3, #0]
 8013bc2:	b29b      	uxth	r3, r3
 8013bc4:	18d3      	adds	r3, r2, r3
 8013bc6:	b29a      	uxth	r2, r3
 8013bc8:	187b      	adds	r3, r7, r1
 8013bca:	881b      	ldrh	r3, [r3, #0]
 8013bcc:	18d3      	adds	r3, r2, r3
 8013bce:	b29a      	uxth	r2, r3
 8013bd0:	2012      	movs	r0, #18
 8013bd2:	183b      	adds	r3, r7, r0
 8013bd4:	3203      	adds	r2, #3
 8013bd6:	801a      	strh	r2, [r3, #0]
 8013bd8:	183b      	adds	r3, r7, r0
 8013bda:	881b      	ldrh	r3, [r3, #0]
 8013bdc:	0a1b      	lsrs	r3, r3, #8
 8013bde:	b29a      	uxth	r2, r3
 8013be0:	68fb      	ldr	r3, [r7, #12]
 8013be2:	681b      	ldr	r3, [r3, #0]
 8013be4:	3305      	adds	r3, #5
 8013be6:	b2d2      	uxtb	r2, r2
 8013be8:	701a      	strb	r2, [r3, #0]
 8013bea:	68fb      	ldr	r3, [r7, #12]
 8013bec:	681b      	ldr	r3, [r3, #0]
 8013bee:	3306      	adds	r3, #6
 8013bf0:	183a      	adds	r2, r7, r0
 8013bf2:	8812      	ldrh	r2, [r2, #0]
 8013bf4:	b2d2      	uxtb	r2, r2
 8013bf6:	701a      	strb	r2, [r3, #0]
 8013bf8:	187b      	adds	r3, r7, r1
 8013bfa:	881b      	ldrh	r3, [r3, #0]
 8013bfc:	3303      	adds	r3, #3
 8013bfe:	b29b      	uxth	r3, r3
 8013c00:	0018      	movs	r0, r3
 8013c02:	46bd      	mov	sp, r7
 8013c04:	b006      	add	sp, #24
 8013c06:	bd80      	pop	{r7, pc}
 8013c08:	0000ffff 	.word	0x0000ffff

08013c0c <TLV_addValue>:
 8013c0c:	b580      	push	{r7, lr}
 8013c0e:	b086      	sub	sp, #24
 8013c10:	af00      	add	r7, sp, #0
 8013c12:	60f8      	str	r0, [r7, #12]
 8013c14:	60b9      	str	r1, [r7, #8]
 8013c16:	1dbb      	adds	r3, r7, #6
 8013c18:	801a      	strh	r2, [r3, #0]
 8013c1a:	68fb      	ldr	r3, [r7, #12]
 8013c1c:	681b      	ldr	r3, [r3, #0]
 8013c1e:	68fa      	ldr	r2, [r7, #12]
 8013c20:	88d2      	ldrh	r2, [r2, #6]
 8013c22:	189b      	adds	r3, r3, r2
 8013c24:	781b      	ldrb	r3, [r3, #0]
 8013c26:	2ba5      	cmp	r3, #165	; 0xa5
 8013c28:	d001      	beq.n	8013c2e <TLV_addValue+0x22>
 8013c2a:	4b41      	ldr	r3, [pc, #260]	; (8013d30 <TLV_addValue+0x124>)
 8013c2c:	e07c      	b.n	8013d28 <TLV_addValue+0x11c>
 8013c2e:	68fb      	ldr	r3, [r7, #12]
 8013c30:	88db      	ldrh	r3, [r3, #6]
 8013c32:	001a      	movs	r2, r3
 8013c34:	1dbb      	adds	r3, r7, #6
 8013c36:	881b      	ldrh	r3, [r3, #0]
 8013c38:	18d3      	adds	r3, r2, r3
 8013c3a:	3307      	adds	r3, #7
 8013c3c:	68fa      	ldr	r2, [r7, #12]
 8013c3e:	8892      	ldrh	r2, [r2, #4]
 8013c40:	4293      	cmp	r3, r2
 8013c42:	d901      	bls.n	8013c48 <TLV_addValue+0x3c>
 8013c44:	4b3a      	ldr	r3, [pc, #232]	; (8013d30 <TLV_addValue+0x124>)
 8013c46:	e06f      	b.n	8013d28 <TLV_addValue+0x11c>
 8013c48:	68fb      	ldr	r3, [r7, #12]
 8013c4a:	681b      	ldr	r3, [r3, #0]
 8013c4c:	2b00      	cmp	r3, #0
 8013c4e:	d101      	bne.n	8013c54 <TLV_addValue+0x48>
 8013c50:	4b37      	ldr	r3, [pc, #220]	; (8013d30 <TLV_addValue+0x124>)
 8013c52:	e069      	b.n	8013d28 <TLV_addValue+0x11c>
 8013c54:	68fb      	ldr	r3, [r7, #12]
 8013c56:	88db      	ldrh	r3, [r3, #6]
 8013c58:	4a35      	ldr	r2, [pc, #212]	; (8013d30 <TLV_addValue+0x124>)
 8013c5a:	4293      	cmp	r3, r2
 8013c5c:	d101      	bne.n	8013c62 <TLV_addValue+0x56>
 8013c5e:	4b34      	ldr	r3, [pc, #208]	; (8013d30 <TLV_addValue+0x124>)
 8013c60:	e062      	b.n	8013d28 <TLV_addValue+0x11c>
 8013c62:	2300      	movs	r3, #0
 8013c64:	617b      	str	r3, [r7, #20]
 8013c66:	e012      	b.n	8013c8e <TLV_addValue+0x82>
 8013c68:	68ba      	ldr	r2, [r7, #8]
 8013c6a:	697b      	ldr	r3, [r7, #20]
 8013c6c:	18d2      	adds	r2, r2, r3
 8013c6e:	68fb      	ldr	r3, [r7, #12]
 8013c70:	681b      	ldr	r3, [r3, #0]
 8013c72:	68f9      	ldr	r1, [r7, #12]
 8013c74:	88c9      	ldrh	r1, [r1, #6]
 8013c76:	185b      	adds	r3, r3, r1
 8013c78:	7812      	ldrb	r2, [r2, #0]
 8013c7a:	701a      	strb	r2, [r3, #0]
 8013c7c:	68fb      	ldr	r3, [r7, #12]
 8013c7e:	88db      	ldrh	r3, [r3, #6]
 8013c80:	3301      	adds	r3, #1
 8013c82:	b29a      	uxth	r2, r3
 8013c84:	68fb      	ldr	r3, [r7, #12]
 8013c86:	80da      	strh	r2, [r3, #6]
 8013c88:	697b      	ldr	r3, [r7, #20]
 8013c8a:	3301      	adds	r3, #1
 8013c8c:	617b      	str	r3, [r7, #20]
 8013c8e:	1dbb      	adds	r3, r7, #6
 8013c90:	881b      	ldrh	r3, [r3, #0]
 8013c92:	697a      	ldr	r2, [r7, #20]
 8013c94:	429a      	cmp	r2, r3
 8013c96:	d3e7      	bcc.n	8013c68 <TLV_addValue+0x5c>
 8013c98:	68fb      	ldr	r3, [r7, #12]
 8013c9a:	681b      	ldr	r3, [r3, #0]
 8013c9c:	68fa      	ldr	r2, [r7, #12]
 8013c9e:	88d2      	ldrh	r2, [r2, #6]
 8013ca0:	189b      	adds	r3, r3, r2
 8013ca2:	22a5      	movs	r2, #165	; 0xa5
 8013ca4:	701a      	strb	r2, [r3, #0]
 8013ca6:	68fb      	ldr	r3, [r7, #12]
 8013ca8:	681a      	ldr	r2, [r3, #0]
 8013caa:	68fb      	ldr	r3, [r7, #12]
 8013cac:	88db      	ldrh	r3, [r3, #6]
 8013cae:	3301      	adds	r3, #1
 8013cb0:	18d3      	adds	r3, r2, r3
 8013cb2:	22a5      	movs	r2, #165	; 0xa5
 8013cb4:	701a      	strb	r2, [r3, #0]
 8013cb6:	68fb      	ldr	r3, [r7, #12]
 8013cb8:	681a      	ldr	r2, [r3, #0]
 8013cba:	68fb      	ldr	r3, [r7, #12]
 8013cbc:	88db      	ldrh	r3, [r3, #6]
 8013cbe:	3302      	adds	r3, #2
 8013cc0:	18d3      	adds	r3, r2, r3
 8013cc2:	22a5      	movs	r2, #165	; 0xa5
 8013cc4:	701a      	strb	r2, [r3, #0]
 8013cc6:	68fb      	ldr	r3, [r7, #12]
 8013cc8:	681a      	ldr	r2, [r3, #0]
 8013cca:	68fb      	ldr	r3, [r7, #12]
 8013ccc:	88db      	ldrh	r3, [r3, #6]
 8013cce:	3303      	adds	r3, #3
 8013cd0:	18d3      	adds	r3, r2, r3
 8013cd2:	22a5      	movs	r2, #165	; 0xa5
 8013cd4:	701a      	strb	r2, [r3, #0]
 8013cd6:	68fb      	ldr	r3, [r7, #12]
 8013cd8:	681b      	ldr	r3, [r3, #0]
 8013cda:	3305      	adds	r3, #5
 8013cdc:	781b      	ldrb	r3, [r3, #0]
 8013cde:	b29b      	uxth	r3, r3
 8013ce0:	021b      	lsls	r3, r3, #8
 8013ce2:	b29a      	uxth	r2, r3
 8013ce4:	68fb      	ldr	r3, [r7, #12]
 8013ce6:	681b      	ldr	r3, [r3, #0]
 8013ce8:	3306      	adds	r3, #6
 8013cea:	781b      	ldrb	r3, [r3, #0]
 8013cec:	b29b      	uxth	r3, r3
 8013cee:	18d3      	adds	r3, r2, r3
 8013cf0:	b299      	uxth	r1, r3
 8013cf2:	2012      	movs	r0, #18
 8013cf4:	183b      	adds	r3, r7, r0
 8013cf6:	1dba      	adds	r2, r7, #6
 8013cf8:	8812      	ldrh	r2, [r2, #0]
 8013cfa:	188a      	adds	r2, r1, r2
 8013cfc:	801a      	strh	r2, [r3, #0]
 8013cfe:	0001      	movs	r1, r0
 8013d00:	187b      	adds	r3, r7, r1
 8013d02:	881b      	ldrh	r3, [r3, #0]
 8013d04:	0a1b      	lsrs	r3, r3, #8
 8013d06:	b29a      	uxth	r2, r3
 8013d08:	68fb      	ldr	r3, [r7, #12]
 8013d0a:	681b      	ldr	r3, [r3, #0]
 8013d0c:	3305      	adds	r3, #5
 8013d0e:	b2d2      	uxtb	r2, r2
 8013d10:	701a      	strb	r2, [r3, #0]
 8013d12:	68fb      	ldr	r3, [r7, #12]
 8013d14:	681b      	ldr	r3, [r3, #0]
 8013d16:	3306      	adds	r3, #6
 8013d18:	187a      	adds	r2, r7, r1
 8013d1a:	8812      	ldrh	r2, [r2, #0]
 8013d1c:	b2d2      	uxtb	r2, r2
 8013d1e:	701a      	strb	r2, [r3, #0]
 8013d20:	1dbb      	adds	r3, r7, #6
 8013d22:	881b      	ldrh	r3, [r3, #0]
 8013d24:	3303      	adds	r3, #3
 8013d26:	b29b      	uxth	r3, r3
 8013d28:	0018      	movs	r0, r3
 8013d2a:	46bd      	mov	sp, r7
 8013d2c:	b006      	add	sp, #24
 8013d2e:	bd80      	pop	{r7, pc}
 8013d30:	0000ffff 	.word	0x0000ffff

08013d34 <TLV_deinit_encode>:
 8013d34:	b580      	push	{r7, lr}
 8013d36:	b082      	sub	sp, #8
 8013d38:	af00      	add	r7, sp, #0
 8013d3a:	6078      	str	r0, [r7, #4]
 8013d3c:	687b      	ldr	r3, [r7, #4]
 8013d3e:	2200      	movs	r2, #0
 8013d40:	601a      	str	r2, [r3, #0]
 8013d42:	687b      	ldr	r3, [r7, #4]
 8013d44:	2201      	movs	r2, #1
 8013d46:	4252      	negs	r2, r2
 8013d48:	80da      	strh	r2, [r3, #6]
 8013d4a:	687b      	ldr	r3, [r7, #4]
 8013d4c:	2200      	movs	r2, #0
 8013d4e:	809a      	strh	r2, [r3, #4]
 8013d50:	46c0      	nop			; (mov r8, r8)
 8013d52:	46bd      	mov	sp, r7
 8013d54:	b002      	add	sp, #8
 8013d56:	bd80      	pop	{r7, pc}

08013d58 <TLV_init_decode>:
 8013d58:	b580      	push	{r7, lr}
 8013d5a:	b082      	sub	sp, #8
 8013d5c:	af00      	add	r7, sp, #0
 8013d5e:	6078      	str	r0, [r7, #4]
 8013d60:	6039      	str	r1, [r7, #0]
 8013d62:	683b      	ldr	r3, [r7, #0]
 8013d64:	2b00      	cmp	r3, #0
 8013d66:	d101      	bne.n	8013d6c <TLV_init_decode+0x14>
 8013d68:	23ff      	movs	r3, #255	; 0xff
 8013d6a:	e01d      	b.n	8013da8 <TLV_init_decode+0x50>
 8013d6c:	683b      	ldr	r3, [r7, #0]
 8013d6e:	781b      	ldrb	r3, [r3, #0]
 8013d70:	2bfd      	cmp	r3, #253	; 0xfd
 8013d72:	d10e      	bne.n	8013d92 <TLV_init_decode+0x3a>
 8013d74:	683b      	ldr	r3, [r7, #0]
 8013d76:	3301      	adds	r3, #1
 8013d78:	781b      	ldrb	r3, [r3, #0]
 8013d7a:	2bfd      	cmp	r3, #253	; 0xfd
 8013d7c:	d109      	bne.n	8013d92 <TLV_init_decode+0x3a>
 8013d7e:	683b      	ldr	r3, [r7, #0]
 8013d80:	3302      	adds	r3, #2
 8013d82:	781b      	ldrb	r3, [r3, #0]
 8013d84:	2bfd      	cmp	r3, #253	; 0xfd
 8013d86:	d104      	bne.n	8013d92 <TLV_init_decode+0x3a>
 8013d88:	683b      	ldr	r3, [r7, #0]
 8013d8a:	3303      	adds	r3, #3
 8013d8c:	781b      	ldrb	r3, [r3, #0]
 8013d8e:	2bfd      	cmp	r3, #253	; 0xfd
 8013d90:	d001      	beq.n	8013d96 <TLV_init_decode+0x3e>
 8013d92:	23ff      	movs	r3, #255	; 0xff
 8013d94:	e008      	b.n	8013da8 <TLV_init_decode+0x50>
 8013d96:	687b      	ldr	r3, [r7, #4]
 8013d98:	683a      	ldr	r2, [r7, #0]
 8013d9a:	601a      	str	r2, [r3, #0]
 8013d9c:	687b      	ldr	r3, [r7, #4]
 8013d9e:	2207      	movs	r2, #7
 8013da0:	809a      	strh	r2, [r3, #4]
 8013da2:	687b      	ldr	r3, [r7, #4]
 8013da4:	889b      	ldrh	r3, [r3, #4]
 8013da6:	b2db      	uxtb	r3, r3
 8013da8:	0018      	movs	r0, r3
 8013daa:	46bd      	mov	sp, r7
 8013dac:	b002      	add	sp, #8
 8013dae:	bd80      	pop	{r7, pc}

08013db0 <TLV_get>:
 8013db0:	b580      	push	{r7, lr}
 8013db2:	b084      	sub	sp, #16
 8013db4:	af00      	add	r7, sp, #0
 8013db6:	60f8      	str	r0, [r7, #12]
 8013db8:	60b9      	str	r1, [r7, #8]
 8013dba:	607a      	str	r2, [r7, #4]
 8013dbc:	603b      	str	r3, [r7, #0]
 8013dbe:	68fb      	ldr	r3, [r7, #12]
 8013dc0:	681b      	ldr	r3, [r3, #0]
 8013dc2:	2b00      	cmp	r3, #0
 8013dc4:	d101      	bne.n	8013dca <TLV_get+0x1a>
 8013dc6:	23ff      	movs	r3, #255	; 0xff
 8013dc8:	e048      	b.n	8013e5c <TLV_get+0xac>
 8013dca:	68fb      	ldr	r3, [r7, #12]
 8013dcc:	889b      	ldrh	r3, [r3, #4]
 8013dce:	2b00      	cmp	r3, #0
 8013dd0:	d101      	bne.n	8013dd6 <TLV_get+0x26>
 8013dd2:	23ff      	movs	r3, #255	; 0xff
 8013dd4:	e042      	b.n	8013e5c <TLV_get+0xac>
 8013dd6:	68fb      	ldr	r3, [r7, #12]
 8013dd8:	681b      	ldr	r3, [r3, #0]
 8013dda:	68fa      	ldr	r2, [r7, #12]
 8013ddc:	8892      	ldrh	r2, [r2, #4]
 8013dde:	189b      	adds	r3, r3, r2
 8013de0:	781b      	ldrb	r3, [r3, #0]
 8013de2:	2ba5      	cmp	r3, #165	; 0xa5
 8013de4:	d101      	bne.n	8013dea <TLV_get+0x3a>
 8013de6:	23ff      	movs	r3, #255	; 0xff
 8013de8:	e038      	b.n	8013e5c <TLV_get+0xac>
 8013dea:	68fb      	ldr	r3, [r7, #12]
 8013dec:	681b      	ldr	r3, [r3, #0]
 8013dee:	68fa      	ldr	r2, [r7, #12]
 8013df0:	8892      	ldrh	r2, [r2, #4]
 8013df2:	189b      	adds	r3, r3, r2
 8013df4:	781a      	ldrb	r2, [r3, #0]
 8013df6:	68bb      	ldr	r3, [r7, #8]
 8013df8:	701a      	strb	r2, [r3, #0]
 8013dfa:	68fb      	ldr	r3, [r7, #12]
 8013dfc:	889b      	ldrh	r3, [r3, #4]
 8013dfe:	3301      	adds	r3, #1
 8013e00:	b29a      	uxth	r2, r3
 8013e02:	68fb      	ldr	r3, [r7, #12]
 8013e04:	809a      	strh	r2, [r3, #4]
 8013e06:	68fb      	ldr	r3, [r7, #12]
 8013e08:	681b      	ldr	r3, [r3, #0]
 8013e0a:	68fa      	ldr	r2, [r7, #12]
 8013e0c:	8892      	ldrh	r2, [r2, #4]
 8013e0e:	189b      	adds	r3, r3, r2
 8013e10:	781b      	ldrb	r3, [r3, #0]
 8013e12:	b29b      	uxth	r3, r3
 8013e14:	021b      	lsls	r3, r3, #8
 8013e16:	b29a      	uxth	r2, r3
 8013e18:	68fb      	ldr	r3, [r7, #12]
 8013e1a:	6819      	ldr	r1, [r3, #0]
 8013e1c:	68fb      	ldr	r3, [r7, #12]
 8013e1e:	889b      	ldrh	r3, [r3, #4]
 8013e20:	3301      	adds	r3, #1
 8013e22:	18cb      	adds	r3, r1, r3
 8013e24:	781b      	ldrb	r3, [r3, #0]
 8013e26:	b29b      	uxth	r3, r3
 8013e28:	18d3      	adds	r3, r2, r3
 8013e2a:	b29a      	uxth	r2, r3
 8013e2c:	687b      	ldr	r3, [r7, #4]
 8013e2e:	801a      	strh	r2, [r3, #0]
 8013e30:	68fb      	ldr	r3, [r7, #12]
 8013e32:	889b      	ldrh	r3, [r3, #4]
 8013e34:	3302      	adds	r3, #2
 8013e36:	b29a      	uxth	r2, r3
 8013e38:	68fb      	ldr	r3, [r7, #12]
 8013e3a:	809a      	strh	r2, [r3, #4]
 8013e3c:	68fb      	ldr	r3, [r7, #12]
 8013e3e:	681b      	ldr	r3, [r3, #0]
 8013e40:	68fa      	ldr	r2, [r7, #12]
 8013e42:	8892      	ldrh	r2, [r2, #4]
 8013e44:	189a      	adds	r2, r3, r2
 8013e46:	683b      	ldr	r3, [r7, #0]
 8013e48:	601a      	str	r2, [r3, #0]
 8013e4a:	68fb      	ldr	r3, [r7, #12]
 8013e4c:	889a      	ldrh	r2, [r3, #4]
 8013e4e:	687b      	ldr	r3, [r7, #4]
 8013e50:	881b      	ldrh	r3, [r3, #0]
 8013e52:	18d3      	adds	r3, r2, r3
 8013e54:	b29a      	uxth	r2, r3
 8013e56:	68fb      	ldr	r3, [r7, #12]
 8013e58:	809a      	strh	r2, [r3, #4]
 8013e5a:	2300      	movs	r3, #0
 8013e5c:	0018      	movs	r0, r3
 8013e5e:	46bd      	mov	sp, r7
 8013e60:	b004      	add	sp, #16
 8013e62:	bd80      	pop	{r7, pc}

08013e64 <TLV_deinit_decode>:
 8013e64:	b580      	push	{r7, lr}
 8013e66:	b082      	sub	sp, #8
 8013e68:	af00      	add	r7, sp, #0
 8013e6a:	6078      	str	r0, [r7, #4]
 8013e6c:	687b      	ldr	r3, [r7, #4]
 8013e6e:	2200      	movs	r2, #0
 8013e70:	601a      	str	r2, [r3, #0]
 8013e72:	687b      	ldr	r3, [r7, #4]
 8013e74:	2200      	movs	r2, #0
 8013e76:	809a      	strh	r2, [r3, #4]
 8013e78:	46c0      	nop			; (mov r8, r8)
 8013e7a:	46bd      	mov	sp, r7
 8013e7c:	b002      	add	sp, #8
 8013e7e:	bd80      	pop	{r7, pc}

08013e80 <TLV_get_string_length>:
 8013e80:	b580      	push	{r7, lr}
 8013e82:	b084      	sub	sp, #16
 8013e84:	af00      	add	r7, sp, #0
 8013e86:	6078      	str	r0, [r7, #4]
 8013e88:	230f      	movs	r3, #15
 8013e8a:	18fb      	adds	r3, r7, r3
 8013e8c:	2200      	movs	r2, #0
 8013e8e:	701a      	strb	r2, [r3, #0]
 8013e90:	e005      	b.n	8013e9e <TLV_get_string_length+0x1e>
 8013e92:	210f      	movs	r1, #15
 8013e94:	187b      	adds	r3, r7, r1
 8013e96:	781a      	ldrb	r2, [r3, #0]
 8013e98:	187b      	adds	r3, r7, r1
 8013e9a:	3201      	adds	r2, #1
 8013e9c:	701a      	strb	r2, [r3, #0]
 8013e9e:	210f      	movs	r1, #15
 8013ea0:	187b      	adds	r3, r7, r1
 8013ea2:	781b      	ldrb	r3, [r3, #0]
 8013ea4:	687a      	ldr	r2, [r7, #4]
 8013ea6:	18d3      	adds	r3, r2, r3
 8013ea8:	781b      	ldrb	r3, [r3, #0]
 8013eaa:	2bfd      	cmp	r3, #253	; 0xfd
 8013eac:	d0f1      	beq.n	8013e92 <TLV_get_string_length+0x12>
 8013eae:	187b      	adds	r3, r7, r1
 8013eb0:	781b      	ldrb	r3, [r3, #0]
 8013eb2:	3301      	adds	r3, #1
 8013eb4:	687a      	ldr	r2, [r7, #4]
 8013eb6:	18d3      	adds	r3, r2, r3
 8013eb8:	781b      	ldrb	r3, [r3, #0]
 8013eba:	021b      	lsls	r3, r3, #8
 8013ebc:	b21a      	sxth	r2, r3
 8013ebe:	187b      	adds	r3, r7, r1
 8013ec0:	781b      	ldrb	r3, [r3, #0]
 8013ec2:	3302      	adds	r3, #2
 8013ec4:	6879      	ldr	r1, [r7, #4]
 8013ec6:	18cb      	adds	r3, r1, r3
 8013ec8:	781b      	ldrb	r3, [r3, #0]
 8013eca:	b21b      	sxth	r3, r3
 8013ecc:	4313      	orrs	r3, r2
 8013ece:	b21a      	sxth	r2, r3
 8013ed0:	210c      	movs	r1, #12
 8013ed2:	187b      	adds	r3, r7, r1
 8013ed4:	801a      	strh	r2, [r3, #0]
 8013ed6:	187b      	adds	r3, r7, r1
 8013ed8:	187a      	adds	r2, r7, r1
 8013eda:	8812      	ldrh	r2, [r2, #0]
 8013edc:	3203      	adds	r2, #3
 8013ede:	801a      	strh	r2, [r3, #0]
 8013ee0:	187b      	adds	r3, r7, r1
 8013ee2:	881b      	ldrh	r3, [r3, #0]
 8013ee4:	0018      	movs	r0, r3
 8013ee6:	46bd      	mov	sp, r7
 8013ee8:	b004      	add	sp, #16
 8013eea:	bd80      	pop	{r7, pc}

08013eec <GUI_Init>:
  * @param  CB_GetCurrent     BSP callback to retrieve IBUS current
  * @retval Functional state
  */
USBPD_FunctionalState GUI_Init(const uint8_t *(*CB_HWBoardVersion)(void), const uint8_t *(*CB_HWPDType)(void),
                               uint16_t (*CB_GetVoltage)(uint8_t), int16_t (*CB_GetCurrent)(uint8_t))
{
 8013eec:	b580      	push	{r7, lr}
 8013eee:	b086      	sub	sp, #24
 8013ef0:	af00      	add	r7, sp, #0
 8013ef2:	60f8      	str	r0, [r7, #12]
 8013ef4:	60b9      	str	r1, [r7, #8]
 8013ef6:	607a      	str	r2, [r7, #4]
 8013ef8:	603b      	str	r3, [r7, #0]
  USBPD_FunctionalState _status = USBPD_ENABLE;
 8013efa:	2317      	movs	r3, #23
 8013efc:	18fb      	adds	r3, r7, r3
 8013efe:	2201      	movs	r2, #1
 8013f00:	701a      	strb	r2, [r3, #0]
  /* Retrieve data from FLASH if needed */
  GUI_OriginalSettings = ((GUI_OK == BSP_GUI_LoadDataFromFlash()) ? USBPD_FALSE : USBPD_TRUE);
 8013f02:	f7fe ff95 	bl	8012e30 <BSP_GUI_LoadDataFromFlash>
 8013f06:	0003      	movs	r3, r0
 8013f08:	1e5a      	subs	r2, r3, #1
 8013f0a:	4193      	sbcs	r3, r2
 8013f0c:	b2db      	uxtb	r3, r3
 8013f0e:	001a      	movs	r2, r3
 8013f10:	4b3f      	ldr	r3, [pc, #252]	; (8014010 <GUI_Init+0x124>)
 8013f12:	701a      	strb	r2, [r3, #0]

  /* Need to update CAD_tDRP & CAD_dcSRC_DRP if CAD_SNKToggleTime not initialized */
  if ((0U == DPM_Settings[USBPD_PORT_0].CAD_SNKToggleTime) || (0U == DPM_Settings[USBPD_PORT_0].CAD_SRCToggleTime))
 8013f14:	4b3f      	ldr	r3, [pc, #252]	; (8014014 <GUI_Init+0x128>)
 8013f16:	799b      	ldrb	r3, [r3, #6]
 8013f18:	2b00      	cmp	r3, #0
 8013f1a:	d003      	beq.n	8013f24 <GUI_Init+0x38>
 8013f1c:	4b3d      	ldr	r3, [pc, #244]	; (8014014 <GUI_Init+0x128>)
 8013f1e:	79db      	ldrb	r3, [r3, #7]
 8013f20:	2b00      	cmp	r3, #0
 8013f22:	d115      	bne.n	8013f50 <GUI_Init+0x64>
  {
    DPM_USER_Settings[USBPD_PORT_0].CAD_tDRP      = 80U;
 8013f24:	4b3c      	ldr	r3, [pc, #240]	; (8014018 <GUI_Init+0x12c>)
 8013f26:	226b      	movs	r2, #107	; 0x6b
 8013f28:	189b      	adds	r3, r3, r2
 8013f2a:	785a      	ldrb	r2, [r3, #1]
 8013f2c:	2101      	movs	r1, #1
 8013f2e:	400a      	ands	r2, r1
 8013f30:	1c11      	adds	r1, r2, #0
 8013f32:	2260      	movs	r2, #96	; 0x60
 8013f34:	4252      	negs	r2, r2
 8013f36:	430a      	orrs	r2, r1
 8013f38:	705a      	strb	r2, [r3, #1]
    DPM_USER_Settings[USBPD_PORT_0].CAD_dcSRC_DRP = 50U;
 8013f3a:	4b37      	ldr	r3, [pc, #220]	; (8014018 <GUI_Init+0x12c>)
 8013f3c:	226b      	movs	r2, #107	; 0x6b
 8013f3e:	189b      	adds	r3, r3, r2
 8013f40:	789a      	ldrb	r2, [r3, #2]
 8013f42:	217f      	movs	r1, #127	; 0x7f
 8013f44:	438a      	bics	r2, r1
 8013f46:	1c11      	adds	r1, r2, #0
 8013f48:	2232      	movs	r2, #50	; 0x32
 8013f4a:	430a      	orrs	r2, r1
 8013f4c:	709a      	strb	r2, [r3, #2]
 8013f4e:	e040      	b.n	8013fd2 <GUI_Init+0xe6>
  }
  else
  {
    DPM_USER_Settings[USBPD_PORT_0].CAD_dcSRC_DRP = (DPM_Settings[USBPD_PORT_0].CAD_SRCToggleTime * 100U) /
 8013f50:	4b30      	ldr	r3, [pc, #192]	; (8014014 <GUI_Init+0x128>)
 8013f52:	79db      	ldrb	r3, [r3, #7]
 8013f54:	001a      	movs	r2, r3
 8013f56:	2364      	movs	r3, #100	; 0x64
 8013f58:	435a      	muls	r2, r3
                                                    (DPM_Settings[USBPD_PORT_0].CAD_SRCToggleTime +
 8013f5a:	4b2e      	ldr	r3, [pc, #184]	; (8014014 <GUI_Init+0x128>)
 8013f5c:	79db      	ldrb	r3, [r3, #7]
 8013f5e:	0019      	movs	r1, r3
                                                     DPM_Settings[USBPD_PORT_0].CAD_SNKToggleTime);
 8013f60:	4b2c      	ldr	r3, [pc, #176]	; (8014014 <GUI_Init+0x128>)
 8013f62:	799b      	ldrb	r3, [r3, #6]
                                                    (DPM_Settings[USBPD_PORT_0].CAD_SRCToggleTime +
 8013f64:	18cb      	adds	r3, r1, r3
    DPM_USER_Settings[USBPD_PORT_0].CAD_dcSRC_DRP = (DPM_Settings[USBPD_PORT_0].CAD_SRCToggleTime * 100U) /
 8013f66:	0019      	movs	r1, r3
 8013f68:	0010      	movs	r0, r2
 8013f6a:	f7f2 f941 	bl	80061f0 <__udivsi3>
 8013f6e:	0003      	movs	r3, r0
 8013f70:	1c1a      	adds	r2, r3, #0
 8013f72:	237f      	movs	r3, #127	; 0x7f
 8013f74:	4013      	ands	r3, r2
 8013f76:	b2da      	uxtb	r2, r3
 8013f78:	4b27      	ldr	r3, [pc, #156]	; (8014018 <GUI_Init+0x12c>)
 8013f7a:	216b      	movs	r1, #107	; 0x6b
 8013f7c:	185b      	adds	r3, r3, r1
 8013f7e:	217f      	movs	r1, #127	; 0x7f
 8013f80:	400a      	ands	r2, r1
 8013f82:	0010      	movs	r0, r2
 8013f84:	789a      	ldrb	r2, [r3, #2]
 8013f86:	217f      	movs	r1, #127	; 0x7f
 8013f88:	438a      	bics	r2, r1
 8013f8a:	1c11      	adds	r1, r2, #0
 8013f8c:	1c02      	adds	r2, r0, #0
 8013f8e:	430a      	orrs	r2, r1
 8013f90:	709a      	strb	r2, [r3, #2]
    DPM_USER_Settings[USBPD_PORT_0].CAD_tDRP = (DPM_Settings[USBPD_PORT_0].CAD_SRCToggleTime * 100U) /
 8013f92:	4b20      	ldr	r3, [pc, #128]	; (8014014 <GUI_Init+0x128>)
 8013f94:	79db      	ldrb	r3, [r3, #7]
 8013f96:	001a      	movs	r2, r3
 8013f98:	2364      	movs	r3, #100	; 0x64
 8013f9a:	435a      	muls	r2, r3
                                               DPM_USER_Settings[USBPD_PORT_0].CAD_dcSRC_DRP;
 8013f9c:	4b1e      	ldr	r3, [pc, #120]	; (8014018 <GUI_Init+0x12c>)
 8013f9e:	216d      	movs	r1, #109	; 0x6d
 8013fa0:	5c5b      	ldrb	r3, [r3, r1]
 8013fa2:	065b      	lsls	r3, r3, #25
 8013fa4:	0e5b      	lsrs	r3, r3, #25
 8013fa6:	b2db      	uxtb	r3, r3
    DPM_USER_Settings[USBPD_PORT_0].CAD_tDRP = (DPM_Settings[USBPD_PORT_0].CAD_SRCToggleTime * 100U) /
 8013fa8:	0019      	movs	r1, r3
 8013faa:	0010      	movs	r0, r2
 8013fac:	f7f2 f920 	bl	80061f0 <__udivsi3>
 8013fb0:	0003      	movs	r3, r0
 8013fb2:	1c1a      	adds	r2, r3, #0
 8013fb4:	237f      	movs	r3, #127	; 0x7f
 8013fb6:	4013      	ands	r3, r2
 8013fb8:	b2d9      	uxtb	r1, r3
 8013fba:	4b17      	ldr	r3, [pc, #92]	; (8014018 <GUI_Init+0x12c>)
 8013fbc:	226b      	movs	r2, #107	; 0x6b
 8013fbe:	189b      	adds	r3, r3, r2
 8013fc0:	1c0a      	adds	r2, r1, #0
 8013fc2:	1890      	adds	r0, r2, r2
 8013fc4:	785a      	ldrb	r2, [r3, #1]
 8013fc6:	2101      	movs	r1, #1
 8013fc8:	400a      	ands	r2, r1
 8013fca:	1c11      	adds	r1, r2, #0
 8013fcc:	1c02      	adds	r2, r0, #0
 8013fce:	430a      	orrs	r2, r1
 8013fd0:	705a      	strb	r2, [r3, #1]
                                               DPM_USER_Settings[USBPD_PORT_1].CAD_dcSRC_DRP;
  }
#endif /* USBPD_PORT_COUNT==2 */


  pCB_HWBoardVersion  = CB_HWBoardVersion;
 8013fd2:	4b12      	ldr	r3, [pc, #72]	; (801401c <GUI_Init+0x130>)
 8013fd4:	68fa      	ldr	r2, [r7, #12]
 8013fd6:	601a      	str	r2, [r3, #0]
  pCB_HWPDType        = CB_HWPDType;
 8013fd8:	4b11      	ldr	r3, [pc, #68]	; (8014020 <GUI_Init+0x134>)
 8013fda:	68ba      	ldr	r2, [r7, #8]
 8013fdc:	601a      	str	r2, [r3, #0]
  pCB_GetVoltage      = CB_GetVoltage;
 8013fde:	4b11      	ldr	r3, [pc, #68]	; (8014024 <GUI_Init+0x138>)
 8013fe0:	687a      	ldr	r2, [r7, #4]
 8013fe2:	601a      	str	r2, [r3, #0]
  pCB_GetCurrent      = CB_GetCurrent;
 8013fe4:	4b10      	ldr	r3, [pc, #64]	; (8014028 <GUI_Init+0x13c>)
 8013fe6:	683a      	ldr	r2, [r7, #0]
 8013fe8:	601a      	str	r2, [r3, #0]

  /* Register 2 callbacks for notification in DPM */
  USBPD_DPM_SetNotification_GUI(GUI_FormatAndSendNotification, GUI_PostNotificationMessage, GUI_SaveInfo);
 8013fea:	4a10      	ldr	r2, [pc, #64]	; (801402c <GUI_Init+0x140>)
 8013fec:	4910      	ldr	r1, [pc, #64]	; (8014030 <GUI_Init+0x144>)
 8013fee:	4b11      	ldr	r3, [pc, #68]	; (8014034 <GUI_Init+0x148>)
 8013ff0:	0018      	movs	r0, r3
 8013ff2:	f7fd fd15 	bl	8011a20 <USBPD_DPM_SetNotification_GUI>

#if !defined(USBPD_THREADX)
  _status = (USBPD_FunctionalState) GUI_InitOS(NULL);
 8013ff6:	2000      	movs	r0, #0
 8013ff8:	f000 f81e 	bl	8014038 <GUI_InitOS>
 8013ffc:	0002      	movs	r2, r0
 8013ffe:	2117      	movs	r1, #23
 8014000:	187b      	adds	r3, r7, r1
 8014002:	701a      	strb	r2, [r3, #0]
#endif /* !USBPD_THREADX */
  return _status;
 8014004:	187b      	adds	r3, r7, r1
 8014006:	781b      	ldrb	r3, [r3, #0]
}
 8014008:	0018      	movs	r0, r3
 801400a:	46bd      	mov	sp, r7
 801400c:	b006      	add	sp, #24
 801400e:	bd80      	pop	{r7, pc}
 8014010:	20002ebd 	.word	0x20002ebd
 8014014:	20000014 	.word	0x20000014
 8014018:	20000028 	.word	0x20000028
 801401c:	20002ec8 	.word	0x20002ec8
 8014020:	20002ecc 	.word	0x20002ecc
 8014024:	20002ed0 	.word	0x20002ed0
 8014028:	20002ed4 	.word	0x20002ed4
 801402c:	080150e1 	.word	0x080150e1
 8014030:	08015011 	.word	0x08015011
 8014034:	080143d7 	.word	0x080143d7

08014038 <GUI_InitOS>:

uint32_t GUI_InitOS(void *MemoryPtr)
{
 8014038:	b590      	push	{r4, r7, lr}
 801403a:	b08d      	sub	sp, #52	; 0x34
 801403c:	af00      	add	r7, sp, #0
 801403e:	6078      	str	r0, [r7, #4]
  static uint8_t _init = 0;
  GUIOS_INIT();
 8014040:	2301      	movs	r3, #1
 8014042:	62fb      	str	r3, [r7, #44]	; 0x2c

  /* This init check to keep the compatibility with the previous version of the GUI */
  /* Only threadX required to separate the OS object init with the init code.       */
  if (_init == 0)
 8014044:	4b1f      	ldr	r3, [pc, #124]	; (80140c4 <GUI_InitOS+0x8c>)
 8014046:	781b      	ldrb	r3, [r3, #0]
 8014048:	2b00      	cmp	r3, #0
 801404a:	d134      	bne.n	80140b6 <GUI_InitOS+0x7e>
  {
    _init = 1;
 801404c:	4b1d      	ldr	r3, [pc, #116]	; (80140c4 <GUI_InitOS+0x8c>)
 801404e:	2201      	movs	r2, #1
 8014050:	701a      	strb	r2, [r3, #0]
#if defined(_RTOS) || defined(USBPD_THREADX)
    GUIOS_CREATE_QUEUE(GUIMsgBox, "GUIBOX", GUI_BOX_MESSAGES_MAX, GUIOS_ELEMENT_SIZE);
 8014052:	2200      	movs	r2, #0
 8014054:	2104      	movs	r1, #4
 8014056:	201e      	movs	r0, #30
 8014058:	f7f9 ff66 	bl	800df28 <osMessageQueueNew>
 801405c:	0002      	movs	r2, r0
 801405e:	4b1a      	ldr	r3, [pc, #104]	; (80140c8 <GUI_InitOS+0x90>)
 8014060:	601a      	str	r2, [r3, #0]
 8014062:	4b19      	ldr	r3, [pc, #100]	; (80140c8 <GUI_InitOS+0x90>)
 8014064:	681b      	ldr	r3, [r3, #0]
 8014066:	2b00      	cmp	r3, #0
 8014068:	d102      	bne.n	8014070 <GUI_InitOS+0x38>
 801406a:	2300      	movs	r3, #0
 801406c:	62fb      	str	r3, [r7, #44]	; 0x2c
 801406e:	e023      	b.n	80140b8 <GUI_InitOS+0x80>
    GUIOS_CREATE_TASK(GUI_ThreadID, GUI, TaskGUI, OS_GUI_PRIORITY, OS_GUI_STACK_SIZE, &GUIMsgBox);
 8014070:	2408      	movs	r4, #8
 8014072:	193b      	adds	r3, r7, r4
 8014074:	0018      	movs	r0, r3
 8014076:	2324      	movs	r3, #36	; 0x24
 8014078:	001a      	movs	r2, r3
 801407a:	2100      	movs	r1, #0
 801407c:	f004 f8a2 	bl	80181c4 <memset>
 8014080:	0021      	movs	r1, r4
 8014082:	187b      	adds	r3, r7, r1
 8014084:	4a11      	ldr	r2, [pc, #68]	; (80140cc <GUI_InitOS+0x94>)
 8014086:	601a      	str	r2, [r3, #0]
 8014088:	187b      	adds	r3, r7, r1
 801408a:	2296      	movs	r2, #150	; 0x96
 801408c:	00d2      	lsls	r2, r2, #3
 801408e:	615a      	str	r2, [r3, #20]
 8014090:	187b      	adds	r3, r7, r1
 8014092:	2208      	movs	r2, #8
 8014094:	619a      	str	r2, [r3, #24]
 8014096:	187a      	adds	r2, r7, r1
 8014098:	490b      	ldr	r1, [pc, #44]	; (80140c8 <GUI_InitOS+0x90>)
 801409a:	4b0d      	ldr	r3, [pc, #52]	; (80140d0 <GUI_InitOS+0x98>)
 801409c:	0018      	movs	r0, r3
 801409e:	f7f9 fe41 	bl	800dd24 <osThreadNew>
 80140a2:	0002      	movs	r2, r0
 80140a4:	4b0b      	ldr	r3, [pc, #44]	; (80140d4 <GUI_InitOS+0x9c>)
 80140a6:	601a      	str	r2, [r3, #0]
 80140a8:	4b0a      	ldr	r3, [pc, #40]	; (80140d4 <GUI_InitOS+0x9c>)
 80140aa:	681b      	ldr	r3, [r3, #0]
 80140ac:	2b00      	cmp	r3, #0
 80140ae:	d103      	bne.n	80140b8 <GUI_InitOS+0x80>
 80140b0:	2300      	movs	r3, #0
 80140b2:	62fb      	str	r3, [r7, #44]	; 0x2c
 80140b4:	e000      	b.n	80140b8 <GUI_InitOS+0x80>
#endif /* USE_STM32_UTILITY_OS */
#endif /* _RTOS || USBPD_THREADX */
  }

#if defined(_RTOS) || defined(USBPD_THREADX)
error:
 80140b6:	46c0      	nop			; (mov r8, r8)
  return(_status);
 80140b8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
#else
  return(USBPD_ENABLE);
#endif /* _RTOS || USBPD_THREADX */
}
 80140ba:	0018      	movs	r0, r3
 80140bc:	46bd      	mov	sp, r7
 80140be:	b00d      	add	sp, #52	; 0x34
 80140c0:	bd90      	pop	{r4, r7, pc}
 80140c2:	46c0      	nop			; (mov r8, r8)
 80140c4:	20002f4c 	.word	0x20002f4c
 80140c8:	20002ec0 	.word	0x20002ec0
 80140cc:	08019850 	.word	0x08019850
 80140d0:	080140f1 	.word	0x080140f1
 80140d4:	20002ec4 	.word	0x20002ec4

080140d8 <GUI_Start>:
{
  BSP_GUI_EraseDataInFlash();
}

void GUI_Start(void)
{
 80140d8:	b580      	push	{r7, lr}
 80140da:	af00      	add	r7, sp, #0
  /* register the GUI callback to manage UART reception */
  TRACER_EMB_StartRX(GUI_CALLBACK_RX);
 80140dc:	4b03      	ldr	r3, [pc, #12]	; (80140ec <GUI_Start+0x14>)
 80140de:	0018      	movs	r0, r3
 80140e0:	f002 ffa8 	bl	8017034 <TRACER_EMB_StartRX>
}
 80140e4:	46c0      	nop			; (mov r8, r8)
 80140e6:	46bd      	mov	sp, r7
 80140e8:	bd80      	pop	{r7, pc}
 80140ea:	46c0      	nop			; (mov r8, r8)
 80140ec:	080142d1 	.word	0x080142d1

080140f0 <TaskGUI>:
#if defined(_RTOS) || defined(USBPD_THREADX)
GUIDEF_TASK_FUNCTION(TaskGUI)
#else
void GUI_Execute(void)
#endif /* _RTOS || USBPD_THREADX */
{
 80140f0:	b580      	push	{r7, lr}
 80140f2:	b088      	sub	sp, #32
 80140f4:	af00      	add	r7, sp, #0
 80140f6:	6078      	str	r0, [r7, #4]
#if defined(_RTOS) || defined(USBPD_THREADX)
  uint32_t _timing = GUI_DEFAULT_WAIT;
 80140f8:	2301      	movs	r3, #1
 80140fa:	425b      	negs	r3, r3
 80140fc:	61fb      	str	r3, [r7, #28]
  GUI_Start();
 80140fe:	f7ff ffeb 	bl	80140d8 <GUI_Start>
  do
  {
    GUIOS_QUEUE_EVENT event = 0;
 8014102:	2300      	movs	r3, #0
 8014104:	613b      	str	r3, [r7, #16]
    GUIOS_GETMESSAGE_QUEUE(GUIMsgBox, _timing, event);
 8014106:	4b54      	ldr	r3, [pc, #336]	; (8014258 <TaskGUI+0x168>)
 8014108:	6818      	ldr	r0, [r3, #0]
 801410a:	69fb      	ldr	r3, [r7, #28]
 801410c:	2210      	movs	r2, #16
 801410e:	18b9      	adds	r1, r7, r2
 8014110:	2200      	movs	r2, #0
 8014112:	f7f9 ffdf 	bl	800e0d4 <osMessageQueueGet>
    switch ((GUI_USER_EVENT)(event & 0xFU))
 8014116:	693b      	ldr	r3, [r7, #16]
 8014118:	b2db      	uxtb	r3, r3
 801411a:	001a      	movs	r2, r3
 801411c:	230f      	movs	r3, #15
 801411e:	4013      	ands	r3, r2
 8014120:	d011      	beq.n	8014146 <TaskGUI+0x56>
 8014122:	2b01      	cmp	r3, #1
 8014124:	d000      	beq.n	8014128 <TaskGUI+0x38>
 8014126:	e090      	b.n	801424a <TaskGUI+0x15a>
    {
      case GUI_USER_EVENT_GUI:
      {
        (void)GUI_RXProcess((uint32_t)event);
 8014128:	693b      	ldr	r3, [r7, #16]
 801412a:	0018      	movs	r0, r3
 801412c:	f000 f8fa 	bl	8014324 <GUI_RXProcess>
        /* Sent an event to check if measurement report has been requested */
        GUIOS_PUT_MESSAGE_QUEUE(GUIMsgBox, GUI_USER_EVENT_TIMER, 0U);
 8014130:	2300      	movs	r3, #0
 8014132:	60fb      	str	r3, [r7, #12]
 8014134:	4b48      	ldr	r3, [pc, #288]	; (8014258 <TaskGUI+0x168>)
 8014136:	6818      	ldr	r0, [r3, #0]
 8014138:	230c      	movs	r3, #12
 801413a:	18f9      	adds	r1, r7, r3
 801413c:	2300      	movs	r3, #0
 801413e:	2200      	movs	r2, #0
 8014140:	f7f9 ff6c 	bl	800e01c <osMessageQueuePut>
        break;
 8014144:	e082      	b.n	801424c <TaskGUI+0x15c>
          default:
            break;
        }
        GUI_Flag = GUI_USER_EVENT_NONE;
#endif /* _RTOS || USBPD_THREADX */
        for (uint8_t _instance = 0; _instance < (uint8_t)USBPD_PORT_COUNT; _instance++)
 8014146:	231b      	movs	r3, #27
 8014148:	18fb      	adds	r3, r7, r3
 801414a:	2200      	movs	r2, #0
 801414c:	701a      	strb	r2, [r3, #0]
 801414e:	e076      	b.n	801423e <TaskGUI+0x14e>
          /* -------------------------------------------------  */
          /* Check if timeout related to Measurement reporting  */
          /* -------------------------------------------------  */
          /* - Send a GUI Event only if PE is connected
             and Measurement report has been enabled          */
          if ((USBPD_TRUE == DPM_Params[_instance].PE_IsConnected)
 8014150:	201b      	movs	r0, #27
 8014152:	183b      	adds	r3, r7, r0
 8014154:	781b      	ldrb	r3, [r3, #0]
 8014156:	4a41      	ldr	r2, [pc, #260]	; (801425c <TaskGUI+0x16c>)
 8014158:	009b      	lsls	r3, r3, #2
 801415a:	18d3      	adds	r3, r2, r3
 801415c:	785b      	ldrb	r3, [r3, #1]
 801415e:	06db      	lsls	r3, r3, #27
 8014160:	0fdb      	lsrs	r3, r3, #31
 8014162:	b2db      	uxtb	r3, r3
 8014164:	2b01      	cmp	r3, #1
 8014166:	d15d      	bne.n	8014224 <TaskGUI+0x134>
              && (1U == GUI_USER_Params[_instance].u.d.MeasReportActivation)
 8014168:	183b      	adds	r3, r7, r0
 801416a:	781a      	ldrb	r2, [r3, #0]
 801416c:	493c      	ldr	r1, [pc, #240]	; (8014260 <TaskGUI+0x170>)
 801416e:	0013      	movs	r3, r2
 8014170:	005b      	lsls	r3, r3, #1
 8014172:	189b      	adds	r3, r3, r2
 8014174:	005b      	lsls	r3, r3, #1
 8014176:	18cb      	adds	r3, r1, r3
 8014178:	791b      	ldrb	r3, [r3, #4]
 801417a:	061b      	lsls	r3, r3, #24
 801417c:	0fdb      	lsrs	r3, r3, #31
 801417e:	b2db      	uxtb	r3, r3
 8014180:	2b01      	cmp	r3, #1
 8014182:	d14f      	bne.n	8014224 <TaskGUI+0x134>
              && (0U != GUI_USER_Params[_instance].u.d.MeasReportValue))
 8014184:	183b      	adds	r3, r7, r0
 8014186:	781a      	ldrb	r2, [r3, #0]
 8014188:	4935      	ldr	r1, [pc, #212]	; (8014260 <TaskGUI+0x170>)
 801418a:	0013      	movs	r3, r2
 801418c:	005b      	lsls	r3, r3, #1
 801418e:	189b      	adds	r3, r3, r2
 8014190:	005b      	lsls	r3, r3, #1
 8014192:	18cb      	adds	r3, r1, r3
 8014194:	791b      	ldrb	r3, [r3, #4]
 8014196:	065b      	lsls	r3, r3, #25
 8014198:	0e5b      	lsrs	r3, r3, #25
 801419a:	b2db      	uxtb	r3, r3
 801419c:	2b00      	cmp	r3, #0
 801419e:	d041      	beq.n	8014224 <TaskGUI+0x134>
          {
            /* Check if timer has expired */
            if (IS_GUI_TIMER_EXPIRED(_instance, GUI_TimerMeasReport))
 80141a0:	183b      	adds	r3, r7, r0
 80141a2:	781a      	ldrb	r2, [r3, #0]
 80141a4:	4b2f      	ldr	r3, [pc, #188]	; (8014264 <TaskGUI+0x174>)
 80141a6:	0052      	lsls	r2, r2, #1
 80141a8:	5ad3      	ldrh	r3, [r2, r3]
 80141aa:	b29a      	uxth	r2, r3
 80141ac:	2380      	movs	r3, #128	; 0x80
 80141ae:	021b      	lsls	r3, r3, #8
 80141b0:	429a      	cmp	r2, r3
 80141b2:	d109      	bne.n	80141c8 <TaskGUI+0xd8>
            {
              uint32_t event_mr = GUI_USER_EVENT_GUI
                                  | (_instance << GUI_PE_PORT_NUM_Pos)
 80141b4:	183b      	adds	r3, r7, r0
 80141b6:	781b      	ldrb	r3, [r3, #0]
 80141b8:	061b      	lsls	r3, r3, #24
                                  | (GUI_NOTIF_MEASUREMENT << GUI_PE_NOTIF_Pos);
 80141ba:	4a2b      	ldr	r2, [pc, #172]	; (8014268 <TaskGUI+0x178>)
 80141bc:	4313      	orrs	r3, r2
              uint32_t event_mr = GUI_USER_EVENT_GUI
 80141be:	617b      	str	r3, [r7, #20]
              (void)GUI_RXProcess(event_mr);
 80141c0:	697b      	ldr	r3, [r7, #20]
 80141c2:	0018      	movs	r0, r3
 80141c4:	f000 f8ae 	bl	8014324 <GUI_RXProcess>
            }
            /* Start or Restart Measurement report timer */
            if (!(IS_GUI_TIMER_RUNNING(_instance, GUI_TimerMeasReport)))
 80141c8:	201b      	movs	r0, #27
 80141ca:	183b      	adds	r3, r7, r0
 80141cc:	781a      	ldrb	r2, [r3, #0]
 80141ce:	4b25      	ldr	r3, [pc, #148]	; (8014264 <TaskGUI+0x174>)
 80141d0:	0052      	lsls	r2, r2, #1
 80141d2:	5ad3      	ldrh	r3, [r2, r3]
 80141d4:	b29b      	uxth	r3, r3
 80141d6:	045b      	lsls	r3, r3, #17
 80141d8:	0c5b      	lsrs	r3, r3, #17
 80141da:	2b00      	cmp	r3, #0
 80141dc:	dc29      	bgt.n	8014232 <TaskGUI+0x142>
            {
              GUI_START_TIMER(_instance, GUI_TimerMeasReport,
 80141de:	183b      	adds	r3, r7, r0
 80141e0:	781a      	ldrb	r2, [r3, #0]
 80141e2:	491f      	ldr	r1, [pc, #124]	; (8014260 <TaskGUI+0x170>)
 80141e4:	0013      	movs	r3, r2
 80141e6:	005b      	lsls	r3, r3, #1
 80141e8:	189b      	adds	r3, r3, r2
 80141ea:	005b      	lsls	r3, r3, #1
 80141ec:	18cb      	adds	r3, r1, r3
 80141ee:	791b      	ldrb	r3, [r3, #4]
 80141f0:	065b      	lsls	r3, r3, #25
 80141f2:	0e5b      	lsrs	r3, r3, #25
 80141f4:	b2db      	uxtb	r3, r3
 80141f6:	b29b      	uxth	r3, r3
 80141f8:	2228      	movs	r2, #40	; 0x28
 80141fa:	4353      	muls	r3, r2
 80141fc:	b29b      	uxth	r3, r3
 80141fe:	183a      	adds	r2, r7, r0
 8014200:	7812      	ldrb	r2, [r2, #0]
 8014202:	491a      	ldr	r1, [pc, #104]	; (801426c <TaskGUI+0x17c>)
 8014204:	430b      	orrs	r3, r1
 8014206:	b299      	uxth	r1, r3
 8014208:	4b16      	ldr	r3, [pc, #88]	; (8014264 <TaskGUI+0x174>)
 801420a:	0052      	lsls	r2, r2, #1
 801420c:	52d1      	strh	r1, [r2, r3]
 801420e:	2300      	movs	r3, #0
 8014210:	60bb      	str	r3, [r7, #8]
 8014212:	4b11      	ldr	r3, [pc, #68]	; (8014258 <TaskGUI+0x168>)
 8014214:	6818      	ldr	r0, [r3, #0]
 8014216:	2308      	movs	r3, #8
 8014218:	18f9      	adds	r1, r7, r3
 801421a:	2300      	movs	r3, #0
 801421c:	2200      	movs	r2, #0
 801421e:	f7f9 fefd 	bl	800e01c <osMessageQueuePut>
            if (!(IS_GUI_TIMER_RUNNING(_instance, GUI_TimerMeasReport)))
 8014222:	e006      	b.n	8014232 <TaskGUI+0x142>
            }
          }
          else
          {
            /* Stop measurement report timer */
            GUI_TimerMeasReport[_instance] = 0;
 8014224:	231b      	movs	r3, #27
 8014226:	18fb      	adds	r3, r7, r3
 8014228:	781a      	ldrb	r2, [r3, #0]
 801422a:	4b0e      	ldr	r3, [pc, #56]	; (8014264 <TaskGUI+0x174>)
 801422c:	0052      	lsls	r2, r2, #1
 801422e:	2100      	movs	r1, #0
 8014230:	52d1      	strh	r1, [r2, r3]
        for (uint8_t _instance = 0; _instance < (uint8_t)USBPD_PORT_COUNT; _instance++)
 8014232:	211b      	movs	r1, #27
 8014234:	187b      	adds	r3, r7, r1
 8014236:	781a      	ldrb	r2, [r3, #0]
 8014238:	187b      	adds	r3, r7, r1
 801423a:	3201      	adds	r2, #1
 801423c:	701a      	strb	r2, [r3, #0]
 801423e:	231b      	movs	r3, #27
 8014240:	18fb      	adds	r3, r7, r3
 8014242:	781b      	ldrb	r3, [r3, #0]
 8014244:	2b00      	cmp	r3, #0
 8014246:	d083      	beq.n	8014150 <TaskGUI+0x60>
          }
        }
#if defined(_RTOS) || defined(USBPD_THREADX)
        break;
 8014248:	e000      	b.n	801424c <TaskGUI+0x15c>
      }

      default:
        break;
 801424a:	46c0      	nop			; (mov r8, r8)
    }
    _timing = CheckGUITimers();
 801424c:	f000 f810 	bl	8014270 <CheckGUITimers>
 8014250:	0003      	movs	r3, r0
 8014252:	61fb      	str	r3, [r7, #28]
  {
 8014254:	e755      	b.n	8014102 <TaskGUI+0x12>
 8014256:	46c0      	nop			; (mov r8, r8)
 8014258:	20002ec0 	.word	0x20002ec0
 801425c:	20002c4c 	.word	0x20002c4c
 8014260:	20002cb4 	.word	0x20002cb4
 8014264:	20002cb0 	.word	0x20002cb0
 8014268:	00000711 	.word	0x00000711
 801426c:	ffff8000 	.word	0xffff8000

08014270 <CheckGUITimers>:
#endif /* _RTOS || USBPD_THREADX */
}

#if defined(_RTOS) || defined(USBPD_THREADX)
static uint32_t CheckGUITimers(void)
{
 8014270:	b580      	push	{r7, lr}
 8014272:	b084      	sub	sp, #16
 8014274:	af00      	add	r7, sp, #0
  uint32_t _timing = GUI_DEFAULT_WAIT;
 8014276:	2301      	movs	r3, #1
 8014278:	425b      	negs	r3, r3
 801427a:	60fb      	str	r3, [r7, #12]
  uint32_t _current_timing;

  /* Calculate the minimum timers to wake-up GUI task */
  for (uint8_t instance = 0; instance < (uint8_t)USBPD_PORT_COUNT; instance++)
 801427c:	230b      	movs	r3, #11
 801427e:	18fb      	adds	r3, r7, r3
 8014280:	2200      	movs	r2, #0
 8014282:	701a      	strb	r2, [r3, #0]
 8014284:	e018      	b.n	80142b8 <CheckGUITimers+0x48>
  {
    /* Check if Measurement reporting has been enabled by the GUI */
    _current_timing = (uint32_t)(GUI_TimerMeasReport[instance]) & GUI_TIMER_READ_MSK;
 8014286:	230b      	movs	r3, #11
 8014288:	18fb      	adds	r3, r7, r3
 801428a:	781a      	ldrb	r2, [r3, #0]
 801428c:	4b0f      	ldr	r3, [pc, #60]	; (80142cc <CheckGUITimers+0x5c>)
 801428e:	0052      	lsls	r2, r2, #1
 8014290:	5ad3      	ldrh	r3, [r2, r3]
 8014292:	b29b      	uxth	r3, r3
 8014294:	045b      	lsls	r3, r3, #17
 8014296:	0c5b      	lsrs	r3, r3, #17
 8014298:	607b      	str	r3, [r7, #4]
    if (_current_timing > 0U)
 801429a:	687b      	ldr	r3, [r7, #4]
 801429c:	2b00      	cmp	r3, #0
 801429e:	d005      	beq.n	80142ac <CheckGUITimers+0x3c>
    {
      if (_current_timing < _timing)
 80142a0:	687a      	ldr	r2, [r7, #4]
 80142a2:	68fb      	ldr	r3, [r7, #12]
 80142a4:	429a      	cmp	r2, r3
 80142a6:	d201      	bcs.n	80142ac <CheckGUITimers+0x3c>
      {
        _timing = _current_timing;
 80142a8:	687b      	ldr	r3, [r7, #4]
 80142aa:	60fb      	str	r3, [r7, #12]
  for (uint8_t instance = 0; instance < (uint8_t)USBPD_PORT_COUNT; instance++)
 80142ac:	210b      	movs	r1, #11
 80142ae:	187b      	adds	r3, r7, r1
 80142b0:	781a      	ldrb	r2, [r3, #0]
 80142b2:	187b      	adds	r3, r7, r1
 80142b4:	3201      	adds	r2, #1
 80142b6:	701a      	strb	r2, [r3, #0]
 80142b8:	230b      	movs	r3, #11
 80142ba:	18fb      	adds	r3, r7, r3
 80142bc:	781b      	ldrb	r3, [r3, #0]
 80142be:	2b00      	cmp	r3, #0
 80142c0:	d0e1      	beq.n	8014286 <CheckGUITimers+0x16>
      }
    }
  }
  return _timing;
 80142c2:	68fb      	ldr	r3, [r7, #12]
}
 80142c4:	0018      	movs	r0, r3
 80142c6:	46bd      	mov	sp, r7
 80142c8:	b004      	add	sp, #16
 80142ca:	bd80      	pop	{r7, pc}
 80142cc:	20002cb0 	.word	0x20002cb0

080142d0 <GUI_CALLBACK_RX>:
  * @param  Character Byte received by the device
  * @param  Error     Error detected in the reception
  * @retval 1 if message to send to DPM application
  */
void GUI_CALLBACK_RX(uint8_t Character, uint8_t Error)
{
 80142d0:	b580      	push	{r7, lr}
 80142d2:	b084      	sub	sp, #16
 80142d4:	af00      	add	r7, sp, #0
 80142d6:	0002      	movs	r2, r0
 80142d8:	1dfb      	adds	r3, r7, #7
 80142da:	701a      	strb	r2, [r3, #0]
 80142dc:	1dbb      	adds	r3, r7, #6
 80142de:	1c0a      	adds	r2, r1, #0
 80142e0:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("cpsid i" : : : "memory");
 80142e2:	b672      	cpsid	i
}
 80142e4:	46c0      	nop			; (mov r8, r8)
  uint32_t event;
  __disable_irq();
  event = GUI_GetMessage(Character, Error);
 80142e6:	1dbb      	adds	r3, r7, #6
 80142e8:	781a      	ldrb	r2, [r3, #0]
 80142ea:	1dfb      	adds	r3, r7, #7
 80142ec:	781b      	ldrb	r3, [r3, #0]
 80142ee:	0011      	movs	r1, r2
 80142f0:	0018      	movs	r0, r3
 80142f2:	f000 f891 	bl	8014418 <GUI_GetMessage>
 80142f6:	0003      	movs	r3, r0
 80142f8:	60fb      	str	r3, [r7, #12]
  __ASM volatile ("cpsie i" : : : "memory");
 80142fa:	b662      	cpsie	i
}
 80142fc:	46c0      	nop			; (mov r8, r8)
  __enable_irq();
  if (event == 1U)
 80142fe:	68fb      	ldr	r3, [r7, #12]
 8014300:	2b01      	cmp	r3, #1
 8014302:	d109      	bne.n	8014318 <GUI_CALLBACK_RX+0x48>
  {
#if defined(_RTOS) || defined(USBPD_THREADX)
    GUIOS_PUT_MESSAGE_QUEUE(GUIMsgBox, GUI_USER_EVENT_GUI, 0U);
 8014304:	2301      	movs	r3, #1
 8014306:	60bb      	str	r3, [r7, #8]
 8014308:	4b05      	ldr	r3, [pc, #20]	; (8014320 <GUI_CALLBACK_RX+0x50>)
 801430a:	6818      	ldr	r0, [r3, #0]
 801430c:	2308      	movs	r3, #8
 801430e:	18f9      	adds	r1, r7, r3
 8014310:	2300      	movs	r3, #0
 8014312:	2200      	movs	r2, #0
 8014314:	f7f9 fe82 	bl	800e01c <osMessageQueuePut>
    GUI_RXProcess(GUI_Flag);
    GUI_Flag = GUI_USER_EVENT_NONE;
#endif /* USE_STM32_UTILITY_OS */
#endif /* _RTOS */
  }
}
 8014318:	46c0      	nop			; (mov r8, r8)
 801431a:	46bd      	mov	sp, r7
 801431c:	b004      	add	sp, #16
 801431e:	bd80      	pop	{r7, pc}
 8014320:	20002ec0 	.word	0x20002ec0

08014324 <GUI_RXProcess>:
  * @brief  Main Trace RX process to push data on the media.
  * @param  Event     GUI trace event
  * @retval Timing
  */
uint32_t GUI_RXProcess(uint32_t Event)
{
 8014324:	b5b0      	push	{r4, r5, r7, lr}
 8014326:	b086      	sub	sp, #24
 8014328:	af00      	add	r7, sp, #0
 801432a:	6078      	str	r0, [r7, #4]
  uint8_t *msg;
  USBPD_GUI_State state;
  uint8_t size;

  if (0U == (Event & GUI_PE_NOTIF_Msk))
 801432c:	687a      	ldr	r2, [r7, #4]
 801432e:	23ff      	movs	r3, #255	; 0xff
 8014330:	011b      	lsls	r3, r3, #4
 8014332:	4013      	ands	r3, r2
 8014334:	d11f      	bne.n	8014376 <GUI_RXProcess+0x52>
  {
    /* Message have been received by GUI */
    state = GUI_SendAnswer(&msg, &size);
 8014336:	2515      	movs	r5, #21
 8014338:	197c      	adds	r4, r7, r5
 801433a:	230f      	movs	r3, #15
 801433c:	18fa      	adds	r2, r7, r3
 801433e:	2310      	movs	r3, #16
 8014340:	18fb      	adds	r3, r7, r3
 8014342:	0011      	movs	r1, r2
 8014344:	0018      	movs	r0, r3
 8014346:	f000 f96b 	bl	8014620 <GUI_SendAnswer>
 801434a:	0003      	movs	r3, r0
 801434c:	7023      	strb	r3, [r4, #0]

    switch (state)
 801434e:	197b      	adds	r3, r7, r5
 8014350:	781b      	ldrb	r3, [r3, #0]
 8014352:	2b00      	cmp	r3, #0
 8014354:	d039      	beq.n	80143ca <GUI_RXProcess+0xa6>
 8014356:	2b02      	cmp	r3, #2
 8014358:	d104      	bne.n	8014364 <GUI_RXProcess+0x40>
    {
      case GUI_STATE_RESET:
        /* DPM_RESET_REQ received by the device */
        /* Save parameters in FLASH */
        (void)BSP_GUI_SaveDataInFlash();
 801435a:	f7fe ff8f 	bl	801327c <BSP_GUI_SaveDataInFlash>
        HAL_NVIC_SystemReset();
 801435e:	f7f4 f926 	bl	80085ae <HAL_NVIC_SystemReset>
        break;
 8014362:	e033      	b.n	80143cc <GUI_RXProcess+0xa8>
      case GUI_STATE_INIT:
        /* DPM_INIT_REQ received by the device */
        break;
      default:
        /* Another GUI messages received by the device */
        TRACER_EMB_Add(msg, size);
 8014364:	693a      	ldr	r2, [r7, #16]
 8014366:	230f      	movs	r3, #15
 8014368:	18fb      	adds	r3, r7, r3
 801436a:	781b      	ldrb	r3, [r3, #0]
 801436c:	0019      	movs	r1, r3
 801436e:	0010      	movs	r0, r2
 8014370:	f002 fdf6 	bl	8016f60 <TRACER_EMB_Add>
        break;
 8014374:	e02a      	b.n	80143cc <GUI_RXProcess+0xa8>
    }
  }
  else
  {
    uint16_t type_event = ((uint16_t)Event & GUI_PE_NOTIF_Msk) >> GUI_PE_NOTIF_Pos;
 8014376:	687b      	ldr	r3, [r7, #4]
 8014378:	b29b      	uxth	r3, r3
 801437a:	091b      	lsrs	r3, r3, #4
 801437c:	b29a      	uxth	r2, r3
 801437e:	2016      	movs	r0, #22
 8014380:	183b      	adds	r3, r7, r0
 8014382:	21ff      	movs	r1, #255	; 0xff
 8014384:	400a      	ands	r2, r1
 8014386:	801a      	strh	r2, [r3, #0]
    if (GUI_NOTIF_MEASUREMENT == type_event)
 8014388:	183b      	adds	r3, r7, r0
 801438a:	881b      	ldrh	r3, [r3, #0]
 801438c:	2b71      	cmp	r3, #113	; 0x71
 801438e:	d10e      	bne.n	80143ae <GUI_RXProcess+0x8a>
    {
      /* Notification related to timeout for measure reporting */
      /* Send a notification to associated port */
      (void)GUI_FormatAndSendNotification(((Event & GUI_PE_PORT_NUM_Msk) >> GUI_PE_PORT_NUM_Pos),
 8014390:	687b      	ldr	r3, [r7, #4]
 8014392:	0e1b      	lsrs	r3, r3, #24
 8014394:	2203      	movs	r2, #3
 8014396:	4013      	ands	r3, r2
 8014398:	001c      	movs	r4, r3
 801439a:	f7f3 f879 	bl	8007490 <HAL_GetTick>
 801439e:	0002      	movs	r2, r0
 80143a0:	2380      	movs	r3, #128	; 0x80
 80143a2:	011b      	lsls	r3, r3, #4
 80143a4:	0019      	movs	r1, r3
 80143a6:	0020      	movs	r0, r4
 80143a8:	f000 f815 	bl	80143d6 <GUI_FormatAndSendNotification>
 80143ac:	e00e      	b.n	80143cc <GUI_RXProcess+0xa8>
    }
    else
    {
      /* Message have been received by PE */
      /* Send a notification to associated port */
      (void)GUI_FormatAndSendNotification(((Event & GUI_PE_PORT_NUM_Msk) >> GUI_PE_PORT_NUM_Pos),
 80143ae:	687b      	ldr	r3, [r7, #4]
 80143b0:	0e1b      	lsrs	r3, r3, #24
 80143b2:	2203      	movs	r2, #3
 80143b4:	4013      	ands	r3, r2
 80143b6:	0018      	movs	r0, r3
 80143b8:	2316      	movs	r3, #22
 80143ba:	18fb      	adds	r3, r7, r3
 80143bc:	881a      	ldrh	r2, [r3, #0]
 80143be:	2380      	movs	r3, #128	; 0x80
 80143c0:	019b      	lsls	r3, r3, #6
 80143c2:	0019      	movs	r1, r3
 80143c4:	f000 f807 	bl	80143d6 <GUI_FormatAndSendNotification>
 80143c8:	e000      	b.n	80143cc <GUI_RXProcess+0xa8>
        break;
 80143ca:	46c0      	nop			; (mov r8, r8)
                                          GUI_NOTIF_PE_EVENT,
                                          type_event);
    }
  }
  return 0;
 80143cc:	2300      	movs	r3, #0
}
 80143ce:	0018      	movs	r0, r3
 80143d0:	46bd      	mov	sp, r7
 80143d2:	b006      	add	sp, #24
 80143d4:	bdb0      	pop	{r4, r5, r7, pc}

080143d6 <GUI_FormatAndSendNotification>:
  * @param  Value             Value depending of TypeNotification
  * @note   If TypeNotification == GUI_NOTIF_ISCONNECTED, Value should be equal to 0 (Not connected) or 1 (connected)
  * @retval USBPD Status
  */
uint32_t GUI_FormatAndSendNotification(uint32_t PortNum, uint32_t TypeNotification, uint32_t Value)
{
 80143d6:	b5b0      	push	{r4, r5, r7, lr}
 80143d8:	b088      	sub	sp, #32
 80143da:	af02      	add	r7, sp, #8
 80143dc:	60f8      	str	r0, [r7, #12]
 80143de:	60b9      	str	r1, [r7, #8]
 80143e0:	607a      	str	r2, [r7, #4]
  uint8_t *msg;
  uint8_t size;
  /* Only send notification if GUI is connected */
  if (GUI_STATE_INIT != GUI_SendNotification((uint8_t)PortNum, &msg, &size, TypeNotification, Value))
 80143e2:	68fb      	ldr	r3, [r7, #12]
 80143e4:	b2d8      	uxtb	r0, r3
 80143e6:	68bc      	ldr	r4, [r7, #8]
 80143e8:	2513      	movs	r5, #19
 80143ea:	197a      	adds	r2, r7, r5
 80143ec:	2314      	movs	r3, #20
 80143ee:	18f9      	adds	r1, r7, r3
 80143f0:	687b      	ldr	r3, [r7, #4]
 80143f2:	9300      	str	r3, [sp, #0]
 80143f4:	0023      	movs	r3, r4
 80143f6:	f000 fa03 	bl	8014800 <GUI_SendNotification>
 80143fa:	1e03      	subs	r3, r0, #0
 80143fc:	d006      	beq.n	801440c <GUI_FormatAndSendNotification+0x36>
  {
    TRACER_EMB_Add(msg, size);
 80143fe:	697a      	ldr	r2, [r7, #20]
 8014400:	197b      	adds	r3, r7, r5
 8014402:	781b      	ldrb	r3, [r3, #0]
 8014404:	0019      	movs	r1, r3
 8014406:	0010      	movs	r0, r2
 8014408:	f002 fdaa 	bl	8016f60 <TRACER_EMB_Add>
  }
  return 0;
 801440c:	2300      	movs	r3, #0
}
 801440e:	0018      	movs	r0, r3
 8014410:	46bd      	mov	sp, r7
 8014412:	b006      	add	sp, #24
 8014414:	bdb0      	pop	{r4, r5, r7, pc}
	...

08014418 <GUI_GetMessage>:
  * @param  Character Received byte
  * @param  Error     Error if issue during reception
  * @retval 1 indicates that a complete GUI message have been received
  */
uint32_t GUI_GetMessage(uint8_t Character, uint8_t Error)
{
 8014418:	b580      	push	{r7, lr}
 801441a:	b084      	sub	sp, #16
 801441c:	af00      	add	r7, sp, #0
 801441e:	0002      	movs	r2, r0
 8014420:	1dfb      	adds	r3, r7, #7
 8014422:	701a      	strb	r2, [r3, #0]
 8014424:	1dbb      	adds	r3, r7, #6
 8014426:	1c0a      	adds	r2, r1, #0
 8014428:	701a      	strb	r2, [r3, #0]
  uint32_t status = 0;
 801442a:	2300      	movs	r3, #0
 801442c:	60fb      	str	r3, [r7, #12]
    Rsize,
    Rend,
    Rerror
  } Rstate = Rstart;

  if (cursor < TLV_SIZE_MAX)
 801442e:	4b76      	ldr	r3, [pc, #472]	; (8014608 <GUI_GetMessage+0x1f0>)
 8014430:	881b      	ldrh	r3, [r3, #0]
 8014432:	2bff      	cmp	r3, #255	; 0xff
 8014434:	d80b      	bhi.n	801444e <GUI_GetMessage+0x36>
  {
    PtrDataRx[cursor] = Character;
 8014436:	4b74      	ldr	r3, [pc, #464]	; (8014608 <GUI_GetMessage+0x1f0>)
 8014438:	881b      	ldrh	r3, [r3, #0]
 801443a:	0019      	movs	r1, r3
 801443c:	4b73      	ldr	r3, [pc, #460]	; (801460c <GUI_GetMessage+0x1f4>)
 801443e:	1dfa      	adds	r2, r7, #7
 8014440:	7812      	ldrb	r2, [r2, #0]
 8014442:	545a      	strb	r2, [r3, r1]
    counter = 0U;
    Rstate = Rstart;
    return 0;
  }

  if (Error != 0U)
 8014444:	1dbb      	adds	r3, r7, #6
 8014446:	781b      	ldrb	r3, [r3, #0]
 8014448:	2b00      	cmp	r3, #0
 801444a:	d00e      	beq.n	801446a <GUI_GetMessage+0x52>
 801444c:	e00a      	b.n	8014464 <GUI_GetMessage+0x4c>
    cursor = 0U;
 801444e:	4b6e      	ldr	r3, [pc, #440]	; (8014608 <GUI_GetMessage+0x1f0>)
 8014450:	2200      	movs	r2, #0
 8014452:	801a      	strh	r2, [r3, #0]
    counter = 0U;
 8014454:	4b6e      	ldr	r3, [pc, #440]	; (8014610 <GUI_GetMessage+0x1f8>)
 8014456:	2200      	movs	r2, #0
 8014458:	801a      	strh	r2, [r3, #0]
    Rstate = Rstart;
 801445a:	4b6e      	ldr	r3, [pc, #440]	; (8014614 <GUI_GetMessage+0x1fc>)
 801445c:	2200      	movs	r2, #0
 801445e:	701a      	strb	r2, [r3, #0]
    return 0;
 8014460:	2300      	movs	r3, #0
 8014462:	e0cc      	b.n	80145fe <GUI_GetMessage+0x1e6>
  {
    Rstate = Rerror;
 8014464:	4b6b      	ldr	r3, [pc, #428]	; (8014614 <GUI_GetMessage+0x1fc>)
 8014466:	2204      	movs	r2, #4
 8014468:	701a      	strb	r2, [r3, #0]
  }

  switch (Rstate)
 801446a:	4b6a      	ldr	r3, [pc, #424]	; (8014614 <GUI_GetMessage+0x1fc>)
 801446c:	781b      	ldrb	r3, [r3, #0]
 801446e:	2b04      	cmp	r3, #4
 8014470:	d900      	bls.n	8014474 <GUI_GetMessage+0x5c>
 8014472:	e0b4      	b.n	80145de <GUI_GetMessage+0x1c6>
 8014474:	009a      	lsls	r2, r3, #2
 8014476:	4b68      	ldr	r3, [pc, #416]	; (8014618 <GUI_GetMessage+0x200>)
 8014478:	18d3      	adds	r3, r2, r3
 801447a:	681b      	ldr	r3, [r3, #0]
 801447c:	469f      	mov	pc, r3
  {
    case Rstart :
      if (PtrDataRx[cursor] == TLV_SOF)
 801447e:	4b62      	ldr	r3, [pc, #392]	; (8014608 <GUI_GetMessage+0x1f0>)
 8014480:	881b      	ldrh	r3, [r3, #0]
 8014482:	001a      	movs	r2, r3
 8014484:	4b61      	ldr	r3, [pc, #388]	; (801460c <GUI_GetMessage+0x1f4>)
 8014486:	5c9b      	ldrb	r3, [r3, r2]
 8014488:	2bfd      	cmp	r3, #253	; 0xfd
 801448a:	d106      	bne.n	801449a <GUI_GetMessage+0x82>
      {
        counter++;
 801448c:	4b60      	ldr	r3, [pc, #384]	; (8014610 <GUI_GetMessage+0x1f8>)
 801448e:	881b      	ldrh	r3, [r3, #0]
 8014490:	3301      	adds	r3, #1
 8014492:	b29a      	uxth	r2, r3
 8014494:	4b5e      	ldr	r3, [pc, #376]	; (8014610 <GUI_GetMessage+0x1f8>)
 8014496:	801a      	strh	r2, [r3, #0]
 8014498:	e006      	b.n	80144a8 <GUI_GetMessage+0x90>
      }
      else
      {
        counter = 0U;
 801449a:	4b5d      	ldr	r3, [pc, #372]	; (8014610 <GUI_GetMessage+0x1f8>)
 801449c:	2200      	movs	r2, #0
 801449e:	801a      	strh	r2, [r3, #0]
        /* cursor is unsigned, but it will inevitably increments at the end of function,
           and we need a 0 at the next pass here */
        cursor = 0xFFFFU;
 80144a0:	4b59      	ldr	r3, [pc, #356]	; (8014608 <GUI_GetMessage+0x1f0>)
 80144a2:	2201      	movs	r2, #1
 80144a4:	4252      	negs	r2, r2
 80144a6:	801a      	strh	r2, [r3, #0]
      }

      if (counter == 4U) /* The whole SOF is received */
 80144a8:	4b59      	ldr	r3, [pc, #356]	; (8014610 <GUI_GetMessage+0x1f8>)
 80144aa:	881b      	ldrh	r3, [r3, #0]
 80144ac:	2b04      	cmp	r3, #4
 80144ae:	d000      	beq.n	80144b2 <GUI_GetMessage+0x9a>
 80144b0:	e097      	b.n	80145e2 <GUI_GetMessage+0x1ca>
      {
        counter = 0U;
 80144b2:	4b57      	ldr	r3, [pc, #348]	; (8014610 <GUI_GetMessage+0x1f8>)
 80144b4:	2200      	movs	r2, #0
 80144b6:	801a      	strh	r2, [r3, #0]
        Rstate = Rsize;
 80144b8:	4b56      	ldr	r3, [pc, #344]	; (8014614 <GUI_GetMessage+0x1fc>)
 80144ba:	2202      	movs	r2, #2
 80144bc:	701a      	strb	r2, [r3, #0]
      }
      break;
 80144be:	e090      	b.n	80145e2 <GUI_GetMessage+0x1ca>
    case Rsize :
      counter++;
 80144c0:	4b53      	ldr	r3, [pc, #332]	; (8014610 <GUI_GetMessage+0x1f8>)
 80144c2:	881b      	ldrh	r3, [r3, #0]
 80144c4:	3301      	adds	r3, #1
 80144c6:	b29a      	uxth	r2, r3
 80144c8:	4b51      	ldr	r3, [pc, #324]	; (8014610 <GUI_GetMessage+0x1f8>)
 80144ca:	801a      	strh	r2, [r3, #0]

      if (counter == 3U) /* We have received the size */
 80144cc:	4b50      	ldr	r3, [pc, #320]	; (8014610 <GUI_GetMessage+0x1f8>)
 80144ce:	881b      	ldrh	r3, [r3, #0]
 80144d0:	2b03      	cmp	r3, #3
 80144d2:	d000      	beq.n	80144d6 <GUI_GetMessage+0xbe>
 80144d4:	e087      	b.n	80145e6 <GUI_GetMessage+0x1ce>
      {
        currentSize = (uint16_t)((PtrDataRx[cursor - 1U]) << 8) + (uint16_t)(PtrDataRx[cursor]);
 80144d6:	4b4c      	ldr	r3, [pc, #304]	; (8014608 <GUI_GetMessage+0x1f0>)
 80144d8:	881b      	ldrh	r3, [r3, #0]
 80144da:	3b01      	subs	r3, #1
 80144dc:	4a4b      	ldr	r2, [pc, #300]	; (801460c <GUI_GetMessage+0x1f4>)
 80144de:	5cd3      	ldrb	r3, [r2, r3]
 80144e0:	b29b      	uxth	r3, r3
 80144e2:	021b      	lsls	r3, r3, #8
 80144e4:	b29a      	uxth	r2, r3
 80144e6:	4b48      	ldr	r3, [pc, #288]	; (8014608 <GUI_GetMessage+0x1f0>)
 80144e8:	881b      	ldrh	r3, [r3, #0]
 80144ea:	0019      	movs	r1, r3
 80144ec:	4b47      	ldr	r3, [pc, #284]	; (801460c <GUI_GetMessage+0x1f4>)
 80144ee:	5c5b      	ldrb	r3, [r3, r1]
 80144f0:	b29b      	uxth	r3, r3
 80144f2:	18d3      	adds	r3, r2, r3
 80144f4:	b29a      	uxth	r2, r3
 80144f6:	4b49      	ldr	r3, [pc, #292]	; (801461c <GUI_GetMessage+0x204>)
 80144f8:	801a      	strh	r2, [r3, #0]
        if (0U == currentSize)
 80144fa:	4b48      	ldr	r3, [pc, #288]	; (801461c <GUI_GetMessage+0x204>)
 80144fc:	881b      	ldrh	r3, [r3, #0]
 80144fe:	2b00      	cmp	r3, #0
 8014500:	d103      	bne.n	801450a <GUI_GetMessage+0xf2>
        {
          Rstate = Rend;
 8014502:	4b44      	ldr	r3, [pc, #272]	; (8014614 <GUI_GetMessage+0x1fc>)
 8014504:	2203      	movs	r2, #3
 8014506:	701a      	strb	r2, [r3, #0]
 8014508:	e002      	b.n	8014510 <GUI_GetMessage+0xf8>
        }
        else
        {
          Rstate = RonGoing;
 801450a:	4b42      	ldr	r3, [pc, #264]	; (8014614 <GUI_GetMessage+0x1fc>)
 801450c:	2201      	movs	r2, #1
 801450e:	701a      	strb	r2, [r3, #0]
        }
        counter = 0U;
 8014510:	4b3f      	ldr	r3, [pc, #252]	; (8014610 <GUI_GetMessage+0x1f8>)
 8014512:	2200      	movs	r2, #0
 8014514:	801a      	strh	r2, [r3, #0]
      }
      break;
 8014516:	e066      	b.n	80145e6 <GUI_GetMessage+0x1ce>
    case RonGoing :
      counter++;
 8014518:	4b3d      	ldr	r3, [pc, #244]	; (8014610 <GUI_GetMessage+0x1f8>)
 801451a:	881b      	ldrh	r3, [r3, #0]
 801451c:	3301      	adds	r3, #1
 801451e:	b29a      	uxth	r2, r3
 8014520:	4b3b      	ldr	r3, [pc, #236]	; (8014610 <GUI_GetMessage+0x1f8>)
 8014522:	801a      	strh	r2, [r3, #0]

      if (counter == currentSize)
 8014524:	4b3a      	ldr	r3, [pc, #232]	; (8014610 <GUI_GetMessage+0x1f8>)
 8014526:	881a      	ldrh	r2, [r3, #0]
 8014528:	4b3c      	ldr	r3, [pc, #240]	; (801461c <GUI_GetMessage+0x204>)
 801452a:	881b      	ldrh	r3, [r3, #0]
 801452c:	429a      	cmp	r2, r3
 801452e:	d15c      	bne.n	80145ea <GUI_GetMessage+0x1d2>
      {
        /* When there is no value, the first EOF is handled by Rongoing, before Rend takes control */
        counter = 0U;
 8014530:	4b37      	ldr	r3, [pc, #220]	; (8014610 <GUI_GetMessage+0x1f8>)
 8014532:	2200      	movs	r2, #0
 8014534:	801a      	strh	r2, [r3, #0]
        Rstate = Rend;
 8014536:	4b37      	ldr	r3, [pc, #220]	; (8014614 <GUI_GetMessage+0x1fc>)
 8014538:	2203      	movs	r2, #3
 801453a:	701a      	strb	r2, [r3, #0]
      }
      break;
 801453c:	e055      	b.n	80145ea <GUI_GetMessage+0x1d2>
    case Rend :
      counter++;
 801453e:	4b34      	ldr	r3, [pc, #208]	; (8014610 <GUI_GetMessage+0x1f8>)
 8014540:	881b      	ldrh	r3, [r3, #0]
 8014542:	3301      	adds	r3, #1
 8014544:	b29a      	uxth	r2, r3
 8014546:	4b32      	ldr	r3, [pc, #200]	; (8014610 <GUI_GetMessage+0x1f8>)
 8014548:	801a      	strh	r2, [r3, #0]
      if ((PtrDataRx[cursor] == TLV_EOF)
 801454a:	4b2f      	ldr	r3, [pc, #188]	; (8014608 <GUI_GetMessage+0x1f0>)
 801454c:	881b      	ldrh	r3, [r3, #0]
 801454e:	001a      	movs	r2, r3
 8014550:	4b2e      	ldr	r3, [pc, #184]	; (801460c <GUI_GetMessage+0x1f4>)
 8014552:	5c9b      	ldrb	r3, [r3, r2]
 8014554:	2ba5      	cmp	r3, #165	; 0xa5
 8014556:	d124      	bne.n	80145a2 <GUI_GetMessage+0x18a>
          && (PtrDataRx[cursor - 1U] == TLV_EOF)
 8014558:	4b2b      	ldr	r3, [pc, #172]	; (8014608 <GUI_GetMessage+0x1f0>)
 801455a:	881b      	ldrh	r3, [r3, #0]
 801455c:	3b01      	subs	r3, #1
 801455e:	4a2b      	ldr	r2, [pc, #172]	; (801460c <GUI_GetMessage+0x1f4>)
 8014560:	5cd3      	ldrb	r3, [r2, r3]
 8014562:	2ba5      	cmp	r3, #165	; 0xa5
 8014564:	d11d      	bne.n	80145a2 <GUI_GetMessage+0x18a>
          && (PtrDataRx[cursor - 2U] == TLV_EOF)
 8014566:	4b28      	ldr	r3, [pc, #160]	; (8014608 <GUI_GetMessage+0x1f0>)
 8014568:	881b      	ldrh	r3, [r3, #0]
 801456a:	3b02      	subs	r3, #2
 801456c:	4a27      	ldr	r2, [pc, #156]	; (801460c <GUI_GetMessage+0x1f4>)
 801456e:	5cd3      	ldrb	r3, [r2, r3]
 8014570:	2ba5      	cmp	r3, #165	; 0xa5
 8014572:	d116      	bne.n	80145a2 <GUI_GetMessage+0x18a>
          && (PtrDataRx[cursor - 3U] == TLV_EOF))
 8014574:	4b24      	ldr	r3, [pc, #144]	; (8014608 <GUI_GetMessage+0x1f0>)
 8014576:	881b      	ldrh	r3, [r3, #0]
 8014578:	3b03      	subs	r3, #3
 801457a:	4a24      	ldr	r2, [pc, #144]	; (801460c <GUI_GetMessage+0x1f4>)
 801457c:	5cd3      	ldrb	r3, [r2, r3]
 801457e:	2ba5      	cmp	r3, #165	; 0xa5
 8014580:	d10f      	bne.n	80145a2 <GUI_GetMessage+0x18a>
      {
        /* The semaphore must be given only in this case, because otherwise
           it means we didn't receive the correct size of bytes */
        if (counter == 4U)
 8014582:	4b23      	ldr	r3, [pc, #140]	; (8014610 <GUI_GetMessage+0x1f8>)
 8014584:	881b      	ldrh	r3, [r3, #0]
 8014586:	2b04      	cmp	r3, #4
 8014588:	d101      	bne.n	801458e <GUI_GetMessage+0x176>
        {
          status = 1U;
 801458a:	2301      	movs	r3, #1
 801458c:	60fb      	str	r3, [r7, #12]
        }
        counter = 0U;
 801458e:	4b20      	ldr	r3, [pc, #128]	; (8014610 <GUI_GetMessage+0x1f8>)
 8014590:	2200      	movs	r2, #0
 8014592:	801a      	strh	r2, [r3, #0]
        cursor = 0xFFFFU;
 8014594:	4b1c      	ldr	r3, [pc, #112]	; (8014608 <GUI_GetMessage+0x1f0>)
 8014596:	2201      	movs	r2, #1
 8014598:	4252      	negs	r2, r2
 801459a:	801a      	strh	r2, [r3, #0]
        Rstate = Rstart;
 801459c:	4b1d      	ldr	r3, [pc, #116]	; (8014614 <GUI_GetMessage+0x1fc>)
 801459e:	2200      	movs	r2, #0
 80145a0:	701a      	strb	r2, [r3, #0]
      }

      if (cursor == (currentSize + 11U))
 80145a2:	4b19      	ldr	r3, [pc, #100]	; (8014608 <GUI_GetMessage+0x1f0>)
 80145a4:	881b      	ldrh	r3, [r3, #0]
 80145a6:	001a      	movs	r2, r3
 80145a8:	4b1c      	ldr	r3, [pc, #112]	; (801461c <GUI_GetMessage+0x204>)
 80145aa:	881b      	ldrh	r3, [r3, #0]
 80145ac:	330b      	adds	r3, #11
 80145ae:	429a      	cmp	r2, r3
 80145b0:	d11d      	bne.n	80145ee <GUI_GetMessage+0x1d6>
      {
        /* No complete EOF arrived. We reset the buffer for safety even if the instruction might be complete. */
        counter = 0U;
 80145b2:	4b17      	ldr	r3, [pc, #92]	; (8014610 <GUI_GetMessage+0x1f8>)
 80145b4:	2200      	movs	r2, #0
 80145b6:	801a      	strh	r2, [r3, #0]
        cursor = 0xFFFFU;
 80145b8:	4b13      	ldr	r3, [pc, #76]	; (8014608 <GUI_GetMessage+0x1f0>)
 80145ba:	2201      	movs	r2, #1
 80145bc:	4252      	negs	r2, r2
 80145be:	801a      	strh	r2, [r3, #0]
        Rstate = Rstart;
 80145c0:	4b14      	ldr	r3, [pc, #80]	; (8014614 <GUI_GetMessage+0x1fc>)
 80145c2:	2200      	movs	r2, #0
 80145c4:	701a      	strb	r2, [r3, #0]
      }
      break;
 80145c6:	e012      	b.n	80145ee <GUI_GetMessage+0x1d6>
    case Rerror :
      counter = 0U;
 80145c8:	4b11      	ldr	r3, [pc, #68]	; (8014610 <GUI_GetMessage+0x1f8>)
 80145ca:	2200      	movs	r2, #0
 80145cc:	801a      	strh	r2, [r3, #0]
      cursor = 0xFFFFU;
 80145ce:	4b0e      	ldr	r3, [pc, #56]	; (8014608 <GUI_GetMessage+0x1f0>)
 80145d0:	2201      	movs	r2, #1
 80145d2:	4252      	negs	r2, r2
 80145d4:	801a      	strh	r2, [r3, #0]
      Rstate = Rstart;
 80145d6:	4b0f      	ldr	r3, [pc, #60]	; (8014614 <GUI_GetMessage+0x1fc>)
 80145d8:	2200      	movs	r2, #0
 80145da:	701a      	strb	r2, [r3, #0]
      break;
 80145dc:	e008      	b.n	80145f0 <GUI_GetMessage+0x1d8>
    default:
      break;
 80145de:	46c0      	nop			; (mov r8, r8)
 80145e0:	e006      	b.n	80145f0 <GUI_GetMessage+0x1d8>
      break;
 80145e2:	46c0      	nop			; (mov r8, r8)
 80145e4:	e004      	b.n	80145f0 <GUI_GetMessage+0x1d8>
      break;
 80145e6:	46c0      	nop			; (mov r8, r8)
 80145e8:	e002      	b.n	80145f0 <GUI_GetMessage+0x1d8>
      break;
 80145ea:	46c0      	nop			; (mov r8, r8)
 80145ec:	e000      	b.n	80145f0 <GUI_GetMessage+0x1d8>
      break;
 80145ee:	46c0      	nop			; (mov r8, r8)
  }

  cursor++;
 80145f0:	4b05      	ldr	r3, [pc, #20]	; (8014608 <GUI_GetMessage+0x1f0>)
 80145f2:	881b      	ldrh	r3, [r3, #0]
 80145f4:	3301      	adds	r3, #1
 80145f6:	b29a      	uxth	r2, r3
 80145f8:	4b03      	ldr	r3, [pc, #12]	; (8014608 <GUI_GetMessage+0x1f0>)
 80145fa:	801a      	strh	r2, [r3, #0]
  return status;
 80145fc:	68fb      	ldr	r3, [r7, #12]
}
 80145fe:	0018      	movs	r0, r3
 8014600:	46bd      	mov	sp, r7
 8014602:	b004      	add	sp, #16
 8014604:	bd80      	pop	{r7, pc}
 8014606:	46c0      	nop			; (mov r8, r8)
 8014608:	20002f4e 	.word	0x20002f4e
 801460c:	20002cbc 	.word	0x20002cbc
 8014610:	20002f50 	.word	0x20002f50
 8014614:	20002f52 	.word	0x20002f52
 8014618:	08019a78 	.word	0x08019a78
 801461c:	20002f54 	.word	0x20002f54

08014620 <GUI_SendAnswer>:
  * @param  pMsgToSend Pointer on the message to send
  * @param  pSizeMsg   Pointer on the size of the message to send
  * @retval GUI state
  */
USBPD_GUI_State GUI_SendAnswer(uint8_t **pMsgToSend, uint8_t *pSizeMsg)
{
 8014620:	b590      	push	{r4, r7, lr}
 8014622:	b085      	sub	sp, #20
 8014624:	af00      	add	r7, sp, #0
 8014626:	6078      	str	r0, [r7, #4]
 8014628:	6039      	str	r1, [r7, #0]
  /* Extract the port from the tag*/
  uint8_t port = PtrDataRx[TLV_TAG_POSITION] >> GUI_PORT_BIT_POSITION;
 801462a:	4b70      	ldr	r3, [pc, #448]	; (80147ec <GUI_SendAnswer+0x1cc>)
 801462c:	791a      	ldrb	r2, [r3, #4]
 801462e:	230f      	movs	r3, #15
 8014630:	18fb      	adds	r3, r7, r3
 8014632:	0952      	lsrs	r2, r2, #5
 8014634:	701a      	strb	r2, [r3, #0]

  /* Do the appropriate treatment in response to what we have received */
  switch (PtrDataRx[TLV_TAG_POSITION] & 0x1FU)
 8014636:	4b6d      	ldr	r3, [pc, #436]	; (80147ec <GUI_SendAnswer+0x1cc>)
 8014638:	791b      	ldrb	r3, [r3, #4]
 801463a:	001a      	movs	r2, r3
 801463c:	231f      	movs	r3, #31
 801463e:	4013      	ands	r3, r2
 8014640:	2b10      	cmp	r3, #16
 8014642:	d900      	bls.n	8014646 <GUI_SendAnswer+0x26>
 8014644:	e0be      	b.n	80147c4 <GUI_SendAnswer+0x1a4>
 8014646:	009a      	lsls	r2, r3, #2
 8014648:	4b69      	ldr	r3, [pc, #420]	; (80147f0 <GUI_SendAnswer+0x1d0>)
 801464a:	18d3      	adds	r3, r2, r3
 801464c:	681b      	ldr	r3, [r3, #0]
 801464e:	469f      	mov	pc, r3
  {
    case DPM_RESET_REQ:
      /* Reset*/
      return GUI_STATE_RESET;
 8014650:	2302      	movs	r3, #2
 8014652:	e0c7      	b.n	80147e4 <GUI_SendAnswer+0x1c4>

    case DPM_INIT_REQ:
    {
      Send_DpmInitCnf(port, Processed);
 8014654:	4a67      	ldr	r2, [pc, #412]	; (80147f4 <GUI_SendAnswer+0x1d4>)
 8014656:	240f      	movs	r4, #15
 8014658:	193b      	adds	r3, r7, r4
 801465a:	781b      	ldrb	r3, [r3, #0]
 801465c:	0011      	movs	r1, r2
 801465e:	0018      	movs	r0, r3
 8014660:	f000 fe2c 	bl	80152bc <Send_DpmInitCnf>
      *pMsgToSend = Processed;
 8014664:	687b      	ldr	r3, [r7, #4]
 8014666:	4a63      	ldr	r2, [pc, #396]	; (80147f4 <GUI_SendAnswer+0x1d4>)
 8014668:	601a      	str	r2, [r3, #0]
      *pSizeMsg = (uint8_t)(TLV_get_string_length(Processed) + 8U);
 801466a:	4b62      	ldr	r3, [pc, #392]	; (80147f4 <GUI_SendAnswer+0x1d4>)
 801466c:	0018      	movs	r0, r3
 801466e:	f7ff fc07 	bl	8013e80 <TLV_get_string_length>
 8014672:	0003      	movs	r3, r0
 8014674:	b2db      	uxtb	r3, r3
 8014676:	3308      	adds	r3, #8
 8014678:	b2da      	uxtb	r2, r3
 801467a:	683b      	ldr	r3, [r7, #0]
 801467c:	701a      	strb	r2, [r3, #0]
      TRACER_EMB_Add(*pMsgToSend, *pSizeMsg);
 801467e:	687b      	ldr	r3, [r7, #4]
 8014680:	681a      	ldr	r2, [r3, #0]
 8014682:	683b      	ldr	r3, [r7, #0]
 8014684:	781b      	ldrb	r3, [r3, #0]
 8014686:	0019      	movs	r1, r3
 8014688:	0010      	movs	r0, r2
 801468a:	f002 fc69 	bl	8016f60 <TRACER_EMB_Add>
      GUI_State = GUI_STATE_RUNNING;
 801468e:	4b5a      	ldr	r3, [pc, #360]	; (80147f8 <GUI_SendAnswer+0x1d8>)
 8014690:	2201      	movs	r2, #1
 8014692:	701a      	strb	r2, [r3, #0]
      if (0U == port)
 8014694:	193b      	adds	r3, r7, r4
 8014696:	781b      	ldrb	r3, [r3, #0]
 8014698:	2b00      	cmp	r3, #0
 801469a:	d105      	bne.n	80146a8 <GUI_SendAnswer+0x88>
      {
        /* Send a notification all the port */
        (void)GUI_FormatAndSendNotification(USBPD_PORT_0,
 801469c:	4b57      	ldr	r3, [pc, #348]	; (80147fc <GUI_SendAnswer+0x1dc>)
 801469e:	2270      	movs	r2, #112	; 0x70
 80146a0:	0019      	movs	r1, r3
 80146a2:	2000      	movs	r0, #0
 80146a4:	f7ff fe97 	bl	80143d6 <GUI_FormatAndSendNotification>
        (void)GUI_FormatAndSendNotification(USBPD_PORT_1,
                                            GUI_NOTIF_ISCONNECTED | GUI_NOTIF_PE_EVENT | GUI_NOTIF_TIMESTAMP,
                                            USBPD_NOTIFY_ALL);
#endif /* USBPD_PORT_COUNT == 2 */
      }
      return GUI_STATE_INIT;
 80146a8:	2300      	movs	r3, #0
 80146aa:	e09b      	b.n	80147e4 <GUI_SendAnswer+0x1c4>
    }

    case DPM_CONFIG_GET_REQ:
      if (0U != port)
 80146ac:	220f      	movs	r2, #15
 80146ae:	18bb      	adds	r3, r7, r2
 80146b0:	781b      	ldrb	r3, [r3, #0]
 80146b2:	2b00      	cmp	r3, #0
 80146b4:	d009      	beq.n	80146ca <GUI_SendAnswer+0xaa>
      {
        Send_DpmConfigGetCnf((port - 1U), PtrDataRx, Processed);
 80146b6:	18bb      	adds	r3, r7, r2
 80146b8:	781b      	ldrb	r3, [r3, #0]
 80146ba:	3b01      	subs	r3, #1
 80146bc:	b2db      	uxtb	r3, r3
 80146be:	4a4d      	ldr	r2, [pc, #308]	; (80147f4 <GUI_SendAnswer+0x1d4>)
 80146c0:	494a      	ldr	r1, [pc, #296]	; (80147ec <GUI_SendAnswer+0x1cc>)
 80146c2:	0018      	movs	r0, r3
 80146c4:	f001 ff28 	bl	8016518 <Send_DpmConfigGetCnf>
      }
      else
      {
        Send_DpmConfigGetRej(port, Processed, GUI_REJ_DPM_INVALID_PORT_NUMBER);
      }
      break;
 80146c8:	e07d      	b.n	80147c6 <GUI_SendAnswer+0x1a6>
        Send_DpmConfigGetRej(port, Processed, GUI_REJ_DPM_INVALID_PORT_NUMBER);
 80146ca:	494a      	ldr	r1, [pc, #296]	; (80147f4 <GUI_SendAnswer+0x1d4>)
 80146cc:	230f      	movs	r3, #15
 80146ce:	18fb      	adds	r3, r7, r3
 80146d0:	781b      	ldrb	r3, [r3, #0]
 80146d2:	2205      	movs	r2, #5
 80146d4:	0018      	movs	r0, r3
 80146d6:	f002 f9ff 	bl	8016ad8 <Send_DpmConfigGetRej>
      break;
 80146da:	e074      	b.n	80147c6 <GUI_SendAnswer+0x1a6>
    case DPM_CONFIG_SET_REQ:
      if (0U != port)
 80146dc:	220f      	movs	r2, #15
 80146de:	18bb      	adds	r3, r7, r2
 80146e0:	781b      	ldrb	r3, [r3, #0]
 80146e2:	2b00      	cmp	r3, #0
 80146e4:	d009      	beq.n	80146fa <GUI_SendAnswer+0xda>
      {
        Send_DpmConfigSetCnf((port - 1U), PtrDataRx, Processed);
 80146e6:	18bb      	adds	r3, r7, r2
 80146e8:	781b      	ldrb	r3, [r3, #0]
 80146ea:	3b01      	subs	r3, #1
 80146ec:	b2db      	uxtb	r3, r3
 80146ee:	4a41      	ldr	r2, [pc, #260]	; (80147f4 <GUI_SendAnswer+0x1d4>)
 80146f0:	493e      	ldr	r1, [pc, #248]	; (80147ec <GUI_SendAnswer+0x1cc>)
 80146f2:	0018      	movs	r0, r3
 80146f4:	f001 fad0 	bl	8015c98 <Send_DpmConfigSetCnf>
      }
      else
      {
        Send_DpmConfigGetRej(port, Processed, GUI_REJ_DPM_INVALID_PORT_NUMBER);
      }
      break;
 80146f8:	e065      	b.n	80147c6 <GUI_SendAnswer+0x1a6>
        Send_DpmConfigGetRej(port, Processed, GUI_REJ_DPM_INVALID_PORT_NUMBER);
 80146fa:	493e      	ldr	r1, [pc, #248]	; (80147f4 <GUI_SendAnswer+0x1d4>)
 80146fc:	230f      	movs	r3, #15
 80146fe:	18fb      	adds	r3, r7, r3
 8014700:	781b      	ldrb	r3, [r3, #0]
 8014702:	2205      	movs	r2, #5
 8014704:	0018      	movs	r0, r3
 8014706:	f002 f9e7 	bl	8016ad8 <Send_DpmConfigGetRej>
      break;
 801470a:	e05c      	b.n	80147c6 <GUI_SendAnswer+0x1a6>
    case DPM_MESSAGE_REQ:
      if (0U != port)
 801470c:	220f      	movs	r2, #15
 801470e:	18bb      	adds	r3, r7, r2
 8014710:	781b      	ldrb	r3, [r3, #0]
 8014712:	2b00      	cmp	r3, #0
 8014714:	d009      	beq.n	801472a <GUI_SendAnswer+0x10a>
      {
        Request_MessageReq((port - 1U), PtrDataRx, Processed);
 8014716:	18bb      	adds	r3, r7, r2
 8014718:	781b      	ldrb	r3, [r3, #0]
 801471a:	3b01      	subs	r3, #1
 801471c:	b2db      	uxtb	r3, r3
 801471e:	4a35      	ldr	r2, [pc, #212]	; (80147f4 <GUI_SendAnswer+0x1d4>)
 8014720:	4932      	ldr	r1, [pc, #200]	; (80147ec <GUI_SendAnswer+0x1cc>)
 8014722:	0018      	movs	r0, r3
 8014724:	f000 ff78 	bl	8015618 <Request_MessageReq>
      }
      else
      {
        Send_DpmMessageRej(port, Processed, GUI_REJ_DPM_INVALID_PORT_NUMBER);
      }
      break;
 8014728:	e04d      	b.n	80147c6 <GUI_SendAnswer+0x1a6>
        Send_DpmMessageRej(port, Processed, GUI_REJ_DPM_INVALID_PORT_NUMBER);
 801472a:	4932      	ldr	r1, [pc, #200]	; (80147f4 <GUI_SendAnswer+0x1d4>)
 801472c:	230f      	movs	r3, #15
 801472e:	18fb      	adds	r3, r7, r3
 8014730:	781b      	ldrb	r3, [r3, #0]
 8014732:	2205      	movs	r2, #5
 8014734:	0018      	movs	r0, r3
 8014736:	f002 f9f1 	bl	8016b1c <Send_DpmMessageRej>
      break;
 801473a:	e044      	b.n	80147c6 <GUI_SendAnswer+0x1a6>
    case DPM_REGISTER_READ_REQ:
      if (0U != port)
 801473c:	220f      	movs	r2, #15
 801473e:	18bb      	adds	r3, r7, r2
 8014740:	781b      	ldrb	r3, [r3, #0]
 8014742:	2b00      	cmp	r3, #0
 8014744:	d01d      	beq.n	8014782 <GUI_SendAnswer+0x162>
      {
        /* If size is 0*/
        if ((PtrDataRx[TLV_LENGTH_HIGH_POSITION] == 0U) && (PtrDataRx[TLV_LENGTH_LOW_POSITION] == 0U))
 8014746:	4b29      	ldr	r3, [pc, #164]	; (80147ec <GUI_SendAnswer+0x1cc>)
 8014748:	795b      	ldrb	r3, [r3, #5]
 801474a:	2b00      	cmp	r3, #0
 801474c:	d10d      	bne.n	801476a <GUI_SendAnswer+0x14a>
 801474e:	4b27      	ldr	r3, [pc, #156]	; (80147ec <GUI_SendAnswer+0x1cc>)
 8014750:	799b      	ldrb	r3, [r3, #6]
 8014752:	2b00      	cmp	r3, #0
 8014754:	d109      	bne.n	801476a <GUI_SendAnswer+0x14a>
        {
          Send_DpmRegisterReadCnf((port - 1U), Processed, 0xFF);
 8014756:	18bb      	adds	r3, r7, r2
 8014758:	781b      	ldrb	r3, [r3, #0]
 801475a:	3b01      	subs	r3, #1
 801475c:	b2db      	uxtb	r3, r3
 801475e:	4925      	ldr	r1, [pc, #148]	; (80147f4 <GUI_SendAnswer+0x1d4>)
 8014760:	22ff      	movs	r2, #255	; 0xff
 8014762:	0018      	movs	r0, r3
 8014764:	f002 f9fc 	bl	8016b60 <Send_DpmRegisterReadCnf>
      }
      else
      {
        Send_DpmConfigGetRej(port, Processed, GUI_REJ_DPM_INVALID_PORT_NUMBER);
      }
      break;
 8014768:	e02d      	b.n	80147c6 <GUI_SendAnswer+0x1a6>
          Send_DpmRegisterReadCnf((port - 1U), Processed, PtrDataRx[TLV_VALUE_POSITION]);
 801476a:	230f      	movs	r3, #15
 801476c:	18fb      	adds	r3, r7, r3
 801476e:	781b      	ldrb	r3, [r3, #0]
 8014770:	3b01      	subs	r3, #1
 8014772:	b2d8      	uxtb	r0, r3
 8014774:	4b1d      	ldr	r3, [pc, #116]	; (80147ec <GUI_SendAnswer+0x1cc>)
 8014776:	79da      	ldrb	r2, [r3, #7]
 8014778:	4b1e      	ldr	r3, [pc, #120]	; (80147f4 <GUI_SendAnswer+0x1d4>)
 801477a:	0019      	movs	r1, r3
 801477c:	f002 f9f0 	bl	8016b60 <Send_DpmRegisterReadCnf>
      break;
 8014780:	e021      	b.n	80147c6 <GUI_SendAnswer+0x1a6>
        Send_DpmConfigGetRej(port, Processed, GUI_REJ_DPM_INVALID_PORT_NUMBER);
 8014782:	491c      	ldr	r1, [pc, #112]	; (80147f4 <GUI_SendAnswer+0x1d4>)
 8014784:	230f      	movs	r3, #15
 8014786:	18fb      	adds	r3, r7, r3
 8014788:	781b      	ldrb	r3, [r3, #0]
 801478a:	2205      	movs	r2, #5
 801478c:	0018      	movs	r0, r3
 801478e:	f002 f9a3 	bl	8016ad8 <Send_DpmConfigGetRej>
      break;
 8014792:	e018      	b.n	80147c6 <GUI_SendAnswer+0x1a6>
    case DPM_REGISTER_WRITE_REQ:
      if (0U != port)
 8014794:	220f      	movs	r2, #15
 8014796:	18bb      	adds	r3, r7, r2
 8014798:	781b      	ldrb	r3, [r3, #0]
 801479a:	2b00      	cmp	r3, #0
 801479c:	d009      	beq.n	80147b2 <GUI_SendAnswer+0x192>
      {
        Send_DpmRegisterWriteCnf((port - 1U), Processed, PtrDataRx);
 801479e:	18bb      	adds	r3, r7, r2
 80147a0:	781b      	ldrb	r3, [r3, #0]
 80147a2:	3b01      	subs	r3, #1
 80147a4:	b2db      	uxtb	r3, r3
 80147a6:	4a11      	ldr	r2, [pc, #68]	; (80147ec <GUI_SendAnswer+0x1cc>)
 80147a8:	4912      	ldr	r1, [pc, #72]	; (80147f4 <GUI_SendAnswer+0x1d4>)
 80147aa:	0018      	movs	r0, r3
 80147ac:	f002 fa36 	bl	8016c1c <Send_DpmRegisterWriteCnf>
      }
      else
      {
        Send_DpmConfigGetRej(port, Processed, GUI_REJ_DPM_INVALID_PORT_NUMBER);
      }
      break;
 80147b0:	e009      	b.n	80147c6 <GUI_SendAnswer+0x1a6>
        Send_DpmConfigGetRej(port, Processed, GUI_REJ_DPM_INVALID_PORT_NUMBER);
 80147b2:	4910      	ldr	r1, [pc, #64]	; (80147f4 <GUI_SendAnswer+0x1d4>)
 80147b4:	230f      	movs	r3, #15
 80147b6:	18fb      	adds	r3, r7, r3
 80147b8:	781b      	ldrb	r3, [r3, #0]
 80147ba:	2205      	movs	r2, #5
 80147bc:	0018      	movs	r0, r3
 80147be:	f002 f98b 	bl	8016ad8 <Send_DpmConfigGetRej>
      break;
 80147c2:	e000      	b.n	80147c6 <GUI_SendAnswer+0x1a6>
    default :
      break;
 80147c4:	46c0      	nop			; (mov r8, r8)
  }

  *pMsgToSend = Processed;
 80147c6:	687b      	ldr	r3, [r7, #4]
 80147c8:	4a0a      	ldr	r2, [pc, #40]	; (80147f4 <GUI_SendAnswer+0x1d4>)
 80147ca:	601a      	str	r2, [r3, #0]
  *pSizeMsg = (uint8_t)(TLV_get_string_length(Processed) + 8U);
 80147cc:	4b09      	ldr	r3, [pc, #36]	; (80147f4 <GUI_SendAnswer+0x1d4>)
 80147ce:	0018      	movs	r0, r3
 80147d0:	f7ff fb56 	bl	8013e80 <TLV_get_string_length>
 80147d4:	0003      	movs	r3, r0
 80147d6:	b2db      	uxtb	r3, r3
 80147d8:	3308      	adds	r3, #8
 80147da:	b2da      	uxtb	r2, r3
 80147dc:	683b      	ldr	r3, [r7, #0]
 80147de:	701a      	strb	r2, [r3, #0]
  return GUI_State;
 80147e0:	4b05      	ldr	r3, [pc, #20]	; (80147f8 <GUI_SendAnswer+0x1d8>)
 80147e2:	781b      	ldrb	r3, [r3, #0]
}
 80147e4:	0018      	movs	r0, r3
 80147e6:	46bd      	mov	sp, r7
 80147e8:	b005      	add	sp, #20
 80147ea:	bd90      	pop	{r4, r7, pc}
 80147ec:	20002cbc 	.word	0x20002cbc
 80147f0:	08019a8c 	.word	0x08019a8c
 80147f4:	20002dbc 	.word	0x20002dbc
 80147f8:	20002ebc 	.word	0x20002ebc
 80147fc:	00006020 	.word	0x00006020

08014800 <GUI_SendNotification>:
  * @param  Value             Value of the notification
  * @retval GUI state
  */
USBPD_GUI_State GUI_SendNotification(uint8_t PortNum, uint8_t **pMsgToSend, uint8_t *pSizeMsg,
                                     uint32_t TypeNotification, uint32_t Value)
{
 8014800:	b5b0      	push	{r4, r5, r7, lr}
 8014802:	b0a6      	sub	sp, #152	; 0x98
 8014804:	af00      	add	r7, sp, #0
 8014806:	60b9      	str	r1, [r7, #8]
 8014808:	607a      	str	r2, [r7, #4]
 801480a:	603b      	str	r3, [r7, #0]
 801480c:	240f      	movs	r4, #15
 801480e:	193b      	adds	r3, r7, r4
 8014810:	1c02      	adds	r2, r0, #0
 8014812:	701a      	strb	r2, [r3, #0]
  TLV_ToSend_Data_t send_tlv;
  USBPD_GUI_State gui_state = GUI_STATE_INIT;
 8014814:	2397      	movs	r3, #151	; 0x97
 8014816:	18fb      	adds	r3, r7, r3
 8014818:	2200      	movs	r2, #0
 801481a:	701a      	strb	r2, [r3, #0]

  /* Send a notitification only if GUI is running */
  if (GUI_State == GUI_STATE_RUNNING)
 801481c:	4bbf      	ldr	r3, [pc, #764]	; (8014b1c <GUI_SendNotification+0x31c>)
 801481e:	781b      	ldrb	r3, [r3, #0]
 8014820:	2b01      	cmp	r3, #1
 8014822:	d001      	beq.n	8014828 <GUI_SendNotification+0x28>
 8014824:	f000 fbe4 	bl	8014ff0 <GUI_SendNotification+0x7f0>
  {
    (void)TLV_init_encode(&send_tlv, __GUI_SET_TAG_ID((PortNum + 1U), DPM_MESSAGE_IND), TLV_SIZE_MAX, Processed);
 8014828:	193b      	adds	r3, r7, r4
 801482a:	781b      	ldrb	r3, [r3, #0]
 801482c:	3301      	adds	r3, #1
 801482e:	b2db      	uxtb	r3, r3
 8014830:	015b      	lsls	r3, r3, #5
 8014832:	b2db      	uxtb	r3, r3
 8014834:	220c      	movs	r2, #12
 8014836:	4313      	orrs	r3, r2
 8014838:	b2d9      	uxtb	r1, r3
 801483a:	4bb9      	ldr	r3, [pc, #740]	; (8014b20 <GUI_SendNotification+0x320>)
 801483c:	2280      	movs	r2, #128	; 0x80
 801483e:	0052      	lsls	r2, r2, #1
 8014840:	2584      	movs	r5, #132	; 0x84
 8014842:	1978      	adds	r0, r7, r5
 8014844:	f7ff f8b1 	bl	80139aa <TLV_init_encode>

    /* Check PD connection */
    if ((TypeNotification & GUI_NOTIF_ISCONNECTED) == GUI_NOTIF_ISCONNECTED)
 8014848:	683b      	ldr	r3, [r7, #0]
 801484a:	2220      	movs	r2, #32
 801484c:	4013      	ands	r3, r2
 801484e:	d100      	bne.n	8014852 <GUI_SendNotification+0x52>
 8014850:	e08d      	b.n	801496e <GUI_SendNotification+0x16e>
    {
      /* Is Connected*/
      (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_ISCONNECTED, 1,
                    (uint8_t[]){ DPM_Params[PortNum].PE_Power });
 8014852:	193b      	adds	r3, r7, r4
 8014854:	781b      	ldrb	r3, [r3, #0]
 8014856:	4ab3      	ldr	r2, [pc, #716]	; (8014b24 <GUI_SendNotification+0x324>)
 8014858:	009b      	lsls	r3, r3, #2
 801485a:	18d3      	adds	r3, r2, r3
 801485c:	785b      	ldrb	r3, [r3, #1]
 801485e:	075b      	lsls	r3, r3, #29
 8014860:	0f5b      	lsrs	r3, r3, #29
 8014862:	b2db      	uxtb	r3, r3
 8014864:	001a      	movs	r2, r3
 8014866:	2180      	movs	r1, #128	; 0x80
 8014868:	187b      	adds	r3, r7, r1
 801486a:	701a      	strb	r2, [r3, #0]
      (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_ISCONNECTED, 1,
 801486c:	187b      	adds	r3, r7, r1
 801486e:	1978      	adds	r0, r7, r5
 8014870:	2201      	movs	r2, #1
 8014872:	2105      	movs	r1, #5
 8014874:	f7ff f8fc 	bl	8013a70 <TLV_add>
      if (USBPD_TRUE == DPM_Params[PortNum].PE_IsConnected)
 8014878:	193b      	adds	r3, r7, r4
 801487a:	781b      	ldrb	r3, [r3, #0]
 801487c:	4aa9      	ldr	r2, [pc, #676]	; (8014b24 <GUI_SendNotification+0x324>)
 801487e:	009b      	lsls	r3, r3, #2
 8014880:	18d3      	adds	r3, r2, r3
 8014882:	785b      	ldrb	r3, [r3, #1]
 8014884:	06db      	lsls	r3, r3, #27
 8014886:	0fdb      	lsrs	r3, r3, #31
 8014888:	b2db      	uxtb	r3, r3
 801488a:	2b01      	cmp	r3, #1
 801488c:	d16f      	bne.n	801496e <GUI_SendNotification+0x16e>
      {
        uint8_t rp_value;
        /* CC line */
        (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_CC, 1,
                      (uint8_t[]) { DPM_Params[PortNum].ActiveCCIs });
 801488e:	193b      	adds	r3, r7, r4
 8014890:	781a      	ldrb	r2, [r3, #0]
 8014892:	4ba4      	ldr	r3, [pc, #656]	; (8014b24 <GUI_SendNotification+0x324>)
 8014894:	0092      	lsls	r2, r2, #2
 8014896:	5cd3      	ldrb	r3, [r2, r3]
 8014898:	061b      	lsls	r3, r3, #24
 801489a:	0f9b      	lsrs	r3, r3, #30
 801489c:	b2db      	uxtb	r3, r3
 801489e:	001a      	movs	r2, r3
 80148a0:	217c      	movs	r1, #124	; 0x7c
 80148a2:	187b      	adds	r3, r7, r1
 80148a4:	701a      	strb	r2, [r3, #0]
        (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_CC, 1,
 80148a6:	187b      	adds	r3, r7, r1
 80148a8:	1978      	adds	r0, r7, r5
 80148aa:	2201      	movs	r2, #1
 80148ac:	2106      	movs	r1, #6
 80148ae:	f7ff f8df 	bl	8013a70 <TLV_add>
        /* Power Role*/
        (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_POWERROLE, 1,
                      (uint8_t[]) { DPM_Params[PortNum].PE_PowerRole });
 80148b2:	193b      	adds	r3, r7, r4
 80148b4:	781a      	ldrb	r2, [r3, #0]
 80148b6:	4b9b      	ldr	r3, [pc, #620]	; (8014b24 <GUI_SendNotification+0x324>)
 80148b8:	0092      	lsls	r2, r2, #2
 80148ba:	5cd3      	ldrb	r3, [r2, r3]
 80148bc:	075b      	lsls	r3, r3, #29
 80148be:	0fdb      	lsrs	r3, r3, #31
 80148c0:	b2db      	uxtb	r3, r3
 80148c2:	001a      	movs	r2, r3
 80148c4:	2178      	movs	r1, #120	; 0x78
 80148c6:	187b      	adds	r3, r7, r1
 80148c8:	701a      	strb	r2, [r3, #0]
        (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_POWERROLE, 1,
 80148ca:	187b      	adds	r3, r7, r1
 80148cc:	1978      	adds	r0, r7, r5
 80148ce:	2201      	movs	r2, #1
 80148d0:	2108      	movs	r1, #8
 80148d2:	f7ff f8cd 	bl	8013a70 <TLV_add>
        /* CC Default Current Advertised */
        rp_value = 3; /* (uint8_t)CAD_GetRPValue(PortNum); */
 80148d6:	217f      	movs	r1, #127	; 0x7f
 80148d8:	187b      	adds	r3, r7, r1
 80148da:	2203      	movs	r2, #3
 80148dc:	701a      	strb	r2, [r3, #0]
        (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_CCDEFAULTCURRENTADVERTISED, 1, &rp_value);
 80148de:	187b      	adds	r3, r7, r1
 80148e0:	1978      	adds	r0, r7, r5
 80148e2:	2201      	movs	r2, #1
 80148e4:	2109      	movs	r1, #9
 80148e6:	f7ff f8c3 	bl	8013a70 <TLV_add>
        if (USBPD_POWER_EXPLICITCONTRACT == DPM_Params[PortNum].PE_Power)
 80148ea:	193b      	adds	r3, r7, r4
 80148ec:	781b      	ldrb	r3, [r3, #0]
 80148ee:	4a8d      	ldr	r2, [pc, #564]	; (8014b24 <GUI_SendNotification+0x324>)
 80148f0:	009b      	lsls	r3, r3, #2
 80148f2:	18d3      	adds	r3, r2, r3
 80148f4:	785b      	ldrb	r3, [r3, #1]
 80148f6:	075b      	lsls	r3, r3, #29
 80148f8:	0f5b      	lsrs	r3, r3, #29
 80148fa:	b2db      	uxtb	r3, r3
 80148fc:	2b03      	cmp	r3, #3
 80148fe:	d136      	bne.n	801496e <GUI_SendNotification+0x16e>
        {
          /* Data Role*/
          (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_DATAROLE, 1,
                        (uint8_t[]) { DPM_Params[PortNum].PE_DataRole });
 8014900:	193b      	adds	r3, r7, r4
 8014902:	781a      	ldrb	r2, [r3, #0]
 8014904:	4b87      	ldr	r3, [pc, #540]	; (8014b24 <GUI_SendNotification+0x324>)
 8014906:	0092      	lsls	r2, r2, #2
 8014908:	5cd3      	ldrb	r3, [r2, r3]
 801490a:	071b      	lsls	r3, r3, #28
 801490c:	0fdb      	lsrs	r3, r3, #31
 801490e:	b2db      	uxtb	r3, r3
 8014910:	001a      	movs	r2, r3
 8014912:	2174      	movs	r1, #116	; 0x74
 8014914:	187b      	adds	r3, r7, r1
 8014916:	701a      	strb	r2, [r3, #0]
          (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_DATAROLE, 1,
 8014918:	187b      	adds	r3, r7, r1
 801491a:	1978      	adds	r0, r7, r5
 801491c:	2201      	movs	r2, #1
 801491e:	2107      	movs	r1, #7
 8014920:	f7ff f8a6 	bl	8013a70 <TLV_add>
          /* Vconn ON*/
          (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_VCONNON, 1,
                        (uint8_t[]) { DPM_Params[PortNum].VconnStatus });
 8014924:	193b      	adds	r3, r7, r4
 8014926:	781b      	ldrb	r3, [r3, #0]
 8014928:	4a7e      	ldr	r2, [pc, #504]	; (8014b24 <GUI_SendNotification+0x324>)
 801492a:	009b      	lsls	r3, r3, #2
 801492c:	18d3      	adds	r3, r2, r3
 801492e:	785b      	ldrb	r3, [r3, #1]
 8014930:	061b      	lsls	r3, r3, #24
 8014932:	0fdb      	lsrs	r3, r3, #31
 8014934:	b2db      	uxtb	r3, r3
 8014936:	001a      	movs	r2, r3
 8014938:	2170      	movs	r1, #112	; 0x70
 801493a:	187b      	adds	r3, r7, r1
 801493c:	701a      	strb	r2, [r3, #0]
          (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_VCONNON, 1,
 801493e:	187b      	adds	r3, r7, r1
 8014940:	1978      	adds	r0, r7, r5
 8014942:	2201      	movs	r2, #1
 8014944:	210a      	movs	r1, #10
 8014946:	f7ff f893 	bl	8013a70 <TLV_add>
          /* PD_Spec Revision */
          (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_PD_SPECREVISION, 1,
                        (uint8_t[]) { DPM_Params[PortNum].PE_SpecRevision });
 801494a:	193b      	adds	r3, r7, r4
 801494c:	781a      	ldrb	r2, [r3, #0]
 801494e:	4b75      	ldr	r3, [pc, #468]	; (8014b24 <GUI_SendNotification+0x324>)
 8014950:	0092      	lsls	r2, r2, #2
 8014952:	5cd3      	ldrb	r3, [r2, r3]
 8014954:	079b      	lsls	r3, r3, #30
 8014956:	0f9b      	lsrs	r3, r3, #30
 8014958:	b2db      	uxtb	r3, r3
 801495a:	001a      	movs	r2, r3
 801495c:	216c      	movs	r1, #108	; 0x6c
 801495e:	187b      	adds	r3, r7, r1
 8014960:	701a      	strb	r2, [r3, #0]
          (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_PD_SPECREVISION, 1,
 8014962:	187b      	adds	r3, r7, r1
 8014964:	1978      	adds	r0, r7, r5
 8014966:	2201      	movs	r2, #1
 8014968:	210d      	movs	r1, #13
 801496a:	f7ff f881 	bl	8013a70 <TLV_add>
        }
      }
    }

    /* Check PD message event */
    if ((TypeNotification & GUI_NOTIF_PE_EVENT) == GUI_NOTIF_PE_EVENT)
 801496e:	683a      	ldr	r2, [r7, #0]
 8014970:	2380      	movs	r3, #128	; 0x80
 8014972:	019b      	lsls	r3, r3, #6
 8014974:	4013      	ands	r3, r2
 8014976:	d100      	bne.n	801497a <GUI_SendNotification+0x17a>
 8014978:	e27d      	b.n	8014e76 <GUI_SendNotification+0x676>
    {
      if ((uint32_t)USBPD_NOTIFY_ALL != Value)
 801497a:	22a0      	movs	r2, #160	; 0xa0
 801497c:	2108      	movs	r1, #8
 801497e:	1853      	adds	r3, r2, r1
 8014980:	19db      	adds	r3, r3, r7
 8014982:	681b      	ldr	r3, [r3, #0]
 8014984:	2b70      	cmp	r3, #112	; 0x70
 8014986:	d100      	bne.n	801498a <GUI_SendNotification+0x18a>
 8014988:	e1c1      	b.n	8014d0e <GUI_SendNotification+0x50e>
      {
        /* PD_MessageNotif */
        (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_PD_MESSAGENOTIF, 1, (uint8_t *)&Value);
 801498a:	2384      	movs	r3, #132	; 0x84
 801498c:	18f8      	adds	r0, r7, r3
 801498e:	0014      	movs	r4, r2
 8014990:	000d      	movs	r5, r1
 8014992:	1853      	adds	r3, r2, r1
 8014994:	19db      	adds	r3, r3, r7
 8014996:	2201      	movs	r2, #1
 8014998:	210e      	movs	r1, #14
 801499a:	f7ff f869 	bl	8013a70 <TLV_add>

        switch (Value)
 801499e:	0022      	movs	r2, r4
 80149a0:	1953      	adds	r3, r2, r5
 80149a2:	19db      	adds	r3, r3, r7
 80149a4:	681b      	ldr	r3, [r3, #0]
 80149a6:	2b42      	cmp	r3, #66	; 0x42
 80149a8:	d80b      	bhi.n	80149c2 <GUI_SendNotification+0x1c2>
 80149aa:	2b07      	cmp	r3, #7
 80149ac:	d200      	bcs.n	80149b0 <GUI_SendNotification+0x1b0>
 80149ae:	e25b      	b.n	8014e68 <GUI_SendNotification+0x668>
 80149b0:	3b07      	subs	r3, #7
 80149b2:	2b3b      	cmp	r3, #59	; 0x3b
 80149b4:	d900      	bls.n	80149b8 <GUI_SendNotification+0x1b8>
 80149b6:	e257      	b.n	8014e68 <GUI_SendNotification+0x668>
 80149b8:	009a      	lsls	r2, r3, #2
 80149ba:	4b5b      	ldr	r3, [pc, #364]	; (8014b28 <GUI_SendNotification+0x328>)
 80149bc:	18d3      	adds	r3, r2, r3
 80149be:	681b      	ldr	r3, [r3, #0]
 80149c0:	469f      	mov	pc, r3
 80149c2:	2b5a      	cmp	r3, #90	; 0x5a
 80149c4:	d000      	beq.n	80149c8 <GUI_SendNotification+0x1c8>
 80149c6:	e24f      	b.n	8014e68 <GUI_SendNotification+0x668>
        {
          case USBPD_NOTIFY_POWER_STATE_CHANGE :
            /* Is Connected*/
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_ISCONNECTED, 1,
                          (uint8_t[]) { DPM_Params[PortNum].PE_Power });
 80149c8:	240f      	movs	r4, #15
 80149ca:	193b      	adds	r3, r7, r4
 80149cc:	781b      	ldrb	r3, [r3, #0]
 80149ce:	4a55      	ldr	r2, [pc, #340]	; (8014b24 <GUI_SendNotification+0x324>)
 80149d0:	009b      	lsls	r3, r3, #2
 80149d2:	18d3      	adds	r3, r2, r3
 80149d4:	785b      	ldrb	r3, [r3, #1]
 80149d6:	075b      	lsls	r3, r3, #29
 80149d8:	0f5b      	lsrs	r3, r3, #29
 80149da:	b2db      	uxtb	r3, r3
 80149dc:	001a      	movs	r2, r3
 80149de:	2168      	movs	r1, #104	; 0x68
 80149e0:	187b      	adds	r3, r7, r1
 80149e2:	701a      	strb	r2, [r3, #0]
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_ISCONNECTED, 1,
 80149e4:	187b      	adds	r3, r7, r1
 80149e6:	2584      	movs	r5, #132	; 0x84
 80149e8:	1978      	adds	r0, r7, r5
 80149ea:	2201      	movs	r2, #1
 80149ec:	2105      	movs	r1, #5
 80149ee:	f7ff f83f 	bl	8013a70 <TLV_add>
            if (USBPD_POWER_NO == DPM_Params[PortNum].PE_Power)
 80149f2:	193b      	adds	r3, r7, r4
 80149f4:	781b      	ldrb	r3, [r3, #0]
 80149f6:	4a4b      	ldr	r2, [pc, #300]	; (8014b24 <GUI_SendNotification+0x324>)
 80149f8:	009b      	lsls	r3, r3, #2
 80149fa:	18d3      	adds	r3, r2, r3
 80149fc:	785b      	ldrb	r3, [r3, #1]
 80149fe:	075b      	lsls	r3, r3, #29
 8014a00:	0f5b      	lsrs	r3, r3, #29
 8014a02:	b2db      	uxtb	r3, r3
 8014a04:	2b00      	cmp	r3, #0
 8014a06:	d000      	beq.n	8014a0a <GUI_SendNotification+0x20a>
 8014a08:	e234      	b.n	8014e74 <GUI_SendNotification+0x674>
            {
              /* CC line */
              (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_CC, 1,
                            (uint8_t[]) { DPM_Params[PortNum].ActiveCCIs });
 8014a0a:	193b      	adds	r3, r7, r4
 8014a0c:	781a      	ldrb	r2, [r3, #0]
 8014a0e:	4b45      	ldr	r3, [pc, #276]	; (8014b24 <GUI_SendNotification+0x324>)
 8014a10:	0092      	lsls	r2, r2, #2
 8014a12:	5cd3      	ldrb	r3, [r2, r3]
 8014a14:	061b      	lsls	r3, r3, #24
 8014a16:	0f9b      	lsrs	r3, r3, #30
 8014a18:	b2db      	uxtb	r3, r3
 8014a1a:	001a      	movs	r2, r3
 8014a1c:	2138      	movs	r1, #56	; 0x38
 8014a1e:	187b      	adds	r3, r7, r1
 8014a20:	701a      	strb	r2, [r3, #0]
              (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_CC, 1,
 8014a22:	187b      	adds	r3, r7, r1
 8014a24:	1978      	adds	r0, r7, r5
 8014a26:	2201      	movs	r2, #1
 8014a28:	2106      	movs	r1, #6
 8014a2a:	f7ff f821 	bl	8013a70 <TLV_add>
              /* PowerRole*/
              (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_POWERROLE, 1,
                            (uint8_t[]) { DPM_Params[PortNum].PE_PowerRole });
 8014a2e:	193b      	adds	r3, r7, r4
 8014a30:	781a      	ldrb	r2, [r3, #0]
 8014a32:	4b3c      	ldr	r3, [pc, #240]	; (8014b24 <GUI_SendNotification+0x324>)
 8014a34:	0092      	lsls	r2, r2, #2
 8014a36:	5cd3      	ldrb	r3, [r2, r3]
 8014a38:	075b      	lsls	r3, r3, #29
 8014a3a:	0fdb      	lsrs	r3, r3, #31
 8014a3c:	b2db      	uxtb	r3, r3
 8014a3e:	001a      	movs	r2, r3
 8014a40:	2134      	movs	r1, #52	; 0x34
 8014a42:	187b      	adds	r3, r7, r1
 8014a44:	701a      	strb	r2, [r3, #0]
              (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_POWERROLE, 1,
 8014a46:	187b      	adds	r3, r7, r1
 8014a48:	1978      	adds	r0, r7, r5
 8014a4a:	2201      	movs	r2, #1
 8014a4c:	2108      	movs	r1, #8
 8014a4e:	f7ff f80f 	bl	8013a70 <TLV_add>
            }
            break;
 8014a52:	e20f      	b.n	8014e74 <GUI_SendNotification+0x674>
          case USBPD_NOTIFY_GETSNKCAP_ACCEPTED :
            /* NumberOfRcvSNKPDO */
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_NUMBEROFRCVSNKPDO, 1,
                          (uint8_t[]) { GUI_SaveInformation[PortNum].NumberOfRcvSNKPDO
 8014a54:	240f      	movs	r4, #15
 8014a56:	193b      	adds	r3, r7, r4
 8014a58:	781a      	ldrb	r2, [r3, #0]
 8014a5a:	4934      	ldr	r1, [pc, #208]	; (8014b2c <GUI_SendNotification+0x32c>)
 8014a5c:	0013      	movs	r3, r2
 8014a5e:	00db      	lsls	r3, r3, #3
 8014a60:	1a9b      	subs	r3, r3, r2
 8014a62:	011b      	lsls	r3, r3, #4
 8014a64:	18cb      	adds	r3, r1, r3
 8014a66:	333c      	adds	r3, #60	; 0x3c
 8014a68:	681b      	ldr	r3, [r3, #0]
 8014a6a:	b2da      	uxtb	r2, r3
 8014a6c:	2164      	movs	r1, #100	; 0x64
 8014a6e:	187b      	adds	r3, r7, r1
 8014a70:	701a      	strb	r2, [r3, #0]
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_NUMBEROFRCVSNKPDO, 1,
 8014a72:	187b      	adds	r3, r7, r1
 8014a74:	2584      	movs	r5, #132	; 0x84
 8014a76:	1978      	adds	r0, r7, r5
 8014a78:	2201      	movs	r2, #1
 8014a7a:	2100      	movs	r1, #0
 8014a7c:	f7fe fff8 	bl	8013a70 <TLV_add>
            });
            /* ListOfRcvSNKPDO*/
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_LISTOFRCVSNKPDO,
                          (uint16_t)(GUI_SaveInformation[PortNum].NumberOfRcvSNKPDO * 4U),
 8014a80:	193b      	adds	r3, r7, r4
 8014a82:	781a      	ldrb	r2, [r3, #0]
 8014a84:	4929      	ldr	r1, [pc, #164]	; (8014b2c <GUI_SendNotification+0x32c>)
 8014a86:	0013      	movs	r3, r2
 8014a88:	00db      	lsls	r3, r3, #3
 8014a8a:	1a9b      	subs	r3, r3, r2
 8014a8c:	011b      	lsls	r3, r3, #4
 8014a8e:	18cb      	adds	r3, r1, r3
 8014a90:	333c      	adds	r3, #60	; 0x3c
 8014a92:	681b      	ldr	r3, [r3, #0]
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_LISTOFRCVSNKPDO,
 8014a94:	b29b      	uxth	r3, r3
 8014a96:	009b      	lsls	r3, r3, #2
 8014a98:	b299      	uxth	r1, r3
                          (uint8_t *) GUI_SaveInformation[PortNum].ListOfRcvSNKPDO);
 8014a9a:	193b      	adds	r3, r7, r4
 8014a9c:	781a      	ldrb	r2, [r3, #0]
 8014a9e:	0013      	movs	r3, r2
 8014aa0:	00db      	lsls	r3, r3, #3
 8014aa2:	1a9b      	subs	r3, r3, r2
 8014aa4:	011b      	lsls	r3, r3, #4
 8014aa6:	3320      	adds	r3, #32
 8014aa8:	001a      	movs	r2, r3
 8014aaa:	4b20      	ldr	r3, [pc, #128]	; (8014b2c <GUI_SendNotification+0x32c>)
 8014aac:	18d3      	adds	r3, r2, r3
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_LISTOFRCVSNKPDO,
 8014aae:	1978      	adds	r0, r7, r5
 8014ab0:	000a      	movs	r2, r1
 8014ab2:	2104      	movs	r1, #4
 8014ab4:	f7fe ffdc 	bl	8013a70 <TLV_add>
            break;
 8014ab8:	e1dd      	b.n	8014e76 <GUI_SendNotification+0x676>
          case USBPD_NOTIFY_GETSRCCAP_ACCEPTED :
            /* NumberOfRcvSRCPDO*/
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_NUMBEROFRCVSRCPDO, 1,
                          (uint8_t[]) { GUI_SaveInformation[PortNum].NumberOfRcvSRCPDO });
 8014aba:	240f      	movs	r4, #15
 8014abc:	193b      	adds	r3, r7, r4
 8014abe:	781a      	ldrb	r2, [r3, #0]
 8014ac0:	491a      	ldr	r1, [pc, #104]	; (8014b2c <GUI_SendNotification+0x32c>)
 8014ac2:	0013      	movs	r3, r2
 8014ac4:	00db      	lsls	r3, r3, #3
 8014ac6:	1a9b      	subs	r3, r3, r2
 8014ac8:	011b      	lsls	r3, r3, #4
 8014aca:	18cb      	adds	r3, r1, r3
 8014acc:	331c      	adds	r3, #28
 8014ace:	681b      	ldr	r3, [r3, #0]
 8014ad0:	b2da      	uxtb	r2, r3
 8014ad2:	2160      	movs	r1, #96	; 0x60
 8014ad4:	187b      	adds	r3, r7, r1
 8014ad6:	701a      	strb	r2, [r3, #0]
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_NUMBEROFRCVSRCPDO, 1,
 8014ad8:	187b      	adds	r3, r7, r1
 8014ada:	2584      	movs	r5, #132	; 0x84
 8014adc:	1978      	adds	r0, r7, r5
 8014ade:	2201      	movs	r2, #1
 8014ae0:	2103      	movs	r1, #3
 8014ae2:	f7fe ffc5 	bl	8013a70 <TLV_add>
            /* ListOfRcvSRCPDO*/
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_LISTOFRCVSRCPDO,
                          (uint16_t)(GUI_SaveInformation[PortNum].NumberOfRcvSRCPDO * 4U),
 8014ae6:	193b      	adds	r3, r7, r4
 8014ae8:	781a      	ldrb	r2, [r3, #0]
 8014aea:	4910      	ldr	r1, [pc, #64]	; (8014b2c <GUI_SendNotification+0x32c>)
 8014aec:	0013      	movs	r3, r2
 8014aee:	00db      	lsls	r3, r3, #3
 8014af0:	1a9b      	subs	r3, r3, r2
 8014af2:	011b      	lsls	r3, r3, #4
 8014af4:	18cb      	adds	r3, r1, r3
 8014af6:	331c      	adds	r3, #28
 8014af8:	681b      	ldr	r3, [r3, #0]
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_LISTOFRCVSRCPDO,
 8014afa:	b29b      	uxth	r3, r3
 8014afc:	009b      	lsls	r3, r3, #2
 8014afe:	b299      	uxth	r1, r3
                          (uint8_t *) GUI_SaveInformation[PortNum].ListOfRcvSRCPDO);
 8014b00:	193b      	adds	r3, r7, r4
 8014b02:	781a      	ldrb	r2, [r3, #0]
 8014b04:	0013      	movs	r3, r2
 8014b06:	00db      	lsls	r3, r3, #3
 8014b08:	1a9b      	subs	r3, r3, r2
 8014b0a:	011b      	lsls	r3, r3, #4
 8014b0c:	4a07      	ldr	r2, [pc, #28]	; (8014b2c <GUI_SendNotification+0x32c>)
 8014b0e:	189b      	adds	r3, r3, r2
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_LISTOFRCVSRCPDO,
 8014b10:	1978      	adds	r0, r7, r5
 8014b12:	000a      	movs	r2, r1
 8014b14:	2102      	movs	r1, #2
 8014b16:	f7fe ffab 	bl	8013a70 <TLV_add>
            break;
 8014b1a:	e1ac      	b.n	8014e76 <GUI_SendNotification+0x676>
 8014b1c:	20002ebc 	.word	0x20002ebc
 8014b20:	20002dbc 	.word	0x20002dbc
 8014b24:	20002c4c 	.word	0x20002c4c
 8014b28:	08019ad0 	.word	0x08019ad0
 8014b2c:	20002edc 	.word	0x20002edc
          case USBPD_NOTIFY_POWER_EXPLICIT_CONTRACT :
            if (USBPD_PORTPOWERROLE_SNK == DPM_Params[PortNum].PE_PowerRole)
 8014b30:	240f      	movs	r4, #15
 8014b32:	193b      	adds	r3, r7, r4
 8014b34:	781a      	ldrb	r2, [r3, #0]
 8014b36:	4bcd      	ldr	r3, [pc, #820]	; (8014e6c <GUI_SendNotification+0x66c>)
 8014b38:	0092      	lsls	r2, r2, #2
 8014b3a:	5cd3      	ldrb	r3, [r2, r3]
 8014b3c:	075b      	lsls	r3, r3, #29
 8014b3e:	0fdb      	lsrs	r3, r3, #31
 8014b40:	b2db      	uxtb	r3, r3
 8014b42:	2b00      	cmp	r3, #0
 8014b44:	d12e      	bne.n	8014ba4 <GUI_SendNotification+0x3a4>
            {
              /* NumberOfRcvSRCPDO*/
              (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_NUMBEROFRCVSRCPDO, 1,
                            (uint8_t[]) { GUI_SaveInformation[PortNum].NumberOfRcvSRCPDO });
 8014b46:	193b      	adds	r3, r7, r4
 8014b48:	781a      	ldrb	r2, [r3, #0]
 8014b4a:	49c9      	ldr	r1, [pc, #804]	; (8014e70 <GUI_SendNotification+0x670>)
 8014b4c:	0013      	movs	r3, r2
 8014b4e:	00db      	lsls	r3, r3, #3
 8014b50:	1a9b      	subs	r3, r3, r2
 8014b52:	011b      	lsls	r3, r3, #4
 8014b54:	18cb      	adds	r3, r1, r3
 8014b56:	331c      	adds	r3, #28
 8014b58:	681b      	ldr	r3, [r3, #0]
 8014b5a:	b2da      	uxtb	r2, r3
 8014b5c:	2130      	movs	r1, #48	; 0x30
 8014b5e:	187b      	adds	r3, r7, r1
 8014b60:	701a      	strb	r2, [r3, #0]
              (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_NUMBEROFRCVSRCPDO, 1,
 8014b62:	187b      	adds	r3, r7, r1
 8014b64:	2584      	movs	r5, #132	; 0x84
 8014b66:	1978      	adds	r0, r7, r5
 8014b68:	2201      	movs	r2, #1
 8014b6a:	2103      	movs	r1, #3
 8014b6c:	f7fe ff80 	bl	8013a70 <TLV_add>
              /* ListOfRcvSRCPDO*/
              (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_LISTOFRCVSRCPDO,
                            (uint16_t)(GUI_SaveInformation[PortNum].NumberOfRcvSRCPDO * 4U),
 8014b70:	193b      	adds	r3, r7, r4
 8014b72:	781a      	ldrb	r2, [r3, #0]
 8014b74:	49be      	ldr	r1, [pc, #760]	; (8014e70 <GUI_SendNotification+0x670>)
 8014b76:	0013      	movs	r3, r2
 8014b78:	00db      	lsls	r3, r3, #3
 8014b7a:	1a9b      	subs	r3, r3, r2
 8014b7c:	011b      	lsls	r3, r3, #4
 8014b7e:	18cb      	adds	r3, r1, r3
 8014b80:	331c      	adds	r3, #28
 8014b82:	681b      	ldr	r3, [r3, #0]
              (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_LISTOFRCVSRCPDO,
 8014b84:	b29b      	uxth	r3, r3
 8014b86:	009b      	lsls	r3, r3, #2
 8014b88:	b299      	uxth	r1, r3
                            (uint8_t *) GUI_SaveInformation[PortNum].ListOfRcvSRCPDO);
 8014b8a:	193b      	adds	r3, r7, r4
 8014b8c:	781a      	ldrb	r2, [r3, #0]
 8014b8e:	0013      	movs	r3, r2
 8014b90:	00db      	lsls	r3, r3, #3
 8014b92:	1a9b      	subs	r3, r3, r2
 8014b94:	011b      	lsls	r3, r3, #4
 8014b96:	4ab6      	ldr	r2, [pc, #728]	; (8014e70 <GUI_SendNotification+0x670>)
 8014b98:	189b      	adds	r3, r3, r2
              (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_LISTOFRCVSRCPDO,
 8014b9a:	1978      	adds	r0, r7, r5
 8014b9c:	000a      	movs	r2, r1
 8014b9e:	2102      	movs	r1, #2
 8014ba0:	f7fe ff66 	bl	8013a70 <TLV_add>
            }
            /* RDOPosition */
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_RDOPOSITION, 1,
                          (uint8_t[]) { GUI_SaveInformation[PortNum].RDOPosition });
 8014ba4:	240f      	movs	r4, #15
 8014ba6:	193b      	adds	r3, r7, r4
 8014ba8:	781a      	ldrb	r2, [r3, #0]
 8014baa:	49b1      	ldr	r1, [pc, #708]	; (8014e70 <GUI_SendNotification+0x670>)
 8014bac:	0013      	movs	r3, r2
 8014bae:	00db      	lsls	r3, r3, #3
 8014bb0:	1a9b      	subs	r3, r3, r2
 8014bb2:	011b      	lsls	r3, r3, #4
 8014bb4:	18cb      	adds	r3, r1, r3
 8014bb6:	3340      	adds	r3, #64	; 0x40
 8014bb8:	681b      	ldr	r3, [r3, #0]
 8014bba:	b2da      	uxtb	r2, r3
 8014bbc:	215c      	movs	r1, #92	; 0x5c
 8014bbe:	187b      	adds	r3, r7, r1
 8014bc0:	701a      	strb	r2, [r3, #0]
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_RDOPOSITION, 1,
 8014bc2:	187b      	adds	r3, r7, r1
 8014bc4:	2584      	movs	r5, #132	; 0x84
 8014bc6:	1978      	adds	r0, r7, r5
 8014bc8:	2201      	movs	r2, #1
 8014bca:	2101      	movs	r1, #1
 8014bcc:	f7fe ff50 	bl	8013a70 <TLV_add>
            /* DataRole*/
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_DATAROLE, 1,
                          (uint8_t[]) { DPM_Params[PortNum].PE_DataRole });
 8014bd0:	193b      	adds	r3, r7, r4
 8014bd2:	781a      	ldrb	r2, [r3, #0]
 8014bd4:	4ba5      	ldr	r3, [pc, #660]	; (8014e6c <GUI_SendNotification+0x66c>)
 8014bd6:	0092      	lsls	r2, r2, #2
 8014bd8:	5cd3      	ldrb	r3, [r2, r3]
 8014bda:	071b      	lsls	r3, r3, #28
 8014bdc:	0fdb      	lsrs	r3, r3, #31
 8014bde:	b2db      	uxtb	r3, r3
 8014be0:	001a      	movs	r2, r3
 8014be2:	2158      	movs	r1, #88	; 0x58
 8014be4:	187b      	adds	r3, r7, r1
 8014be6:	701a      	strb	r2, [r3, #0]
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_DATAROLE, 1,
 8014be8:	187b      	adds	r3, r7, r1
 8014bea:	1978      	adds	r0, r7, r5
 8014bec:	2201      	movs	r2, #1
 8014bee:	2107      	movs	r1, #7
 8014bf0:	f7fe ff3e 	bl	8013a70 <TLV_add>
            /* PowerRole*/
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_POWERROLE, 1,
                          (uint8_t[]) { DPM_Params[PortNum].PE_PowerRole });
 8014bf4:	193b      	adds	r3, r7, r4
 8014bf6:	781a      	ldrb	r2, [r3, #0]
 8014bf8:	4b9c      	ldr	r3, [pc, #624]	; (8014e6c <GUI_SendNotification+0x66c>)
 8014bfa:	0092      	lsls	r2, r2, #2
 8014bfc:	5cd3      	ldrb	r3, [r2, r3]
 8014bfe:	075b      	lsls	r3, r3, #29
 8014c00:	0fdb      	lsrs	r3, r3, #31
 8014c02:	b2db      	uxtb	r3, r3
 8014c04:	001a      	movs	r2, r3
 8014c06:	2154      	movs	r1, #84	; 0x54
 8014c08:	187b      	adds	r3, r7, r1
 8014c0a:	701a      	strb	r2, [r3, #0]
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_POWERROLE, 1,
 8014c0c:	187b      	adds	r3, r7, r1
 8014c0e:	1978      	adds	r0, r7, r5
 8014c10:	2201      	movs	r2, #1
 8014c12:	2108      	movs	r1, #8
 8014c14:	f7fe ff2c 	bl	8013a70 <TLV_add>
            /* VconnON*/
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_VCONNON, 1,
                          (uint8_t[]) { DPM_Params[PortNum].VconnStatus });
 8014c18:	193b      	adds	r3, r7, r4
 8014c1a:	781b      	ldrb	r3, [r3, #0]
 8014c1c:	4a93      	ldr	r2, [pc, #588]	; (8014e6c <GUI_SendNotification+0x66c>)
 8014c1e:	009b      	lsls	r3, r3, #2
 8014c20:	18d3      	adds	r3, r2, r3
 8014c22:	785b      	ldrb	r3, [r3, #1]
 8014c24:	061b      	lsls	r3, r3, #24
 8014c26:	0fdb      	lsrs	r3, r3, #31
 8014c28:	b2db      	uxtb	r3, r3
 8014c2a:	001a      	movs	r2, r3
 8014c2c:	2150      	movs	r1, #80	; 0x50
 8014c2e:	187b      	adds	r3, r7, r1
 8014c30:	701a      	strb	r2, [r3, #0]
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_VCONNON, 1,
 8014c32:	187b      	adds	r3, r7, r1
 8014c34:	1978      	adds	r0, r7, r5
 8014c36:	2201      	movs	r2, #1
 8014c38:	210a      	movs	r1, #10
 8014c3a:	f7fe ff19 	bl	8013a70 <TLV_add>
            /* PD_SpecRevision */
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_PD_SPECREVISION, 1,
                          (uint8_t[]) { DPM_Params[PortNum].PE_SpecRevision });
 8014c3e:	193b      	adds	r3, r7, r4
 8014c40:	781a      	ldrb	r2, [r3, #0]
 8014c42:	4b8a      	ldr	r3, [pc, #552]	; (8014e6c <GUI_SendNotification+0x66c>)
 8014c44:	0092      	lsls	r2, r2, #2
 8014c46:	5cd3      	ldrb	r3, [r2, r3]
 8014c48:	079b      	lsls	r3, r3, #30
 8014c4a:	0f9b      	lsrs	r3, r3, #30
 8014c4c:	b2db      	uxtb	r3, r3
 8014c4e:	001a      	movs	r2, r3
 8014c50:	214c      	movs	r1, #76	; 0x4c
 8014c52:	187b      	adds	r3, r7, r1
 8014c54:	701a      	strb	r2, [r3, #0]
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_PD_SPECREVISION, 1,
 8014c56:	187b      	adds	r3, r7, r1
 8014c58:	1978      	adds	r0, r7, r5
 8014c5a:	2201      	movs	r2, #1
 8014c5c:	210d      	movs	r1, #13
 8014c5e:	f7fe ff07 	bl	8013a70 <TLV_add>
            break;
 8014c62:	e108      	b.n	8014e76 <GUI_SendNotification+0x676>
          case USBPD_NOTIFY_POWER_SWAP_TO_SNK_DONE :
          case USBPD_NOTIFY_POWER_SWAP_TO_SRC_DONE :
            /* PowerRole*/
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_POWERROLE, 1,
                          (uint8_t[]) { DPM_Params[PortNum].PE_PowerRole });
 8014c64:	230f      	movs	r3, #15
 8014c66:	18fb      	adds	r3, r7, r3
 8014c68:	781a      	ldrb	r2, [r3, #0]
 8014c6a:	4b80      	ldr	r3, [pc, #512]	; (8014e6c <GUI_SendNotification+0x66c>)
 8014c6c:	0092      	lsls	r2, r2, #2
 8014c6e:	5cd3      	ldrb	r3, [r2, r3]
 8014c70:	075b      	lsls	r3, r3, #29
 8014c72:	0fdb      	lsrs	r3, r3, #31
 8014c74:	b2db      	uxtb	r3, r3
 8014c76:	001a      	movs	r2, r3
 8014c78:	2148      	movs	r1, #72	; 0x48
 8014c7a:	187b      	adds	r3, r7, r1
 8014c7c:	701a      	strb	r2, [r3, #0]
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_POWERROLE, 1,
 8014c7e:	187b      	adds	r3, r7, r1
 8014c80:	2284      	movs	r2, #132	; 0x84
 8014c82:	18b8      	adds	r0, r7, r2
 8014c84:	2201      	movs	r2, #1
 8014c86:	2108      	movs	r1, #8
 8014c88:	f7fe fef2 	bl	8013a70 <TLV_add>
            break;
 8014c8c:	e0f3      	b.n	8014e76 <GUI_SendNotification+0x676>
          case USBPD_NOTIFY_DATAROLESWAP_UFP :
          case USBPD_NOTIFY_DATAROLESWAP_DFP :
            /* DataRole*/
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_DATAROLE, 1,
                          (uint8_t[]) { DPM_Params[PortNum].PE_DataRole });
 8014c8e:	230f      	movs	r3, #15
 8014c90:	18fb      	adds	r3, r7, r3
 8014c92:	781a      	ldrb	r2, [r3, #0]
 8014c94:	4b75      	ldr	r3, [pc, #468]	; (8014e6c <GUI_SendNotification+0x66c>)
 8014c96:	0092      	lsls	r2, r2, #2
 8014c98:	5cd3      	ldrb	r3, [r2, r3]
 8014c9a:	071b      	lsls	r3, r3, #28
 8014c9c:	0fdb      	lsrs	r3, r3, #31
 8014c9e:	b2db      	uxtb	r3, r3
 8014ca0:	001a      	movs	r2, r3
 8014ca2:	2144      	movs	r1, #68	; 0x44
 8014ca4:	187b      	adds	r3, r7, r1
 8014ca6:	701a      	strb	r2, [r3, #0]
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_DATAROLE, 1,
 8014ca8:	187b      	adds	r3, r7, r1
 8014caa:	2284      	movs	r2, #132	; 0x84
 8014cac:	18b8      	adds	r0, r7, r2
 8014cae:	2201      	movs	r2, #1
 8014cb0:	2107      	movs	r1, #7
 8014cb2:	f7fe fedd 	bl	8013a70 <TLV_add>
            break;
 8014cb6:	e0de      	b.n	8014e76 <GUI_SendNotification+0x676>
          case USBPD_NOTIFY_PD_SPECIFICATION_CHANGE :
            /* PD_SpecRevision */
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_PD_SPECREVISION, 1,
                          (uint8_t[]) { DPM_Params[PortNum].PE_SpecRevision });
 8014cb8:	230f      	movs	r3, #15
 8014cba:	18fb      	adds	r3, r7, r3
 8014cbc:	781a      	ldrb	r2, [r3, #0]
 8014cbe:	4b6b      	ldr	r3, [pc, #428]	; (8014e6c <GUI_SendNotification+0x66c>)
 8014cc0:	0092      	lsls	r2, r2, #2
 8014cc2:	5cd3      	ldrb	r3, [r2, r3]
 8014cc4:	079b      	lsls	r3, r3, #30
 8014cc6:	0f9b      	lsrs	r3, r3, #30
 8014cc8:	b2db      	uxtb	r3, r3
 8014cca:	001a      	movs	r2, r3
 8014ccc:	2140      	movs	r1, #64	; 0x40
 8014cce:	187b      	adds	r3, r7, r1
 8014cd0:	701a      	strb	r2, [r3, #0]
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_PD_SPECREVISION, 1,
 8014cd2:	187b      	adds	r3, r7, r1
 8014cd4:	2284      	movs	r2, #132	; 0x84
 8014cd6:	18b8      	adds	r0, r7, r2
 8014cd8:	2201      	movs	r2, #1
 8014cda:	210d      	movs	r1, #13
 8014cdc:	f7fe fec8 	bl	8013a70 <TLV_add>
            break;
 8014ce0:	e0c9      	b.n	8014e76 <GUI_SendNotification+0x676>
          case USBPD_NOTIFY_VCONN_SWAP_COMPLETE :
            /* VconnON */
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_VCONNON, 1,
                          (uint8_t[]) { DPM_Params[PortNum].VconnStatus });
 8014ce2:	230f      	movs	r3, #15
 8014ce4:	18fb      	adds	r3, r7, r3
 8014ce6:	781b      	ldrb	r3, [r3, #0]
 8014ce8:	4a60      	ldr	r2, [pc, #384]	; (8014e6c <GUI_SendNotification+0x66c>)
 8014cea:	009b      	lsls	r3, r3, #2
 8014cec:	18d3      	adds	r3, r2, r3
 8014cee:	785b      	ldrb	r3, [r3, #1]
 8014cf0:	061b      	lsls	r3, r3, #24
 8014cf2:	0fdb      	lsrs	r3, r3, #31
 8014cf4:	b2db      	uxtb	r3, r3
 8014cf6:	001a      	movs	r2, r3
 8014cf8:	213c      	movs	r1, #60	; 0x3c
 8014cfa:	187b      	adds	r3, r7, r1
 8014cfc:	701a      	strb	r2, [r3, #0]
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_VCONNON, 1,
 8014cfe:	187b      	adds	r3, r7, r1
 8014d00:	2284      	movs	r2, #132	; 0x84
 8014d02:	18b8      	adds	r0, r7, r2
 8014d04:	2201      	movs	r2, #1
 8014d06:	210a      	movs	r1, #10
 8014d08:	f7fe feb2 	bl	8013a70 <TLV_add>
            break;
 8014d0c:	e0b3      	b.n	8014e76 <GUI_SendNotification+0x676>
        }
      }
      else
      {
        /* Send all the indication parameters if connected */
        if (USBPD_TRUE == DPM_Params[PortNum].PE_IsConnected)
 8014d0e:	240f      	movs	r4, #15
 8014d10:	193b      	adds	r3, r7, r4
 8014d12:	781b      	ldrb	r3, [r3, #0]
 8014d14:	4a55      	ldr	r2, [pc, #340]	; (8014e6c <GUI_SendNotification+0x66c>)
 8014d16:	009b      	lsls	r3, r3, #2
 8014d18:	18d3      	adds	r3, r2, r3
 8014d1a:	785b      	ldrb	r3, [r3, #1]
 8014d1c:	06db      	lsls	r3, r3, #27
 8014d1e:	0fdb      	lsrs	r3, r3, #31
 8014d20:	b2db      	uxtb	r3, r3
 8014d22:	2b01      	cmp	r3, #1
 8014d24:	d000      	beq.n	8014d28 <GUI_SendNotification+0x528>
 8014d26:	e0a6      	b.n	8014e76 <GUI_SendNotification+0x676>
        {
#if defined(_VDM)
          uint32_t index;
#endif /* _VDM */

          if (0U != GUI_SaveInformation[PortNum].NumberOfRcvSNKPDO)
 8014d28:	193b      	adds	r3, r7, r4
 8014d2a:	781a      	ldrb	r2, [r3, #0]
 8014d2c:	4950      	ldr	r1, [pc, #320]	; (8014e70 <GUI_SendNotification+0x670>)
 8014d2e:	0013      	movs	r3, r2
 8014d30:	00db      	lsls	r3, r3, #3
 8014d32:	1a9b      	subs	r3, r3, r2
 8014d34:	011b      	lsls	r3, r3, #4
 8014d36:	18cb      	adds	r3, r1, r3
 8014d38:	333c      	adds	r3, #60	; 0x3c
 8014d3a:	681b      	ldr	r3, [r3, #0]
 8014d3c:	2b00      	cmp	r3, #0
 8014d3e:	d030      	beq.n	8014da2 <GUI_SendNotification+0x5a2>
          {
            /* NumberOfRcvSNKPDO */
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_NUMBEROFRCVSNKPDO, 1,
                          (uint8_t[]) { GUI_SaveInformation[PortNum].NumberOfRcvSNKPDO });
 8014d40:	193b      	adds	r3, r7, r4
 8014d42:	781a      	ldrb	r2, [r3, #0]
 8014d44:	494a      	ldr	r1, [pc, #296]	; (8014e70 <GUI_SendNotification+0x670>)
 8014d46:	0013      	movs	r3, r2
 8014d48:	00db      	lsls	r3, r3, #3
 8014d4a:	1a9b      	subs	r3, r3, r2
 8014d4c:	011b      	lsls	r3, r3, #4
 8014d4e:	18cb      	adds	r3, r1, r3
 8014d50:	333c      	adds	r3, #60	; 0x3c
 8014d52:	681b      	ldr	r3, [r3, #0]
 8014d54:	b2da      	uxtb	r2, r3
 8014d56:	2124      	movs	r1, #36	; 0x24
 8014d58:	187b      	adds	r3, r7, r1
 8014d5a:	701a      	strb	r2, [r3, #0]
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_NUMBEROFRCVSNKPDO, 1,
 8014d5c:	187b      	adds	r3, r7, r1
 8014d5e:	2584      	movs	r5, #132	; 0x84
 8014d60:	1978      	adds	r0, r7, r5
 8014d62:	2201      	movs	r2, #1
 8014d64:	2100      	movs	r1, #0
 8014d66:	f7fe fe83 	bl	8013a70 <TLV_add>
            /* ListOfRcvSNKPDO*/
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_LISTOFRCVSNKPDO,
                          (uint16_t)(GUI_SaveInformation[PortNum].NumberOfRcvSNKPDO * 4U),
 8014d6a:	193b      	adds	r3, r7, r4
 8014d6c:	781a      	ldrb	r2, [r3, #0]
 8014d6e:	4940      	ldr	r1, [pc, #256]	; (8014e70 <GUI_SendNotification+0x670>)
 8014d70:	0013      	movs	r3, r2
 8014d72:	00db      	lsls	r3, r3, #3
 8014d74:	1a9b      	subs	r3, r3, r2
 8014d76:	011b      	lsls	r3, r3, #4
 8014d78:	18cb      	adds	r3, r1, r3
 8014d7a:	333c      	adds	r3, #60	; 0x3c
 8014d7c:	681b      	ldr	r3, [r3, #0]
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_LISTOFRCVSNKPDO,
 8014d7e:	b29b      	uxth	r3, r3
 8014d80:	009b      	lsls	r3, r3, #2
 8014d82:	b299      	uxth	r1, r3
                          (uint8_t *)GUI_SaveInformation[PortNum].ListOfRcvSNKPDO);
 8014d84:	193b      	adds	r3, r7, r4
 8014d86:	781a      	ldrb	r2, [r3, #0]
 8014d88:	0013      	movs	r3, r2
 8014d8a:	00db      	lsls	r3, r3, #3
 8014d8c:	1a9b      	subs	r3, r3, r2
 8014d8e:	011b      	lsls	r3, r3, #4
 8014d90:	3320      	adds	r3, #32
 8014d92:	001a      	movs	r2, r3
 8014d94:	4b36      	ldr	r3, [pc, #216]	; (8014e70 <GUI_SendNotification+0x670>)
 8014d96:	18d3      	adds	r3, r2, r3
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_LISTOFRCVSNKPDO,
 8014d98:	1978      	adds	r0, r7, r5
 8014d9a:	000a      	movs	r2, r1
 8014d9c:	2104      	movs	r1, #4
 8014d9e:	f7fe fe67 	bl	8013a70 <TLV_add>
          }
          /* RDOPosition */
          (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_RDOPOSITION, 1,
                        (uint8_t[]) { GUI_SaveInformation[PortNum].RDOPosition });
 8014da2:	240f      	movs	r4, #15
 8014da4:	193b      	adds	r3, r7, r4
 8014da6:	781a      	ldrb	r2, [r3, #0]
 8014da8:	4931      	ldr	r1, [pc, #196]	; (8014e70 <GUI_SendNotification+0x670>)
 8014daa:	0013      	movs	r3, r2
 8014dac:	00db      	lsls	r3, r3, #3
 8014dae:	1a9b      	subs	r3, r3, r2
 8014db0:	011b      	lsls	r3, r3, #4
 8014db2:	18cb      	adds	r3, r1, r3
 8014db4:	3340      	adds	r3, #64	; 0x40
 8014db6:	681b      	ldr	r3, [r3, #0]
 8014db8:	b2da      	uxtb	r2, r3
 8014dba:	212c      	movs	r1, #44	; 0x2c
 8014dbc:	187b      	adds	r3, r7, r1
 8014dbe:	701a      	strb	r2, [r3, #0]
          (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_RDOPOSITION, 1,
 8014dc0:	187b      	adds	r3, r7, r1
 8014dc2:	2584      	movs	r5, #132	; 0x84
 8014dc4:	1978      	adds	r0, r7, r5
 8014dc6:	2201      	movs	r2, #1
 8014dc8:	2101      	movs	r1, #1
 8014dca:	f7fe fe51 	bl	8013a70 <TLV_add>
          if (USBPD_PORTPOWERROLE_SNK == DPM_Params[PortNum].PE_PowerRole)
 8014dce:	193b      	adds	r3, r7, r4
 8014dd0:	781a      	ldrb	r2, [r3, #0]
 8014dd2:	4b26      	ldr	r3, [pc, #152]	; (8014e6c <GUI_SendNotification+0x66c>)
 8014dd4:	0092      	lsls	r2, r2, #2
 8014dd6:	5cd3      	ldrb	r3, [r2, r3]
 8014dd8:	075b      	lsls	r3, r3, #29
 8014dda:	0fdb      	lsrs	r3, r3, #31
 8014ddc:	b2db      	uxtb	r3, r3
 8014dde:	2b00      	cmp	r3, #0
 8014de0:	d12d      	bne.n	8014e3e <GUI_SendNotification+0x63e>
          {
            /* NumberOfRcvSRCPDO*/
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_NUMBEROFRCVSRCPDO, 1,
                          (uint8_t[]) { GUI_SaveInformation[PortNum].NumberOfRcvSRCPDO });
 8014de2:	193b      	adds	r3, r7, r4
 8014de4:	781a      	ldrb	r2, [r3, #0]
 8014de6:	4922      	ldr	r1, [pc, #136]	; (8014e70 <GUI_SendNotification+0x670>)
 8014de8:	0013      	movs	r3, r2
 8014dea:	00db      	lsls	r3, r3, #3
 8014dec:	1a9b      	subs	r3, r3, r2
 8014dee:	011b      	lsls	r3, r3, #4
 8014df0:	18cb      	adds	r3, r1, r3
 8014df2:	331c      	adds	r3, #28
 8014df4:	681b      	ldr	r3, [r3, #0]
 8014df6:	b2da      	uxtb	r2, r3
 8014df8:	2120      	movs	r1, #32
 8014dfa:	187b      	adds	r3, r7, r1
 8014dfc:	701a      	strb	r2, [r3, #0]
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_NUMBEROFRCVSRCPDO, 1,
 8014dfe:	187b      	adds	r3, r7, r1
 8014e00:	1978      	adds	r0, r7, r5
 8014e02:	2201      	movs	r2, #1
 8014e04:	2103      	movs	r1, #3
 8014e06:	f7fe fe33 	bl	8013a70 <TLV_add>
            /* ListOfRcvSRCPDO*/
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_LISTOFRCVSRCPDO,
                          (uint16_t)GUI_SaveInformation[PortNum].NumberOfRcvSRCPDO * 4U,
 8014e0a:	193b      	adds	r3, r7, r4
 8014e0c:	781a      	ldrb	r2, [r3, #0]
 8014e0e:	4918      	ldr	r1, [pc, #96]	; (8014e70 <GUI_SendNotification+0x670>)
 8014e10:	0013      	movs	r3, r2
 8014e12:	00db      	lsls	r3, r3, #3
 8014e14:	1a9b      	subs	r3, r3, r2
 8014e16:	011b      	lsls	r3, r3, #4
 8014e18:	18cb      	adds	r3, r1, r3
 8014e1a:	331c      	adds	r3, #28
 8014e1c:	681b      	ldr	r3, [r3, #0]
 8014e1e:	b29b      	uxth	r3, r3
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_LISTOFRCVSRCPDO,
 8014e20:	009b      	lsls	r3, r3, #2
 8014e22:	b299      	uxth	r1, r3
                          (uint8_t *)GUI_SaveInformation[PortNum].ListOfRcvSRCPDO);
 8014e24:	193b      	adds	r3, r7, r4
 8014e26:	781a      	ldrb	r2, [r3, #0]
 8014e28:	0013      	movs	r3, r2
 8014e2a:	00db      	lsls	r3, r3, #3
 8014e2c:	1a9b      	subs	r3, r3, r2
 8014e2e:	011b      	lsls	r3, r3, #4
 8014e30:	4a0f      	ldr	r2, [pc, #60]	; (8014e70 <GUI_SendNotification+0x670>)
 8014e32:	189b      	adds	r3, r3, r2
            (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_LISTOFRCVSRCPDO,
 8014e34:	1978      	adds	r0, r7, r5
 8014e36:	000a      	movs	r2, r1
 8014e38:	2102      	movs	r1, #2
 8014e3a:	f7fe fe19 	bl	8013a70 <TLV_add>
          }
          /* PD_SpecRevision */
          (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_PD_SPECREVISION, 1,
                        (uint8_t[]) { DPM_Params[PortNum].PE_SpecRevision });
 8014e3e:	230f      	movs	r3, #15
 8014e40:	18fb      	adds	r3, r7, r3
 8014e42:	781a      	ldrb	r2, [r3, #0]
 8014e44:	4b09      	ldr	r3, [pc, #36]	; (8014e6c <GUI_SendNotification+0x66c>)
 8014e46:	0092      	lsls	r2, r2, #2
 8014e48:	5cd3      	ldrb	r3, [r2, r3]
 8014e4a:	079b      	lsls	r3, r3, #30
 8014e4c:	0f9b      	lsrs	r3, r3, #30
 8014e4e:	b2db      	uxtb	r3, r3
 8014e50:	001a      	movs	r2, r3
 8014e52:	2128      	movs	r1, #40	; 0x28
 8014e54:	187b      	adds	r3, r7, r1
 8014e56:	701a      	strb	r2, [r3, #0]
          (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_PD_SPECREVISION, 1,
 8014e58:	187b      	adds	r3, r7, r1
 8014e5a:	2284      	movs	r2, #132	; 0x84
 8014e5c:	18b8      	adds	r0, r7, r2
 8014e5e:	2201      	movs	r2, #1
 8014e60:	210d      	movs	r1, #13
 8014e62:	f7fe fe05 	bl	8013a70 <TLV_add>
 8014e66:	e006      	b.n	8014e76 <GUI_SendNotification+0x676>
            break;
 8014e68:	46c0      	nop			; (mov r8, r8)
 8014e6a:	e004      	b.n	8014e76 <GUI_SendNotification+0x676>
 8014e6c:	20002c4c 	.word	0x20002c4c
 8014e70:	20002edc 	.word	0x20002edc
            break;
 8014e74:	46c0      	nop			; (mov r8, r8)
        }
      }
    }

    /* Check if notification linked to a measure report */
    if ((TypeNotification & GUI_NOTIF_MEASUREREPORTING) == GUI_NOTIF_MEASUREREPORTING)
 8014e76:	683a      	ldr	r2, [r7, #0]
 8014e78:	2380      	movs	r3, #128	; 0x80
 8014e7a:	011b      	lsls	r3, r3, #4
 8014e7c:	4013      	ands	r3, r2
 8014e7e:	d043      	beq.n	8014f08 <GUI_SendNotification+0x708>
    {
      uint32_t vsense = 0;
 8014e80:	2300      	movs	r3, #0
 8014e82:	61fb      	str	r3, [r7, #28]
      int32_t isense = 0;
 8014e84:	2300      	movs	r3, #0
 8014e86:	2290      	movs	r2, #144	; 0x90
 8014e88:	18ba      	adds	r2, r7, r2
 8014e8a:	6013      	str	r3, [r2, #0]

      (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_TIMESTAMP, 4, (uint8_t *)&Value);
 8014e8c:	2384      	movs	r3, #132	; 0x84
 8014e8e:	18f8      	adds	r0, r7, r3
 8014e90:	23a0      	movs	r3, #160	; 0xa0
 8014e92:	2208      	movs	r2, #8
 8014e94:	189b      	adds	r3, r3, r2
 8014e96:	19db      	adds	r3, r3, r7
 8014e98:	2204      	movs	r2, #4
 8014e9a:	2113      	movs	r1, #19
 8014e9c:	f7fe fde8 	bl	8013a70 <TLV_add>

      if (NULL != pCB_GetVoltage)
 8014ea0:	4b57      	ldr	r3, [pc, #348]	; (8015000 <GUI_SendNotification+0x800>)
 8014ea2:	681b      	ldr	r3, [r3, #0]
 8014ea4:	2b00      	cmp	r3, #0
 8014ea6:	d008      	beq.n	8014eba <GUI_SendNotification+0x6ba>
      {
        vsense = pCB_GetVoltage(PortNum);
 8014ea8:	4b55      	ldr	r3, [pc, #340]	; (8015000 <GUI_SendNotification+0x800>)
 8014eaa:	681b      	ldr	r3, [r3, #0]
 8014eac:	220f      	movs	r2, #15
 8014eae:	18ba      	adds	r2, r7, r2
 8014eb0:	7812      	ldrb	r2, [r2, #0]
 8014eb2:	0010      	movs	r0, r2
 8014eb4:	4798      	blx	r3
 8014eb6:	0003      	movs	r3, r0
 8014eb8:	61fb      	str	r3, [r7, #28]
      }
      if (NULL != pCB_GetVoltage)
 8014eba:	4b51      	ldr	r3, [pc, #324]	; (8015000 <GUI_SendNotification+0x800>)
 8014ebc:	681b      	ldr	r3, [r3, #0]
 8014ebe:	2b00      	cmp	r3, #0
 8014ec0:	d013      	beq.n	8014eea <GUI_SendNotification+0x6ea>
      {
        isense = pCB_GetCurrent(PortNum);
 8014ec2:	4b50      	ldr	r3, [pc, #320]	; (8015004 <GUI_SendNotification+0x804>)
 8014ec4:	681b      	ldr	r3, [r3, #0]
 8014ec6:	220f      	movs	r2, #15
 8014ec8:	18ba      	adds	r2, r7, r2
 8014eca:	7812      	ldrb	r2, [r2, #0]
 8014ecc:	0010      	movs	r0, r2
 8014ece:	4798      	blx	r3
 8014ed0:	0003      	movs	r3, r0
 8014ed2:	2290      	movs	r2, #144	; 0x90
 8014ed4:	18b9      	adds	r1, r7, r2
 8014ed6:	600b      	str	r3, [r1, #0]
        if (isense < 0)
 8014ed8:	18bb      	adds	r3, r7, r2
 8014eda:	681b      	ldr	r3, [r3, #0]
 8014edc:	2b00      	cmp	r3, #0
 8014ede:	da04      	bge.n	8014eea <GUI_SendNotification+0x6ea>
        {
          isense = -isense;
 8014ee0:	18bb      	adds	r3, r7, r2
 8014ee2:	681b      	ldr	r3, [r3, #0]
 8014ee4:	425b      	negs	r3, r3
 8014ee6:	18ba      	adds	r2, r7, r2
 8014ee8:	6013      	str	r3, [r2, #0]
        }
      }

      /* VBUS & IBUS level */
      vsense = ((uint32_t)(isense) << 16) | vsense;
 8014eea:	2390      	movs	r3, #144	; 0x90
 8014eec:	18fb      	adds	r3, r7, r3
 8014eee:	681b      	ldr	r3, [r3, #0]
 8014ef0:	041a      	lsls	r2, r3, #16
 8014ef2:	69fb      	ldr	r3, [r7, #28]
 8014ef4:	4313      	orrs	r3, r2
 8014ef6:	61fb      	str	r3, [r7, #28]
      (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_VBUS_LEVEL, 4, (uint8_t *)&vsense);
 8014ef8:	231c      	movs	r3, #28
 8014efa:	18fb      	adds	r3, r7, r3
 8014efc:	2284      	movs	r2, #132	; 0x84
 8014efe:	18b8      	adds	r0, r7, r2
 8014f00:	2204      	movs	r2, #4
 8014f02:	210c      	movs	r1, #12
 8014f04:	f7fe fdb4 	bl	8013a70 <TLV_add>
    }

    /* Check if timestamp */
    if ((TypeNotification & GUI_NOTIF_TIMESTAMP) == GUI_NOTIF_TIMESTAMP)
 8014f08:	683a      	ldr	r2, [r7, #0]
 8014f0a:	2380      	movs	r3, #128	; 0x80
 8014f0c:	01db      	lsls	r3, r3, #7
 8014f0e:	4013      	ands	r3, r2
 8014f10:	d009      	beq.n	8014f26 <GUI_SendNotification+0x726>
    {
      (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_TIMESTAMP, 4, (uint8_t *)&Value);
 8014f12:	2384      	movs	r3, #132	; 0x84
 8014f14:	18f8      	adds	r0, r7, r3
 8014f16:	23a0      	movs	r3, #160	; 0xa0
 8014f18:	2208      	movs	r2, #8
 8014f1a:	189b      	adds	r3, r3, r2
 8014f1c:	19db      	adds	r3, r3, r7
 8014f1e:	2204      	movs	r2, #4
 8014f20:	2113      	movs	r1, #19
 8014f22:	f7fe fda5 	bl	8013a70 <TLV_add>
    }

    /* Check if power change */
    if ((TypeNotification & GUI_NOTIF_POWER_EVENT) == GUI_NOTIF_POWER_EVENT)
 8014f26:	683a      	ldr	r2, [r7, #0]
 8014f28:	2380      	movs	r3, #128	; 0x80
 8014f2a:	021b      	lsls	r3, r3, #8
 8014f2c:	4013      	ands	r3, r2
 8014f2e:	d043      	beq.n	8014fb8 <GUI_SendNotification+0x7b8>
    {
      /* Is Connected*/
      (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_ISCONNECTED, 1, (uint8_t[]) { DPM_Params[PortNum].PE_Power });
 8014f30:	240f      	movs	r4, #15
 8014f32:	193b      	adds	r3, r7, r4
 8014f34:	781b      	ldrb	r3, [r3, #0]
 8014f36:	4a34      	ldr	r2, [pc, #208]	; (8015008 <GUI_SendNotification+0x808>)
 8014f38:	009b      	lsls	r3, r3, #2
 8014f3a:	18d3      	adds	r3, r2, r3
 8014f3c:	785b      	ldrb	r3, [r3, #1]
 8014f3e:	075b      	lsls	r3, r3, #29
 8014f40:	0f5b      	lsrs	r3, r3, #29
 8014f42:	b2db      	uxtb	r3, r3
 8014f44:	001a      	movs	r2, r3
 8014f46:	2118      	movs	r1, #24
 8014f48:	187b      	adds	r3, r7, r1
 8014f4a:	701a      	strb	r2, [r3, #0]
 8014f4c:	187b      	adds	r3, r7, r1
 8014f4e:	2584      	movs	r5, #132	; 0x84
 8014f50:	1978      	adds	r0, r7, r5
 8014f52:	2201      	movs	r2, #1
 8014f54:	2105      	movs	r1, #5
 8014f56:	f7fe fd8b 	bl	8013a70 <TLV_add>
      if (USBPD_POWER_NO == DPM_Params[PortNum].PE_Power)
 8014f5a:	193b      	adds	r3, r7, r4
 8014f5c:	781b      	ldrb	r3, [r3, #0]
 8014f5e:	4a2a      	ldr	r2, [pc, #168]	; (8015008 <GUI_SendNotification+0x808>)
 8014f60:	009b      	lsls	r3, r3, #2
 8014f62:	18d3      	adds	r3, r2, r3
 8014f64:	785b      	ldrb	r3, [r3, #1]
 8014f66:	075b      	lsls	r3, r3, #29
 8014f68:	0f5b      	lsrs	r3, r3, #29
 8014f6a:	b2db      	uxtb	r3, r3
 8014f6c:	2b00      	cmp	r3, #0
 8014f6e:	d123      	bne.n	8014fb8 <GUI_SendNotification+0x7b8>
      {
        /* CC line */
        (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_CC, 1, (uint8_t[]) { DPM_Params[PortNum].ActiveCCIs });
 8014f70:	193b      	adds	r3, r7, r4
 8014f72:	781a      	ldrb	r2, [r3, #0]
 8014f74:	4b24      	ldr	r3, [pc, #144]	; (8015008 <GUI_SendNotification+0x808>)
 8014f76:	0092      	lsls	r2, r2, #2
 8014f78:	5cd3      	ldrb	r3, [r2, r3]
 8014f7a:	061b      	lsls	r3, r3, #24
 8014f7c:	0f9b      	lsrs	r3, r3, #30
 8014f7e:	b2db      	uxtb	r3, r3
 8014f80:	001a      	movs	r2, r3
 8014f82:	2114      	movs	r1, #20
 8014f84:	187b      	adds	r3, r7, r1
 8014f86:	701a      	strb	r2, [r3, #0]
 8014f88:	187b      	adds	r3, r7, r1
 8014f8a:	1978      	adds	r0, r7, r5
 8014f8c:	2201      	movs	r2, #1
 8014f8e:	2106      	movs	r1, #6
 8014f90:	f7fe fd6e 	bl	8013a70 <TLV_add>
        /* PowerRole*/
        (void)TLV_add(&send_tlv, (uint8_t)GUI_IND_POWERROLE, 1, (uint8_t[]) { DPM_Params[PortNum].PE_PowerRole });
 8014f94:	193b      	adds	r3, r7, r4
 8014f96:	781a      	ldrb	r2, [r3, #0]
 8014f98:	4b1b      	ldr	r3, [pc, #108]	; (8015008 <GUI_SendNotification+0x808>)
 8014f9a:	0092      	lsls	r2, r2, #2
 8014f9c:	5cd3      	ldrb	r3, [r2, r3]
 8014f9e:	075b      	lsls	r3, r3, #29
 8014fa0:	0fdb      	lsrs	r3, r3, #31
 8014fa2:	b2db      	uxtb	r3, r3
 8014fa4:	001a      	movs	r2, r3
 8014fa6:	2110      	movs	r1, #16
 8014fa8:	187b      	adds	r3, r7, r1
 8014faa:	701a      	strb	r2, [r3, #0]
 8014fac:	187b      	adds	r3, r7, r1
 8014fae:	1978      	adds	r0, r7, r5
 8014fb0:	2201      	movs	r2, #1
 8014fb2:	2108      	movs	r1, #8
 8014fb4:	f7fe fd5c 	bl	8013a70 <TLV_add>
      }
    }

    TLV_deinit_encode(&send_tlv);
 8014fb8:	2384      	movs	r3, #132	; 0x84
 8014fba:	18fb      	adds	r3, r7, r3
 8014fbc:	0018      	movs	r0, r3
 8014fbe:	f7fe feb9 	bl	8013d34 <TLV_deinit_encode>

    if (0U != TLV_get_string_length(Processed))
 8014fc2:	4b12      	ldr	r3, [pc, #72]	; (801500c <GUI_SendNotification+0x80c>)
 8014fc4:	0018      	movs	r0, r3
 8014fc6:	f7fe ff5b 	bl	8013e80 <TLV_get_string_length>
 8014fca:	1e03      	subs	r3, r0, #0
 8014fcc:	d010      	beq.n	8014ff0 <GUI_SendNotification+0x7f0>
    {
      *pMsgToSend = Processed;
 8014fce:	68bb      	ldr	r3, [r7, #8]
 8014fd0:	4a0e      	ldr	r2, [pc, #56]	; (801500c <GUI_SendNotification+0x80c>)
 8014fd2:	601a      	str	r2, [r3, #0]
      *pSizeMsg = (uint8_t)TLV_get_string_length(Processed) + 8U;
 8014fd4:	4b0d      	ldr	r3, [pc, #52]	; (801500c <GUI_SendNotification+0x80c>)
 8014fd6:	0018      	movs	r0, r3
 8014fd8:	f7fe ff52 	bl	8013e80 <TLV_get_string_length>
 8014fdc:	0003      	movs	r3, r0
 8014fde:	b2db      	uxtb	r3, r3
 8014fe0:	3308      	adds	r3, #8
 8014fe2:	b2da      	uxtb	r2, r3
 8014fe4:	687b      	ldr	r3, [r7, #4]
 8014fe6:	701a      	strb	r2, [r3, #0]
      gui_state = GUI_STATE_RUNNING;
 8014fe8:	2397      	movs	r3, #151	; 0x97
 8014fea:	18fb      	adds	r3, r7, r3
 8014fec:	2201      	movs	r2, #1
 8014fee:	701a      	strb	r2, [r3, #0]

    }

  }

  return gui_state;
 8014ff0:	2397      	movs	r3, #151	; 0x97
 8014ff2:	18fb      	adds	r3, r7, r3
 8014ff4:	781b      	ldrb	r3, [r3, #0]
}
 8014ff6:	0018      	movs	r0, r3
 8014ff8:	46bd      	mov	sp, r7
 8014ffa:	b026      	add	sp, #152	; 0x98
 8014ffc:	bdb0      	pop	{r4, r5, r7, pc}
 8014ffe:	46c0      	nop			; (mov r8, r8)
 8015000:	20002ed0 	.word	0x20002ed0
 8015004:	20002ed4 	.word	0x20002ed4
 8015008:	20002c4c 	.word	0x20002c4c
 801500c:	20002dbc 	.word	0x20002dbc

08015010 <GUI_PostNotificationMessage>:
  * @param  PortNum   Port number
  * @param  EventVal Event vale @ref USBPD_NotifyEventValue_TypeDef
  * @retval None
  */
void GUI_PostNotificationMessage(uint8_t PortNum, uint16_t EventVal)
{
 8015010:	b590      	push	{r4, r7, lr}
 8015012:	b085      	sub	sp, #20
 8015014:	af00      	add	r7, sp, #0
 8015016:	0002      	movs	r2, r0
 8015018:	1dfb      	adds	r3, r7, #7
 801501a:	701a      	strb	r2, [r3, #0]
 801501c:	1d3b      	adds	r3, r7, #4
 801501e:	1c0a      	adds	r2, r1, #0
 8015020:	801a      	strh	r2, [r3, #0]
#if defined(_SNK) || defined(_DRP)
  if ((uint16_t)USBPD_NOTIFY_REQUEST_ACCEPTED == EventVal)
 8015022:	1d3b      	adds	r3, r7, #4
 8015024:	881b      	ldrh	r3, [r3, #0]
 8015026:	2b01      	cmp	r3, #1
 8015028:	d136      	bne.n	8015098 <GUI_PostNotificationMessage+0x88>
  {
    DPM_USER_Settings[PortNum].DPM_SNKRequestedPower.OperatingVoltageInmVunits
      = GUI_SaveInformation[PortNum].RequestedVoltage;
 801502a:	1dfb      	adds	r3, r7, #7
 801502c:	781a      	ldrb	r2, [r3, #0]
    DPM_USER_Settings[PortNum].DPM_SNKRequestedPower.OperatingVoltageInmVunits
 801502e:	1dfb      	adds	r3, r7, #7
 8015030:	7818      	ldrb	r0, [r3, #0]
      = GUI_SaveInformation[PortNum].RequestedVoltage;
 8015032:	4927      	ldr	r1, [pc, #156]	; (80150d0 <GUI_PostNotificationMessage+0xc0>)
 8015034:	0013      	movs	r3, r2
 8015036:	00db      	lsls	r3, r3, #3
 8015038:	1a9b      	subs	r3, r3, r2
 801503a:	011b      	lsls	r3, r3, #4
 801503c:	18cb      	adds	r3, r1, r3
 801503e:	3344      	adds	r3, #68	; 0x44
 8015040:	681a      	ldr	r2, [r3, #0]
 8015042:	4924      	ldr	r1, [pc, #144]	; (80150d4 <GUI_PostNotificationMessage+0xc4>)
 8015044:	2374      	movs	r3, #116	; 0x74
 8015046:	4343      	muls	r3, r0
 8015048:	18cb      	adds	r3, r1, r3
 801504a:	3308      	adds	r3, #8
 801504c:	601a      	str	r2, [r3, #0]
    DPM_USER_Settings[PortNum].DPM_SNKRequestedPower.OperatingPowerInmWunits
      = (GUI_SaveInformation[PortNum].RequestedVoltage * GUI_SaveInformation[PortNum].RequestedCurrent) / 1000U;
 801504e:	1dfb      	adds	r3, r7, #7
 8015050:	781a      	ldrb	r2, [r3, #0]
 8015052:	491f      	ldr	r1, [pc, #124]	; (80150d0 <GUI_PostNotificationMessage+0xc0>)
 8015054:	0013      	movs	r3, r2
 8015056:	00db      	lsls	r3, r3, #3
 8015058:	1a9b      	subs	r3, r3, r2
 801505a:	011b      	lsls	r3, r3, #4
 801505c:	18cb      	adds	r3, r1, r3
 801505e:	3344      	adds	r3, #68	; 0x44
 8015060:	6819      	ldr	r1, [r3, #0]
 8015062:	1dfb      	adds	r3, r7, #7
 8015064:	781a      	ldrb	r2, [r3, #0]
 8015066:	481a      	ldr	r0, [pc, #104]	; (80150d0 <GUI_PostNotificationMessage+0xc0>)
 8015068:	0013      	movs	r3, r2
 801506a:	00db      	lsls	r3, r3, #3
 801506c:	1a9b      	subs	r3, r3, r2
 801506e:	011b      	lsls	r3, r3, #4
 8015070:	18c3      	adds	r3, r0, r3
 8015072:	3348      	adds	r3, #72	; 0x48
 8015074:	681b      	ldr	r3, [r3, #0]
 8015076:	434b      	muls	r3, r1
 8015078:	001a      	movs	r2, r3
    DPM_USER_Settings[PortNum].DPM_SNKRequestedPower.OperatingPowerInmWunits
 801507a:	1dfb      	adds	r3, r7, #7
 801507c:	781c      	ldrb	r4, [r3, #0]
      = (GUI_SaveInformation[PortNum].RequestedVoltage * GUI_SaveInformation[PortNum].RequestedCurrent) / 1000U;
 801507e:	23fa      	movs	r3, #250	; 0xfa
 8015080:	0099      	lsls	r1, r3, #2
 8015082:	0010      	movs	r0, r2
 8015084:	f7f1 f8b4 	bl	80061f0 <__udivsi3>
 8015088:	0003      	movs	r3, r0
 801508a:	0019      	movs	r1, r3
 801508c:	4a11      	ldr	r2, [pc, #68]	; (80150d4 <GUI_PostNotificationMessage+0xc4>)
 801508e:	2374      	movs	r3, #116	; 0x74
 8015090:	4363      	muls	r3, r4
 8015092:	18d3      	adds	r3, r2, r3
 8015094:	3314      	adds	r3, #20
 8015096:	6019      	str	r1, [r3, #0]
  }
#endif /* _SNK || _DRP */

  /* Send a notitification only if GUI is running */
  if (GUI_State == GUI_STATE_RUNNING)
 8015098:	4b0f      	ldr	r3, [pc, #60]	; (80150d8 <GUI_PostNotificationMessage+0xc8>)
 801509a:	781b      	ldrb	r3, [r3, #0]
 801509c:	2b01      	cmp	r3, #1
 801509e:	d113      	bne.n	80150c8 <GUI_PostNotificationMessage+0xb8>
  {
    uint32_t event = (uint32_t)GUI_USER_EVENT_GUI
                     | ((uint32_t)PortNum << GUI_PE_PORT_NUM_Pos)
 80150a0:	1dfb      	adds	r3, r7, #7
 80150a2:	781b      	ldrb	r3, [r3, #0]
 80150a4:	061a      	lsls	r2, r3, #24
                     | ((uint32_t)EventVal << GUI_PE_NOTIF_Pos);
 80150a6:	1d3b      	adds	r3, r7, #4
 80150a8:	881b      	ldrh	r3, [r3, #0]
 80150aa:	011b      	lsls	r3, r3, #4
 80150ac:	4313      	orrs	r3, r2
    uint32_t event = (uint32_t)GUI_USER_EVENT_GUI
 80150ae:	2201      	movs	r2, #1
 80150b0:	4313      	orrs	r3, r2
 80150b2:	60fb      	str	r3, [r7, #12]
#if defined(_RTOS) || defined(USBPD_THREADX)
    GUIOS_PUT_MESSAGE_QUEUE(GUIMsgBox, event, 0U);
 80150b4:	68fb      	ldr	r3, [r7, #12]
 80150b6:	60bb      	str	r3, [r7, #8]
 80150b8:	4b08      	ldr	r3, [pc, #32]	; (80150dc <GUI_PostNotificationMessage+0xcc>)
 80150ba:	6818      	ldr	r0, [r3, #0]
 80150bc:	2308      	movs	r3, #8
 80150be:	18f9      	adds	r1, r7, r3
 80150c0:	2300      	movs	r3, #0
 80150c2:	2200      	movs	r2, #0
 80150c4:	f7f8 ffaa 	bl	800e01c <osMessageQueuePut>
    GUI_RXProcess(GUI_Flag);
    GUI_Flag = GUI_USER_EVENT_NONE;
#endif /* USE_STM32_UTILITY_OS */
#endif /* _RTOS */
  }
}
 80150c8:	46c0      	nop			; (mov r8, r8)
 80150ca:	46bd      	mov	sp, r7
 80150cc:	b005      	add	sp, #20
 80150ce:	bd90      	pop	{r4, r7, pc}
 80150d0:	20002edc 	.word	0x20002edc
 80150d4:	20000028 	.word	0x20000028
 80150d8:	20002ebc 	.word	0x20002ebc
 80150dc:	20002ec0 	.word	0x20002ec0

080150e0 <GUI_SaveInfo>:
  * @param  Ptr     Pointer on the data
  * @param  Size    Nb of bytes to be updated in GUI
  * @retval None
  */
void GUI_SaveInfo(uint8_t PortNum, uint8_t DataId, uint8_t *Ptr, uint32_t Size)
{
 80150e0:	b590      	push	{r4, r7, lr}
 80150e2:	b08b      	sub	sp, #44	; 0x2c
 80150e4:	af00      	add	r7, sp, #0
 80150e6:	60ba      	str	r2, [r7, #8]
 80150e8:	607b      	str	r3, [r7, #4]
 80150ea:	230f      	movs	r3, #15
 80150ec:	18fb      	adds	r3, r7, r3
 80150ee:	1c02      	adds	r2, r0, #0
 80150f0:	701a      	strb	r2, [r3, #0]
 80150f2:	200e      	movs	r0, #14
 80150f4:	183b      	adds	r3, r7, r0
 80150f6:	1c0a      	adds	r2, r1, #0
 80150f8:	701a      	strb	r2, [r3, #0]
  uint32_t index;

  /* Check type of information targeted by request */
  switch (DataId)
 80150fa:	183b      	adds	r3, r7, r0
 80150fc:	781b      	ldrb	r3, [r3, #0]
 80150fe:	2b13      	cmp	r3, #19
 8015100:	d900      	bls.n	8015104 <GUI_SaveInfo+0x24>
 8015102:	e0ca      	b.n	801529a <GUI_SaveInfo+0x1ba>
 8015104:	009a      	lsls	r2, r3, #2
 8015106:	4b6b      	ldr	r3, [pc, #428]	; (80152b4 <GUI_SaveInfo+0x1d4>)
 8015108:	18d3      	adds	r3, r2, r3
 801510a:	681b      	ldr	r3, [r3, #0]
 801510c:	469f      	mov	pc, r3
  {
    /* Case requested DO position Data information :
    */
    case USBPD_CORE_DATATYPE_RDO_POSITION :
      if (Size == 4U)
 801510e:	687b      	ldr	r3, [r7, #4]
 8015110:	2b04      	cmp	r3, #4
 8015112:	d000      	beq.n	8015116 <GUI_SaveInfo+0x36>
 8015114:	e0c3      	b.n	801529e <GUI_SaveInfo+0x1be>
      {
        uint8_t *temp;
        temp = (uint8_t *)&GUI_SaveInformation[PortNum].RDOPosition;
 8015116:	240f      	movs	r4, #15
 8015118:	193b      	adds	r3, r7, r4
 801511a:	781a      	ldrb	r2, [r3, #0]
 801511c:	0013      	movs	r3, r2
 801511e:	00db      	lsls	r3, r3, #3
 8015120:	1a9b      	subs	r3, r3, r2
 8015122:	011b      	lsls	r3, r3, #4
 8015124:	3340      	adds	r3, #64	; 0x40
 8015126:	001a      	movs	r2, r3
 8015128:	4b63      	ldr	r3, [pc, #396]	; (80152b8 <GUI_SaveInfo+0x1d8>)
 801512a:	18d3      	adds	r3, r2, r3
 801512c:	613b      	str	r3, [r7, #16]
        (void)memcpy(temp, Ptr, Size);
 801512e:	687a      	ldr	r2, [r7, #4]
 8015130:	68b9      	ldr	r1, [r7, #8]
 8015132:	693b      	ldr	r3, [r7, #16]
 8015134:	0018      	movs	r0, r3
 8015136:	f003 f8f9 	bl	801832c <memcpy>
        GUI_SaveInformation[PortNum].RDOPositionPrevious = *Ptr;
 801513a:	68bb      	ldr	r3, [r7, #8]
 801513c:	7819      	ldrb	r1, [r3, #0]
 801513e:	193b      	adds	r3, r7, r4
 8015140:	781a      	ldrb	r2, [r3, #0]
 8015142:	0008      	movs	r0, r1
 8015144:	495c      	ldr	r1, [pc, #368]	; (80152b8 <GUI_SaveInfo+0x1d8>)
 8015146:	0013      	movs	r3, r2
 8015148:	00db      	lsls	r3, r3, #3
 801514a:	1a9b      	subs	r3, r3, r2
 801514c:	011b      	lsls	r3, r3, #4
 801514e:	18cb      	adds	r3, r1, r3
 8015150:	334c      	adds	r3, #76	; 0x4c
 8015152:	6018      	str	r0, [r3, #0]
        temp = (uint8_t *)&GUI_SaveInformation[PortNum].RDOPositionPrevious;
 8015154:	193b      	adds	r3, r7, r4
 8015156:	781a      	ldrb	r2, [r3, #0]
 8015158:	0013      	movs	r3, r2
 801515a:	00db      	lsls	r3, r3, #3
 801515c:	1a9b      	subs	r3, r3, r2
 801515e:	011b      	lsls	r3, r3, #4
 8015160:	3348      	adds	r3, #72	; 0x48
 8015162:	001a      	movs	r2, r3
 8015164:	4b54      	ldr	r3, [pc, #336]	; (80152b8 <GUI_SaveInfo+0x1d8>)
 8015166:	18d3      	adds	r3, r2, r3
 8015168:	3304      	adds	r3, #4
 801516a:	613b      	str	r3, [r7, #16]
        (void)memcpy(temp, Ptr, Size);
 801516c:	687a      	ldr	r2, [r7, #4]
 801516e:	68b9      	ldr	r1, [r7, #8]
 8015170:	693b      	ldr	r3, [r7, #16]
 8015172:	0018      	movs	r0, r3
 8015174:	f003 f8da 	bl	801832c <memcpy>
      }
      break;
 8015178:	e091      	b.n	801529e <GUI_SaveInfo+0x1be>

    /* Case Received Source PDO values Data information :
    */
    case USBPD_CORE_DATATYPE_RCV_SRC_PDO :
      if (Size <= (USBPD_MAX_NB_PDO * 4U))
 801517a:	687b      	ldr	r3, [r7, #4]
 801517c:	2b1c      	cmp	r3, #28
 801517e:	d900      	bls.n	8015182 <GUI_SaveInfo+0xa2>
 8015180:	e08f      	b.n	80152a2 <GUI_SaveInfo+0x1c2>
      {
        uint8_t *rdo;
        GUI_SaveInformation[PortNum].NumberOfRcvSRCPDO = (Size / 4U);
 8015182:	230f      	movs	r3, #15
 8015184:	18fb      	adds	r3, r7, r3
 8015186:	781a      	ldrb	r2, [r3, #0]
 8015188:	687b      	ldr	r3, [r7, #4]
 801518a:	0899      	lsrs	r1, r3, #2
 801518c:	484a      	ldr	r0, [pc, #296]	; (80152b8 <GUI_SaveInfo+0x1d8>)
 801518e:	0013      	movs	r3, r2
 8015190:	00db      	lsls	r3, r3, #3
 8015192:	1a9b      	subs	r3, r3, r2
 8015194:	011b      	lsls	r3, r3, #4
 8015196:	18c3      	adds	r3, r0, r3
 8015198:	331c      	adds	r3, #28
 801519a:	6019      	str	r1, [r3, #0]
        /* Copy PDO data in DPM Handle field */
        for (index = 0U; index < (Size / 4U); index++)
 801519c:	2300      	movs	r3, #0
 801519e:	627b      	str	r3, [r7, #36]	; 0x24
 80151a0:	e018      	b.n	80151d4 <GUI_SaveInfo+0xf4>
        {
          rdo = (uint8_t *)&GUI_SaveInformation[PortNum].ListOfRcvSRCPDO[index];
 80151a2:	230f      	movs	r3, #15
 80151a4:	18fb      	adds	r3, r7, r3
 80151a6:	781a      	ldrb	r2, [r3, #0]
 80151a8:	0013      	movs	r3, r2
 80151aa:	00db      	lsls	r3, r3, #3
 80151ac:	1a9b      	subs	r3, r3, r2
 80151ae:	009b      	lsls	r3, r3, #2
 80151b0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80151b2:	189b      	adds	r3, r3, r2
 80151b4:	009a      	lsls	r2, r3, #2
 80151b6:	4b40      	ldr	r3, [pc, #256]	; (80152b8 <GUI_SaveInfo+0x1d8>)
 80151b8:	18d3      	adds	r3, r2, r3
 80151ba:	617b      	str	r3, [r7, #20]
          (void)memcpy(rdo, (Ptr + (index * 4U)), (4U * sizeof(uint8_t)));
 80151bc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80151be:	009b      	lsls	r3, r3, #2
 80151c0:	68ba      	ldr	r2, [r7, #8]
 80151c2:	18d1      	adds	r1, r2, r3
 80151c4:	697b      	ldr	r3, [r7, #20]
 80151c6:	2204      	movs	r2, #4
 80151c8:	0018      	movs	r0, r3
 80151ca:	f003 f8af 	bl	801832c <memcpy>
        for (index = 0U; index < (Size / 4U); index++)
 80151ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80151d0:	3301      	adds	r3, #1
 80151d2:	627b      	str	r3, [r7, #36]	; 0x24
 80151d4:	687b      	ldr	r3, [r7, #4]
 80151d6:	089b      	lsrs	r3, r3, #2
 80151d8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80151da:	429a      	cmp	r2, r3
 80151dc:	d3e1      	bcc.n	80151a2 <GUI_SaveInfo+0xc2>
        }
      }
      break;
 80151de:	e060      	b.n	80152a2 <GUI_SaveInfo+0x1c2>

    /* Case Received Sink PDO values Data information :
    */
    case USBPD_CORE_DATATYPE_RCV_SNK_PDO :
      if (Size <= (USBPD_MAX_NB_PDO * 4U))
 80151e0:	687b      	ldr	r3, [r7, #4]
 80151e2:	2b1c      	cmp	r3, #28
 80151e4:	d85f      	bhi.n	80152a6 <GUI_SaveInfo+0x1c6>
      {
        uint8_t *rdo;
        GUI_SaveInformation[PortNum].NumberOfRcvSNKPDO = (Size / 4U);
 80151e6:	230f      	movs	r3, #15
 80151e8:	18fb      	adds	r3, r7, r3
 80151ea:	781a      	ldrb	r2, [r3, #0]
 80151ec:	687b      	ldr	r3, [r7, #4]
 80151ee:	0899      	lsrs	r1, r3, #2
 80151f0:	4831      	ldr	r0, [pc, #196]	; (80152b8 <GUI_SaveInfo+0x1d8>)
 80151f2:	0013      	movs	r3, r2
 80151f4:	00db      	lsls	r3, r3, #3
 80151f6:	1a9b      	subs	r3, r3, r2
 80151f8:	011b      	lsls	r3, r3, #4
 80151fa:	18c3      	adds	r3, r0, r3
 80151fc:	333c      	adds	r3, #60	; 0x3c
 80151fe:	6019      	str	r1, [r3, #0]
        /* Copy PDO data in DPM Handle field */
        for (index = 0U; index < (Size / 4U); index++)
 8015200:	2300      	movs	r3, #0
 8015202:	627b      	str	r3, [r7, #36]	; 0x24
 8015204:	e019      	b.n	801523a <GUI_SaveInfo+0x15a>
        {
          rdo = (uint8_t *)&GUI_SaveInformation[PortNum].ListOfRcvSNKPDO[index];
 8015206:	230f      	movs	r3, #15
 8015208:	18fb      	adds	r3, r7, r3
 801520a:	781a      	ldrb	r2, [r3, #0]
 801520c:	0013      	movs	r3, r2
 801520e:	00db      	lsls	r3, r3, #3
 8015210:	1a9b      	subs	r3, r3, r2
 8015212:	009b      	lsls	r3, r3, #2
 8015214:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8015216:	189b      	adds	r3, r3, r2
 8015218:	3308      	adds	r3, #8
 801521a:	009a      	lsls	r2, r3, #2
 801521c:	4b26      	ldr	r3, [pc, #152]	; (80152b8 <GUI_SaveInfo+0x1d8>)
 801521e:	18d3      	adds	r3, r2, r3
 8015220:	61bb      	str	r3, [r7, #24]
          (void)memcpy(rdo, (Ptr + (index * 4U)), (4U * sizeof(uint8_t)));
 8015222:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8015224:	009b      	lsls	r3, r3, #2
 8015226:	68ba      	ldr	r2, [r7, #8]
 8015228:	18d1      	adds	r1, r2, r3
 801522a:	69bb      	ldr	r3, [r7, #24]
 801522c:	2204      	movs	r2, #4
 801522e:	0018      	movs	r0, r3
 8015230:	f003 f87c 	bl	801832c <memcpy>
        for (index = 0U; index < (Size / 4U); index++)
 8015234:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8015236:	3301      	adds	r3, #1
 8015238:	627b      	str	r3, [r7, #36]	; 0x24
 801523a:	687b      	ldr	r3, [r7, #4]
 801523c:	089b      	lsrs	r3, r3, #2
 801523e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8015240:	429a      	cmp	r2, r3
 8015242:	d3e0      	bcc.n	8015206 <GUI_SaveInfo+0x126>
        }
      }
      break;
 8015244:	e02f      	b.n	80152a6 <GUI_SaveInfo+0x1c6>

    /* Case Received Request PDO Data information :
    */
    case USBPD_CORE_DATATYPE_RCV_REQ_PDO :
      if (Size == 4U)
 8015246:	687b      	ldr	r3, [r7, #4]
 8015248:	2b04      	cmp	r3, #4
 801524a:	d12e      	bne.n	80152aa <GUI_SaveInfo+0x1ca>
      {
        uint8_t *rdo;
        rdo = (uint8_t *)&GUI_SaveInformation[PortNum].RcvRequestDOMsg;
 801524c:	230f      	movs	r3, #15
 801524e:	18fb      	adds	r3, r7, r3
 8015250:	781a      	ldrb	r2, [r3, #0]
 8015252:	0013      	movs	r3, r2
 8015254:	00db      	lsls	r3, r3, #3
 8015256:	1a9b      	subs	r3, r3, r2
 8015258:	011b      	lsls	r3, r3, #4
 801525a:	3350      	adds	r3, #80	; 0x50
 801525c:	001a      	movs	r2, r3
 801525e:	4b16      	ldr	r3, [pc, #88]	; (80152b8 <GUI_SaveInfo+0x1d8>)
 8015260:	18d3      	adds	r3, r2, r3
 8015262:	61fb      	str	r3, [r7, #28]
        (void)memcpy(rdo, Ptr, Size);
 8015264:	687a      	ldr	r2, [r7, #4]
 8015266:	68b9      	ldr	r1, [r7, #8]
 8015268:	69fb      	ldr	r3, [r7, #28]
 801526a:	0018      	movs	r0, r3
 801526c:	f003 f85e 	bl	801832c <memcpy>
      }
      break;
 8015270:	e01b      	b.n	80152aa <GUI_SaveInfo+0x1ca>
#endif /* _SRC_CAPA_EXT */
#if defined(USBPDCORE_SNK_CAPA_EXT)
    case USBPD_CORE_SNK_EXTENDED_CAPA :
    {
      uint8_t  *_snk_ext_capa;
      _snk_ext_capa = (uint8_t *)&GUI_SaveInformation[PortNum].RcvSNKExtendedCapa;
 8015272:	230f      	movs	r3, #15
 8015274:	18fb      	adds	r3, r7, r3
 8015276:	781a      	ldrb	r2, [r3, #0]
 8015278:	0013      	movs	r3, r2
 801527a:	00db      	lsls	r3, r3, #3
 801527c:	1a9b      	subs	r3, r3, r2
 801527e:	011b      	lsls	r3, r3, #4
 8015280:	3350      	adds	r3, #80	; 0x50
 8015282:	001a      	movs	r2, r3
 8015284:	4b0c      	ldr	r3, [pc, #48]	; (80152b8 <GUI_SaveInfo+0x1d8>)
 8015286:	18d3      	adds	r3, r2, r3
 8015288:	3304      	adds	r3, #4
 801528a:	623b      	str	r3, [r7, #32]
      (void)memcpy(_snk_ext_capa, Ptr, Size);
 801528c:	687a      	ldr	r2, [r7, #4]
 801528e:	68b9      	ldr	r1, [r7, #8]
 8015290:	6a3b      	ldr	r3, [r7, #32]
 8015292:	0018      	movs	r0, r3
 8015294:	f003 f84a 	bl	801832c <memcpy>
      break;
 8015298:	e008      	b.n	80152ac <GUI_SaveInfo+0x1cc>
#endif /* _VCONN_SUPPORT */

    /* In case of unexpected data type (Set request could not be fulfilled) :
     */
    default :
      break;
 801529a:	46c0      	nop			; (mov r8, r8)
 801529c:	e006      	b.n	80152ac <GUI_SaveInfo+0x1cc>
      break;
 801529e:	46c0      	nop			; (mov r8, r8)
 80152a0:	e004      	b.n	80152ac <GUI_SaveInfo+0x1cc>
      break;
 80152a2:	46c0      	nop			; (mov r8, r8)
 80152a4:	e002      	b.n	80152ac <GUI_SaveInfo+0x1cc>
      break;
 80152a6:	46c0      	nop			; (mov r8, r8)
 80152a8:	e000      	b.n	80152ac <GUI_SaveInfo+0x1cc>
      break;
 80152aa:	46c0      	nop			; (mov r8, r8)
  }
}
 80152ac:	46c0      	nop			; (mov r8, r8)
 80152ae:	46bd      	mov	sp, r7
 80152b0:	b00b      	add	sp, #44	; 0x2c
 80152b2:	bd90      	pop	{r4, r7, pc}
 80152b4:	08019bc0 	.word	0x08019bc0
 80152b8:	20002edc 	.word	0x20002edc

080152bc <Send_DpmInitCnf>:
  * @param  PortNum   Port number
  * @param  pEncodedMsg Pointer on the message to be encoded
  * @retval None
  */
static void Send_DpmInitCnf(uint8_t PortNum, uint8_t *pEncodedMsg)
{
 80152bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80152be:	b091      	sub	sp, #68	; 0x44
 80152c0:	af00      	add	r7, sp, #0
 80152c2:	0002      	movs	r2, r0
 80152c4:	6039      	str	r1, [r7, #0]
 80152c6:	1dfb      	adds	r3, r7, #7
 80152c8:	701a      	strb	r2, [r3, #0]
  TLV_ToSend_Data_t ToSendTLV;
  (void)TLV_init_encode(&ToSendTLV, __GUI_SET_TAG_ID(PortNum, DPM_INIT_CNF), TLV_SIZE_MAX, pEncodedMsg);
 80152ca:	1dfb      	adds	r3, r7, #7
 80152cc:	781b      	ldrb	r3, [r3, #0]
 80152ce:	015b      	lsls	r3, r3, #5
 80152d0:	b25b      	sxtb	r3, r3
 80152d2:	2203      	movs	r2, #3
 80152d4:	4313      	orrs	r3, r2
 80152d6:	b25b      	sxtb	r3, r3
 80152d8:	b2d9      	uxtb	r1, r3
 80152da:	683b      	ldr	r3, [r7, #0]
 80152dc:	2280      	movs	r2, #128	; 0x80
 80152de:	0052      	lsls	r2, r2, #1
 80152e0:	2028      	movs	r0, #40	; 0x28
 80152e2:	1838      	adds	r0, r7, r0
 80152e4:	f7fe fb61 	bl	80139aa <TLV_init_encode>

  /* Information by board */
  if (0U == PortNum)
 80152e8:	1dfb      	adds	r3, r7, #7
 80152ea:	781b      	ldrb	r3, [r3, #0]
 80152ec:	2b00      	cmp	r3, #0
 80152ee:	d163      	bne.n	80153b8 <Send_DpmInitCnf+0xfc>
  {
    /* HWBoardVersion */
    const uint8_t *hwversion;
    if (NULL != pCB_HWBoardVersion)
 80152f0:	4bc2      	ldr	r3, [pc, #776]	; (80155fc <Send_DpmInitCnf+0x340>)
 80152f2:	681b      	ldr	r3, [r3, #0]
 80152f4:	2b00      	cmp	r3, #0
 80152f6:	d005      	beq.n	8015304 <Send_DpmInitCnf+0x48>
    {
      hwversion = pCB_HWBoardVersion();
 80152f8:	4bc0      	ldr	r3, [pc, #768]	; (80155fc <Send_DpmInitCnf+0x340>)
 80152fa:	681b      	ldr	r3, [r3, #0]
 80152fc:	4798      	blx	r3
 80152fe:	0003      	movs	r3, r0
 8015300:	63fb      	str	r3, [r7, #60]	; 0x3c
 8015302:	e001      	b.n	8015308 <Send_DpmInitCnf+0x4c>
    }
    else
    {
      hwversion = (uint8_t *) "UNKNOWN";
 8015304:	4bbe      	ldr	r3, [pc, #760]	; (8015600 <Send_DpmInitCnf+0x344>)
 8015306:	63fb      	str	r3, [r7, #60]	; 0x3c
    }
    (void)TLV_add(&ToSendTLV, (uint8_t)GUI_INIT_HWBOARDVERSION, (uint16_t)(strlen((const char *)hwversion)), hwversion);
 8015308:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801530a:	0018      	movs	r0, r3
 801530c:	f7f0 ff5e 	bl	80061cc <strlen>
 8015310:	0003      	movs	r3, r0
 8015312:	b29a      	uxth	r2, r3
 8015314:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8015316:	2128      	movs	r1, #40	; 0x28
 8015318:	1878      	adds	r0, r7, r1
 801531a:	2100      	movs	r1, #0
 801531c:	f7fe fba8 	bl	8013a70 <TLV_add>

    /* HWPDType */
    const uint8_t *hwpdtype;
    if (NULL != pCB_HWBoardVersion)
 8015320:	4bb6      	ldr	r3, [pc, #728]	; (80155fc <Send_DpmInitCnf+0x340>)
 8015322:	681b      	ldr	r3, [r3, #0]
 8015324:	2b00      	cmp	r3, #0
 8015326:	d005      	beq.n	8015334 <Send_DpmInitCnf+0x78>
    {
      hwpdtype  = pCB_HWPDType();
 8015328:	4bb6      	ldr	r3, [pc, #728]	; (8015604 <Send_DpmInitCnf+0x348>)
 801532a:	681b      	ldr	r3, [r3, #0]
 801532c:	4798      	blx	r3
 801532e:	0003      	movs	r3, r0
 8015330:	63bb      	str	r3, [r7, #56]	; 0x38
 8015332:	e001      	b.n	8015338 <Send_DpmInitCnf+0x7c>
    }
    else
    {
      hwpdtype = (uint8_t *) "UNKNOWN";
 8015334:	4bb2      	ldr	r3, [pc, #712]	; (8015600 <Send_DpmInitCnf+0x344>)
 8015336:	63bb      	str	r3, [r7, #56]	; 0x38
    }
    (void)TLV_add(&ToSendTLV, (uint8_t)GUI_INIT_HWPDTYPE, (uint16_t)(strlen((const char *)hwpdtype)), hwpdtype);
 8015338:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801533a:	0018      	movs	r0, r3
 801533c:	f7f0 ff46 	bl	80061cc <strlen>
 8015340:	0003      	movs	r3, r0
 8015342:	b29a      	uxth	r2, r3
 8015344:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8015346:	2428      	movs	r4, #40	; 0x28
 8015348:	1938      	adds	r0, r7, r4
 801534a:	2101      	movs	r1, #1
 801534c:	f7fe fb90 	bl	8013a70 <TLV_add>

    /* NbPortMax */
    (void)TLV_add(&ToSendTLV, (uint8_t)GUI_INIT_NBPORTMAX, 1, (uint8_t[]) { USBPD_PORT_COUNT });
 8015350:	2124      	movs	r1, #36	; 0x24
 8015352:	187b      	adds	r3, r7, r1
 8015354:	2201      	movs	r2, #1
 8015356:	701a      	strb	r2, [r3, #0]
 8015358:	187b      	adds	r3, r7, r1
 801535a:	1938      	adds	r0, r7, r4
 801535c:	2201      	movs	r2, #1
 801535e:	2102      	movs	r1, #2
 8015360:	f7fe fb86 	bl	8013a70 <TLV_add>
    /* FW Version */
    (void)TLV_add(&ToSendTLV, (uint8_t)GUI_INIT_FWVERSION, 8, (uint8_t[])
    {
 8015364:	251c      	movs	r5, #28
 8015366:	197b      	adds	r3, r7, r5
 8015368:	4aa7      	ldr	r2, [pc, #668]	; (8015608 <Send_DpmInitCnf+0x34c>)
 801536a:	ca03      	ldmia	r2!, {r0, r1}
 801536c:	c303      	stmia	r3!, {r0, r1}
    (void)TLV_add(&ToSendTLV, (uint8_t)GUI_INIT_FWVERSION, 8, (uint8_t[])
 801536e:	197b      	adds	r3, r7, r5
 8015370:	1938      	adds	r0, r7, r4
 8015372:	2208      	movs	r2, #8
 8015374:	2103      	movs	r1, #3
 8015376:	f7fe fb7b 	bl	8013a70 <TLV_add>
      (_LIB_ID & 0x00FF0000U) >> 16,
      (_LIB_ID & 0xFF000000U) >> 24
    }
                 );
    /* Start Port number */
    (void)TLV_add(&ToSendTLV, (uint8_t)GUI_INIT_NB_PORT_START, 1, (uint8_t[]) { USBPD_START_PORT_NUMBER });
 801537a:	2118      	movs	r1, #24
 801537c:	187b      	adds	r3, r7, r1
 801537e:	2200      	movs	r2, #0
 8015380:	701a      	strb	r2, [r3, #0]
 8015382:	187b      	adds	r3, r7, r1
 8015384:	1938      	adds	r0, r7, r4
 8015386:	2201      	movs	r2, #1
 8015388:	211e      	movs	r1, #30
 801538a:	f7fe fb71 	bl	8013a70 <TLV_add>
    /* Start Port number */
    (void)TLV_add(&ToSendTLV, (uint8_t)GUI_INIT_NB_PORT_START, 1, (uint8_t[]) { USBPD_START_PORT_NUMBER });
 801538e:	2114      	movs	r1, #20
 8015390:	187b      	adds	r3, r7, r1
 8015392:	2200      	movs	r2, #0
 8015394:	701a      	strb	r2, [r3, #0]
 8015396:	187b      	adds	r3, r7, r1
 8015398:	1938      	adds	r0, r7, r4
 801539a:	2201      	movs	r2, #1
 801539c:	211e      	movs	r1, #30
 801539e:	f7fe fb67 	bl	8013a70 <TLV_add>

    /* Original settings */
    (void)TLV_add(&ToSendTLV, (uint8_t)GUI_INIT_ORIGINAL_SETTINGS, 1, (uint8_t *)&GUI_OriginalSettings);
 80153a2:	4b9a      	ldr	r3, [pc, #616]	; (801560c <Send_DpmInitCnf+0x350>)
 80153a4:	1938      	adds	r0, r7, r4
 80153a6:	2201      	movs	r2, #1
 80153a8:	211f      	movs	r1, #31
 80153aa:	f7fe fb61 	bl	8013a70 <TLV_add>

    TLV_deinit_encode(&ToSendTLV);
 80153ae:	193b      	adds	r3, r7, r4
 80153b0:	0018      	movs	r0, r3
 80153b2:	f7fe fcbf 	bl	8013d34 <TLV_deinit_encode>
    (void)TLV_add(&ToSendTLV, (uint8_t)GUI_INIT_VCONNSUPPLY, 2, (uint8_t *)&fake);
#endif /*MB1303*/

    TLV_deinit_encode(&ToSendTLV);
  }
}
 80153b6:	e11c      	b.n	80155f2 <Send_DpmInitCnf+0x336>
    uint8_t port = PortNum - 1U;
 80153b8:	2637      	movs	r6, #55	; 0x37
 80153ba:	19bb      	adds	r3, r7, r6
 80153bc:	1dfa      	adds	r2, r7, #7
 80153be:	7812      	ldrb	r2, [r2, #0]
 80153c0:	3a01      	subs	r2, #1
 80153c2:	701a      	strb	r2, [r3, #0]
    settings = (uint16_t)DPM_Settings[port].PE_SpecRevision;
 80153c4:	19bb      	adds	r3, r7, r6
 80153c6:	781a      	ldrb	r2, [r3, #0]
 80153c8:	4991      	ldr	r1, [pc, #580]	; (8015610 <Send_DpmInitCnf+0x354>)
 80153ca:	0013      	movs	r3, r2
 80153cc:	005b      	lsls	r3, r3, #1
 80153ce:	189b      	adds	r3, r3, r2
 80153d0:	009b      	lsls	r3, r3, #2
 80153d2:	18cb      	adds	r3, r1, r3
 80153d4:	791b      	ldrb	r3, [r3, #4]
 80153d6:	079b      	lsls	r3, r3, #30
 80153d8:	0f9b      	lsrs	r3, r3, #30
 80153da:	b2db      	uxtb	r3, r3
 80153dc:	b29a      	uxth	r2, r3
 80153de:	2412      	movs	r4, #18
 80153e0:	193b      	adds	r3, r7, r4
 80153e2:	801a      	strh	r2, [r3, #0]
    (void)TLV_add(&ToSendTLV, (uint8_t)GUI_INIT_TYPECSPECREVISION, 2, (uint8_t[]) { 0x12, settings });
 80153e4:	2110      	movs	r1, #16
 80153e6:	187b      	adds	r3, r7, r1
 80153e8:	2212      	movs	r2, #18
 80153ea:	701a      	strb	r2, [r3, #0]
 80153ec:	193b      	adds	r3, r7, r4
 80153ee:	881b      	ldrh	r3, [r3, #0]
 80153f0:	b2da      	uxtb	r2, r3
 80153f2:	187b      	adds	r3, r7, r1
 80153f4:	705a      	strb	r2, [r3, #1]
 80153f6:	187b      	adds	r3, r7, r1
 80153f8:	2528      	movs	r5, #40	; 0x28
 80153fa:	1978      	adds	r0, r7, r5
 80153fc:	2202      	movs	r2, #2
 80153fe:	2104      	movs	r1, #4
 8015400:	f7fe fb36 	bl	8013a70 <TLV_add>
    settings = (uint16_t)DPM_Settings[port].PE_PD3_Support.d.PE_UnchunkSupport;
 8015404:	19bb      	adds	r3, r7, r6
 8015406:	781a      	ldrb	r2, [r3, #0]
 8015408:	4981      	ldr	r1, [pc, #516]	; (8015610 <Send_DpmInitCnf+0x354>)
 801540a:	2008      	movs	r0, #8
 801540c:	0013      	movs	r3, r2
 801540e:	005b      	lsls	r3, r3, #1
 8015410:	189b      	adds	r3, r3, r2
 8015412:	009b      	lsls	r3, r3, #2
 8015414:	18cb      	adds	r3, r1, r3
 8015416:	181b      	adds	r3, r3, r0
 8015418:	781b      	ldrb	r3, [r3, #0]
 801541a:	07db      	lsls	r3, r3, #31
 801541c:	0fdb      	lsrs	r3, r3, #31
 801541e:	b2db      	uxtb	r3, r3
 8015420:	b29a      	uxth	r2, r3
 8015422:	193b      	adds	r3, r7, r4
 8015424:	801a      	strh	r2, [r3, #0]
    (void)TLV_add(&ToSendTLV, (uint8_t)GUI_INIT_EXTENDEDMESSAGESUNCKUNKED, 1, (uint8_t *)&settings);
 8015426:	193b      	adds	r3, r7, r4
 8015428:	1978      	adds	r0, r7, r5
 801542a:	2201      	movs	r2, #1
 801542c:	2106      	movs	r1, #6
 801542e:	f7fe fb1f 	bl	8013a70 <TLV_add>
    settings = (uint16_t)DPM_Settings[port].CAD_AccesorySupport;
 8015432:	19bb      	adds	r3, r7, r6
 8015434:	781a      	ldrb	r2, [r3, #0]
 8015436:	4976      	ldr	r1, [pc, #472]	; (8015610 <Send_DpmInitCnf+0x354>)
 8015438:	0013      	movs	r3, r2
 801543a:	005b      	lsls	r3, r3, #1
 801543c:	189b      	adds	r3, r3, r2
 801543e:	009b      	lsls	r3, r3, #2
 8015440:	18cb      	adds	r3, r1, r3
 8015442:	795b      	ldrb	r3, [r3, #5]
 8015444:	06db      	lsls	r3, r3, #27
 8015446:	0fdb      	lsrs	r3, r3, #31
 8015448:	b2db      	uxtb	r3, r3
 801544a:	b29a      	uxth	r2, r3
 801544c:	193b      	adds	r3, r7, r4
 801544e:	801a      	strh	r2, [r3, #0]
    (void)TLV_add(&ToSendTLV, (uint8_t)GUI_INIT_ACCESSORYSUPP, 1, (uint8_t *)&settings);
 8015450:	193b      	adds	r3, r7, r4
 8015452:	1978      	adds	r0, r7, r5
 8015454:	2201      	movs	r2, #1
 8015456:	2107      	movs	r1, #7
 8015458:	f7fe fb0a 	bl	8013a70 <TLV_add>
    settings = (uint16_t)DPM_USER_Settings[port].PWR_AccessoryDetection;
 801545c:	19bb      	adds	r3, r7, r6
 801545e:	781b      	ldrb	r3, [r3, #0]
 8015460:	4a6c      	ldr	r2, [pc, #432]	; (8015614 <Send_DpmInitCnf+0x358>)
 8015462:	2168      	movs	r1, #104	; 0x68
 8015464:	2074      	movs	r0, #116	; 0x74
 8015466:	4343      	muls	r3, r0
 8015468:	18d3      	adds	r3, r2, r3
 801546a:	185b      	adds	r3, r3, r1
 801546c:	78db      	ldrb	r3, [r3, #3]
 801546e:	07db      	lsls	r3, r3, #31
 8015470:	0fdb      	lsrs	r3, r3, #31
 8015472:	b2db      	uxtb	r3, r3
 8015474:	b29a      	uxth	r2, r3
 8015476:	193b      	adds	r3, r7, r4
 8015478:	801a      	strh	r2, [r3, #0]
    (void)TLV_add(&ToSendTLV, (uint8_t)GUI_INIT_POWERACCESSORYDETECTION, 1, (uint8_t *)&settings);
 801547a:	193b      	adds	r3, r7, r4
 801547c:	1978      	adds	r0, r7, r5
 801547e:	2201      	movs	r2, #1
 8015480:	2108      	movs	r1, #8
 8015482:	f7fe faf5 	bl	8013a70 <TLV_add>
    settings = (uint16_t)DPM_USER_Settings[port].PWR_AccessoryTransition;
 8015486:	19bb      	adds	r3, r7, r6
 8015488:	781b      	ldrb	r3, [r3, #0]
 801548a:	4a62      	ldr	r2, [pc, #392]	; (8015614 <Send_DpmInitCnf+0x358>)
 801548c:	2168      	movs	r1, #104	; 0x68
 801548e:	2074      	movs	r0, #116	; 0x74
 8015490:	4343      	muls	r3, r0
 8015492:	18d3      	adds	r3, r2, r3
 8015494:	185b      	adds	r3, r3, r1
 8015496:	78db      	ldrb	r3, [r3, #3]
 8015498:	079b      	lsls	r3, r3, #30
 801549a:	0fdb      	lsrs	r3, r3, #31
 801549c:	b2db      	uxtb	r3, r3
 801549e:	b29a      	uxth	r2, r3
 80154a0:	193b      	adds	r3, r7, r4
 80154a2:	801a      	strh	r2, [r3, #0]
    (void)TLV_add(&ToSendTLV, (uint8_t)GUI_INIT_POWERACCESSORYTRANSITION, 1, (uint8_t *)&settings);
 80154a4:	193b      	adds	r3, r7, r4
 80154a6:	1978      	adds	r0, r7, r5
 80154a8:	2201      	movs	r2, #1
 80154aa:	2109      	movs	r1, #9
 80154ac:	f7fe fae0 	bl	8013a70 <TLV_add>
    (void)TLV_add(&ToSendTLV, (uint8_t)GUI_INIT_ISCABLE, 1, (uint8_t[]) { 0x00 });
 80154b0:	210c      	movs	r1, #12
 80154b2:	187b      	adds	r3, r7, r1
 80154b4:	2200      	movs	r2, #0
 80154b6:	701a      	strb	r2, [r3, #0]
 80154b8:	187b      	adds	r3, r7, r1
 80154ba:	1978      	adds	r0, r7, r5
 80154bc:	2201      	movs	r2, #1
 80154be:	210b      	movs	r1, #11
 80154c0:	f7fe fad6 	bl	8013a70 <TLV_add>
    settings = (uint16_t)DPM_Settings[port].CAD_TryFeature;
 80154c4:	19bb      	adds	r3, r7, r6
 80154c6:	781a      	ldrb	r2, [r3, #0]
 80154c8:	4951      	ldr	r1, [pc, #324]	; (8015610 <Send_DpmInitCnf+0x354>)
 80154ca:	0013      	movs	r3, r2
 80154cc:	005b      	lsls	r3, r3, #1
 80154ce:	189b      	adds	r3, r3, r2
 80154d0:	009b      	lsls	r3, r3, #2
 80154d2:	18cb      	adds	r3, r1, r3
 80154d4:	795b      	ldrb	r3, [r3, #5]
 80154d6:	071b      	lsls	r3, r3, #28
 80154d8:	0f9b      	lsrs	r3, r3, #30
 80154da:	b2db      	uxtb	r3, r3
 80154dc:	b29a      	uxth	r2, r3
 80154de:	193b      	adds	r3, r7, r4
 80154e0:	801a      	strh	r2, [r3, #0]
    (void)TLV_add(&ToSendTLV, (uint8_t)GUI_INIT_TRYFEATURE, 1, (uint8_t *)&settings);
 80154e2:	193b      	adds	r3, r7, r4
 80154e4:	1978      	adds	r0, r7, r5
 80154e6:	2201      	movs	r2, #1
 80154e8:	2110      	movs	r1, #16
 80154ea:	f7fe fac1 	bl	8013a70 <TLV_add>
    settings = (uint16_t)DPM_USER_Settings[port].PWR_RpResistorValue;
 80154ee:	19bb      	adds	r3, r7, r6
 80154f0:	781b      	ldrb	r3, [r3, #0]
 80154f2:	4a48      	ldr	r2, [pc, #288]	; (8015614 <Send_DpmInitCnf+0x358>)
 80154f4:	2168      	movs	r1, #104	; 0x68
 80154f6:	2074      	movs	r0, #116	; 0x74
 80154f8:	4343      	muls	r3, r0
 80154fa:	18d3      	adds	r3, r2, r3
 80154fc:	185b      	adds	r3, r3, r1
 80154fe:	78db      	ldrb	r3, [r3, #3]
 8015500:	06db      	lsls	r3, r3, #27
 8015502:	0f9b      	lsrs	r3, r3, #30
 8015504:	b2db      	uxtb	r3, r3
 8015506:	b29a      	uxth	r2, r3
 8015508:	193b      	adds	r3, r7, r4
 801550a:	801a      	strh	r2, [r3, #0]
    (void)TLV_add(&ToSendTLV, (uint8_t)GUI_INIT_RPRESISTORVALUE, 1, (uint8_t *)&settings);
 801550c:	193b      	adds	r3, r7, r4
 801550e:	1978      	adds	r0, r7, r5
 8015510:	2201      	movs	r2, #1
 8015512:	2112      	movs	r1, #18
 8015514:	f7fe faac 	bl	8013a70 <TLV_add>
    settings = (uint16_t)DPM_USER_Settings[port].USB_Support;
 8015518:	19bb      	adds	r3, r7, r6
 801551a:	781b      	ldrb	r3, [r3, #0]
 801551c:	4a3d      	ldr	r2, [pc, #244]	; (8015614 <Send_DpmInitCnf+0x358>)
 801551e:	2168      	movs	r1, #104	; 0x68
 8015520:	2074      	movs	r0, #116	; 0x74
 8015522:	4343      	muls	r3, r0
 8015524:	18d3      	adds	r3, r2, r3
 8015526:	185b      	adds	r3, r3, r1
 8015528:	78db      	ldrb	r3, [r3, #3]
 801552a:	069b      	lsls	r3, r3, #26
 801552c:	0fdb      	lsrs	r3, r3, #31
 801552e:	b2db      	uxtb	r3, r3
 8015530:	b29a      	uxth	r2, r3
 8015532:	193b      	adds	r3, r7, r4
 8015534:	801a      	strh	r2, [r3, #0]
    (void)TLV_add(&ToSendTLV, (uint8_t)GUI_INIT_USBSUPPORT, 1, (uint8_t *)&settings);
 8015536:	193b      	adds	r3, r7, r4
 8015538:	1978      	adds	r0, r7, r5
 801553a:	2201      	movs	r2, #1
 801553c:	2113      	movs	r1, #19
 801553e:	f7fe fa97 	bl	8013a70 <TLV_add>
    settings = (uint16_t)DPM_USER_Settings[port].USB_Device;
 8015542:	19bb      	adds	r3, r7, r6
 8015544:	781b      	ldrb	r3, [r3, #0]
 8015546:	4a33      	ldr	r2, [pc, #204]	; (8015614 <Send_DpmInitCnf+0x358>)
 8015548:	2168      	movs	r1, #104	; 0x68
 801554a:	2074      	movs	r0, #116	; 0x74
 801554c:	4343      	muls	r3, r0
 801554e:	18d3      	adds	r3, r2, r3
 8015550:	185b      	adds	r3, r3, r1
 8015552:	78db      	ldrb	r3, [r3, #3]
 8015554:	065b      	lsls	r3, r3, #25
 8015556:	0fdb      	lsrs	r3, r3, #31
 8015558:	b2db      	uxtb	r3, r3
 801555a:	b29a      	uxth	r2, r3
 801555c:	193b      	adds	r3, r7, r4
 801555e:	801a      	strh	r2, [r3, #0]
    (void)TLV_add(&ToSendTLV, (uint8_t)GUI_INIT_USBDEVICE, 1, (uint8_t *)&settings);
 8015560:	193b      	adds	r3, r7, r4
 8015562:	1978      	adds	r0, r7, r5
 8015564:	2201      	movs	r2, #1
 8015566:	2114      	movs	r1, #20
 8015568:	f7fe fa82 	bl	8013a70 <TLV_add>
    settings = (uint16_t)DPM_USER_Settings[port].USB_Host;
 801556c:	19bb      	adds	r3, r7, r6
 801556e:	781b      	ldrb	r3, [r3, #0]
 8015570:	4a28      	ldr	r2, [pc, #160]	; (8015614 <Send_DpmInitCnf+0x358>)
 8015572:	2168      	movs	r1, #104	; 0x68
 8015574:	2074      	movs	r0, #116	; 0x74
 8015576:	4343      	muls	r3, r0
 8015578:	18d3      	adds	r3, r2, r3
 801557a:	185b      	adds	r3, r3, r1
 801557c:	78db      	ldrb	r3, [r3, #3]
 801557e:	061b      	lsls	r3, r3, #24
 8015580:	0fdb      	lsrs	r3, r3, #31
 8015582:	b2db      	uxtb	r3, r3
 8015584:	b29a      	uxth	r2, r3
 8015586:	193b      	adds	r3, r7, r4
 8015588:	801a      	strh	r2, [r3, #0]
    (void)TLV_add(&ToSendTLV, (uint8_t)GUI_INIT_USBHOST, 1, (uint8_t *)&settings);
 801558a:	193b      	adds	r3, r7, r4
 801558c:	1978      	adds	r0, r7, r5
 801558e:	2201      	movs	r2, #1
 8015590:	2115      	movs	r1, #21
 8015592:	f7fe fa6d 	bl	8013a70 <TLV_add>
    settings = (uint16_t)DPM_USER_Settings[port].PWR_UnconstrainedPower;
 8015596:	19bb      	adds	r3, r7, r6
 8015598:	781b      	ldrb	r3, [r3, #0]
 801559a:	4a1e      	ldr	r2, [pc, #120]	; (8015614 <Send_DpmInitCnf+0x358>)
 801559c:	2168      	movs	r1, #104	; 0x68
 801559e:	2074      	movs	r0, #116	; 0x74
 80155a0:	4343      	muls	r3, r0
 80155a2:	18d3      	adds	r3, r2, r3
 80155a4:	185b      	adds	r3, r3, r1
 80155a6:	78db      	ldrb	r3, [r3, #3]
 80155a8:	075b      	lsls	r3, r3, #29
 80155aa:	0fdb      	lsrs	r3, r3, #31
 80155ac:	b2db      	uxtb	r3, r3
 80155ae:	b29a      	uxth	r2, r3
 80155b0:	193b      	adds	r3, r7, r4
 80155b2:	801a      	strh	r2, [r3, #0]
    (void)TLV_add(&ToSendTLV, (uint8_t)GUI_INIT_UNCONSTRAINED_POWERED, 1, (uint8_t *)&settings);
 80155b4:	193b      	adds	r3, r7, r4
 80155b6:	1978      	adds	r0, r7, r5
 80155b8:	2201      	movs	r2, #1
 80155ba:	2116      	movs	r1, #22
 80155bc:	f7fe fa58 	bl	8013a70 <TLV_add>
    settings = (uint16_t)DPM_USER_Settings[port].USB_SuspendSupport;
 80155c0:	19bb      	adds	r3, r7, r6
 80155c2:	781b      	ldrb	r3, [r3, #0]
 80155c4:	4a13      	ldr	r2, [pc, #76]	; (8015614 <Send_DpmInitCnf+0x358>)
 80155c6:	2168      	movs	r1, #104	; 0x68
 80155c8:	2074      	movs	r0, #116	; 0x74
 80155ca:	4343      	muls	r3, r0
 80155cc:	18d3      	adds	r3, r2, r3
 80155ce:	185b      	adds	r3, r3, r1
 80155d0:	791b      	ldrb	r3, [r3, #4]
 80155d2:	07db      	lsls	r3, r3, #31
 80155d4:	0fdb      	lsrs	r3, r3, #31
 80155d6:	b2db      	uxtb	r3, r3
 80155d8:	b29a      	uxth	r2, r3
 80155da:	193b      	adds	r3, r7, r4
 80155dc:	801a      	strh	r2, [r3, #0]
    (void)TLV_add(&ToSendTLV, (uint8_t)GUI_INIT_USBSUSPENDSUPPORT, 1, (uint8_t *)&settings);
 80155de:	193b      	adds	r3, r7, r4
 80155e0:	1978      	adds	r0, r7, r5
 80155e2:	2201      	movs	r2, #1
 80155e4:	2117      	movs	r1, #23
 80155e6:	f7fe fa43 	bl	8013a70 <TLV_add>
    TLV_deinit_encode(&ToSendTLV);
 80155ea:	197b      	adds	r3, r7, r5
 80155ec:	0018      	movs	r0, r3
 80155ee:	f7fe fba1 	bl	8013d34 <TLV_deinit_encode>
}
 80155f2:	46c0      	nop			; (mov r8, r8)
 80155f4:	46bd      	mov	sp, r7
 80155f6:	b011      	add	sp, #68	; 0x44
 80155f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80155fa:	46c0      	nop			; (mov r8, r8)
 80155fc:	20002ec8 	.word	0x20002ec8
 8015600:	08019854 	.word	0x08019854
 8015604:	20002ecc 	.word	0x20002ecc
 8015608:	0801985c 	.word	0x0801985c
 801560c:	20002ebd 	.word	0x20002ebd
 8015610:	20000014 	.word	0x20000014
 8015614:	20000028 	.word	0x20000028

08015618 <Request_MessageReq>:
/**
  * @brief      Execution of the message received
  * @note       Generation of a TLV instruction to send in the context of DPM_MESSAGE
  */
static void Request_MessageReq(uint8_t PortNum, uint8_t *instruction, uint8_t *pEncodedMsg)
{
 8015618:	b5b0      	push	{r4, r5, r7, lr}
 801561a:	b090      	sub	sp, #64	; 0x40
 801561c:	af00      	add	r7, sp, #0
 801561e:	60b9      	str	r1, [r7, #8]
 8015620:	607a      	str	r2, [r7, #4]
 8015622:	240f      	movs	r4, #15
 8015624:	193b      	adds	r3, r7, r4
 8015626:	1c02      	adds	r2, r0, #0
 8015628:	701a      	strb	r2, [r3, #0]
  USBPD_StatusTypeDef status = USBPD_ERROR;
 801562a:	233f      	movs	r3, #63	; 0x3f
 801562c:	18fb      	adds	r3, r7, r3
 801562e:	2202      	movs	r2, #2
 8015630:	701a      	strb	r2, [r3, #0]
  TLV_Received_Data_t process_tlv;
  TLV_ToSend_Data_t send_tlv;

  (void)TLV_init_decode(&process_tlv, instruction);
 8015632:	68ba      	ldr	r2, [r7, #8]
 8015634:	252c      	movs	r5, #44	; 0x2c
 8015636:	197b      	adds	r3, r7, r5
 8015638:	0011      	movs	r1, r2
 801563a:	0018      	movs	r0, r3
 801563c:	f7fe fb8c 	bl	8013d58 <TLV_init_decode>
  (void)TLV_init_encode(&send_tlv, __GUI_SET_TAG_ID((PortNum + 1), DPM_MESSAGE_CNF), TLV_SIZE_MAX, pEncodedMsg);
 8015640:	193b      	adds	r3, r7, r4
 8015642:	781b      	ldrb	r3, [r3, #0]
 8015644:	3301      	adds	r3, #1
 8015646:	015b      	lsls	r3, r3, #5
 8015648:	b25b      	sxtb	r3, r3
 801564a:	220a      	movs	r2, #10
 801564c:	4313      	orrs	r3, r2
 801564e:	b25b      	sxtb	r3, r3
 8015650:	b2d9      	uxtb	r1, r3
 8015652:	687b      	ldr	r3, [r7, #4]
 8015654:	2280      	movs	r2, #128	; 0x80
 8015656:	0052      	lsls	r2, r2, #1
 8015658:	2020      	movs	r0, #32
 801565a:	1838      	adds	r0, r7, r0
 801565c:	f7fe f9a5 	bl	80139aa <TLV_init_encode>
  USBPD_GUI_Reject_Reason error;

  uint8_t tag;
  uint16_t length;
  uint8_t *value;
  (void)TLV_get(&process_tlv, &tag, &length, &value);
 8015660:	2318      	movs	r3, #24
 8015662:	18fb      	adds	r3, r7, r3
 8015664:	221c      	movs	r2, #28
 8015666:	18ba      	adds	r2, r7, r2
 8015668:	241e      	movs	r4, #30
 801566a:	1939      	adds	r1, r7, r4
 801566c:	1978      	adds	r0, r7, r5
 801566e:	f7fe fb9f 	bl	8013db0 <TLV_get>
  switch (tag)
 8015672:	193b      	adds	r3, r7, r4
 8015674:	781b      	ldrb	r3, [r3, #0]
 8015676:	2b2b      	cmp	r3, #43	; 0x2b
 8015678:	d900      	bls.n	801567c <Request_MessageReq+0x64>
 801567a:	e2a8      	b.n	8015bce <Request_MessageReq+0x5b6>
 801567c:	009a      	lsls	r2, r3, #2
 801567e:	4bdb      	ldr	r3, [pc, #876]	; (80159ec <Request_MessageReq+0x3d4>)
 8015680:	18d3      	adds	r3, r2, r3
 8015682:	681b      	ldr	r3, [r3, #0]
 8015684:	469f      	mov	pc, r3
      - If there is an error, set the error variable according to it (cf USBPD_GUI_Specification)
      - Otherwise in case of success, do nothing else
    */
  {
    case GUI_MSG_GOTOMIN :
      status = USBPD_DPM_RequestGotoMin(PortNum);
 8015686:	233f      	movs	r3, #63	; 0x3f
 8015688:	18fc      	adds	r4, r7, r3
 801568a:	230f      	movs	r3, #15
 801568c:	18fb      	adds	r3, r7, r3
 801568e:	781b      	ldrb	r3, [r3, #0]
 8015690:	0018      	movs	r0, r3
 8015692:	f7fc fcb1 	bl	8011ff8 <USBPD_DPM_RequestGotoMin>
 8015696:	0003      	movs	r3, r0
 8015698:	7023      	strb	r3, [r4, #0]
      break;
 801569a:	e2b7      	b.n	8015c0c <Request_MessageReq+0x5f4>
    case GUI_MSG_PING :
      status = USBPD_DPM_RequestPing(PortNum);
 801569c:	233f      	movs	r3, #63	; 0x3f
 801569e:	18fc      	adds	r4, r7, r3
 80156a0:	230f      	movs	r3, #15
 80156a2:	18fb      	adds	r3, r7, r3
 80156a4:	781b      	ldrb	r3, [r3, #0]
 80156a6:	0018      	movs	r0, r3
 80156a8:	f7fc fcec 	bl	8012084 <USBPD_DPM_RequestPing>
 80156ac:	0003      	movs	r3, r0
 80156ae:	7023      	strb	r3, [r4, #0]
      break;
 80156b0:	e2ac      	b.n	8015c0c <Request_MessageReq+0x5f4>
    case GUI_MSG_GET_SRC_CAPA :
      status = USBPD_DPM_RequestGetSourceCapability(PortNum);
 80156b2:	233f      	movs	r3, #63	; 0x3f
 80156b4:	18fc      	adds	r4, r7, r3
 80156b6:	230f      	movs	r3, #15
 80156b8:	18fb      	adds	r3, r7, r3
 80156ba:	781b      	ldrb	r3, [r3, #0]
 80156bc:	0018      	movs	r0, r3
 80156be:	f7fc fd9b 	bl	80121f8 <USBPD_DPM_RequestGetSourceCapability>
 80156c2:	0003      	movs	r3, r0
 80156c4:	7023      	strb	r3, [r4, #0]
      break;
 80156c6:	e2a1      	b.n	8015c0c <Request_MessageReq+0x5f4>
    case GUI_MSG_GET_SNK_CAPA :
      status = USBPD_DPM_RequestGetSinkCapability(PortNum);
 80156c8:	233f      	movs	r3, #63	; 0x3f
 80156ca:	18fc      	adds	r4, r7, r3
 80156cc:	230f      	movs	r3, #15
 80156ce:	18fb      	adds	r3, r7, r3
 80156d0:	781b      	ldrb	r3, [r3, #0]
 80156d2:	0018      	movs	r0, r3
 80156d4:	f7fc fdd6 	bl	8012284 <USBPD_DPM_RequestGetSinkCapability>
 80156d8:	0003      	movs	r3, r0
 80156da:	7023      	strb	r3, [r4, #0]
      break;
 80156dc:	e296      	b.n	8015c0c <Request_MessageReq+0x5f4>
    case GUI_MSG_DR_SWAP :
      status = USBPD_DPM_RequestDataRoleSwap(PortNum);
 80156de:	233f      	movs	r3, #63	; 0x3f
 80156e0:	18fc      	adds	r4, r7, r3
 80156e2:	230f      	movs	r3, #15
 80156e4:	18fb      	adds	r3, r7, r3
 80156e6:	781b      	ldrb	r3, [r3, #0]
 80156e8:	0018      	movs	r0, r3
 80156ea:	f7fc fe11 	bl	8012310 <USBPD_DPM_RequestDataRoleSwap>
 80156ee:	0003      	movs	r3, r0
 80156f0:	7023      	strb	r3, [r4, #0]
      break;
 80156f2:	e28b      	b.n	8015c0c <Request_MessageReq+0x5f4>
    case GUI_MSG_PR_SWAP :
      status = USBPD_DPM_RequestPowerRoleSwap(PortNum);
 80156f4:	233f      	movs	r3, #63	; 0x3f
 80156f6:	18fc      	adds	r4, r7, r3
 80156f8:	230f      	movs	r3, #15
 80156fa:	18fb      	adds	r3, r7, r3
 80156fc:	781b      	ldrb	r3, [r3, #0]
 80156fe:	0018      	movs	r0, r3
 8015700:	f7fc fe4c 	bl	801239c <USBPD_DPM_RequestPowerRoleSwap>
 8015704:	0003      	movs	r3, r0
 8015706:	7023      	strb	r3, [r4, #0]
      break;
 8015708:	e280      	b.n	8015c0c <Request_MessageReq+0x5f4>
    case GUI_MSG_VCONN_SWAP :
      status = USBPD_DPM_RequestVconnSwap(PortNum);
 801570a:	233f      	movs	r3, #63	; 0x3f
 801570c:	18fc      	adds	r4, r7, r3
 801570e:	230f      	movs	r3, #15
 8015710:	18fb      	adds	r3, r7, r3
 8015712:	781b      	ldrb	r3, [r3, #0]
 8015714:	0018      	movs	r0, r3
 8015716:	f7fc fe77 	bl	8012408 <USBPD_DPM_RequestVconnSwap>
 801571a:	0003      	movs	r3, r0
 801571c:	7023      	strb	r3, [r4, #0]
      break;
 801571e:	e275      	b.n	8015c0c <Request_MessageReq+0x5f4>
    case GUI_MSG_SOURCE_CAPA :
      status = USBPD_DPM_RequestSourceCapability(PortNum);
 8015720:	233f      	movs	r3, #63	; 0x3f
 8015722:	18fc      	adds	r4, r7, r3
 8015724:	230f      	movs	r3, #15
 8015726:	18fb      	adds	r3, r7, r3
 8015728:	781b      	ldrb	r3, [r3, #0]
 801572a:	0018      	movs	r0, r3
 801572c:	f7fc fefc 	bl	8012528 <USBPD_DPM_RequestSourceCapability>
 8015730:	0003      	movs	r3, r0
 8015732:	7023      	strb	r3, [r4, #0]
      break;
 8015734:	e26a      	b.n	8015c0c <Request_MessageReq+0x5f4>
    case GUI_MSG_REQUEST :
    {
      uint16_t voltage = 0;
 8015736:	233c      	movs	r3, #60	; 0x3c
 8015738:	18fb      	adds	r3, r7, r3
 801573a:	2200      	movs	r2, #0
 801573c:	801a      	strh	r2, [r3, #0]
      uint8_t nb_expected_tag = 0U;
 801573e:	233b      	movs	r3, #59	; 0x3b
 8015740:	18fb      	adds	r3, r7, r3
 8015742:	2200      	movs	r2, #0
 8015744:	701a      	strb	r2, [r3, #0]
      uint8_t index_pdo = 0;
 8015746:	233a      	movs	r3, #58	; 0x3a
 8015748:	18fb      	adds	r3, r7, r3
 801574a:	2200      	movs	r2, #0
 801574c:	701a      	strb	r2, [r3, #0]
      if (length > TLV_SIZE_MAX)
 801574e:	211c      	movs	r1, #28
 8015750:	187b      	adds	r3, r7, r1
 8015752:	881a      	ldrh	r2, [r3, #0]
 8015754:	2380      	movs	r3, #128	; 0x80
 8015756:	005b      	lsls	r3, r3, #1
 8015758:	429a      	cmp	r2, r3
 801575a:	d900      	bls.n	801575e <Request_MessageReq+0x146>
 801575c:	e239      	b.n	8015bd2 <Request_MessageReq+0x5ba>
      {
        break;
      }
      (void)TLV_get(&process_tlv, &tag, &length, &value);
 801575e:	2318      	movs	r3, #24
 8015760:	18fb      	adds	r3, r7, r3
 8015762:	187a      	adds	r2, r7, r1
 8015764:	211e      	movs	r1, #30
 8015766:	1879      	adds	r1, r7, r1
 8015768:	202c      	movs	r0, #44	; 0x2c
 801576a:	1838      	adds	r0, r7, r0
 801576c:	f7fe fb20 	bl	8013db0 <TLV_get>
      while ((0U != length) && (TLV_SIZE_MAX > length) && (nb_expected_tag < 2U))
 8015770:	e02c      	b.n	80157cc <Request_MessageReq+0x1b4>
      {
        nb_expected_tag++;
 8015772:	213b      	movs	r1, #59	; 0x3b
 8015774:	187b      	adds	r3, r7, r1
 8015776:	781a      	ldrb	r2, [r3, #0]
 8015778:	187b      	adds	r3, r7, r1
 801577a:	3201      	adds	r2, #1
 801577c:	701a      	strb	r2, [r3, #0]
        if (GUI_PARAM_MSG_RDOPOSITION == (USBPD_GUI_Tag_ParamMsg)tag)
 801577e:	231e      	movs	r3, #30
 8015780:	18fb      	adds	r3, r7, r3
 8015782:	781b      	ldrb	r3, [r3, #0]
 8015784:	2b01      	cmp	r3, #1
 8015786:	d105      	bne.n	8015794 <Request_MessageReq+0x17c>
        {
          index_pdo = value[0];
 8015788:	69ba      	ldr	r2, [r7, #24]
 801578a:	233a      	movs	r3, #58	; 0x3a
 801578c:	18fb      	adds	r3, r7, r3
 801578e:	7812      	ldrb	r2, [r2, #0]
 8015790:	701a      	strb	r2, [r3, #0]
 8015792:	e011      	b.n	80157b8 <Request_MessageReq+0x1a0>
        }
        else if (GUI_PARAM_MSG_REQUESTEDVOLTAGE == (USBPD_GUI_Tag_ParamMsg)tag)
 8015794:	231e      	movs	r3, #30
 8015796:	18fb      	adds	r3, r7, r3
 8015798:	781b      	ldrb	r3, [r3, #0]
 801579a:	2b02      	cmp	r3, #2
 801579c:	d10c      	bne.n	80157b8 <Request_MessageReq+0x1a0>
        {
          voltage = USBPD_LE16(&value[0]);
 801579e:	69bb      	ldr	r3, [r7, #24]
 80157a0:	781b      	ldrb	r3, [r3, #0]
 80157a2:	b299      	uxth	r1, r3
 80157a4:	69bb      	ldr	r3, [r7, #24]
 80157a6:	3301      	adds	r3, #1
 80157a8:	781b      	ldrb	r3, [r3, #0]
 80157aa:	b29b      	uxth	r3, r3
 80157ac:	021b      	lsls	r3, r3, #8
 80157ae:	b29a      	uxth	r2, r3
 80157b0:	233c      	movs	r3, #60	; 0x3c
 80157b2:	18fb      	adds	r3, r7, r3
 80157b4:	188a      	adds	r2, r1, r2
 80157b6:	801a      	strh	r2, [r3, #0]
        else
        {
          /* Nothing to do */
        }

        (void)TLV_get(&process_tlv, &tag, &length, &value);
 80157b8:	2318      	movs	r3, #24
 80157ba:	18fb      	adds	r3, r7, r3
 80157bc:	221c      	movs	r2, #28
 80157be:	18ba      	adds	r2, r7, r2
 80157c0:	211e      	movs	r1, #30
 80157c2:	1879      	adds	r1, r7, r1
 80157c4:	202c      	movs	r0, #44	; 0x2c
 80157c6:	1838      	adds	r0, r7, r0
 80157c8:	f7fe faf2 	bl	8013db0 <TLV_get>
      while ((0U != length) && (TLV_SIZE_MAX > length) && (nb_expected_tag < 2U))
 80157cc:	221c      	movs	r2, #28
 80157ce:	18bb      	adds	r3, r7, r2
 80157d0:	881b      	ldrh	r3, [r3, #0]
 80157d2:	2b00      	cmp	r3, #0
 80157d4:	d008      	beq.n	80157e8 <Request_MessageReq+0x1d0>
 80157d6:	18bb      	adds	r3, r7, r2
 80157d8:	881b      	ldrh	r3, [r3, #0]
 80157da:	2bff      	cmp	r3, #255	; 0xff
 80157dc:	d804      	bhi.n	80157e8 <Request_MessageReq+0x1d0>
 80157de:	233b      	movs	r3, #59	; 0x3b
 80157e0:	18fb      	adds	r3, r7, r3
 80157e2:	781b      	ldrb	r3, [r3, #0]
 80157e4:	2b01      	cmp	r3, #1
 80157e6:	d9c4      	bls.n	8015772 <Request_MessageReq+0x15a>
      }
      if (2U == nb_expected_tag)
 80157e8:	233b      	movs	r3, #59	; 0x3b
 80157ea:	18fb      	adds	r3, r7, r3
 80157ec:	781b      	ldrb	r3, [r3, #0]
 80157ee:	2b02      	cmp	r3, #2
 80157f0:	d000      	beq.n	80157f4 <Request_MessageReq+0x1dc>
 80157f2:	e1f0      	b.n	8015bd6 <Request_MessageReq+0x5be>
      {
        status = USBPD_DPM_RequestMessageRequest(PortNum, index_pdo, voltage);
 80157f4:	233f      	movs	r3, #63	; 0x3f
 80157f6:	18fc      	adds	r4, r7, r3
 80157f8:	233c      	movs	r3, #60	; 0x3c
 80157fa:	18fb      	adds	r3, r7, r3
 80157fc:	881a      	ldrh	r2, [r3, #0]
 80157fe:	233a      	movs	r3, #58	; 0x3a
 8015800:	18fb      	adds	r3, r7, r3
 8015802:	7819      	ldrb	r1, [r3, #0]
 8015804:	230f      	movs	r3, #15
 8015806:	18fb      	adds	r3, r7, r3
 8015808:	781b      	ldrb	r3, [r3, #0]
 801580a:	0018      	movs	r0, r3
 801580c:	f7fc fc80 	bl	8012110 <USBPD_DPM_RequestMessageRequest>
 8015810:	0003      	movs	r3, r0
 8015812:	7023      	strb	r3, [r4, #0]
      }
      break;
 8015814:	e1df      	b.n	8015bd6 <Request_MessageReq+0x5be>
    }
    case GUI_MSG_SOFT_RESET :
      (void)TLV_get(&process_tlv, &tag, &length, &value);
 8015816:	2318      	movs	r3, #24
 8015818:	18fb      	adds	r3, r7, r3
 801581a:	221c      	movs	r2, #28
 801581c:	18ba      	adds	r2, r7, r2
 801581e:	241e      	movs	r4, #30
 8015820:	1939      	adds	r1, r7, r4
 8015822:	202c      	movs	r0, #44	; 0x2c
 8015824:	1838      	adds	r0, r7, r0
 8015826:	f7fe fac3 	bl	8013db0 <TLV_get>
      if (GUI_PARAM_MSG_SOPTYPE == (USBPD_GUI_Tag_ParamMsg)tag)
 801582a:	193b      	adds	r3, r7, r4
 801582c:	781b      	ldrb	r3, [r3, #0]
 801582e:	2b00      	cmp	r3, #0
 8015830:	d000      	beq.n	8015834 <Request_MessageReq+0x21c>
 8015832:	e1d2      	b.n	8015bda <Request_MessageReq+0x5c2>
      {
        status = USBPD_DPM_RequestSoftReset(PortNum, (USBPD_SOPType_TypeDef)value[0]);
 8015834:	69bb      	ldr	r3, [r7, #24]
 8015836:	781a      	ldrb	r2, [r3, #0]
 8015838:	233f      	movs	r3, #63	; 0x3f
 801583a:	18fc      	adds	r4, r7, r3
 801583c:	230f      	movs	r3, #15
 801583e:	18fb      	adds	r3, r7, r3
 8015840:	781b      	ldrb	r3, [r3, #0]
 8015842:	0011      	movs	r1, r2
 8015844:	0018      	movs	r0, r3
 8015846:	f7fc fe25 	bl	8012494 <USBPD_DPM_RequestSoftReset>
 801584a:	0003      	movs	r3, r0
 801584c:	7023      	strb	r3, [r4, #0]
      }
      break;
 801584e:	e1c4      	b.n	8015bda <Request_MessageReq+0x5c2>
    case GUI_MSG_HARD_RESET :
      status = USBPD_DPM_RequestHardReset(PortNum);
 8015850:	233f      	movs	r3, #63	; 0x3f
 8015852:	18fc      	adds	r4, r7, r3
 8015854:	230f      	movs	r3, #15
 8015856:	18fb      	adds	r3, r7, r3
 8015858:	781b      	ldrb	r3, [r3, #0]
 801585a:	0018      	movs	r0, r3
 801585c:	f7fc fb44 	bl	8011ee8 <USBPD_DPM_RequestHardReset>
 8015860:	0003      	movs	r3, r0
 8015862:	7023      	strb	r3, [r4, #0]
      break;
 8015864:	e1d2      	b.n	8015c0c <Request_MessageReq+0x5f4>
    case GUI_MSG_CABLE_RESET :
      status = USBPD_DPM_RequestCableReset(PortNum);
 8015866:	233f      	movs	r3, #63	; 0x3f
 8015868:	18fc      	adds	r4, r7, r3
 801586a:	230f      	movs	r3, #15
 801586c:	18fb      	adds	r3, r7, r3
 801586e:	781b      	ldrb	r3, [r3, #0]
 8015870:	0018      	movs	r0, r3
 8015872:	f7fc fb7d 	bl	8011f70 <USBPD_DPM_RequestCableReset>
 8015876:	0003      	movs	r3, r0
 8015878:	7023      	strb	r3, [r4, #0]
      break;
 801587a:	e1c7      	b.n	8015c0c <Request_MessageReq+0x5f4>
    }
    break;
#endif /* _VDM */
    case GUI_MSG_FREE_TEXT :
    {
      uint8_t nb_expected_tag = 0U;
 801587c:	2339      	movs	r3, #57	; 0x39
 801587e:	18fb      	adds	r3, r7, r3
 8015880:	2200      	movs	r2, #0
 8015882:	701a      	strb	r2, [r3, #0]
      if (length > TLV_SIZE_MAX)
 8015884:	211c      	movs	r1, #28
 8015886:	187b      	adds	r3, r7, r1
 8015888:	881a      	ldrh	r2, [r3, #0]
 801588a:	2380      	movs	r3, #128	; 0x80
 801588c:	005b      	lsls	r3, r3, #1
 801588e:	429a      	cmp	r2, r3
 8015890:	d900      	bls.n	8015894 <Request_MessageReq+0x27c>
 8015892:	e1a4      	b.n	8015bde <Request_MessageReq+0x5c6>
      {
        break;
      }
      (void)TLV_get(&process_tlv, &tag, &length, &value);
 8015894:	2318      	movs	r3, #24
 8015896:	18fb      	adds	r3, r7, r3
 8015898:	187a      	adds	r2, r7, r1
 801589a:	211e      	movs	r1, #30
 801589c:	1879      	adds	r1, r7, r1
 801589e:	202c      	movs	r0, #44	; 0x2c
 80158a0:	1838      	adds	r0, r7, r0
 80158a2:	f7fe fa85 	bl	8013db0 <TLV_get>
      while ((0U != length) && (TLV_SIZE_MAX > length) && (nb_expected_tag < 1U))
 80158a6:	e005      	b.n	80158b4 <Request_MessageReq+0x29c>
      {
        nb_expected_tag++;
 80158a8:	2139      	movs	r1, #57	; 0x39
 80158aa:	187b      	adds	r3, r7, r1
 80158ac:	781a      	ldrb	r2, [r3, #0]
 80158ae:	187b      	adds	r3, r7, r1
 80158b0:	3201      	adds	r2, #1
 80158b2:	701a      	strb	r2, [r3, #0]
      while ((0U != length) && (TLV_SIZE_MAX > length) && (nb_expected_tag < 1U))
 80158b4:	221c      	movs	r2, #28
 80158b6:	18bb      	adds	r3, r7, r2
 80158b8:	881b      	ldrh	r3, [r3, #0]
 80158ba:	2b00      	cmp	r3, #0
 80158bc:	d008      	beq.n	80158d0 <Request_MessageReq+0x2b8>
 80158be:	18bb      	adds	r3, r7, r2
 80158c0:	881b      	ldrh	r3, [r3, #0]
 80158c2:	2bff      	cmp	r3, #255	; 0xff
 80158c4:	d804      	bhi.n	80158d0 <Request_MessageReq+0x2b8>
 80158c6:	2339      	movs	r3, #57	; 0x39
 80158c8:	18fb      	adds	r3, r7, r3
 80158ca:	781b      	ldrb	r3, [r3, #0]
 80158cc:	2b00      	cmp	r3, #0
 80158ce:	d0eb      	beq.n	80158a8 <Request_MessageReq+0x290>
      }
      if (1U == nb_expected_tag)
 80158d0:	2339      	movs	r3, #57	; 0x39
 80158d2:	18fb      	adds	r3, r7, r3
 80158d4:	781b      	ldrb	r3, [r3, #0]
 80158d6:	2b01      	cmp	r3, #1
 80158d8:	d000      	beq.n	80158dc <Request_MessageReq+0x2c4>
 80158da:	e182      	b.n	8015be2 <Request_MessageReq+0x5ca>
      {
        status = Manage_FreeText(PortNum, value, length);
 80158dc:	69b9      	ldr	r1, [r7, #24]
 80158de:	231c      	movs	r3, #28
 80158e0:	18fb      	adds	r3, r7, r3
 80158e2:	881a      	ldrh	r2, [r3, #0]
 80158e4:	233f      	movs	r3, #63	; 0x3f
 80158e6:	18fc      	adds	r4, r7, r3
 80158e8:	230f      	movs	r3, #15
 80158ea:	18fb      	adds	r3, r7, r3
 80158ec:	781b      	ldrb	r3, [r3, #0]
 80158ee:	0018      	movs	r0, r3
 80158f0:	f001 f9d6 	bl	8016ca0 <Manage_FreeText>
 80158f4:	0003      	movs	r3, r0
 80158f6:	7023      	strb	r3, [r4, #0]
      }
      break;
 80158f8:	e173      	b.n	8015be2 <Request_MessageReq+0x5ca>
    }
#ifdef USBPD_REV30_SUPPORT
    case GUI_MSG_FR_SWAP :
      status = USBPD_DPM_RequestFastRoleSwap(PortNum);
 80158fa:	233f      	movs	r3, #63	; 0x3f
 80158fc:	18fc      	adds	r4, r7, r3
 80158fe:	230f      	movs	r3, #15
 8015900:	18fb      	adds	r3, r7, r3
 8015902:	781b      	ldrb	r3, [r3, #0]
 8015904:	0018      	movs	r0, r3
 8015906:	f7fd f80b 	bl	8012920 <USBPD_DPM_RequestFastRoleSwap>
 801590a:	0003      	movs	r3, r0
 801590c:	7023      	strb	r3, [r4, #0]
      break;
 801590e:	e17d      	b.n	8015c0c <Request_MessageReq+0x5f4>
    case GUI_MSG_GET_PPS_STATUS :
      status = USBPD_DPM_RequestGetPPS_Status(PortNum);
 8015910:	233f      	movs	r3, #63	; 0x3f
 8015912:	18fc      	adds	r4, r7, r3
 8015914:	230f      	movs	r3, #15
 8015916:	18fb      	adds	r3, r7, r3
 8015918:	781b      	ldrb	r3, [r3, #0]
 801591a:	0018      	movs	r0, r3
 801591c:	f7fc ff74 	bl	8012808 <USBPD_DPM_RequestGetPPS_Status>
 8015920:	0003      	movs	r3, r0
 8015922:	7023      	strb	r3, [r4, #0]
      break;
 8015924:	e172      	b.n	8015c0c <Request_MessageReq+0x5f4>
    case GUI_MSG_GET_COUNTRY_CODES :
      status = USBPD_DPM_RequestGetCountryCodes(PortNum);
 8015926:	233f      	movs	r3, #63	; 0x3f
 8015928:	18fc      	adds	r4, r7, r3
 801592a:	230f      	movs	r3, #15
 801592c:	18fb      	adds	r3, r7, r3
 801592e:	781b      	ldrb	r3, [r3, #0]
 8015930:	0018      	movs	r0, r3
 8015932:	f7fd f83b 	bl	80129ac <USBPD_DPM_RequestGetCountryCodes>
 8015936:	0003      	movs	r3, r0
 8015938:	7023      	strb	r3, [r4, #0]
      break;
 801593a:	e167      	b.n	8015c0c <Request_MessageReq+0x5f4>
    case GUI_MSG_GET_STATUS :
      status = USBPD_DPM_RequestGetStatus(PortNum);
 801593c:	233f      	movs	r3, #63	; 0x3f
 801593e:	18fc      	adds	r4, r7, r3
 8015940:	230f      	movs	r3, #15
 8015942:	18fb      	adds	r3, r7, r3
 8015944:	781b      	ldrb	r3, [r3, #0]
 8015946:	0018      	movs	r0, r3
 8015948:	f7fc ffa4 	bl	8012894 <USBPD_DPM_RequestGetStatus>
 801594c:	0003      	movs	r3, r0
 801594e:	7023      	strb	r3, [r4, #0]
      break;
 8015950:	e15c      	b.n	8015c0c <Request_MessageReq+0x5f4>
    case GUI_MSG_GET_SOURCE_CAPA_EXTENDED :
      status = USBPD_DPM_RequestGetSourceCapabilityExt(PortNum);
 8015952:	233f      	movs	r3, #63	; 0x3f
 8015954:	18fc      	adds	r4, r7, r3
 8015956:	230f      	movs	r3, #15
 8015958:	18fb      	adds	r3, r7, r3
 801595a:	781b      	ldrb	r3, [r3, #0]
 801595c:	0018      	movs	r0, r3
 801595e:	f7fc fe71 	bl	8012644 <USBPD_DPM_RequestGetSourceCapabilityExt>
 8015962:	0003      	movs	r3, r0
 8015964:	7023      	strb	r3, [r4, #0]
      break;
 8015966:	e151      	b.n	8015c0c <Request_MessageReq+0x5f4>
    case GUI_MSG_GET_SINK_CAPA_EXTENDED :
      status = USBPD_DPM_RequestGetSinkCapabilityExt(PortNum);
 8015968:	233f      	movs	r3, #63	; 0x3f
 801596a:	18fc      	adds	r4, r7, r3
 801596c:	230f      	movs	r3, #15
 801596e:	18fb      	adds	r3, r7, r3
 8015970:	781b      	ldrb	r3, [r3, #0]
 8015972:	0018      	movs	r0, r3
 8015974:	f7fc feac 	bl	80126d0 <USBPD_DPM_RequestGetSinkCapabilityExt>
 8015978:	0003      	movs	r3, r0
 801597a:	7023      	strb	r3, [r4, #0]
      break;
 801597c:	e146      	b.n	8015c0c <Request_MessageReq+0x5f4>
    case GUI_MSG_ALERT :
      if (length > TLV_SIZE_MAX)
 801597e:	211c      	movs	r1, #28
 8015980:	187b      	adds	r3, r7, r1
 8015982:	881a      	ldrh	r2, [r3, #0]
 8015984:	2380      	movs	r3, #128	; 0x80
 8015986:	005b      	lsls	r3, r3, #1
 8015988:	429a      	cmp	r2, r3
 801598a:	d900      	bls.n	801598e <Request_MessageReq+0x376>
 801598c:	e12b      	b.n	8015be6 <Request_MessageReq+0x5ce>
      {
        break;
      }
      (void)TLV_get(&process_tlv, &tag, &length, &value);
 801598e:	2318      	movs	r3, #24
 8015990:	18fb      	adds	r3, r7, r3
 8015992:	187a      	adds	r2, r7, r1
 8015994:	241e      	movs	r4, #30
 8015996:	1939      	adds	r1, r7, r4
 8015998:	202c      	movs	r0, #44	; 0x2c
 801599a:	1838      	adds	r0, r7, r0
 801599c:	f7fe fa08 	bl	8013db0 <TLV_get>
      if (GUI_PARAM_MSG_ALERTMSG == (USBPD_GUI_Tag_ParamMsg)tag)
 80159a0:	193b      	adds	r3, r7, r4
 80159a2:	781b      	ldrb	r3, [r3, #0]
 80159a4:	2b04      	cmp	r3, #4
 80159a6:	d000      	beq.n	80159aa <Request_MessageReq+0x392>
 80159a8:	e11f      	b.n	8015bea <Request_MessageReq+0x5d2>
      {
        USBPD_ADO_TypeDef alert;
        alert.d32 = USBPD_LE32(&value[0]);
 80159aa:	69bb      	ldr	r3, [r7, #24]
 80159ac:	781b      	ldrb	r3, [r3, #0]
 80159ae:	001a      	movs	r2, r3
 80159b0:	69bb      	ldr	r3, [r7, #24]
 80159b2:	3301      	adds	r3, #1
 80159b4:	781b      	ldrb	r3, [r3, #0]
 80159b6:	021b      	lsls	r3, r3, #8
 80159b8:	18d2      	adds	r2, r2, r3
 80159ba:	69bb      	ldr	r3, [r7, #24]
 80159bc:	3302      	adds	r3, #2
 80159be:	781b      	ldrb	r3, [r3, #0]
 80159c0:	041b      	lsls	r3, r3, #16
 80159c2:	18d2      	adds	r2, r2, r3
 80159c4:	69bb      	ldr	r3, [r7, #24]
 80159c6:	3303      	adds	r3, #3
 80159c8:	781b      	ldrb	r3, [r3, #0]
 80159ca:	061b      	lsls	r3, r3, #24
 80159cc:	18d3      	adds	r3, r2, r3
 80159ce:	617b      	str	r3, [r7, #20]
        status = USBPD_DPM_RequestAlert(PortNum, alert);
 80159d0:	233f      	movs	r3, #63	; 0x3f
 80159d2:	18fc      	adds	r4, r7, r3
 80159d4:	697a      	ldr	r2, [r7, #20]
 80159d6:	230f      	movs	r3, #15
 80159d8:	18fb      	adds	r3, r7, r3
 80159da:	781b      	ldrb	r3, [r3, #0]
 80159dc:	0011      	movs	r1, r2
 80159de:	0018      	movs	r0, r3
 80159e0:	f7fc fde8 	bl	80125b4 <USBPD_DPM_RequestAlert>
 80159e4:	0003      	movs	r3, r0
 80159e6:	7023      	strb	r3, [r4, #0]
      }
      break;
 80159e8:	e0ff      	b.n	8015bea <Request_MessageReq+0x5d2>
 80159ea:	46c0      	nop			; (mov r8, r8)
 80159ec:	08019c10 	.word	0x08019c10
    case GUI_MSG_GET_COUNTRY_INFO :
      if (length > TLV_SIZE_MAX)
 80159f0:	211c      	movs	r1, #28
 80159f2:	187b      	adds	r3, r7, r1
 80159f4:	881a      	ldrh	r2, [r3, #0]
 80159f6:	2380      	movs	r3, #128	; 0x80
 80159f8:	005b      	lsls	r3, r3, #1
 80159fa:	429a      	cmp	r2, r3
 80159fc:	d900      	bls.n	8015a00 <Request_MessageReq+0x3e8>
 80159fe:	e0f6      	b.n	8015bee <Request_MessageReq+0x5d6>
      {
        break;
      }
      (void)TLV_get(&process_tlv, &tag, &length, &value);
 8015a00:	2318      	movs	r3, #24
 8015a02:	18fb      	adds	r3, r7, r3
 8015a04:	187a      	adds	r2, r7, r1
 8015a06:	241e      	movs	r4, #30
 8015a08:	1939      	adds	r1, r7, r4
 8015a0a:	202c      	movs	r0, #44	; 0x2c
 8015a0c:	1838      	adds	r0, r7, r0
 8015a0e:	f7fe f9cf 	bl	8013db0 <TLV_get>
      if (GUI_PARAM_MSG_COUNTRYCODE == (USBPD_GUI_Tag_ParamMsg)tag)
 8015a12:	193b      	adds	r3, r7, r4
 8015a14:	781b      	ldrb	r3, [r3, #0]
 8015a16:	2b05      	cmp	r3, #5
 8015a18:	d000      	beq.n	8015a1c <Request_MessageReq+0x404>
 8015a1a:	e0ea      	b.n	8015bf2 <Request_MessageReq+0x5da>
      {
        uint16_t country_code;
        country_code = USBPD_LE16(&value[0]);
 8015a1c:	69bb      	ldr	r3, [r7, #24]
 8015a1e:	781b      	ldrb	r3, [r3, #0]
 8015a20:	b299      	uxth	r1, r3
 8015a22:	69bb      	ldr	r3, [r7, #24]
 8015a24:	3301      	adds	r3, #1
 8015a26:	781b      	ldrb	r3, [r3, #0]
 8015a28:	b29b      	uxth	r3, r3
 8015a2a:	021b      	lsls	r3, r3, #8
 8015a2c:	b29a      	uxth	r2, r3
 8015a2e:	2034      	movs	r0, #52	; 0x34
 8015a30:	183b      	adds	r3, r7, r0
 8015a32:	188a      	adds	r2, r1, r2
 8015a34:	801a      	strh	r2, [r3, #0]
        status = USBPD_DPM_RequestGetCountryInfo(PortNum, country_code);
 8015a36:	233f      	movs	r3, #63	; 0x3f
 8015a38:	18fc      	adds	r4, r7, r3
 8015a3a:	183b      	adds	r3, r7, r0
 8015a3c:	881a      	ldrh	r2, [r3, #0]
 8015a3e:	230f      	movs	r3, #15
 8015a40:	18fb      	adds	r3, r7, r3
 8015a42:	781b      	ldrb	r3, [r3, #0]
 8015a44:	0011      	movs	r1, r2
 8015a46:	0018      	movs	r0, r3
 8015a48:	f7fc fff6 	bl	8012a38 <USBPD_DPM_RequestGetCountryInfo>
 8015a4c:	0003      	movs	r3, r0
 8015a4e:	7023      	strb	r3, [r4, #0]
      }
      break;
 8015a50:	e0cf      	b.n	8015bf2 <Request_MessageReq+0x5da>
    case GUI_MSG_GET_BAT_CAPA :
      if (length > TLV_SIZE_MAX)
 8015a52:	211c      	movs	r1, #28
 8015a54:	187b      	adds	r3, r7, r1
 8015a56:	881a      	ldrh	r2, [r3, #0]
 8015a58:	2380      	movs	r3, #128	; 0x80
 8015a5a:	005b      	lsls	r3, r3, #1
 8015a5c:	429a      	cmp	r2, r3
 8015a5e:	d900      	bls.n	8015a62 <Request_MessageReq+0x44a>
 8015a60:	e0c9      	b.n	8015bf6 <Request_MessageReq+0x5de>
      {
        break;
      }
      (void)TLV_get(&process_tlv, &tag, &length, &value);
 8015a62:	2318      	movs	r3, #24
 8015a64:	18fb      	adds	r3, r7, r3
 8015a66:	187a      	adds	r2, r7, r1
 8015a68:	241e      	movs	r4, #30
 8015a6a:	1939      	adds	r1, r7, r4
 8015a6c:	202c      	movs	r0, #44	; 0x2c
 8015a6e:	1838      	adds	r0, r7, r0
 8015a70:	f7fe f99e 	bl	8013db0 <TLV_get>
      if (GUI_PARAM_MSG_BATTERYREF == (USBPD_GUI_Tag_ParamMsg)tag)
 8015a74:	193b      	adds	r3, r7, r4
 8015a76:	781b      	ldrb	r3, [r3, #0]
 8015a78:	2b0c      	cmp	r3, #12
 8015a7a:	d000      	beq.n	8015a7e <Request_MessageReq+0x466>
 8015a7c:	e0bd      	b.n	8015bfa <Request_MessageReq+0x5e2>
      {
        status = USBPD_DPM_RequestGetBatteryCapability(PortNum, (uint8_t *)&value[0]);
 8015a7e:	69ba      	ldr	r2, [r7, #24]
 8015a80:	233f      	movs	r3, #63	; 0x3f
 8015a82:	18fc      	adds	r4, r7, r3
 8015a84:	230f      	movs	r3, #15
 8015a86:	18fb      	adds	r3, r7, r3
 8015a88:	781b      	ldrb	r3, [r3, #0]
 8015a8a:	0011      	movs	r1, r2
 8015a8c:	0018      	movs	r0, r3
 8015a8e:	f7fd f81d 	bl	8012acc <USBPD_DPM_RequestGetBatteryCapability>
 8015a92:	0003      	movs	r3, r0
 8015a94:	7023      	strb	r3, [r4, #0]
      }
      break;
 8015a96:	e0b0      	b.n	8015bfa <Request_MessageReq+0x5e2>
    case GUI_MSG_GET_BAT_STATUS :
      if (length > TLV_SIZE_MAX)
 8015a98:	211c      	movs	r1, #28
 8015a9a:	187b      	adds	r3, r7, r1
 8015a9c:	881a      	ldrh	r2, [r3, #0]
 8015a9e:	2380      	movs	r3, #128	; 0x80
 8015aa0:	005b      	lsls	r3, r3, #1
 8015aa2:	429a      	cmp	r2, r3
 8015aa4:	d900      	bls.n	8015aa8 <Request_MessageReq+0x490>
 8015aa6:	e0aa      	b.n	8015bfe <Request_MessageReq+0x5e6>
      {
        break;
      }
      (void)TLV_get(&process_tlv, &tag, &length, &value);
 8015aa8:	2318      	movs	r3, #24
 8015aaa:	18fb      	adds	r3, r7, r3
 8015aac:	187a      	adds	r2, r7, r1
 8015aae:	241e      	movs	r4, #30
 8015ab0:	1939      	adds	r1, r7, r4
 8015ab2:	202c      	movs	r0, #44	; 0x2c
 8015ab4:	1838      	adds	r0, r7, r0
 8015ab6:	f7fe f97b 	bl	8013db0 <TLV_get>
      if (GUI_PARAM_MSG_BATTERYREF == (USBPD_GUI_Tag_ParamMsg)tag)
 8015aba:	193b      	adds	r3, r7, r4
 8015abc:	781b      	ldrb	r3, [r3, #0]
 8015abe:	2b0c      	cmp	r3, #12
 8015ac0:	d000      	beq.n	8015ac4 <Request_MessageReq+0x4ac>
 8015ac2:	e09e      	b.n	8015c02 <Request_MessageReq+0x5ea>
      {
        status = USBPD_DPM_RequestGetBatteryStatus(PortNum, (uint8_t *)&value[0]);
 8015ac4:	69ba      	ldr	r2, [r7, #24]
 8015ac6:	233f      	movs	r3, #63	; 0x3f
 8015ac8:	18fc      	adds	r4, r7, r3
 8015aca:	230f      	movs	r3, #15
 8015acc:	18fb      	adds	r3, r7, r3
 8015ace:	781b      	ldrb	r3, [r3, #0]
 8015ad0:	0011      	movs	r1, r2
 8015ad2:	0018      	movs	r0, r3
 8015ad4:	f7fd f844 	bl	8012b60 <USBPD_DPM_RequestGetBatteryStatus>
 8015ad8:	0003      	movs	r3, r0
 8015ada:	7023      	strb	r3, [r4, #0]
      }
      break;
 8015adc:	e091      	b.n	8015c02 <Request_MessageReq+0x5ea>
    case GUI_MSG_GET_MANU_INFO :
    {
      uint8_t manu_info[2];
      uint8_t nb_expected_tag = 0U;
 8015ade:	2338      	movs	r3, #56	; 0x38
 8015ae0:	18fb      	adds	r3, r7, r3
 8015ae2:	2200      	movs	r2, #0
 8015ae4:	701a      	strb	r2, [r3, #0]
      uint8_t sop = (uint8_t)USBPD_SOPTYPE_SOP;
 8015ae6:	2337      	movs	r3, #55	; 0x37
 8015ae8:	18fb      	adds	r3, r7, r3
 8015aea:	2200      	movs	r2, #0
 8015aec:	701a      	strb	r2, [r3, #0]
      if (length > TLV_SIZE_MAX)
 8015aee:	211c      	movs	r1, #28
 8015af0:	187b      	adds	r3, r7, r1
 8015af2:	881a      	ldrh	r2, [r3, #0]
 8015af4:	2380      	movs	r3, #128	; 0x80
 8015af6:	005b      	lsls	r3, r3, #1
 8015af8:	429a      	cmp	r2, r3
 8015afa:	d900      	bls.n	8015afe <Request_MessageReq+0x4e6>
 8015afc:	e083      	b.n	8015c06 <Request_MessageReq+0x5ee>
      {
        break;
      }
      (void)TLV_get(&process_tlv, &tag, &length, &value);
 8015afe:	2318      	movs	r3, #24
 8015b00:	18fb      	adds	r3, r7, r3
 8015b02:	187a      	adds	r2, r7, r1
 8015b04:	211e      	movs	r1, #30
 8015b06:	1879      	adds	r1, r7, r1
 8015b08:	202c      	movs	r0, #44	; 0x2c
 8015b0a:	1838      	adds	r0, r7, r0
 8015b0c:	f7fe f950 	bl	8013db0 <TLV_get>
      while ((0U != length) && (TLV_SIZE_MAX > length) && (nb_expected_tag < 3U))
 8015b10:	e02f      	b.n	8015b72 <Request_MessageReq+0x55a>
      {
        nb_expected_tag++;
 8015b12:	2138      	movs	r1, #56	; 0x38
 8015b14:	187b      	adds	r3, r7, r1
 8015b16:	781a      	ldrb	r2, [r3, #0]
 8015b18:	187b      	adds	r3, r7, r1
 8015b1a:	3201      	adds	r2, #1
 8015b1c:	701a      	strb	r2, [r3, #0]
        if (GUI_PARAM_MSG_SOPTYPE == (USBPD_GUI_Tag_ParamMsg)tag)
 8015b1e:	231e      	movs	r3, #30
 8015b20:	18fb      	adds	r3, r7, r3
 8015b22:	781b      	ldrb	r3, [r3, #0]
 8015b24:	2b00      	cmp	r3, #0
 8015b26:	d105      	bne.n	8015b34 <Request_MessageReq+0x51c>
        {
          sop = value[0];
 8015b28:	69ba      	ldr	r2, [r7, #24]
 8015b2a:	2337      	movs	r3, #55	; 0x37
 8015b2c:	18fb      	adds	r3, r7, r3
 8015b2e:	7812      	ldrb	r2, [r2, #0]
 8015b30:	701a      	strb	r2, [r3, #0]
 8015b32:	e014      	b.n	8015b5e <Request_MessageReq+0x546>
        }
        else if (GUI_PARAM_MSG_BATTERYREF == (USBPD_GUI_Tag_ParamMsg)tag)
 8015b34:	231e      	movs	r3, #30
 8015b36:	18fb      	adds	r3, r7, r3
 8015b38:	781b      	ldrb	r3, [r3, #0]
 8015b3a:	2b0c      	cmp	r3, #12
 8015b3c:	d105      	bne.n	8015b4a <Request_MessageReq+0x532>
        {
          manu_info[1] = value[0];
 8015b3e:	69bb      	ldr	r3, [r7, #24]
 8015b40:	781a      	ldrb	r2, [r3, #0]
 8015b42:	2310      	movs	r3, #16
 8015b44:	18fb      	adds	r3, r7, r3
 8015b46:	705a      	strb	r2, [r3, #1]
 8015b48:	e009      	b.n	8015b5e <Request_MessageReq+0x546>
        }
        else if (GUI_PARAM_MSG_MANUINFODATA == (USBPD_GUI_Tag_ParamMsg)tag)
 8015b4a:	231e      	movs	r3, #30
 8015b4c:	18fb      	adds	r3, r7, r3
 8015b4e:	781b      	ldrb	r3, [r3, #0]
 8015b50:	2b0d      	cmp	r3, #13
 8015b52:	d104      	bne.n	8015b5e <Request_MessageReq+0x546>
        {
          manu_info[0] = value[0];
 8015b54:	69bb      	ldr	r3, [r7, #24]
 8015b56:	781a      	ldrb	r2, [r3, #0]
 8015b58:	2310      	movs	r3, #16
 8015b5a:	18fb      	adds	r3, r7, r3
 8015b5c:	701a      	strb	r2, [r3, #0]
        else
        {
          /* Nothing to do */
        }

        (void)TLV_get(&process_tlv, &tag, &length, &value);
 8015b5e:	2318      	movs	r3, #24
 8015b60:	18fb      	adds	r3, r7, r3
 8015b62:	221c      	movs	r2, #28
 8015b64:	18ba      	adds	r2, r7, r2
 8015b66:	211e      	movs	r1, #30
 8015b68:	1879      	adds	r1, r7, r1
 8015b6a:	202c      	movs	r0, #44	; 0x2c
 8015b6c:	1838      	adds	r0, r7, r0
 8015b6e:	f7fe f91f 	bl	8013db0 <TLV_get>
      while ((0U != length) && (TLV_SIZE_MAX > length) && (nb_expected_tag < 3U))
 8015b72:	221c      	movs	r2, #28
 8015b74:	18bb      	adds	r3, r7, r2
 8015b76:	881b      	ldrh	r3, [r3, #0]
 8015b78:	2b00      	cmp	r3, #0
 8015b7a:	d008      	beq.n	8015b8e <Request_MessageReq+0x576>
 8015b7c:	18bb      	adds	r3, r7, r2
 8015b7e:	881b      	ldrh	r3, [r3, #0]
 8015b80:	2bff      	cmp	r3, #255	; 0xff
 8015b82:	d804      	bhi.n	8015b8e <Request_MessageReq+0x576>
 8015b84:	2338      	movs	r3, #56	; 0x38
 8015b86:	18fb      	adds	r3, r7, r3
 8015b88:	781b      	ldrb	r3, [r3, #0]
 8015b8a:	2b02      	cmp	r3, #2
 8015b8c:	d9c1      	bls.n	8015b12 <Request_MessageReq+0x4fa>
      }
      if (3U == nb_expected_tag)
 8015b8e:	2338      	movs	r3, #56	; 0x38
 8015b90:	18fb      	adds	r3, r7, r3
 8015b92:	781b      	ldrb	r3, [r3, #0]
 8015b94:	2b03      	cmp	r3, #3
 8015b96:	d138      	bne.n	8015c0a <Request_MessageReq+0x5f2>
      {
        status = USBPD_DPM_RequestGetManufacturerInfo(PortNum, (USBPD_SOPType_TypeDef)sop, (uint8_t *)&manu_info);
 8015b98:	233f      	movs	r3, #63	; 0x3f
 8015b9a:	18fc      	adds	r4, r7, r3
 8015b9c:	2310      	movs	r3, #16
 8015b9e:	18fa      	adds	r2, r7, r3
 8015ba0:	2337      	movs	r3, #55	; 0x37
 8015ba2:	18fb      	adds	r3, r7, r3
 8015ba4:	7819      	ldrb	r1, [r3, #0]
 8015ba6:	230f      	movs	r3, #15
 8015ba8:	18fb      	adds	r3, r7, r3
 8015baa:	781b      	ldrb	r3, [r3, #0]
 8015bac:	0018      	movs	r0, r3
 8015bae:	f7fc fdd5 	bl	801275c <USBPD_DPM_RequestGetManufacturerInfo>
 8015bb2:	0003      	movs	r3, r0
 8015bb4:	7023      	strb	r3, [r4, #0]
      }
      break;
 8015bb6:	e028      	b.n	8015c0a <Request_MessageReq+0x5f2>
    }
    case GUI_MSG_SECU_REQUEST :
      status = USBPD_DPM_RequestSecurityRequest(PortNum);
 8015bb8:	233f      	movs	r3, #63	; 0x3f
 8015bba:	18fc      	adds	r4, r7, r3
 8015bbc:	230f      	movs	r3, #15
 8015bbe:	18fb      	adds	r3, r7, r3
 8015bc0:	781b      	ldrb	r3, [r3, #0]
 8015bc2:	0018      	movs	r0, r3
 8015bc4:	f7fd f816 	bl	8012bf4 <USBPD_DPM_RequestSecurityRequest>
 8015bc8:	0003      	movs	r3, r0
 8015bca:	7023      	strb	r3, [r4, #0]
      break;
 8015bcc:	e01e      	b.n	8015c0c <Request_MessageReq+0x5f4>
    case GUI_MSG_FIRM_UPDATE_REQUEST :
      break;
#endif /* USBPD_REV30_SUPPORT */
    default :
      break;
 8015bce:	46c0      	nop			; (mov r8, r8)
 8015bd0:	e01c      	b.n	8015c0c <Request_MessageReq+0x5f4>
        break;
 8015bd2:	46c0      	nop			; (mov r8, r8)
 8015bd4:	e01a      	b.n	8015c0c <Request_MessageReq+0x5f4>
      break;
 8015bd6:	46c0      	nop			; (mov r8, r8)
 8015bd8:	e018      	b.n	8015c0c <Request_MessageReq+0x5f4>
      break;
 8015bda:	46c0      	nop			; (mov r8, r8)
 8015bdc:	e016      	b.n	8015c0c <Request_MessageReq+0x5f4>
        break;
 8015bde:	46c0      	nop			; (mov r8, r8)
 8015be0:	e014      	b.n	8015c0c <Request_MessageReq+0x5f4>
      break;
 8015be2:	46c0      	nop			; (mov r8, r8)
 8015be4:	e012      	b.n	8015c0c <Request_MessageReq+0x5f4>
        break;
 8015be6:	46c0      	nop			; (mov r8, r8)
 8015be8:	e010      	b.n	8015c0c <Request_MessageReq+0x5f4>
      break;
 8015bea:	46c0      	nop			; (mov r8, r8)
 8015bec:	e00e      	b.n	8015c0c <Request_MessageReq+0x5f4>
        break;
 8015bee:	46c0      	nop			; (mov r8, r8)
 8015bf0:	e00c      	b.n	8015c0c <Request_MessageReq+0x5f4>
      break;
 8015bf2:	46c0      	nop			; (mov r8, r8)
 8015bf4:	e00a      	b.n	8015c0c <Request_MessageReq+0x5f4>
        break;
 8015bf6:	46c0      	nop			; (mov r8, r8)
 8015bf8:	e008      	b.n	8015c0c <Request_MessageReq+0x5f4>
      break;
 8015bfa:	46c0      	nop			; (mov r8, r8)
 8015bfc:	e006      	b.n	8015c0c <Request_MessageReq+0x5f4>
        break;
 8015bfe:	46c0      	nop			; (mov r8, r8)
 8015c00:	e004      	b.n	8015c0c <Request_MessageReq+0x5f4>
      break;
 8015c02:	46c0      	nop			; (mov r8, r8)
 8015c04:	e002      	b.n	8015c0c <Request_MessageReq+0x5f4>
        break;
 8015c06:	46c0      	nop			; (mov r8, r8)
 8015c08:	e000      	b.n	8015c0c <Request_MessageReq+0x5f4>
      break;
 8015c0a:	46c0      	nop			; (mov r8, r8)
  }

  /* Only applies if an error was specified (= if the case couldn't success)*/
  if (USBPD_OK != status)
 8015c0c:	223f      	movs	r2, #63	; 0x3f
 8015c0e:	18bb      	adds	r3, r7, r2
 8015c10:	781b      	ldrb	r3, [r3, #0]
 8015c12:	2b00      	cmp	r3, #0
 8015c14:	d031      	beq.n	8015c7a <Request_MessageReq+0x662>
  {
    switch (status)
 8015c16:	18bb      	adds	r3, r7, r2
 8015c18:	781b      	ldrb	r3, [r3, #0]
 8015c1a:	2b03      	cmp	r3, #3
 8015c1c:	d002      	beq.n	8015c24 <Request_MessageReq+0x60c>
 8015c1e:	2b04      	cmp	r3, #4
 8015c20:	d005      	beq.n	8015c2e <Request_MessageReq+0x616>
 8015c22:	e009      	b.n	8015c38 <Request_MessageReq+0x620>
    {
      case USBPD_BUSY:
        error = GUI_REJ_DPM_NOT_READY;
 8015c24:	231f      	movs	r3, #31
 8015c26:	18fb      	adds	r3, r7, r3
 8015c28:	2206      	movs	r2, #6
 8015c2a:	701a      	strb	r2, [r3, #0]
        break;
 8015c2c:	e009      	b.n	8015c42 <Request_MessageReq+0x62a>
      case USBPD_TIMEOUT:
        error = GUI_REJ_DPM_TIMEOUT;
 8015c2e:	231f      	movs	r3, #31
 8015c30:	18fb      	adds	r3, r7, r3
 8015c32:	2202      	movs	r2, #2
 8015c34:	701a      	strb	r2, [r3, #0]
        break;
 8015c36:	e004      	b.n	8015c42 <Request_MessageReq+0x62a>
      case USBPD_NOTSUPPORTED:
      case USBPD_ERROR:
      default:
        error = GUI_REJ_DPM_REJECT;
 8015c38:	231f      	movs	r3, #31
 8015c3a:	18fb      	adds	r3, r7, r3
 8015c3c:	2200      	movs	r2, #0
 8015c3e:	701a      	strb	r2, [r3, #0]
        break;
 8015c40:	46c0      	nop			; (mov r8, r8)
    }
    TLV_deinit_encode(&send_tlv);
 8015c42:	2420      	movs	r4, #32
 8015c44:	193b      	adds	r3, r7, r4
 8015c46:	0018      	movs	r0, r3
 8015c48:	f7fe f874 	bl	8013d34 <TLV_deinit_encode>
    (void)TLV_init_encode(&send_tlv, __GUI_SET_TAG_ID((PortNum + 1), DPM_MESSAGE_REJ), TLV_SIZE_MAX,
 8015c4c:	230f      	movs	r3, #15
 8015c4e:	18fb      	adds	r3, r7, r3
 8015c50:	781b      	ldrb	r3, [r3, #0]
 8015c52:	3301      	adds	r3, #1
 8015c54:	015b      	lsls	r3, r3, #5
 8015c56:	b25b      	sxtb	r3, r3
 8015c58:	220b      	movs	r2, #11
 8015c5a:	4313      	orrs	r3, r2
 8015c5c:	b25b      	sxtb	r3, r3
 8015c5e:	b2d9      	uxtb	r1, r3
 8015c60:	687b      	ldr	r3, [r7, #4]
 8015c62:	2280      	movs	r2, #128	; 0x80
 8015c64:	0052      	lsls	r2, r2, #1
 8015c66:	1938      	adds	r0, r7, r4
 8015c68:	f7fd fe9f 	bl	80139aa <TLV_init_encode>
                          pEncodedMsg); /* Turn the tag 0x0A into 0x0B to signal an error*/
    (void)TLV_addValue(&send_tlv, (uint8_t *)&error, 1);
 8015c6c:	231f      	movs	r3, #31
 8015c6e:	18f9      	adds	r1, r7, r3
 8015c70:	193b      	adds	r3, r7, r4
 8015c72:	2201      	movs	r2, #1
 8015c74:	0018      	movs	r0, r3
 8015c76:	f7fd ffc9 	bl	8013c0c <TLV_addValue>
  }

  TLV_deinit_encode(&send_tlv);
 8015c7a:	2320      	movs	r3, #32
 8015c7c:	18fb      	adds	r3, r7, r3
 8015c7e:	0018      	movs	r0, r3
 8015c80:	f7fe f858 	bl	8013d34 <TLV_deinit_encode>
  TLV_deinit_decode(&process_tlv);
 8015c84:	232c      	movs	r3, #44	; 0x2c
 8015c86:	18fb      	adds	r3, r7, r3
 8015c88:	0018      	movs	r0, r3
 8015c8a:	f7fe f8eb 	bl	8013e64 <TLV_deinit_decode>
}
 8015c8e:	46c0      	nop			; (mov r8, r8)
 8015c90:	46bd      	mov	sp, r7
 8015c92:	b010      	add	sp, #64	; 0x40
 8015c94:	bdb0      	pop	{r4, r5, r7, pc}
 8015c96:	46c0      	nop			; (mov r8, r8)

08015c98 <Send_DpmConfigSetCnf>:
/**
  * @brief      Application of the received configuration
  * @note       Generation of a TLV instruction to send in the context of DPM_CONFIG_SET
  */
static void Send_DpmConfigSetCnf(uint8_t PortNum, uint8_t *instruction, uint8_t *pEncodedMsg)
{
 8015c98:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015c9a:	b0d5      	sub	sp, #340	; 0x154
 8015c9c:	af00      	add	r7, sp, #0
 8015c9e:	60b9      	str	r1, [r7, #8]
 8015ca0:	607a      	str	r2, [r7, #4]
 8015ca2:	4bcd      	ldr	r3, [pc, #820]	; (8015fd8 <Send_DpmConfigSetCnf+0x340>)
 8015ca4:	24a8      	movs	r4, #168	; 0xa8
 8015ca6:	0064      	lsls	r4, r4, #1
 8015ca8:	191b      	adds	r3, r3, r4
 8015caa:	19db      	adds	r3, r3, r7
 8015cac:	1c02      	adds	r2, r0, #0
 8015cae:	701a      	strb	r2, [r3, #0]
    In case there is an error, we use this variable to know when to send a DPM_CONFIG_SET instead
    of a DPM_MESSAGE_CNF. This variable contains the cause if there is one.
  */
  uint8_t *value;
  uint16_t size;
  uint16_t dcdrp = 0;
 8015cb0:	23a7      	movs	r3, #167	; 0xa7
 8015cb2:	005b      	lsls	r3, r3, #1
 8015cb4:	18fb      	adds	r3, r7, r3
 8015cb6:	2200      	movs	r2, #0
 8015cb8:	801a      	strh	r2, [r3, #0]
  uint8_t error = 0xFF;
 8015cba:	231a      	movs	r3, #26
 8015cbc:	33ff      	adds	r3, #255	; 0xff
 8015cbe:	18fb      	adds	r3, r7, r3
 8015cc0:	22ff      	movs	r2, #255	; 0xff
 8015cc2:	701a      	strb	r2, [r3, #0]
  uint8_t param_not_applicated[GUI_PARAM_ALL]; /* List of parameters who could not be applied. */
  uint8_t counter_param_not_applicated = 0U;  /* Counter of not applicated parameters */
 8015cc4:	234e      	movs	r3, #78	; 0x4e
 8015cc6:	33ff      	adds	r3, #255	; 0xff
 8015cc8:	18fb      	adds	r3, r7, r3
 8015cca:	2200      	movs	r2, #0
 8015ccc:	701a      	strb	r2, [r3, #0]
  uint8_t tag;
  uint8_t flag_drp = 0;
 8015cce:	23a6      	movs	r3, #166	; 0xa6
 8015cd0:	005b      	lsls	r3, r3, #1
 8015cd2:	18fb      	adds	r3, r7, r3
 8015cd4:	2200      	movs	r2, #0
 8015cd6:	701a      	strb	r2, [r3, #0]
  uint8_t tdrp = 0;
 8015cd8:	234c      	movs	r3, #76	; 0x4c
 8015cda:	33ff      	adds	r3, #255	; 0xff
 8015cdc:	18fb      	adds	r3, r7, r3
 8015cde:	2200      	movs	r2, #0
 8015ce0:	701a      	strb	r2, [r3, #0]

  (void)TLV_init_decode(&process_tlv, instruction);
 8015ce2:	68ba      	ldr	r2, [r7, #8]
 8015ce4:	2390      	movs	r3, #144	; 0x90
 8015ce6:	005b      	lsls	r3, r3, #1
 8015ce8:	18fb      	adds	r3, r7, r3
 8015cea:	0011      	movs	r1, r2
 8015cec:	0018      	movs	r0, r3
 8015cee:	f7fe f833 	bl	8013d58 <TLV_init_decode>
  /* pEncodedMsg can be sent as it is at this point, if there isn't any error during application of settings*/
  (void)TLV_init_encode(&send_tlv, __GUI_SET_TAG_ID((PortNum + 1), DPM_CONFIG_SET_CNF), TLV_SIZE_MAX, pEncodedMsg);
 8015cf2:	4bb9      	ldr	r3, [pc, #740]	; (8015fd8 <Send_DpmConfigSetCnf+0x340>)
 8015cf4:	191b      	adds	r3, r3, r4
 8015cf6:	19db      	adds	r3, r3, r7
 8015cf8:	781b      	ldrb	r3, [r3, #0]
 8015cfa:	3301      	adds	r3, #1
 8015cfc:	015b      	lsls	r3, r3, #5
 8015cfe:	b25b      	sxtb	r3, r3
 8015d00:	2207      	movs	r2, #7
 8015d02:	4313      	orrs	r3, r2
 8015d04:	b25b      	sxtb	r3, r3
 8015d06:	b2d9      	uxtb	r1, r3
 8015d08:	687b      	ldr	r3, [r7, #4]
 8015d0a:	2280      	movs	r2, #128	; 0x80
 8015d0c:	0052      	lsls	r2, r2, #1
 8015d0e:	2094      	movs	r0, #148	; 0x94
 8015d10:	0040      	lsls	r0, r0, #1
 8015d12:	1838      	adds	r0, r7, r0
 8015d14:	f7fd fe49 	bl	80139aa <TLV_init_encode>

  /* Do while loop, used to parse and apply each parameter */
  while ((uint8_t)(0xFF) != TLV_get(&process_tlv, &tag, &size, &value))
 8015d18:	e2e5      	b.n	80162e6 <Send_DpmConfigSetCnf+0x64e>
      As long as we haven't read all the parameters. If error is set, we continue to loop
      to apply the other parameters if it's because of a DPM_REJECT
      While loop, used to parse and apply each parameter
    */
  {
    switch ((USBPD_GUI_Tag_Param)tag)
 8015d1a:	4bb0      	ldr	r3, [pc, #704]	; (8015fdc <Send_DpmConfigSetCnf+0x344>)
 8015d1c:	22a8      	movs	r2, #168	; 0xa8
 8015d1e:	0052      	lsls	r2, r2, #1
 8015d20:	189b      	adds	r3, r3, r2
 8015d22:	19db      	adds	r3, r3, r7
 8015d24:	781b      	ldrb	r3, [r3, #0]
 8015d26:	2b1c      	cmp	r3, #28
 8015d28:	d900      	bls.n	8015d2c <Send_DpmConfigSetCnf+0x94>
 8015d2a:	e2c3      	b.n	80162b4 <Send_DpmConfigSetCnf+0x61c>
 8015d2c:	009a      	lsls	r2, r3, #2
 8015d2e:	4bac      	ldr	r3, [pc, #688]	; (8015fe0 <Send_DpmConfigSetCnf+0x348>)
 8015d30:	18d3      	adds	r3, r2, r3
 8015d32:	681b      	ldr	r3, [r3, #0]
 8015d34:	469f      	mov	pc, r3
    {
      case GUI_PARAM_SOP :
#if !defined(USBPDCORE_LIB_NO_PD)
        /* SOP & SOP1 & SOP2 */
        /* SOP1_Debug & SOP2_Debug not implemented */
        DPM_Settings[PortNum].PE_SupportedSOP = value[0];
 8015d36:	238e      	movs	r3, #142	; 0x8e
 8015d38:	005b      	lsls	r3, r3, #1
 8015d3a:	18fb      	adds	r3, r7, r3
 8015d3c:	681b      	ldr	r3, [r3, #0]
 8015d3e:	7819      	ldrb	r1, [r3, #0]
 8015d40:	4ba5      	ldr	r3, [pc, #660]	; (8015fd8 <Send_DpmConfigSetCnf+0x340>)
 8015d42:	22a8      	movs	r2, #168	; 0xa8
 8015d44:	0052      	lsls	r2, r2, #1
 8015d46:	189b      	adds	r3, r3, r2
 8015d48:	19db      	adds	r3, r3, r7
 8015d4a:	781a      	ldrb	r2, [r3, #0]
 8015d4c:	0008      	movs	r0, r1
 8015d4e:	49a5      	ldr	r1, [pc, #660]	; (8015fe4 <Send_DpmConfigSetCnf+0x34c>)
 8015d50:	0013      	movs	r3, r2
 8015d52:	005b      	lsls	r3, r3, #1
 8015d54:	189b      	adds	r3, r3, r2
 8015d56:	009b      	lsls	r3, r3, #2
 8015d58:	5058      	str	r0, [r3, r1]
#endif /* !USBPDCORE_LIB_NO_PD */
        break;
 8015d5a:	e2c4      	b.n	80162e6 <Send_DpmConfigSetCnf+0x64e>
#if defined(USBPD_REV30_SUPPORT)
      case GUI_PARAM_FASTROLESWAP :
        /*FastRoleSwap*/
        DPM_Settings[PortNum].PE_PD3_Support.d.PE_FastRoleSwapSupport = value[0];
 8015d5c:	238e      	movs	r3, #142	; 0x8e
 8015d5e:	005b      	lsls	r3, r3, #1
 8015d60:	18fb      	adds	r3, r7, r3
 8015d62:	681b      	ldr	r3, [r3, #0]
 8015d64:	7819      	ldrb	r1, [r3, #0]
 8015d66:	4b9c      	ldr	r3, [pc, #624]	; (8015fd8 <Send_DpmConfigSetCnf+0x340>)
 8015d68:	22a8      	movs	r2, #168	; 0xa8
 8015d6a:	0052      	lsls	r2, r2, #1
 8015d6c:	189b      	adds	r3, r3, r2
 8015d6e:	19db      	adds	r3, r3, r7
 8015d70:	781a      	ldrb	r2, [r3, #0]
 8015d72:	2301      	movs	r3, #1
 8015d74:	400b      	ands	r3, r1
 8015d76:	b2d9      	uxtb	r1, r3
 8015d78:	489a      	ldr	r0, [pc, #616]	; (8015fe4 <Send_DpmConfigSetCnf+0x34c>)
 8015d7a:	2408      	movs	r4, #8
 8015d7c:	0013      	movs	r3, r2
 8015d7e:	005b      	lsls	r3, r3, #1
 8015d80:	189b      	adds	r3, r3, r2
 8015d82:	009b      	lsls	r3, r3, #2
 8015d84:	18c3      	adds	r3, r0, r3
 8015d86:	191b      	adds	r3, r3, r4
 8015d88:	2201      	movs	r2, #1
 8015d8a:	400a      	ands	r2, r1
 8015d8c:	1890      	adds	r0, r2, r2
 8015d8e:	781a      	ldrb	r2, [r3, #0]
 8015d90:	2102      	movs	r1, #2
 8015d92:	438a      	bics	r2, r1
 8015d94:	1c11      	adds	r1, r2, #0
 8015d96:	1c02      	adds	r2, r0, #0
 8015d98:	430a      	orrs	r2, r1
 8015d9a:	701a      	strb	r2, [r3, #0]
        break;
 8015d9c:	e2a3      	b.n	80162e6 <Send_DpmConfigSetCnf+0x64e>
#endif /*USBPD_REV30_SUPPORT*/
      case GUI_PARAM_DATAROLESWAP_TO_UFP :
        /*DataRoleSwap to UFP */
        DPM_USER_Settings[PortNum].PE_DR_Swap_To_UFP = value[0];
 8015d9e:	238e      	movs	r3, #142	; 0x8e
 8015da0:	005b      	lsls	r3, r3, #1
 8015da2:	18fb      	adds	r3, r7, r3
 8015da4:	681b      	ldr	r3, [r3, #0]
 8015da6:	7819      	ldrb	r1, [r3, #0]
 8015da8:	4b8b      	ldr	r3, [pc, #556]	; (8015fd8 <Send_DpmConfigSetCnf+0x340>)
 8015daa:	22a8      	movs	r2, #168	; 0xa8
 8015dac:	0052      	lsls	r2, r2, #1
 8015dae:	189b      	adds	r3, r3, r2
 8015db0:	19db      	adds	r3, r3, r7
 8015db2:	781a      	ldrb	r2, [r3, #0]
 8015db4:	2301      	movs	r3, #1
 8015db6:	400b      	ands	r3, r1
 8015db8:	b2d9      	uxtb	r1, r3
 8015dba:	4b8b      	ldr	r3, [pc, #556]	; (8015fe8 <Send_DpmConfigSetCnf+0x350>)
 8015dbc:	2074      	movs	r0, #116	; 0x74
 8015dbe:	4342      	muls	r2, r0
 8015dc0:	2001      	movs	r0, #1
 8015dc2:	4001      	ands	r1, r0
 8015dc4:	00cc      	lsls	r4, r1, #3
 8015dc6:	5cd1      	ldrb	r1, [r2, r3]
 8015dc8:	2008      	movs	r0, #8
 8015dca:	4381      	bics	r1, r0
 8015dcc:	1c08      	adds	r0, r1, #0
 8015dce:	1c21      	adds	r1, r4, #0
 8015dd0:	4301      	orrs	r1, r0
 8015dd2:	54d1      	strb	r1, [r2, r3]
        break;
 8015dd4:	e287      	b.n	80162e6 <Send_DpmConfigSetCnf+0x64e>
      case GUI_PARAM_DATAROLESWAP_TO_DFP :
        /*DataRoleSwap to DFP */
        DPM_USER_Settings[PortNum].PE_DR_Swap_To_DFP = value[0];
 8015dd6:	238e      	movs	r3, #142	; 0x8e
 8015dd8:	005b      	lsls	r3, r3, #1
 8015dda:	18fb      	adds	r3, r7, r3
 8015ddc:	681b      	ldr	r3, [r3, #0]
 8015dde:	7819      	ldrb	r1, [r3, #0]
 8015de0:	4b7d      	ldr	r3, [pc, #500]	; (8015fd8 <Send_DpmConfigSetCnf+0x340>)
 8015de2:	22a8      	movs	r2, #168	; 0xa8
 8015de4:	0052      	lsls	r2, r2, #1
 8015de6:	189b      	adds	r3, r3, r2
 8015de8:	19db      	adds	r3, r3, r7
 8015dea:	781a      	ldrb	r2, [r3, #0]
 8015dec:	2301      	movs	r3, #1
 8015dee:	400b      	ands	r3, r1
 8015df0:	b2d9      	uxtb	r1, r3
 8015df2:	4b7d      	ldr	r3, [pc, #500]	; (8015fe8 <Send_DpmConfigSetCnf+0x350>)
 8015df4:	2074      	movs	r0, #116	; 0x74
 8015df6:	4342      	muls	r2, r0
 8015df8:	2001      	movs	r0, #1
 8015dfa:	4001      	ands	r1, r0
 8015dfc:	008c      	lsls	r4, r1, #2
 8015dfe:	5cd1      	ldrb	r1, [r2, r3]
 8015e00:	2004      	movs	r0, #4
 8015e02:	4381      	bics	r1, r0
 8015e04:	1c08      	adds	r0, r1, #0
 8015e06:	1c21      	adds	r1, r4, #0
 8015e08:	4301      	orrs	r1, r0
 8015e0a:	54d1      	strb	r1, [r2, r3]
        break;
 8015e0c:	e26b      	b.n	80162e6 <Send_DpmConfigSetCnf+0x64e>
      case GUI_PARAM_DEFAULTPOWERROLE :
        /*DefaultPowerRole*/
        DPM_Settings[PortNum].PE_DefaultRole = (USBPD_PortPowerRole_TypeDef)value[0];
 8015e0e:	238e      	movs	r3, #142	; 0x8e
 8015e10:	005b      	lsls	r3, r3, #1
 8015e12:	18fb      	adds	r3, r7, r3
 8015e14:	681b      	ldr	r3, [r3, #0]
 8015e16:	7819      	ldrb	r1, [r3, #0]
 8015e18:	4b6f      	ldr	r3, [pc, #444]	; (8015fd8 <Send_DpmConfigSetCnf+0x340>)
 8015e1a:	22a8      	movs	r2, #168	; 0xa8
 8015e1c:	0052      	lsls	r2, r2, #1
 8015e1e:	189b      	adds	r3, r3, r2
 8015e20:	19db      	adds	r3, r3, r7
 8015e22:	781a      	ldrb	r2, [r3, #0]
 8015e24:	2301      	movs	r3, #1
 8015e26:	400b      	ands	r3, r1
 8015e28:	b2d9      	uxtb	r1, r3
 8015e2a:	486e      	ldr	r0, [pc, #440]	; (8015fe4 <Send_DpmConfigSetCnf+0x34c>)
 8015e2c:	0013      	movs	r3, r2
 8015e2e:	005b      	lsls	r3, r3, #1
 8015e30:	189b      	adds	r3, r3, r2
 8015e32:	009b      	lsls	r3, r3, #2
 8015e34:	18c3      	adds	r3, r0, r3
 8015e36:	2201      	movs	r2, #1
 8015e38:	400a      	ands	r2, r1
 8015e3a:	0090      	lsls	r0, r2, #2
 8015e3c:	791a      	ldrb	r2, [r3, #4]
 8015e3e:	2104      	movs	r1, #4
 8015e40:	438a      	bics	r2, r1
 8015e42:	1c11      	adds	r1, r2, #0
 8015e44:	1c02      	adds	r2, r0, #0
 8015e46:	430a      	orrs	r2, r1
 8015e48:	711a      	strb	r2, [r3, #4]
        break;
 8015e4a:	e24c      	b.n	80162e6 <Send_DpmConfigSetCnf+0x64e>
#if !defined(USBPDCORE_LIB_NO_PD)
      case GUI_PARAM_DRP_SUPPORT :
        /*DRP_Support*/
        DPM_Settings[PortNum].PE_RoleSwap = value[0];
 8015e4c:	238e      	movs	r3, #142	; 0x8e
 8015e4e:	005b      	lsls	r3, r3, #1
 8015e50:	18fb      	adds	r3, r7, r3
 8015e52:	681b      	ldr	r3, [r3, #0]
 8015e54:	7819      	ldrb	r1, [r3, #0]
 8015e56:	4b60      	ldr	r3, [pc, #384]	; (8015fd8 <Send_DpmConfigSetCnf+0x340>)
 8015e58:	22a8      	movs	r2, #168	; 0xa8
 8015e5a:	0052      	lsls	r2, r2, #1
 8015e5c:	189b      	adds	r3, r3, r2
 8015e5e:	19db      	adds	r3, r3, r7
 8015e60:	781a      	ldrb	r2, [r3, #0]
 8015e62:	2301      	movs	r3, #1
 8015e64:	400b      	ands	r3, r1
 8015e66:	b2d9      	uxtb	r1, r3
 8015e68:	485e      	ldr	r0, [pc, #376]	; (8015fe4 <Send_DpmConfigSetCnf+0x34c>)
 8015e6a:	0013      	movs	r3, r2
 8015e6c:	005b      	lsls	r3, r3, #1
 8015e6e:	189b      	adds	r3, r3, r2
 8015e70:	009b      	lsls	r3, r3, #2
 8015e72:	18c3      	adds	r3, r0, r3
 8015e74:	2201      	movs	r2, #1
 8015e76:	400a      	ands	r2, r1
 8015e78:	00d0      	lsls	r0, r2, #3
 8015e7a:	791a      	ldrb	r2, [r3, #4]
 8015e7c:	2108      	movs	r1, #8
 8015e7e:	438a      	bics	r2, r1
 8015e80:	1c11      	adds	r1, r2, #0
 8015e82:	1c02      	adds	r2, r0, #0
 8015e84:	430a      	orrs	r2, r1
 8015e86:	711a      	strb	r2, [r3, #4]
        break;
 8015e88:	e22d      	b.n	80162e6 <Send_DpmConfigSetCnf+0x64e>
      case GUI_PARAM_CADROLETOGGLE :
        /*CADRoleToggle*/
        DPM_Settings[PortNum].CAD_RoleToggle = value[0];
 8015e8a:	238e      	movs	r3, #142	; 0x8e
 8015e8c:	005b      	lsls	r3, r3, #1
 8015e8e:	18fb      	adds	r3, r7, r3
 8015e90:	681b      	ldr	r3, [r3, #0]
 8015e92:	7819      	ldrb	r1, [r3, #0]
 8015e94:	4b50      	ldr	r3, [pc, #320]	; (8015fd8 <Send_DpmConfigSetCnf+0x340>)
 8015e96:	22a8      	movs	r2, #168	; 0xa8
 8015e98:	0052      	lsls	r2, r2, #1
 8015e9a:	189b      	adds	r3, r3, r2
 8015e9c:	19db      	adds	r3, r3, r7
 8015e9e:	781a      	ldrb	r2, [r3, #0]
 8015ea0:	2301      	movs	r3, #1
 8015ea2:	400b      	ands	r3, r1
 8015ea4:	b2d9      	uxtb	r1, r3
 8015ea6:	484f      	ldr	r0, [pc, #316]	; (8015fe4 <Send_DpmConfigSetCnf+0x34c>)
 8015ea8:	0013      	movs	r3, r2
 8015eaa:	005b      	lsls	r3, r3, #1
 8015eac:	189b      	adds	r3, r3, r2
 8015eae:	009b      	lsls	r3, r3, #2
 8015eb0:	18c3      	adds	r3, r0, r3
 8015eb2:	2201      	movs	r2, #1
 8015eb4:	400a      	ands	r2, r1
 8015eb6:	0150      	lsls	r0, r2, #5
 8015eb8:	795a      	ldrb	r2, [r3, #5]
 8015eba:	2120      	movs	r1, #32
 8015ebc:	438a      	bics	r2, r1
 8015ebe:	1c11      	adds	r1, r2, #0
 8015ec0:	1c02      	adds	r2, r0, #0
 8015ec2:	430a      	orrs	r2, r1
 8015ec4:	715a      	strb	r2, [r3, #5]
        break;
 8015ec6:	e20e      	b.n	80162e6 <Send_DpmConfigSetCnf+0x64e>
      case GUI_PARAM_PE_SCAP_HR :
        /*PE_SCAP_HR*/
        DPM_Settings[PortNum].PE_CapscounterSupport = value[0];
 8015ec8:	238e      	movs	r3, #142	; 0x8e
 8015eca:	005b      	lsls	r3, r3, #1
 8015ecc:	18fb      	adds	r3, r7, r3
 8015ece:	681b      	ldr	r3, [r3, #0]
 8015ed0:	7819      	ldrb	r1, [r3, #0]
 8015ed2:	4b41      	ldr	r3, [pc, #260]	; (8015fd8 <Send_DpmConfigSetCnf+0x340>)
 8015ed4:	22a8      	movs	r2, #168	; 0xa8
 8015ed6:	0052      	lsls	r2, r2, #1
 8015ed8:	189b      	adds	r3, r3, r2
 8015eda:	19db      	adds	r3, r3, r7
 8015edc:	781a      	ldrb	r2, [r3, #0]
 8015ede:	2301      	movs	r3, #1
 8015ee0:	400b      	ands	r3, r1
 8015ee2:	b2d9      	uxtb	r1, r3
 8015ee4:	483f      	ldr	r0, [pc, #252]	; (8015fe4 <Send_DpmConfigSetCnf+0x34c>)
 8015ee6:	0013      	movs	r3, r2
 8015ee8:	005b      	lsls	r3, r3, #1
 8015eea:	189b      	adds	r3, r3, r2
 8015eec:	009b      	lsls	r3, r3, #2
 8015eee:	18c3      	adds	r3, r0, r3
 8015ef0:	01c8      	lsls	r0, r1, #7
 8015ef2:	791a      	ldrb	r2, [r3, #4]
 8015ef4:	217f      	movs	r1, #127	; 0x7f
 8015ef6:	400a      	ands	r2, r1
 8015ef8:	1c11      	adds	r1, r2, #0
 8015efa:	1c02      	adds	r2, r0, #0
 8015efc:	430a      	orrs	r2, r1
 8015efe:	711a      	strb	r2, [r3, #4]
        break;
 8015f00:	e1f1      	b.n	80162e6 <Send_DpmConfigSetCnf+0x64e>
      case GUI_PARAM_VCONNSWAP :
        /*VConnSwap*/
        DPM_USER_Settings[PortNum].PE_VconnSwap = value[0];
 8015f02:	238e      	movs	r3, #142	; 0x8e
 8015f04:	005b      	lsls	r3, r3, #1
 8015f06:	18fb      	adds	r3, r7, r3
 8015f08:	681b      	ldr	r3, [r3, #0]
 8015f0a:	7819      	ldrb	r1, [r3, #0]
 8015f0c:	4b32      	ldr	r3, [pc, #200]	; (8015fd8 <Send_DpmConfigSetCnf+0x340>)
 8015f0e:	22a8      	movs	r2, #168	; 0xa8
 8015f10:	0052      	lsls	r2, r2, #1
 8015f12:	189b      	adds	r3, r3, r2
 8015f14:	19db      	adds	r3, r3, r7
 8015f16:	781a      	ldrb	r2, [r3, #0]
 8015f18:	2301      	movs	r3, #1
 8015f1a:	400b      	ands	r3, r1
 8015f1c:	b2d9      	uxtb	r1, r3
 8015f1e:	4b32      	ldr	r3, [pc, #200]	; (8015fe8 <Send_DpmConfigSetCnf+0x350>)
 8015f20:	2074      	movs	r0, #116	; 0x74
 8015f22:	4342      	muls	r2, r0
 8015f24:	2001      	movs	r0, #1
 8015f26:	4001      	ands	r1, r0
 8015f28:	184c      	adds	r4, r1, r1
 8015f2a:	5cd1      	ldrb	r1, [r2, r3]
 8015f2c:	2002      	movs	r0, #2
 8015f2e:	4381      	bics	r1, r0
 8015f30:	1c08      	adds	r0, r1, #0
 8015f32:	1c21      	adds	r1, r4, #0
 8015f34:	4301      	orrs	r1, r0
 8015f36:	54d1      	strb	r1, [r2, r3]
        break;
 8015f38:	e1d5      	b.n	80162e6 <Send_DpmConfigSetCnf+0x64e>
        DPM_Settings[PortNum].PE_VDMSupport = value[0];
        break;
#endif /*_VDM*/
      case GUI_PARAM_PING_SUPPORT :
        /* Ping Support */
        DPM_Settings[PortNum].PE_PingSupport = value[0];
 8015f3a:	238e      	movs	r3, #142	; 0x8e
 8015f3c:	005b      	lsls	r3, r3, #1
 8015f3e:	18fb      	adds	r3, r7, r3
 8015f40:	681b      	ldr	r3, [r3, #0]
 8015f42:	7819      	ldrb	r1, [r3, #0]
 8015f44:	4b24      	ldr	r3, [pc, #144]	; (8015fd8 <Send_DpmConfigSetCnf+0x340>)
 8015f46:	22a8      	movs	r2, #168	; 0xa8
 8015f48:	0052      	lsls	r2, r2, #1
 8015f4a:	189b      	adds	r3, r3, r2
 8015f4c:	19db      	adds	r3, r3, r7
 8015f4e:	781a      	ldrb	r2, [r3, #0]
 8015f50:	2301      	movs	r3, #1
 8015f52:	400b      	ands	r3, r1
 8015f54:	b2d9      	uxtb	r1, r3
 8015f56:	4823      	ldr	r0, [pc, #140]	; (8015fe4 <Send_DpmConfigSetCnf+0x34c>)
 8015f58:	0013      	movs	r3, r2
 8015f5a:	005b      	lsls	r3, r3, #1
 8015f5c:	189b      	adds	r3, r3, r2
 8015f5e:	009b      	lsls	r3, r3, #2
 8015f60:	18c3      	adds	r3, r0, r3
 8015f62:	2201      	movs	r2, #1
 8015f64:	400a      	ands	r2, r1
 8015f66:	0190      	lsls	r0, r2, #6
 8015f68:	791a      	ldrb	r2, [r3, #4]
 8015f6a:	2140      	movs	r1, #64	; 0x40
 8015f6c:	438a      	bics	r2, r1
 8015f6e:	1c11      	adds	r1, r2, #0
 8015f70:	1c02      	adds	r2, r0, #0
 8015f72:	430a      	orrs	r2, r1
 8015f74:	711a      	strb	r2, [r3, #4]
        break;
 8015f76:	e1b6      	b.n	80162e6 <Send_DpmConfigSetCnf+0x64e>
#if defined(USBPD_REV30_SUPPORT)
      case GUI_PARAM_PPS_SUPPORT :
        DPM_Settings[PortNum].PE_PD3_Support.PD3_Support = USBPD_LE16(&value[0]);
 8015f78:	228e      	movs	r2, #142	; 0x8e
 8015f7a:	0052      	lsls	r2, r2, #1
 8015f7c:	18bb      	adds	r3, r7, r2
 8015f7e:	681b      	ldr	r3, [r3, #0]
 8015f80:	781b      	ldrb	r3, [r3, #0]
 8015f82:	b299      	uxth	r1, r3
 8015f84:	18bb      	adds	r3, r7, r2
 8015f86:	681b      	ldr	r3, [r3, #0]
 8015f88:	3301      	adds	r3, #1
 8015f8a:	781b      	ldrb	r3, [r3, #0]
 8015f8c:	b29b      	uxth	r3, r3
 8015f8e:	021b      	lsls	r3, r3, #8
 8015f90:	b29b      	uxth	r3, r3
 8015f92:	4a11      	ldr	r2, [pc, #68]	; (8015fd8 <Send_DpmConfigSetCnf+0x340>)
 8015f94:	20a8      	movs	r0, #168	; 0xa8
 8015f96:	0040      	lsls	r0, r0, #1
 8015f98:	1812      	adds	r2, r2, r0
 8015f9a:	19d2      	adds	r2, r2, r7
 8015f9c:	7812      	ldrb	r2, [r2, #0]
 8015f9e:	18cb      	adds	r3, r1, r3
 8015fa0:	b298      	uxth	r0, r3
 8015fa2:	4910      	ldr	r1, [pc, #64]	; (8015fe4 <Send_DpmConfigSetCnf+0x34c>)
 8015fa4:	0013      	movs	r3, r2
 8015fa6:	005b      	lsls	r3, r3, #1
 8015fa8:	189b      	adds	r3, r3, r2
 8015faa:	009b      	lsls	r3, r3, #2
 8015fac:	18cb      	adds	r3, r1, r3
 8015fae:	3308      	adds	r3, #8
 8015fb0:	1c02      	adds	r2, r0, #0
 8015fb2:	801a      	strh	r2, [r3, #0]
        break;
 8015fb4:	e197      	b.n	80162e6 <Send_DpmConfigSetCnf+0x64e>
        uint32_t pdo;
#if USBPD_PORT_COUNT==2
        if (USBPD_PORT_0 == PortNum)
#endif /* USBPD_PORT_COUNT==2 */
        {
          (void)memset(PORT0_PDO_ListSNK, 0, sizeof(PORT0_PDO_ListSNK));
 8015fb6:	4b0d      	ldr	r3, [pc, #52]	; (8015fec <Send_DpmConfigSetCnf+0x354>)
 8015fb8:	221c      	movs	r2, #28
 8015fba:	2100      	movs	r1, #0
 8015fbc:	0018      	movs	r0, r3
 8015fbe:	f002 f901 	bl	80181c4 <memset>
          index_pdo = 0;
 8015fc2:	2300      	movs	r3, #0
 8015fc4:	22a2      	movs	r2, #162	; 0xa2
 8015fc6:	0052      	lsls	r2, r2, #1
 8015fc8:	18ba      	adds	r2, r7, r2
 8015fca:	6013      	str	r3, [r2, #0]
          for (index_gui = 0; index_gui < size; index_gui = index_gui + 4U)
 8015fcc:	2300      	movs	r3, #0
 8015fce:	22a0      	movs	r2, #160	; 0xa0
 8015fd0:	0052      	lsls	r2, r2, #1
 8015fd2:	18ba      	adds	r2, r7, r2
 8015fd4:	6013      	str	r3, [r2, #0]
 8015fd6:	e048      	b.n	801606a <Send_DpmConfigSetCnf+0x3d2>
 8015fd8:	fffffebf 	.word	0xfffffebf
 8015fdc:	fffffec7 	.word	0xfffffec7
 8015fe0:	08019cc0 	.word	0x08019cc0
 8015fe4:	20000014 	.word	0x20000014
 8015fe8:	20000028 	.word	0x20000028
 8015fec:	200000a0 	.word	0x200000a0
          {
            pdo = USBPD_LE32(&value[index_gui]);
 8015ff0:	248e      	movs	r4, #142	; 0x8e
 8015ff2:	0064      	lsls	r4, r4, #1
 8015ff4:	193b      	adds	r3, r7, r4
 8015ff6:	681a      	ldr	r2, [r3, #0]
 8015ff8:	20a0      	movs	r0, #160	; 0xa0
 8015ffa:	0040      	lsls	r0, r0, #1
 8015ffc:	183b      	adds	r3, r7, r0
 8015ffe:	681b      	ldr	r3, [r3, #0]
 8016000:	18d3      	adds	r3, r2, r3
 8016002:	781b      	ldrb	r3, [r3, #0]
 8016004:	0019      	movs	r1, r3
 8016006:	193b      	adds	r3, r7, r4
 8016008:	681a      	ldr	r2, [r3, #0]
 801600a:	183b      	adds	r3, r7, r0
 801600c:	681b      	ldr	r3, [r3, #0]
 801600e:	3301      	adds	r3, #1
 8016010:	18d3      	adds	r3, r2, r3
 8016012:	781b      	ldrb	r3, [r3, #0]
 8016014:	021b      	lsls	r3, r3, #8
 8016016:	18ca      	adds	r2, r1, r3
 8016018:	193b      	adds	r3, r7, r4
 801601a:	6819      	ldr	r1, [r3, #0]
 801601c:	183b      	adds	r3, r7, r0
 801601e:	681b      	ldr	r3, [r3, #0]
 8016020:	3302      	adds	r3, #2
 8016022:	18cb      	adds	r3, r1, r3
 8016024:	781b      	ldrb	r3, [r3, #0]
 8016026:	041b      	lsls	r3, r3, #16
 8016028:	18d2      	adds	r2, r2, r3
 801602a:	193b      	adds	r3, r7, r4
 801602c:	6819      	ldr	r1, [r3, #0]
 801602e:	183b      	adds	r3, r7, r0
 8016030:	681b      	ldr	r3, [r3, #0]
 8016032:	3303      	adds	r3, #3
 8016034:	18cb      	adds	r3, r1, r3
 8016036:	781b      	ldrb	r3, [r3, #0]
 8016038:	061b      	lsls	r3, r3, #24
 801603a:	18d3      	adds	r3, r2, r3
 801603c:	219a      	movs	r1, #154	; 0x9a
 801603e:	0049      	lsls	r1, r1, #1
 8016040:	187a      	adds	r2, r7, r1
 8016042:	6013      	str	r3, [r2, #0]
            PORT0_PDO_ListSNK[index_pdo] = pdo;
 8016044:	4b94      	ldr	r3, [pc, #592]	; (8016298 <Send_DpmConfigSetCnf+0x600>)
 8016046:	24a2      	movs	r4, #162	; 0xa2
 8016048:	0064      	lsls	r4, r4, #1
 801604a:	193a      	adds	r2, r7, r4
 801604c:	6812      	ldr	r2, [r2, #0]
 801604e:	0092      	lsls	r2, r2, #2
 8016050:	1879      	adds	r1, r7, r1
 8016052:	6809      	ldr	r1, [r1, #0]
 8016054:	50d1      	str	r1, [r2, r3]
            index_pdo++;
 8016056:	193b      	adds	r3, r7, r4
 8016058:	681b      	ldr	r3, [r3, #0]
 801605a:	3301      	adds	r3, #1
 801605c:	193a      	adds	r2, r7, r4
 801605e:	6013      	str	r3, [r2, #0]
          for (index_gui = 0; index_gui < size; index_gui = index_gui + 4U)
 8016060:	183b      	adds	r3, r7, r0
 8016062:	681b      	ldr	r3, [r3, #0]
 8016064:	3304      	adds	r3, #4
 8016066:	183a      	adds	r2, r7, r0
 8016068:	6013      	str	r3, [r2, #0]
 801606a:	218d      	movs	r1, #141	; 0x8d
 801606c:	0049      	lsls	r1, r1, #1
 801606e:	187b      	adds	r3, r7, r1
 8016070:	881b      	ldrh	r3, [r3, #0]
 8016072:	001a      	movs	r2, r3
 8016074:	23a0      	movs	r3, #160	; 0xa0
 8016076:	005b      	lsls	r3, r3, #1
 8016078:	18fb      	adds	r3, r7, r3
 801607a:	681b      	ldr	r3, [r3, #0]
 801607c:	4293      	cmp	r3, r2
 801607e:	d3b7      	bcc.n	8015ff0 <Send_DpmConfigSetCnf+0x358>
          }
          USBPD_NbPDO[0] = (uint8_t)(size / 4U);
 8016080:	187b      	adds	r3, r7, r1
 8016082:	881b      	ldrh	r3, [r3, #0]
 8016084:	089b      	lsrs	r3, r3, #2
 8016086:	b29b      	uxth	r3, r3
 8016088:	b2da      	uxtb	r2, r3
 801608a:	4b84      	ldr	r3, [pc, #528]	; (801629c <Send_DpmConfigSetCnf+0x604>)
 801608c:	701a      	strb	r2, [r3, #0]
          UpdateSNKPowerPort0();
 801608e:	f000 fe2f 	bl	8016cf0 <UpdateSNKPowerPort0>
          }
          USBPD_NbPDO[2] = (uint8_t)(size / 4U);
          UpdateSNKPowerPort1();
        }
#endif /* USBPD_PORT_COUNT==2 */
        break;
 8016092:	e128      	b.n	80162e6 <Send_DpmConfigSetCnf+0x64e>
#endif /* USBPD_PORT_COUNT==2 */
        break;
      }
#endif /* (_SRC) || (_DRP) */
      case GUI_PARAM_TDRP :
        tdrp = value[0];
 8016094:	238e      	movs	r3, #142	; 0x8e
 8016096:	005b      	lsls	r3, r3, #1
 8016098:	18fb      	adds	r3, r7, r3
 801609a:	681a      	ldr	r2, [r3, #0]
 801609c:	214c      	movs	r1, #76	; 0x4c
 801609e:	31ff      	adds	r1, #255	; 0xff
 80160a0:	187b      	adds	r3, r7, r1
 80160a2:	7812      	ldrb	r2, [r2, #0]
 80160a4:	701a      	strb	r2, [r3, #0]
        DPM_USER_Settings[PortNum].CAD_tDRP = tdrp;
 80160a6:	4b7e      	ldr	r3, [pc, #504]	; (80162a0 <Send_DpmConfigSetCnf+0x608>)
 80160a8:	22a8      	movs	r2, #168	; 0xa8
 80160aa:	0052      	lsls	r2, r2, #1
 80160ac:	189b      	adds	r3, r3, r2
 80160ae:	19db      	adds	r3, r3, r7
 80160b0:	781b      	ldrb	r3, [r3, #0]
 80160b2:	187a      	adds	r2, r7, r1
 80160b4:	7812      	ldrb	r2, [r2, #0]
 80160b6:	217f      	movs	r1, #127	; 0x7f
 80160b8:	400a      	ands	r2, r1
 80160ba:	b2d4      	uxtb	r4, r2
 80160bc:	4a79      	ldr	r2, [pc, #484]	; (80162a4 <Send_DpmConfigSetCnf+0x60c>)
 80160be:	2168      	movs	r1, #104	; 0x68
 80160c0:	2074      	movs	r0, #116	; 0x74
 80160c2:	4343      	muls	r3, r0
 80160c4:	18d3      	adds	r3, r2, r3
 80160c6:	185b      	adds	r3, r3, r1
 80160c8:	1c22      	adds	r2, r4, #0
 80160ca:	1890      	adds	r0, r2, r2
 80160cc:	791a      	ldrb	r2, [r3, #4]
 80160ce:	2101      	movs	r1, #1
 80160d0:	400a      	ands	r2, r1
 80160d2:	1c11      	adds	r1, r2, #0
 80160d4:	1c02      	adds	r2, r0, #0
 80160d6:	430a      	orrs	r2, r1
 80160d8:	711a      	strb	r2, [r3, #4]
        flag_drp = 1;
 80160da:	23a6      	movs	r3, #166	; 0xa6
 80160dc:	005b      	lsls	r3, r3, #1
 80160de:	18fb      	adds	r3, r7, r3
 80160e0:	2201      	movs	r2, #1
 80160e2:	701a      	strb	r2, [r3, #0]
        break;
 80160e4:	e0ff      	b.n	80162e6 <Send_DpmConfigSetCnf+0x64e>
      case GUI_PARAM_DCSRC_DRP :
        dcdrp = value[0];
 80160e6:	238e      	movs	r3, #142	; 0x8e
 80160e8:	005b      	lsls	r3, r3, #1
 80160ea:	18fb      	adds	r3, r7, r3
 80160ec:	681b      	ldr	r3, [r3, #0]
 80160ee:	781a      	ldrb	r2, [r3, #0]
 80160f0:	21a7      	movs	r1, #167	; 0xa7
 80160f2:	0049      	lsls	r1, r1, #1
 80160f4:	187b      	adds	r3, r7, r1
 80160f6:	801a      	strh	r2, [r3, #0]
        DPM_USER_Settings[PortNum].CAD_dcSRC_DRP = dcdrp;
 80160f8:	4b69      	ldr	r3, [pc, #420]	; (80162a0 <Send_DpmConfigSetCnf+0x608>)
 80160fa:	22a8      	movs	r2, #168	; 0xa8
 80160fc:	0052      	lsls	r2, r2, #1
 80160fe:	189b      	adds	r3, r3, r2
 8016100:	19db      	adds	r3, r3, r7
 8016102:	781b      	ldrb	r3, [r3, #0]
 8016104:	187a      	adds	r2, r7, r1
 8016106:	8812      	ldrh	r2, [r2, #0]
 8016108:	1c11      	adds	r1, r2, #0
 801610a:	227f      	movs	r2, #127	; 0x7f
 801610c:	400a      	ands	r2, r1
 801610e:	b2d2      	uxtb	r2, r2
 8016110:	4964      	ldr	r1, [pc, #400]	; (80162a4 <Send_DpmConfigSetCnf+0x60c>)
 8016112:	2068      	movs	r0, #104	; 0x68
 8016114:	2474      	movs	r4, #116	; 0x74
 8016116:	4363      	muls	r3, r4
 8016118:	18cb      	adds	r3, r1, r3
 801611a:	181b      	adds	r3, r3, r0
 801611c:	217f      	movs	r1, #127	; 0x7f
 801611e:	400a      	ands	r2, r1
 8016120:	0010      	movs	r0, r2
 8016122:	795a      	ldrb	r2, [r3, #5]
 8016124:	217f      	movs	r1, #127	; 0x7f
 8016126:	438a      	bics	r2, r1
 8016128:	1c11      	adds	r1, r2, #0
 801612a:	1c02      	adds	r2, r0, #0
 801612c:	430a      	orrs	r2, r1
 801612e:	715a      	strb	r2, [r3, #5]
        flag_drp = 1;
 8016130:	23a6      	movs	r3, #166	; 0xa6
 8016132:	005b      	lsls	r3, r3, #1
 8016134:	18fb      	adds	r3, r7, r3
 8016136:	2201      	movs	r2, #1
 8016138:	701a      	strb	r2, [r3, #0]
        break;
 801613a:	e0d4      	b.n	80162e6 <Send_DpmConfigSetCnf+0x64e>
      case GUI_PARAM_RESPONDS_TO_DISCOV_SOP :
        DPM_Settings[PortNum].PE_RespondsToDiscovSOP = value[0];
 801613c:	238e      	movs	r3, #142	; 0x8e
 801613e:	005b      	lsls	r3, r3, #1
 8016140:	18fb      	adds	r3, r7, r3
 8016142:	681b      	ldr	r3, [r3, #0]
 8016144:	7819      	ldrb	r1, [r3, #0]
 8016146:	4b56      	ldr	r3, [pc, #344]	; (80162a0 <Send_DpmConfigSetCnf+0x608>)
 8016148:	22a8      	movs	r2, #168	; 0xa8
 801614a:	0052      	lsls	r2, r2, #1
 801614c:	189b      	adds	r3, r3, r2
 801614e:	19db      	adds	r3, r3, r7
 8016150:	781a      	ldrb	r2, [r3, #0]
 8016152:	2301      	movs	r3, #1
 8016154:	400b      	ands	r3, r1
 8016156:	b2d9      	uxtb	r1, r3
 8016158:	4853      	ldr	r0, [pc, #332]	; (80162a8 <Send_DpmConfigSetCnf+0x610>)
 801615a:	0013      	movs	r3, r2
 801615c:	005b      	lsls	r3, r3, #1
 801615e:	189b      	adds	r3, r3, r2
 8016160:	009b      	lsls	r3, r3, #2
 8016162:	18c3      	adds	r3, r0, r3
 8016164:	2201      	movs	r2, #1
 8016166:	4011      	ands	r1, r2
 8016168:	0008      	movs	r0, r1
 801616a:	795a      	ldrb	r2, [r3, #5]
 801616c:	2101      	movs	r1, #1
 801616e:	438a      	bics	r2, r1
 8016170:	1c11      	adds	r1, r2, #0
 8016172:	1c02      	adds	r2, r0, #0
 8016174:	430a      	orrs	r2, r1
 8016176:	715a      	strb	r2, [r3, #5]
        break;
 8016178:	e0b5      	b.n	80162e6 <Send_DpmConfigSetCnf+0x64e>
      case GUI_PARAM_ATTEMPTS_DISCOV_SOP :
        DPM_Settings[PortNum].PE_AttemptsDiscovSOP = value[0];
 801617a:	238e      	movs	r3, #142	; 0x8e
 801617c:	005b      	lsls	r3, r3, #1
 801617e:	18fb      	adds	r3, r7, r3
 8016180:	681b      	ldr	r3, [r3, #0]
 8016182:	7819      	ldrb	r1, [r3, #0]
 8016184:	4b46      	ldr	r3, [pc, #280]	; (80162a0 <Send_DpmConfigSetCnf+0x608>)
 8016186:	22a8      	movs	r2, #168	; 0xa8
 8016188:	0052      	lsls	r2, r2, #1
 801618a:	189b      	adds	r3, r3, r2
 801618c:	19db      	adds	r3, r3, r7
 801618e:	781a      	ldrb	r2, [r3, #0]
 8016190:	2301      	movs	r3, #1
 8016192:	400b      	ands	r3, r1
 8016194:	b2d9      	uxtb	r1, r3
 8016196:	4844      	ldr	r0, [pc, #272]	; (80162a8 <Send_DpmConfigSetCnf+0x610>)
 8016198:	0013      	movs	r3, r2
 801619a:	005b      	lsls	r3, r3, #1
 801619c:	189b      	adds	r3, r3, r2
 801619e:	009b      	lsls	r3, r3, #2
 80161a0:	18c3      	adds	r3, r0, r3
 80161a2:	2201      	movs	r2, #1
 80161a4:	400a      	ands	r2, r1
 80161a6:	1890      	adds	r0, r2, r2
 80161a8:	795a      	ldrb	r2, [r3, #5]
 80161aa:	2102      	movs	r1, #2
 80161ac:	438a      	bics	r2, r1
 80161ae:	1c11      	adds	r1, r2, #0
 80161b0:	1c02      	adds	r2, r0, #0
 80161b2:	430a      	orrs	r2, r1
 80161b4:	715a      	strb	r2, [r3, #5]
        break;
 80161b6:	e096      	b.n	80162e6 <Send_DpmConfigSetCnf+0x64e>
      case GUI_PARAM_XID_SOP :
        DPM_ID_Settings[PortNum].XID       = USBPD_LE32(&value[0]);
 80161b8:	208e      	movs	r0, #142	; 0x8e
 80161ba:	0040      	lsls	r0, r0, #1
 80161bc:	183b      	adds	r3, r7, r0
 80161be:	681b      	ldr	r3, [r3, #0]
 80161c0:	781b      	ldrb	r3, [r3, #0]
 80161c2:	001a      	movs	r2, r3
 80161c4:	183b      	adds	r3, r7, r0
 80161c6:	681b      	ldr	r3, [r3, #0]
 80161c8:	3301      	adds	r3, #1
 80161ca:	781b      	ldrb	r3, [r3, #0]
 80161cc:	021b      	lsls	r3, r3, #8
 80161ce:	18d2      	adds	r2, r2, r3
 80161d0:	183b      	adds	r3, r7, r0
 80161d2:	681b      	ldr	r3, [r3, #0]
 80161d4:	3302      	adds	r3, #2
 80161d6:	781b      	ldrb	r3, [r3, #0]
 80161d8:	041b      	lsls	r3, r3, #16
 80161da:	18d1      	adds	r1, r2, r3
 80161dc:	183b      	adds	r3, r7, r0
 80161de:	681b      	ldr	r3, [r3, #0]
 80161e0:	3303      	adds	r3, #3
 80161e2:	781b      	ldrb	r3, [r3, #0]
 80161e4:	061b      	lsls	r3, r3, #24
 80161e6:	4a2e      	ldr	r2, [pc, #184]	; (80162a0 <Send_DpmConfigSetCnf+0x608>)
 80161e8:	20a8      	movs	r0, #168	; 0xa8
 80161ea:	0040      	lsls	r0, r0, #1
 80161ec:	1812      	adds	r2, r2, r0
 80161ee:	19d2      	adds	r2, r2, r7
 80161f0:	7812      	ldrb	r2, [r2, #0]
 80161f2:	18c9      	adds	r1, r1, r3
 80161f4:	4b2d      	ldr	r3, [pc, #180]	; (80162ac <Send_DpmConfigSetCnf+0x614>)
 80161f6:	00d2      	lsls	r2, r2, #3
 80161f8:	50d1      	str	r1, [r2, r3]
        break;
 80161fa:	e074      	b.n	80162e6 <Send_DpmConfigSetCnf+0x64e>
      case GUI_PARAM_USB_VID_SOP :
        DPM_ID_Settings[PortNum].VID       = USBPD_LE16(&value[0]);
 80161fc:	228e      	movs	r2, #142	; 0x8e
 80161fe:	0052      	lsls	r2, r2, #1
 8016200:	18bb      	adds	r3, r7, r2
 8016202:	681b      	ldr	r3, [r3, #0]
 8016204:	781b      	ldrb	r3, [r3, #0]
 8016206:	b299      	uxth	r1, r3
 8016208:	18bb      	adds	r3, r7, r2
 801620a:	681b      	ldr	r3, [r3, #0]
 801620c:	3301      	adds	r3, #1
 801620e:	781b      	ldrb	r3, [r3, #0]
 8016210:	b29b      	uxth	r3, r3
 8016212:	021b      	lsls	r3, r3, #8
 8016214:	b29a      	uxth	r2, r3
 8016216:	4b22      	ldr	r3, [pc, #136]	; (80162a0 <Send_DpmConfigSetCnf+0x608>)
 8016218:	20a8      	movs	r0, #168	; 0xa8
 801621a:	0040      	lsls	r0, r0, #1
 801621c:	181b      	adds	r3, r3, r0
 801621e:	19db      	adds	r3, r3, r7
 8016220:	781b      	ldrb	r3, [r3, #0]
 8016222:	188a      	adds	r2, r1, r2
 8016224:	b291      	uxth	r1, r2
 8016226:	4a21      	ldr	r2, [pc, #132]	; (80162ac <Send_DpmConfigSetCnf+0x614>)
 8016228:	00db      	lsls	r3, r3, #3
 801622a:	18d3      	adds	r3, r2, r3
 801622c:	3304      	adds	r3, #4
 801622e:	1c0a      	adds	r2, r1, #0
 8016230:	801a      	strh	r2, [r3, #0]
        break;
 8016232:	e058      	b.n	80162e6 <Send_DpmConfigSetCnf+0x64e>
      case GUI_PARAM_PID_SOP :
        DPM_ID_Settings[PortNum].PID       = USBPD_LE16(&value[0]);
 8016234:	228e      	movs	r2, #142	; 0x8e
 8016236:	0052      	lsls	r2, r2, #1
 8016238:	18bb      	adds	r3, r7, r2
 801623a:	681b      	ldr	r3, [r3, #0]
 801623c:	781b      	ldrb	r3, [r3, #0]
 801623e:	b299      	uxth	r1, r3
 8016240:	18bb      	adds	r3, r7, r2
 8016242:	681b      	ldr	r3, [r3, #0]
 8016244:	3301      	adds	r3, #1
 8016246:	781b      	ldrb	r3, [r3, #0]
 8016248:	b29b      	uxth	r3, r3
 801624a:	021b      	lsls	r3, r3, #8
 801624c:	b29a      	uxth	r2, r3
 801624e:	4b14      	ldr	r3, [pc, #80]	; (80162a0 <Send_DpmConfigSetCnf+0x608>)
 8016250:	20a8      	movs	r0, #168	; 0xa8
 8016252:	0040      	lsls	r0, r0, #1
 8016254:	181b      	adds	r3, r3, r0
 8016256:	19db      	adds	r3, r3, r7
 8016258:	781b      	ldrb	r3, [r3, #0]
 801625a:	188a      	adds	r2, r1, r2
 801625c:	b291      	uxth	r1, r2
 801625e:	4a13      	ldr	r2, [pc, #76]	; (80162ac <Send_DpmConfigSetCnf+0x614>)
 8016260:	00db      	lsls	r3, r3, #3
 8016262:	18d3      	adds	r3, r2, r3
 8016264:	3306      	adds	r3, #6
 8016266:	1c0a      	adds	r2, r1, #0
 8016268:	801a      	strh	r2, [r3, #0]
        break;
 801626a:	e03c      	b.n	80162e6 <Send_DpmConfigSetCnf+0x64e>
        DPM_VDM_Settings[PortNum].VDM_bcdDevice_SOP     = USBPD_LE16(&value[0]);
        break;
#endif /* _VDM */
      case GUI_PARAM_MEASUREREPORTING :
        /* MeasurementReporting */
        GUI_USER_Params[PortNum].u.MeasurementReporting = value[0];
 801626c:	238e      	movs	r3, #142	; 0x8e
 801626e:	005b      	lsls	r3, r3, #1
 8016270:	18fb      	adds	r3, r7, r3
 8016272:	681b      	ldr	r3, [r3, #0]
 8016274:	4a0a      	ldr	r2, [pc, #40]	; (80162a0 <Send_DpmConfigSetCnf+0x608>)
 8016276:	21a8      	movs	r1, #168	; 0xa8
 8016278:	0049      	lsls	r1, r1, #1
 801627a:	1852      	adds	r2, r2, r1
 801627c:	19d2      	adds	r2, r2, r7
 801627e:	7812      	ldrb	r2, [r2, #0]
 8016280:	7818      	ldrb	r0, [r3, #0]
 8016282:	490b      	ldr	r1, [pc, #44]	; (80162b0 <Send_DpmConfigSetCnf+0x618>)
 8016284:	0013      	movs	r3, r2
 8016286:	005b      	lsls	r3, r3, #1
 8016288:	189b      	adds	r3, r3, r2
 801628a:	005b      	lsls	r3, r3, #1
 801628c:	18cb      	adds	r3, r1, r3
 801628e:	3304      	adds	r3, #4
 8016290:	1c02      	adds	r2, r0, #0
 8016292:	701a      	strb	r2, [r3, #0]
        break;
 8016294:	e027      	b.n	80162e6 <Send_DpmConfigSetCnf+0x64e>
 8016296:	46c0      	nop			; (mov r8, r8)
 8016298:	200000a0 	.word	0x200000a0
 801629c:	2000009c 	.word	0x2000009c
 80162a0:	fffffebf 	.word	0xfffffebf
 80162a4:	20000028 	.word	0x20000028
 80162a8:	20000014 	.word	0x20000014
 80162ac:	20000020 	.word	0x20000020
 80162b0:	20002cb4 	.word	0x20002cb4
        (void)memcpy(DPM_USER_Settings[PortNum].DPM_ManuInfoPort.ManuString, &value[4], size);
        break;
#endif /* _MANU_INFO */
#endif /*USBPD_REV30_SUPPORT*/
      default :
        error = (uint8_t)GUI_REJ_DPM_REJECT;
 80162b4:	231a      	movs	r3, #26
 80162b6:	33ff      	adds	r3, #255	; 0xff
 80162b8:	18fb      	adds	r3, r7, r3
 80162ba:	2200      	movs	r2, #0
 80162bc:	701a      	strb	r2, [r3, #0]
        param_not_applicated[counter_param_not_applicated] = tag;
 80162be:	204e      	movs	r0, #78	; 0x4e
 80162c0:	30ff      	adds	r0, #255	; 0xff
 80162c2:	183b      	adds	r3, r7, r0
 80162c4:	781b      	ldrb	r3, [r3, #0]
 80162c6:	4a90      	ldr	r2, [pc, #576]	; (8016508 <Send_DpmConfigSetCnf+0x870>)
 80162c8:	24a8      	movs	r4, #168	; 0xa8
 80162ca:	0064      	lsls	r4, r4, #1
 80162cc:	1912      	adds	r2, r2, r4
 80162ce:	19d2      	adds	r2, r2, r7
 80162d0:	7811      	ldrb	r1, [r2, #0]
 80162d2:	4a8e      	ldr	r2, [pc, #568]	; (801650c <Send_DpmConfigSetCnf+0x874>)
 80162d4:	1912      	adds	r2, r2, r4
 80162d6:	19d2      	adds	r2, r2, r7
 80162d8:	54d1      	strb	r1, [r2, r3]
        counter_param_not_applicated++;
 80162da:	183b      	adds	r3, r7, r0
 80162dc:	781a      	ldrb	r2, [r3, #0]
 80162de:	183b      	adds	r3, r7, r0
 80162e0:	3201      	adds	r2, #1
 80162e2:	701a      	strb	r2, [r3, #0]
        break;
 80162e4:	46c0      	nop			; (mov r8, r8)
  while ((uint8_t)(0xFF) != TLV_get(&process_tlv, &tag, &size, &value))
 80162e6:	238e      	movs	r3, #142	; 0x8e
 80162e8:	005b      	lsls	r3, r3, #1
 80162ea:	18fb      	adds	r3, r7, r3
 80162ec:	228d      	movs	r2, #141	; 0x8d
 80162ee:	0052      	lsls	r2, r2, #1
 80162f0:	18ba      	adds	r2, r7, r2
 80162f2:	2117      	movs	r1, #23
 80162f4:	1879      	adds	r1, r7, r1
 80162f6:	2090      	movs	r0, #144	; 0x90
 80162f8:	0040      	lsls	r0, r0, #1
 80162fa:	1838      	adds	r0, r7, r0
 80162fc:	f7fd fd58 	bl	8013db0 <TLV_get>
 8016300:	0003      	movs	r3, r0
 8016302:	2bff      	cmp	r3, #255	; 0xff
 8016304:	d000      	beq.n	8016308 <Send_DpmConfigSetCnf+0x670>
 8016306:	e508      	b.n	8015d1a <Send_DpmConfigSetCnf+0x82>
    }
  }

#if !defined(USBPDCORE_LIB_NO_PD)
  /* Updtate CAD_SNKToggleTime & CAD_SRCToggleTime only if TDRP and/or DC_SRC_DRP have been received */
  if (1U == flag_drp)
 8016308:	23a6      	movs	r3, #166	; 0xa6
 801630a:	005b      	lsls	r3, r3, #1
 801630c:	18fb      	adds	r3, r7, r3
 801630e:	781b      	ldrb	r3, [r3, #0]
 8016310:	2b01      	cmp	r3, #1
 8016312:	d000      	beq.n	8016316 <Send_DpmConfigSetCnf+0x67e>
 8016314:	e0a2      	b.n	801645c <Send_DpmConfigSetCnf+0x7c4>
  {
    uint16_t calcul;
    if (0U == tdrp)
 8016316:	244c      	movs	r4, #76	; 0x4c
 8016318:	34ff      	adds	r4, #255	; 0xff
 801631a:	193b      	adds	r3, r7, r4
 801631c:	781b      	ldrb	r3, [r3, #0]
 801631e:	2b00      	cmp	r3, #0
 8016320:	d11c      	bne.n	801635c <Send_DpmConfigSetCnf+0x6c4>
    {
      tdrp = (uint8_t)(DPM_Settings[PortNum].CAD_SNKToggleTime + DPM_Settings[PortNum].CAD_SRCToggleTime);
 8016322:	4b7b      	ldr	r3, [pc, #492]	; (8016510 <Send_DpmConfigSetCnf+0x878>)
 8016324:	20a8      	movs	r0, #168	; 0xa8
 8016326:	0040      	lsls	r0, r0, #1
 8016328:	181b      	adds	r3, r3, r0
 801632a:	19db      	adds	r3, r3, r7
 801632c:	781a      	ldrb	r2, [r3, #0]
 801632e:	4979      	ldr	r1, [pc, #484]	; (8016514 <Send_DpmConfigSetCnf+0x87c>)
 8016330:	0013      	movs	r3, r2
 8016332:	005b      	lsls	r3, r3, #1
 8016334:	189b      	adds	r3, r3, r2
 8016336:	009b      	lsls	r3, r3, #2
 8016338:	18cb      	adds	r3, r1, r3
 801633a:	3306      	adds	r3, #6
 801633c:	7819      	ldrb	r1, [r3, #0]
 801633e:	4b74      	ldr	r3, [pc, #464]	; (8016510 <Send_DpmConfigSetCnf+0x878>)
 8016340:	181b      	adds	r3, r3, r0
 8016342:	19db      	adds	r3, r3, r7
 8016344:	781a      	ldrb	r2, [r3, #0]
 8016346:	4873      	ldr	r0, [pc, #460]	; (8016514 <Send_DpmConfigSetCnf+0x87c>)
 8016348:	0013      	movs	r3, r2
 801634a:	005b      	lsls	r3, r3, #1
 801634c:	189b      	adds	r3, r3, r2
 801634e:	009b      	lsls	r3, r3, #2
 8016350:	18c3      	adds	r3, r0, r3
 8016352:	3307      	adds	r3, #7
 8016354:	781a      	ldrb	r2, [r3, #0]
 8016356:	193b      	adds	r3, r7, r4
 8016358:	188a      	adds	r2, r1, r2
 801635a:	701a      	strb	r2, [r3, #0]
    }
    if (0U == dcdrp)
 801635c:	26a7      	movs	r6, #167	; 0xa7
 801635e:	0076      	lsls	r6, r6, #1
 8016360:	19bb      	adds	r3, r7, r6
 8016362:	881b      	ldrh	r3, [r3, #0]
 8016364:	2b00      	cmp	r3, #0
 8016366:	d133      	bne.n	80163d0 <Send_DpmConfigSetCnf+0x738>
    {
      dcdrp = (uint16_t)
              ((DPM_Settings[PortNum].CAD_SRCToggleTime * 100U)
 8016368:	4b69      	ldr	r3, [pc, #420]	; (8016510 <Send_DpmConfigSetCnf+0x878>)
 801636a:	24a8      	movs	r4, #168	; 0xa8
 801636c:	0064      	lsls	r4, r4, #1
 801636e:	191b      	adds	r3, r3, r4
 8016370:	19db      	adds	r3, r3, r7
 8016372:	781a      	ldrb	r2, [r3, #0]
 8016374:	4967      	ldr	r1, [pc, #412]	; (8016514 <Send_DpmConfigSetCnf+0x87c>)
 8016376:	0013      	movs	r3, r2
 8016378:	005b      	lsls	r3, r3, #1
 801637a:	189b      	adds	r3, r3, r2
 801637c:	009b      	lsls	r3, r3, #2
 801637e:	18cb      	adds	r3, r1, r3
 8016380:	3307      	adds	r3, #7
 8016382:	781b      	ldrb	r3, [r3, #0]
 8016384:	001a      	movs	r2, r3
 8016386:	2364      	movs	r3, #100	; 0x64
 8016388:	4353      	muls	r3, r2
 801638a:	0018      	movs	r0, r3
               / (DPM_Settings[PortNum].CAD_SNKToggleTime + DPM_Settings[PortNum].CAD_SRCToggleTime));
 801638c:	4b60      	ldr	r3, [pc, #384]	; (8016510 <Send_DpmConfigSetCnf+0x878>)
 801638e:	0025      	movs	r5, r4
 8016390:	191b      	adds	r3, r3, r4
 8016392:	19db      	adds	r3, r3, r7
 8016394:	781a      	ldrb	r2, [r3, #0]
 8016396:	495f      	ldr	r1, [pc, #380]	; (8016514 <Send_DpmConfigSetCnf+0x87c>)
 8016398:	0013      	movs	r3, r2
 801639a:	005b      	lsls	r3, r3, #1
 801639c:	189b      	adds	r3, r3, r2
 801639e:	009b      	lsls	r3, r3, #2
 80163a0:	18cb      	adds	r3, r1, r3
 80163a2:	3306      	adds	r3, #6
 80163a4:	781b      	ldrb	r3, [r3, #0]
 80163a6:	001c      	movs	r4, r3
 80163a8:	4b59      	ldr	r3, [pc, #356]	; (8016510 <Send_DpmConfigSetCnf+0x878>)
 80163aa:	195b      	adds	r3, r3, r5
 80163ac:	19db      	adds	r3, r3, r7
 80163ae:	781a      	ldrb	r2, [r3, #0]
 80163b0:	4958      	ldr	r1, [pc, #352]	; (8016514 <Send_DpmConfigSetCnf+0x87c>)
 80163b2:	0013      	movs	r3, r2
 80163b4:	005b      	lsls	r3, r3, #1
 80163b6:	189b      	adds	r3, r3, r2
 80163b8:	009b      	lsls	r3, r3, #2
 80163ba:	18cb      	adds	r3, r1, r3
 80163bc:	3307      	adds	r3, #7
 80163be:	781b      	ldrb	r3, [r3, #0]
 80163c0:	18e3      	adds	r3, r4, r3
 80163c2:	0019      	movs	r1, r3
 80163c4:	f7ef ff14 	bl	80061f0 <__udivsi3>
 80163c8:	0003      	movs	r3, r0
 80163ca:	001a      	movs	r2, r3
      dcdrp = (uint16_t)
 80163cc:	19bb      	adds	r3, r7, r6
 80163ce:	801a      	strh	r2, [r3, #0]
    }
    calcul = (tdrp * dcdrp) / 100U;
 80163d0:	254c      	movs	r5, #76	; 0x4c
 80163d2:	35ff      	adds	r5, #255	; 0xff
 80163d4:	197b      	adds	r3, r7, r5
 80163d6:	781b      	ldrb	r3, [r3, #0]
 80163d8:	26a7      	movs	r6, #167	; 0xa7
 80163da:	0076      	lsls	r6, r6, #1
 80163dc:	19ba      	adds	r2, r7, r6
 80163de:	8812      	ldrh	r2, [r2, #0]
 80163e0:	4353      	muls	r3, r2
 80163e2:	2164      	movs	r1, #100	; 0x64
 80163e4:	0018      	movs	r0, r3
 80163e6:	f7ef ff03 	bl	80061f0 <__udivsi3>
 80163ea:	0003      	movs	r3, r0
 80163ec:	001a      	movs	r2, r3
 80163ee:	249d      	movs	r4, #157	; 0x9d
 80163f0:	0064      	lsls	r4, r4, #1
 80163f2:	193b      	adds	r3, r7, r4
 80163f4:	801a      	strh	r2, [r3, #0]
    DPM_Settings[PortNum].CAD_SRCToggleTime = (uint8_t)calcul;
 80163f6:	4b46      	ldr	r3, [pc, #280]	; (8016510 <Send_DpmConfigSetCnf+0x878>)
 80163f8:	22a8      	movs	r2, #168	; 0xa8
 80163fa:	0052      	lsls	r2, r2, #1
 80163fc:	189b      	adds	r3, r3, r2
 80163fe:	19db      	adds	r3, r3, r7
 8016400:	781a      	ldrb	r2, [r3, #0]
 8016402:	193b      	adds	r3, r7, r4
 8016404:	881b      	ldrh	r3, [r3, #0]
 8016406:	b2d8      	uxtb	r0, r3
 8016408:	4942      	ldr	r1, [pc, #264]	; (8016514 <Send_DpmConfigSetCnf+0x87c>)
 801640a:	0013      	movs	r3, r2
 801640c:	005b      	lsls	r3, r3, #1
 801640e:	189b      	adds	r3, r3, r2
 8016410:	009b      	lsls	r3, r3, #2
 8016412:	18cb      	adds	r3, r1, r3
 8016414:	3307      	adds	r3, #7
 8016416:	1c02      	adds	r2, r0, #0
 8016418:	701a      	strb	r2, [r3, #0]
    calcul = tdrp * (100U - dcdrp) / 100U;
 801641a:	197b      	adds	r3, r7, r5
 801641c:	781b      	ldrb	r3, [r3, #0]
 801641e:	19ba      	adds	r2, r7, r6
 8016420:	8812      	ldrh	r2, [r2, #0]
 8016422:	2164      	movs	r1, #100	; 0x64
 8016424:	1a8a      	subs	r2, r1, r2
 8016426:	4353      	muls	r3, r2
 8016428:	2164      	movs	r1, #100	; 0x64
 801642a:	0018      	movs	r0, r3
 801642c:	f7ef fee0 	bl	80061f0 <__udivsi3>
 8016430:	0003      	movs	r3, r0
 8016432:	001a      	movs	r2, r3
 8016434:	193b      	adds	r3, r7, r4
 8016436:	801a      	strh	r2, [r3, #0]
    DPM_Settings[PortNum].CAD_SNKToggleTime = (uint8_t)calcul;
 8016438:	4b35      	ldr	r3, [pc, #212]	; (8016510 <Send_DpmConfigSetCnf+0x878>)
 801643a:	22a8      	movs	r2, #168	; 0xa8
 801643c:	0052      	lsls	r2, r2, #1
 801643e:	189b      	adds	r3, r3, r2
 8016440:	19db      	adds	r3, r3, r7
 8016442:	781a      	ldrb	r2, [r3, #0]
 8016444:	193b      	adds	r3, r7, r4
 8016446:	881b      	ldrh	r3, [r3, #0]
 8016448:	b2d8      	uxtb	r0, r3
 801644a:	4932      	ldr	r1, [pc, #200]	; (8016514 <Send_DpmConfigSetCnf+0x87c>)
 801644c:	0013      	movs	r3, r2
 801644e:	005b      	lsls	r3, r3, #1
 8016450:	189b      	adds	r3, r3, r2
 8016452:	009b      	lsls	r3, r3, #2
 8016454:	18cb      	adds	r3, r1, r3
 8016456:	3306      	adds	r3, #6
 8016458:	1c02      	adds	r2, r0, #0
 801645a:	701a      	strb	r2, [r3, #0]
  }
#endif /* !USBPDCORE_LIB_NO_PD */

  /* Only applies if an error was specified. Will send a DPM_CONFIG_REJ instead of DPM_CONFIG_SET_CNF*/
  if (error != 0xFFU)
 801645c:	241a      	movs	r4, #26
 801645e:	34ff      	adds	r4, #255	; 0xff
 8016460:	193b      	adds	r3, r7, r4
 8016462:	781b      	ldrb	r3, [r3, #0]
 8016464:	2bff      	cmp	r3, #255	; 0xff
 8016466:	d04b      	beq.n	8016500 <Send_DpmConfigSetCnf+0x868>
  {
    TLV_deinit_encode(&send_tlv);
 8016468:	2594      	movs	r5, #148	; 0x94
 801646a:	006d      	lsls	r5, r5, #1
 801646c:	197b      	adds	r3, r7, r5
 801646e:	0018      	movs	r0, r3
 8016470:	f7fd fc60 	bl	8013d34 <TLV_deinit_encode>
    (void)TLV_init_encode(&send_tlv, __GUI_SET_TAG_ID((PortNum + 1), DPM_CONFIG_REJ), TLV_SIZE_MAX, pEncodedMsg);
 8016474:	4b26      	ldr	r3, [pc, #152]	; (8016510 <Send_DpmConfigSetCnf+0x878>)
 8016476:	22a8      	movs	r2, #168	; 0xa8
 8016478:	0052      	lsls	r2, r2, #1
 801647a:	189b      	adds	r3, r3, r2
 801647c:	19db      	adds	r3, r3, r7
 801647e:	781b      	ldrb	r3, [r3, #0]
 8016480:	3301      	adds	r3, #1
 8016482:	015b      	lsls	r3, r3, #5
 8016484:	b25b      	sxtb	r3, r3
 8016486:	2208      	movs	r2, #8
 8016488:	4313      	orrs	r3, r2
 801648a:	b25b      	sxtb	r3, r3
 801648c:	b2d9      	uxtb	r1, r3
 801648e:	687b      	ldr	r3, [r7, #4]
 8016490:	2280      	movs	r2, #128	; 0x80
 8016492:	0052      	lsls	r2, r2, #1
 8016494:	1978      	adds	r0, r7, r5
 8016496:	f7fd fa88 	bl	80139aa <TLV_init_encode>
    (void)TLV_addValue(&send_tlv, &error, 1);
 801649a:	1939      	adds	r1, r7, r4
 801649c:	197b      	adds	r3, r7, r5
 801649e:	2201      	movs	r2, #1
 80164a0:	0018      	movs	r0, r3
 80164a2:	f7fd fbb3 	bl	8013c0c <TLV_addValue>

    /* If the cause of error is DPM_REJECT, we have to list the tag of parameters which didn't pass */
    if (error != 0U)
 80164a6:	193b      	adds	r3, r7, r4
 80164a8:	781b      	ldrb	r3, [r3, #0]
 80164aa:	2b00      	cmp	r3, #0
 80164ac:	d022      	beq.n	80164f4 <Send_DpmConfigSetCnf+0x85c>
    {
      uint32_t index;
      for (index = 0; index < counter_param_not_applicated; index++)
 80164ae:	2300      	movs	r3, #0
 80164b0:	229e      	movs	r2, #158	; 0x9e
 80164b2:	0052      	lsls	r2, r2, #1
 80164b4:	18ba      	adds	r2, r7, r2
 80164b6:	6013      	str	r3, [r2, #0]
 80164b8:	e012      	b.n	80164e0 <Send_DpmConfigSetCnf+0x848>
      {
        (void)TLV_addValue(&send_tlv, &param_not_applicated[index], 1);
 80164ba:	2318      	movs	r3, #24
 80164bc:	18fa      	adds	r2, r7, r3
 80164be:	249e      	movs	r4, #158	; 0x9e
 80164c0:	0064      	lsls	r4, r4, #1
 80164c2:	193b      	adds	r3, r7, r4
 80164c4:	681b      	ldr	r3, [r3, #0]
 80164c6:	18d1      	adds	r1, r2, r3
 80164c8:	2394      	movs	r3, #148	; 0x94
 80164ca:	005b      	lsls	r3, r3, #1
 80164cc:	18fb      	adds	r3, r7, r3
 80164ce:	2201      	movs	r2, #1
 80164d0:	0018      	movs	r0, r3
 80164d2:	f7fd fb9b 	bl	8013c0c <TLV_addValue>
      for (index = 0; index < counter_param_not_applicated; index++)
 80164d6:	193b      	adds	r3, r7, r4
 80164d8:	681b      	ldr	r3, [r3, #0]
 80164da:	3301      	adds	r3, #1
 80164dc:	193a      	adds	r2, r7, r4
 80164de:	6013      	str	r3, [r2, #0]
 80164e0:	234e      	movs	r3, #78	; 0x4e
 80164e2:	33ff      	adds	r3, #255	; 0xff
 80164e4:	18fb      	adds	r3, r7, r3
 80164e6:	781b      	ldrb	r3, [r3, #0]
 80164e8:	229e      	movs	r2, #158	; 0x9e
 80164ea:	0052      	lsls	r2, r2, #1
 80164ec:	18ba      	adds	r2, r7, r2
 80164ee:	6812      	ldr	r2, [r2, #0]
 80164f0:	429a      	cmp	r2, r3
 80164f2:	d3e2      	bcc.n	80164ba <Send_DpmConfigSetCnf+0x822>
      }
    }
    TLV_deinit_encode(&send_tlv);
 80164f4:	2394      	movs	r3, #148	; 0x94
 80164f6:	005b      	lsls	r3, r3, #1
 80164f8:	18fb      	adds	r3, r7, r3
 80164fa:	0018      	movs	r0, r3
 80164fc:	f7fd fc1a 	bl	8013d34 <TLV_deinit_encode>
  }
}
 8016500:	46c0      	nop			; (mov r8, r8)
 8016502:	46bd      	mov	sp, r7
 8016504:	b055      	add	sp, #340	; 0x154
 8016506:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016508:	fffffec7 	.word	0xfffffec7
 801650c:	fffffec8 	.word	0xfffffec8
 8016510:	fffffebf 	.word	0xfffffebf
 8016514:	20000014 	.word	0x20000014

08016518 <Send_DpmConfigGetCnf>:

static void Send_DpmConfigGetCnf(uint8_t PortNum, uint8_t *instruction, uint8_t *pEncodedMsg)
{
 8016518:	b580      	push	{r7, lr}
 801651a:	b092      	sub	sp, #72	; 0x48
 801651c:	af00      	add	r7, sp, #0
 801651e:	60b9      	str	r1, [r7, #8]
 8016520:	607a      	str	r2, [r7, #4]
 8016522:	210f      	movs	r1, #15
 8016524:	187b      	adds	r3, r7, r1
 8016526:	1c02      	adds	r2, r0, #0
 8016528:	701a      	strb	r2, [r3, #0]
  TLV_ToSend_Data_t send_tlv;
  (void)TLV_init_encode(&send_tlv, __GUI_SET_TAG_ID((PortNum + 1), DPM_CONFIG_GET_CNF), TLV_SIZE_MAX, pEncodedMsg);
 801652a:	187b      	adds	r3, r7, r1
 801652c:	781b      	ldrb	r3, [r3, #0]
 801652e:	3301      	adds	r3, #1
 8016530:	015b      	lsls	r3, r3, #5
 8016532:	b25b      	sxtb	r3, r3
 8016534:	2205      	movs	r2, #5
 8016536:	4313      	orrs	r3, r2
 8016538:	b25b      	sxtb	r3, r3
 801653a:	b2d9      	uxtb	r1, r3
 801653c:	687b      	ldr	r3, [r7, #4]
 801653e:	2280      	movs	r2, #128	; 0x80
 8016540:	0052      	lsls	r2, r2, #1
 8016542:	2030      	movs	r0, #48	; 0x30
 8016544:	1838      	adds	r0, r7, r0
 8016546:	f7fd fa30 	bl	80139aa <TLV_init_encode>
  uint16_t length = TLV_get_string_length(instruction) - TLV_HEADER_SIZE;
 801654a:	68bb      	ldr	r3, [r7, #8]
 801654c:	0018      	movs	r0, r3
 801654e:	f7fd fc97 	bl	8013e80 <TLV_get_string_length>
 8016552:	0003      	movs	r3, r0
 8016554:	001a      	movs	r2, r3
 8016556:	2344      	movs	r3, #68	; 0x44
 8016558:	18fb      	adds	r3, r7, r3
 801655a:	3a03      	subs	r2, #3
 801655c:	801a      	strh	r2, [r3, #0]
  uint8_t index = 0;
 801655e:	2347      	movs	r3, #71	; 0x47
 8016560:	18fb      	adds	r3, r7, r3
 8016562:	2200      	movs	r2, #0
 8016564:	701a      	strb	r2, [r3, #0]

  /* This is a state machine. */
  do
  {
    /* If there is no parameters, we go through each case of the state machine in one pass. (conditional breaks) */
    if (0U == length)
 8016566:	2344      	movs	r3, #68	; 0x44
 8016568:	18fb      	adds	r3, r7, r3
 801656a:	881b      	ldrh	r3, [r3, #0]
 801656c:	2b00      	cmp	r3, #0
 801656e:	d104      	bne.n	801657a <Send_DpmConfigGetCnf+0x62>
    {
      param = (uint8_t)GUI_PARAM_ALL;
 8016570:	2346      	movs	r3, #70	; 0x46
 8016572:	18fb      	adds	r3, r7, r3
 8016574:	22ff      	movs	r2, #255	; 0xff
 8016576:	701a      	strb	r2, [r3, #0]
 8016578:	e009      	b.n	801658e <Send_DpmConfigGetCnf+0x76>
    }
    else
    {
      /* If there are, we loop the state machine and go through one case each time. */
      param = instruction[TLV_VALUE_POSITION + index];
 801657a:	2347      	movs	r3, #71	; 0x47
 801657c:	18fb      	adds	r3, r7, r3
 801657e:	781b      	ldrb	r3, [r3, #0]
 8016580:	3307      	adds	r3, #7
 8016582:	68ba      	ldr	r2, [r7, #8]
 8016584:	18d2      	adds	r2, r2, r3
 8016586:	2346      	movs	r3, #70	; 0x46
 8016588:	18fb      	adds	r3, r7, r3
 801658a:	7812      	ldrb	r2, [r2, #0]
 801658c:	701a      	strb	r2, [r3, #0]

    /*
    Each case should simply use the TLV_add function to insert his corresponding data,
    as suggested in comment. Manual cast to (uint8_t *) may be required.
    */
    switch ((USBPD_GUI_Tag_Param)param)
 801658e:	2346      	movs	r3, #70	; 0x46
 8016590:	18fb      	adds	r3, r7, r3
 8016592:	781b      	ldrb	r3, [r3, #0]
 8016594:	2b1c      	cmp	r3, #28
 8016596:	dc0d      	bgt.n	80165b4 <Send_DpmConfigGetCnf+0x9c>
 8016598:	2b00      	cmp	r3, #0
 801659a:	da00      	bge.n	801659e <Send_DpmConfigGetCnf+0x86>
 801659c:	e243      	b.n	8016a26 <Send_DpmConfigGetCnf+0x50e>
 801659e:	2b1c      	cmp	r3, #28
 80165a0:	d900      	bls.n	80165a4 <Send_DpmConfigGetCnf+0x8c>
 80165a2:	e240      	b.n	8016a26 <Send_DpmConfigGetCnf+0x50e>
 80165a4:	009a      	lsls	r2, r3, #2
 80165a6:	4b02      	ldr	r3, [pc, #8]	; (80165b0 <Send_DpmConfigGetCnf+0x98>)
 80165a8:	18d3      	adds	r3, r2, r3
 80165aa:	681b      	ldr	r3, [r3, #0]
 80165ac:	469f      	mov	pc, r3
 80165ae:	46c0      	nop			; (mov r8, r8)
 80165b0:	08019d34 	.word	0x08019d34
 80165b4:	2bff      	cmp	r3, #255	; 0xff
 80165b6:	d000      	beq.n	80165ba <Send_DpmConfigGetCnf+0xa2>
 80165b8:	e235      	b.n	8016a26 <Send_DpmConfigGetCnf+0x50e>
#if !defined(USBPDCORE_LIB_NO_PD)
      case GUI_PARAM_SOP :
      {
        /* SOP & SOP1 & SOP2 */
        /* SOP1_Debug & SOP2_Debug not implemented */
        uint8_t settings = (uint8_t)DPM_Settings[PortNum].PE_SupportedSOP;
 80165ba:	230f      	movs	r3, #15
 80165bc:	18fb      	adds	r3, r7, r3
 80165be:	781a      	ldrb	r2, [r3, #0]
 80165c0:	49ed      	ldr	r1, [pc, #948]	; (8016978 <Send_DpmConfigGetCnf+0x460>)
 80165c2:	0013      	movs	r3, r2
 80165c4:	005b      	lsls	r3, r3, #1
 80165c6:	189b      	adds	r3, r3, r2
 80165c8:	009b      	lsls	r3, r3, #2
 80165ca:	585b      	ldr	r3, [r3, r1]
 80165cc:	b2da      	uxtb	r2, r3
 80165ce:	212f      	movs	r1, #47	; 0x2f
 80165d0:	187b      	adds	r3, r7, r1
 80165d2:	701a      	strb	r2, [r3, #0]
        (void)TLV_add(&send_tlv, (uint8_t)GUI_PARAM_SOP, 1, &settings);
 80165d4:	187b      	adds	r3, r7, r1
 80165d6:	2230      	movs	r2, #48	; 0x30
 80165d8:	18b8      	adds	r0, r7, r2
 80165da:	2201      	movs	r2, #1
 80165dc:	2100      	movs	r1, #0
 80165de:	f7fd fa47 	bl	8013a70 <TLV_add>
        if (0U != length)
 80165e2:	2344      	movs	r3, #68	; 0x44
 80165e4:	18fb      	adds	r3, r7, r3
 80165e6:	881b      	ldrh	r3, [r3, #0]
 80165e8:	2b00      	cmp	r3, #0
 80165ea:	d000      	beq.n	80165ee <Send_DpmConfigGetCnf+0xd6>
 80165ec:	e22e      	b.n	8016a4c <Send_DpmConfigGetCnf+0x534>
      }
#if defined(USBPD_REV30_SUPPORT)
      case GUI_PARAM_FASTROLESWAP :
      {
        /*FastRoleSwap*/
        uint8_t settings = (uint8_t)DPM_Settings[PortNum].PE_PD3_Support.d.PE_FastRoleSwapSupport;
 80165ee:	230f      	movs	r3, #15
 80165f0:	18fb      	adds	r3, r7, r3
 80165f2:	781a      	ldrb	r2, [r3, #0]
 80165f4:	49e0      	ldr	r1, [pc, #896]	; (8016978 <Send_DpmConfigGetCnf+0x460>)
 80165f6:	2008      	movs	r0, #8
 80165f8:	0013      	movs	r3, r2
 80165fa:	005b      	lsls	r3, r3, #1
 80165fc:	189b      	adds	r3, r3, r2
 80165fe:	009b      	lsls	r3, r3, #2
 8016600:	18cb      	adds	r3, r1, r3
 8016602:	181b      	adds	r3, r3, r0
 8016604:	781b      	ldrb	r3, [r3, #0]
 8016606:	079b      	lsls	r3, r3, #30
 8016608:	0fdb      	lsrs	r3, r3, #31
 801660a:	b2db      	uxtb	r3, r3
 801660c:	001a      	movs	r2, r3
 801660e:	212e      	movs	r1, #46	; 0x2e
 8016610:	187b      	adds	r3, r7, r1
 8016612:	701a      	strb	r2, [r3, #0]
        (void)TLV_add(&send_tlv, (uint8_t)GUI_PARAM_FASTROLESWAP, 1, &settings);
 8016614:	187b      	adds	r3, r7, r1
 8016616:	2230      	movs	r2, #48	; 0x30
 8016618:	18b8      	adds	r0, r7, r2
 801661a:	2201      	movs	r2, #1
 801661c:	2102      	movs	r1, #2
 801661e:	f7fd fa27 	bl	8013a70 <TLV_add>
        if (0U != length)
 8016622:	2344      	movs	r3, #68	; 0x44
 8016624:	18fb      	adds	r3, r7, r3
 8016626:	881b      	ldrh	r3, [r3, #0]
 8016628:	2b00      	cmp	r3, #0
 801662a:	d000      	beq.n	801662e <Send_DpmConfigGetCnf+0x116>
 801662c:	e210      	b.n	8016a50 <Send_DpmConfigGetCnf+0x538>
#endif /*USBPD_REV30_SUPPORT*/
#endif /* !USBPDCORE_LIB_NO_PD */
      case GUI_PARAM_DATAROLESWAP_TO_UFP :
      {
        /* DataRoleSwap to UFP */
        uint8_t settings = (uint8_t)DPM_USER_Settings[PortNum].PE_DR_Swap_To_UFP;
 801662e:	230f      	movs	r3, #15
 8016630:	18fb      	adds	r3, r7, r3
 8016632:	781a      	ldrb	r2, [r3, #0]
 8016634:	4bd1      	ldr	r3, [pc, #836]	; (801697c <Send_DpmConfigGetCnf+0x464>)
 8016636:	2174      	movs	r1, #116	; 0x74
 8016638:	434a      	muls	r2, r1
 801663a:	5cd3      	ldrb	r3, [r2, r3]
 801663c:	071b      	lsls	r3, r3, #28
 801663e:	0fdb      	lsrs	r3, r3, #31
 8016640:	b2db      	uxtb	r3, r3
 8016642:	001a      	movs	r2, r3
 8016644:	212d      	movs	r1, #45	; 0x2d
 8016646:	187b      	adds	r3, r7, r1
 8016648:	701a      	strb	r2, [r3, #0]
        (void)TLV_add(&send_tlv, (uint8_t)GUI_PARAM_DATAROLESWAP_TO_UFP, 1, &settings);
 801664a:	187b      	adds	r3, r7, r1
 801664c:	2230      	movs	r2, #48	; 0x30
 801664e:	18b8      	adds	r0, r7, r2
 8016650:	2201      	movs	r2, #1
 8016652:	2103      	movs	r1, #3
 8016654:	f7fd fa0c 	bl	8013a70 <TLV_add>
        if (0U != length)
 8016658:	2344      	movs	r3, #68	; 0x44
 801665a:	18fb      	adds	r3, r7, r3
 801665c:	881b      	ldrh	r3, [r3, #0]
 801665e:	2b00      	cmp	r3, #0
 8016660:	d000      	beq.n	8016664 <Send_DpmConfigGetCnf+0x14c>
 8016662:	e1f7      	b.n	8016a54 <Send_DpmConfigGetCnf+0x53c>
        }
      }
      case GUI_PARAM_DATAROLESWAP_TO_DFP :
      {
        /* DataRoleSwap to DFP */
        uint8_t settings = (uint8_t)DPM_USER_Settings[PortNum].PE_DR_Swap_To_DFP;
 8016664:	230f      	movs	r3, #15
 8016666:	18fb      	adds	r3, r7, r3
 8016668:	781a      	ldrb	r2, [r3, #0]
 801666a:	4bc4      	ldr	r3, [pc, #784]	; (801697c <Send_DpmConfigGetCnf+0x464>)
 801666c:	2174      	movs	r1, #116	; 0x74
 801666e:	434a      	muls	r2, r1
 8016670:	5cd3      	ldrb	r3, [r2, r3]
 8016672:	075b      	lsls	r3, r3, #29
 8016674:	0fdb      	lsrs	r3, r3, #31
 8016676:	b2db      	uxtb	r3, r3
 8016678:	001a      	movs	r2, r3
 801667a:	212c      	movs	r1, #44	; 0x2c
 801667c:	187b      	adds	r3, r7, r1
 801667e:	701a      	strb	r2, [r3, #0]
        (void)TLV_add(&send_tlv, (uint8_t)GUI_PARAM_DATAROLESWAP_TO_DFP, 1, &settings);
 8016680:	187b      	adds	r3, r7, r1
 8016682:	2230      	movs	r2, #48	; 0x30
 8016684:	18b8      	adds	r0, r7, r2
 8016686:	2201      	movs	r2, #1
 8016688:	211c      	movs	r1, #28
 801668a:	f7fd f9f1 	bl	8013a70 <TLV_add>
        if (0U != length)
 801668e:	2344      	movs	r3, #68	; 0x44
 8016690:	18fb      	adds	r3, r7, r3
 8016692:	881b      	ldrh	r3, [r3, #0]
 8016694:	2b00      	cmp	r3, #0
 8016696:	d000      	beq.n	801669a <Send_DpmConfigGetCnf+0x182>
 8016698:	e1de      	b.n	8016a58 <Send_DpmConfigGetCnf+0x540>
        }
      }
      case GUI_PARAM_DEFAULTPOWERROLE :
      {
        /*DefaultPowerRole*/
        uint8_t settings = (uint8_t)DPM_Settings[PortNum].PE_DefaultRole;
 801669a:	230f      	movs	r3, #15
 801669c:	18fb      	adds	r3, r7, r3
 801669e:	781a      	ldrb	r2, [r3, #0]
 80166a0:	49b5      	ldr	r1, [pc, #724]	; (8016978 <Send_DpmConfigGetCnf+0x460>)
 80166a2:	0013      	movs	r3, r2
 80166a4:	005b      	lsls	r3, r3, #1
 80166a6:	189b      	adds	r3, r3, r2
 80166a8:	009b      	lsls	r3, r3, #2
 80166aa:	18cb      	adds	r3, r1, r3
 80166ac:	791b      	ldrb	r3, [r3, #4]
 80166ae:	075b      	lsls	r3, r3, #29
 80166b0:	0fdb      	lsrs	r3, r3, #31
 80166b2:	b2db      	uxtb	r3, r3
 80166b4:	001a      	movs	r2, r3
 80166b6:	212b      	movs	r1, #43	; 0x2b
 80166b8:	187b      	adds	r3, r7, r1
 80166ba:	701a      	strb	r2, [r3, #0]
        (void)TLV_add(&send_tlv, (uint8_t)GUI_PARAM_DEFAULTPOWERROLE, 1, &settings);
 80166bc:	187b      	adds	r3, r7, r1
 80166be:	2230      	movs	r2, #48	; 0x30
 80166c0:	18b8      	adds	r0, r7, r2
 80166c2:	2201      	movs	r2, #1
 80166c4:	2104      	movs	r1, #4
 80166c6:	f7fd f9d3 	bl	8013a70 <TLV_add>
        if (0U != length)
 80166ca:	2344      	movs	r3, #68	; 0x44
 80166cc:	18fb      	adds	r3, r7, r3
 80166ce:	881b      	ldrh	r3, [r3, #0]
 80166d0:	2b00      	cmp	r3, #0
 80166d2:	d000      	beq.n	80166d6 <Send_DpmConfigGetCnf+0x1be>
 80166d4:	e1c2      	b.n	8016a5c <Send_DpmConfigGetCnf+0x544>
      }
#if !defined(USBPDCORE_LIB_NO_PD)
      case GUI_PARAM_DRP_SUPPORT :
      {
        /*DRP_Support*/
        uint8_t settings = (uint8_t)DPM_Settings[PortNum].PE_RoleSwap;
 80166d6:	230f      	movs	r3, #15
 80166d8:	18fb      	adds	r3, r7, r3
 80166da:	781a      	ldrb	r2, [r3, #0]
 80166dc:	49a6      	ldr	r1, [pc, #664]	; (8016978 <Send_DpmConfigGetCnf+0x460>)
 80166de:	0013      	movs	r3, r2
 80166e0:	005b      	lsls	r3, r3, #1
 80166e2:	189b      	adds	r3, r3, r2
 80166e4:	009b      	lsls	r3, r3, #2
 80166e6:	18cb      	adds	r3, r1, r3
 80166e8:	791b      	ldrb	r3, [r3, #4]
 80166ea:	071b      	lsls	r3, r3, #28
 80166ec:	0fdb      	lsrs	r3, r3, #31
 80166ee:	b2db      	uxtb	r3, r3
 80166f0:	001a      	movs	r2, r3
 80166f2:	212a      	movs	r1, #42	; 0x2a
 80166f4:	187b      	adds	r3, r7, r1
 80166f6:	701a      	strb	r2, [r3, #0]
        (void)TLV_add(&send_tlv, (uint8_t)GUI_PARAM_DRP_SUPPORT, 1, &settings);
 80166f8:	187b      	adds	r3, r7, r1
 80166fa:	2230      	movs	r2, #48	; 0x30
 80166fc:	18b8      	adds	r0, r7, r2
 80166fe:	2201      	movs	r2, #1
 8016700:	2105      	movs	r1, #5
 8016702:	f7fd f9b5 	bl	8013a70 <TLV_add>
        if (0U != length)
 8016706:	2344      	movs	r3, #68	; 0x44
 8016708:	18fb      	adds	r3, r7, r3
 801670a:	881b      	ldrh	r3, [r3, #0]
 801670c:	2b00      	cmp	r3, #0
 801670e:	d000      	beq.n	8016712 <Send_DpmConfigGetCnf+0x1fa>
 8016710:	e1a6      	b.n	8016a60 <Send_DpmConfigGetCnf+0x548>
        }
      }
      case GUI_PARAM_CADROLETOGGLE :
      {
        /*CADRoleToggle*/
        uint8_t settings = (uint8_t)DPM_Settings[PortNum].CAD_RoleToggle;
 8016712:	230f      	movs	r3, #15
 8016714:	18fb      	adds	r3, r7, r3
 8016716:	781a      	ldrb	r2, [r3, #0]
 8016718:	4997      	ldr	r1, [pc, #604]	; (8016978 <Send_DpmConfigGetCnf+0x460>)
 801671a:	0013      	movs	r3, r2
 801671c:	005b      	lsls	r3, r3, #1
 801671e:	189b      	adds	r3, r3, r2
 8016720:	009b      	lsls	r3, r3, #2
 8016722:	18cb      	adds	r3, r1, r3
 8016724:	795b      	ldrb	r3, [r3, #5]
 8016726:	069b      	lsls	r3, r3, #26
 8016728:	0fdb      	lsrs	r3, r3, #31
 801672a:	b2db      	uxtb	r3, r3
 801672c:	001a      	movs	r2, r3
 801672e:	2129      	movs	r1, #41	; 0x29
 8016730:	187b      	adds	r3, r7, r1
 8016732:	701a      	strb	r2, [r3, #0]
        (void)TLV_add(&send_tlv, (uint8_t)GUI_PARAM_CADROLETOGGLE, 1, &settings);
 8016734:	187b      	adds	r3, r7, r1
 8016736:	2230      	movs	r2, #48	; 0x30
 8016738:	18b8      	adds	r0, r7, r2
 801673a:	2201      	movs	r2, #1
 801673c:	2106      	movs	r1, #6
 801673e:	f7fd f997 	bl	8013a70 <TLV_add>
        if (0U != length)
 8016742:	2344      	movs	r3, #68	; 0x44
 8016744:	18fb      	adds	r3, r7, r3
 8016746:	881b      	ldrh	r3, [r3, #0]
 8016748:	2b00      	cmp	r3, #0
 801674a:	d000      	beq.n	801674e <Send_DpmConfigGetCnf+0x236>
 801674c:	e18a      	b.n	8016a64 <Send_DpmConfigGetCnf+0x54c>
        }
      }
      case GUI_PARAM_PE_SCAP_HR :
      {
        /*PE_SCAP_HR*/
        uint8_t settings = (uint8_t)DPM_Settings[PortNum].PE_CapscounterSupport;
 801674e:	230f      	movs	r3, #15
 8016750:	18fb      	adds	r3, r7, r3
 8016752:	781a      	ldrb	r2, [r3, #0]
 8016754:	4988      	ldr	r1, [pc, #544]	; (8016978 <Send_DpmConfigGetCnf+0x460>)
 8016756:	0013      	movs	r3, r2
 8016758:	005b      	lsls	r3, r3, #1
 801675a:	189b      	adds	r3, r3, r2
 801675c:	009b      	lsls	r3, r3, #2
 801675e:	18cb      	adds	r3, r1, r3
 8016760:	791b      	ldrb	r3, [r3, #4]
 8016762:	061b      	lsls	r3, r3, #24
 8016764:	0fdb      	lsrs	r3, r3, #31
 8016766:	b2db      	uxtb	r3, r3
 8016768:	001a      	movs	r2, r3
 801676a:	2128      	movs	r1, #40	; 0x28
 801676c:	187b      	adds	r3, r7, r1
 801676e:	701a      	strb	r2, [r3, #0]
        (void)TLV_add(&send_tlv, (uint8_t)GUI_PARAM_PE_SCAP_HR,  1, &settings);
 8016770:	187b      	adds	r3, r7, r1
 8016772:	2230      	movs	r2, #48	; 0x30
 8016774:	18b8      	adds	r0, r7, r2
 8016776:	2201      	movs	r2, #1
 8016778:	2107      	movs	r1, #7
 801677a:	f7fd f979 	bl	8013a70 <TLV_add>
        if (0U != length)
 801677e:	2344      	movs	r3, #68	; 0x44
 8016780:	18fb      	adds	r3, r7, r3
 8016782:	881b      	ldrh	r3, [r3, #0]
 8016784:	2b00      	cmp	r3, #0
 8016786:	d000      	beq.n	801678a <Send_DpmConfigGetCnf+0x272>
 8016788:	e16e      	b.n	8016a68 <Send_DpmConfigGetCnf+0x550>
      }
#endif /*_VDM*/
      case GUI_PARAM_PING_SUPPORT :
      {
        /* Ping Support */
        uint8_t settings = (uint8_t)DPM_Settings[PortNum].PE_PingSupport;
 801678a:	230f      	movs	r3, #15
 801678c:	18fb      	adds	r3, r7, r3
 801678e:	781a      	ldrb	r2, [r3, #0]
 8016790:	4979      	ldr	r1, [pc, #484]	; (8016978 <Send_DpmConfigGetCnf+0x460>)
 8016792:	0013      	movs	r3, r2
 8016794:	005b      	lsls	r3, r3, #1
 8016796:	189b      	adds	r3, r3, r2
 8016798:	009b      	lsls	r3, r3, #2
 801679a:	18cb      	adds	r3, r1, r3
 801679c:	791b      	ldrb	r3, [r3, #4]
 801679e:	065b      	lsls	r3, r3, #25
 80167a0:	0fdb      	lsrs	r3, r3, #31
 80167a2:	b2db      	uxtb	r3, r3
 80167a4:	001a      	movs	r2, r3
 80167a6:	2127      	movs	r1, #39	; 0x27
 80167a8:	187b      	adds	r3, r7, r1
 80167aa:	701a      	strb	r2, [r3, #0]
        (void)TLV_add(&send_tlv, (uint8_t)GUI_PARAM_PING_SUPPORT, 1, &settings);
 80167ac:	187b      	adds	r3, r7, r1
 80167ae:	2230      	movs	r2, #48	; 0x30
 80167b0:	18b8      	adds	r0, r7, r2
 80167b2:	2201      	movs	r2, #1
 80167b4:	210a      	movs	r1, #10
 80167b6:	f7fd f95b 	bl	8013a70 <TLV_add>
        if (0U != length)
 80167ba:	2344      	movs	r3, #68	; 0x44
 80167bc:	18fb      	adds	r3, r7, r3
 80167be:	881b      	ldrh	r3, [r3, #0]
 80167c0:	2b00      	cmp	r3, #0
 80167c2:	d000      	beq.n	80167c6 <Send_DpmConfigGetCnf+0x2ae>
 80167c4:	e152      	b.n	8016a6c <Send_DpmConfigGetCnf+0x554>
      }
#if defined(USBPD_REV30_SUPPORT)
      case GUI_PARAM_PPS_SUPPORT :
      {
        /* PD3 Support */
        uint16_t settings = (uint16_t)DPM_Settings[PortNum].PE_PD3_Support.PD3_Support;
 80167c6:	230f      	movs	r3, #15
 80167c8:	18fb      	adds	r3, r7, r3
 80167ca:	781a      	ldrb	r2, [r3, #0]
 80167cc:	496a      	ldr	r1, [pc, #424]	; (8016978 <Send_DpmConfigGetCnf+0x460>)
 80167ce:	0013      	movs	r3, r2
 80167d0:	005b      	lsls	r3, r3, #1
 80167d2:	189b      	adds	r3, r3, r2
 80167d4:	009b      	lsls	r3, r3, #2
 80167d6:	18cb      	adds	r3, r1, r3
 80167d8:	3308      	adds	r3, #8
 80167da:	881a      	ldrh	r2, [r3, #0]
 80167dc:	2124      	movs	r1, #36	; 0x24
 80167de:	187b      	adds	r3, r7, r1
 80167e0:	801a      	strh	r2, [r3, #0]
        (void)TLV_add(&send_tlv, (uint8_t)GUI_PARAM_PPS_SUPPORT, 2, (uint8_t *)&settings);
 80167e2:	187b      	adds	r3, r7, r1
 80167e4:	2230      	movs	r2, #48	; 0x30
 80167e6:	18b8      	adds	r0, r7, r2
 80167e8:	2202      	movs	r2, #2
 80167ea:	210b      	movs	r1, #11
 80167ec:	f7fd f940 	bl	8013a70 <TLV_add>
        if (0U != length)
 80167f0:	2344      	movs	r3, #68	; 0x44
 80167f2:	18fb      	adds	r3, r7, r3
 80167f4:	881b      	ldrh	r3, [r3, #0]
 80167f6:	2b00      	cmp	r3, #0
 80167f8:	d000      	beq.n	80167fc <Send_DpmConfigGetCnf+0x2e4>
 80167fa:	e139      	b.n	8016a70 <Send_DpmConfigGetCnf+0x558>
#endif /*USBPD_REV30_SUPPORT*/
#endif /* !USBPDCORE_LIB_NO_PD */
      case GUI_PARAM_VCONNSWAP :
      {
        /*VConnSwap*/
        uint8_t settings = (uint8_t)DPM_USER_Settings[PortNum].PE_VconnSwap;
 80167fc:	230f      	movs	r3, #15
 80167fe:	18fb      	adds	r3, r7, r3
 8016800:	781a      	ldrb	r2, [r3, #0]
 8016802:	4b5e      	ldr	r3, [pc, #376]	; (801697c <Send_DpmConfigGetCnf+0x464>)
 8016804:	2174      	movs	r1, #116	; 0x74
 8016806:	434a      	muls	r2, r1
 8016808:	5cd3      	ldrb	r3, [r2, r3]
 801680a:	079b      	lsls	r3, r3, #30
 801680c:	0fdb      	lsrs	r3, r3, #31
 801680e:	b2db      	uxtb	r3, r3
 8016810:	001a      	movs	r2, r3
 8016812:	2123      	movs	r1, #35	; 0x23
 8016814:	187b      	adds	r3, r7, r1
 8016816:	701a      	strb	r2, [r3, #0]
        (void)TLV_add(&send_tlv, (uint8_t)GUI_PARAM_VCONNSWAP, 1, &settings);
 8016818:	187b      	adds	r3, r7, r1
 801681a:	2230      	movs	r2, #48	; 0x30
 801681c:	18b8      	adds	r0, r7, r2
 801681e:	2201      	movs	r2, #1
 8016820:	2108      	movs	r1, #8
 8016822:	f7fd f925 	bl	8013a70 <TLV_add>
        if (0U != length)
 8016826:	2344      	movs	r3, #68	; 0x44
 8016828:	18fb      	adds	r3, r7, r3
 801682a:	881b      	ldrh	r3, [r3, #0]
 801682c:	2b00      	cmp	r3, #0
 801682e:	d000      	beq.n	8016832 <Send_DpmConfigGetCnf+0x31a>
 8016830:	e120      	b.n	8016a74 <Send_DpmConfigGetCnf+0x55c>
        uint8_t nb_pdo;
#if USBPD_PORT_COUNT==2
        if (USBPD_PORT_0 == PortNum)
#endif /* USBPD_PORT_COUNT==2 */
        {
          nb_pdo    =  USBPD_NbPDO[0];
 8016832:	2143      	movs	r1, #67	; 0x43
 8016834:	187b      	adds	r3, r7, r1
 8016836:	4a52      	ldr	r2, [pc, #328]	; (8016980 <Send_DpmConfigGetCnf+0x468>)
 8016838:	7812      	ldrb	r2, [r2, #0]
 801683a:	701a      	strb	r2, [r3, #0]
          list_pdo  = (uint8_t *)PORT0_PDO_ListSNK;
 801683c:	4b51      	ldr	r3, [pc, #324]	; (8016984 <Send_DpmConfigGetCnf+0x46c>)
 801683e:	63fb      	str	r3, [r7, #60]	; 0x3c
        {
          nb_pdo    =  USBPD_NbPDO[2];
          list_pdo  = (uint8_t *)PORT1_PDO_ListSNK;
        }
#endif /* USBPD_PORT_COUNT==2 */
        (void)TLV_add(&send_tlv, (uint8_t)GUI_PARAM_SNK_PDO, ((uint16_t)(nb_pdo) * 4U), list_pdo);
 8016840:	187b      	adds	r3, r7, r1
 8016842:	781b      	ldrb	r3, [r3, #0]
 8016844:	b29b      	uxth	r3, r3
 8016846:	009b      	lsls	r3, r3, #2
 8016848:	b29a      	uxth	r2, r3
 801684a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801684c:	2130      	movs	r1, #48	; 0x30
 801684e:	1878      	adds	r0, r7, r1
 8016850:	210c      	movs	r1, #12
 8016852:	f7fd f90d 	bl	8013a70 <TLV_add>
      }
      if (0U != length)
 8016856:	2344      	movs	r3, #68	; 0x44
 8016858:	18fb      	adds	r3, r7, r3
 801685a:	881b      	ldrh	r3, [r3, #0]
 801685c:	2b00      	cmp	r3, #0
 801685e:	d000      	beq.n	8016862 <Send_DpmConfigGetCnf+0x34a>
 8016860:	e10a      	b.n	8016a78 <Send_DpmConfigGetCnf+0x560>
      }
#endif /* _SRC || _DRP */
      case GUI_PARAM_TDRP :
      {
        /* Calculate the current value of tDRP (value between 50ms and 100ms) */
        uint8_t value = (uint8_t)DPM_USER_Settings[PortNum].CAD_tDRP;
 8016862:	230f      	movs	r3, #15
 8016864:	18fb      	adds	r3, r7, r3
 8016866:	781b      	ldrb	r3, [r3, #0]
 8016868:	4a44      	ldr	r2, [pc, #272]	; (801697c <Send_DpmConfigGetCnf+0x464>)
 801686a:	2168      	movs	r1, #104	; 0x68
 801686c:	2074      	movs	r0, #116	; 0x74
 801686e:	4343      	muls	r3, r0
 8016870:	18d3      	adds	r3, r2, r3
 8016872:	185b      	adds	r3, r3, r1
 8016874:	791b      	ldrb	r3, [r3, #4]
 8016876:	061b      	lsls	r3, r3, #24
 8016878:	0e5b      	lsrs	r3, r3, #25
 801687a:	b2db      	uxtb	r3, r3
 801687c:	001a      	movs	r2, r3
 801687e:	2122      	movs	r1, #34	; 0x22
 8016880:	187b      	adds	r3, r7, r1
 8016882:	701a      	strb	r2, [r3, #0]
        (void)TLV_add(&send_tlv, (uint8_t)GUI_PARAM_TDRP, 1, &value);
 8016884:	187b      	adds	r3, r7, r1
 8016886:	2230      	movs	r2, #48	; 0x30
 8016888:	18b8      	adds	r0, r7, r2
 801688a:	2201      	movs	r2, #1
 801688c:	210e      	movs	r1, #14
 801688e:	f7fd f8ef 	bl	8013a70 <TLV_add>
      }
      if (0U != length)
 8016892:	2344      	movs	r3, #68	; 0x44
 8016894:	18fb      	adds	r3, r7, r3
 8016896:	881b      	ldrh	r3, [r3, #0]
 8016898:	2b00      	cmp	r3, #0
 801689a:	d000      	beq.n	801689e <Send_DpmConfigGetCnf+0x386>
 801689c:	e0ee      	b.n	8016a7c <Send_DpmConfigGetCnf+0x564>
        break;
      }
      case GUI_PARAM_DCSRC_DRP :
      {
        /* Calculate the current value of tDRP (value between 50ms and 100ms) */
        uint8_t value = (uint8_t)DPM_USER_Settings[PortNum].CAD_dcSRC_DRP;
 801689e:	230f      	movs	r3, #15
 80168a0:	18fb      	adds	r3, r7, r3
 80168a2:	781b      	ldrb	r3, [r3, #0]
 80168a4:	4a35      	ldr	r2, [pc, #212]	; (801697c <Send_DpmConfigGetCnf+0x464>)
 80168a6:	2168      	movs	r1, #104	; 0x68
 80168a8:	2074      	movs	r0, #116	; 0x74
 80168aa:	4343      	muls	r3, r0
 80168ac:	18d3      	adds	r3, r2, r3
 80168ae:	185b      	adds	r3, r3, r1
 80168b0:	795b      	ldrb	r3, [r3, #5]
 80168b2:	065b      	lsls	r3, r3, #25
 80168b4:	0e5b      	lsrs	r3, r3, #25
 80168b6:	b2db      	uxtb	r3, r3
 80168b8:	001a      	movs	r2, r3
 80168ba:	2121      	movs	r1, #33	; 0x21
 80168bc:	187b      	adds	r3, r7, r1
 80168be:	701a      	strb	r2, [r3, #0]
        (void)TLV_add(&send_tlv, (uint8_t)GUI_PARAM_DCSRC_DRP, 1, &value);
 80168c0:	187b      	adds	r3, r7, r1
 80168c2:	2230      	movs	r2, #48	; 0x30
 80168c4:	18b8      	adds	r0, r7, r2
 80168c6:	2201      	movs	r2, #1
 80168c8:	210f      	movs	r1, #15
 80168ca:	f7fd f8d1 	bl	8013a70 <TLV_add>
      }
      if (0U != length)
 80168ce:	2344      	movs	r3, #68	; 0x44
 80168d0:	18fb      	adds	r3, r7, r3
 80168d2:	881b      	ldrh	r3, [r3, #0]
 80168d4:	2b00      	cmp	r3, #0
 80168d6:	d000      	beq.n	80168da <Send_DpmConfigGetCnf+0x3c2>
 80168d8:	e0d2      	b.n	8016a80 <Send_DpmConfigGetCnf+0x568>
        break;
      }
#if !defined(USBPDCORE_LIB_NO_PD)
      case GUI_PARAM_RESPONDS_TO_DISCOV_SOP :
      {
        uint8_t settings = (uint8_t)DPM_Settings[PortNum].PE_RespondsToDiscovSOP;
 80168da:	230f      	movs	r3, #15
 80168dc:	18fb      	adds	r3, r7, r3
 80168de:	781a      	ldrb	r2, [r3, #0]
 80168e0:	4925      	ldr	r1, [pc, #148]	; (8016978 <Send_DpmConfigGetCnf+0x460>)
 80168e2:	0013      	movs	r3, r2
 80168e4:	005b      	lsls	r3, r3, #1
 80168e6:	189b      	adds	r3, r3, r2
 80168e8:	009b      	lsls	r3, r3, #2
 80168ea:	18cb      	adds	r3, r1, r3
 80168ec:	795b      	ldrb	r3, [r3, #5]
 80168ee:	07db      	lsls	r3, r3, #31
 80168f0:	0fdb      	lsrs	r3, r3, #31
 80168f2:	b2db      	uxtb	r3, r3
 80168f4:	001a      	movs	r2, r3
 80168f6:	2120      	movs	r1, #32
 80168f8:	187b      	adds	r3, r7, r1
 80168fa:	701a      	strb	r2, [r3, #0]
        (void)TLV_add(&send_tlv, (uint8_t)GUI_PARAM_RESPONDS_TO_DISCOV_SOP, 1, &settings);
 80168fc:	187b      	adds	r3, r7, r1
 80168fe:	2230      	movs	r2, #48	; 0x30
 8016900:	18b8      	adds	r0, r7, r2
 8016902:	2201      	movs	r2, #1
 8016904:	2110      	movs	r1, #16
 8016906:	f7fd f8b3 	bl	8013a70 <TLV_add>
      }
      if (0U != length)
 801690a:	2344      	movs	r3, #68	; 0x44
 801690c:	18fb      	adds	r3, r7, r3
 801690e:	881b      	ldrh	r3, [r3, #0]
 8016910:	2b00      	cmp	r3, #0
 8016912:	d000      	beq.n	8016916 <Send_DpmConfigGetCnf+0x3fe>
 8016914:	e0b6      	b.n	8016a84 <Send_DpmConfigGetCnf+0x56c>
      {
        break;
      }
      case GUI_PARAM_ATTEMPTS_DISCOV_SOP :
      {
        uint8_t settings = (uint8_t)DPM_Settings[PortNum].PE_AttemptsDiscovSOP;
 8016916:	230f      	movs	r3, #15
 8016918:	18fb      	adds	r3, r7, r3
 801691a:	781a      	ldrb	r2, [r3, #0]
 801691c:	4916      	ldr	r1, [pc, #88]	; (8016978 <Send_DpmConfigGetCnf+0x460>)
 801691e:	0013      	movs	r3, r2
 8016920:	005b      	lsls	r3, r3, #1
 8016922:	189b      	adds	r3, r3, r2
 8016924:	009b      	lsls	r3, r3, #2
 8016926:	18cb      	adds	r3, r1, r3
 8016928:	795b      	ldrb	r3, [r3, #5]
 801692a:	079b      	lsls	r3, r3, #30
 801692c:	0fdb      	lsrs	r3, r3, #31
 801692e:	b2db      	uxtb	r3, r3
 8016930:	001a      	movs	r2, r3
 8016932:	211f      	movs	r1, #31
 8016934:	187b      	adds	r3, r7, r1
 8016936:	701a      	strb	r2, [r3, #0]
        (void)TLV_add(&send_tlv, (uint8_t)GUI_PARAM_ATTEMPTS_DISCOV_SOP, 1, &settings);
 8016938:	187b      	adds	r3, r7, r1
 801693a:	2230      	movs	r2, #48	; 0x30
 801693c:	18b8      	adds	r0, r7, r2
 801693e:	2201      	movs	r2, #1
 8016940:	2111      	movs	r1, #17
 8016942:	f7fd f895 	bl	8013a70 <TLV_add>
      }
      if (0U != length)
 8016946:	2344      	movs	r3, #68	; 0x44
 8016948:	18fb      	adds	r3, r7, r3
 801694a:	881b      	ldrh	r3, [r3, #0]
 801694c:	2b00      	cmp	r3, #0
 801694e:	d000      	beq.n	8016952 <Send_DpmConfigGetCnf+0x43a>
 8016950:	e09a      	b.n	8016a88 <Send_DpmConfigGetCnf+0x570>
        break;
      }
#endif /* !USBPDCORE_LIB_NO_PD */
      case GUI_PARAM_XID_SOP :
      {
        uint32_t value = DPM_ID_Settings[PortNum].XID;
 8016952:	230f      	movs	r3, #15
 8016954:	18fb      	adds	r3, r7, r3
 8016956:	781a      	ldrb	r2, [r3, #0]
 8016958:	4b0b      	ldr	r3, [pc, #44]	; (8016988 <Send_DpmConfigGetCnf+0x470>)
 801695a:	00d2      	lsls	r2, r2, #3
 801695c:	58d3      	ldr	r3, [r2, r3]
 801695e:	61bb      	str	r3, [r7, #24]
        (void)TLV_add(&send_tlv, (uint8_t)GUI_PARAM_XID_SOP, 4, (uint8_t *)&value);
 8016960:	2318      	movs	r3, #24
 8016962:	18fb      	adds	r3, r7, r3
 8016964:	2230      	movs	r2, #48	; 0x30
 8016966:	18b8      	adds	r0, r7, r2
 8016968:	2204      	movs	r2, #4
 801696a:	2112      	movs	r1, #18
 801696c:	f7fd f880 	bl	8013a70 <TLV_add>
      }
      if (0U != length)
 8016970:	2344      	movs	r3, #68	; 0x44
 8016972:	18fb      	adds	r3, r7, r3
 8016974:	e00a      	b.n	801698c <Send_DpmConfigGetCnf+0x474>
 8016976:	46c0      	nop			; (mov r8, r8)
 8016978:	20000014 	.word	0x20000014
 801697c:	20000028 	.word	0x20000028
 8016980:	2000009c 	.word	0x2000009c
 8016984:	200000a0 	.word	0x200000a0
 8016988:	20000020 	.word	0x20000020
 801698c:	881b      	ldrh	r3, [r3, #0]
 801698e:	2b00      	cmp	r3, #0
 8016990:	d000      	beq.n	8016994 <Send_DpmConfigGetCnf+0x47c>
 8016992:	e07b      	b.n	8016a8c <Send_DpmConfigGetCnf+0x574>
      {
        break;
      }
      case GUI_PARAM_USB_VID_SOP :
      {
        uint16_t value = (uint16_t)DPM_ID_Settings[PortNum].VID;
 8016994:	230f      	movs	r3, #15
 8016996:	18fb      	adds	r3, r7, r3
 8016998:	781b      	ldrb	r3, [r3, #0]
 801699a:	4a4d      	ldr	r2, [pc, #308]	; (8016ad0 <Send_DpmConfigGetCnf+0x5b8>)
 801699c:	00db      	lsls	r3, r3, #3
 801699e:	18d3      	adds	r3, r2, r3
 80169a0:	3304      	adds	r3, #4
 80169a2:	881a      	ldrh	r2, [r3, #0]
 80169a4:	2116      	movs	r1, #22
 80169a6:	187b      	adds	r3, r7, r1
 80169a8:	801a      	strh	r2, [r3, #0]
        (void)TLV_add(&send_tlv, (uint8_t)GUI_PARAM_USB_VID_SOP, 2, (uint8_t *)&value);
 80169aa:	187b      	adds	r3, r7, r1
 80169ac:	2230      	movs	r2, #48	; 0x30
 80169ae:	18b8      	adds	r0, r7, r2
 80169b0:	2202      	movs	r2, #2
 80169b2:	2117      	movs	r1, #23
 80169b4:	f7fd f85c 	bl	8013a70 <TLV_add>
      }
      if (0U != length)
 80169b8:	2344      	movs	r3, #68	; 0x44
 80169ba:	18fb      	adds	r3, r7, r3
 80169bc:	881b      	ldrh	r3, [r3, #0]
 80169be:	2b00      	cmp	r3, #0
 80169c0:	d000      	beq.n	80169c4 <Send_DpmConfigGetCnf+0x4ac>
 80169c2:	e065      	b.n	8016a90 <Send_DpmConfigGetCnf+0x578>
      {
        break;
      }
      case GUI_PARAM_PID_SOP :
      {
        uint16_t value = (uint16_t)DPM_ID_Settings[PortNum].PID;
 80169c4:	230f      	movs	r3, #15
 80169c6:	18fb      	adds	r3, r7, r3
 80169c8:	781b      	ldrb	r3, [r3, #0]
 80169ca:	4a41      	ldr	r2, [pc, #260]	; (8016ad0 <Send_DpmConfigGetCnf+0x5b8>)
 80169cc:	00db      	lsls	r3, r3, #3
 80169ce:	18d3      	adds	r3, r2, r3
 80169d0:	3306      	adds	r3, #6
 80169d2:	881a      	ldrh	r2, [r3, #0]
 80169d4:	2114      	movs	r1, #20
 80169d6:	187b      	adds	r3, r7, r1
 80169d8:	801a      	strh	r2, [r3, #0]
        (void)TLV_add(&send_tlv, (uint8_t)GUI_PARAM_PID_SOP, 2, (uint8_t *)&value);
 80169da:	187b      	adds	r3, r7, r1
 80169dc:	2230      	movs	r2, #48	; 0x30
 80169de:	18b8      	adds	r0, r7, r2
 80169e0:	2202      	movs	r2, #2
 80169e2:	2118      	movs	r1, #24
 80169e4:	f7fd f844 	bl	8013a70 <TLV_add>
      }
      if (0U != length)
 80169e8:	2344      	movs	r3, #68	; 0x44
 80169ea:	18fb      	adds	r3, r7, r3
 80169ec:	881b      	ldrh	r3, [r3, #0]
 80169ee:	2b00      	cmp	r3, #0
 80169f0:	d150      	bne.n	8016a94 <Send_DpmConfigGetCnf+0x57c>
        break;
      }
#endif /* _VDM */
      case GUI_PARAM_MEASUREREPORTING :
      {
        uint8_t settings = (uint8_t)GUI_USER_Params[PortNum].u.MeasurementReporting;
 80169f2:	230f      	movs	r3, #15
 80169f4:	18fb      	adds	r3, r7, r3
 80169f6:	781a      	ldrb	r2, [r3, #0]
 80169f8:	4936      	ldr	r1, [pc, #216]	; (8016ad4 <Send_DpmConfigGetCnf+0x5bc>)
 80169fa:	0013      	movs	r3, r2
 80169fc:	005b      	lsls	r3, r3, #1
 80169fe:	189b      	adds	r3, r3, r2
 8016a00:	005b      	lsls	r3, r3, #1
 8016a02:	18cb      	adds	r3, r1, r3
 8016a04:	3304      	adds	r3, #4
 8016a06:	781a      	ldrb	r2, [r3, #0]
 8016a08:	2113      	movs	r1, #19
 8016a0a:	187b      	adds	r3, r7, r1
 8016a0c:	701a      	strb	r2, [r3, #0]
        (void)TLV_add(&send_tlv, (uint8_t)GUI_PARAM_MEASUREREPORTING, 1, &settings);
 8016a0e:	187b      	adds	r3, r7, r1
 8016a10:	2230      	movs	r2, #48	; 0x30
 8016a12:	18b8      	adds	r0, r7, r2
 8016a14:	2201      	movs	r2, #1
 8016a16:	211a      	movs	r1, #26
 8016a18:	f7fd f82a 	bl	8013a70 <TLV_add>
      }
      if (0U != length)
 8016a1c:	2344      	movs	r3, #68	; 0x44
 8016a1e:	18fb      	adds	r3, r7, r3
 8016a20:	881b      	ldrh	r3, [r3, #0]
 8016a22:	2b00      	cmp	r3, #0
 8016a24:	d138      	bne.n	8016a98 <Send_DpmConfigGetCnf+0x580>
        break;
      }
#endif /* _MANU_INFO */
#endif /*USBPD_REV30_SUPPORT*/
      default:
        if (0U != length)
 8016a26:	2344      	movs	r3, #68	; 0x44
 8016a28:	18fb      	adds	r3, r7, r3
 8016a2a:	881b      	ldrh	r3, [r3, #0]
 8016a2c:	2b00      	cmp	r3, #0
 8016a2e:	d035      	beq.n	8016a9c <Send_DpmConfigGetCnf+0x584>
        {
          /* At least 1 parameter does not exist */
          TLV_deinit_encode(&send_tlv);
 8016a30:	2330      	movs	r3, #48	; 0x30
 8016a32:	18fb      	adds	r3, r7, r3
 8016a34:	0018      	movs	r0, r3
 8016a36:	f7fd f97d 	bl	8013d34 <TLV_deinit_encode>
          Send_DpmConfigGetRej(PortNum, pEncodedMsg, GUI_REJ_DPM_INVALID_MESSAGE);
 8016a3a:	6879      	ldr	r1, [r7, #4]
 8016a3c:	230f      	movs	r3, #15
 8016a3e:	18fb      	adds	r3, r7, r3
 8016a40:	781b      	ldrb	r3, [r3, #0]
 8016a42:	2203      	movs	r2, #3
 8016a44:	0018      	movs	r0, r3
 8016a46:	f000 f847 	bl	8016ad8 <Send_DpmConfigGetRej>
          goto __end;
 8016a4a:	e038      	b.n	8016abe <Send_DpmConfigGetCnf+0x5a6>
          break;
 8016a4c:	46c0      	nop			; (mov r8, r8)
 8016a4e:	e026      	b.n	8016a9e <Send_DpmConfigGetCnf+0x586>
          break;
 8016a50:	46c0      	nop			; (mov r8, r8)
 8016a52:	e024      	b.n	8016a9e <Send_DpmConfigGetCnf+0x586>
          break;
 8016a54:	46c0      	nop			; (mov r8, r8)
 8016a56:	e022      	b.n	8016a9e <Send_DpmConfigGetCnf+0x586>
          break;
 8016a58:	46c0      	nop			; (mov r8, r8)
 8016a5a:	e020      	b.n	8016a9e <Send_DpmConfigGetCnf+0x586>
          break;
 8016a5c:	46c0      	nop			; (mov r8, r8)
 8016a5e:	e01e      	b.n	8016a9e <Send_DpmConfigGetCnf+0x586>
          break;
 8016a60:	46c0      	nop			; (mov r8, r8)
 8016a62:	e01c      	b.n	8016a9e <Send_DpmConfigGetCnf+0x586>
          break;
 8016a64:	46c0      	nop			; (mov r8, r8)
 8016a66:	e01a      	b.n	8016a9e <Send_DpmConfigGetCnf+0x586>
          break;
 8016a68:	46c0      	nop			; (mov r8, r8)
 8016a6a:	e018      	b.n	8016a9e <Send_DpmConfigGetCnf+0x586>
          break;
 8016a6c:	46c0      	nop			; (mov r8, r8)
 8016a6e:	e016      	b.n	8016a9e <Send_DpmConfigGetCnf+0x586>
          break;
 8016a70:	46c0      	nop			; (mov r8, r8)
 8016a72:	e014      	b.n	8016a9e <Send_DpmConfigGetCnf+0x586>
          break;
 8016a74:	46c0      	nop			; (mov r8, r8)
 8016a76:	e012      	b.n	8016a9e <Send_DpmConfigGetCnf+0x586>
        break;
 8016a78:	46c0      	nop			; (mov r8, r8)
 8016a7a:	e010      	b.n	8016a9e <Send_DpmConfigGetCnf+0x586>
        break;
 8016a7c:	46c0      	nop			; (mov r8, r8)
 8016a7e:	e00e      	b.n	8016a9e <Send_DpmConfigGetCnf+0x586>
        break;
 8016a80:	46c0      	nop			; (mov r8, r8)
 8016a82:	e00c      	b.n	8016a9e <Send_DpmConfigGetCnf+0x586>
        break;
 8016a84:	46c0      	nop			; (mov r8, r8)
 8016a86:	e00a      	b.n	8016a9e <Send_DpmConfigGetCnf+0x586>
        break;
 8016a88:	46c0      	nop			; (mov r8, r8)
 8016a8a:	e008      	b.n	8016a9e <Send_DpmConfigGetCnf+0x586>
        break;
 8016a8c:	46c0      	nop			; (mov r8, r8)
 8016a8e:	e006      	b.n	8016a9e <Send_DpmConfigGetCnf+0x586>
        break;
 8016a90:	46c0      	nop			; (mov r8, r8)
 8016a92:	e004      	b.n	8016a9e <Send_DpmConfigGetCnf+0x586>
        break;
 8016a94:	46c0      	nop			; (mov r8, r8)
 8016a96:	e002      	b.n	8016a9e <Send_DpmConfigGetCnf+0x586>
        break;
 8016a98:	46c0      	nop			; (mov r8, r8)
 8016a9a:	e000      	b.n	8016a9e <Send_DpmConfigGetCnf+0x586>
        }
        break;
 8016a9c:	46c0      	nop			; (mov r8, r8)
    }
    index++;
 8016a9e:	2147      	movs	r1, #71	; 0x47
 8016aa0:	187b      	adds	r3, r7, r1
 8016aa2:	781a      	ldrb	r2, [r3, #0]
 8016aa4:	187b      	adds	r3, r7, r1
 8016aa6:	3201      	adds	r2, #1
 8016aa8:	701a      	strb	r2, [r3, #0]
    /*
    Loop until we haven't processed each specified parameter.
    If there weren't any (length = 0), we exit the loop after one execution.
    */
  } while (index < length);
 8016aaa:	187b      	adds	r3, r7, r1
 8016aac:	781b      	ldrb	r3, [r3, #0]
 8016aae:	b29b      	uxth	r3, r3
 8016ab0:	2244      	movs	r2, #68	; 0x44
 8016ab2:	18ba      	adds	r2, r7, r2
 8016ab4:	8812      	ldrh	r2, [r2, #0]
 8016ab6:	429a      	cmp	r2, r3
 8016ab8:	d900      	bls.n	8016abc <Send_DpmConfigGetCnf+0x5a4>
 8016aba:	e554      	b.n	8016566 <Send_DpmConfigGetCnf+0x4e>

__end:
 8016abc:	46c0      	nop			; (mov r8, r8)
  TLV_deinit_encode(&send_tlv);
 8016abe:	2330      	movs	r3, #48	; 0x30
 8016ac0:	18fb      	adds	r3, r7, r3
 8016ac2:	0018      	movs	r0, r3
 8016ac4:	f7fd f936 	bl	8013d34 <TLV_deinit_encode>
}
 8016ac8:	46c0      	nop			; (mov r8, r8)
 8016aca:	46bd      	mov	sp, r7
 8016acc:	b012      	add	sp, #72	; 0x48
 8016ace:	bd80      	pop	{r7, pc}
 8016ad0:	20000020 	.word	0x20000020
 8016ad4:	20002cb4 	.word	0x20002cb4

08016ad8 <Send_DpmConfigGetRej>:

static void Send_DpmConfigGetRej(uint8_t PortNum, uint8_t *pEncodedMsg, USBPD_GUI_Reject_Reason RejectReason)
{
 8016ad8:	b590      	push	{r4, r7, lr}
 8016ada:	b087      	sub	sp, #28
 8016adc:	af00      	add	r7, sp, #0
 8016ade:	6039      	str	r1, [r7, #0]
 8016ae0:	0011      	movs	r1, r2
 8016ae2:	1dfb      	adds	r3, r7, #7
 8016ae4:	1c02      	adds	r2, r0, #0
 8016ae6:	701a      	strb	r2, [r3, #0]
 8016ae8:	1dbb      	adds	r3, r7, #6
 8016aea:	1c0a      	adds	r2, r1, #0
 8016aec:	701a      	strb	r2, [r3, #0]
  UNUSED(PortNum);
  TLV_ToSend_Data_t send_tlv;
  (void)TLV_init_encode(&send_tlv, (uint8_t)DPM_CONFIG_REJ, TLV_SIZE_MAX, pEncodedMsg);
 8016aee:	683b      	ldr	r3, [r7, #0]
 8016af0:	2280      	movs	r2, #128	; 0x80
 8016af2:	0052      	lsls	r2, r2, #1
 8016af4:	240c      	movs	r4, #12
 8016af6:	1938      	adds	r0, r7, r4
 8016af8:	2108      	movs	r1, #8
 8016afa:	f7fc ff56 	bl	80139aa <TLV_init_encode>
  (void)TLV_add(&send_tlv, (uint8_t)RejectReason, 0, NULL);
 8016afe:	1dbb      	adds	r3, r7, #6
 8016b00:	7819      	ldrb	r1, [r3, #0]
 8016b02:	1938      	adds	r0, r7, r4
 8016b04:	2300      	movs	r3, #0
 8016b06:	2200      	movs	r2, #0
 8016b08:	f7fc ffb2 	bl	8013a70 <TLV_add>
  TLV_deinit_encode(&send_tlv);
 8016b0c:	193b      	adds	r3, r7, r4
 8016b0e:	0018      	movs	r0, r3
 8016b10:	f7fd f910 	bl	8013d34 <TLV_deinit_encode>
}
 8016b14:	46c0      	nop			; (mov r8, r8)
 8016b16:	46bd      	mov	sp, r7
 8016b18:	b007      	add	sp, #28
 8016b1a:	bd90      	pop	{r4, r7, pc}

08016b1c <Send_DpmMessageRej>:

static void Send_DpmMessageRej(uint8_t PortNum, uint8_t *pEncodedMsg, USBPD_GUI_Reject_Reason RejectReason)
{
 8016b1c:	b590      	push	{r4, r7, lr}
 8016b1e:	b087      	sub	sp, #28
 8016b20:	af00      	add	r7, sp, #0
 8016b22:	6039      	str	r1, [r7, #0]
 8016b24:	0011      	movs	r1, r2
 8016b26:	1dfb      	adds	r3, r7, #7
 8016b28:	1c02      	adds	r2, r0, #0
 8016b2a:	701a      	strb	r2, [r3, #0]
 8016b2c:	1dbb      	adds	r3, r7, #6
 8016b2e:	1c0a      	adds	r2, r1, #0
 8016b30:	701a      	strb	r2, [r3, #0]
  UNUSED(PortNum);
  TLV_ToSend_Data_t send_tlv;
  (void)TLV_init_encode(&send_tlv, (uint8_t)DPM_MESSAGE_REJ, TLV_SIZE_MAX, pEncodedMsg);
 8016b32:	683b      	ldr	r3, [r7, #0]
 8016b34:	2280      	movs	r2, #128	; 0x80
 8016b36:	0052      	lsls	r2, r2, #1
 8016b38:	240c      	movs	r4, #12
 8016b3a:	1938      	adds	r0, r7, r4
 8016b3c:	210b      	movs	r1, #11
 8016b3e:	f7fc ff34 	bl	80139aa <TLV_init_encode>
  (void)TLV_add(&send_tlv, (uint8_t)RejectReason, 0, NULL);
 8016b42:	1dbb      	adds	r3, r7, #6
 8016b44:	7819      	ldrb	r1, [r3, #0]
 8016b46:	1938      	adds	r0, r7, r4
 8016b48:	2300      	movs	r3, #0
 8016b4a:	2200      	movs	r2, #0
 8016b4c:	f7fc ff90 	bl	8013a70 <TLV_add>
  TLV_deinit_encode(&send_tlv);
 8016b50:	193b      	adds	r3, r7, r4
 8016b52:	0018      	movs	r0, r3
 8016b54:	f7fd f8ee 	bl	8013d34 <TLV_deinit_encode>
}
 8016b58:	46c0      	nop			; (mov r8, r8)
 8016b5a:	46bd      	mov	sp, r7
 8016b5c:	b007      	add	sp, #28
 8016b5e:	bd90      	pop	{r4, r7, pc}

08016b60 <Send_DpmRegisterReadCnf>:

static void Send_DpmRegisterReadCnf(uint8_t PortNum, uint8_t *pEncodedMsg, uint8_t param)
{
 8016b60:	b5b0      	push	{r4, r5, r7, lr}
 8016b62:	b090      	sub	sp, #64	; 0x40
 8016b64:	af00      	add	r7, sp, #0
 8016b66:	6039      	str	r1, [r7, #0]
 8016b68:	0011      	movs	r1, r2
 8016b6a:	1dfb      	adds	r3, r7, #7
 8016b6c:	1c02      	adds	r2, r0, #0
 8016b6e:	701a      	strb	r2, [r3, #0]
 8016b70:	1dbb      	adds	r3, r7, #6
 8016b72:	1c0a      	adds	r2, r1, #0
 8016b74:	701a      	strb	r2, [r3, #0]
  TLV_ToSend_Data_t ToSendTLV;
  (void)TLV_init_encode(&ToSendTLV, __GUI_SET_TAG_ID((PortNum + 1), DPM_REGISTER_READ_CNF), TLV_SIZE_MAX, pEncodedMsg);
 8016b76:	1dfb      	adds	r3, r7, #7
 8016b78:	781b      	ldrb	r3, [r3, #0]
 8016b7a:	3301      	adds	r3, #1
 8016b7c:	015b      	lsls	r3, r3, #5
 8016b7e:	b25b      	sxtb	r3, r3
 8016b80:	220f      	movs	r2, #15
 8016b82:	4313      	orrs	r3, r2
 8016b84:	b25b      	sxtb	r3, r3
 8016b86:	b2d9      	uxtb	r1, r3
 8016b88:	683b      	ldr	r3, [r7, #0]
 8016b8a:	2280      	movs	r2, #128	; 0x80
 8016b8c:	0052      	lsls	r2, r2, #1
 8016b8e:	2030      	movs	r0, #48	; 0x30
 8016b90:	1838      	adds	r0, r7, r0
 8016b92:	f7fc ff0a 	bl	80139aa <TLV_init_encode>

  uint8_t stateMachineArray[GUI_REG_NUMBER_OF_REGISTERS] =
 8016b96:	2508      	movs	r5, #8
 8016b98:	197b      	adds	r3, r7, r5
 8016b9a:	4a1e      	ldr	r2, [pc, #120]	; (8016c14 <Send_DpmRegisterReadCnf+0xb4>)
 8016b9c:	ca13      	ldmia	r2!, {r0, r1, r4}
 8016b9e:	c313      	stmia	r3!, {r0, r1, r4}
 8016ba0:	ca13      	ldmia	r2!, {r0, r1, r4}
 8016ba2:	c313      	stmia	r3!, {r0, r1, r4}
 8016ba4:	ca13      	ldmia	r2!, {r0, r1, r4}
 8016ba6:	c313      	stmia	r3!, {r0, r1, r4}
 8016ba8:	8811      	ldrh	r1, [r2, #0]
 8016baa:	8019      	strh	r1, [r3, #0]
 8016bac:	7892      	ldrb	r2, [r2, #2]
 8016bae:	709a      	strb	r2, [r3, #2]
    (uint8_t)GUI_REG_TX_HEADER, (uint8_t)GUI_REG_TX_DATA, (uint8_t)GUI_REG_VBUS_VOLTAGE,
    (uint8_t)GUI_REG_VBUS_SINK_DISCONNECT_THRESHOLD, (uint8_t)GUI_REG_VBUS_STOP_DISCHARGE_THRESHOLD,
    (uint8_t)GUI_REG_VBUS_VOLTAGE_ALARM_HI_CFG, (uint8_t)GUI_REG_VBUS_VOLTAGE_ALARM_LO_CFG,
    (uint8_t)GUI_REG_VENDOR_DATA
  };
  uint8_t counter = 0;
 8016bb0:	233f      	movs	r3, #63	; 0x3f
 8016bb2:	18fb      	adds	r3, r7, r3
 8016bb4:	2200      	movs	r2, #0
 8016bb6:	701a      	strb	r2, [r3, #0]

  /*  If param is not at 0xFF, then it means we only want one parameter.
      We then have to get out of the state machine after the first state */
  if (param != 0xFFU)
 8016bb8:	1dbb      	adds	r3, r7, #6
 8016bba:	781b      	ldrb	r3, [r3, #0]
 8016bbc:	2bff      	cmp	r3, #255	; 0xff
 8016bbe:	d003      	beq.n	8016bc8 <Send_DpmRegisterReadCnf+0x68>
  {
    *stateMachineArray = param;
 8016bc0:	197b      	adds	r3, r7, r5
 8016bc2:	1dba      	adds	r2, r7, #6
 8016bc4:	7812      	ldrb	r2, [r2, #0]
 8016bc6:	701a      	strb	r2, [r3, #0]
  }

  do
  {
    switch (stateMachineArray[counter])
 8016bc8:	233f      	movs	r3, #63	; 0x3f
 8016bca:	18fb      	adds	r3, r7, r3
 8016bcc:	781b      	ldrb	r3, [r3, #0]
 8016bce:	2208      	movs	r2, #8
 8016bd0:	18ba      	adds	r2, r7, r2
 8016bd2:	5cd3      	ldrb	r3, [r2, r3]
 8016bd4:	2b80      	cmp	r3, #128	; 0x80
 8016bd6:	d804      	bhi.n	8016be2 <Send_DpmRegisterReadCnf+0x82>
 8016bd8:	009a      	lsls	r2, r3, #2
 8016bda:	4b0f      	ldr	r3, [pc, #60]	; (8016c18 <Send_DpmRegisterReadCnf+0xb8>)
 8016bdc:	18d3      	adds	r3, r2, r3
 8016bde:	681b      	ldr	r3, [r3, #0]
 8016be0:	469f      	mov	pc, r3
        break;
      case GUI_REG_VENDOR_DATA :

        break;
      default :
        break;
 8016be2:	46c0      	nop			; (mov r8, r8)
    }
    counter++;
 8016be4:	213f      	movs	r1, #63	; 0x3f
 8016be6:	187b      	adds	r3, r7, r1
 8016be8:	781a      	ldrb	r2, [r3, #0]
 8016bea:	187b      	adds	r3, r7, r1
 8016bec:	3201      	adds	r2, #1
 8016bee:	701a      	strb	r2, [r3, #0]
  } while ((counter < GUI_REG_NUMBER_OF_REGISTERS) && (param != 0xFFU));
 8016bf0:	187b      	adds	r3, r7, r1
 8016bf2:	781b      	ldrb	r3, [r3, #0]
 8016bf4:	2b26      	cmp	r3, #38	; 0x26
 8016bf6:	d803      	bhi.n	8016c00 <Send_DpmRegisterReadCnf+0xa0>
 8016bf8:	1dbb      	adds	r3, r7, #6
 8016bfa:	781b      	ldrb	r3, [r3, #0]
 8016bfc:	2bff      	cmp	r3, #255	; 0xff
 8016bfe:	d1e3      	bne.n	8016bc8 <Send_DpmRegisterReadCnf+0x68>

  TLV_deinit_encode(&ToSendTLV);
 8016c00:	2330      	movs	r3, #48	; 0x30
 8016c02:	18fb      	adds	r3, r7, r3
 8016c04:	0018      	movs	r0, r3
 8016c06:	f7fd f895 	bl	8013d34 <TLV_deinit_encode>
}
 8016c0a:	46c0      	nop			; (mov r8, r8)
 8016c0c:	46bd      	mov	sp, r7
 8016c0e:	b010      	add	sp, #64	; 0x40
 8016c10:	bdb0      	pop	{r4, r5, r7, pc}
 8016c12:	46c0      	nop			; (mov r8, r8)
 8016c14:	08019864 	.word	0x08019864
 8016c18:	08019da8 	.word	0x08019da8

08016c1c <Send_DpmRegisterWriteCnf>:

static void Send_DpmRegisterWriteCnf(uint8_t PortNum, uint8_t *pEncodedMsg, uint8_t *toProcess)
{
 8016c1c:	b5b0      	push	{r4, r5, r7, lr}
 8016c1e:	b08c      	sub	sp, #48	; 0x30
 8016c20:	af00      	add	r7, sp, #0
 8016c22:	60b9      	str	r1, [r7, #8]
 8016c24:	607a      	str	r2, [r7, #4]
 8016c26:	230f      	movs	r3, #15
 8016c28:	18fb      	adds	r3, r7, r3
 8016c2a:	1c02      	adds	r2, r0, #0
 8016c2c:	701a      	strb	r2, [r3, #0]
  TLV_Received_Data_t ToProcessTLV;
  (void)TLV_init_decode(&ToProcessTLV, toProcess);
 8016c2e:	687a      	ldr	r2, [r7, #4]
 8016c30:	2428      	movs	r4, #40	; 0x28
 8016c32:	193b      	adds	r3, r7, r4
 8016c34:	0011      	movs	r1, r2
 8016c36:	0018      	movs	r0, r3
 8016c38:	f7fd f88e 	bl	8013d58 <TLV_init_decode>

  uint8_t registerName;
  uint16_t registerSize;
  uint8_t *registerValue;

  (void)TLV_get(&ToProcessTLV, &registerName, &registerSize, &registerValue);
 8016c3c:	2320      	movs	r3, #32
 8016c3e:	18fb      	adds	r3, r7, r3
 8016c40:	2224      	movs	r2, #36	; 0x24
 8016c42:	18ba      	adds	r2, r7, r2
 8016c44:	2527      	movs	r5, #39	; 0x27
 8016c46:	1979      	adds	r1, r7, r5
 8016c48:	1938      	adds	r0, r7, r4
 8016c4a:	f7fd f8b1 	bl	8013db0 <TLV_get>

  switch (registerName)
 8016c4e:	197b      	adds	r3, r7, r5
 8016c50:	781b      	ldrb	r3, [r3, #0]
 8016c52:	2b80      	cmp	r3, #128	; 0x80
 8016c54:	d804      	bhi.n	8016c60 <Send_DpmRegisterWriteCnf+0x44>
 8016c56:	009a      	lsls	r2, r3, #2
 8016c58:	4b10      	ldr	r3, [pc, #64]	; (8016c9c <Send_DpmRegisterWriteCnf+0x80>)
 8016c5a:	18d3      	adds	r3, r2, r3
 8016c5c:	681b      	ldr	r3, [r3, #0]
 8016c5e:	469f      	mov	pc, r3
      break;
    case GUI_REG_VENDOR_DATA :

      break;
    default :
      break;
 8016c60:	46c0      	nop			; (mov r8, r8)
  }
  TLV_deinit_decode(&ToProcessTLV);
 8016c62:	2328      	movs	r3, #40	; 0x28
 8016c64:	18fb      	adds	r3, r7, r3
 8016c66:	0018      	movs	r0, r3
 8016c68:	f7fd f8fc 	bl	8013e64 <TLV_deinit_decode>

  TLV_ToSend_Data_t ToSendTLV;
  /* Generation of the empty response, as it should be done*/
  (void)TLV_init_encode(&ToSendTLV, __GUI_SET_TAG_ID((PortNum + 1), DPM_REGISTER_WRITE_CNF), 12, pEncodedMsg);
 8016c6c:	230f      	movs	r3, #15
 8016c6e:	18fb      	adds	r3, r7, r3
 8016c70:	781b      	ldrb	r3, [r3, #0]
 8016c72:	3301      	adds	r3, #1
 8016c74:	015b      	lsls	r3, r3, #5
 8016c76:	b25b      	sxtb	r3, r3
 8016c78:	2211      	movs	r2, #17
 8016c7a:	4313      	orrs	r3, r2
 8016c7c:	b25b      	sxtb	r3, r3
 8016c7e:	b2d9      	uxtb	r1, r3
 8016c80:	68bb      	ldr	r3, [r7, #8]
 8016c82:	2414      	movs	r4, #20
 8016c84:	1938      	adds	r0, r7, r4
 8016c86:	220c      	movs	r2, #12
 8016c88:	f7fc fe8f 	bl	80139aa <TLV_init_encode>
  TLV_deinit_encode(&ToSendTLV);
 8016c8c:	193b      	adds	r3, r7, r4
 8016c8e:	0018      	movs	r0, r3
 8016c90:	f7fd f850 	bl	8013d34 <TLV_deinit_encode>
}
 8016c94:	46c0      	nop			; (mov r8, r8)
 8016c96:	46bd      	mov	sp, r7
 8016c98:	b00c      	add	sp, #48	; 0x30
 8016c9a:	bdb0      	pop	{r4, r5, r7, pc}
 8016c9c:	08019fac 	.word	0x08019fac

08016ca0 <Manage_FreeText>:
  * @param  pPayload    Pointer of the text to manage
  * @param  Size        Size of the text
  * @retval USBPD Status
  */
static USBPD_StatusTypeDef Manage_FreeText(uint8_t PortNum, uint8_t *pPayload, uint16_t Size)
{
 8016ca0:	b5b0      	push	{r4, r5, r7, lr}
 8016ca2:	b084      	sub	sp, #16
 8016ca4:	af00      	add	r7, sp, #0
 8016ca6:	6039      	str	r1, [r7, #0]
 8016ca8:	0011      	movs	r1, r2
 8016caa:	1dfb      	adds	r3, r7, #7
 8016cac:	1c02      	adds	r2, r0, #0
 8016cae:	701a      	strb	r2, [r3, #0]
 8016cb0:	1d3b      	adds	r3, r7, #4
 8016cb2:	1c0a      	adds	r2, r1, #0
 8016cb4:	801a      	strh	r2, [r3, #0]
  USBPD_StatusTypeDef _status = USBPD_FAIL;
 8016cb6:	250f      	movs	r5, #15
 8016cb8:	197b      	adds	r3, r7, r5
 8016cba:	2210      	movs	r2, #16
 8016cbc:	701a      	strb	r2, [r3, #0]

  if (NULL != pCB_FreeText)
 8016cbe:	4b0b      	ldr	r3, [pc, #44]	; (8016cec <Manage_FreeText+0x4c>)
 8016cc0:	681b      	ldr	r3, [r3, #0]
 8016cc2:	2b00      	cmp	r3, #0
 8016cc4:	d00b      	beq.n	8016cde <Manage_FreeText+0x3e>
  {
    pCB_FreeText(PortNum, pPayload, Size);
 8016cc6:	4b09      	ldr	r3, [pc, #36]	; (8016cec <Manage_FreeText+0x4c>)
 8016cc8:	681b      	ldr	r3, [r3, #0]
 8016cca:	1d3a      	adds	r2, r7, #4
 8016ccc:	8814      	ldrh	r4, [r2, #0]
 8016cce:	6839      	ldr	r1, [r7, #0]
 8016cd0:	1dfa      	adds	r2, r7, #7
 8016cd2:	7810      	ldrb	r0, [r2, #0]
 8016cd4:	0022      	movs	r2, r4
 8016cd6:	4798      	blx	r3
    _status = USBPD_OK;
 8016cd8:	197b      	adds	r3, r7, r5
 8016cda:	2200      	movs	r2, #0
 8016cdc:	701a      	strb	r2, [r3, #0]
  }

  return _status;
 8016cde:	230f      	movs	r3, #15
 8016ce0:	18fb      	adds	r3, r7, r3
 8016ce2:	781b      	ldrb	r3, [r3, #0]
}
 8016ce4:	0018      	movs	r0, r3
 8016ce6:	46bd      	mov	sp, r7
 8016ce8:	b004      	add	sp, #16
 8016cea:	bdb0      	pop	{r4, r5, r7, pc}
 8016cec:	20002ed8 	.word	0x20002ed8

08016cf0 <UpdateSNKPowerPort0>:
/**
  * @brief  Function to update SNK PDO and power user settings on Port0
  * @retval None
  */
static void UpdateSNKPowerPort0(void)
{
 8016cf0:	b580      	push	{r7, lr}
 8016cf2:	b088      	sub	sp, #32
 8016cf4:	af00      	add	r7, sp, #0
  USBPD_PDO_TypeDef pdo;
  uint32_t _max_power = 0;
 8016cf6:	2300      	movs	r3, #0
 8016cf8:	61fb      	str	r3, [r7, #28]
  uint16_t _voltage;
  uint16_t _current;
  uint16_t _power;
  uint16_t _min_voltage = 0xFFFF;
 8016cfa:	231a      	movs	r3, #26
 8016cfc:	18fb      	adds	r3, r7, r3
 8016cfe:	2201      	movs	r2, #1
 8016d00:	4252      	negs	r2, r2
 8016d02:	801a      	strh	r2, [r3, #0]
  uint16_t _max_voltage = 0;
 8016d04:	2318      	movs	r3, #24
 8016d06:	18fb      	adds	r3, r7, r3
 8016d08:	2200      	movs	r2, #0
 8016d0a:	801a      	strh	r2, [r3, #0]
  uint16_t _max_current = 0;
 8016d0c:	2316      	movs	r3, #22
 8016d0e:	18fb      	adds	r3, r7, r3
 8016d10:	2200      	movs	r2, #0
 8016d12:	801a      	strh	r2, [r3, #0]

  for (uint32_t _index = 0; _index < USBPD_NbPDO[0]; _index++)
 8016d14:	2300      	movs	r3, #0
 8016d16:	613b      	str	r3, [r7, #16]
 8016d18:	e0de      	b.n	8016ed8 <UpdateSNKPowerPort0+0x1e8>
  {
    pdo.d32 = PORT0_PDO_ListSNK[_index];
 8016d1a:	4b84      	ldr	r3, [pc, #528]	; (8016f2c <UpdateSNKPowerPort0+0x23c>)
 8016d1c:	693a      	ldr	r2, [r7, #16]
 8016d1e:	0092      	lsls	r2, r2, #2
 8016d20:	58d3      	ldr	r3, [r2, r3]
 8016d22:	607b      	str	r3, [r7, #4]
    switch (pdo.GenericPDO.PowerObject)
 8016d24:	1dfb      	adds	r3, r7, #7
 8016d26:	781b      	ldrb	r3, [r3, #0]
 8016d28:	061b      	lsls	r3, r3, #24
 8016d2a:	0f9b      	lsrs	r3, r3, #30
 8016d2c:	b2db      	uxtb	r3, r3
 8016d2e:	2b02      	cmp	r3, #2
 8016d30:	d100      	bne.n	8016d34 <UpdateSNKPowerPort0+0x44>
 8016d32:	e082      	b.n	8016e3a <UpdateSNKPowerPort0+0x14a>
 8016d34:	dd00      	ble.n	8016d38 <UpdateSNKPowerPort0+0x48>
 8016d36:	e0c5      	b.n	8016ec4 <UpdateSNKPowerPort0+0x1d4>
 8016d38:	2b00      	cmp	r3, #0
 8016d3a:	d002      	beq.n	8016d42 <UpdateSNKPowerPort0+0x52>
 8016d3c:	2b01      	cmp	r3, #1
 8016d3e:	d03b      	beq.n	8016db8 <UpdateSNKPowerPort0+0xc8>
        _current = GUI_DECODE_50MA(pdo.SRCSNKAPDO.MaxCurrentIn50mAunits);
        GUI_UPDATE_CURRENT_MAX(_current, _max_current);
        break;
#endif /*_USBPD_REV30_SUPPORT && PPS*/
      default:
        break;
 8016d40:	e0c0      	b.n	8016ec4 <UpdateSNKPowerPort0+0x1d4>
        _voltage = GUI_DECODE_50MV(pdo.SNKFixedPDO.VoltageIn50mVunits);
 8016d42:	687b      	ldr	r3, [r7, #4]
 8016d44:	031b      	lsls	r3, r3, #12
 8016d46:	0d9b      	lsrs	r3, r3, #22
 8016d48:	b29b      	uxth	r3, r3
 8016d4a:	0019      	movs	r1, r3
 8016d4c:	200e      	movs	r0, #14
 8016d4e:	183b      	adds	r3, r7, r0
 8016d50:	2232      	movs	r2, #50	; 0x32
 8016d52:	434a      	muls	r2, r1
 8016d54:	801a      	strh	r2, [r3, #0]
        GUI_UPDATE_VOLTAGE_MIN(_voltage, _min_voltage);
 8016d56:	0001      	movs	r1, r0
 8016d58:	187a      	adds	r2, r7, r1
 8016d5a:	201a      	movs	r0, #26
 8016d5c:	183b      	adds	r3, r7, r0
 8016d5e:	8812      	ldrh	r2, [r2, #0]
 8016d60:	881b      	ldrh	r3, [r3, #0]
 8016d62:	429a      	cmp	r2, r3
 8016d64:	d203      	bcs.n	8016d6e <UpdateSNKPowerPort0+0x7e>
 8016d66:	183b      	adds	r3, r7, r0
 8016d68:	187a      	adds	r2, r7, r1
 8016d6a:	8812      	ldrh	r2, [r2, #0]
 8016d6c:	801a      	strh	r2, [r3, #0]
        GUI_UPDATE_VOLTAGE_MAX(_voltage, _max_voltage);
 8016d6e:	210e      	movs	r1, #14
 8016d70:	187a      	adds	r2, r7, r1
 8016d72:	2018      	movs	r0, #24
 8016d74:	183b      	adds	r3, r7, r0
 8016d76:	8812      	ldrh	r2, [r2, #0]
 8016d78:	881b      	ldrh	r3, [r3, #0]
 8016d7a:	429a      	cmp	r2, r3
 8016d7c:	d903      	bls.n	8016d86 <UpdateSNKPowerPort0+0x96>
 8016d7e:	183b      	adds	r3, r7, r0
 8016d80:	187a      	adds	r2, r7, r1
 8016d82:	8812      	ldrh	r2, [r2, #0]
 8016d84:	801a      	strh	r2, [r3, #0]
        _current = GUI_DECODE_10MA(pdo.SNKFixedPDO.OperationalCurrentIn10mAunits);
 8016d86:	1d3b      	adds	r3, r7, #4
 8016d88:	881b      	ldrh	r3, [r3, #0]
 8016d8a:	059b      	lsls	r3, r3, #22
 8016d8c:	0d9b      	lsrs	r3, r3, #22
 8016d8e:	b29b      	uxth	r3, r3
 8016d90:	200c      	movs	r0, #12
 8016d92:	183a      	adds	r2, r7, r0
 8016d94:	1c19      	adds	r1, r3, #0
 8016d96:	0089      	lsls	r1, r1, #2
 8016d98:	18cb      	adds	r3, r1, r3
 8016d9a:	18db      	adds	r3, r3, r3
 8016d9c:	8013      	strh	r3, [r2, #0]
        GUI_UPDATE_CURRENT_MAX(_current, _max_current);
 8016d9e:	183a      	adds	r2, r7, r0
 8016da0:	2116      	movs	r1, #22
 8016da2:	187b      	adds	r3, r7, r1
 8016da4:	8812      	ldrh	r2, [r2, #0]
 8016da6:	881b      	ldrh	r3, [r3, #0]
 8016da8:	429a      	cmp	r2, r3
 8016daa:	d800      	bhi.n	8016dae <UpdateSNKPowerPort0+0xbe>
 8016dac:	e08c      	b.n	8016ec8 <UpdateSNKPowerPort0+0x1d8>
 8016dae:	187b      	adds	r3, r7, r1
 8016db0:	183a      	adds	r2, r7, r0
 8016db2:	8812      	ldrh	r2, [r2, #0]
 8016db4:	801a      	strh	r2, [r3, #0]
        break;
 8016db6:	e087      	b.n	8016ec8 <UpdateSNKPowerPort0+0x1d8>
        _voltage = GUI_DECODE_50MV(pdo.SNKBatteryPDO.MinVoltageIn50mVunits);
 8016db8:	687b      	ldr	r3, [r7, #4]
 8016dba:	031b      	lsls	r3, r3, #12
 8016dbc:	0d9b      	lsrs	r3, r3, #22
 8016dbe:	b29b      	uxth	r3, r3
 8016dc0:	0019      	movs	r1, r3
 8016dc2:	200e      	movs	r0, #14
 8016dc4:	183b      	adds	r3, r7, r0
 8016dc6:	2232      	movs	r2, #50	; 0x32
 8016dc8:	434a      	muls	r2, r1
 8016dca:	801a      	strh	r2, [r3, #0]
        GUI_UPDATE_VOLTAGE_MIN(_voltage, _min_voltage);
 8016dcc:	0001      	movs	r1, r0
 8016dce:	187a      	adds	r2, r7, r1
 8016dd0:	201a      	movs	r0, #26
 8016dd2:	183b      	adds	r3, r7, r0
 8016dd4:	8812      	ldrh	r2, [r2, #0]
 8016dd6:	881b      	ldrh	r3, [r3, #0]
 8016dd8:	429a      	cmp	r2, r3
 8016dda:	d203      	bcs.n	8016de4 <UpdateSNKPowerPort0+0xf4>
 8016ddc:	183b      	adds	r3, r7, r0
 8016dde:	187a      	adds	r2, r7, r1
 8016de0:	8812      	ldrh	r2, [r2, #0]
 8016de2:	801a      	strh	r2, [r3, #0]
        _voltage = GUI_DECODE_50MV(pdo.SNKBatteryPDO.MaxVoltageIn50mVunits);
 8016de4:	1dbb      	adds	r3, r7, #6
 8016de6:	881b      	ldrh	r3, [r3, #0]
 8016de8:	049b      	lsls	r3, r3, #18
 8016dea:	0d9b      	lsrs	r3, r3, #22
 8016dec:	b29b      	uxth	r3, r3
 8016dee:	0019      	movs	r1, r3
 8016df0:	200e      	movs	r0, #14
 8016df2:	183b      	adds	r3, r7, r0
 8016df4:	2232      	movs	r2, #50	; 0x32
 8016df6:	434a      	muls	r2, r1
 8016df8:	801a      	strh	r2, [r3, #0]
        GUI_UPDATE_VOLTAGE_MAX(_voltage, _max_voltage);
 8016dfa:	0001      	movs	r1, r0
 8016dfc:	187a      	adds	r2, r7, r1
 8016dfe:	2018      	movs	r0, #24
 8016e00:	183b      	adds	r3, r7, r0
 8016e02:	8812      	ldrh	r2, [r2, #0]
 8016e04:	881b      	ldrh	r3, [r3, #0]
 8016e06:	429a      	cmp	r2, r3
 8016e08:	d903      	bls.n	8016e12 <UpdateSNKPowerPort0+0x122>
 8016e0a:	183b      	adds	r3, r7, r0
 8016e0c:	187a      	adds	r2, r7, r1
 8016e0e:	8812      	ldrh	r2, [r2, #0]
 8016e10:	801a      	strh	r2, [r3, #0]
        _power = GUI_DECODE_MW(pdo.SNKBatteryPDO.OperationalPowerIn250mWunits);
 8016e12:	1d3b      	adds	r3, r7, #4
 8016e14:	881b      	ldrh	r3, [r3, #0]
 8016e16:	059b      	lsls	r3, r3, #22
 8016e18:	0d9b      	lsrs	r3, r3, #22
 8016e1a:	b29b      	uxth	r3, r3
 8016e1c:	0019      	movs	r1, r3
 8016e1e:	200a      	movs	r0, #10
 8016e20:	183b      	adds	r3, r7, r0
 8016e22:	22fa      	movs	r2, #250	; 0xfa
 8016e24:	434a      	muls	r2, r1
 8016e26:	801a      	strh	r2, [r3, #0]
        GUI_UPDATE_POWER_MAX(_power, _max_power);
 8016e28:	183b      	adds	r3, r7, r0
 8016e2a:	881b      	ldrh	r3, [r3, #0]
 8016e2c:	69fa      	ldr	r2, [r7, #28]
 8016e2e:	429a      	cmp	r2, r3
 8016e30:	d24c      	bcs.n	8016ecc <UpdateSNKPowerPort0+0x1dc>
 8016e32:	183b      	adds	r3, r7, r0
 8016e34:	881b      	ldrh	r3, [r3, #0]
 8016e36:	61fb      	str	r3, [r7, #28]
        break;
 8016e38:	e048      	b.n	8016ecc <UpdateSNKPowerPort0+0x1dc>
        _voltage = GUI_DECODE_50MV(pdo.SNKVariablePDO.MinVoltageIn50mVunits);
 8016e3a:	687b      	ldr	r3, [r7, #4]
 8016e3c:	031b      	lsls	r3, r3, #12
 8016e3e:	0d9b      	lsrs	r3, r3, #22
 8016e40:	b29b      	uxth	r3, r3
 8016e42:	0019      	movs	r1, r3
 8016e44:	200e      	movs	r0, #14
 8016e46:	183b      	adds	r3, r7, r0
 8016e48:	2232      	movs	r2, #50	; 0x32
 8016e4a:	434a      	muls	r2, r1
 8016e4c:	801a      	strh	r2, [r3, #0]
        GUI_UPDATE_VOLTAGE_MIN(_voltage, _min_voltage);
 8016e4e:	0001      	movs	r1, r0
 8016e50:	187a      	adds	r2, r7, r1
 8016e52:	201a      	movs	r0, #26
 8016e54:	183b      	adds	r3, r7, r0
 8016e56:	8812      	ldrh	r2, [r2, #0]
 8016e58:	881b      	ldrh	r3, [r3, #0]
 8016e5a:	429a      	cmp	r2, r3
 8016e5c:	d203      	bcs.n	8016e66 <UpdateSNKPowerPort0+0x176>
 8016e5e:	183b      	adds	r3, r7, r0
 8016e60:	187a      	adds	r2, r7, r1
 8016e62:	8812      	ldrh	r2, [r2, #0]
 8016e64:	801a      	strh	r2, [r3, #0]
        _voltage = GUI_DECODE_50MV(pdo.SNKVariablePDO.MaxVoltageIn50mVunits);
 8016e66:	1dbb      	adds	r3, r7, #6
 8016e68:	881b      	ldrh	r3, [r3, #0]
 8016e6a:	049b      	lsls	r3, r3, #18
 8016e6c:	0d9b      	lsrs	r3, r3, #22
 8016e6e:	b29b      	uxth	r3, r3
 8016e70:	0019      	movs	r1, r3
 8016e72:	200e      	movs	r0, #14
 8016e74:	183b      	adds	r3, r7, r0
 8016e76:	2232      	movs	r2, #50	; 0x32
 8016e78:	434a      	muls	r2, r1
 8016e7a:	801a      	strh	r2, [r3, #0]
        GUI_UPDATE_VOLTAGE_MAX(_voltage, _max_voltage);
 8016e7c:	0001      	movs	r1, r0
 8016e7e:	187a      	adds	r2, r7, r1
 8016e80:	2018      	movs	r0, #24
 8016e82:	183b      	adds	r3, r7, r0
 8016e84:	8812      	ldrh	r2, [r2, #0]
 8016e86:	881b      	ldrh	r3, [r3, #0]
 8016e88:	429a      	cmp	r2, r3
 8016e8a:	d903      	bls.n	8016e94 <UpdateSNKPowerPort0+0x1a4>
 8016e8c:	183b      	adds	r3, r7, r0
 8016e8e:	187a      	adds	r2, r7, r1
 8016e90:	8812      	ldrh	r2, [r2, #0]
 8016e92:	801a      	strh	r2, [r3, #0]
        _current = GUI_DECODE_10MA(pdo.SNKVariablePDO.OperationalCurrentIn10mAunits);
 8016e94:	1d3b      	adds	r3, r7, #4
 8016e96:	881b      	ldrh	r3, [r3, #0]
 8016e98:	059b      	lsls	r3, r3, #22
 8016e9a:	0d9b      	lsrs	r3, r3, #22
 8016e9c:	b29b      	uxth	r3, r3
 8016e9e:	200c      	movs	r0, #12
 8016ea0:	183a      	adds	r2, r7, r0
 8016ea2:	1c19      	adds	r1, r3, #0
 8016ea4:	0089      	lsls	r1, r1, #2
 8016ea6:	18cb      	adds	r3, r1, r3
 8016ea8:	18db      	adds	r3, r3, r3
 8016eaa:	8013      	strh	r3, [r2, #0]
        GUI_UPDATE_CURRENT_MAX(_current, _max_current);
 8016eac:	183a      	adds	r2, r7, r0
 8016eae:	2116      	movs	r1, #22
 8016eb0:	187b      	adds	r3, r7, r1
 8016eb2:	8812      	ldrh	r2, [r2, #0]
 8016eb4:	881b      	ldrh	r3, [r3, #0]
 8016eb6:	429a      	cmp	r2, r3
 8016eb8:	d90a      	bls.n	8016ed0 <UpdateSNKPowerPort0+0x1e0>
 8016eba:	187b      	adds	r3, r7, r1
 8016ebc:	183a      	adds	r2, r7, r0
 8016ebe:	8812      	ldrh	r2, [r2, #0]
 8016ec0:	801a      	strh	r2, [r3, #0]
        break;
 8016ec2:	e005      	b.n	8016ed0 <UpdateSNKPowerPort0+0x1e0>
        break;
 8016ec4:	46c0      	nop			; (mov r8, r8)
 8016ec6:	e004      	b.n	8016ed2 <UpdateSNKPowerPort0+0x1e2>
        break;
 8016ec8:	46c0      	nop			; (mov r8, r8)
 8016eca:	e002      	b.n	8016ed2 <UpdateSNKPowerPort0+0x1e2>
        break;
 8016ecc:	46c0      	nop			; (mov r8, r8)
 8016ece:	e000      	b.n	8016ed2 <UpdateSNKPowerPort0+0x1e2>
        break;
 8016ed0:	46c0      	nop			; (mov r8, r8)
  for (uint32_t _index = 0; _index < USBPD_NbPDO[0]; _index++)
 8016ed2:	693b      	ldr	r3, [r7, #16]
 8016ed4:	3301      	adds	r3, #1
 8016ed6:	613b      	str	r3, [r7, #16]
 8016ed8:	4b15      	ldr	r3, [pc, #84]	; (8016f30 <UpdateSNKPowerPort0+0x240>)
 8016eda:	781b      	ldrb	r3, [r3, #0]
 8016edc:	001a      	movs	r2, r3
 8016ede:	693b      	ldr	r3, [r7, #16]
 8016ee0:	4293      	cmp	r3, r2
 8016ee2:	d200      	bcs.n	8016ee6 <UpdateSNKPowerPort0+0x1f6>
 8016ee4:	e719      	b.n	8016d1a <UpdateSNKPowerPort0+0x2a>
    }
  }

  GUI_CHECK_VOLTAGE_MIN(_min_voltage,
 8016ee6:	231a      	movs	r3, #26
 8016ee8:	18fb      	adds	r3, r7, r3
 8016eea:	881a      	ldrh	r2, [r3, #0]
 8016eec:	4b11      	ldr	r3, [pc, #68]	; (8016f34 <UpdateSNKPowerPort0+0x244>)
 8016eee:	611a      	str	r2, [r3, #16]
                        DPM_USER_Settings[USBPD_PORT_0].DPM_SNKRequestedPower.MinOperatingVoltageInmVunits);
  GUI_CHECK_VOLTAGE_MAX(_max_voltage,
 8016ef0:	2118      	movs	r1, #24
 8016ef2:	187b      	adds	r3, r7, r1
 8016ef4:	881a      	ldrh	r2, [r3, #0]
 8016ef6:	4b0f      	ldr	r3, [pc, #60]	; (8016f34 <UpdateSNKPowerPort0+0x244>)
 8016ef8:	60da      	str	r2, [r3, #12]
                        DPM_USER_Settings[USBPD_PORT_0].DPM_SNKRequestedPower.MaxOperatingVoltageInmVunits);
  GUI_CHECK_CURRENT_MAX(_max_current,
 8016efa:	2016      	movs	r0, #22
 8016efc:	183b      	adds	r3, r7, r0
 8016efe:	881a      	ldrh	r2, [r3, #0]
 8016f00:	4b0c      	ldr	r3, [pc, #48]	; (8016f34 <UpdateSNKPowerPort0+0x244>)
 8016f02:	605a      	str	r2, [r3, #4]
                        DPM_USER_Settings[USBPD_PORT_0].DPM_SNKRequestedPower.MaxOperatingCurrentInmAunits);
  _max_power = ((uint32_t)(_max_voltage) * (uint32_t)(_max_current)) / 1000U;
 8016f04:	187b      	adds	r3, r7, r1
 8016f06:	881b      	ldrh	r3, [r3, #0]
 8016f08:	183a      	adds	r2, r7, r0
 8016f0a:	8812      	ldrh	r2, [r2, #0]
 8016f0c:	4353      	muls	r3, r2
 8016f0e:	22fa      	movs	r2, #250	; 0xfa
 8016f10:	0091      	lsls	r1, r2, #2
 8016f12:	0018      	movs	r0, r3
 8016f14:	f7ef f96c 	bl	80061f0 <__udivsi3>
 8016f18:	0003      	movs	r3, r0
 8016f1a:	61fb      	str	r3, [r7, #28]
  GUI_CHECK_POWER_MAX(_max_power, DPM_USER_Settings[USBPD_PORT_0].DPM_SNKRequestedPower.MaxOperatingPowerInmWunits);
 8016f1c:	4b05      	ldr	r3, [pc, #20]	; (8016f34 <UpdateSNKPowerPort0+0x244>)
 8016f1e:	69fa      	ldr	r2, [r7, #28]
 8016f20:	619a      	str	r2, [r3, #24]
}
 8016f22:	46c0      	nop			; (mov r8, r8)
 8016f24:	46bd      	mov	sp, r7
 8016f26:	b008      	add	sp, #32
 8016f28:	bd80      	pop	{r7, pc}
 8016f2a:	46c0      	nop			; (mov r8, r8)
 8016f2c:	200000a0 	.word	0x200000a0
 8016f30:	2000009c 	.word	0x2000009c
 8016f34:	20000028 	.word	0x20000028

08016f38 <TRACER_EMB_Init>:
 8016f38:	b580      	push	{r7, lr}
 8016f3a:	af00      	add	r7, sp, #0
 8016f3c:	4a06      	ldr	r2, [pc, #24]	; (8016f58 <TRACER_EMB_Init+0x20>)
 8016f3e:	4b07      	ldr	r3, [pc, #28]	; (8016f5c <TRACER_EMB_Init+0x24>)
 8016f40:	2100      	movs	r1, #0
 8016f42:	0018      	movs	r0, r3
 8016f44:	f001 f93e 	bl	80181c4 <memset>
 8016f48:	f000 fe22 	bl	8017b90 <HW_TRACER_EMB_Init>
 8016f4c:	f000 f9d8 	bl	8017300 <TRACER_EMB_LowPowerInit>
 8016f50:	46c0      	nop			; (mov r8, r8)
 8016f52:	46bd      	mov	sp, r7
 8016f54:	bd80      	pop	{r7, pc}
 8016f56:	46c0      	nop			; (mov r8, r8)
 8016f58:	0000041c 	.word	0x0000041c
 8016f5c:	20002f58 	.word	0x20002f58

08016f60 <TRACER_EMB_Add>:
 8016f60:	b580      	push	{r7, lr}
 8016f62:	b086      	sub	sp, #24
 8016f64:	af00      	add	r7, sp, #0
 8016f66:	6078      	str	r0, [r7, #4]
 8016f68:	6039      	str	r1, [r7, #0]
 8016f6a:	687b      	ldr	r3, [r7, #4]
 8016f6c:	60fb      	str	r3, [r7, #12]
 8016f6e:	f000 f8d3 	bl	8017118 <TRACER_EMB_Lock>
 8016f72:	683b      	ldr	r3, [r7, #0]
 8016f74:	0018      	movs	r0, r3
 8016f76:	f000 f969 	bl	801724c <TRACER_EMB_AllocateBufer>
 8016f7a:	0003      	movs	r3, r0
 8016f7c:	617b      	str	r3, [r7, #20]
 8016f7e:	697b      	ldr	r3, [r7, #20]
 8016f80:	3301      	adds	r3, #1
 8016f82:	d023      	beq.n	8016fcc <TRACER_EMB_Add+0x6c>
 8016f84:	2300      	movs	r3, #0
 8016f86:	613b      	str	r3, [r7, #16]
 8016f88:	e01c      	b.n	8016fc4 <TRACER_EMB_Add+0x64>
 8016f8a:	68fa      	ldr	r2, [r7, #12]
 8016f8c:	693b      	ldr	r3, [r7, #16]
 8016f8e:	18d2      	adds	r2, r2, r3
 8016f90:	697b      	ldr	r3, [r7, #20]
 8016f92:	4912      	ldr	r1, [pc, #72]	; (8016fdc <TRACER_EMB_Add+0x7c>)
 8016f94:	400b      	ands	r3, r1
 8016f96:	d503      	bpl.n	8016fa0 <TRACER_EMB_Add+0x40>
 8016f98:	3b01      	subs	r3, #1
 8016f9a:	4911      	ldr	r1, [pc, #68]	; (8016fe0 <TRACER_EMB_Add+0x80>)
 8016f9c:	430b      	orrs	r3, r1
 8016f9e:	3301      	adds	r3, #1
 8016fa0:	0019      	movs	r1, r3
 8016fa2:	7812      	ldrb	r2, [r2, #0]
 8016fa4:	4b0f      	ldr	r3, [pc, #60]	; (8016fe4 <TRACER_EMB_Add+0x84>)
 8016fa6:	185b      	adds	r3, r3, r1
 8016fa8:	76da      	strb	r2, [r3, #27]
 8016faa:	697b      	ldr	r3, [r7, #20]
 8016fac:	3301      	adds	r3, #1
 8016fae:	4a0b      	ldr	r2, [pc, #44]	; (8016fdc <TRACER_EMB_Add+0x7c>)
 8016fb0:	4013      	ands	r3, r2
 8016fb2:	d503      	bpl.n	8016fbc <TRACER_EMB_Add+0x5c>
 8016fb4:	3b01      	subs	r3, #1
 8016fb6:	4a0a      	ldr	r2, [pc, #40]	; (8016fe0 <TRACER_EMB_Add+0x80>)
 8016fb8:	4313      	orrs	r3, r2
 8016fba:	3301      	adds	r3, #1
 8016fbc:	617b      	str	r3, [r7, #20]
 8016fbe:	693b      	ldr	r3, [r7, #16]
 8016fc0:	3301      	adds	r3, #1
 8016fc2:	613b      	str	r3, [r7, #16]
 8016fc4:	693a      	ldr	r2, [r7, #16]
 8016fc6:	683b      	ldr	r3, [r7, #0]
 8016fc8:	429a      	cmp	r2, r3
 8016fca:	d3de      	bcc.n	8016f8a <TRACER_EMB_Add+0x2a>
 8016fcc:	f000 f8c2 	bl	8017154 <TRACER_EMB_UnLock>
 8016fd0:	f000 f8de 	bl	8017190 <TRACER_EMB_SendData>
 8016fd4:	46c0      	nop			; (mov r8, r8)
 8016fd6:	46bd      	mov	sp, r7
 8016fd8:	b006      	add	sp, #24
 8016fda:	bd80      	pop	{r7, pc}
 8016fdc:	800003ff 	.word	0x800003ff
 8016fe0:	fffffc00 	.word	0xfffffc00
 8016fe4:	20002f58 	.word	0x20002f58

08016fe8 <TRACER_EMB_IRQHandlerDMA>:
 8016fe8:	b580      	push	{r7, lr}
 8016fea:	af00      	add	r7, sp, #0
 8016fec:	f000 febc 	bl	8017d68 <HW_TRACER_EMB_IRQHandlerDMA>
 8016ff0:	46c0      	nop			; (mov r8, r8)
 8016ff2:	46bd      	mov	sp, r7
 8016ff4:	bd80      	pop	{r7, pc}

08016ff6 <TRACER_EMB_IRQHandlerUSART>:
 8016ff6:	b580      	push	{r7, lr}
 8016ff8:	af00      	add	r7, sp, #0
 8016ffa:	f000 fecd 	bl	8017d98 <HW_TRACER_EMB_IRQHandlerUSART>
 8016ffe:	46c0      	nop			; (mov r8, r8)
 8017000:	46bd      	mov	sp, r7
 8017002:	bd80      	pop	{r7, pc}

08017004 <TRACER_EMB_WriteData>:
 8017004:	b580      	push	{r7, lr}
 8017006:	b082      	sub	sp, #8
 8017008:	af00      	add	r7, sp, #0
 801700a:	0002      	movs	r2, r0
 801700c:	1dbb      	adds	r3, r7, #6
 801700e:	801a      	strh	r2, [r3, #0]
 8017010:	1d7b      	adds	r3, r7, #5
 8017012:	1c0a      	adds	r2, r1, #0
 8017014:	701a      	strb	r2, [r3, #0]
 8017016:	1dbb      	adds	r3, r7, #6
 8017018:	881b      	ldrh	r3, [r3, #0]
 801701a:	059b      	lsls	r3, r3, #22
 801701c:	0d9b      	lsrs	r3, r3, #22
 801701e:	4a04      	ldr	r2, [pc, #16]	; (8017030 <TRACER_EMB_WriteData+0x2c>)
 8017020:	18d3      	adds	r3, r2, r3
 8017022:	1d7a      	adds	r2, r7, #5
 8017024:	7812      	ldrb	r2, [r2, #0]
 8017026:	76da      	strb	r2, [r3, #27]
 8017028:	46c0      	nop			; (mov r8, r8)
 801702a:	46bd      	mov	sp, r7
 801702c:	b002      	add	sp, #8
 801702e:	bd80      	pop	{r7, pc}
 8017030:	20002f58 	.word	0x20002f58

08017034 <TRACER_EMB_StartRX>:
 8017034:	b580      	push	{r7, lr}
 8017036:	b082      	sub	sp, #8
 8017038:	af00      	add	r7, sp, #0
 801703a:	6078      	str	r0, [r7, #4]
 801703c:	687b      	ldr	r3, [r7, #4]
 801703e:	0018      	movs	r0, r3
 8017040:	f000 fe66 	bl	8017d10 <HW_TRACER_EMB_RegisterRxCallback>
 8017044:	f000 fe76 	bl	8017d34 <HW_TRACER_EMB_StartRX>
 8017048:	46c0      	nop			; (mov r8, r8)
 801704a:	46bd      	mov	sp, r7
 801704c:	b002      	add	sp, #8
 801704e:	bd80      	pop	{r7, pc}

08017050 <TRACER_EMB_EnableOverFlow>:
 8017050:	b580      	push	{r7, lr}
 8017052:	b082      	sub	sp, #8
 8017054:	af00      	add	r7, sp, #0
 8017056:	6078      	str	r0, [r7, #4]
 8017058:	000a      	movs	r2, r1
 801705a:	1cfb      	adds	r3, r7, #3
 801705c:	701a      	strb	r2, [r3, #0]
 801705e:	1cfb      	adds	r3, r7, #3
 8017060:	781b      	ldrb	r3, [r3, #0]
 8017062:	2b00      	cmp	r3, #0
 8017064:	d008      	beq.n	8017078 <TRACER_EMB_EnableOverFlow+0x28>
 8017066:	4b07      	ldr	r3, [pc, #28]	; (8017084 <TRACER_EMB_EnableOverFlow+0x34>)
 8017068:	687a      	ldr	r2, [r7, #4]
 801706a:	615a      	str	r2, [r3, #20]
 801706c:	4b05      	ldr	r3, [pc, #20]	; (8017084 <TRACER_EMB_EnableOverFlow+0x34>)
 801706e:	1cfa      	adds	r2, r7, #3
 8017070:	7812      	ldrb	r2, [r2, #0]
 8017072:	761a      	strb	r2, [r3, #24]
 8017074:	2300      	movs	r3, #0
 8017076:	e001      	b.n	801707c <TRACER_EMB_EnableOverFlow+0x2c>
 8017078:	2301      	movs	r3, #1
 801707a:	425b      	negs	r3, r3
 801707c:	0018      	movs	r0, r3
 801707e:	46bd      	mov	sp, r7
 8017080:	b002      	add	sp, #8
 8017082:	bd80      	pop	{r7, pc}
 8017084:	20002f58 	.word	0x20002f58

08017088 <TRACER_EMB_CALLBACK_TX>:
 8017088:	b580      	push	{r7, lr}
 801708a:	b084      	sub	sp, #16
 801708c:	af00      	add	r7, sp, #0
 801708e:	f3ef 8310 	mrs	r3, PRIMASK
 8017092:	60bb      	str	r3, [r7, #8]
 8017094:	68bb      	ldr	r3, [r7, #8]
 8017096:	60fb      	str	r3, [r7, #12]
 8017098:	b672      	cpsid	i
 801709a:	46c0      	nop			; (mov r8, r8)
 801709c:	4b1d      	ldr	r3, [pc, #116]	; (8017114 <TRACER_EMB_CALLBACK_TX+0x8c>)
 801709e:	681a      	ldr	r2, [r3, #0]
 80170a0:	4b1c      	ldr	r3, [pc, #112]	; (8017114 <TRACER_EMB_CALLBACK_TX+0x8c>)
 80170a2:	689b      	ldr	r3, [r3, #8]
 80170a4:	18d3      	adds	r3, r2, r3
 80170a6:	059b      	lsls	r3, r3, #22
 80170a8:	0d9a      	lsrs	r2, r3, #22
 80170aa:	4b1a      	ldr	r3, [pc, #104]	; (8017114 <TRACER_EMB_CALLBACK_TX+0x8c>)
 80170ac:	601a      	str	r2, [r3, #0]
 80170ae:	4b19      	ldr	r3, [pc, #100]	; (8017114 <TRACER_EMB_CALLBACK_TX+0x8c>)
 80170b0:	695b      	ldr	r3, [r3, #20]
 80170b2:	2b00      	cmp	r3, #0
 80170b4:	d019      	beq.n	80170ea <TRACER_EMB_CALLBACK_TX+0x62>
 80170b6:	4b17      	ldr	r3, [pc, #92]	; (8017114 <TRACER_EMB_CALLBACK_TX+0x8c>)
 80170b8:	7e9b      	ldrb	r3, [r3, #26]
 80170ba:	2b01      	cmp	r3, #1
 80170bc:	d115      	bne.n	80170ea <TRACER_EMB_CALLBACK_TX+0x62>
 80170be:	4b15      	ldr	r3, [pc, #84]	; (8017114 <TRACER_EMB_CALLBACK_TX+0x8c>)
 80170c0:	7e5b      	ldrb	r3, [r3, #25]
 80170c2:	2b00      	cmp	r3, #0
 80170c4:	d111      	bne.n	80170ea <TRACER_EMB_CALLBACK_TX+0x62>
 80170c6:	4b13      	ldr	r3, [pc, #76]	; (8017114 <TRACER_EMB_CALLBACK_TX+0x8c>)
 80170c8:	2202      	movs	r2, #2
 80170ca:	769a      	strb	r2, [r3, #26]
 80170cc:	4b11      	ldr	r3, [pc, #68]	; (8017114 <TRACER_EMB_CALLBACK_TX+0x8c>)
 80170ce:	695a      	ldr	r2, [r3, #20]
 80170d0:	4b10      	ldr	r3, [pc, #64]	; (8017114 <TRACER_EMB_CALLBACK_TX+0x8c>)
 80170d2:	7e1b      	ldrb	r3, [r3, #24]
 80170d4:	0019      	movs	r1, r3
 80170d6:	0010      	movs	r0, r2
 80170d8:	f000 ff2c 	bl	8017f34 <HW_TRACER_EMB_SendData>
 80170dc:	68fb      	ldr	r3, [r7, #12]
 80170de:	607b      	str	r3, [r7, #4]
 80170e0:	687b      	ldr	r3, [r7, #4]
 80170e2:	f383 8810 	msr	PRIMASK, r3
 80170e6:	46c0      	nop			; (mov r8, r8)
 80170e8:	e00f      	b.n	801710a <TRACER_EMB_CALLBACK_TX+0x82>
 80170ea:	4b0a      	ldr	r3, [pc, #40]	; (8017114 <TRACER_EMB_CALLBACK_TX+0x8c>)
 80170ec:	68db      	ldr	r3, [r3, #12]
 80170ee:	1e5a      	subs	r2, r3, #1
 80170f0:	4b08      	ldr	r3, [pc, #32]	; (8017114 <TRACER_EMB_CALLBACK_TX+0x8c>)
 80170f2:	60da      	str	r2, [r3, #12]
 80170f4:	68fb      	ldr	r3, [r7, #12]
 80170f6:	603b      	str	r3, [r7, #0]
 80170f8:	683b      	ldr	r3, [r7, #0]
 80170fa:	f383 8810 	msr	PRIMASK, r3
 80170fe:	46c0      	nop			; (mov r8, r8)
 8017100:	f000 f828 	bl	8017154 <TRACER_EMB_UnLock>
 8017104:	f000 f844 	bl	8017190 <TRACER_EMB_SendData>
 8017108:	46c0      	nop			; (mov r8, r8)
 801710a:	46c0      	nop			; (mov r8, r8)
 801710c:	46bd      	mov	sp, r7
 801710e:	b004      	add	sp, #16
 8017110:	bd80      	pop	{r7, pc}
 8017112:	46c0      	nop			; (mov r8, r8)
 8017114:	20002f58 	.word	0x20002f58

08017118 <TRACER_EMB_Lock>:
 8017118:	b580      	push	{r7, lr}
 801711a:	b084      	sub	sp, #16
 801711c:	af00      	add	r7, sp, #0
 801711e:	f3ef 8310 	mrs	r3, PRIMASK
 8017122:	607b      	str	r3, [r7, #4]
 8017124:	687b      	ldr	r3, [r7, #4]
 8017126:	60fb      	str	r3, [r7, #12]
 8017128:	b672      	cpsid	i
 801712a:	46c0      	nop			; (mov r8, r8)
 801712c:	4b08      	ldr	r3, [pc, #32]	; (8017150 <TRACER_EMB_Lock+0x38>)
 801712e:	7c1b      	ldrb	r3, [r3, #16]
 8017130:	b2db      	uxtb	r3, r3
 8017132:	3301      	adds	r3, #1
 8017134:	b2da      	uxtb	r2, r3
 8017136:	4b06      	ldr	r3, [pc, #24]	; (8017150 <TRACER_EMB_Lock+0x38>)
 8017138:	741a      	strb	r2, [r3, #16]
 801713a:	68fb      	ldr	r3, [r7, #12]
 801713c:	60bb      	str	r3, [r7, #8]
 801713e:	68bb      	ldr	r3, [r7, #8]
 8017140:	f383 8810 	msr	PRIMASK, r3
 8017144:	46c0      	nop			; (mov r8, r8)
 8017146:	46c0      	nop			; (mov r8, r8)
 8017148:	46bd      	mov	sp, r7
 801714a:	b004      	add	sp, #16
 801714c:	bd80      	pop	{r7, pc}
 801714e:	46c0      	nop			; (mov r8, r8)
 8017150:	20002f58 	.word	0x20002f58

08017154 <TRACER_EMB_UnLock>:
 8017154:	b580      	push	{r7, lr}
 8017156:	b084      	sub	sp, #16
 8017158:	af00      	add	r7, sp, #0
 801715a:	f3ef 8310 	mrs	r3, PRIMASK
 801715e:	607b      	str	r3, [r7, #4]
 8017160:	687b      	ldr	r3, [r7, #4]
 8017162:	60fb      	str	r3, [r7, #12]
 8017164:	b672      	cpsid	i
 8017166:	46c0      	nop			; (mov r8, r8)
 8017168:	4b08      	ldr	r3, [pc, #32]	; (801718c <TRACER_EMB_UnLock+0x38>)
 801716a:	7c1b      	ldrb	r3, [r3, #16]
 801716c:	b2db      	uxtb	r3, r3
 801716e:	3b01      	subs	r3, #1
 8017170:	b2da      	uxtb	r2, r3
 8017172:	4b06      	ldr	r3, [pc, #24]	; (801718c <TRACER_EMB_UnLock+0x38>)
 8017174:	741a      	strb	r2, [r3, #16]
 8017176:	68fb      	ldr	r3, [r7, #12]
 8017178:	60bb      	str	r3, [r7, #8]
 801717a:	68bb      	ldr	r3, [r7, #8]
 801717c:	f383 8810 	msr	PRIMASK, r3
 8017180:	46c0      	nop			; (mov r8, r8)
 8017182:	46c0      	nop			; (mov r8, r8)
 8017184:	46bd      	mov	sp, r7
 8017186:	b004      	add	sp, #16
 8017188:	bd80      	pop	{r7, pc}
 801718a:	46c0      	nop			; (mov r8, r8)
 801718c:	20002f58 	.word	0x20002f58

08017190 <TRACER_EMB_SendData>:
 8017190:	b580      	push	{r7, lr}
 8017192:	b086      	sub	sp, #24
 8017194:	af00      	add	r7, sp, #0
 8017196:	f3ef 8310 	mrs	r3, PRIMASK
 801719a:	60bb      	str	r3, [r7, #8]
 801719c:	68bb      	ldr	r3, [r7, #8]
 801719e:	617b      	str	r3, [r7, #20]
 80171a0:	b672      	cpsid	i
 80171a2:	46c0      	nop			; (mov r8, r8)
 80171a4:	4b28      	ldr	r3, [pc, #160]	; (8017248 <TRACER_EMB_SendData+0xb8>)
 80171a6:	7c1b      	ldrb	r3, [r3, #16]
 80171a8:	b2db      	uxtb	r3, r3
 80171aa:	2b00      	cmp	r3, #0
 80171ac:	d134      	bne.n	8017218 <TRACER_EMB_SendData+0x88>
 80171ae:	4b26      	ldr	r3, [pc, #152]	; (8017248 <TRACER_EMB_SendData+0xb8>)
 80171b0:	681b      	ldr	r3, [r3, #0]
 80171b2:	613b      	str	r3, [r7, #16]
 80171b4:	4b24      	ldr	r3, [pc, #144]	; (8017248 <TRACER_EMB_SendData+0xb8>)
 80171b6:	685b      	ldr	r3, [r3, #4]
 80171b8:	60fb      	str	r3, [r7, #12]
 80171ba:	693a      	ldr	r2, [r7, #16]
 80171bc:	68fb      	ldr	r3, [r7, #12]
 80171be:	429a      	cmp	r2, r3
 80171c0:	d02a      	beq.n	8017218 <TRACER_EMB_SendData+0x88>
 80171c2:	f7ff ffa9 	bl	8017118 <TRACER_EMB_Lock>
 80171c6:	68fa      	ldr	r2, [r7, #12]
 80171c8:	693b      	ldr	r3, [r7, #16]
 80171ca:	429a      	cmp	r2, r3
 80171cc:	d908      	bls.n	80171e0 <TRACER_EMB_SendData+0x50>
 80171ce:	68fa      	ldr	r2, [r7, #12]
 80171d0:	693b      	ldr	r3, [r7, #16]
 80171d2:	1ad2      	subs	r2, r2, r3
 80171d4:	4b1c      	ldr	r3, [pc, #112]	; (8017248 <TRACER_EMB_SendData+0xb8>)
 80171d6:	609a      	str	r2, [r3, #8]
 80171d8:	4b1b      	ldr	r3, [pc, #108]	; (8017248 <TRACER_EMB_SendData+0xb8>)
 80171da:	2200      	movs	r2, #0
 80171dc:	765a      	strb	r2, [r3, #25]
 80171de:	e008      	b.n	80171f2 <TRACER_EMB_SendData+0x62>
 80171e0:	693b      	ldr	r3, [r7, #16]
 80171e2:	2280      	movs	r2, #128	; 0x80
 80171e4:	00d2      	lsls	r2, r2, #3
 80171e6:	1ad2      	subs	r2, r2, r3
 80171e8:	4b17      	ldr	r3, [pc, #92]	; (8017248 <TRACER_EMB_SendData+0xb8>)
 80171ea:	609a      	str	r2, [r3, #8]
 80171ec:	4b16      	ldr	r3, [pc, #88]	; (8017248 <TRACER_EMB_SendData+0xb8>)
 80171ee:	2201      	movs	r2, #1
 80171f0:	765a      	strb	r2, [r3, #25]
 80171f2:	f000 f88a 	bl	801730a <TRACER_EMB_LowPowerSendData>
 80171f6:	4b14      	ldr	r3, [pc, #80]	; (8017248 <TRACER_EMB_SendData+0xb8>)
 80171f8:	68db      	ldr	r3, [r3, #12]
 80171fa:	1c5a      	adds	r2, r3, #1
 80171fc:	4b12      	ldr	r3, [pc, #72]	; (8017248 <TRACER_EMB_SendData+0xb8>)
 80171fe:	60da      	str	r2, [r3, #12]
 8017200:	693b      	ldr	r3, [r7, #16]
 8017202:	3318      	adds	r3, #24
 8017204:	001a      	movs	r2, r3
 8017206:	4b10      	ldr	r3, [pc, #64]	; (8017248 <TRACER_EMB_SendData+0xb8>)
 8017208:	18d3      	adds	r3, r2, r3
 801720a:	1cda      	adds	r2, r3, #3
 801720c:	4b0e      	ldr	r3, [pc, #56]	; (8017248 <TRACER_EMB_SendData+0xb8>)
 801720e:	689b      	ldr	r3, [r3, #8]
 8017210:	0019      	movs	r1, r3
 8017212:	0010      	movs	r0, r2
 8017214:	f000 fe8e 	bl	8017f34 <HW_TRACER_EMB_SendData>
 8017218:	4b0b      	ldr	r3, [pc, #44]	; (8017248 <TRACER_EMB_SendData+0xb8>)
 801721a:	68db      	ldr	r3, [r3, #12]
 801721c:	2b00      	cmp	r3, #0
 801721e:	d004      	beq.n	801722a <TRACER_EMB_SendData+0x9a>
 8017220:	2b01      	cmp	r3, #1
 8017222:	d105      	bne.n	8017230 <TRACER_EMB_SendData+0xa0>
 8017224:	f000 f871 	bl	801730a <TRACER_EMB_LowPowerSendData>
 8017228:	e003      	b.n	8017232 <TRACER_EMB_SendData+0xa2>
 801722a:	f000 f873 	bl	8017314 <TRACER_EMB_LowPowerSendDataComplete>
 801722e:	e000      	b.n	8017232 <TRACER_EMB_SendData+0xa2>
 8017230:	46c0      	nop			; (mov r8, r8)
 8017232:	697b      	ldr	r3, [r7, #20]
 8017234:	607b      	str	r3, [r7, #4]
 8017236:	687b      	ldr	r3, [r7, #4]
 8017238:	f383 8810 	msr	PRIMASK, r3
 801723c:	46c0      	nop			; (mov r8, r8)
 801723e:	46c0      	nop			; (mov r8, r8)
 8017240:	46bd      	mov	sp, r7
 8017242:	b006      	add	sp, #24
 8017244:	bd80      	pop	{r7, pc}
 8017246:	46c0      	nop			; (mov r8, r8)
 8017248:	20002f58 	.word	0x20002f58

0801724c <TRACER_EMB_AllocateBufer>:
 801724c:	b580      	push	{r7, lr}
 801724e:	b088      	sub	sp, #32
 8017250:	af00      	add	r7, sp, #0
 8017252:	6078      	str	r0, [r7, #4]
 8017254:	2301      	movs	r3, #1
 8017256:	425b      	negs	r3, r3
 8017258:	61bb      	str	r3, [r7, #24]
 801725a:	f3ef 8310 	mrs	r3, PRIMASK
 801725e:	613b      	str	r3, [r7, #16]
 8017260:	693b      	ldr	r3, [r7, #16]
 8017262:	617b      	str	r3, [r7, #20]
 8017264:	b672      	cpsid	i
 8017266:	46c0      	nop			; (mov r8, r8)
 8017268:	4b24      	ldr	r3, [pc, #144]	; (80172fc <TRACER_EMB_AllocateBufer+0xb0>)
 801726a:	685a      	ldr	r2, [r3, #4]
 801726c:	4b23      	ldr	r3, [pc, #140]	; (80172fc <TRACER_EMB_AllocateBufer+0xb0>)
 801726e:	681b      	ldr	r3, [r3, #0]
 8017270:	429a      	cmp	r2, r3
 8017272:	d103      	bne.n	801727c <TRACER_EMB_AllocateBufer+0x30>
 8017274:	2380      	movs	r3, #128	; 0x80
 8017276:	00db      	lsls	r3, r3, #3
 8017278:	61fb      	str	r3, [r7, #28]
 801727a:	e016      	b.n	80172aa <TRACER_EMB_AllocateBufer+0x5e>
 801727c:	4b1f      	ldr	r3, [pc, #124]	; (80172fc <TRACER_EMB_AllocateBufer+0xb0>)
 801727e:	685a      	ldr	r2, [r3, #4]
 8017280:	4b1e      	ldr	r3, [pc, #120]	; (80172fc <TRACER_EMB_AllocateBufer+0xb0>)
 8017282:	681b      	ldr	r3, [r3, #0]
 8017284:	429a      	cmp	r2, r3
 8017286:	d90a      	bls.n	801729e <TRACER_EMB_AllocateBufer+0x52>
 8017288:	4b1c      	ldr	r3, [pc, #112]	; (80172fc <TRACER_EMB_AllocateBufer+0xb0>)
 801728a:	681a      	ldr	r2, [r3, #0]
 801728c:	4b1b      	ldr	r3, [pc, #108]	; (80172fc <TRACER_EMB_AllocateBufer+0xb0>)
 801728e:	685b      	ldr	r3, [r3, #4]
 8017290:	1ad3      	subs	r3, r2, r3
 8017292:	2280      	movs	r2, #128	; 0x80
 8017294:	00d2      	lsls	r2, r2, #3
 8017296:	4694      	mov	ip, r2
 8017298:	4463      	add	r3, ip
 801729a:	61fb      	str	r3, [r7, #28]
 801729c:	e005      	b.n	80172aa <TRACER_EMB_AllocateBufer+0x5e>
 801729e:	4b17      	ldr	r3, [pc, #92]	; (80172fc <TRACER_EMB_AllocateBufer+0xb0>)
 80172a0:	681a      	ldr	r2, [r3, #0]
 80172a2:	4b16      	ldr	r3, [pc, #88]	; (80172fc <TRACER_EMB_AllocateBufer+0xb0>)
 80172a4:	685b      	ldr	r3, [r3, #4]
 80172a6:	1ad3      	subs	r3, r2, r3
 80172a8:	61fb      	str	r3, [r7, #28]
 80172aa:	69fa      	ldr	r2, [r7, #28]
 80172ac:	687b      	ldr	r3, [r7, #4]
 80172ae:	429a      	cmp	r2, r3
 80172b0:	d912      	bls.n	80172d8 <TRACER_EMB_AllocateBufer+0x8c>
 80172b2:	4b12      	ldr	r3, [pc, #72]	; (80172fc <TRACER_EMB_AllocateBufer+0xb0>)
 80172b4:	685b      	ldr	r3, [r3, #4]
 80172b6:	61bb      	str	r3, [r7, #24]
 80172b8:	4b10      	ldr	r3, [pc, #64]	; (80172fc <TRACER_EMB_AllocateBufer+0xb0>)
 80172ba:	685a      	ldr	r2, [r3, #4]
 80172bc:	687b      	ldr	r3, [r7, #4]
 80172be:	18d3      	adds	r3, r2, r3
 80172c0:	059b      	lsls	r3, r3, #22
 80172c2:	0d9a      	lsrs	r2, r3, #22
 80172c4:	4b0d      	ldr	r3, [pc, #52]	; (80172fc <TRACER_EMB_AllocateBufer+0xb0>)
 80172c6:	605a      	str	r2, [r3, #4]
 80172c8:	4b0c      	ldr	r3, [pc, #48]	; (80172fc <TRACER_EMB_AllocateBufer+0xb0>)
 80172ca:	7e9b      	ldrb	r3, [r3, #26]
 80172cc:	2b02      	cmp	r3, #2
 80172ce:	d10a      	bne.n	80172e6 <TRACER_EMB_AllocateBufer+0x9a>
 80172d0:	4b0a      	ldr	r3, [pc, #40]	; (80172fc <TRACER_EMB_AllocateBufer+0xb0>)
 80172d2:	2200      	movs	r2, #0
 80172d4:	769a      	strb	r2, [r3, #26]
 80172d6:	e006      	b.n	80172e6 <TRACER_EMB_AllocateBufer+0x9a>
 80172d8:	4b08      	ldr	r3, [pc, #32]	; (80172fc <TRACER_EMB_AllocateBufer+0xb0>)
 80172da:	7e9b      	ldrb	r3, [r3, #26]
 80172dc:	2b00      	cmp	r3, #0
 80172de:	d102      	bne.n	80172e6 <TRACER_EMB_AllocateBufer+0x9a>
 80172e0:	4b06      	ldr	r3, [pc, #24]	; (80172fc <TRACER_EMB_AllocateBufer+0xb0>)
 80172e2:	2201      	movs	r2, #1
 80172e4:	769a      	strb	r2, [r3, #26]
 80172e6:	697b      	ldr	r3, [r7, #20]
 80172e8:	60fb      	str	r3, [r7, #12]
 80172ea:	68fb      	ldr	r3, [r7, #12]
 80172ec:	f383 8810 	msr	PRIMASK, r3
 80172f0:	46c0      	nop			; (mov r8, r8)
 80172f2:	69bb      	ldr	r3, [r7, #24]
 80172f4:	0018      	movs	r0, r3
 80172f6:	46bd      	mov	sp, r7
 80172f8:	b008      	add	sp, #32
 80172fa:	bd80      	pop	{r7, pc}
 80172fc:	20002f58 	.word	0x20002f58

08017300 <TRACER_EMB_LowPowerInit>:
 8017300:	b580      	push	{r7, lr}
 8017302:	af00      	add	r7, sp, #0
 8017304:	46c0      	nop			; (mov r8, r8)
 8017306:	46bd      	mov	sp, r7
 8017308:	bd80      	pop	{r7, pc}

0801730a <TRACER_EMB_LowPowerSendData>:
 801730a:	b580      	push	{r7, lr}
 801730c:	af00      	add	r7, sp, #0
 801730e:	46c0      	nop			; (mov r8, r8)
 8017310:	46bd      	mov	sp, r7
 8017312:	bd80      	pop	{r7, pc}

08017314 <TRACER_EMB_LowPowerSendDataComplete>:
 8017314:	b580      	push	{r7, lr}
 8017316:	af00      	add	r7, sp, #0
 8017318:	46c0      	nop			; (mov r8, r8)
 801731a:	46bd      	mov	sp, r7
 801731c:	bd80      	pop	{r7, pc}
	...

08017320 <__NVIC_EnableIRQ>:
 8017320:	b580      	push	{r7, lr}
 8017322:	b082      	sub	sp, #8
 8017324:	af00      	add	r7, sp, #0
 8017326:	0002      	movs	r2, r0
 8017328:	1dfb      	adds	r3, r7, #7
 801732a:	701a      	strb	r2, [r3, #0]
 801732c:	1dfb      	adds	r3, r7, #7
 801732e:	781b      	ldrb	r3, [r3, #0]
 8017330:	2b7f      	cmp	r3, #127	; 0x7f
 8017332:	d809      	bhi.n	8017348 <__NVIC_EnableIRQ+0x28>
 8017334:	1dfb      	adds	r3, r7, #7
 8017336:	781b      	ldrb	r3, [r3, #0]
 8017338:	001a      	movs	r2, r3
 801733a:	231f      	movs	r3, #31
 801733c:	401a      	ands	r2, r3
 801733e:	4b04      	ldr	r3, [pc, #16]	; (8017350 <__NVIC_EnableIRQ+0x30>)
 8017340:	2101      	movs	r1, #1
 8017342:	4091      	lsls	r1, r2
 8017344:	000a      	movs	r2, r1
 8017346:	601a      	str	r2, [r3, #0]
 8017348:	46c0      	nop			; (mov r8, r8)
 801734a:	46bd      	mov	sp, r7
 801734c:	b002      	add	sp, #8
 801734e:	bd80      	pop	{r7, pc}
 8017350:	e000e100 	.word	0xe000e100

08017354 <__NVIC_SetPriority>:
 8017354:	b590      	push	{r4, r7, lr}
 8017356:	b083      	sub	sp, #12
 8017358:	af00      	add	r7, sp, #0
 801735a:	0002      	movs	r2, r0
 801735c:	6039      	str	r1, [r7, #0]
 801735e:	1dfb      	adds	r3, r7, #7
 8017360:	701a      	strb	r2, [r3, #0]
 8017362:	1dfb      	adds	r3, r7, #7
 8017364:	781b      	ldrb	r3, [r3, #0]
 8017366:	2b7f      	cmp	r3, #127	; 0x7f
 8017368:	d828      	bhi.n	80173bc <__NVIC_SetPriority+0x68>
 801736a:	4a2f      	ldr	r2, [pc, #188]	; (8017428 <__NVIC_SetPriority+0xd4>)
 801736c:	1dfb      	adds	r3, r7, #7
 801736e:	781b      	ldrb	r3, [r3, #0]
 8017370:	b25b      	sxtb	r3, r3
 8017372:	089b      	lsrs	r3, r3, #2
 8017374:	33c0      	adds	r3, #192	; 0xc0
 8017376:	009b      	lsls	r3, r3, #2
 8017378:	589b      	ldr	r3, [r3, r2]
 801737a:	1dfa      	adds	r2, r7, #7
 801737c:	7812      	ldrb	r2, [r2, #0]
 801737e:	0011      	movs	r1, r2
 8017380:	2203      	movs	r2, #3
 8017382:	400a      	ands	r2, r1
 8017384:	00d2      	lsls	r2, r2, #3
 8017386:	21ff      	movs	r1, #255	; 0xff
 8017388:	4091      	lsls	r1, r2
 801738a:	000a      	movs	r2, r1
 801738c:	43d2      	mvns	r2, r2
 801738e:	401a      	ands	r2, r3
 8017390:	0011      	movs	r1, r2
 8017392:	683b      	ldr	r3, [r7, #0]
 8017394:	019b      	lsls	r3, r3, #6
 8017396:	22ff      	movs	r2, #255	; 0xff
 8017398:	401a      	ands	r2, r3
 801739a:	1dfb      	adds	r3, r7, #7
 801739c:	781b      	ldrb	r3, [r3, #0]
 801739e:	0018      	movs	r0, r3
 80173a0:	2303      	movs	r3, #3
 80173a2:	4003      	ands	r3, r0
 80173a4:	00db      	lsls	r3, r3, #3
 80173a6:	409a      	lsls	r2, r3
 80173a8:	481f      	ldr	r0, [pc, #124]	; (8017428 <__NVIC_SetPriority+0xd4>)
 80173aa:	1dfb      	adds	r3, r7, #7
 80173ac:	781b      	ldrb	r3, [r3, #0]
 80173ae:	b25b      	sxtb	r3, r3
 80173b0:	089b      	lsrs	r3, r3, #2
 80173b2:	430a      	orrs	r2, r1
 80173b4:	33c0      	adds	r3, #192	; 0xc0
 80173b6:	009b      	lsls	r3, r3, #2
 80173b8:	501a      	str	r2, [r3, r0]
 80173ba:	e031      	b.n	8017420 <__NVIC_SetPriority+0xcc>
 80173bc:	4a1b      	ldr	r2, [pc, #108]	; (801742c <__NVIC_SetPriority+0xd8>)
 80173be:	1dfb      	adds	r3, r7, #7
 80173c0:	781b      	ldrb	r3, [r3, #0]
 80173c2:	0019      	movs	r1, r3
 80173c4:	230f      	movs	r3, #15
 80173c6:	400b      	ands	r3, r1
 80173c8:	3b08      	subs	r3, #8
 80173ca:	089b      	lsrs	r3, r3, #2
 80173cc:	3306      	adds	r3, #6
 80173ce:	009b      	lsls	r3, r3, #2
 80173d0:	18d3      	adds	r3, r2, r3
 80173d2:	3304      	adds	r3, #4
 80173d4:	681b      	ldr	r3, [r3, #0]
 80173d6:	1dfa      	adds	r2, r7, #7
 80173d8:	7812      	ldrb	r2, [r2, #0]
 80173da:	0011      	movs	r1, r2
 80173dc:	2203      	movs	r2, #3
 80173de:	400a      	ands	r2, r1
 80173e0:	00d2      	lsls	r2, r2, #3
 80173e2:	21ff      	movs	r1, #255	; 0xff
 80173e4:	4091      	lsls	r1, r2
 80173e6:	000a      	movs	r2, r1
 80173e8:	43d2      	mvns	r2, r2
 80173ea:	401a      	ands	r2, r3
 80173ec:	0011      	movs	r1, r2
 80173ee:	683b      	ldr	r3, [r7, #0]
 80173f0:	019b      	lsls	r3, r3, #6
 80173f2:	22ff      	movs	r2, #255	; 0xff
 80173f4:	401a      	ands	r2, r3
 80173f6:	1dfb      	adds	r3, r7, #7
 80173f8:	781b      	ldrb	r3, [r3, #0]
 80173fa:	0018      	movs	r0, r3
 80173fc:	2303      	movs	r3, #3
 80173fe:	4003      	ands	r3, r0
 8017400:	00db      	lsls	r3, r3, #3
 8017402:	409a      	lsls	r2, r3
 8017404:	4809      	ldr	r0, [pc, #36]	; (801742c <__NVIC_SetPriority+0xd8>)
 8017406:	1dfb      	adds	r3, r7, #7
 8017408:	781b      	ldrb	r3, [r3, #0]
 801740a:	001c      	movs	r4, r3
 801740c:	230f      	movs	r3, #15
 801740e:	4023      	ands	r3, r4
 8017410:	3b08      	subs	r3, #8
 8017412:	089b      	lsrs	r3, r3, #2
 8017414:	430a      	orrs	r2, r1
 8017416:	3306      	adds	r3, #6
 8017418:	009b      	lsls	r3, r3, #2
 801741a:	18c3      	adds	r3, r0, r3
 801741c:	3304      	adds	r3, #4
 801741e:	601a      	str	r2, [r3, #0]
 8017420:	46c0      	nop			; (mov r8, r8)
 8017422:	46bd      	mov	sp, r7
 8017424:	b003      	add	sp, #12
 8017426:	bd90      	pop	{r4, r7, pc}
 8017428:	e000e100 	.word	0xe000e100
 801742c:	e000ed00 	.word	0xe000ed00

08017430 <LL_DMA_EnableChannel>:
 8017430:	b580      	push	{r7, lr}
 8017432:	b084      	sub	sp, #16
 8017434:	af00      	add	r7, sp, #0
 8017436:	6078      	str	r0, [r7, #4]
 8017438:	6039      	str	r1, [r7, #0]
 801743a:	687b      	ldr	r3, [r7, #4]
 801743c:	60fb      	str	r3, [r7, #12]
 801743e:	4a0b      	ldr	r2, [pc, #44]	; (801746c <LL_DMA_EnableChannel+0x3c>)
 8017440:	683b      	ldr	r3, [r7, #0]
 8017442:	18d3      	adds	r3, r2, r3
 8017444:	781b      	ldrb	r3, [r3, #0]
 8017446:	001a      	movs	r2, r3
 8017448:	68fb      	ldr	r3, [r7, #12]
 801744a:	18d3      	adds	r3, r2, r3
 801744c:	681a      	ldr	r2, [r3, #0]
 801744e:	4907      	ldr	r1, [pc, #28]	; (801746c <LL_DMA_EnableChannel+0x3c>)
 8017450:	683b      	ldr	r3, [r7, #0]
 8017452:	18cb      	adds	r3, r1, r3
 8017454:	781b      	ldrb	r3, [r3, #0]
 8017456:	0019      	movs	r1, r3
 8017458:	68fb      	ldr	r3, [r7, #12]
 801745a:	18cb      	adds	r3, r1, r3
 801745c:	2101      	movs	r1, #1
 801745e:	430a      	orrs	r2, r1
 8017460:	601a      	str	r2, [r3, #0]
 8017462:	46c0      	nop			; (mov r8, r8)
 8017464:	46bd      	mov	sp, r7
 8017466:	b004      	add	sp, #16
 8017468:	bd80      	pop	{r7, pc}
 801746a:	46c0      	nop			; (mov r8, r8)
 801746c:	0801a1b0 	.word	0x0801a1b0

08017470 <LL_DMA_DisableChannel>:
 8017470:	b580      	push	{r7, lr}
 8017472:	b084      	sub	sp, #16
 8017474:	af00      	add	r7, sp, #0
 8017476:	6078      	str	r0, [r7, #4]
 8017478:	6039      	str	r1, [r7, #0]
 801747a:	687b      	ldr	r3, [r7, #4]
 801747c:	60fb      	str	r3, [r7, #12]
 801747e:	4a0b      	ldr	r2, [pc, #44]	; (80174ac <LL_DMA_DisableChannel+0x3c>)
 8017480:	683b      	ldr	r3, [r7, #0]
 8017482:	18d3      	adds	r3, r2, r3
 8017484:	781b      	ldrb	r3, [r3, #0]
 8017486:	001a      	movs	r2, r3
 8017488:	68fb      	ldr	r3, [r7, #12]
 801748a:	18d3      	adds	r3, r2, r3
 801748c:	681a      	ldr	r2, [r3, #0]
 801748e:	4907      	ldr	r1, [pc, #28]	; (80174ac <LL_DMA_DisableChannel+0x3c>)
 8017490:	683b      	ldr	r3, [r7, #0]
 8017492:	18cb      	adds	r3, r1, r3
 8017494:	781b      	ldrb	r3, [r3, #0]
 8017496:	0019      	movs	r1, r3
 8017498:	68fb      	ldr	r3, [r7, #12]
 801749a:	18cb      	adds	r3, r1, r3
 801749c:	2101      	movs	r1, #1
 801749e:	438a      	bics	r2, r1
 80174a0:	601a      	str	r2, [r3, #0]
 80174a2:	46c0      	nop			; (mov r8, r8)
 80174a4:	46bd      	mov	sp, r7
 80174a6:	b004      	add	sp, #16
 80174a8:	bd80      	pop	{r7, pc}
 80174aa:	46c0      	nop			; (mov r8, r8)
 80174ac:	0801a1b0 	.word	0x0801a1b0

080174b0 <LL_DMA_ConfigTransfer>:
 80174b0:	b580      	push	{r7, lr}
 80174b2:	b086      	sub	sp, #24
 80174b4:	af00      	add	r7, sp, #0
 80174b6:	60f8      	str	r0, [r7, #12]
 80174b8:	60b9      	str	r1, [r7, #8]
 80174ba:	607a      	str	r2, [r7, #4]
 80174bc:	68fb      	ldr	r3, [r7, #12]
 80174be:	617b      	str	r3, [r7, #20]
 80174c0:	4a0c      	ldr	r2, [pc, #48]	; (80174f4 <LL_DMA_ConfigTransfer+0x44>)
 80174c2:	68bb      	ldr	r3, [r7, #8]
 80174c4:	18d3      	adds	r3, r2, r3
 80174c6:	781b      	ldrb	r3, [r3, #0]
 80174c8:	001a      	movs	r2, r3
 80174ca:	697b      	ldr	r3, [r7, #20]
 80174cc:	18d3      	adds	r3, r2, r3
 80174ce:	681b      	ldr	r3, [r3, #0]
 80174d0:	4a09      	ldr	r2, [pc, #36]	; (80174f8 <LL_DMA_ConfigTransfer+0x48>)
 80174d2:	4013      	ands	r3, r2
 80174d4:	0019      	movs	r1, r3
 80174d6:	4a07      	ldr	r2, [pc, #28]	; (80174f4 <LL_DMA_ConfigTransfer+0x44>)
 80174d8:	68bb      	ldr	r3, [r7, #8]
 80174da:	18d3      	adds	r3, r2, r3
 80174dc:	781b      	ldrb	r3, [r3, #0]
 80174de:	001a      	movs	r2, r3
 80174e0:	697b      	ldr	r3, [r7, #20]
 80174e2:	18d3      	adds	r3, r2, r3
 80174e4:	687a      	ldr	r2, [r7, #4]
 80174e6:	430a      	orrs	r2, r1
 80174e8:	601a      	str	r2, [r3, #0]
 80174ea:	46c0      	nop			; (mov r8, r8)
 80174ec:	46bd      	mov	sp, r7
 80174ee:	b006      	add	sp, #24
 80174f0:	bd80      	pop	{r7, pc}
 80174f2:	46c0      	nop			; (mov r8, r8)
 80174f4:	0801a1b0 	.word	0x0801a1b0
 80174f8:	ffff800f 	.word	0xffff800f

080174fc <LL_DMA_GetDataTransferDirection>:
 80174fc:	b580      	push	{r7, lr}
 80174fe:	b084      	sub	sp, #16
 8017500:	af00      	add	r7, sp, #0
 8017502:	6078      	str	r0, [r7, #4]
 8017504:	6039      	str	r1, [r7, #0]
 8017506:	687b      	ldr	r3, [r7, #4]
 8017508:	60fb      	str	r3, [r7, #12]
 801750a:	4a07      	ldr	r2, [pc, #28]	; (8017528 <LL_DMA_GetDataTransferDirection+0x2c>)
 801750c:	683b      	ldr	r3, [r7, #0]
 801750e:	18d3      	adds	r3, r2, r3
 8017510:	781b      	ldrb	r3, [r3, #0]
 8017512:	001a      	movs	r2, r3
 8017514:	68fb      	ldr	r3, [r7, #12]
 8017516:	18d3      	adds	r3, r2, r3
 8017518:	681b      	ldr	r3, [r3, #0]
 801751a:	4a04      	ldr	r2, [pc, #16]	; (801752c <LL_DMA_GetDataTransferDirection+0x30>)
 801751c:	4013      	ands	r3, r2
 801751e:	0018      	movs	r0, r3
 8017520:	46bd      	mov	sp, r7
 8017522:	b004      	add	sp, #16
 8017524:	bd80      	pop	{r7, pc}
 8017526:	46c0      	nop			; (mov r8, r8)
 8017528:	0801a1b0 	.word	0x0801a1b0
 801752c:	00004010 	.word	0x00004010

08017530 <LL_DMA_SetDataLength>:
 8017530:	b580      	push	{r7, lr}
 8017532:	b086      	sub	sp, #24
 8017534:	af00      	add	r7, sp, #0
 8017536:	60f8      	str	r0, [r7, #12]
 8017538:	60b9      	str	r1, [r7, #8]
 801753a:	607a      	str	r2, [r7, #4]
 801753c:	68fb      	ldr	r3, [r7, #12]
 801753e:	617b      	str	r3, [r7, #20]
 8017540:	4a0b      	ldr	r2, [pc, #44]	; (8017570 <LL_DMA_SetDataLength+0x40>)
 8017542:	68bb      	ldr	r3, [r7, #8]
 8017544:	18d3      	adds	r3, r2, r3
 8017546:	781b      	ldrb	r3, [r3, #0]
 8017548:	001a      	movs	r2, r3
 801754a:	697b      	ldr	r3, [r7, #20]
 801754c:	18d3      	adds	r3, r2, r3
 801754e:	685b      	ldr	r3, [r3, #4]
 8017550:	0c1b      	lsrs	r3, r3, #16
 8017552:	0419      	lsls	r1, r3, #16
 8017554:	4a06      	ldr	r2, [pc, #24]	; (8017570 <LL_DMA_SetDataLength+0x40>)
 8017556:	68bb      	ldr	r3, [r7, #8]
 8017558:	18d3      	adds	r3, r2, r3
 801755a:	781b      	ldrb	r3, [r3, #0]
 801755c:	001a      	movs	r2, r3
 801755e:	697b      	ldr	r3, [r7, #20]
 8017560:	18d3      	adds	r3, r2, r3
 8017562:	687a      	ldr	r2, [r7, #4]
 8017564:	430a      	orrs	r2, r1
 8017566:	605a      	str	r2, [r3, #4]
 8017568:	46c0      	nop			; (mov r8, r8)
 801756a:	46bd      	mov	sp, r7
 801756c:	b006      	add	sp, #24
 801756e:	bd80      	pop	{r7, pc}
 8017570:	0801a1b0 	.word	0x0801a1b0

08017574 <LL_DMA_ConfigAddresses>:
 8017574:	b580      	push	{r7, lr}
 8017576:	b086      	sub	sp, #24
 8017578:	af00      	add	r7, sp, #0
 801757a:	60f8      	str	r0, [r7, #12]
 801757c:	60b9      	str	r1, [r7, #8]
 801757e:	607a      	str	r2, [r7, #4]
 8017580:	603b      	str	r3, [r7, #0]
 8017582:	68fb      	ldr	r3, [r7, #12]
 8017584:	617b      	str	r3, [r7, #20]
 8017586:	6a3b      	ldr	r3, [r7, #32]
 8017588:	2b10      	cmp	r3, #16
 801758a:	d112      	bne.n	80175b2 <LL_DMA_ConfigAddresses+0x3e>
 801758c:	4a14      	ldr	r2, [pc, #80]	; (80175e0 <LL_DMA_ConfigAddresses+0x6c>)
 801758e:	68bb      	ldr	r3, [r7, #8]
 8017590:	18d3      	adds	r3, r2, r3
 8017592:	781b      	ldrb	r3, [r3, #0]
 8017594:	001a      	movs	r2, r3
 8017596:	697b      	ldr	r3, [r7, #20]
 8017598:	18d3      	adds	r3, r2, r3
 801759a:	687a      	ldr	r2, [r7, #4]
 801759c:	60da      	str	r2, [r3, #12]
 801759e:	4a10      	ldr	r2, [pc, #64]	; (80175e0 <LL_DMA_ConfigAddresses+0x6c>)
 80175a0:	68bb      	ldr	r3, [r7, #8]
 80175a2:	18d3      	adds	r3, r2, r3
 80175a4:	781b      	ldrb	r3, [r3, #0]
 80175a6:	001a      	movs	r2, r3
 80175a8:	697b      	ldr	r3, [r7, #20]
 80175aa:	18d3      	adds	r3, r2, r3
 80175ac:	683a      	ldr	r2, [r7, #0]
 80175ae:	609a      	str	r2, [r3, #8]
 80175b0:	e011      	b.n	80175d6 <LL_DMA_ConfigAddresses+0x62>
 80175b2:	4a0b      	ldr	r2, [pc, #44]	; (80175e0 <LL_DMA_ConfigAddresses+0x6c>)
 80175b4:	68bb      	ldr	r3, [r7, #8]
 80175b6:	18d3      	adds	r3, r2, r3
 80175b8:	781b      	ldrb	r3, [r3, #0]
 80175ba:	001a      	movs	r2, r3
 80175bc:	697b      	ldr	r3, [r7, #20]
 80175be:	18d3      	adds	r3, r2, r3
 80175c0:	687a      	ldr	r2, [r7, #4]
 80175c2:	609a      	str	r2, [r3, #8]
 80175c4:	4a06      	ldr	r2, [pc, #24]	; (80175e0 <LL_DMA_ConfigAddresses+0x6c>)
 80175c6:	68bb      	ldr	r3, [r7, #8]
 80175c8:	18d3      	adds	r3, r2, r3
 80175ca:	781b      	ldrb	r3, [r3, #0]
 80175cc:	001a      	movs	r2, r3
 80175ce:	697b      	ldr	r3, [r7, #20]
 80175d0:	18d3      	adds	r3, r2, r3
 80175d2:	683a      	ldr	r2, [r7, #0]
 80175d4:	60da      	str	r2, [r3, #12]
 80175d6:	46c0      	nop			; (mov r8, r8)
 80175d8:	46bd      	mov	sp, r7
 80175da:	b006      	add	sp, #24
 80175dc:	bd80      	pop	{r7, pc}
 80175de:	46c0      	nop			; (mov r8, r8)
 80175e0:	0801a1b0 	.word	0x0801a1b0

080175e4 <LL_DMA_SetPeriphRequest>:
 80175e4:	b580      	push	{r7, lr}
 80175e6:	b086      	sub	sp, #24
 80175e8:	af00      	add	r7, sp, #0
 80175ea:	60f8      	str	r0, [r7, #12]
 80175ec:	60b9      	str	r1, [r7, #8]
 80175ee:	607a      	str	r2, [r7, #4]
 80175f0:	68fb      	ldr	r3, [r7, #12]
 80175f2:	0a9b      	lsrs	r3, r3, #10
 80175f4:	4a0f      	ldr	r2, [pc, #60]	; (8017634 <LL_DMA_SetPeriphRequest+0x50>)
 80175f6:	405a      	eors	r2, r3
 80175f8:	0013      	movs	r3, r2
 80175fa:	00db      	lsls	r3, r3, #3
 80175fc:	1a9b      	subs	r3, r3, r2
 80175fe:	617b      	str	r3, [r7, #20]
 8017600:	68ba      	ldr	r2, [r7, #8]
 8017602:	697b      	ldr	r3, [r7, #20]
 8017604:	18d3      	adds	r3, r2, r3
 8017606:	009b      	lsls	r3, r3, #2
 8017608:	4a0b      	ldr	r2, [pc, #44]	; (8017638 <LL_DMA_SetPeriphRequest+0x54>)
 801760a:	4694      	mov	ip, r2
 801760c:	4463      	add	r3, ip
 801760e:	681b      	ldr	r3, [r3, #0]
 8017610:	227f      	movs	r2, #127	; 0x7f
 8017612:	4393      	bics	r3, r2
 8017614:	0019      	movs	r1, r3
 8017616:	68ba      	ldr	r2, [r7, #8]
 8017618:	697b      	ldr	r3, [r7, #20]
 801761a:	18d3      	adds	r3, r2, r3
 801761c:	009b      	lsls	r3, r3, #2
 801761e:	4a06      	ldr	r2, [pc, #24]	; (8017638 <LL_DMA_SetPeriphRequest+0x54>)
 8017620:	4694      	mov	ip, r2
 8017622:	4463      	add	r3, ip
 8017624:	687a      	ldr	r2, [r7, #4]
 8017626:	430a      	orrs	r2, r1
 8017628:	601a      	str	r2, [r3, #0]
 801762a:	46c0      	nop			; (mov r8, r8)
 801762c:	46bd      	mov	sp, r7
 801762e:	b006      	add	sp, #24
 8017630:	bd80      	pop	{r7, pc}
 8017632:	46c0      	nop			; (mov r8, r8)
 8017634:	00100080 	.word	0x00100080
 8017638:	40020800 	.word	0x40020800

0801763c <LL_DMA_IsActiveFlag_TC3>:
 801763c:	b580      	push	{r7, lr}
 801763e:	b082      	sub	sp, #8
 8017640:	af00      	add	r7, sp, #0
 8017642:	6078      	str	r0, [r7, #4]
 8017644:	687b      	ldr	r3, [r7, #4]
 8017646:	681a      	ldr	r2, [r3, #0]
 8017648:	2380      	movs	r3, #128	; 0x80
 801764a:	009b      	lsls	r3, r3, #2
 801764c:	401a      	ands	r2, r3
 801764e:	2380      	movs	r3, #128	; 0x80
 8017650:	009b      	lsls	r3, r3, #2
 8017652:	429a      	cmp	r2, r3
 8017654:	d101      	bne.n	801765a <LL_DMA_IsActiveFlag_TC3+0x1e>
 8017656:	2301      	movs	r3, #1
 8017658:	e000      	b.n	801765c <LL_DMA_IsActiveFlag_TC3+0x20>
 801765a:	2300      	movs	r3, #0
 801765c:	0018      	movs	r0, r3
 801765e:	46bd      	mov	sp, r7
 8017660:	b002      	add	sp, #8
 8017662:	bd80      	pop	{r7, pc}

08017664 <LL_DMA_ClearFlag_GI3>:
 8017664:	b580      	push	{r7, lr}
 8017666:	b082      	sub	sp, #8
 8017668:	af00      	add	r7, sp, #0
 801766a:	6078      	str	r0, [r7, #4]
 801766c:	687b      	ldr	r3, [r7, #4]
 801766e:	2280      	movs	r2, #128	; 0x80
 8017670:	0052      	lsls	r2, r2, #1
 8017672:	605a      	str	r2, [r3, #4]
 8017674:	46c0      	nop			; (mov r8, r8)
 8017676:	46bd      	mov	sp, r7
 8017678:	b002      	add	sp, #8
 801767a:	bd80      	pop	{r7, pc}

0801767c <LL_DMA_EnableIT_TC>:
 801767c:	b580      	push	{r7, lr}
 801767e:	b084      	sub	sp, #16
 8017680:	af00      	add	r7, sp, #0
 8017682:	6078      	str	r0, [r7, #4]
 8017684:	6039      	str	r1, [r7, #0]
 8017686:	687b      	ldr	r3, [r7, #4]
 8017688:	60fb      	str	r3, [r7, #12]
 801768a:	4a0b      	ldr	r2, [pc, #44]	; (80176b8 <LL_DMA_EnableIT_TC+0x3c>)
 801768c:	683b      	ldr	r3, [r7, #0]
 801768e:	18d3      	adds	r3, r2, r3
 8017690:	781b      	ldrb	r3, [r3, #0]
 8017692:	001a      	movs	r2, r3
 8017694:	68fb      	ldr	r3, [r7, #12]
 8017696:	18d3      	adds	r3, r2, r3
 8017698:	681a      	ldr	r2, [r3, #0]
 801769a:	4907      	ldr	r1, [pc, #28]	; (80176b8 <LL_DMA_EnableIT_TC+0x3c>)
 801769c:	683b      	ldr	r3, [r7, #0]
 801769e:	18cb      	adds	r3, r1, r3
 80176a0:	781b      	ldrb	r3, [r3, #0]
 80176a2:	0019      	movs	r1, r3
 80176a4:	68fb      	ldr	r3, [r7, #12]
 80176a6:	18cb      	adds	r3, r1, r3
 80176a8:	2102      	movs	r1, #2
 80176aa:	430a      	orrs	r2, r1
 80176ac:	601a      	str	r2, [r3, #0]
 80176ae:	46c0      	nop			; (mov r8, r8)
 80176b0:	46bd      	mov	sp, r7
 80176b2:	b004      	add	sp, #16
 80176b4:	bd80      	pop	{r7, pc}
 80176b6:	46c0      	nop			; (mov r8, r8)
 80176b8:	0801a1b0 	.word	0x0801a1b0

080176bc <LL_AHB1_GRP1_EnableClock>:
 80176bc:	b580      	push	{r7, lr}
 80176be:	b084      	sub	sp, #16
 80176c0:	af00      	add	r7, sp, #0
 80176c2:	6078      	str	r0, [r7, #4]
 80176c4:	4b07      	ldr	r3, [pc, #28]	; (80176e4 <LL_AHB1_GRP1_EnableClock+0x28>)
 80176c6:	6b99      	ldr	r1, [r3, #56]	; 0x38
 80176c8:	4b06      	ldr	r3, [pc, #24]	; (80176e4 <LL_AHB1_GRP1_EnableClock+0x28>)
 80176ca:	687a      	ldr	r2, [r7, #4]
 80176cc:	430a      	orrs	r2, r1
 80176ce:	639a      	str	r2, [r3, #56]	; 0x38
 80176d0:	4b04      	ldr	r3, [pc, #16]	; (80176e4 <LL_AHB1_GRP1_EnableClock+0x28>)
 80176d2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80176d4:	687a      	ldr	r2, [r7, #4]
 80176d6:	4013      	ands	r3, r2
 80176d8:	60fb      	str	r3, [r7, #12]
 80176da:	68fb      	ldr	r3, [r7, #12]
 80176dc:	46c0      	nop			; (mov r8, r8)
 80176de:	46bd      	mov	sp, r7
 80176e0:	b004      	add	sp, #16
 80176e2:	bd80      	pop	{r7, pc}
 80176e4:	40021000 	.word	0x40021000

080176e8 <LL_APB1_GRP1_EnableClock>:
 80176e8:	b580      	push	{r7, lr}
 80176ea:	b084      	sub	sp, #16
 80176ec:	af00      	add	r7, sp, #0
 80176ee:	6078      	str	r0, [r7, #4]
 80176f0:	4b07      	ldr	r3, [pc, #28]	; (8017710 <LL_APB1_GRP1_EnableClock+0x28>)
 80176f2:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 80176f4:	4b06      	ldr	r3, [pc, #24]	; (8017710 <LL_APB1_GRP1_EnableClock+0x28>)
 80176f6:	687a      	ldr	r2, [r7, #4]
 80176f8:	430a      	orrs	r2, r1
 80176fa:	63da      	str	r2, [r3, #60]	; 0x3c
 80176fc:	4b04      	ldr	r3, [pc, #16]	; (8017710 <LL_APB1_GRP1_EnableClock+0x28>)
 80176fe:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8017700:	687a      	ldr	r2, [r7, #4]
 8017702:	4013      	ands	r3, r2
 8017704:	60fb      	str	r3, [r7, #12]
 8017706:	68fb      	ldr	r3, [r7, #12]
 8017708:	46c0      	nop			; (mov r8, r8)
 801770a:	46bd      	mov	sp, r7
 801770c:	b004      	add	sp, #16
 801770e:	bd80      	pop	{r7, pc}
 8017710:	40021000 	.word	0x40021000

08017714 <LL_APB1_GRP1_DisableClock>:
 8017714:	b580      	push	{r7, lr}
 8017716:	b082      	sub	sp, #8
 8017718:	af00      	add	r7, sp, #0
 801771a:	6078      	str	r0, [r7, #4]
 801771c:	4b05      	ldr	r3, [pc, #20]	; (8017734 <LL_APB1_GRP1_DisableClock+0x20>)
 801771e:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8017720:	687b      	ldr	r3, [r7, #4]
 8017722:	43d9      	mvns	r1, r3
 8017724:	4b03      	ldr	r3, [pc, #12]	; (8017734 <LL_APB1_GRP1_DisableClock+0x20>)
 8017726:	400a      	ands	r2, r1
 8017728:	63da      	str	r2, [r3, #60]	; 0x3c
 801772a:	46c0      	nop			; (mov r8, r8)
 801772c:	46bd      	mov	sp, r7
 801772e:	b002      	add	sp, #8
 8017730:	bd80      	pop	{r7, pc}
 8017732:	46c0      	nop			; (mov r8, r8)
 8017734:	40021000 	.word	0x40021000

08017738 <LL_IOP_GRP1_EnableClock>:
 8017738:	b580      	push	{r7, lr}
 801773a:	b084      	sub	sp, #16
 801773c:	af00      	add	r7, sp, #0
 801773e:	6078      	str	r0, [r7, #4]
 8017740:	4b07      	ldr	r3, [pc, #28]	; (8017760 <LL_IOP_GRP1_EnableClock+0x28>)
 8017742:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8017744:	4b06      	ldr	r3, [pc, #24]	; (8017760 <LL_IOP_GRP1_EnableClock+0x28>)
 8017746:	687a      	ldr	r2, [r7, #4]
 8017748:	430a      	orrs	r2, r1
 801774a:	635a      	str	r2, [r3, #52]	; 0x34
 801774c:	4b04      	ldr	r3, [pc, #16]	; (8017760 <LL_IOP_GRP1_EnableClock+0x28>)
 801774e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8017750:	687a      	ldr	r2, [r7, #4]
 8017752:	4013      	ands	r3, r2
 8017754:	60fb      	str	r3, [r7, #12]
 8017756:	68fb      	ldr	r3, [r7, #12]
 8017758:	46c0      	nop			; (mov r8, r8)
 801775a:	46bd      	mov	sp, r7
 801775c:	b004      	add	sp, #16
 801775e:	bd80      	pop	{r7, pc}
 8017760:	40021000 	.word	0x40021000

08017764 <LL_GPIO_SetPinMode>:
 8017764:	b580      	push	{r7, lr}
 8017766:	b084      	sub	sp, #16
 8017768:	af00      	add	r7, sp, #0
 801776a:	60f8      	str	r0, [r7, #12]
 801776c:	60b9      	str	r1, [r7, #8]
 801776e:	607a      	str	r2, [r7, #4]
 8017770:	68fb      	ldr	r3, [r7, #12]
 8017772:	6819      	ldr	r1, [r3, #0]
 8017774:	68bb      	ldr	r3, [r7, #8]
 8017776:	435b      	muls	r3, r3
 8017778:	001a      	movs	r2, r3
 801777a:	0013      	movs	r3, r2
 801777c:	005b      	lsls	r3, r3, #1
 801777e:	189b      	adds	r3, r3, r2
 8017780:	43db      	mvns	r3, r3
 8017782:	400b      	ands	r3, r1
 8017784:	001a      	movs	r2, r3
 8017786:	68bb      	ldr	r3, [r7, #8]
 8017788:	435b      	muls	r3, r3
 801778a:	6879      	ldr	r1, [r7, #4]
 801778c:	434b      	muls	r3, r1
 801778e:	431a      	orrs	r2, r3
 8017790:	68fb      	ldr	r3, [r7, #12]
 8017792:	601a      	str	r2, [r3, #0]
 8017794:	46c0      	nop			; (mov r8, r8)
 8017796:	46bd      	mov	sp, r7
 8017798:	b004      	add	sp, #16
 801779a:	bd80      	pop	{r7, pc}

0801779c <LL_GPIO_SetPinOutputType>:
 801779c:	b580      	push	{r7, lr}
 801779e:	b084      	sub	sp, #16
 80177a0:	af00      	add	r7, sp, #0
 80177a2:	60f8      	str	r0, [r7, #12]
 80177a4:	60b9      	str	r1, [r7, #8]
 80177a6:	607a      	str	r2, [r7, #4]
 80177a8:	68fb      	ldr	r3, [r7, #12]
 80177aa:	685b      	ldr	r3, [r3, #4]
 80177ac:	68ba      	ldr	r2, [r7, #8]
 80177ae:	43d2      	mvns	r2, r2
 80177b0:	401a      	ands	r2, r3
 80177b2:	68bb      	ldr	r3, [r7, #8]
 80177b4:	6879      	ldr	r1, [r7, #4]
 80177b6:	434b      	muls	r3, r1
 80177b8:	431a      	orrs	r2, r3
 80177ba:	68fb      	ldr	r3, [r7, #12]
 80177bc:	605a      	str	r2, [r3, #4]
 80177be:	46c0      	nop			; (mov r8, r8)
 80177c0:	46bd      	mov	sp, r7
 80177c2:	b004      	add	sp, #16
 80177c4:	bd80      	pop	{r7, pc}

080177c6 <LL_GPIO_SetPinSpeed>:
 80177c6:	b580      	push	{r7, lr}
 80177c8:	b084      	sub	sp, #16
 80177ca:	af00      	add	r7, sp, #0
 80177cc:	60f8      	str	r0, [r7, #12]
 80177ce:	60b9      	str	r1, [r7, #8]
 80177d0:	607a      	str	r2, [r7, #4]
 80177d2:	68fb      	ldr	r3, [r7, #12]
 80177d4:	6899      	ldr	r1, [r3, #8]
 80177d6:	68bb      	ldr	r3, [r7, #8]
 80177d8:	435b      	muls	r3, r3
 80177da:	001a      	movs	r2, r3
 80177dc:	0013      	movs	r3, r2
 80177de:	005b      	lsls	r3, r3, #1
 80177e0:	189b      	adds	r3, r3, r2
 80177e2:	43db      	mvns	r3, r3
 80177e4:	400b      	ands	r3, r1
 80177e6:	001a      	movs	r2, r3
 80177e8:	68bb      	ldr	r3, [r7, #8]
 80177ea:	435b      	muls	r3, r3
 80177ec:	6879      	ldr	r1, [r7, #4]
 80177ee:	434b      	muls	r3, r1
 80177f0:	431a      	orrs	r2, r3
 80177f2:	68fb      	ldr	r3, [r7, #12]
 80177f4:	609a      	str	r2, [r3, #8]
 80177f6:	46c0      	nop			; (mov r8, r8)
 80177f8:	46bd      	mov	sp, r7
 80177fa:	b004      	add	sp, #16
 80177fc:	bd80      	pop	{r7, pc}

080177fe <LL_GPIO_SetPinPull>:
 80177fe:	b580      	push	{r7, lr}
 8017800:	b084      	sub	sp, #16
 8017802:	af00      	add	r7, sp, #0
 8017804:	60f8      	str	r0, [r7, #12]
 8017806:	60b9      	str	r1, [r7, #8]
 8017808:	607a      	str	r2, [r7, #4]
 801780a:	68fb      	ldr	r3, [r7, #12]
 801780c:	68d9      	ldr	r1, [r3, #12]
 801780e:	68bb      	ldr	r3, [r7, #8]
 8017810:	435b      	muls	r3, r3
 8017812:	001a      	movs	r2, r3
 8017814:	0013      	movs	r3, r2
 8017816:	005b      	lsls	r3, r3, #1
 8017818:	189b      	adds	r3, r3, r2
 801781a:	43db      	mvns	r3, r3
 801781c:	400b      	ands	r3, r1
 801781e:	001a      	movs	r2, r3
 8017820:	68bb      	ldr	r3, [r7, #8]
 8017822:	435b      	muls	r3, r3
 8017824:	6879      	ldr	r1, [r7, #4]
 8017826:	434b      	muls	r3, r1
 8017828:	431a      	orrs	r2, r3
 801782a:	68fb      	ldr	r3, [r7, #12]
 801782c:	60da      	str	r2, [r3, #12]
 801782e:	46c0      	nop			; (mov r8, r8)
 8017830:	46bd      	mov	sp, r7
 8017832:	b004      	add	sp, #16
 8017834:	bd80      	pop	{r7, pc}

08017836 <LL_GPIO_SetAFPin_0_7>:
 8017836:	b580      	push	{r7, lr}
 8017838:	b084      	sub	sp, #16
 801783a:	af00      	add	r7, sp, #0
 801783c:	60f8      	str	r0, [r7, #12]
 801783e:	60b9      	str	r1, [r7, #8]
 8017840:	607a      	str	r2, [r7, #4]
 8017842:	68fb      	ldr	r3, [r7, #12]
 8017844:	6a19      	ldr	r1, [r3, #32]
 8017846:	68bb      	ldr	r3, [r7, #8]
 8017848:	435b      	muls	r3, r3
 801784a:	68ba      	ldr	r2, [r7, #8]
 801784c:	4353      	muls	r3, r2
 801784e:	68ba      	ldr	r2, [r7, #8]
 8017850:	435a      	muls	r2, r3
 8017852:	0013      	movs	r3, r2
 8017854:	011b      	lsls	r3, r3, #4
 8017856:	1a9b      	subs	r3, r3, r2
 8017858:	43db      	mvns	r3, r3
 801785a:	400b      	ands	r3, r1
 801785c:	001a      	movs	r2, r3
 801785e:	68bb      	ldr	r3, [r7, #8]
 8017860:	435b      	muls	r3, r3
 8017862:	68b9      	ldr	r1, [r7, #8]
 8017864:	434b      	muls	r3, r1
 8017866:	68b9      	ldr	r1, [r7, #8]
 8017868:	434b      	muls	r3, r1
 801786a:	6879      	ldr	r1, [r7, #4]
 801786c:	434b      	muls	r3, r1
 801786e:	431a      	orrs	r2, r3
 8017870:	68fb      	ldr	r3, [r7, #12]
 8017872:	621a      	str	r2, [r3, #32]
 8017874:	46c0      	nop			; (mov r8, r8)
 8017876:	46bd      	mov	sp, r7
 8017878:	b004      	add	sp, #16
 801787a:	bd80      	pop	{r7, pc}

0801787c <LL_LPUART_Enable>:
 801787c:	b580      	push	{r7, lr}
 801787e:	b082      	sub	sp, #8
 8017880:	af00      	add	r7, sp, #0
 8017882:	6078      	str	r0, [r7, #4]
 8017884:	687b      	ldr	r3, [r7, #4]
 8017886:	681b      	ldr	r3, [r3, #0]
 8017888:	2201      	movs	r2, #1
 801788a:	431a      	orrs	r2, r3
 801788c:	687b      	ldr	r3, [r7, #4]
 801788e:	601a      	str	r2, [r3, #0]
 8017890:	46c0      	nop			; (mov r8, r8)
 8017892:	46bd      	mov	sp, r7
 8017894:	b002      	add	sp, #8
 8017896:	bd80      	pop	{r7, pc}

08017898 <LL_LPUART_Disable>:
 8017898:	b580      	push	{r7, lr}
 801789a:	b082      	sub	sp, #8
 801789c:	af00      	add	r7, sp, #0
 801789e:	6078      	str	r0, [r7, #4]
 80178a0:	687b      	ldr	r3, [r7, #4]
 80178a2:	681b      	ldr	r3, [r3, #0]
 80178a4:	2201      	movs	r2, #1
 80178a6:	4393      	bics	r3, r2
 80178a8:	001a      	movs	r2, r3
 80178aa:	687b      	ldr	r3, [r7, #4]
 80178ac:	601a      	str	r2, [r3, #0]
 80178ae:	46c0      	nop			; (mov r8, r8)
 80178b0:	46bd      	mov	sp, r7
 80178b2:	b002      	add	sp, #8
 80178b4:	bd80      	pop	{r7, pc}

080178b6 <LL_LPUART_EnableDirectionRx>:
 80178b6:	b580      	push	{r7, lr}
 80178b8:	b086      	sub	sp, #24
 80178ba:	af00      	add	r7, sp, #0
 80178bc:	6078      	str	r0, [r7, #4]
 80178be:	f3ef 8310 	mrs	r3, PRIMASK
 80178c2:	60bb      	str	r3, [r7, #8]
 80178c4:	68bb      	ldr	r3, [r7, #8]
 80178c6:	617b      	str	r3, [r7, #20]
 80178c8:	2301      	movs	r3, #1
 80178ca:	60fb      	str	r3, [r7, #12]
 80178cc:	68fb      	ldr	r3, [r7, #12]
 80178ce:	f383 8810 	msr	PRIMASK, r3
 80178d2:	46c0      	nop			; (mov r8, r8)
 80178d4:	687b      	ldr	r3, [r7, #4]
 80178d6:	681b      	ldr	r3, [r3, #0]
 80178d8:	2204      	movs	r2, #4
 80178da:	431a      	orrs	r2, r3
 80178dc:	687b      	ldr	r3, [r7, #4]
 80178de:	601a      	str	r2, [r3, #0]
 80178e0:	697b      	ldr	r3, [r7, #20]
 80178e2:	613b      	str	r3, [r7, #16]
 80178e4:	693b      	ldr	r3, [r7, #16]
 80178e6:	f383 8810 	msr	PRIMASK, r3
 80178ea:	46c0      	nop			; (mov r8, r8)
 80178ec:	46c0      	nop			; (mov r8, r8)
 80178ee:	46bd      	mov	sp, r7
 80178f0:	b006      	add	sp, #24
 80178f2:	bd80      	pop	{r7, pc}

080178f4 <LL_LPUART_IsActiveFlag_TEACK>:
 80178f4:	b580      	push	{r7, lr}
 80178f6:	b082      	sub	sp, #8
 80178f8:	af00      	add	r7, sp, #0
 80178fa:	6078      	str	r0, [r7, #4]
 80178fc:	687b      	ldr	r3, [r7, #4]
 80178fe:	69da      	ldr	r2, [r3, #28]
 8017900:	2380      	movs	r3, #128	; 0x80
 8017902:	039b      	lsls	r3, r3, #14
 8017904:	401a      	ands	r2, r3
 8017906:	2380      	movs	r3, #128	; 0x80
 8017908:	039b      	lsls	r3, r3, #14
 801790a:	429a      	cmp	r2, r3
 801790c:	d101      	bne.n	8017912 <LL_LPUART_IsActiveFlag_TEACK+0x1e>
 801790e:	2301      	movs	r3, #1
 8017910:	e000      	b.n	8017914 <LL_LPUART_IsActiveFlag_TEACK+0x20>
 8017912:	2300      	movs	r3, #0
 8017914:	0018      	movs	r0, r3
 8017916:	46bd      	mov	sp, r7
 8017918:	b002      	add	sp, #8
 801791a:	bd80      	pop	{r7, pc}

0801791c <LL_LPUART_ClearFlag_PE>:
 801791c:	b580      	push	{r7, lr}
 801791e:	b082      	sub	sp, #8
 8017920:	af00      	add	r7, sp, #0
 8017922:	6078      	str	r0, [r7, #4]
 8017924:	687b      	ldr	r3, [r7, #4]
 8017926:	2201      	movs	r2, #1
 8017928:	621a      	str	r2, [r3, #32]
 801792a:	46c0      	nop			; (mov r8, r8)
 801792c:	46bd      	mov	sp, r7
 801792e:	b002      	add	sp, #8
 8017930:	bd80      	pop	{r7, pc}

08017932 <LL_LPUART_ClearFlag_FE>:
 8017932:	b580      	push	{r7, lr}
 8017934:	b082      	sub	sp, #8
 8017936:	af00      	add	r7, sp, #0
 8017938:	6078      	str	r0, [r7, #4]
 801793a:	687b      	ldr	r3, [r7, #4]
 801793c:	2202      	movs	r2, #2
 801793e:	621a      	str	r2, [r3, #32]
 8017940:	46c0      	nop			; (mov r8, r8)
 8017942:	46bd      	mov	sp, r7
 8017944:	b002      	add	sp, #8
 8017946:	bd80      	pop	{r7, pc}

08017948 <LL_LPUART_ClearFlag_NE>:
 8017948:	b580      	push	{r7, lr}
 801794a:	b082      	sub	sp, #8
 801794c:	af00      	add	r7, sp, #0
 801794e:	6078      	str	r0, [r7, #4]
 8017950:	687b      	ldr	r3, [r7, #4]
 8017952:	2204      	movs	r2, #4
 8017954:	621a      	str	r2, [r3, #32]
 8017956:	46c0      	nop			; (mov r8, r8)
 8017958:	46bd      	mov	sp, r7
 801795a:	b002      	add	sp, #8
 801795c:	bd80      	pop	{r7, pc}

0801795e <LL_LPUART_ClearFlag_ORE>:
 801795e:	b580      	push	{r7, lr}
 8017960:	b082      	sub	sp, #8
 8017962:	af00      	add	r7, sp, #0
 8017964:	6078      	str	r0, [r7, #4]
 8017966:	687b      	ldr	r3, [r7, #4]
 8017968:	2208      	movs	r2, #8
 801796a:	621a      	str	r2, [r3, #32]
 801796c:	46c0      	nop			; (mov r8, r8)
 801796e:	46bd      	mov	sp, r7
 8017970:	b002      	add	sp, #8
 8017972:	bd80      	pop	{r7, pc}

08017974 <LL_LPUART_ClearFlag_TC>:
 8017974:	b580      	push	{r7, lr}
 8017976:	b082      	sub	sp, #8
 8017978:	af00      	add	r7, sp, #0
 801797a:	6078      	str	r0, [r7, #4]
 801797c:	687b      	ldr	r3, [r7, #4]
 801797e:	2240      	movs	r2, #64	; 0x40
 8017980:	621a      	str	r2, [r3, #32]
 8017982:	46c0      	nop			; (mov r8, r8)
 8017984:	46bd      	mov	sp, r7
 8017986:	b002      	add	sp, #8
 8017988:	bd80      	pop	{r7, pc}

0801798a <LL_LPUART_EnableIT_RXNE_RXFNE>:
 801798a:	b580      	push	{r7, lr}
 801798c:	b086      	sub	sp, #24
 801798e:	af00      	add	r7, sp, #0
 8017990:	6078      	str	r0, [r7, #4]
 8017992:	f3ef 8310 	mrs	r3, PRIMASK
 8017996:	60bb      	str	r3, [r7, #8]
 8017998:	68bb      	ldr	r3, [r7, #8]
 801799a:	617b      	str	r3, [r7, #20]
 801799c:	2301      	movs	r3, #1
 801799e:	60fb      	str	r3, [r7, #12]
 80179a0:	68fb      	ldr	r3, [r7, #12]
 80179a2:	f383 8810 	msr	PRIMASK, r3
 80179a6:	46c0      	nop			; (mov r8, r8)
 80179a8:	687b      	ldr	r3, [r7, #4]
 80179aa:	681b      	ldr	r3, [r3, #0]
 80179ac:	2220      	movs	r2, #32
 80179ae:	431a      	orrs	r2, r3
 80179b0:	687b      	ldr	r3, [r7, #4]
 80179b2:	601a      	str	r2, [r3, #0]
 80179b4:	697b      	ldr	r3, [r7, #20]
 80179b6:	613b      	str	r3, [r7, #16]
 80179b8:	693b      	ldr	r3, [r7, #16]
 80179ba:	f383 8810 	msr	PRIMASK, r3
 80179be:	46c0      	nop			; (mov r8, r8)
 80179c0:	46c0      	nop			; (mov r8, r8)
 80179c2:	46bd      	mov	sp, r7
 80179c4:	b006      	add	sp, #24
 80179c6:	bd80      	pop	{r7, pc}

080179c8 <LL_LPUART_EnableIT_TC>:
 80179c8:	b580      	push	{r7, lr}
 80179ca:	b086      	sub	sp, #24
 80179cc:	af00      	add	r7, sp, #0
 80179ce:	6078      	str	r0, [r7, #4]
 80179d0:	f3ef 8310 	mrs	r3, PRIMASK
 80179d4:	60bb      	str	r3, [r7, #8]
 80179d6:	68bb      	ldr	r3, [r7, #8]
 80179d8:	617b      	str	r3, [r7, #20]
 80179da:	2301      	movs	r3, #1
 80179dc:	60fb      	str	r3, [r7, #12]
 80179de:	68fb      	ldr	r3, [r7, #12]
 80179e0:	f383 8810 	msr	PRIMASK, r3
 80179e4:	46c0      	nop			; (mov r8, r8)
 80179e6:	687b      	ldr	r3, [r7, #4]
 80179e8:	681b      	ldr	r3, [r3, #0]
 80179ea:	2240      	movs	r2, #64	; 0x40
 80179ec:	431a      	orrs	r2, r3
 80179ee:	687b      	ldr	r3, [r7, #4]
 80179f0:	601a      	str	r2, [r3, #0]
 80179f2:	697b      	ldr	r3, [r7, #20]
 80179f4:	613b      	str	r3, [r7, #16]
 80179f6:	693b      	ldr	r3, [r7, #16]
 80179f8:	f383 8810 	msr	PRIMASK, r3
 80179fc:	46c0      	nop			; (mov r8, r8)
 80179fe:	46c0      	nop			; (mov r8, r8)
 8017a00:	46bd      	mov	sp, r7
 8017a02:	b006      	add	sp, #24
 8017a04:	bd80      	pop	{r7, pc}

08017a06 <LL_LPUART_EnableIT_ERROR>:
 8017a06:	b580      	push	{r7, lr}
 8017a08:	b086      	sub	sp, #24
 8017a0a:	af00      	add	r7, sp, #0
 8017a0c:	6078      	str	r0, [r7, #4]
 8017a0e:	f3ef 8310 	mrs	r3, PRIMASK
 8017a12:	60bb      	str	r3, [r7, #8]
 8017a14:	68bb      	ldr	r3, [r7, #8]
 8017a16:	617b      	str	r3, [r7, #20]
 8017a18:	2301      	movs	r3, #1
 8017a1a:	60fb      	str	r3, [r7, #12]
 8017a1c:	68fb      	ldr	r3, [r7, #12]
 8017a1e:	f383 8810 	msr	PRIMASK, r3
 8017a22:	46c0      	nop			; (mov r8, r8)
 8017a24:	687b      	ldr	r3, [r7, #4]
 8017a26:	689b      	ldr	r3, [r3, #8]
 8017a28:	2201      	movs	r2, #1
 8017a2a:	431a      	orrs	r2, r3
 8017a2c:	687b      	ldr	r3, [r7, #4]
 8017a2e:	609a      	str	r2, [r3, #8]
 8017a30:	697b      	ldr	r3, [r7, #20]
 8017a32:	613b      	str	r3, [r7, #16]
 8017a34:	693b      	ldr	r3, [r7, #16]
 8017a36:	f383 8810 	msr	PRIMASK, r3
 8017a3a:	46c0      	nop			; (mov r8, r8)
 8017a3c:	46c0      	nop			; (mov r8, r8)
 8017a3e:	46bd      	mov	sp, r7
 8017a40:	b006      	add	sp, #24
 8017a42:	bd80      	pop	{r7, pc}

08017a44 <LL_LPUART_DisableIT_TC>:
 8017a44:	b580      	push	{r7, lr}
 8017a46:	b086      	sub	sp, #24
 8017a48:	af00      	add	r7, sp, #0
 8017a4a:	6078      	str	r0, [r7, #4]
 8017a4c:	f3ef 8310 	mrs	r3, PRIMASK
 8017a50:	60bb      	str	r3, [r7, #8]
 8017a52:	68bb      	ldr	r3, [r7, #8]
 8017a54:	617b      	str	r3, [r7, #20]
 8017a56:	2301      	movs	r3, #1
 8017a58:	60fb      	str	r3, [r7, #12]
 8017a5a:	68fb      	ldr	r3, [r7, #12]
 8017a5c:	f383 8810 	msr	PRIMASK, r3
 8017a60:	46c0      	nop			; (mov r8, r8)
 8017a62:	687b      	ldr	r3, [r7, #4]
 8017a64:	681b      	ldr	r3, [r3, #0]
 8017a66:	2240      	movs	r2, #64	; 0x40
 8017a68:	4393      	bics	r3, r2
 8017a6a:	001a      	movs	r2, r3
 8017a6c:	687b      	ldr	r3, [r7, #4]
 8017a6e:	601a      	str	r2, [r3, #0]
 8017a70:	697b      	ldr	r3, [r7, #20]
 8017a72:	613b      	str	r3, [r7, #16]
 8017a74:	693b      	ldr	r3, [r7, #16]
 8017a76:	f383 8810 	msr	PRIMASK, r3
 8017a7a:	46c0      	nop			; (mov r8, r8)
 8017a7c:	46c0      	nop			; (mov r8, r8)
 8017a7e:	46bd      	mov	sp, r7
 8017a80:	b006      	add	sp, #24
 8017a82:	bd80      	pop	{r7, pc}

08017a84 <LL_LPUART_IsEnabledIT_RXNE_RXFNE>:
 8017a84:	b580      	push	{r7, lr}
 8017a86:	b082      	sub	sp, #8
 8017a88:	af00      	add	r7, sp, #0
 8017a8a:	6078      	str	r0, [r7, #4]
 8017a8c:	687b      	ldr	r3, [r7, #4]
 8017a8e:	681b      	ldr	r3, [r3, #0]
 8017a90:	2220      	movs	r2, #32
 8017a92:	4013      	ands	r3, r2
 8017a94:	2b20      	cmp	r3, #32
 8017a96:	d101      	bne.n	8017a9c <LL_LPUART_IsEnabledIT_RXNE_RXFNE+0x18>
 8017a98:	2301      	movs	r3, #1
 8017a9a:	e000      	b.n	8017a9e <LL_LPUART_IsEnabledIT_RXNE_RXFNE+0x1a>
 8017a9c:	2300      	movs	r3, #0
 8017a9e:	0018      	movs	r0, r3
 8017aa0:	46bd      	mov	sp, r7
 8017aa2:	b002      	add	sp, #8
 8017aa4:	bd80      	pop	{r7, pc}

08017aa6 <LL_LPUART_IsEnabledIT_TC>:
 8017aa6:	b580      	push	{r7, lr}
 8017aa8:	b082      	sub	sp, #8
 8017aaa:	af00      	add	r7, sp, #0
 8017aac:	6078      	str	r0, [r7, #4]
 8017aae:	687b      	ldr	r3, [r7, #4]
 8017ab0:	681b      	ldr	r3, [r3, #0]
 8017ab2:	2240      	movs	r2, #64	; 0x40
 8017ab4:	4013      	ands	r3, r2
 8017ab6:	2b40      	cmp	r3, #64	; 0x40
 8017ab8:	d101      	bne.n	8017abe <LL_LPUART_IsEnabledIT_TC+0x18>
 8017aba:	2301      	movs	r3, #1
 8017abc:	e000      	b.n	8017ac0 <LL_LPUART_IsEnabledIT_TC+0x1a>
 8017abe:	2300      	movs	r3, #0
 8017ac0:	0018      	movs	r0, r3
 8017ac2:	46bd      	mov	sp, r7
 8017ac4:	b002      	add	sp, #8
 8017ac6:	bd80      	pop	{r7, pc}

08017ac8 <LL_LPUART_IsEnabledIT_PE>:
 8017ac8:	b580      	push	{r7, lr}
 8017aca:	b082      	sub	sp, #8
 8017acc:	af00      	add	r7, sp, #0
 8017ace:	6078      	str	r0, [r7, #4]
 8017ad0:	687b      	ldr	r3, [r7, #4]
 8017ad2:	681a      	ldr	r2, [r3, #0]
 8017ad4:	2380      	movs	r3, #128	; 0x80
 8017ad6:	005b      	lsls	r3, r3, #1
 8017ad8:	401a      	ands	r2, r3
 8017ada:	2380      	movs	r3, #128	; 0x80
 8017adc:	005b      	lsls	r3, r3, #1
 8017ade:	429a      	cmp	r2, r3
 8017ae0:	d101      	bne.n	8017ae6 <LL_LPUART_IsEnabledIT_PE+0x1e>
 8017ae2:	2301      	movs	r3, #1
 8017ae4:	e000      	b.n	8017ae8 <LL_LPUART_IsEnabledIT_PE+0x20>
 8017ae6:	2300      	movs	r3, #0
 8017ae8:	0018      	movs	r0, r3
 8017aea:	46bd      	mov	sp, r7
 8017aec:	b002      	add	sp, #8
 8017aee:	bd80      	pop	{r7, pc}

08017af0 <LL_LPUART_IsEnabledIT_ERROR>:
 8017af0:	b580      	push	{r7, lr}
 8017af2:	b082      	sub	sp, #8
 8017af4:	af00      	add	r7, sp, #0
 8017af6:	6078      	str	r0, [r7, #4]
 8017af8:	687b      	ldr	r3, [r7, #4]
 8017afa:	689b      	ldr	r3, [r3, #8]
 8017afc:	2201      	movs	r2, #1
 8017afe:	4013      	ands	r3, r2
 8017b00:	2b01      	cmp	r3, #1
 8017b02:	d101      	bne.n	8017b08 <LL_LPUART_IsEnabledIT_ERROR+0x18>
 8017b04:	2301      	movs	r3, #1
 8017b06:	e000      	b.n	8017b0a <LL_LPUART_IsEnabledIT_ERROR+0x1a>
 8017b08:	2300      	movs	r3, #0
 8017b0a:	0018      	movs	r0, r3
 8017b0c:	46bd      	mov	sp, r7
 8017b0e:	b002      	add	sp, #8
 8017b10:	bd80      	pop	{r7, pc}

08017b12 <LL_LPUART_EnableDMAReq_TX>:
 8017b12:	b580      	push	{r7, lr}
 8017b14:	b086      	sub	sp, #24
 8017b16:	af00      	add	r7, sp, #0
 8017b18:	6078      	str	r0, [r7, #4]
 8017b1a:	f3ef 8310 	mrs	r3, PRIMASK
 8017b1e:	60bb      	str	r3, [r7, #8]
 8017b20:	68bb      	ldr	r3, [r7, #8]
 8017b22:	617b      	str	r3, [r7, #20]
 8017b24:	2301      	movs	r3, #1
 8017b26:	60fb      	str	r3, [r7, #12]
 8017b28:	68fb      	ldr	r3, [r7, #12]
 8017b2a:	f383 8810 	msr	PRIMASK, r3
 8017b2e:	46c0      	nop			; (mov r8, r8)
 8017b30:	687b      	ldr	r3, [r7, #4]
 8017b32:	689b      	ldr	r3, [r3, #8]
 8017b34:	2280      	movs	r2, #128	; 0x80
 8017b36:	431a      	orrs	r2, r3
 8017b38:	687b      	ldr	r3, [r7, #4]
 8017b3a:	609a      	str	r2, [r3, #8]
 8017b3c:	697b      	ldr	r3, [r7, #20]
 8017b3e:	613b      	str	r3, [r7, #16]
 8017b40:	693b      	ldr	r3, [r7, #16]
 8017b42:	f383 8810 	msr	PRIMASK, r3
 8017b46:	46c0      	nop			; (mov r8, r8)
 8017b48:	46c0      	nop			; (mov r8, r8)
 8017b4a:	46bd      	mov	sp, r7
 8017b4c:	b006      	add	sp, #24
 8017b4e:	bd80      	pop	{r7, pc}

08017b50 <LL_LPUART_DMA_GetRegAddr>:
 8017b50:	b580      	push	{r7, lr}
 8017b52:	b084      	sub	sp, #16
 8017b54:	af00      	add	r7, sp, #0
 8017b56:	6078      	str	r0, [r7, #4]
 8017b58:	6039      	str	r1, [r7, #0]
 8017b5a:	683b      	ldr	r3, [r7, #0]
 8017b5c:	2b00      	cmp	r3, #0
 8017b5e:	d103      	bne.n	8017b68 <LL_LPUART_DMA_GetRegAddr+0x18>
 8017b60:	687b      	ldr	r3, [r7, #4]
 8017b62:	3328      	adds	r3, #40	; 0x28
 8017b64:	60fb      	str	r3, [r7, #12]
 8017b66:	e002      	b.n	8017b6e <LL_LPUART_DMA_GetRegAddr+0x1e>
 8017b68:	687b      	ldr	r3, [r7, #4]
 8017b6a:	3324      	adds	r3, #36	; 0x24
 8017b6c:	60fb      	str	r3, [r7, #12]
 8017b6e:	68fb      	ldr	r3, [r7, #12]
 8017b70:	0018      	movs	r0, r3
 8017b72:	46bd      	mov	sp, r7
 8017b74:	b004      	add	sp, #16
 8017b76:	bd80      	pop	{r7, pc}

08017b78 <LL_LPUART_ReceiveData8>:
 8017b78:	b580      	push	{r7, lr}
 8017b7a:	b082      	sub	sp, #8
 8017b7c:	af00      	add	r7, sp, #0
 8017b7e:	6078      	str	r0, [r7, #4]
 8017b80:	687b      	ldr	r3, [r7, #4]
 8017b82:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8017b84:	b2db      	uxtb	r3, r3
 8017b86:	0018      	movs	r0, r3
 8017b88:	46bd      	mov	sp, r7
 8017b8a:	b002      	add	sp, #8
 8017b8c:	bd80      	pop	{r7, pc}
	...

08017b90 <HW_TRACER_EMB_Init>:
 8017b90:	b580      	push	{r7, lr}
 8017b92:	b088      	sub	sp, #32
 8017b94:	af00      	add	r7, sp, #0
 8017b96:	2001      	movs	r0, #1
 8017b98:	f7ff fdce 	bl	8017738 <LL_IOP_GRP1_EnableClock>
 8017b9c:	2001      	movs	r0, #1
 8017b9e:	f7ff fdcb 	bl	8017738 <LL_IOP_GRP1_EnableClock>
 8017ba2:	23a0      	movs	r3, #160	; 0xa0
 8017ba4:	05db      	lsls	r3, r3, #23
 8017ba6:	2206      	movs	r2, #6
 8017ba8:	2104      	movs	r1, #4
 8017baa:	0018      	movs	r0, r3
 8017bac:	f7ff fe43 	bl	8017836 <LL_GPIO_SetAFPin_0_7>
 8017bb0:	23a0      	movs	r3, #160	; 0xa0
 8017bb2:	05db      	lsls	r3, r3, #23
 8017bb4:	2202      	movs	r2, #2
 8017bb6:	2104      	movs	r1, #4
 8017bb8:	0018      	movs	r0, r3
 8017bba:	f7ff fdd3 	bl	8017764 <LL_GPIO_SetPinMode>
 8017bbe:	23a0      	movs	r3, #160	; 0xa0
 8017bc0:	05db      	lsls	r3, r3, #23
 8017bc2:	2202      	movs	r2, #2
 8017bc4:	2104      	movs	r1, #4
 8017bc6:	0018      	movs	r0, r3
 8017bc8:	f7ff fdfd 	bl	80177c6 <LL_GPIO_SetPinSpeed>
 8017bcc:	23a0      	movs	r3, #160	; 0xa0
 8017bce:	05db      	lsls	r3, r3, #23
 8017bd0:	2200      	movs	r2, #0
 8017bd2:	2104      	movs	r1, #4
 8017bd4:	0018      	movs	r0, r3
 8017bd6:	f7ff fde1 	bl	801779c <LL_GPIO_SetPinOutputType>
 8017bda:	23a0      	movs	r3, #160	; 0xa0
 8017bdc:	05db      	lsls	r3, r3, #23
 8017bde:	2201      	movs	r2, #1
 8017be0:	2104      	movs	r1, #4
 8017be2:	0018      	movs	r0, r3
 8017be4:	f7ff fe0b 	bl	80177fe <LL_GPIO_SetPinPull>
 8017be8:	23a0      	movs	r3, #160	; 0xa0
 8017bea:	05db      	lsls	r3, r3, #23
 8017bec:	2206      	movs	r2, #6
 8017bee:	2108      	movs	r1, #8
 8017bf0:	0018      	movs	r0, r3
 8017bf2:	f7ff fe20 	bl	8017836 <LL_GPIO_SetAFPin_0_7>
 8017bf6:	23a0      	movs	r3, #160	; 0xa0
 8017bf8:	05db      	lsls	r3, r3, #23
 8017bfa:	2202      	movs	r2, #2
 8017bfc:	2108      	movs	r1, #8
 8017bfe:	0018      	movs	r0, r3
 8017c00:	f7ff fdb0 	bl	8017764 <LL_GPIO_SetPinMode>
 8017c04:	23a0      	movs	r3, #160	; 0xa0
 8017c06:	05db      	lsls	r3, r3, #23
 8017c08:	2202      	movs	r2, #2
 8017c0a:	2108      	movs	r1, #8
 8017c0c:	0018      	movs	r0, r3
 8017c0e:	f7ff fdda 	bl	80177c6 <LL_GPIO_SetPinSpeed>
 8017c12:	23a0      	movs	r3, #160	; 0xa0
 8017c14:	05db      	lsls	r3, r3, #23
 8017c16:	2200      	movs	r2, #0
 8017c18:	2108      	movs	r1, #8
 8017c1a:	0018      	movs	r0, r3
 8017c1c:	f7ff fdbe 	bl	801779c <LL_GPIO_SetPinOutputType>
 8017c20:	23a0      	movs	r3, #160	; 0xa0
 8017c22:	05db      	lsls	r3, r3, #23
 8017c24:	2201      	movs	r2, #1
 8017c26:	2108      	movs	r1, #8
 8017c28:	0018      	movs	r0, r3
 8017c2a:	f7ff fde8 	bl	80177fe <LL_GPIO_SetPinPull>
 8017c2e:	2380      	movs	r3, #128	; 0x80
 8017c30:	035b      	lsls	r3, r3, #13
 8017c32:	0018      	movs	r0, r3
 8017c34:	f7ff fd58 	bl	80176e8 <LL_APB1_GRP1_EnableClock>
 8017c38:	4b31      	ldr	r3, [pc, #196]	; (8017d00 <HW_TRACER_EMB_Init+0x170>)
 8017c3a:	0018      	movs	r0, r3
 8017c3c:	f7ff fe2c 	bl	8017898 <LL_LPUART_Disable>
 8017c40:	003b      	movs	r3, r7
 8017c42:	2200      	movs	r2, #0
 8017c44:	601a      	str	r2, [r3, #0]
 8017c46:	003b      	movs	r3, r7
 8017c48:	22e1      	movs	r2, #225	; 0xe1
 8017c4a:	0312      	lsls	r2, r2, #12
 8017c4c:	605a      	str	r2, [r3, #4]
 8017c4e:	003b      	movs	r3, r7
 8017c50:	2200      	movs	r2, #0
 8017c52:	609a      	str	r2, [r3, #8]
 8017c54:	003b      	movs	r3, r7
 8017c56:	2200      	movs	r2, #0
 8017c58:	60da      	str	r2, [r3, #12]
 8017c5a:	003b      	movs	r3, r7
 8017c5c:	2200      	movs	r2, #0
 8017c5e:	611a      	str	r2, [r3, #16]
 8017c60:	003b      	movs	r3, r7
 8017c62:	2208      	movs	r2, #8
 8017c64:	615a      	str	r2, [r3, #20]
 8017c66:	003b      	movs	r3, r7
 8017c68:	2200      	movs	r2, #0
 8017c6a:	619a      	str	r2, [r3, #24]
 8017c6c:	003b      	movs	r3, r7
 8017c6e:	4a24      	ldr	r2, [pc, #144]	; (8017d00 <HW_TRACER_EMB_Init+0x170>)
 8017c70:	0019      	movs	r1, r3
 8017c72:	0010      	movs	r0, r2
 8017c74:	f7f2 fd14 	bl	800a6a0 <LL_LPUART_Init>
 8017c78:	4b21      	ldr	r3, [pc, #132]	; (8017d00 <HW_TRACER_EMB_Init+0x170>)
 8017c7a:	0018      	movs	r0, r3
 8017c7c:	f7ff fdfe 	bl	801787c <LL_LPUART_Enable>
 8017c80:	4b1f      	ldr	r3, [pc, #124]	; (8017d00 <HW_TRACER_EMB_Init+0x170>)
 8017c82:	0018      	movs	r0, r3
 8017c84:	f7ff fe36 	bl	80178f4 <LL_LPUART_IsActiveFlag_TEACK>
 8017c88:	0003      	movs	r3, r0
 8017c8a:	61fb      	str	r3, [r7, #28]
 8017c8c:	e005      	b.n	8017c9a <HW_TRACER_EMB_Init+0x10a>
 8017c8e:	4b1c      	ldr	r3, [pc, #112]	; (8017d00 <HW_TRACER_EMB_Init+0x170>)
 8017c90:	0018      	movs	r0, r3
 8017c92:	f7ff fe2f 	bl	80178f4 <LL_LPUART_IsActiveFlag_TEACK>
 8017c96:	0003      	movs	r3, r0
 8017c98:	61fb      	str	r3, [r7, #28]
 8017c9a:	69fb      	ldr	r3, [r7, #28]
 8017c9c:	2b00      	cmp	r3, #0
 8017c9e:	d0f6      	beq.n	8017c8e <HW_TRACER_EMB_Init+0xfe>
 8017ca0:	2001      	movs	r0, #1
 8017ca2:	f7ff fd0b 	bl	80176bc <LL_AHB1_GRP1_EnableClock>
 8017ca6:	4a17      	ldr	r2, [pc, #92]	; (8017d04 <HW_TRACER_EMB_Init+0x174>)
 8017ca8:	4b17      	ldr	r3, [pc, #92]	; (8017d08 <HW_TRACER_EMB_Init+0x178>)
 8017caa:	2102      	movs	r1, #2
 8017cac:	0018      	movs	r0, r3
 8017cae:	f7ff fbff 	bl	80174b0 <LL_DMA_ConfigTransfer>
 8017cb2:	4b15      	ldr	r3, [pc, #84]	; (8017d08 <HW_TRACER_EMB_Init+0x178>)
 8017cb4:	220f      	movs	r2, #15
 8017cb6:	2102      	movs	r1, #2
 8017cb8:	0018      	movs	r0, r3
 8017cba:	f7ff fc93 	bl	80175e4 <LL_DMA_SetPeriphRequest>
 8017cbe:	4b12      	ldr	r3, [pc, #72]	; (8017d08 <HW_TRACER_EMB_Init+0x178>)
 8017cc0:	2102      	movs	r1, #2
 8017cc2:	0018      	movs	r0, r3
 8017cc4:	f7ff fcda 	bl	801767c <LL_DMA_EnableIT_TC>
 8017cc8:	2100      	movs	r1, #0
 8017cca:	200a      	movs	r0, #10
 8017ccc:	f7ff fb42 	bl	8017354 <__NVIC_SetPriority>
 8017cd0:	200a      	movs	r0, #10
 8017cd2:	f7ff fb25 	bl	8017320 <__NVIC_EnableIRQ>
 8017cd6:	2103      	movs	r1, #3
 8017cd8:	201d      	movs	r0, #29
 8017cda:	f7ff fb3b 	bl	8017354 <__NVIC_SetPriority>
 8017cde:	201d      	movs	r0, #29
 8017ce0:	f7ff fb1e 	bl	8017320 <__NVIC_EnableIRQ>
 8017ce4:	4b09      	ldr	r3, [pc, #36]	; (8017d0c <HW_TRACER_EMB_Init+0x17c>)
 8017ce6:	681b      	ldr	r3, [r3, #0]
 8017ce8:	2b00      	cmp	r3, #0
 8017cea:	d105      	bne.n	8017cf8 <HW_TRACER_EMB_Init+0x168>
 8017cec:	2380      	movs	r3, #128	; 0x80
 8017cee:	035b      	lsls	r3, r3, #13
 8017cf0:	0018      	movs	r0, r3
 8017cf2:	f7ff fd0f 	bl	8017714 <LL_APB1_GRP1_DisableClock>
 8017cf6:	46c0      	nop			; (mov r8, r8)
 8017cf8:	46c0      	nop			; (mov r8, r8)
 8017cfa:	46bd      	mov	sp, r7
 8017cfc:	b008      	add	sp, #32
 8017cfe:	bd80      	pop	{r7, pc}
 8017d00:	40008000 	.word	0x40008000
 8017d04:	00002090 	.word	0x00002090
 8017d08:	40020000 	.word	0x40020000
 8017d0c:	20003374 	.word	0x20003374

08017d10 <HW_TRACER_EMB_RegisterRxCallback>:
 8017d10:	b580      	push	{r7, lr}
 8017d12:	b082      	sub	sp, #8
 8017d14:	af00      	add	r7, sp, #0
 8017d16:	6078      	str	r0, [r7, #4]
 8017d18:	4b05      	ldr	r3, [pc, #20]	; (8017d30 <HW_TRACER_EMB_RegisterRxCallback+0x20>)
 8017d1a:	687a      	ldr	r2, [r7, #4]
 8017d1c:	601a      	str	r2, [r3, #0]
 8017d1e:	2380      	movs	r3, #128	; 0x80
 8017d20:	035b      	lsls	r3, r3, #13
 8017d22:	0018      	movs	r0, r3
 8017d24:	f7ff fce0 	bl	80176e8 <LL_APB1_GRP1_EnableClock>
 8017d28:	46c0      	nop			; (mov r8, r8)
 8017d2a:	46bd      	mov	sp, r7
 8017d2c:	b002      	add	sp, #8
 8017d2e:	bd80      	pop	{r7, pc}
 8017d30:	20003374 	.word	0x20003374

08017d34 <HW_TRACER_EMB_StartRX>:
 8017d34:	b580      	push	{r7, lr}
 8017d36:	af00      	add	r7, sp, #0
 8017d38:	4b0a      	ldr	r3, [pc, #40]	; (8017d64 <HW_TRACER_EMB_StartRX+0x30>)
 8017d3a:	0018      	movs	r0, r3
 8017d3c:	f7ff fe25 	bl	801798a <LL_LPUART_EnableIT_RXNE_RXFNE>
 8017d40:	4b08      	ldr	r3, [pc, #32]	; (8017d64 <HW_TRACER_EMB_StartRX+0x30>)
 8017d42:	0018      	movs	r0, r3
 8017d44:	f7ff fe5f 	bl	8017a06 <LL_LPUART_EnableIT_ERROR>
 8017d48:	4b06      	ldr	r3, [pc, #24]	; (8017d64 <HW_TRACER_EMB_StartRX+0x30>)
 8017d4a:	0018      	movs	r0, r3
 8017d4c:	f7ff fdb3 	bl	80178b6 <LL_LPUART_EnableDirectionRx>
 8017d50:	2103      	movs	r1, #3
 8017d52:	201d      	movs	r0, #29
 8017d54:	f7ff fafe 	bl	8017354 <__NVIC_SetPriority>
 8017d58:	201d      	movs	r0, #29
 8017d5a:	f7ff fae1 	bl	8017320 <__NVIC_EnableIRQ>
 8017d5e:	46c0      	nop			; (mov r8, r8)
 8017d60:	46bd      	mov	sp, r7
 8017d62:	bd80      	pop	{r7, pc}
 8017d64:	40008000 	.word	0x40008000

08017d68 <HW_TRACER_EMB_IRQHandlerDMA>:
 8017d68:	b580      	push	{r7, lr}
 8017d6a:	af00      	add	r7, sp, #0
 8017d6c:	4b08      	ldr	r3, [pc, #32]	; (8017d90 <HW_TRACER_EMB_IRQHandlerDMA+0x28>)
 8017d6e:	0018      	movs	r0, r3
 8017d70:	f7ff fc64 	bl	801763c <LL_DMA_IsActiveFlag_TC3>
 8017d74:	0003      	movs	r3, r0
 8017d76:	2b01      	cmp	r3, #1
 8017d78:	d107      	bne.n	8017d8a <HW_TRACER_EMB_IRQHandlerDMA+0x22>
 8017d7a:	4b06      	ldr	r3, [pc, #24]	; (8017d94 <HW_TRACER_EMB_IRQHandlerDMA+0x2c>)
 8017d7c:	0018      	movs	r0, r3
 8017d7e:	f7ff fe23 	bl	80179c8 <LL_LPUART_EnableIT_TC>
 8017d82:	4b03      	ldr	r3, [pc, #12]	; (8017d90 <HW_TRACER_EMB_IRQHandlerDMA+0x28>)
 8017d84:	0018      	movs	r0, r3
 8017d86:	f7ff fc6d 	bl	8017664 <LL_DMA_ClearFlag_GI3>
 8017d8a:	46c0      	nop			; (mov r8, r8)
 8017d8c:	46bd      	mov	sp, r7
 8017d8e:	bd80      	pop	{r7, pc}
 8017d90:	40020000 	.word	0x40020000
 8017d94:	40008000 	.word	0x40008000

08017d98 <HW_TRACER_EMB_IRQHandlerUSART>:
 8017d98:	b580      	push	{r7, lr}
 8017d9a:	b086      	sub	sp, #24
 8017d9c:	af00      	add	r7, sp, #0
 8017d9e:	2317      	movs	r3, #23
 8017da0:	18fb      	adds	r3, r7, r3
 8017da2:	2200      	movs	r2, #0
 8017da4:	701a      	strb	r2, [r3, #0]
 8017da6:	4b60      	ldr	r3, [pc, #384]	; (8017f28 <HW_TRACER_EMB_IRQHandlerUSART+0x190>)
 8017da8:	69db      	ldr	r3, [r3, #28]
 8017daa:	613b      	str	r3, [r7, #16]
 8017dac:	4b5e      	ldr	r3, [pc, #376]	; (8017f28 <HW_TRACER_EMB_IRQHandlerUSART+0x190>)
 8017dae:	0018      	movs	r0, r3
 8017db0:	f7ff fe68 	bl	8017a84 <LL_LPUART_IsEnabledIT_RXNE_RXFNE>
 8017db4:	0003      	movs	r3, r0
 8017db6:	60fb      	str	r3, [r7, #12]
 8017db8:	68fb      	ldr	r3, [r7, #12]
 8017dba:	2b01      	cmp	r3, #1
 8017dbc:	d000      	beq.n	8017dc0 <HW_TRACER_EMB_IRQHandlerUSART+0x28>
 8017dbe:	e087      	b.n	8017ed0 <HW_TRACER_EMB_IRQHandlerUSART+0x138>
 8017dc0:	693b      	ldr	r3, [r7, #16]
 8017dc2:	220f      	movs	r2, #15
 8017dc4:	4013      	ands	r3, r2
 8017dc6:	60bb      	str	r3, [r7, #8]
 8017dc8:	693b      	ldr	r3, [r7, #16]
 8017dca:	2220      	movs	r2, #32
 8017dcc:	4013      	ands	r3, r2
 8017dce:	d015      	beq.n	8017dfc <HW_TRACER_EMB_IRQHandlerUSART+0x64>
 8017dd0:	68bb      	ldr	r3, [r7, #8]
 8017dd2:	2b00      	cmp	r3, #0
 8017dd4:	d112      	bne.n	8017dfc <HW_TRACER_EMB_IRQHandlerUSART+0x64>
 8017dd6:	4b54      	ldr	r3, [pc, #336]	; (8017f28 <HW_TRACER_EMB_IRQHandlerUSART+0x190>)
 8017dd8:	0018      	movs	r0, r3
 8017dda:	f7ff fecd 	bl	8017b78 <LL_LPUART_ReceiveData8>
 8017dde:	0003      	movs	r3, r0
 8017de0:	603b      	str	r3, [r7, #0]
 8017de2:	4b52      	ldr	r3, [pc, #328]	; (8017f2c <HW_TRACER_EMB_IRQHandlerUSART+0x194>)
 8017de4:	681b      	ldr	r3, [r3, #0]
 8017de6:	2b00      	cmp	r3, #0
 8017de8:	d100      	bne.n	8017dec <HW_TRACER_EMB_IRQHandlerUSART+0x54>
 8017dea:	e097      	b.n	8017f1c <HW_TRACER_EMB_IRQHandlerUSART+0x184>
 8017dec:	4b4f      	ldr	r3, [pc, #316]	; (8017f2c <HW_TRACER_EMB_IRQHandlerUSART+0x194>)
 8017dee:	681b      	ldr	r3, [r3, #0]
 8017df0:	683a      	ldr	r2, [r7, #0]
 8017df2:	b2d2      	uxtb	r2, r2
 8017df4:	2100      	movs	r1, #0
 8017df6:	0010      	movs	r0, r2
 8017df8:	4798      	blx	r3
 8017dfa:	e08f      	b.n	8017f1c <HW_TRACER_EMB_IRQHandlerUSART+0x184>
 8017dfc:	68bb      	ldr	r3, [r7, #8]
 8017dfe:	2b00      	cmp	r3, #0
 8017e00:	d066      	beq.n	8017ed0 <HW_TRACER_EMB_IRQHandlerUSART+0x138>
 8017e02:	693b      	ldr	r3, [r7, #16]
 8017e04:	2220      	movs	r2, #32
 8017e06:	4013      	ands	r3, r2
 8017e08:	d012      	beq.n	8017e30 <HW_TRACER_EMB_IRQHandlerUSART+0x98>
 8017e0a:	4b47      	ldr	r3, [pc, #284]	; (8017f28 <HW_TRACER_EMB_IRQHandlerUSART+0x190>)
 8017e0c:	0018      	movs	r0, r3
 8017e0e:	f7ff feb3 	bl	8017b78 <LL_LPUART_ReceiveData8>
 8017e12:	0003      	movs	r3, r0
 8017e14:	603b      	str	r3, [r7, #0]
 8017e16:	4b45      	ldr	r3, [pc, #276]	; (8017f2c <HW_TRACER_EMB_IRQHandlerUSART+0x194>)
 8017e18:	681b      	ldr	r3, [r3, #0]
 8017e1a:	2b00      	cmp	r3, #0
 8017e1c:	d100      	bne.n	8017e20 <HW_TRACER_EMB_IRQHandlerUSART+0x88>
 8017e1e:	e07f      	b.n	8017f20 <HW_TRACER_EMB_IRQHandlerUSART+0x188>
 8017e20:	4b42      	ldr	r3, [pc, #264]	; (8017f2c <HW_TRACER_EMB_IRQHandlerUSART+0x194>)
 8017e22:	681b      	ldr	r3, [r3, #0]
 8017e24:	683a      	ldr	r2, [r7, #0]
 8017e26:	b2d2      	uxtb	r2, r2
 8017e28:	2100      	movs	r1, #0
 8017e2a:	0010      	movs	r0, r2
 8017e2c:	4798      	blx	r3
 8017e2e:	e077      	b.n	8017f20 <HW_TRACER_EMB_IRQHandlerUSART+0x188>
 8017e30:	4b3d      	ldr	r3, [pc, #244]	; (8017f28 <HW_TRACER_EMB_IRQHandlerUSART+0x190>)
 8017e32:	0018      	movs	r0, r3
 8017e34:	f7ff fe48 	bl	8017ac8 <LL_LPUART_IsEnabledIT_PE>
 8017e38:	0003      	movs	r3, r0
 8017e3a:	607b      	str	r3, [r7, #4]
 8017e3c:	687b      	ldr	r3, [r7, #4]
 8017e3e:	2b01      	cmp	r3, #1
 8017e40:	d10b      	bne.n	8017e5a <HW_TRACER_EMB_IRQHandlerUSART+0xc2>
 8017e42:	68bb      	ldr	r3, [r7, #8]
 8017e44:	2201      	movs	r2, #1
 8017e46:	4013      	ands	r3, r2
 8017e48:	d007      	beq.n	8017e5a <HW_TRACER_EMB_IRQHandlerUSART+0xc2>
 8017e4a:	4b37      	ldr	r3, [pc, #220]	; (8017f28 <HW_TRACER_EMB_IRQHandlerUSART+0x190>)
 8017e4c:	0018      	movs	r0, r3
 8017e4e:	f7ff fd65 	bl	801791c <LL_LPUART_ClearFlag_PE>
 8017e52:	2317      	movs	r3, #23
 8017e54:	18fb      	adds	r3, r7, r3
 8017e56:	2201      	movs	r2, #1
 8017e58:	701a      	strb	r2, [r3, #0]
 8017e5a:	4b33      	ldr	r3, [pc, #204]	; (8017f28 <HW_TRACER_EMB_IRQHandlerUSART+0x190>)
 8017e5c:	0018      	movs	r0, r3
 8017e5e:	f7ff fe47 	bl	8017af0 <LL_LPUART_IsEnabledIT_ERROR>
 8017e62:	0003      	movs	r3, r0
 8017e64:	607b      	str	r3, [r7, #4]
 8017e66:	687b      	ldr	r3, [r7, #4]
 8017e68:	2b01      	cmp	r3, #1
 8017e6a:	d123      	bne.n	8017eb4 <HW_TRACER_EMB_IRQHandlerUSART+0x11c>
 8017e6c:	68bb      	ldr	r3, [r7, #8]
 8017e6e:	2202      	movs	r2, #2
 8017e70:	4013      	ands	r3, r2
 8017e72:	d007      	beq.n	8017e84 <HW_TRACER_EMB_IRQHandlerUSART+0xec>
 8017e74:	4b2c      	ldr	r3, [pc, #176]	; (8017f28 <HW_TRACER_EMB_IRQHandlerUSART+0x190>)
 8017e76:	0018      	movs	r0, r3
 8017e78:	f7ff fd5b 	bl	8017932 <LL_LPUART_ClearFlag_FE>
 8017e7c:	2317      	movs	r3, #23
 8017e7e:	18fb      	adds	r3, r7, r3
 8017e80:	2201      	movs	r2, #1
 8017e82:	701a      	strb	r2, [r3, #0]
 8017e84:	68bb      	ldr	r3, [r7, #8]
 8017e86:	2208      	movs	r2, #8
 8017e88:	4013      	ands	r3, r2
 8017e8a:	d007      	beq.n	8017e9c <HW_TRACER_EMB_IRQHandlerUSART+0x104>
 8017e8c:	4b26      	ldr	r3, [pc, #152]	; (8017f28 <HW_TRACER_EMB_IRQHandlerUSART+0x190>)
 8017e8e:	0018      	movs	r0, r3
 8017e90:	f7ff fd65 	bl	801795e <LL_LPUART_ClearFlag_ORE>
 8017e94:	2317      	movs	r3, #23
 8017e96:	18fb      	adds	r3, r7, r3
 8017e98:	2201      	movs	r2, #1
 8017e9a:	701a      	strb	r2, [r3, #0]
 8017e9c:	68bb      	ldr	r3, [r7, #8]
 8017e9e:	2204      	movs	r2, #4
 8017ea0:	4013      	ands	r3, r2
 8017ea2:	d007      	beq.n	8017eb4 <HW_TRACER_EMB_IRQHandlerUSART+0x11c>
 8017ea4:	4b20      	ldr	r3, [pc, #128]	; (8017f28 <HW_TRACER_EMB_IRQHandlerUSART+0x190>)
 8017ea6:	0018      	movs	r0, r3
 8017ea8:	f7ff fd4e 	bl	8017948 <LL_LPUART_ClearFlag_NE>
 8017eac:	2317      	movs	r3, #23
 8017eae:	18fb      	adds	r3, r7, r3
 8017eb0:	2201      	movs	r2, #1
 8017eb2:	701a      	strb	r2, [r3, #0]
 8017eb4:	2317      	movs	r3, #23
 8017eb6:	18fb      	adds	r3, r7, r3
 8017eb8:	781b      	ldrb	r3, [r3, #0]
 8017eba:	2b01      	cmp	r3, #1
 8017ebc:	d108      	bne.n	8017ed0 <HW_TRACER_EMB_IRQHandlerUSART+0x138>
 8017ebe:	4b1b      	ldr	r3, [pc, #108]	; (8017f2c <HW_TRACER_EMB_IRQHandlerUSART+0x194>)
 8017ec0:	681b      	ldr	r3, [r3, #0]
 8017ec2:	2b00      	cmp	r3, #0
 8017ec4:	d004      	beq.n	8017ed0 <HW_TRACER_EMB_IRQHandlerUSART+0x138>
 8017ec6:	4b19      	ldr	r3, [pc, #100]	; (8017f2c <HW_TRACER_EMB_IRQHandlerUSART+0x194>)
 8017ec8:	681b      	ldr	r3, [r3, #0]
 8017eca:	2101      	movs	r1, #1
 8017ecc:	2001      	movs	r0, #1
 8017ece:	4798      	blx	r3
 8017ed0:	4b15      	ldr	r3, [pc, #84]	; (8017f28 <HW_TRACER_EMB_IRQHandlerUSART+0x190>)
 8017ed2:	0018      	movs	r0, r3
 8017ed4:	f7ff fde7 	bl	8017aa6 <LL_LPUART_IsEnabledIT_TC>
 8017ed8:	0003      	movs	r3, r0
 8017eda:	607b      	str	r3, [r7, #4]
 8017edc:	693b      	ldr	r3, [r7, #16]
 8017ede:	2240      	movs	r2, #64	; 0x40
 8017ee0:	4013      	ands	r3, r2
 8017ee2:	d01e      	beq.n	8017f22 <HW_TRACER_EMB_IRQHandlerUSART+0x18a>
 8017ee4:	687b      	ldr	r3, [r7, #4]
 8017ee6:	2b01      	cmp	r3, #1
 8017ee8:	d11b      	bne.n	8017f22 <HW_TRACER_EMB_IRQHandlerUSART+0x18a>
 8017eea:	4b0f      	ldr	r3, [pc, #60]	; (8017f28 <HW_TRACER_EMB_IRQHandlerUSART+0x190>)
 8017eec:	0018      	movs	r0, r3
 8017eee:	f7ff fda9 	bl	8017a44 <LL_LPUART_DisableIT_TC>
 8017ef2:	4b0d      	ldr	r3, [pc, #52]	; (8017f28 <HW_TRACER_EMB_IRQHandlerUSART+0x190>)
 8017ef4:	0018      	movs	r0, r3
 8017ef6:	f7ff fd3d 	bl	8017974 <LL_LPUART_ClearFlag_TC>
 8017efa:	4b0d      	ldr	r3, [pc, #52]	; (8017f30 <HW_TRACER_EMB_IRQHandlerUSART+0x198>)
 8017efc:	2102      	movs	r1, #2
 8017efe:	0018      	movs	r0, r3
 8017f00:	f7ff fab6 	bl	8017470 <LL_DMA_DisableChannel>
 8017f04:	4b09      	ldr	r3, [pc, #36]	; (8017f2c <HW_TRACER_EMB_IRQHandlerUSART+0x194>)
 8017f06:	681b      	ldr	r3, [r3, #0]
 8017f08:	2b00      	cmp	r3, #0
 8017f0a:	d104      	bne.n	8017f16 <HW_TRACER_EMB_IRQHandlerUSART+0x17e>
 8017f0c:	2380      	movs	r3, #128	; 0x80
 8017f0e:	035b      	lsls	r3, r3, #13
 8017f10:	0018      	movs	r0, r3
 8017f12:	f7ff fbff 	bl	8017714 <LL_APB1_GRP1_DisableClock>
 8017f16:	f7ff f8b7 	bl	8017088 <TRACER_EMB_CALLBACK_TX>
 8017f1a:	e002      	b.n	8017f22 <HW_TRACER_EMB_IRQHandlerUSART+0x18a>
 8017f1c:	46c0      	nop			; (mov r8, r8)
 8017f1e:	e000      	b.n	8017f22 <HW_TRACER_EMB_IRQHandlerUSART+0x18a>
 8017f20:	46c0      	nop			; (mov r8, r8)
 8017f22:	46bd      	mov	sp, r7
 8017f24:	b006      	add	sp, #24
 8017f26:	bd80      	pop	{r7, pc}
 8017f28:	40008000 	.word	0x40008000
 8017f2c:	20003374 	.word	0x20003374
 8017f30:	40020000 	.word	0x40020000

08017f34 <HW_TRACER_EMB_SendData>:
 8017f34:	b5b0      	push	{r4, r5, r7, lr}
 8017f36:	b084      	sub	sp, #16
 8017f38:	af02      	add	r7, sp, #8
 8017f3a:	6078      	str	r0, [r7, #4]
 8017f3c:	6039      	str	r1, [r7, #0]
 8017f3e:	2380      	movs	r3, #128	; 0x80
 8017f40:	035b      	lsls	r3, r3, #13
 8017f42:	0018      	movs	r0, r3
 8017f44:	f7ff fbd0 	bl	80176e8 <LL_APB1_GRP1_EnableClock>
 8017f48:	687c      	ldr	r4, [r7, #4]
 8017f4a:	4b13      	ldr	r3, [pc, #76]	; (8017f98 <HW_TRACER_EMB_SendData+0x64>)
 8017f4c:	2100      	movs	r1, #0
 8017f4e:	0018      	movs	r0, r3
 8017f50:	f7ff fdfe 	bl	8017b50 <LL_LPUART_DMA_GetRegAddr>
 8017f54:	0005      	movs	r5, r0
 8017f56:	4b11      	ldr	r3, [pc, #68]	; (8017f9c <HW_TRACER_EMB_SendData+0x68>)
 8017f58:	2102      	movs	r1, #2
 8017f5a:	0018      	movs	r0, r3
 8017f5c:	f7ff face 	bl	80174fc <LL_DMA_GetDataTransferDirection>
 8017f60:	0003      	movs	r3, r0
 8017f62:	480e      	ldr	r0, [pc, #56]	; (8017f9c <HW_TRACER_EMB_SendData+0x68>)
 8017f64:	9300      	str	r3, [sp, #0]
 8017f66:	002b      	movs	r3, r5
 8017f68:	0022      	movs	r2, r4
 8017f6a:	2102      	movs	r1, #2
 8017f6c:	f7ff fb02 	bl	8017574 <LL_DMA_ConfigAddresses>
 8017f70:	683b      	ldr	r3, [r7, #0]
 8017f72:	480a      	ldr	r0, [pc, #40]	; (8017f9c <HW_TRACER_EMB_SendData+0x68>)
 8017f74:	001a      	movs	r2, r3
 8017f76:	2102      	movs	r1, #2
 8017f78:	f7ff fada 	bl	8017530 <LL_DMA_SetDataLength>
 8017f7c:	4b06      	ldr	r3, [pc, #24]	; (8017f98 <HW_TRACER_EMB_SendData+0x64>)
 8017f7e:	0018      	movs	r0, r3
 8017f80:	f7ff fdc7 	bl	8017b12 <LL_LPUART_EnableDMAReq_TX>
 8017f84:	4b05      	ldr	r3, [pc, #20]	; (8017f9c <HW_TRACER_EMB_SendData+0x68>)
 8017f86:	2102      	movs	r1, #2
 8017f88:	0018      	movs	r0, r3
 8017f8a:	f7ff fa51 	bl	8017430 <LL_DMA_EnableChannel>
 8017f8e:	46c0      	nop			; (mov r8, r8)
 8017f90:	46bd      	mov	sp, r7
 8017f92:	b002      	add	sp, #8
 8017f94:	bdb0      	pop	{r4, r5, r7, pc}
 8017f96:	46c0      	nop			; (mov r8, r8)
 8017f98:	40008000 	.word	0x40008000
 8017f9c:	40020000 	.word	0x40020000

08017fa0 <malloc>:
 8017fa0:	b510      	push	{r4, lr}
 8017fa2:	4b03      	ldr	r3, [pc, #12]	; (8017fb0 <malloc+0x10>)
 8017fa4:	0001      	movs	r1, r0
 8017fa6:	6818      	ldr	r0, [r3, #0]
 8017fa8:	f000 f826 	bl	8017ff8 <_malloc_r>
 8017fac:	bd10      	pop	{r4, pc}
 8017fae:	46c0      	nop			; (mov r8, r8)
 8017fb0:	20000108 	.word	0x20000108

08017fb4 <sbrk_aligned>:
 8017fb4:	b570      	push	{r4, r5, r6, lr}
 8017fb6:	4e0f      	ldr	r6, [pc, #60]	; (8017ff4 <sbrk_aligned+0x40>)
 8017fb8:	000d      	movs	r5, r1
 8017fba:	6831      	ldr	r1, [r6, #0]
 8017fbc:	0004      	movs	r4, r0
 8017fbe:	2900      	cmp	r1, #0
 8017fc0:	d102      	bne.n	8017fc8 <sbrk_aligned+0x14>
 8017fc2:	f000 f965 	bl	8018290 <_sbrk_r>
 8017fc6:	6030      	str	r0, [r6, #0]
 8017fc8:	0029      	movs	r1, r5
 8017fca:	0020      	movs	r0, r4
 8017fcc:	f000 f960 	bl	8018290 <_sbrk_r>
 8017fd0:	1c43      	adds	r3, r0, #1
 8017fd2:	d00a      	beq.n	8017fea <sbrk_aligned+0x36>
 8017fd4:	2303      	movs	r3, #3
 8017fd6:	1cc5      	adds	r5, r0, #3
 8017fd8:	439d      	bics	r5, r3
 8017fda:	42a8      	cmp	r0, r5
 8017fdc:	d007      	beq.n	8017fee <sbrk_aligned+0x3a>
 8017fde:	1a29      	subs	r1, r5, r0
 8017fe0:	0020      	movs	r0, r4
 8017fe2:	f000 f955 	bl	8018290 <_sbrk_r>
 8017fe6:	3001      	adds	r0, #1
 8017fe8:	d101      	bne.n	8017fee <sbrk_aligned+0x3a>
 8017fea:	2501      	movs	r5, #1
 8017fec:	426d      	negs	r5, r5
 8017fee:	0028      	movs	r0, r5
 8017ff0:	bd70      	pop	{r4, r5, r6, pc}
 8017ff2:	46c0      	nop			; (mov r8, r8)
 8017ff4:	2000337c 	.word	0x2000337c

08017ff8 <_malloc_r>:
 8017ff8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8017ffa:	2203      	movs	r2, #3
 8017ffc:	1ccb      	adds	r3, r1, #3
 8017ffe:	4393      	bics	r3, r2
 8018000:	3308      	adds	r3, #8
 8018002:	0006      	movs	r6, r0
 8018004:	001f      	movs	r7, r3
 8018006:	2b0c      	cmp	r3, #12
 8018008:	d238      	bcs.n	801807c <_malloc_r+0x84>
 801800a:	270c      	movs	r7, #12
 801800c:	42b9      	cmp	r1, r7
 801800e:	d837      	bhi.n	8018080 <_malloc_r+0x88>
 8018010:	0030      	movs	r0, r6
 8018012:	f000 f873 	bl	80180fc <__malloc_lock>
 8018016:	4b38      	ldr	r3, [pc, #224]	; (80180f8 <_malloc_r+0x100>)
 8018018:	9300      	str	r3, [sp, #0]
 801801a:	681b      	ldr	r3, [r3, #0]
 801801c:	001c      	movs	r4, r3
 801801e:	2c00      	cmp	r4, #0
 8018020:	d133      	bne.n	801808a <_malloc_r+0x92>
 8018022:	0039      	movs	r1, r7
 8018024:	0030      	movs	r0, r6
 8018026:	f7ff ffc5 	bl	8017fb4 <sbrk_aligned>
 801802a:	0004      	movs	r4, r0
 801802c:	1c43      	adds	r3, r0, #1
 801802e:	d15e      	bne.n	80180ee <_malloc_r+0xf6>
 8018030:	9b00      	ldr	r3, [sp, #0]
 8018032:	681c      	ldr	r4, [r3, #0]
 8018034:	0025      	movs	r5, r4
 8018036:	2d00      	cmp	r5, #0
 8018038:	d14e      	bne.n	80180d8 <_malloc_r+0xe0>
 801803a:	2c00      	cmp	r4, #0
 801803c:	d051      	beq.n	80180e2 <_malloc_r+0xea>
 801803e:	6823      	ldr	r3, [r4, #0]
 8018040:	0029      	movs	r1, r5
 8018042:	18e3      	adds	r3, r4, r3
 8018044:	0030      	movs	r0, r6
 8018046:	9301      	str	r3, [sp, #4]
 8018048:	f000 f922 	bl	8018290 <_sbrk_r>
 801804c:	9b01      	ldr	r3, [sp, #4]
 801804e:	4283      	cmp	r3, r0
 8018050:	d147      	bne.n	80180e2 <_malloc_r+0xea>
 8018052:	6823      	ldr	r3, [r4, #0]
 8018054:	0030      	movs	r0, r6
 8018056:	1aff      	subs	r7, r7, r3
 8018058:	0039      	movs	r1, r7
 801805a:	f7ff ffab 	bl	8017fb4 <sbrk_aligned>
 801805e:	3001      	adds	r0, #1
 8018060:	d03f      	beq.n	80180e2 <_malloc_r+0xea>
 8018062:	6823      	ldr	r3, [r4, #0]
 8018064:	19db      	adds	r3, r3, r7
 8018066:	6023      	str	r3, [r4, #0]
 8018068:	9b00      	ldr	r3, [sp, #0]
 801806a:	681b      	ldr	r3, [r3, #0]
 801806c:	2b00      	cmp	r3, #0
 801806e:	d040      	beq.n	80180f2 <_malloc_r+0xfa>
 8018070:	685a      	ldr	r2, [r3, #4]
 8018072:	42a2      	cmp	r2, r4
 8018074:	d133      	bne.n	80180de <_malloc_r+0xe6>
 8018076:	2200      	movs	r2, #0
 8018078:	605a      	str	r2, [r3, #4]
 801807a:	e014      	b.n	80180a6 <_malloc_r+0xae>
 801807c:	2b00      	cmp	r3, #0
 801807e:	dac5      	bge.n	801800c <_malloc_r+0x14>
 8018080:	230c      	movs	r3, #12
 8018082:	2500      	movs	r5, #0
 8018084:	6033      	str	r3, [r6, #0]
 8018086:	0028      	movs	r0, r5
 8018088:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 801808a:	6821      	ldr	r1, [r4, #0]
 801808c:	1bc9      	subs	r1, r1, r7
 801808e:	d420      	bmi.n	80180d2 <_malloc_r+0xda>
 8018090:	290b      	cmp	r1, #11
 8018092:	d918      	bls.n	80180c6 <_malloc_r+0xce>
 8018094:	19e2      	adds	r2, r4, r7
 8018096:	6027      	str	r7, [r4, #0]
 8018098:	42a3      	cmp	r3, r4
 801809a:	d112      	bne.n	80180c2 <_malloc_r+0xca>
 801809c:	9b00      	ldr	r3, [sp, #0]
 801809e:	601a      	str	r2, [r3, #0]
 80180a0:	6863      	ldr	r3, [r4, #4]
 80180a2:	6011      	str	r1, [r2, #0]
 80180a4:	6053      	str	r3, [r2, #4]
 80180a6:	0030      	movs	r0, r6
 80180a8:	0025      	movs	r5, r4
 80180aa:	f000 f82f 	bl	801810c <__malloc_unlock>
 80180ae:	2207      	movs	r2, #7
 80180b0:	350b      	adds	r5, #11
 80180b2:	1d23      	adds	r3, r4, #4
 80180b4:	4395      	bics	r5, r2
 80180b6:	1aea      	subs	r2, r5, r3
 80180b8:	429d      	cmp	r5, r3
 80180ba:	d0e4      	beq.n	8018086 <_malloc_r+0x8e>
 80180bc:	1b5b      	subs	r3, r3, r5
 80180be:	50a3      	str	r3, [r4, r2]
 80180c0:	e7e1      	b.n	8018086 <_malloc_r+0x8e>
 80180c2:	605a      	str	r2, [r3, #4]
 80180c4:	e7ec      	b.n	80180a0 <_malloc_r+0xa8>
 80180c6:	6862      	ldr	r2, [r4, #4]
 80180c8:	42a3      	cmp	r3, r4
 80180ca:	d1d5      	bne.n	8018078 <_malloc_r+0x80>
 80180cc:	9b00      	ldr	r3, [sp, #0]
 80180ce:	601a      	str	r2, [r3, #0]
 80180d0:	e7e9      	b.n	80180a6 <_malloc_r+0xae>
 80180d2:	0023      	movs	r3, r4
 80180d4:	6864      	ldr	r4, [r4, #4]
 80180d6:	e7a2      	b.n	801801e <_malloc_r+0x26>
 80180d8:	002c      	movs	r4, r5
 80180da:	686d      	ldr	r5, [r5, #4]
 80180dc:	e7ab      	b.n	8018036 <_malloc_r+0x3e>
 80180de:	0013      	movs	r3, r2
 80180e0:	e7c4      	b.n	801806c <_malloc_r+0x74>
 80180e2:	230c      	movs	r3, #12
 80180e4:	0030      	movs	r0, r6
 80180e6:	6033      	str	r3, [r6, #0]
 80180e8:	f000 f810 	bl	801810c <__malloc_unlock>
 80180ec:	e7cb      	b.n	8018086 <_malloc_r+0x8e>
 80180ee:	6027      	str	r7, [r4, #0]
 80180f0:	e7d9      	b.n	80180a6 <_malloc_r+0xae>
 80180f2:	605b      	str	r3, [r3, #4]
 80180f4:	deff      	udf	#255	; 0xff
 80180f6:	46c0      	nop			; (mov r8, r8)
 80180f8:	20003378 	.word	0x20003378

080180fc <__malloc_lock>:
 80180fc:	b510      	push	{r4, lr}
 80180fe:	4802      	ldr	r0, [pc, #8]	; (8018108 <__malloc_lock+0xc>)
 8018100:	f000 f902 	bl	8018308 <__retarget_lock_acquire_recursive>
 8018104:	bd10      	pop	{r4, pc}
 8018106:	46c0      	nop			; (mov r8, r8)
 8018108:	200034bc 	.word	0x200034bc

0801810c <__malloc_unlock>:
 801810c:	b510      	push	{r4, lr}
 801810e:	4802      	ldr	r0, [pc, #8]	; (8018118 <__malloc_unlock+0xc>)
 8018110:	f000 f8fb 	bl	801830a <__retarget_lock_release_recursive>
 8018114:	bd10      	pop	{r4, pc}
 8018116:	46c0      	nop			; (mov r8, r8)
 8018118:	200034bc 	.word	0x200034bc

0801811c <sniprintf>:
 801811c:	b40c      	push	{r2, r3}
 801811e:	b530      	push	{r4, r5, lr}
 8018120:	4b17      	ldr	r3, [pc, #92]	; (8018180 <sniprintf+0x64>)
 8018122:	000c      	movs	r4, r1
 8018124:	681d      	ldr	r5, [r3, #0]
 8018126:	b09d      	sub	sp, #116	; 0x74
 8018128:	2900      	cmp	r1, #0
 801812a:	da08      	bge.n	801813e <sniprintf+0x22>
 801812c:	238b      	movs	r3, #139	; 0x8b
 801812e:	2001      	movs	r0, #1
 8018130:	602b      	str	r3, [r5, #0]
 8018132:	4240      	negs	r0, r0
 8018134:	b01d      	add	sp, #116	; 0x74
 8018136:	bc30      	pop	{r4, r5}
 8018138:	bc08      	pop	{r3}
 801813a:	b002      	add	sp, #8
 801813c:	4718      	bx	r3
 801813e:	2382      	movs	r3, #130	; 0x82
 8018140:	466a      	mov	r2, sp
 8018142:	009b      	lsls	r3, r3, #2
 8018144:	8293      	strh	r3, [r2, #20]
 8018146:	2300      	movs	r3, #0
 8018148:	9002      	str	r0, [sp, #8]
 801814a:	9006      	str	r0, [sp, #24]
 801814c:	4299      	cmp	r1, r3
 801814e:	d000      	beq.n	8018152 <sniprintf+0x36>
 8018150:	1e4b      	subs	r3, r1, #1
 8018152:	9304      	str	r3, [sp, #16]
 8018154:	9307      	str	r3, [sp, #28]
 8018156:	2301      	movs	r3, #1
 8018158:	466a      	mov	r2, sp
 801815a:	425b      	negs	r3, r3
 801815c:	82d3      	strh	r3, [r2, #22]
 801815e:	0028      	movs	r0, r5
 8018160:	ab21      	add	r3, sp, #132	; 0x84
 8018162:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8018164:	a902      	add	r1, sp, #8
 8018166:	9301      	str	r3, [sp, #4]
 8018168:	f000 f996 	bl	8018498 <_svfiprintf_r>
 801816c:	1c43      	adds	r3, r0, #1
 801816e:	da01      	bge.n	8018174 <sniprintf+0x58>
 8018170:	238b      	movs	r3, #139	; 0x8b
 8018172:	602b      	str	r3, [r5, #0]
 8018174:	2c00      	cmp	r4, #0
 8018176:	d0dd      	beq.n	8018134 <sniprintf+0x18>
 8018178:	2200      	movs	r2, #0
 801817a:	9b02      	ldr	r3, [sp, #8]
 801817c:	701a      	strb	r2, [r3, #0]
 801817e:	e7d9      	b.n	8018134 <sniprintf+0x18>
 8018180:	20000108 	.word	0x20000108

08018184 <siprintf>:
 8018184:	b40e      	push	{r1, r2, r3}
 8018186:	b500      	push	{lr}
 8018188:	490b      	ldr	r1, [pc, #44]	; (80181b8 <siprintf+0x34>)
 801818a:	b09c      	sub	sp, #112	; 0x70
 801818c:	ab1d      	add	r3, sp, #116	; 0x74
 801818e:	9002      	str	r0, [sp, #8]
 8018190:	9006      	str	r0, [sp, #24]
 8018192:	9107      	str	r1, [sp, #28]
 8018194:	9104      	str	r1, [sp, #16]
 8018196:	4809      	ldr	r0, [pc, #36]	; (80181bc <siprintf+0x38>)
 8018198:	4909      	ldr	r1, [pc, #36]	; (80181c0 <siprintf+0x3c>)
 801819a:	cb04      	ldmia	r3!, {r2}
 801819c:	9105      	str	r1, [sp, #20]
 801819e:	6800      	ldr	r0, [r0, #0]
 80181a0:	a902      	add	r1, sp, #8
 80181a2:	9301      	str	r3, [sp, #4]
 80181a4:	f000 f978 	bl	8018498 <_svfiprintf_r>
 80181a8:	2200      	movs	r2, #0
 80181aa:	9b02      	ldr	r3, [sp, #8]
 80181ac:	701a      	strb	r2, [r3, #0]
 80181ae:	b01c      	add	sp, #112	; 0x70
 80181b0:	bc08      	pop	{r3}
 80181b2:	b003      	add	sp, #12
 80181b4:	4718      	bx	r3
 80181b6:	46c0      	nop			; (mov r8, r8)
 80181b8:	7fffffff 	.word	0x7fffffff
 80181bc:	20000108 	.word	0x20000108
 80181c0:	ffff0208 	.word	0xffff0208

080181c4 <memset>:
 80181c4:	0003      	movs	r3, r0
 80181c6:	1882      	adds	r2, r0, r2
 80181c8:	4293      	cmp	r3, r2
 80181ca:	d100      	bne.n	80181ce <memset+0xa>
 80181cc:	4770      	bx	lr
 80181ce:	7019      	strb	r1, [r3, #0]
 80181d0:	3301      	adds	r3, #1
 80181d2:	e7f9      	b.n	80181c8 <memset+0x4>

080181d4 <_reclaim_reent>:
 80181d4:	4b2d      	ldr	r3, [pc, #180]	; (801828c <_reclaim_reent+0xb8>)
 80181d6:	b570      	push	{r4, r5, r6, lr}
 80181d8:	681b      	ldr	r3, [r3, #0]
 80181da:	0004      	movs	r4, r0
 80181dc:	4283      	cmp	r3, r0
 80181de:	d042      	beq.n	8018266 <_reclaim_reent+0x92>
 80181e0:	69c3      	ldr	r3, [r0, #28]
 80181e2:	2b00      	cmp	r3, #0
 80181e4:	d00a      	beq.n	80181fc <_reclaim_reent+0x28>
 80181e6:	2500      	movs	r5, #0
 80181e8:	68db      	ldr	r3, [r3, #12]
 80181ea:	42ab      	cmp	r3, r5
 80181ec:	d140      	bne.n	8018270 <_reclaim_reent+0x9c>
 80181ee:	69e3      	ldr	r3, [r4, #28]
 80181f0:	6819      	ldr	r1, [r3, #0]
 80181f2:	2900      	cmp	r1, #0
 80181f4:	d002      	beq.n	80181fc <_reclaim_reent+0x28>
 80181f6:	0020      	movs	r0, r4
 80181f8:	f000 f8a2 	bl	8018340 <_free_r>
 80181fc:	6961      	ldr	r1, [r4, #20]
 80181fe:	2900      	cmp	r1, #0
 8018200:	d002      	beq.n	8018208 <_reclaim_reent+0x34>
 8018202:	0020      	movs	r0, r4
 8018204:	f000 f89c 	bl	8018340 <_free_r>
 8018208:	69e1      	ldr	r1, [r4, #28]
 801820a:	2900      	cmp	r1, #0
 801820c:	d002      	beq.n	8018214 <_reclaim_reent+0x40>
 801820e:	0020      	movs	r0, r4
 8018210:	f000 f896 	bl	8018340 <_free_r>
 8018214:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8018216:	2900      	cmp	r1, #0
 8018218:	d002      	beq.n	8018220 <_reclaim_reent+0x4c>
 801821a:	0020      	movs	r0, r4
 801821c:	f000 f890 	bl	8018340 <_free_r>
 8018220:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8018222:	2900      	cmp	r1, #0
 8018224:	d002      	beq.n	801822c <_reclaim_reent+0x58>
 8018226:	0020      	movs	r0, r4
 8018228:	f000 f88a 	bl	8018340 <_free_r>
 801822c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 801822e:	2900      	cmp	r1, #0
 8018230:	d002      	beq.n	8018238 <_reclaim_reent+0x64>
 8018232:	0020      	movs	r0, r4
 8018234:	f000 f884 	bl	8018340 <_free_r>
 8018238:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 801823a:	2900      	cmp	r1, #0
 801823c:	d002      	beq.n	8018244 <_reclaim_reent+0x70>
 801823e:	0020      	movs	r0, r4
 8018240:	f000 f87e 	bl	8018340 <_free_r>
 8018244:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8018246:	2900      	cmp	r1, #0
 8018248:	d002      	beq.n	8018250 <_reclaim_reent+0x7c>
 801824a:	0020      	movs	r0, r4
 801824c:	f000 f878 	bl	8018340 <_free_r>
 8018250:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8018252:	2900      	cmp	r1, #0
 8018254:	d002      	beq.n	801825c <_reclaim_reent+0x88>
 8018256:	0020      	movs	r0, r4
 8018258:	f000 f872 	bl	8018340 <_free_r>
 801825c:	6a23      	ldr	r3, [r4, #32]
 801825e:	2b00      	cmp	r3, #0
 8018260:	d001      	beq.n	8018266 <_reclaim_reent+0x92>
 8018262:	0020      	movs	r0, r4
 8018264:	4798      	blx	r3
 8018266:	bd70      	pop	{r4, r5, r6, pc}
 8018268:	5949      	ldr	r1, [r1, r5]
 801826a:	2900      	cmp	r1, #0
 801826c:	d108      	bne.n	8018280 <_reclaim_reent+0xac>
 801826e:	3504      	adds	r5, #4
 8018270:	69e3      	ldr	r3, [r4, #28]
 8018272:	68d9      	ldr	r1, [r3, #12]
 8018274:	2d80      	cmp	r5, #128	; 0x80
 8018276:	d1f7      	bne.n	8018268 <_reclaim_reent+0x94>
 8018278:	0020      	movs	r0, r4
 801827a:	f000 f861 	bl	8018340 <_free_r>
 801827e:	e7b6      	b.n	80181ee <_reclaim_reent+0x1a>
 8018280:	680e      	ldr	r6, [r1, #0]
 8018282:	0020      	movs	r0, r4
 8018284:	f000 f85c 	bl	8018340 <_free_r>
 8018288:	0031      	movs	r1, r6
 801828a:	e7ee      	b.n	801826a <_reclaim_reent+0x96>
 801828c:	20000108 	.word	0x20000108

08018290 <_sbrk_r>:
 8018290:	2300      	movs	r3, #0
 8018292:	b570      	push	{r4, r5, r6, lr}
 8018294:	4d06      	ldr	r5, [pc, #24]	; (80182b0 <_sbrk_r+0x20>)
 8018296:	0004      	movs	r4, r0
 8018298:	0008      	movs	r0, r1
 801829a:	602b      	str	r3, [r5, #0]
 801829c:	f7ef f860 	bl	8007360 <_sbrk>
 80182a0:	1c43      	adds	r3, r0, #1
 80182a2:	d103      	bne.n	80182ac <_sbrk_r+0x1c>
 80182a4:	682b      	ldr	r3, [r5, #0]
 80182a6:	2b00      	cmp	r3, #0
 80182a8:	d000      	beq.n	80182ac <_sbrk_r+0x1c>
 80182aa:	6023      	str	r3, [r4, #0]
 80182ac:	bd70      	pop	{r4, r5, r6, pc}
 80182ae:	46c0      	nop			; (mov r8, r8)
 80182b0:	200034b8 	.word	0x200034b8

080182b4 <__errno>:
 80182b4:	4b01      	ldr	r3, [pc, #4]	; (80182bc <__errno+0x8>)
 80182b6:	6818      	ldr	r0, [r3, #0]
 80182b8:	4770      	bx	lr
 80182ba:	46c0      	nop			; (mov r8, r8)
 80182bc:	20000108 	.word	0x20000108

080182c0 <__libc_init_array>:
 80182c0:	b570      	push	{r4, r5, r6, lr}
 80182c2:	2600      	movs	r6, #0
 80182c4:	4c0c      	ldr	r4, [pc, #48]	; (80182f8 <__libc_init_array+0x38>)
 80182c6:	4d0d      	ldr	r5, [pc, #52]	; (80182fc <__libc_init_array+0x3c>)
 80182c8:	1b64      	subs	r4, r4, r5
 80182ca:	10a4      	asrs	r4, r4, #2
 80182cc:	42a6      	cmp	r6, r4
 80182ce:	d109      	bne.n	80182e4 <__libc_init_array+0x24>
 80182d0:	2600      	movs	r6, #0
 80182d2:	f000 fbb7 	bl	8018a44 <_init>
 80182d6:	4c0a      	ldr	r4, [pc, #40]	; (8018300 <__libc_init_array+0x40>)
 80182d8:	4d0a      	ldr	r5, [pc, #40]	; (8018304 <__libc_init_array+0x44>)
 80182da:	1b64      	subs	r4, r4, r5
 80182dc:	10a4      	asrs	r4, r4, #2
 80182de:	42a6      	cmp	r6, r4
 80182e0:	d105      	bne.n	80182ee <__libc_init_array+0x2e>
 80182e2:	bd70      	pop	{r4, r5, r6, pc}
 80182e4:	00b3      	lsls	r3, r6, #2
 80182e6:	58eb      	ldr	r3, [r5, r3]
 80182e8:	4798      	blx	r3
 80182ea:	3601      	adds	r6, #1
 80182ec:	e7ee      	b.n	80182cc <__libc_init_array+0xc>
 80182ee:	00b3      	lsls	r3, r6, #2
 80182f0:	58eb      	ldr	r3, [r5, r3]
 80182f2:	4798      	blx	r3
 80182f4:	3601      	adds	r6, #1
 80182f6:	e7f2      	b.n	80182de <__libc_init_array+0x1e>
 80182f8:	0801a1f4 	.word	0x0801a1f4
 80182fc:	0801a1f4 	.word	0x0801a1f4
 8018300:	0801a1f8 	.word	0x0801a1f8
 8018304:	0801a1f4 	.word	0x0801a1f4

08018308 <__retarget_lock_acquire_recursive>:
 8018308:	4770      	bx	lr

0801830a <__retarget_lock_release_recursive>:
 801830a:	4770      	bx	lr

0801830c <__aeabi_memcpy>:
 801830c:	b510      	push	{r4, lr}
 801830e:	f000 f80d 	bl	801832c <memcpy>
 8018312:	bd10      	pop	{r4, pc}

08018314 <__aeabi_memset>:
 8018314:	000b      	movs	r3, r1
 8018316:	b510      	push	{r4, lr}
 8018318:	0011      	movs	r1, r2
 801831a:	001a      	movs	r2, r3
 801831c:	f7ff ff52 	bl	80181c4 <memset>
 8018320:	bd10      	pop	{r4, pc}

08018322 <__aeabi_memclr>:
 8018322:	b510      	push	{r4, lr}
 8018324:	2200      	movs	r2, #0
 8018326:	f7ff fff5 	bl	8018314 <__aeabi_memset>
 801832a:	bd10      	pop	{r4, pc}

0801832c <memcpy>:
 801832c:	2300      	movs	r3, #0
 801832e:	b510      	push	{r4, lr}
 8018330:	429a      	cmp	r2, r3
 8018332:	d100      	bne.n	8018336 <memcpy+0xa>
 8018334:	bd10      	pop	{r4, pc}
 8018336:	5ccc      	ldrb	r4, [r1, r3]
 8018338:	54c4      	strb	r4, [r0, r3]
 801833a:	3301      	adds	r3, #1
 801833c:	e7f8      	b.n	8018330 <memcpy+0x4>
	...

08018340 <_free_r>:
 8018340:	b570      	push	{r4, r5, r6, lr}
 8018342:	0005      	movs	r5, r0
 8018344:	2900      	cmp	r1, #0
 8018346:	d010      	beq.n	801836a <_free_r+0x2a>
 8018348:	1f0c      	subs	r4, r1, #4
 801834a:	6823      	ldr	r3, [r4, #0]
 801834c:	2b00      	cmp	r3, #0
 801834e:	da00      	bge.n	8018352 <_free_r+0x12>
 8018350:	18e4      	adds	r4, r4, r3
 8018352:	0028      	movs	r0, r5
 8018354:	f7ff fed2 	bl	80180fc <__malloc_lock>
 8018358:	4a1d      	ldr	r2, [pc, #116]	; (80183d0 <_free_r+0x90>)
 801835a:	6813      	ldr	r3, [r2, #0]
 801835c:	2b00      	cmp	r3, #0
 801835e:	d105      	bne.n	801836c <_free_r+0x2c>
 8018360:	6063      	str	r3, [r4, #4]
 8018362:	6014      	str	r4, [r2, #0]
 8018364:	0028      	movs	r0, r5
 8018366:	f7ff fed1 	bl	801810c <__malloc_unlock>
 801836a:	bd70      	pop	{r4, r5, r6, pc}
 801836c:	42a3      	cmp	r3, r4
 801836e:	d908      	bls.n	8018382 <_free_r+0x42>
 8018370:	6820      	ldr	r0, [r4, #0]
 8018372:	1821      	adds	r1, r4, r0
 8018374:	428b      	cmp	r3, r1
 8018376:	d1f3      	bne.n	8018360 <_free_r+0x20>
 8018378:	6819      	ldr	r1, [r3, #0]
 801837a:	685b      	ldr	r3, [r3, #4]
 801837c:	1809      	adds	r1, r1, r0
 801837e:	6021      	str	r1, [r4, #0]
 8018380:	e7ee      	b.n	8018360 <_free_r+0x20>
 8018382:	001a      	movs	r2, r3
 8018384:	685b      	ldr	r3, [r3, #4]
 8018386:	2b00      	cmp	r3, #0
 8018388:	d001      	beq.n	801838e <_free_r+0x4e>
 801838a:	42a3      	cmp	r3, r4
 801838c:	d9f9      	bls.n	8018382 <_free_r+0x42>
 801838e:	6811      	ldr	r1, [r2, #0]
 8018390:	1850      	adds	r0, r2, r1
 8018392:	42a0      	cmp	r0, r4
 8018394:	d10b      	bne.n	80183ae <_free_r+0x6e>
 8018396:	6820      	ldr	r0, [r4, #0]
 8018398:	1809      	adds	r1, r1, r0
 801839a:	1850      	adds	r0, r2, r1
 801839c:	6011      	str	r1, [r2, #0]
 801839e:	4283      	cmp	r3, r0
 80183a0:	d1e0      	bne.n	8018364 <_free_r+0x24>
 80183a2:	6818      	ldr	r0, [r3, #0]
 80183a4:	685b      	ldr	r3, [r3, #4]
 80183a6:	1841      	adds	r1, r0, r1
 80183a8:	6011      	str	r1, [r2, #0]
 80183aa:	6053      	str	r3, [r2, #4]
 80183ac:	e7da      	b.n	8018364 <_free_r+0x24>
 80183ae:	42a0      	cmp	r0, r4
 80183b0:	d902      	bls.n	80183b8 <_free_r+0x78>
 80183b2:	230c      	movs	r3, #12
 80183b4:	602b      	str	r3, [r5, #0]
 80183b6:	e7d5      	b.n	8018364 <_free_r+0x24>
 80183b8:	6820      	ldr	r0, [r4, #0]
 80183ba:	1821      	adds	r1, r4, r0
 80183bc:	428b      	cmp	r3, r1
 80183be:	d103      	bne.n	80183c8 <_free_r+0x88>
 80183c0:	6819      	ldr	r1, [r3, #0]
 80183c2:	685b      	ldr	r3, [r3, #4]
 80183c4:	1809      	adds	r1, r1, r0
 80183c6:	6021      	str	r1, [r4, #0]
 80183c8:	6063      	str	r3, [r4, #4]
 80183ca:	6054      	str	r4, [r2, #4]
 80183cc:	e7ca      	b.n	8018364 <_free_r+0x24>
 80183ce:	46c0      	nop			; (mov r8, r8)
 80183d0:	20003378 	.word	0x20003378

080183d4 <__ssputs_r>:
 80183d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80183d6:	b085      	sub	sp, #20
 80183d8:	9301      	str	r3, [sp, #4]
 80183da:	9203      	str	r2, [sp, #12]
 80183dc:	688e      	ldr	r6, [r1, #8]
 80183de:	9a01      	ldr	r2, [sp, #4]
 80183e0:	0007      	movs	r7, r0
 80183e2:	000c      	movs	r4, r1
 80183e4:	680b      	ldr	r3, [r1, #0]
 80183e6:	4296      	cmp	r6, r2
 80183e8:	d831      	bhi.n	801844e <__ssputs_r+0x7a>
 80183ea:	898a      	ldrh	r2, [r1, #12]
 80183ec:	2190      	movs	r1, #144	; 0x90
 80183ee:	00c9      	lsls	r1, r1, #3
 80183f0:	420a      	tst	r2, r1
 80183f2:	d029      	beq.n	8018448 <__ssputs_r+0x74>
 80183f4:	2003      	movs	r0, #3
 80183f6:	6921      	ldr	r1, [r4, #16]
 80183f8:	1a5b      	subs	r3, r3, r1
 80183fa:	9302      	str	r3, [sp, #8]
 80183fc:	6963      	ldr	r3, [r4, #20]
 80183fe:	4343      	muls	r3, r0
 8018400:	0fdd      	lsrs	r5, r3, #31
 8018402:	18ed      	adds	r5, r5, r3
 8018404:	9b01      	ldr	r3, [sp, #4]
 8018406:	9802      	ldr	r0, [sp, #8]
 8018408:	3301      	adds	r3, #1
 801840a:	181b      	adds	r3, r3, r0
 801840c:	106d      	asrs	r5, r5, #1
 801840e:	42ab      	cmp	r3, r5
 8018410:	d900      	bls.n	8018414 <__ssputs_r+0x40>
 8018412:	001d      	movs	r5, r3
 8018414:	0552      	lsls	r2, r2, #21
 8018416:	d529      	bpl.n	801846c <__ssputs_r+0x98>
 8018418:	0029      	movs	r1, r5
 801841a:	0038      	movs	r0, r7
 801841c:	f7ff fdec 	bl	8017ff8 <_malloc_r>
 8018420:	1e06      	subs	r6, r0, #0
 8018422:	d02d      	beq.n	8018480 <__ssputs_r+0xac>
 8018424:	9a02      	ldr	r2, [sp, #8]
 8018426:	6921      	ldr	r1, [r4, #16]
 8018428:	f7ff ff80 	bl	801832c <memcpy>
 801842c:	89a2      	ldrh	r2, [r4, #12]
 801842e:	4b19      	ldr	r3, [pc, #100]	; (8018494 <__ssputs_r+0xc0>)
 8018430:	401a      	ands	r2, r3
 8018432:	2380      	movs	r3, #128	; 0x80
 8018434:	4313      	orrs	r3, r2
 8018436:	81a3      	strh	r3, [r4, #12]
 8018438:	9b02      	ldr	r3, [sp, #8]
 801843a:	6126      	str	r6, [r4, #16]
 801843c:	18f6      	adds	r6, r6, r3
 801843e:	6026      	str	r6, [r4, #0]
 8018440:	6165      	str	r5, [r4, #20]
 8018442:	9e01      	ldr	r6, [sp, #4]
 8018444:	1aed      	subs	r5, r5, r3
 8018446:	60a5      	str	r5, [r4, #8]
 8018448:	9b01      	ldr	r3, [sp, #4]
 801844a:	429e      	cmp	r6, r3
 801844c:	d900      	bls.n	8018450 <__ssputs_r+0x7c>
 801844e:	9e01      	ldr	r6, [sp, #4]
 8018450:	0032      	movs	r2, r6
 8018452:	9903      	ldr	r1, [sp, #12]
 8018454:	6820      	ldr	r0, [r4, #0]
 8018456:	f000 fa9f 	bl	8018998 <memmove>
 801845a:	2000      	movs	r0, #0
 801845c:	68a3      	ldr	r3, [r4, #8]
 801845e:	1b9b      	subs	r3, r3, r6
 8018460:	60a3      	str	r3, [r4, #8]
 8018462:	6823      	ldr	r3, [r4, #0]
 8018464:	199b      	adds	r3, r3, r6
 8018466:	6023      	str	r3, [r4, #0]
 8018468:	b005      	add	sp, #20
 801846a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801846c:	002a      	movs	r2, r5
 801846e:	0038      	movs	r0, r7
 8018470:	f000 fab0 	bl	80189d4 <_realloc_r>
 8018474:	1e06      	subs	r6, r0, #0
 8018476:	d1df      	bne.n	8018438 <__ssputs_r+0x64>
 8018478:	0038      	movs	r0, r7
 801847a:	6921      	ldr	r1, [r4, #16]
 801847c:	f7ff ff60 	bl	8018340 <_free_r>
 8018480:	230c      	movs	r3, #12
 8018482:	2001      	movs	r0, #1
 8018484:	603b      	str	r3, [r7, #0]
 8018486:	89a2      	ldrh	r2, [r4, #12]
 8018488:	3334      	adds	r3, #52	; 0x34
 801848a:	4313      	orrs	r3, r2
 801848c:	81a3      	strh	r3, [r4, #12]
 801848e:	4240      	negs	r0, r0
 8018490:	e7ea      	b.n	8018468 <__ssputs_r+0x94>
 8018492:	46c0      	nop			; (mov r8, r8)
 8018494:	fffffb7f 	.word	0xfffffb7f

08018498 <_svfiprintf_r>:
 8018498:	b5f0      	push	{r4, r5, r6, r7, lr}
 801849a:	b0a1      	sub	sp, #132	; 0x84
 801849c:	9003      	str	r0, [sp, #12]
 801849e:	001d      	movs	r5, r3
 80184a0:	898b      	ldrh	r3, [r1, #12]
 80184a2:	000f      	movs	r7, r1
 80184a4:	0016      	movs	r6, r2
 80184a6:	061b      	lsls	r3, r3, #24
 80184a8:	d511      	bpl.n	80184ce <_svfiprintf_r+0x36>
 80184aa:	690b      	ldr	r3, [r1, #16]
 80184ac:	2b00      	cmp	r3, #0
 80184ae:	d10e      	bne.n	80184ce <_svfiprintf_r+0x36>
 80184b0:	2140      	movs	r1, #64	; 0x40
 80184b2:	f7ff fda1 	bl	8017ff8 <_malloc_r>
 80184b6:	6038      	str	r0, [r7, #0]
 80184b8:	6138      	str	r0, [r7, #16]
 80184ba:	2800      	cmp	r0, #0
 80184bc:	d105      	bne.n	80184ca <_svfiprintf_r+0x32>
 80184be:	230c      	movs	r3, #12
 80184c0:	9a03      	ldr	r2, [sp, #12]
 80184c2:	3801      	subs	r0, #1
 80184c4:	6013      	str	r3, [r2, #0]
 80184c6:	b021      	add	sp, #132	; 0x84
 80184c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80184ca:	2340      	movs	r3, #64	; 0x40
 80184cc:	617b      	str	r3, [r7, #20]
 80184ce:	2300      	movs	r3, #0
 80184d0:	ac08      	add	r4, sp, #32
 80184d2:	6163      	str	r3, [r4, #20]
 80184d4:	3320      	adds	r3, #32
 80184d6:	7663      	strb	r3, [r4, #25]
 80184d8:	3310      	adds	r3, #16
 80184da:	76a3      	strb	r3, [r4, #26]
 80184dc:	9507      	str	r5, [sp, #28]
 80184de:	0035      	movs	r5, r6
 80184e0:	782b      	ldrb	r3, [r5, #0]
 80184e2:	2b00      	cmp	r3, #0
 80184e4:	d001      	beq.n	80184ea <_svfiprintf_r+0x52>
 80184e6:	2b25      	cmp	r3, #37	; 0x25
 80184e8:	d148      	bne.n	801857c <_svfiprintf_r+0xe4>
 80184ea:	1bab      	subs	r3, r5, r6
 80184ec:	9305      	str	r3, [sp, #20]
 80184ee:	42b5      	cmp	r5, r6
 80184f0:	d00b      	beq.n	801850a <_svfiprintf_r+0x72>
 80184f2:	0032      	movs	r2, r6
 80184f4:	0039      	movs	r1, r7
 80184f6:	9803      	ldr	r0, [sp, #12]
 80184f8:	f7ff ff6c 	bl	80183d4 <__ssputs_r>
 80184fc:	3001      	adds	r0, #1
 80184fe:	d100      	bne.n	8018502 <_svfiprintf_r+0x6a>
 8018500:	e0af      	b.n	8018662 <_svfiprintf_r+0x1ca>
 8018502:	6963      	ldr	r3, [r4, #20]
 8018504:	9a05      	ldr	r2, [sp, #20]
 8018506:	189b      	adds	r3, r3, r2
 8018508:	6163      	str	r3, [r4, #20]
 801850a:	782b      	ldrb	r3, [r5, #0]
 801850c:	2b00      	cmp	r3, #0
 801850e:	d100      	bne.n	8018512 <_svfiprintf_r+0x7a>
 8018510:	e0a7      	b.n	8018662 <_svfiprintf_r+0x1ca>
 8018512:	2201      	movs	r2, #1
 8018514:	2300      	movs	r3, #0
 8018516:	4252      	negs	r2, r2
 8018518:	6062      	str	r2, [r4, #4]
 801851a:	a904      	add	r1, sp, #16
 801851c:	3254      	adds	r2, #84	; 0x54
 801851e:	1852      	adds	r2, r2, r1
 8018520:	1c6e      	adds	r6, r5, #1
 8018522:	6023      	str	r3, [r4, #0]
 8018524:	60e3      	str	r3, [r4, #12]
 8018526:	60a3      	str	r3, [r4, #8]
 8018528:	7013      	strb	r3, [r2, #0]
 801852a:	65a3      	str	r3, [r4, #88]	; 0x58
 801852c:	4b55      	ldr	r3, [pc, #340]	; (8018684 <_svfiprintf_r+0x1ec>)
 801852e:	2205      	movs	r2, #5
 8018530:	0018      	movs	r0, r3
 8018532:	7831      	ldrb	r1, [r6, #0]
 8018534:	9305      	str	r3, [sp, #20]
 8018536:	f000 fa42 	bl	80189be <memchr>
 801853a:	1c75      	adds	r5, r6, #1
 801853c:	2800      	cmp	r0, #0
 801853e:	d11f      	bne.n	8018580 <_svfiprintf_r+0xe8>
 8018540:	6822      	ldr	r2, [r4, #0]
 8018542:	06d3      	lsls	r3, r2, #27
 8018544:	d504      	bpl.n	8018550 <_svfiprintf_r+0xb8>
 8018546:	2353      	movs	r3, #83	; 0x53
 8018548:	a904      	add	r1, sp, #16
 801854a:	185b      	adds	r3, r3, r1
 801854c:	2120      	movs	r1, #32
 801854e:	7019      	strb	r1, [r3, #0]
 8018550:	0713      	lsls	r3, r2, #28
 8018552:	d504      	bpl.n	801855e <_svfiprintf_r+0xc6>
 8018554:	2353      	movs	r3, #83	; 0x53
 8018556:	a904      	add	r1, sp, #16
 8018558:	185b      	adds	r3, r3, r1
 801855a:	212b      	movs	r1, #43	; 0x2b
 801855c:	7019      	strb	r1, [r3, #0]
 801855e:	7833      	ldrb	r3, [r6, #0]
 8018560:	2b2a      	cmp	r3, #42	; 0x2a
 8018562:	d016      	beq.n	8018592 <_svfiprintf_r+0xfa>
 8018564:	0035      	movs	r5, r6
 8018566:	2100      	movs	r1, #0
 8018568:	200a      	movs	r0, #10
 801856a:	68e3      	ldr	r3, [r4, #12]
 801856c:	782a      	ldrb	r2, [r5, #0]
 801856e:	1c6e      	adds	r6, r5, #1
 8018570:	3a30      	subs	r2, #48	; 0x30
 8018572:	2a09      	cmp	r2, #9
 8018574:	d94e      	bls.n	8018614 <_svfiprintf_r+0x17c>
 8018576:	2900      	cmp	r1, #0
 8018578:	d111      	bne.n	801859e <_svfiprintf_r+0x106>
 801857a:	e017      	b.n	80185ac <_svfiprintf_r+0x114>
 801857c:	3501      	adds	r5, #1
 801857e:	e7af      	b.n	80184e0 <_svfiprintf_r+0x48>
 8018580:	9b05      	ldr	r3, [sp, #20]
 8018582:	6822      	ldr	r2, [r4, #0]
 8018584:	1ac0      	subs	r0, r0, r3
 8018586:	2301      	movs	r3, #1
 8018588:	4083      	lsls	r3, r0
 801858a:	4313      	orrs	r3, r2
 801858c:	002e      	movs	r6, r5
 801858e:	6023      	str	r3, [r4, #0]
 8018590:	e7cc      	b.n	801852c <_svfiprintf_r+0x94>
 8018592:	9b07      	ldr	r3, [sp, #28]
 8018594:	1d19      	adds	r1, r3, #4
 8018596:	681b      	ldr	r3, [r3, #0]
 8018598:	9107      	str	r1, [sp, #28]
 801859a:	2b00      	cmp	r3, #0
 801859c:	db01      	blt.n	80185a2 <_svfiprintf_r+0x10a>
 801859e:	930b      	str	r3, [sp, #44]	; 0x2c
 80185a0:	e004      	b.n	80185ac <_svfiprintf_r+0x114>
 80185a2:	425b      	negs	r3, r3
 80185a4:	60e3      	str	r3, [r4, #12]
 80185a6:	2302      	movs	r3, #2
 80185a8:	4313      	orrs	r3, r2
 80185aa:	6023      	str	r3, [r4, #0]
 80185ac:	782b      	ldrb	r3, [r5, #0]
 80185ae:	2b2e      	cmp	r3, #46	; 0x2e
 80185b0:	d10a      	bne.n	80185c8 <_svfiprintf_r+0x130>
 80185b2:	786b      	ldrb	r3, [r5, #1]
 80185b4:	2b2a      	cmp	r3, #42	; 0x2a
 80185b6:	d135      	bne.n	8018624 <_svfiprintf_r+0x18c>
 80185b8:	9b07      	ldr	r3, [sp, #28]
 80185ba:	3502      	adds	r5, #2
 80185bc:	1d1a      	adds	r2, r3, #4
 80185be:	681b      	ldr	r3, [r3, #0]
 80185c0:	9207      	str	r2, [sp, #28]
 80185c2:	2b00      	cmp	r3, #0
 80185c4:	db2b      	blt.n	801861e <_svfiprintf_r+0x186>
 80185c6:	9309      	str	r3, [sp, #36]	; 0x24
 80185c8:	4e2f      	ldr	r6, [pc, #188]	; (8018688 <_svfiprintf_r+0x1f0>)
 80185ca:	2203      	movs	r2, #3
 80185cc:	0030      	movs	r0, r6
 80185ce:	7829      	ldrb	r1, [r5, #0]
 80185d0:	f000 f9f5 	bl	80189be <memchr>
 80185d4:	2800      	cmp	r0, #0
 80185d6:	d006      	beq.n	80185e6 <_svfiprintf_r+0x14e>
 80185d8:	2340      	movs	r3, #64	; 0x40
 80185da:	1b80      	subs	r0, r0, r6
 80185dc:	4083      	lsls	r3, r0
 80185de:	6822      	ldr	r2, [r4, #0]
 80185e0:	3501      	adds	r5, #1
 80185e2:	4313      	orrs	r3, r2
 80185e4:	6023      	str	r3, [r4, #0]
 80185e6:	7829      	ldrb	r1, [r5, #0]
 80185e8:	2206      	movs	r2, #6
 80185ea:	4828      	ldr	r0, [pc, #160]	; (801868c <_svfiprintf_r+0x1f4>)
 80185ec:	1c6e      	adds	r6, r5, #1
 80185ee:	7621      	strb	r1, [r4, #24]
 80185f0:	f000 f9e5 	bl	80189be <memchr>
 80185f4:	2800      	cmp	r0, #0
 80185f6:	d03c      	beq.n	8018672 <_svfiprintf_r+0x1da>
 80185f8:	4b25      	ldr	r3, [pc, #148]	; (8018690 <_svfiprintf_r+0x1f8>)
 80185fa:	2b00      	cmp	r3, #0
 80185fc:	d125      	bne.n	801864a <_svfiprintf_r+0x1b2>
 80185fe:	2207      	movs	r2, #7
 8018600:	9b07      	ldr	r3, [sp, #28]
 8018602:	3307      	adds	r3, #7
 8018604:	4393      	bics	r3, r2
 8018606:	3308      	adds	r3, #8
 8018608:	9307      	str	r3, [sp, #28]
 801860a:	6963      	ldr	r3, [r4, #20]
 801860c:	9a04      	ldr	r2, [sp, #16]
 801860e:	189b      	adds	r3, r3, r2
 8018610:	6163      	str	r3, [r4, #20]
 8018612:	e764      	b.n	80184de <_svfiprintf_r+0x46>
 8018614:	4343      	muls	r3, r0
 8018616:	0035      	movs	r5, r6
 8018618:	2101      	movs	r1, #1
 801861a:	189b      	adds	r3, r3, r2
 801861c:	e7a6      	b.n	801856c <_svfiprintf_r+0xd4>
 801861e:	2301      	movs	r3, #1
 8018620:	425b      	negs	r3, r3
 8018622:	e7d0      	b.n	80185c6 <_svfiprintf_r+0x12e>
 8018624:	2300      	movs	r3, #0
 8018626:	200a      	movs	r0, #10
 8018628:	001a      	movs	r2, r3
 801862a:	3501      	adds	r5, #1
 801862c:	6063      	str	r3, [r4, #4]
 801862e:	7829      	ldrb	r1, [r5, #0]
 8018630:	1c6e      	adds	r6, r5, #1
 8018632:	3930      	subs	r1, #48	; 0x30
 8018634:	2909      	cmp	r1, #9
 8018636:	d903      	bls.n	8018640 <_svfiprintf_r+0x1a8>
 8018638:	2b00      	cmp	r3, #0
 801863a:	d0c5      	beq.n	80185c8 <_svfiprintf_r+0x130>
 801863c:	9209      	str	r2, [sp, #36]	; 0x24
 801863e:	e7c3      	b.n	80185c8 <_svfiprintf_r+0x130>
 8018640:	4342      	muls	r2, r0
 8018642:	0035      	movs	r5, r6
 8018644:	2301      	movs	r3, #1
 8018646:	1852      	adds	r2, r2, r1
 8018648:	e7f1      	b.n	801862e <_svfiprintf_r+0x196>
 801864a:	aa07      	add	r2, sp, #28
 801864c:	9200      	str	r2, [sp, #0]
 801864e:	0021      	movs	r1, r4
 8018650:	003a      	movs	r2, r7
 8018652:	4b10      	ldr	r3, [pc, #64]	; (8018694 <_svfiprintf_r+0x1fc>)
 8018654:	9803      	ldr	r0, [sp, #12]
 8018656:	e000      	b.n	801865a <_svfiprintf_r+0x1c2>
 8018658:	bf00      	nop
 801865a:	9004      	str	r0, [sp, #16]
 801865c:	9b04      	ldr	r3, [sp, #16]
 801865e:	3301      	adds	r3, #1
 8018660:	d1d3      	bne.n	801860a <_svfiprintf_r+0x172>
 8018662:	89bb      	ldrh	r3, [r7, #12]
 8018664:	980d      	ldr	r0, [sp, #52]	; 0x34
 8018666:	065b      	lsls	r3, r3, #25
 8018668:	d400      	bmi.n	801866c <_svfiprintf_r+0x1d4>
 801866a:	e72c      	b.n	80184c6 <_svfiprintf_r+0x2e>
 801866c:	2001      	movs	r0, #1
 801866e:	4240      	negs	r0, r0
 8018670:	e729      	b.n	80184c6 <_svfiprintf_r+0x2e>
 8018672:	aa07      	add	r2, sp, #28
 8018674:	9200      	str	r2, [sp, #0]
 8018676:	0021      	movs	r1, r4
 8018678:	003a      	movs	r2, r7
 801867a:	4b06      	ldr	r3, [pc, #24]	; (8018694 <_svfiprintf_r+0x1fc>)
 801867c:	9803      	ldr	r0, [sp, #12]
 801867e:	f000 f87b 	bl	8018778 <_printf_i>
 8018682:	e7ea      	b.n	801865a <_svfiprintf_r+0x1c2>
 8018684:	0801a1b7 	.word	0x0801a1b7
 8018688:	0801a1bd 	.word	0x0801a1bd
 801868c:	0801a1c1 	.word	0x0801a1c1
 8018690:	00000000 	.word	0x00000000
 8018694:	080183d5 	.word	0x080183d5

08018698 <_printf_common>:
 8018698:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801869a:	0016      	movs	r6, r2
 801869c:	9301      	str	r3, [sp, #4]
 801869e:	688a      	ldr	r2, [r1, #8]
 80186a0:	690b      	ldr	r3, [r1, #16]
 80186a2:	000c      	movs	r4, r1
 80186a4:	9000      	str	r0, [sp, #0]
 80186a6:	4293      	cmp	r3, r2
 80186a8:	da00      	bge.n	80186ac <_printf_common+0x14>
 80186aa:	0013      	movs	r3, r2
 80186ac:	0022      	movs	r2, r4
 80186ae:	6033      	str	r3, [r6, #0]
 80186b0:	3243      	adds	r2, #67	; 0x43
 80186b2:	7812      	ldrb	r2, [r2, #0]
 80186b4:	2a00      	cmp	r2, #0
 80186b6:	d001      	beq.n	80186bc <_printf_common+0x24>
 80186b8:	3301      	adds	r3, #1
 80186ba:	6033      	str	r3, [r6, #0]
 80186bc:	6823      	ldr	r3, [r4, #0]
 80186be:	069b      	lsls	r3, r3, #26
 80186c0:	d502      	bpl.n	80186c8 <_printf_common+0x30>
 80186c2:	6833      	ldr	r3, [r6, #0]
 80186c4:	3302      	adds	r3, #2
 80186c6:	6033      	str	r3, [r6, #0]
 80186c8:	6822      	ldr	r2, [r4, #0]
 80186ca:	2306      	movs	r3, #6
 80186cc:	0015      	movs	r5, r2
 80186ce:	401d      	ands	r5, r3
 80186d0:	421a      	tst	r2, r3
 80186d2:	d027      	beq.n	8018724 <_printf_common+0x8c>
 80186d4:	0023      	movs	r3, r4
 80186d6:	3343      	adds	r3, #67	; 0x43
 80186d8:	781b      	ldrb	r3, [r3, #0]
 80186da:	1e5a      	subs	r2, r3, #1
 80186dc:	4193      	sbcs	r3, r2
 80186de:	6822      	ldr	r2, [r4, #0]
 80186e0:	0692      	lsls	r2, r2, #26
 80186e2:	d430      	bmi.n	8018746 <_printf_common+0xae>
 80186e4:	0022      	movs	r2, r4
 80186e6:	9901      	ldr	r1, [sp, #4]
 80186e8:	9800      	ldr	r0, [sp, #0]
 80186ea:	9d08      	ldr	r5, [sp, #32]
 80186ec:	3243      	adds	r2, #67	; 0x43
 80186ee:	47a8      	blx	r5
 80186f0:	3001      	adds	r0, #1
 80186f2:	d025      	beq.n	8018740 <_printf_common+0xa8>
 80186f4:	2206      	movs	r2, #6
 80186f6:	6823      	ldr	r3, [r4, #0]
 80186f8:	2500      	movs	r5, #0
 80186fa:	4013      	ands	r3, r2
 80186fc:	2b04      	cmp	r3, #4
 80186fe:	d105      	bne.n	801870c <_printf_common+0x74>
 8018700:	6833      	ldr	r3, [r6, #0]
 8018702:	68e5      	ldr	r5, [r4, #12]
 8018704:	1aed      	subs	r5, r5, r3
 8018706:	43eb      	mvns	r3, r5
 8018708:	17db      	asrs	r3, r3, #31
 801870a:	401d      	ands	r5, r3
 801870c:	68a3      	ldr	r3, [r4, #8]
 801870e:	6922      	ldr	r2, [r4, #16]
 8018710:	4293      	cmp	r3, r2
 8018712:	dd01      	ble.n	8018718 <_printf_common+0x80>
 8018714:	1a9b      	subs	r3, r3, r2
 8018716:	18ed      	adds	r5, r5, r3
 8018718:	2600      	movs	r6, #0
 801871a:	42b5      	cmp	r5, r6
 801871c:	d120      	bne.n	8018760 <_printf_common+0xc8>
 801871e:	2000      	movs	r0, #0
 8018720:	e010      	b.n	8018744 <_printf_common+0xac>
 8018722:	3501      	adds	r5, #1
 8018724:	68e3      	ldr	r3, [r4, #12]
 8018726:	6832      	ldr	r2, [r6, #0]
 8018728:	1a9b      	subs	r3, r3, r2
 801872a:	42ab      	cmp	r3, r5
 801872c:	ddd2      	ble.n	80186d4 <_printf_common+0x3c>
 801872e:	0022      	movs	r2, r4
 8018730:	2301      	movs	r3, #1
 8018732:	9901      	ldr	r1, [sp, #4]
 8018734:	9800      	ldr	r0, [sp, #0]
 8018736:	9f08      	ldr	r7, [sp, #32]
 8018738:	3219      	adds	r2, #25
 801873a:	47b8      	blx	r7
 801873c:	3001      	adds	r0, #1
 801873e:	d1f0      	bne.n	8018722 <_printf_common+0x8a>
 8018740:	2001      	movs	r0, #1
 8018742:	4240      	negs	r0, r0
 8018744:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8018746:	2030      	movs	r0, #48	; 0x30
 8018748:	18e1      	adds	r1, r4, r3
 801874a:	3143      	adds	r1, #67	; 0x43
 801874c:	7008      	strb	r0, [r1, #0]
 801874e:	0021      	movs	r1, r4
 8018750:	1c5a      	adds	r2, r3, #1
 8018752:	3145      	adds	r1, #69	; 0x45
 8018754:	7809      	ldrb	r1, [r1, #0]
 8018756:	18a2      	adds	r2, r4, r2
 8018758:	3243      	adds	r2, #67	; 0x43
 801875a:	3302      	adds	r3, #2
 801875c:	7011      	strb	r1, [r2, #0]
 801875e:	e7c1      	b.n	80186e4 <_printf_common+0x4c>
 8018760:	0022      	movs	r2, r4
 8018762:	2301      	movs	r3, #1
 8018764:	9901      	ldr	r1, [sp, #4]
 8018766:	9800      	ldr	r0, [sp, #0]
 8018768:	9f08      	ldr	r7, [sp, #32]
 801876a:	321a      	adds	r2, #26
 801876c:	47b8      	blx	r7
 801876e:	3001      	adds	r0, #1
 8018770:	d0e6      	beq.n	8018740 <_printf_common+0xa8>
 8018772:	3601      	adds	r6, #1
 8018774:	e7d1      	b.n	801871a <_printf_common+0x82>
	...

08018778 <_printf_i>:
 8018778:	b5f0      	push	{r4, r5, r6, r7, lr}
 801877a:	b08b      	sub	sp, #44	; 0x2c
 801877c:	9206      	str	r2, [sp, #24]
 801877e:	000a      	movs	r2, r1
 8018780:	3243      	adds	r2, #67	; 0x43
 8018782:	9307      	str	r3, [sp, #28]
 8018784:	9005      	str	r0, [sp, #20]
 8018786:	9204      	str	r2, [sp, #16]
 8018788:	7e0a      	ldrb	r2, [r1, #24]
 801878a:	000c      	movs	r4, r1
 801878c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801878e:	2a78      	cmp	r2, #120	; 0x78
 8018790:	d809      	bhi.n	80187a6 <_printf_i+0x2e>
 8018792:	2a62      	cmp	r2, #98	; 0x62
 8018794:	d80b      	bhi.n	80187ae <_printf_i+0x36>
 8018796:	2a00      	cmp	r2, #0
 8018798:	d100      	bne.n	801879c <_printf_i+0x24>
 801879a:	e0be      	b.n	801891a <_printf_i+0x1a2>
 801879c:	497c      	ldr	r1, [pc, #496]	; (8018990 <_printf_i+0x218>)
 801879e:	9103      	str	r1, [sp, #12]
 80187a0:	2a58      	cmp	r2, #88	; 0x58
 80187a2:	d100      	bne.n	80187a6 <_printf_i+0x2e>
 80187a4:	e093      	b.n	80188ce <_printf_i+0x156>
 80187a6:	0026      	movs	r6, r4
 80187a8:	3642      	adds	r6, #66	; 0x42
 80187aa:	7032      	strb	r2, [r6, #0]
 80187ac:	e022      	b.n	80187f4 <_printf_i+0x7c>
 80187ae:	0010      	movs	r0, r2
 80187b0:	3863      	subs	r0, #99	; 0x63
 80187b2:	2815      	cmp	r0, #21
 80187b4:	d8f7      	bhi.n	80187a6 <_printf_i+0x2e>
 80187b6:	f7ed fd11 	bl	80061dc <__gnu_thumb1_case_shi>
 80187ba:	0016      	.short	0x0016
 80187bc:	fff6001f 	.word	0xfff6001f
 80187c0:	fff6fff6 	.word	0xfff6fff6
 80187c4:	001ffff6 	.word	0x001ffff6
 80187c8:	fff6fff6 	.word	0xfff6fff6
 80187cc:	fff6fff6 	.word	0xfff6fff6
 80187d0:	003600a3 	.word	0x003600a3
 80187d4:	fff60083 	.word	0xfff60083
 80187d8:	00b4fff6 	.word	0x00b4fff6
 80187dc:	0036fff6 	.word	0x0036fff6
 80187e0:	fff6fff6 	.word	0xfff6fff6
 80187e4:	0087      	.short	0x0087
 80187e6:	0026      	movs	r6, r4
 80187e8:	681a      	ldr	r2, [r3, #0]
 80187ea:	3642      	adds	r6, #66	; 0x42
 80187ec:	1d11      	adds	r1, r2, #4
 80187ee:	6019      	str	r1, [r3, #0]
 80187f0:	6813      	ldr	r3, [r2, #0]
 80187f2:	7033      	strb	r3, [r6, #0]
 80187f4:	2301      	movs	r3, #1
 80187f6:	e0a2      	b.n	801893e <_printf_i+0x1c6>
 80187f8:	6818      	ldr	r0, [r3, #0]
 80187fa:	6809      	ldr	r1, [r1, #0]
 80187fc:	1d02      	adds	r2, r0, #4
 80187fe:	060d      	lsls	r5, r1, #24
 8018800:	d50b      	bpl.n	801881a <_printf_i+0xa2>
 8018802:	6805      	ldr	r5, [r0, #0]
 8018804:	601a      	str	r2, [r3, #0]
 8018806:	2d00      	cmp	r5, #0
 8018808:	da03      	bge.n	8018812 <_printf_i+0x9a>
 801880a:	232d      	movs	r3, #45	; 0x2d
 801880c:	9a04      	ldr	r2, [sp, #16]
 801880e:	426d      	negs	r5, r5
 8018810:	7013      	strb	r3, [r2, #0]
 8018812:	4b5f      	ldr	r3, [pc, #380]	; (8018990 <_printf_i+0x218>)
 8018814:	270a      	movs	r7, #10
 8018816:	9303      	str	r3, [sp, #12]
 8018818:	e01b      	b.n	8018852 <_printf_i+0xda>
 801881a:	6805      	ldr	r5, [r0, #0]
 801881c:	601a      	str	r2, [r3, #0]
 801881e:	0649      	lsls	r1, r1, #25
 8018820:	d5f1      	bpl.n	8018806 <_printf_i+0x8e>
 8018822:	b22d      	sxth	r5, r5
 8018824:	e7ef      	b.n	8018806 <_printf_i+0x8e>
 8018826:	680d      	ldr	r5, [r1, #0]
 8018828:	6819      	ldr	r1, [r3, #0]
 801882a:	1d08      	adds	r0, r1, #4
 801882c:	6018      	str	r0, [r3, #0]
 801882e:	062e      	lsls	r6, r5, #24
 8018830:	d501      	bpl.n	8018836 <_printf_i+0xbe>
 8018832:	680d      	ldr	r5, [r1, #0]
 8018834:	e003      	b.n	801883e <_printf_i+0xc6>
 8018836:	066d      	lsls	r5, r5, #25
 8018838:	d5fb      	bpl.n	8018832 <_printf_i+0xba>
 801883a:	680d      	ldr	r5, [r1, #0]
 801883c:	b2ad      	uxth	r5, r5
 801883e:	4b54      	ldr	r3, [pc, #336]	; (8018990 <_printf_i+0x218>)
 8018840:	2708      	movs	r7, #8
 8018842:	9303      	str	r3, [sp, #12]
 8018844:	2a6f      	cmp	r2, #111	; 0x6f
 8018846:	d000      	beq.n	801884a <_printf_i+0xd2>
 8018848:	3702      	adds	r7, #2
 801884a:	0023      	movs	r3, r4
 801884c:	2200      	movs	r2, #0
 801884e:	3343      	adds	r3, #67	; 0x43
 8018850:	701a      	strb	r2, [r3, #0]
 8018852:	6863      	ldr	r3, [r4, #4]
 8018854:	60a3      	str	r3, [r4, #8]
 8018856:	2b00      	cmp	r3, #0
 8018858:	db03      	blt.n	8018862 <_printf_i+0xea>
 801885a:	2104      	movs	r1, #4
 801885c:	6822      	ldr	r2, [r4, #0]
 801885e:	438a      	bics	r2, r1
 8018860:	6022      	str	r2, [r4, #0]
 8018862:	2d00      	cmp	r5, #0
 8018864:	d102      	bne.n	801886c <_printf_i+0xf4>
 8018866:	9e04      	ldr	r6, [sp, #16]
 8018868:	2b00      	cmp	r3, #0
 801886a:	d00c      	beq.n	8018886 <_printf_i+0x10e>
 801886c:	9e04      	ldr	r6, [sp, #16]
 801886e:	0028      	movs	r0, r5
 8018870:	0039      	movs	r1, r7
 8018872:	f7ed fd43 	bl	80062fc <__aeabi_uidivmod>
 8018876:	9b03      	ldr	r3, [sp, #12]
 8018878:	3e01      	subs	r6, #1
 801887a:	5c5b      	ldrb	r3, [r3, r1]
 801887c:	7033      	strb	r3, [r6, #0]
 801887e:	002b      	movs	r3, r5
 8018880:	0005      	movs	r5, r0
 8018882:	429f      	cmp	r7, r3
 8018884:	d9f3      	bls.n	801886e <_printf_i+0xf6>
 8018886:	2f08      	cmp	r7, #8
 8018888:	d109      	bne.n	801889e <_printf_i+0x126>
 801888a:	6823      	ldr	r3, [r4, #0]
 801888c:	07db      	lsls	r3, r3, #31
 801888e:	d506      	bpl.n	801889e <_printf_i+0x126>
 8018890:	6862      	ldr	r2, [r4, #4]
 8018892:	6923      	ldr	r3, [r4, #16]
 8018894:	429a      	cmp	r2, r3
 8018896:	dc02      	bgt.n	801889e <_printf_i+0x126>
 8018898:	2330      	movs	r3, #48	; 0x30
 801889a:	3e01      	subs	r6, #1
 801889c:	7033      	strb	r3, [r6, #0]
 801889e:	9b04      	ldr	r3, [sp, #16]
 80188a0:	1b9b      	subs	r3, r3, r6
 80188a2:	6123      	str	r3, [r4, #16]
 80188a4:	9b07      	ldr	r3, [sp, #28]
 80188a6:	0021      	movs	r1, r4
 80188a8:	9300      	str	r3, [sp, #0]
 80188aa:	9805      	ldr	r0, [sp, #20]
 80188ac:	9b06      	ldr	r3, [sp, #24]
 80188ae:	aa09      	add	r2, sp, #36	; 0x24
 80188b0:	f7ff fef2 	bl	8018698 <_printf_common>
 80188b4:	3001      	adds	r0, #1
 80188b6:	d147      	bne.n	8018948 <_printf_i+0x1d0>
 80188b8:	2001      	movs	r0, #1
 80188ba:	4240      	negs	r0, r0
 80188bc:	b00b      	add	sp, #44	; 0x2c
 80188be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80188c0:	2220      	movs	r2, #32
 80188c2:	6809      	ldr	r1, [r1, #0]
 80188c4:	430a      	orrs	r2, r1
 80188c6:	6022      	str	r2, [r4, #0]
 80188c8:	2278      	movs	r2, #120	; 0x78
 80188ca:	4932      	ldr	r1, [pc, #200]	; (8018994 <_printf_i+0x21c>)
 80188cc:	9103      	str	r1, [sp, #12]
 80188ce:	0021      	movs	r1, r4
 80188d0:	3145      	adds	r1, #69	; 0x45
 80188d2:	700a      	strb	r2, [r1, #0]
 80188d4:	6819      	ldr	r1, [r3, #0]
 80188d6:	6822      	ldr	r2, [r4, #0]
 80188d8:	c920      	ldmia	r1!, {r5}
 80188da:	0610      	lsls	r0, r2, #24
 80188dc:	d402      	bmi.n	80188e4 <_printf_i+0x16c>
 80188de:	0650      	lsls	r0, r2, #25
 80188e0:	d500      	bpl.n	80188e4 <_printf_i+0x16c>
 80188e2:	b2ad      	uxth	r5, r5
 80188e4:	6019      	str	r1, [r3, #0]
 80188e6:	07d3      	lsls	r3, r2, #31
 80188e8:	d502      	bpl.n	80188f0 <_printf_i+0x178>
 80188ea:	2320      	movs	r3, #32
 80188ec:	4313      	orrs	r3, r2
 80188ee:	6023      	str	r3, [r4, #0]
 80188f0:	2710      	movs	r7, #16
 80188f2:	2d00      	cmp	r5, #0
 80188f4:	d1a9      	bne.n	801884a <_printf_i+0xd2>
 80188f6:	2220      	movs	r2, #32
 80188f8:	6823      	ldr	r3, [r4, #0]
 80188fa:	4393      	bics	r3, r2
 80188fc:	6023      	str	r3, [r4, #0]
 80188fe:	e7a4      	b.n	801884a <_printf_i+0xd2>
 8018900:	681a      	ldr	r2, [r3, #0]
 8018902:	680d      	ldr	r5, [r1, #0]
 8018904:	1d10      	adds	r0, r2, #4
 8018906:	6949      	ldr	r1, [r1, #20]
 8018908:	6018      	str	r0, [r3, #0]
 801890a:	6813      	ldr	r3, [r2, #0]
 801890c:	062e      	lsls	r6, r5, #24
 801890e:	d501      	bpl.n	8018914 <_printf_i+0x19c>
 8018910:	6019      	str	r1, [r3, #0]
 8018912:	e002      	b.n	801891a <_printf_i+0x1a2>
 8018914:	066d      	lsls	r5, r5, #25
 8018916:	d5fb      	bpl.n	8018910 <_printf_i+0x198>
 8018918:	8019      	strh	r1, [r3, #0]
 801891a:	2300      	movs	r3, #0
 801891c:	9e04      	ldr	r6, [sp, #16]
 801891e:	6123      	str	r3, [r4, #16]
 8018920:	e7c0      	b.n	80188a4 <_printf_i+0x12c>
 8018922:	681a      	ldr	r2, [r3, #0]
 8018924:	1d11      	adds	r1, r2, #4
 8018926:	6019      	str	r1, [r3, #0]
 8018928:	6816      	ldr	r6, [r2, #0]
 801892a:	2100      	movs	r1, #0
 801892c:	0030      	movs	r0, r6
 801892e:	6862      	ldr	r2, [r4, #4]
 8018930:	f000 f845 	bl	80189be <memchr>
 8018934:	2800      	cmp	r0, #0
 8018936:	d001      	beq.n	801893c <_printf_i+0x1c4>
 8018938:	1b80      	subs	r0, r0, r6
 801893a:	6060      	str	r0, [r4, #4]
 801893c:	6863      	ldr	r3, [r4, #4]
 801893e:	6123      	str	r3, [r4, #16]
 8018940:	2300      	movs	r3, #0
 8018942:	9a04      	ldr	r2, [sp, #16]
 8018944:	7013      	strb	r3, [r2, #0]
 8018946:	e7ad      	b.n	80188a4 <_printf_i+0x12c>
 8018948:	0032      	movs	r2, r6
 801894a:	6923      	ldr	r3, [r4, #16]
 801894c:	9906      	ldr	r1, [sp, #24]
 801894e:	9805      	ldr	r0, [sp, #20]
 8018950:	9d07      	ldr	r5, [sp, #28]
 8018952:	47a8      	blx	r5
 8018954:	3001      	adds	r0, #1
 8018956:	d0af      	beq.n	80188b8 <_printf_i+0x140>
 8018958:	6823      	ldr	r3, [r4, #0]
 801895a:	079b      	lsls	r3, r3, #30
 801895c:	d415      	bmi.n	801898a <_printf_i+0x212>
 801895e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018960:	68e0      	ldr	r0, [r4, #12]
 8018962:	4298      	cmp	r0, r3
 8018964:	daaa      	bge.n	80188bc <_printf_i+0x144>
 8018966:	0018      	movs	r0, r3
 8018968:	e7a8      	b.n	80188bc <_printf_i+0x144>
 801896a:	0022      	movs	r2, r4
 801896c:	2301      	movs	r3, #1
 801896e:	9906      	ldr	r1, [sp, #24]
 8018970:	9805      	ldr	r0, [sp, #20]
 8018972:	9e07      	ldr	r6, [sp, #28]
 8018974:	3219      	adds	r2, #25
 8018976:	47b0      	blx	r6
 8018978:	3001      	adds	r0, #1
 801897a:	d09d      	beq.n	80188b8 <_printf_i+0x140>
 801897c:	3501      	adds	r5, #1
 801897e:	68e3      	ldr	r3, [r4, #12]
 8018980:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018982:	1a9b      	subs	r3, r3, r2
 8018984:	42ab      	cmp	r3, r5
 8018986:	dcf0      	bgt.n	801896a <_printf_i+0x1f2>
 8018988:	e7e9      	b.n	801895e <_printf_i+0x1e6>
 801898a:	2500      	movs	r5, #0
 801898c:	e7f7      	b.n	801897e <_printf_i+0x206>
 801898e:	46c0      	nop			; (mov r8, r8)
 8018990:	0801a1c8 	.word	0x0801a1c8
 8018994:	0801a1d9 	.word	0x0801a1d9

08018998 <memmove>:
 8018998:	b510      	push	{r4, lr}
 801899a:	4288      	cmp	r0, r1
 801899c:	d902      	bls.n	80189a4 <memmove+0xc>
 801899e:	188b      	adds	r3, r1, r2
 80189a0:	4298      	cmp	r0, r3
 80189a2:	d303      	bcc.n	80189ac <memmove+0x14>
 80189a4:	2300      	movs	r3, #0
 80189a6:	e007      	b.n	80189b8 <memmove+0x20>
 80189a8:	5c8b      	ldrb	r3, [r1, r2]
 80189aa:	5483      	strb	r3, [r0, r2]
 80189ac:	3a01      	subs	r2, #1
 80189ae:	d2fb      	bcs.n	80189a8 <memmove+0x10>
 80189b0:	bd10      	pop	{r4, pc}
 80189b2:	5ccc      	ldrb	r4, [r1, r3]
 80189b4:	54c4      	strb	r4, [r0, r3]
 80189b6:	3301      	adds	r3, #1
 80189b8:	429a      	cmp	r2, r3
 80189ba:	d1fa      	bne.n	80189b2 <memmove+0x1a>
 80189bc:	e7f8      	b.n	80189b0 <memmove+0x18>

080189be <memchr>:
 80189be:	b2c9      	uxtb	r1, r1
 80189c0:	1882      	adds	r2, r0, r2
 80189c2:	4290      	cmp	r0, r2
 80189c4:	d101      	bne.n	80189ca <memchr+0xc>
 80189c6:	2000      	movs	r0, #0
 80189c8:	4770      	bx	lr
 80189ca:	7803      	ldrb	r3, [r0, #0]
 80189cc:	428b      	cmp	r3, r1
 80189ce:	d0fb      	beq.n	80189c8 <memchr+0xa>
 80189d0:	3001      	adds	r0, #1
 80189d2:	e7f6      	b.n	80189c2 <memchr+0x4>

080189d4 <_realloc_r>:
 80189d4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80189d6:	0007      	movs	r7, r0
 80189d8:	000e      	movs	r6, r1
 80189da:	0014      	movs	r4, r2
 80189dc:	2900      	cmp	r1, #0
 80189de:	d105      	bne.n	80189ec <_realloc_r+0x18>
 80189e0:	0011      	movs	r1, r2
 80189e2:	f7ff fb09 	bl	8017ff8 <_malloc_r>
 80189e6:	0005      	movs	r5, r0
 80189e8:	0028      	movs	r0, r5
 80189ea:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80189ec:	2a00      	cmp	r2, #0
 80189ee:	d103      	bne.n	80189f8 <_realloc_r+0x24>
 80189f0:	f7ff fca6 	bl	8018340 <_free_r>
 80189f4:	0025      	movs	r5, r4
 80189f6:	e7f7      	b.n	80189e8 <_realloc_r+0x14>
 80189f8:	f000 f81b 	bl	8018a32 <_malloc_usable_size_r>
 80189fc:	9001      	str	r0, [sp, #4]
 80189fe:	4284      	cmp	r4, r0
 8018a00:	d803      	bhi.n	8018a0a <_realloc_r+0x36>
 8018a02:	0035      	movs	r5, r6
 8018a04:	0843      	lsrs	r3, r0, #1
 8018a06:	42a3      	cmp	r3, r4
 8018a08:	d3ee      	bcc.n	80189e8 <_realloc_r+0x14>
 8018a0a:	0021      	movs	r1, r4
 8018a0c:	0038      	movs	r0, r7
 8018a0e:	f7ff faf3 	bl	8017ff8 <_malloc_r>
 8018a12:	1e05      	subs	r5, r0, #0
 8018a14:	d0e8      	beq.n	80189e8 <_realloc_r+0x14>
 8018a16:	9b01      	ldr	r3, [sp, #4]
 8018a18:	0022      	movs	r2, r4
 8018a1a:	429c      	cmp	r4, r3
 8018a1c:	d900      	bls.n	8018a20 <_realloc_r+0x4c>
 8018a1e:	001a      	movs	r2, r3
 8018a20:	0031      	movs	r1, r6
 8018a22:	0028      	movs	r0, r5
 8018a24:	f7ff fc82 	bl	801832c <memcpy>
 8018a28:	0031      	movs	r1, r6
 8018a2a:	0038      	movs	r0, r7
 8018a2c:	f7ff fc88 	bl	8018340 <_free_r>
 8018a30:	e7da      	b.n	80189e8 <_realloc_r+0x14>

08018a32 <_malloc_usable_size_r>:
 8018a32:	1f0b      	subs	r3, r1, #4
 8018a34:	681b      	ldr	r3, [r3, #0]
 8018a36:	1f18      	subs	r0, r3, #4
 8018a38:	2b00      	cmp	r3, #0
 8018a3a:	da01      	bge.n	8018a40 <_malloc_usable_size_r+0xe>
 8018a3c:	580b      	ldr	r3, [r1, r0]
 8018a3e:	18c0      	adds	r0, r0, r3
 8018a40:	4770      	bx	lr
	...

08018a44 <_init>:
 8018a44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018a46:	46c0      	nop			; (mov r8, r8)
 8018a48:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8018a4a:	bc08      	pop	{r3}
 8018a4c:	469e      	mov	lr, r3
 8018a4e:	4770      	bx	lr

08018a50 <_fini>:
 8018a50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018a52:	46c0      	nop			; (mov r8, r8)
 8018a54:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8018a56:	bc08      	pop	{r3}
 8018a58:	469e      	mov	lr, r3
 8018a5a:	4770      	bx	lr
 8018a5c:	0000      	movs	r0, r0
	...

08018a60 <__FLASH_Program_Fast_veneer>:
 8018a60:	b401      	push	{r0}
 8018a62:	4802      	ldr	r0, [pc, #8]	; (8018a6c <__FLASH_Program_Fast_veneer+0xc>)
 8018a64:	4684      	mov	ip, r0
 8018a66:	bc01      	pop	{r0}
 8018a68:	4760      	bx	ip
 8018a6a:	bf00      	nop
 8018a6c:	2000010d 	.word	0x2000010d

Disassembly of section .data:

20000000 <USBPD_Trace>:
20000000:	0800150f                                ....

20000004 <SystemCoreClock>:
20000004:	00f42400                                .$..

20000008 <uwTickPrio>:
20000008:	00000004                                ....

2000000c <uwTickFreq>:
2000000c:	00000001                                ....

20000010 <uxCriticalNesting>:
20000010:	aaaaaaaa                                ....

20000014 <DPM_Settings>:
20000014:	00000001 00000002 00000000              ............

20000020 <DPM_ID_Settings>:
20000020:	f0000003 00020483                       ........

20000028 <DPM_USER_Settings>:
20000028:	0000000c 00000000 00000000 00000000     ................
	...

2000009c <USBPD_NbPDO>:
2000009c:	00000003                                ....

200000a0 <PORT0_PDO_ListSNK>:
200000a0:	00019096 0002d096 0004b096 00000000     ................
	...

200000bc <_impure_data>:
200000bc:	00000000 20003380 200033e8 20003450     .....3. .3. P4. 
	...

20000108 <_impure_ptr>:
20000108:	200000bc                                ... 

2000010c <FLASH_Program_Fast>:
2000010c:	b580      	push	{r7, lr}
2000010e:	b088      	sub	sp, #32
20000110:	af00      	add	r7, sp, #0
20000112:	6078      	str	r0, [r7, #4]
20000114:	6039      	str	r1, [r7, #0]
20000116:	231f      	movs	r3, #31
20000118:	18fb      	adds	r3, r7, r3
2000011a:	2200      	movs	r2, #0
2000011c:	701a      	strb	r2, [r3, #0]
2000011e:	687b      	ldr	r3, [r7, #4]
20000120:	61bb      	str	r3, [r7, #24]
20000122:	683b      	ldr	r3, [r7, #0]
20000124:	617b      	str	r3, [r7, #20]
20000126:	4b1a      	ldr	r3, [pc, #104]	; (20000190 <FLASH_Program_Fast+0x84>)
20000128:	695a      	ldr	r2, [r3, #20]
2000012a:	4b19      	ldr	r3, [pc, #100]	; (20000190 <FLASH_Program_Fast+0x84>)
2000012c:	2180      	movs	r1, #128	; 0x80
2000012e:	02c9      	lsls	r1, r1, #11
20000130:	430a      	orrs	r2, r1
20000132:	615a      	str	r2, [r3, #20]
20000134:	f3ef 8310 	mrs	r3, PRIMASK
20000138:	60fb      	str	r3, [r7, #12]
2000013a:	68fb      	ldr	r3, [r7, #12]
2000013c:	613b      	str	r3, [r7, #16]
2000013e:	b672      	cpsid	i
20000140:	46c0      	nop			; (mov r8, r8)
20000142:	e00f      	b.n	20000164 <FLASH_Program_Fast+0x58>
20000144:	697a      	ldr	r2, [r7, #20]
20000146:	69bb      	ldr	r3, [r7, #24]
20000148:	6812      	ldr	r2, [r2, #0]
2000014a:	601a      	str	r2, [r3, #0]
2000014c:	697b      	ldr	r3, [r7, #20]
2000014e:	3304      	adds	r3, #4
20000150:	617b      	str	r3, [r7, #20]
20000152:	69bb      	ldr	r3, [r7, #24]
20000154:	3304      	adds	r3, #4
20000156:	61bb      	str	r3, [r7, #24]
20000158:	211f      	movs	r1, #31
2000015a:	187b      	adds	r3, r7, r1
2000015c:	781a      	ldrb	r2, [r3, #0]
2000015e:	187b      	adds	r3, r7, r1
20000160:	3201      	adds	r2, #1
20000162:	701a      	strb	r2, [r3, #0]
20000164:	231f      	movs	r3, #31
20000166:	18fb      	adds	r3, r7, r3
20000168:	781b      	ldrb	r3, [r3, #0]
2000016a:	2b3f      	cmp	r3, #63	; 0x3f
2000016c:	d9ea      	bls.n	20000144 <FLASH_Program_Fast+0x38>
2000016e:	46c0      	nop			; (mov r8, r8)
20000170:	4b07      	ldr	r3, [pc, #28]	; (20000190 <FLASH_Program_Fast+0x84>)
20000172:	691a      	ldr	r2, [r3, #16]
20000174:	23c0      	movs	r3, #192	; 0xc0
20000176:	029b      	lsls	r3, r3, #10
20000178:	4013      	ands	r3, r2
2000017a:	d1f9      	bne.n	20000170 <FLASH_Program_Fast+0x64>
2000017c:	693b      	ldr	r3, [r7, #16]
2000017e:	60bb      	str	r3, [r7, #8]
20000180:	68bb      	ldr	r3, [r7, #8]
20000182:	f383 8810 	msr	PRIMASK, r3
20000186:	46c0      	nop			; (mov r8, r8)
20000188:	46c0      	nop			; (mov r8, r8)
2000018a:	46bd      	mov	sp, r7
2000018c:	b008      	add	sp, #32
2000018e:	bd80      	pop	{r7, pc}
20000190:	40022000 	.word	0x40022000
